xsearch semantic search engine xml sara cohen jonathan yaron yehoshua sagiv xsearch semantic search engine xml 
xsearch simple query language suitable naive user 
returns semantically related document fragments satisfy user query 
query answers ranked extended information retrieval techniques generated order similar ranking 
advanced indexing techniques developed facilitate efficient implementation xsearch 
performance different techniques recall precision measured experimentally 
experiments indicate xsearch efficient scalable ranks quality results highly 
increasingly popular publish data web form xml documents 
current search engines indispensable tool finding html documents main drawbacks comes searching xml documents 
possible pose queries explicitly refer meta data xml tags 
difficult impossible formulate search query incorporates semantic knowledge clear precise way 
second drawback search engines return links documents specific fragments thereof 
problematic large xml documents xml dblp may contain permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference berlin germany school computer science engineering hebrew university jerusalem jerusalem israel sagiv cs huji ac il thousands elements storing pieces information necessarily related 
example author related titles papers wrote titles papers 
search engine simply matches search terms documents may return documents answer user query 
occurs distinct search terms matched unrelated parts xml document illustrated example 
example suppose user trying find papers vianu topic logical databases 
formulated search query vianu logical databases 
consider xml document fragment excerpt xml version dblp 
proceedings inproceedings author moshe vardi author title querying logical databases title inproceedings inproceedings author victor vianu author title web odyssey codd xml title inproceedings proceedings standard search engine regard document appropriate response mentions search terms 
easily see search terms appear appear context 
document ideal response user query 
problem arises document treated integral unit 
xml document usually useful answer granularity search refined 
returning entire documents xml search engine return fragments xml documents 
query language xml xquery extract data xml documents 
query language alternative xml search engine reasons 
syntax xquery far complicated syntax standard search query 
appropriate naive user 
second extensive knowledge document structure required order correctly formulate query 
queries formulated document basis 
xquery lacks mechanism ranking answers essential feature answers querying large xml documents 
attempts extend xquery languages information retrieval techniques :10.1.1.11.8097
languages suffer complex query syntax 
approach add capabilities meta data querying search engines 
answers search engines required consist semantically related pieces information suffer problem illustrated example 
investigated conditions different elements xml document semantically related 
show theoretical results efficiently combined information retrieval techniques yield xsearch search engine xml 
design implementation xsearch involved challenges 
developed syntax search queries suitable naive user facilitates fine granularity search 
syntax allows require user specify keywords related tags fact search query may consist keywords 
second theoretical results adapted xsearch returns answers document fragments semantically related keywords tags specified query 
third combined notion semantic relationship traditional information retrieval techniques guarantee answers merely semantically related fragments fragments highly relevant keywords query 
fourth developed suitable ranking mechanism takes account degree semantic relationship relevance keywords 
fifth developed index structures evaluation algorithms allow system deal efficiently large documents containing thousands kilobytes information generate answers order similar ranking avoiding overhead sorting answers returning 
sixth implementation xsearch extensible sense easily accommodate different types semantic relationships 
section describes syntax search queries 
section presents semantics queries theory developed 
section show rank answers extending techniques 
section xsearch system implementation 
section experimental results 
section considers related concludes 
query syntax query language standard search engine simply list keywords 
search engines keyword optionally prepended plus sign 
keywords plus sign appear satisfying document keywords plus sign may may appear satisfying document appearance keywords desirable 
query language xsearch simple extension language described 
addition specifying keywords allow user specify labels keyword label combinations may appear satisfying document 
formally search term form label keyword 
search term may plus sign prepended case required term 
optional term 
notation required optional terms 
query form tm sequence required optional search terms 
refer query clear context 
query semantics section presents semantics queries 
order satisfy query required terms satisfied 
addition elements satisfying meaningfully related 
difficult determine set elements meaningfully related 
assume relationship determines nodes related 
show extend arbitrary sets nodes 
give natural example relationship call interconnection 
working system interconnection relationship 
possible different relationship little impact system efficiency 
satisfaction search term model xml documents trees standard fashion 
interior node associated label leaf node associated sequence keywords 
keyword sequence associated say contains tree represents small portion xml document sigmod record 
xml modeled graph tree id idref xlink links consideration 
principle possible system xml modeled graph 
simplify consider xml trees 
volume title acid author position number articles stirling authors author position issues author refer tree tsr 
interior nodes numbered allow easy 
interior node tree say satisfies search term labeled descendent contains keyword say satisfies search term labeled say satisfies search term leaf child contains keyword example tree tsr node number satisfies node number satisfies authors 
node satisfy position position 
meaningfully related sets nodes tree binary reflexive symmetric relationship nodes assume contains pairs nodes meaningfully related 
different ways extend arbitrary sets nodes 
say set nodes pairs related denoted pair nodes 
intuitively states set nodes meaningfully related pair nodes set meaningfully related 
say star related denoted node pair nodes call star center 
intuitively states nodes set meaningfully related nodes meaningfully related node set 
depending structure documents volume position number title views xml articles part sigmod record document tree 
title editors note author position abiteboul corpus pairs relationship star relationship may appropriate 
discussed detail section 
query answers tm query 
say sequence nm nodes null values allpairs answer nodes pairs related 
ni null value ti required term 
ni satisfies ti null value 
similarly star answer nodes star related 
ans denote set pairs answers query tree ans denote set star answers difficult see trees relationships queries ans ans 
transitive relationship ans ans 
query answers null values sequences 
interested answers maximal information 
query pairs answers star answers 
say answer subsumes equal non null values intuitively subsumes contains information 
say answer maximal answer subsumes equal denote set maximal answers 
interconnection relationship relation determine pair nodes meaningfully related 
relation intuitive gave appropriate results working system 
tree nodes shortest undirected path consists paths lowest common ancestor 
denote tree consisting paths intuitively tree describes relationship nodes 
example tsr depicted tree consists nodes 
start giving intuitive understanding relationships document tree 
may view node tree representing entity world 
different nodes label correspond different entities type 
na ancestor may understand belongs entity na represents 
suppose nodes distinct ancestors na respectively na label 
suppose ancestor na ancestor may conclude meaningfully related belong different entities type 
note na relationship tree ancestors imply unrelated 
demonstrate extend intuition examples 
consider nodes tsr 
relationship tree contain nodes label 
nodes related 
nodes related relationship tree contains different nodes label 
reflects intuition volume issue number node volume issue number node 
consider nodes tsr 
node belongs node numbered 
different author node 
may conclude position node belongs node related node 
final example consider nodes 
nodes share label 
ancestors belong entities 
may conclude nodes meaningfully related 
fact nodes represent different authors related virtue belonging article 
formalize idea 
nodes say interconnected conditions holds 
contain distinct nodes label 
distinct nodes label ri denote interconnection relationship 
sequel interconnection relationship nodes considered 
usually specify explicitly relationship considered 
complexity combined complexity document query considered part input 
interest queries may quite large 
input output complexity analyze complexity problem function input query document output 
complexity measure useful queries query results large 
complexity results 
theorem evaluation complexity tree query 
determining ri npcomplete combined complexity 
contains optional terms ri computed polynomial time input output complexity 
set ri computed polynomial time input output complexity 
examples query semantics example consider query defined title author 
query finds pairs titles authors belonging article 
tuples title non null returned 
pairs star semantics answers created tsr 
consider portion dblp document 
answers document consist 
observe document differs structure tsr correct pairs documents 
example consider query looks volumes authors name authors published volume author author 
set maximal pairs answers tsr contains answers authors appear node 
set maximal star answers tsr contains authors appear issue different articles 
star answers require looser inproceedings pages conf sigmod author raman author hellerstein relationship nodes answer viewed approximation pairs answers 
currently sigmod record author elements contain attribute name author simply data 
author elements modeled slightly differently name position subelements author name stirling name position position author observe retrieve answers 
volume name name retrieve answer pairs semantics non null element optional component 
star semantics similar answers retrieved 
example example user wished find papers vianu topic logical databases 
absence knowledge tags document query vianu logical databases purpose 
applying document example answer empty pairs star semantics 
get empty result title node matches logical databases interconnected author node matches vianu 
conforms intuition meaning 
ranking answers previous section semantics query answers 
semantics combined ideas computing projection document clear cut semantics heuristic defining relationships nodes 
section extend semantics extended traditional information retrieval techniques rank query answers 
weight keyword label compute weight keyword called term leaf node nl variation year title booktitle sigmod partial results online query processing part dblp document tree 
standard tfidf term frequency inverse document frequency formula 
normally document keyword appearing tfidf formula defines value tfidf represents frequency keyword document tf inverse frequency keyword documents corpus idf 
xsearch subtrees document returned user 
compute weight keywords lower granularity level leaf nodes document 
allows determine subtrees document relevant enabling properly rank query results 
keyword nl leaf node 
occ nl denote number times appears nl 
term frequency nl defined tf nl occ nl max occ nl words nl standard variation tf formula gives larger weight frequent keywords sparse nodes nodes keywords 
set leaf nodes corpus 
define ilf log words intuitively ilf logarithm inverse leaf frequency number leaves corpus number leaves contain define nl tf nl ilf 
note log ilf factor increase importance tf factor 
xsearch weight keyword node stored index 
actual weight stored normalized version value nl denoted nl 
definition nl appear nl 
weight stored explicitly index 
label associated weight determines importance 
label weights user defined system generated 
example user may choose give label title greater weight label section 
user specify label weights system gives weight labels 
may implement methods automatically determine label weight giving higher weight common labels 
information derived indices create 
ranking factors query answers 
primary importance rank answers estimated relevance 
xsearch ranker gives score query answer consideration structure result contents 
factors considered described detail 
query answer similarity vector space model common information retrieval determining answer satisfies query 
set labels set keywords 
interior node corpus associated vector vn size 
vector vn called profile profile entry pair vn denote entry vn corresponding pair 
set leaf descendents values profile vn defined follows vn label consider search term 
irrelevant purposes optional required term 
search term associated vector size denoted vt entries vector vt defined follows 
form vt value dimensions correspond keyword dimensions 
form vt dimensions correspond label dimensions 
form vt value exactly dimension corresponding dimensions 
measure similarity query answer denoted sim sum cosine distances vectors associated nodes vectors associated terms match relationships nodes query answer 
nodes may appear document tree different places 
configurations nodes meaningful 
denote number nodes relationship tree value small nodes close 
meaningfully related 
search query processor index repository indices user indexer ranker xml files xsearch system architecture 
say nodes participate ancestor descendent relationship ancestor ancestor xml documents type configuration tends indicate strong relationship define anc des number unordered pairs participate ancestor descendent relationship 
combining factors query answer measures sim anc des determine ranking answer 
experimented combination factors varying values sim anc des 
section contains additional details experimentation ranking 
system implementation attempt implementing language try translate queries xquery xquery processor create query results 
approach inappropriate reasons 
possible translate queries xquery full xquery language turing machine expressive power 
translation extremely complicated 
tried running queries generated translation different xquery processors 
small queries extremely small documents size kb query execution took hours 
addition xquery built ranking mechanism needed context searching large document sets 
surprising implementation proved infeasible xquery systems generally optimized queries type produced 
created working system scratch 



ancestor 
ic child path 
jp parent 
ic label ic label 
jp label label jp 


ancestor 
ip parent 
jp parent 
ip label ip label 
jp label label jp computing interconnection index dynamic programming 
architecture xsearch system depicted 
basic flow information follows 
user enters query browser 
search query processor parses query list search terms 
index repository find nodes satisfy search terms find pairs nodes interconnected 
index repository responds checking stored indices 
indices contain sufficient information may case dynamic online indexing employed see section indexer augment current indices 
relevant information returned search query processor creates answers ranked sorted returned 
discuss implementation index repository 
implementing component efficiently main challenges system 
ranker important component discussed section 
query processor algorithms uses index structures discussed due lack space 
indexer creates different indices index repository set xml documents 
discuss detail index structures inverted keyword index inverted label index space limitations 
focus discussion important novel index structures interconnection index path index 
interconnection index allows rapid checking interconnection relationship 
path index allows create answers higher estimated ranking 
important note node store encoding allows easily find lowest common ancestor pair nodes 
basically encoding node encoding parent augmented index siblings 
encoding allows index structures perform efficiently 
dynamic offline interconnection indexing checking interconnection nodes online expensive 
decided create node interconnection index store information interconnection relationship pair nodes 
requires solving problem 
document pairs nodes determine interconnected 
easy see document nodes possible check interconnected time number nodes follows check interconnection pairs nodes time 
improved result xsearch implementation dynamic programming 
say nodes strongly interconnected interconnected labeled differently 
essentially corresponds condition interconnection section 
algorithm lemma 
lemma interconnection characterization document nodes ancestor interconnected hold parent strongly interconnected child path ancestor ancestor interconnected hold parent strongly interconnected parent strongly interconnected theorem pairs interconnection document 
possible determine interconnection pairs nodes time 
proof sketch 
procedure solves problem 
simplicity exposition assume nodes numbered 
addition assume numbering derived depth traversal denote boolean value interconnected 
index structures efficiently execute procedure specified 
note order loops evaluated lines lines ensures right hand assignments lines evaluated 
algorithm order compute interconnection values pairs nodes 
xsearch system explored possibilities storing node interconnection index hashtable symmetric matrix 
implemented hashtable node interconnection index contains pairs ids interconnected nodes 
implemented symmetric matrix index contains boolean value pair nodes indicating interconnected 
comparison time space efficiency structures section 
dynamic online interconnection indexing offline computation node interconnection index may expensive see section 
order amortize cost computing index queries received considered online indexing method 
indexing online pair nodes interconnection checked known compute section node interconnection index corresponding 
done fashion similar procedure 
hashtable store part index computed moment 
hash table contains boolean value pair nodes interconnection checked 
boolean value indicates nodes interconnected 
query processing usually small part node interconnection index created slowdown response time large 
addition note queries tend locality property 
intuitively queries tend similar parts document access 
queries evaluated node interconnection index partially computed 
speeds execution time loading index main memory 
path index ranker see equation combines factors 
sim ranks content rank structure 
cases choosing yields ranker answers generated order ranking 
strategy generate top answers assuming user looking answers system generate sort answers actual value 
remainder section show generate answers order ranking 
document find different paths labels root leaves 
large documents tend relatively small number paths 
paths labels determine lead interconnected nodes determine set labels interconnection tree 
example consider paths labels dblp inproceedings author dblp inproceedings title 
lead interconnected nodes share lowest common ancestor second level tree inproceedings node 
paths labels lead interconnected nodes relationship tree nodes contain labels inproceedings author 
example consider path dblp title 
paths lead interconnected nodes lowest common ancestor root 
note relationship tree case contain nodes 
pair interconnected nodes reachable relationship tree smaller size higher ranking pair nodes reachable 
path index stores path labels nodes interconnection tree defined paths lead interconnected nodes 
inverted keyword index store keyword paths documents lead keyword 
paths store set nodes reachable path 
similarly store label paths document lead label nodes reachable paths 
efficiency store path id entire path 
creating answers query determine possible paths may lead keywords labels query 
order check series paths 
pk lead interconnected nodes sufficient verify pair paths lead interconnected nodes 
information appears path index 
order compute size interconnection tree determined 
pk sufficient check distinct labels appear xml document size kb number nodes nii time ms time ms iim time ms dream hamlet sigmod record mondial table test documents index generation size kilobytes number nodes time create indices 
pi pj create query answers configurations highest ranking 
experimental results performed extensive experimentation xsearch system implemented java 
experiments carried pentium cpu ghz gb ram running windows xp operating system 
note java take advantage gb ram 
scalability order determine scalability xsearch checked long takes create index document factor size size resulting index 
different types indices created variety xml documents nii interconnection index created 
created indices 
corresponds created dynamic online strategy interconnection index interconnection index created hashtable iim interconnection index created symmetric matrix 
options calculated time required order create indices resulting size indices 
documents tested physical size number nodes time took compute types index generation detailed table 
summarize resulting index size 
consider size index disk memory 
version iim size proportional square number nodes version iim versions size proportional number pairs interconnected nodes 
version space efficient store interconnection index hashtable 
version preferable data structure dependent percentage interconnected nodes document 
example percentage high mondial turns smaller iim condition interconnection requires slightly modify calculation 
size index 
case 
observe time needed index size grow polynomially functions document size 
query execution time order check query execution time affected semantics query pairs star type interconnection index generated random queries sigmod record document 
queries required search terms optional search terms 
keywords labels queries drawn randomly set keywords labels sigmod record 
executed queries determine execution time hashtable matrix interconnection index 
ran queries pairs star semantics 
histogram number milliseconds needed process query 
note number queries logarithmic scale 
observe querying hashtable matrix yields similar results 
processing queries star semantics tends slower processing pairs semantics query result larger 
cases queries ran milliseconds queries ran milliseconds 
average run time queries pairs semantics milliseconds star semantics milliseconds 
histogram processing time random queries various semantics index structures 
indexing strategy considered creating interconnection index offline entirety online incrementally 
affect indexing technique chosen size index query execution time studied 
offline computation tends expensive 
huge documents full version dblp mb java memory constraints allow create index offline entirety 
addition index usually large 
loading index query processing costly 
interconnection index created incrementally online compute parts index necessary query computed 
obviously increases query computation time 
ran random queries section pairs semantics dynamically creating index query processing 
queries processed milliseconds queries processed second 
queries took seconds 
processing random queries pairs nodes checked interconnection 
postulate real queries opposed randomly generated queries interconnection index created 
example scenario performing extensive user studies determine precision recall xsearch scope 
example shed light questions 
suppose wish find papers written buneman contain title 
xquery query expresses requirements 
note query complicated naive user slightly changed applied sigmod record document 
answers document dblp xml article document dblp xml inproceedings author title contains string buneman contains lower case string database return answers naive user attempt retrieve data required sigmod record dblp xsearch 
user may familiar exact ontology document sure exactly keywords look 
considered variations query buneman database author title tag author buneman title database ran queries sigmod record large representative sample dblp 
pairs semantics star semantics yield results 
compared xsearch results correct results set actual results user wished find 
calculated galax xquery engine query similar 
naive results set results retrieved required nodes result satisfy query require nodes result interconnected 
corresponds relationship contains pair nodes tree 
xsearch naive approach yielded perfect recall 
precision number correct answers returned relative number answers returned differed case 
precision xsearch naive method 
note xsearch outperforms naive approach 
note dblp precision xsearch quite low slightly outperformed naive approach 
example precision xsearch tag dblp approximately versus approximately naive approach 
title author nodes belong publications different types title journal author book interconnected 
cases interconnection sufficiently capture actual node relationships proper ranking results utmost importance 
db bell labs com galax precision tag sigmod record dblp 
order test ranker checked ratio correct answers answers returned number called precision precision precision written 
query precision cases keywords supplied taken consideration ranking 
sigmod record precision tag perfect perfect 
remaining cases tag dblp precision constant different values depicted 
value irrelevant results contained nodes ancestor descendent relationship 
interestingly cases turns tags supplied query better give larger weight size relationship tree comparison 
case corpus contained labels keywords giving large weight degraded results 
documents contain larger ratio keywords labels larger value improve ranking results 
experimentation needed find optimal values 
related numerous query languages xml developed 
interest arisen techniques flexible querying xml 
example xquery working group considering add full text search features ranking xquery 
capabilities added various xml query languages 
extends xml ql keyword search presents performance experiments 
xirql extension xql supports vague predicates weighting terms minimal structural abstracting abstraction differences attributes elements 
xxl search engine sql syntax extended ranking tag dblp 
ical knowledge similarity metrics 
languages suitable naive user query syntax complex 
equix language simple extension search engine xml documents 
equix deal documents dtd 
search language xml proposed 
language consists fragments xml documents require approximate matching queries documents 
query answers consist entire documents document fragments 
addition require semantic relationship parts document match query 
suggested rank query answers distance document different document elements satisfy query 
closer elements receive higher ranking 
measure ranking measures 
efficient algorithms compute top answers 
algorithms assumption document schema may necessarily hold 
theoretical treatment problem flexibly matching query document 
approach include keyword searching 
related system keyword searching xml documents 
ranking mechanism returns document fragments answers 
distinction keywords labels keyword query matched word document word label 
answer xsearch query answer part answer query consists keywords labels converse necessarily true 
may return answers parts semantically unrelated example 
ranks elements xml document generalizing page rank algorithm google 
ranks answers query combin ing ranking elements keyword proximity 
notion proximity means children element right order element ranked highly answer 
example element title child child section elements element get low rank query keyword title keyword author name 
xsearch proximity included ranking formula terms size relationship tree affected order children 
xsearch employs information retrieval techniques tfidf similarity query document 
element ranking incorporated xsearch utility clear 
useful dblp elements indicate importance 
significance large number document geographical data mondial neighboring countries 
main contribution laying foundations semantic search engine xml documents 
xsearch returns semantically related fragments ranked estimated relevance 
system extensible easily accommodate different types relationships nodes 
shown possible combine qualities efficient scalable modular system 
xsearch seen general framework semantic searching xml documents 
jonathan grateful marie christine rousset helpful discussions 
supported israel science foundation 
baeza yates ribeiro neto 
modern information retrieval 
acm press 
wong 
structural proximity searching large collections semi structured data 
proceedings acm cikm international conference information knowledge management pages atlanta georgia usa nov 
acm press 
brin page 
anatomy largescale hypertextual web search engine 
computer networks 
carmel maarek mass landau 
extension vector space model querying xml documents xml fragments 
acm sigir workshop xml information retrieval tampere finland aug 
chamberlin fankhauser florescu marchiori robie 
xml query cases 
www org tr wd cases 
kushmerick 
expressive efficient language xml information retrieval 
journal american society information science technology 
choi 
real dtds 
fifth international workshop web databases webdb madison wisconsin usa june 
cohen kogan nutt sagiv 
equix search query language xml 
journal american society information science technology 
cohen sagiv 
generating relations xml documents 
proc th international conference database theory siena italy jan 
springer verlag 
florescu kossmann manolescu 
integrating keyword search xml query processing 
international journal computer telecommunications networking june 
fuhr gro johann 
xirql query language information retrieval xml documents 
proc 
th international acm sigir conference research development information pages new orleans louisiana usa sept 
acm press 
guo shao shanmugasundaram 
ranked keyword search xml documents 
proc 
acm sig mod international conference management data san diego california june 

keyword proximity search xml graphs 
proc 
th international conference data engineering bangalore india mar 
sagiv 
flexible queries semistructured data 
proc 
th symposium principles database systems pages santa barbara california usa may 
acm press 
theobald weikum 
index xxl search engine querying xml data relevance ranking 
proc 
th international conference extending database technology pages prague czech republic march 
springer verlag 
