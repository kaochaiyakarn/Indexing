evolutionary algorithm discover numeric association rules mata 
ing 
elect 

inform autom tica universidad de spain mata es association rules tools discover relationships attributes database 
nowadays efficient techniques obtain rules require values attributes discrete 
solve problem techniques discretize numeric attributes implies loss information 
general way techniques phases try find sets attributes determined frequency database frequent itemsets second extract association rules departing sets 
technique find frequent itemsets numeric databases needing discretize attributes 
evolutionary algorithm find intervals attribute conforms frequent itemset 
evaluation function decide amplitude intervals 
evaluate tool synthetic real databases check efficiency algorithm 
keywords data mining association rules evolutionary algorithms 
association rules introduced method find relationships attributes database :10.1.1.40.6984:10.1.1.40.6984
means techniques interesting qualitative information take decisions obtained 
general terms association rule relationship attributes way pair conjunctions attribute value way discrete attribute attribute continuous numeric 
generally antecedent formed conjunction pairs consequent usually unique attribute value pair 
databases appear high number permission digital hard copies part personal classroom granted fee provided copies distributed pro commercial advantage copies bear notice full citation rst page 
copy republish post servers redistribute lists requires prior speci permission fee 
sac madrid spain copyright acm 
alvarez 
ing 
elect 

inform autom tica universidad de spain alvarez es 
sistemas inform universidad de sevilla spain lsi es basketball database rules kind essential define measures allow filter significant ones 
measures define interest rules described support :10.1.1.40.6984:10.1.1.40.6984
statistical measure indicates ratio population satisfies antecedent consequent rule 
rule support records database contain 
confidence 
measure indicates relative frequency rule frequency consequent fulfilled fulfilled antecedent 
rule confidence records database contain contain 
goal techniques search association rules extract exceed minimum values support confidence defined user 
greater part algorithms extract association rules phases try find sets attributes exceed minimum value support second phase departing sets discovered extract association rules exceed minimum value confidence 
algorithms seen :10.1.1.103.5437:10.1.1.3.2424:10.1.1.40.2201
works association rules focused marketing 
databases transactions represent purchases customers 
transaction formed set elements variable size 
kind rules called classic association rules 
databases consist set records tuples formed fixed number continuous attributes seen 
definitions proposed adapting databases :10.1.1.40.6984:10.1.1.40.6984
definition 
itemset 
set attributes belonging database 
itemset formed variable number attributes 
itemset formed attributes called itemset 
case itemset formed pair attribute range values definition 
frequent itemset 
itemset exceed minimum value support 
problem mining association rules consists basically finding frequent itemsets obtaining rules departing sets 
studies researches focused phase expensive second considered simple direct process 
tools cited starting frequent itemsets size joining conform frequent itemsets greater size step 
real world numerous databases stored information numeric 
databases attributes possibilities value reason process described computational point view 
association rules obtained numeric databases called quantitative association rules 
problem mining quantitative association rules introduced :10.1.1.40.8600
rules variant classic association rules value attribute takes rule interval discrete value 
example kind rules height time assist 
basic idea algorithm consists dividing range numeric attribute intervals treating moment onwards discrete attributes 
strategy followed diverse authors worked numeric databases 
uses different methods clustering techniques partition domain intervals size techniques merge adjacent intervals reaching maximum support discretization means fuzzy sets common fact need information priori user 
techniques consulted 
main problem lies fact data prepared applying tool 
preparation means user means automatic process conveys loss information rules generated departing partitions previously created 
goal find association rules numeric databases necessity preparing previously data 
order get objective tool evolutionary algorithm discovers frequent itemsets numeric databases 
designed evolutionary algorithm find intervals attributes conforms frequent itemset way fitness function decides amplitude intervals 

preliminaries tool evolutionary algorithm theory ea 
order find optimal itemsets best support intervals excessively wide depart population algorithm gar 



generate population 

process 
select individuals 
complete crossover 
mutations 


choose best 
penalize records covered 

gar algorithm individuals potential itemsets 
individuals evolving means crossover mutations process individual best fitness correspond best frequent itemset 
problems find ea theory convergence individuals solution 
case means individuals evolve frequent itemset individuals conform generation provide practice information 
techniques solve problem 
evolutionary algorithm niches iterative rule learning tool 
develop phase process mining association rules undertakes find frequent itemsets second phase algorithm studies cited 

practical implementation core tool ea individuals possible itemsets want discover 
sections see general structure algorithm fitness function representation individuals meaning genetic operators 
gar algorithm gar genetic association rules algorithm theory evolutionary algorithms extension algorithm search directly association rules necessary prepare data indicate tool attributes form part antecedent consequent 
process necessary gar algorithm finds frequent itemsets rules built departing 
structure algorithm shown 
process repeated obtain desired number frequent itemsets step consists generating initial population 
evolutionary algorithm takes charge calculating fitness individual carries processes selection crossover mutation complete generation 
process individual best fitness chosen correspond frequent itemsets algorithm representation individual example crossover operation returns 
records covered obtained itemset penalized 
factor affects negatively fitness function achieve evolutionary process search space tends repeated 
characteristics genetic algorithm due nature problem solve fact value attributes taken continuous domain real codification represent individuals 
individual gar itemset gene represents maximum minimum values intervals attribute belongs itemset 
general frequent itemsets formed variable number attributes database attributes frequent itemsets size size seen li ui limits intervals corresponding attribute ai 
generation initial population consists random creation intervals attribute conforms itemset 
number attributes itemset chosen random way maximum number attributes database 
condition cover record database intervals reduced size 
genetic operators gar usual ones selection crossover mutation 
selection elitist strategy replicate individual best fitness 
means crossover operator complete rest population choosing randomly individuals combined form new ones 
crossover individuals new ones generated best adapted pass generation 
individuals population going crossed crossover operator generates offspring possible result crossover operator itemsets different size seen 
mutation operator consists altering genes individual modifying values intervals itemset 
limit selected interval possibilities increase decrease value 
way achieved possible mutations shift interval left right increase decrease size 
process adjusting chosen individual carried 
consists decreasing size inter vals number covered records smaller records covered original itemset 
goal post processing obtain quality rules 
fitness function evolutionary algorithm gar function implemented order evaluate fitness individuals decide best candidates generations 
scenery look frequent itemsets larger support cover records database 
criterion decide limits intervals algorithm try span complete domain attribute 
reason necessary include fitness function measure limit size intervals 
fitness function individual cov mark ampl meaning parameters fitness function covered cov 
indicates number records belong itemset represent individual 
measure similar support 
marked mark 
indicates record covered previously itemset 
achieve algorithm tend discover different itemsets searches 
value call penalization factor give weight marked record permit overlapping itemsets depending value 
factor defined user 
amplitude ampl 
parameter important fitness function 
mission penalize amplitude intervals conform itemset 
means factor achieved algorithm permissive regard growth intervals 
concept penalize mean maximum amplitude intervals 
number attribute 
parameter rewards frequent itemsets larger number attributes 
able increasing decreasing effect means factor 
parameters fitness function normalized unit interval 
way weight obtaining fitness individual 

experimental results test developed algorithm finds correct way frequent itemsets generated synthetic databases 
different functions distribute values records database way group predetermined sets 
goal find accurate way intervals sets artificially created 
tested tool numeric databases bilkent university function approximation repository 
carry tests algorithm executed population individuals generations 
table sets synthetically created means uniform distribution sets table frequent itemsets gar frequent itemsets sup records chosen parameters gar algorithm selected individuals selection operator crossover probability mutation probability 
synthetic databases database formed numeric attributes records generated 
values distributed means uniform distribution sets formed predetermined intervals 
new records added idea introducing noise data distributing values means uniform distribution minimum maximum values domain intervals 
table sets synthetically created shown table show frequent itemsets gar 
exact support synthetically defined sets cover records 
seen table support sets quite close value suitable size interval 
results show algorithm behaves correct way database contains set records grouped frequent itemsets 
values fitness function 
experiment carried creating sets independent overlapping 
order test tool works properly sets records common second database created way overlapping sets 
case records values distributed sets generated records added generate noise 
table sets synthetically created shown table show frequent itemsets gar 
penalization factor decreased carry test order permit overlapping itemsets 
values fitness function table sets synthetically created overlapping sets table frequent itemsets gar frequent itemsets sup records sets table sets variable size :10.1.1.40.8600
test carried test behaviour tool itemsets variable size 
test database distributing values attributes 
table sets synthetically created shown table show frequent itemsets gar 
result test shows tool predefined frequent itemsets 
new sets appeared consequence random distribution rest values 
test penalization factor number attributes loosen find itemsets variable size 
values fitness function 
real life databases idea evaluating tool real databases carried experiments bilkent university function approximation repository 
table results obtained executing algorithm times shown 
second column indicate number records number numeric attributes database respectively 
third column itemsets indicates mean number frequent itemsets 
value column support indicates mean support itemsets size shows mean number attributes itemsets 
column ampl indicates mean size intervals conform set 
measure significant test intervals sets ample 
column records shows percentage records covered itemsets total records 
due fact knowing priori distribution values records minimum support table frequent itemsets gar frequent itemsets sup records table results real life databases database records att itemsets support size ampl records bk fa bolts bl pollution po quake qu sleep sl stock price sp vineyard vy itemsets discovered bk database thresholds carry tests 
tool frequent itemsets high values support expanding intervals excess amplitude percentage 
see result obtained algorithm gar bk database 
represented frequent itemsets 
important results regard tools possibility obtaining ranges overlapping different itemsets 
example itemset best interval height attribute second best interval attribute 
previously referenced techniques attributes discretized searching itemsets 
discretization process finds interval height attribute interval appear itemset 
fact generates loss information 
example minimum support discretization process created interval height attribute second itemsets discovered probably exceed minimum support smaller 
limits slightly dynamically modified means mutations second itemset discovered 

tool discover association rules numeric databases necessity discretizing priori domain attributes 
way problem finding rules intervals created starting process avoided 
evolutionary algorithm find suitable amplitude intervals conform itemset high support value intervals wide 
carried test check tools behaviour different data distributions obtaining satisfactory results frequent itemsets overlapping overlapping variable size 
nowadays studying new measures include fitness function find accuracy size intervals itemset 

acknowledgments supported spanish research agency cicyt tic 
agrawal imielinski swami :10.1.1.40.6984:10.1.1.40.6984
mining association rules sets items large databases 
proc 
acm sigmod pages washington 
agrawal srikant 
fast algorithms mining association rules 
proc 
vldb pages 
aumann lindell 
statistical theory quantitative association rules 
proc 
kdd pages 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley new york 
gonzalez herrera 
multi stage genetic fuzzy systems iterative rule learning approach 

bilkent university function approximation repository 
cs bilkent edu tr 
han pei yin 
mining frequent patterns candidate generation 
pages 
mannila toivonen verkamo 
efficient algorithms discovering association rules 
proc 
kdd pages seattle washington 
mata alvarez 
mining numeric association rules genetic algorithms 
proc 
conf pages 


miller yang 
association rules interval data 
pages 
park chen yu 
effective hash algorithm mining association rules 
proc 
acm sigmod pages san jose california 
savasere omiecinski navathe 
efficient algorithm mining association rules large databases 
technical report git cc 
srikant agrawal :10.1.1.40.8600
mining quantitative association rules large relational tables 
proc 
acm sigmod pages montreal canada 
wang tay liu 
interestingness interval merger numeric association rules 
proc 
th int 
kdd pages 
