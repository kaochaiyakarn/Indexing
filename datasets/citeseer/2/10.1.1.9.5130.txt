conceptual framework toolkit supporting rapid prototyping context aware applications anind dey gregory abowd college computing gvu center georgia institute technology daniel salber ibm watson research center www cc gatech edu fce running head supporting rapid prototyping context aware applications corresponding author contact information anind dey college computing gvu center georgia institute technology atlanta ga anind cc gatech edu brief authors biographies anind dey computer scientist interest context aware ubiquitous computing received phd computer science research scientist college computing gvu center georgia tech 
daniel salber computer scientist interest software engineering context aware applications research associate pervasive computing applications group ibm watson research center 
gregory abowd computer scientist interests hci software engineering challenges associated ubiquitous computing associate professor college computing gvu center georgia tech 
computing devices applications desktop diverse environments trend ubiquitous computing accelerating 
challenge remains emerging research field ability enhance behavior application informing context 
context refer information characterizes situation related interaction humans applications surrounding environment 
context aware applications promise richer easier interaction current state research field far removed vision 
due main problems notion context ill defined lack conceptual models methods help drive design context aware applications tools available jump start development context aware applications 
address problems turn 
define context identify categories contextual information characterize context aware application behavior 
full impact context aware computing requires understanding subtle high level notions context focusing efforts pieces context inferred automatically sensors physical environment 
conceptual framework separates acquisition representation context delivery reaction context contextaware application 
built toolkit context toolkit instantiates conceptual framework supports rapid development rich space context aware applications 
illustrate usefulness conceptual framework describing number contextaware applications prototyped context toolkit 
demonstrate framework support investigation important research challenges area context aware computing 
keywords context aware computing ubiquitous computing context design toolkits applications development 

conference assistant scenario contents 
difficulties handling context 
overview 
understanding context 
defining context previous definitions definition 
categories context 
context aware functions 
requirements conceptual framework handling context 
requirements dealing context separation concerns context interpretation transparent distributed communications constant availability context acquisition context storage history resource discovery 
context abstractions context widgets interpreters aggregators services 
conceptual framework 
context toolkit active badge call forwarding mobile tour guide 
distributed communications 
subscriptions 
event handling 
discovery 
context services 
exploring space context aware applications 
board context aware mailing list reuse simple widget 
board application description building application 
context aware mailing list application description building application 
toolkit support 
dummbo evolution non context aware applications 
application description 
building application 
toolkit support 
intercom complex context services 
application description 
building application 
toolkit support 
conference assistant complex context systematic design context aware application 
identifying context components 
conference setting 
conference assistant 
applying design methodology identifying entities identifying context attributes identifying quality service requirements choosing sensors deriving software design 
model reality conference assistant implementation 
applications summary 
related frameworks 
context aware frameworks schilit system architecture stick notes cooltown situated computing service context information service 
relevant middleware abstractions agents tuple spaces 
conceptual framework research testbed 
representation acquisition context 
privacy 
ambiguity context data 
higher level programming abstractions 

typical user facing desktop machine relatively predictable office environment anymore 
users deal diverse devices mobile fixed sporting diverse interfaces diverse environments 
appearance phenomenon step realization mark weiser ubiquitous computing paradigm third wave computing specialized devices outnumber users weiser 
important pieces necessary achieve ubiquitous computing vision place 
notably interaction paradigms today devices fail account major difference static desktop interaction model 
devices changing environments adapt changes 
moving away desktop brings new variety situations application may computing devices left unaware surrounding environment 
hypothesis number ubiquitous computing researchers share enabling devices applications automatically adapt changes surrounding physical electronic environments lead enhancement user experience 
information physical electronic environments creates context interaction humans computational services 
define context information characterizes situation related interaction users applications surrounding environment 
growing research activity ubiquitous computing deals challenges context aware computing 
notion context entail subtle high level interpretations situation effort ubiquitous computing community takes bottom approach context 
focus mainly understanding handling context sensed automatically physical environment treated implicit input positively affect behavior application 
apart demonstration variety prototype context aware applications majority location services relatively little advancement context aware computing past years 
technology human centered challenges stem poor understanding constitutes context represented 
lack conceptual models tools support rapid development rich context aware applications better inform empirical investigation interaction design social implications context aware computing 
attempts enable new phase context aware applications development 
want help applications developers understand context provide concepts practical support software design construction context aware applications 
give reader idea richness context aware computing initially aiming scenario automated service meant support attendees academic conference 

conference assistant scenario ashley attending technical conference 
conference features large number presentations demos spread multiple tracks 
ashley attending conference colleagues bob john decided try attend different presentations share learned day 
ashley picks conference package day provides contact information topics interested 
mentions colleagues bob john attending 
conference proceedings receives personal conference assistant handheld device designed guide assist conference 
ashley hard time deciding attend session 
sessions start minutes 
turns conference assistant 
interests recommends presentation demo gives directions get presentation demo rooms 
ashley chooses presentation heads room 
enters presentation room conference assistant displays information session including information presenter relevant urls proceedings page numbers papers 
shows thumbnail current slide offers note capabilities 
presentation ashley uses conference assistant note feature comments 
conference assistant indicates audio video slides content recorded session 
marks diagrams interest retrieval 
presentation asks question speaker 
question relates particular detail diagram speaker slides 
conference assistant able bring relevant slide room screen question clearer speaker audience 
talk session cancelled speaker missed flight 
ashley wonders looks conference assistant find bob john 
conference assistant shows attending different sessions 
conference assistant reports bob indicated session moderately interesting 
john enjoying session lot 
ashley decides join john session 
back conference ashley connects conference web site refresh memory write trip report 
logs conference web site 
shows talks attended allows browse notes took 
watch listen recorded sessions missed 
trip report contains complete coverage sessions conference relevant team written snap 
implemented scaled version conference assistant application intended support visitor visits lab demo days 
application supports features described scenario 
section revisit conference assistant describe detail design architecture 
explain type applications difficult build today introduce number concepts context aware computing easier comprehend application designers developers 

difficulties handling context conference assistant scenario outlines variety possible uses context information enhance interaction devices dynamic settings 
prior context aware application approaches complexity terms variety context ways 
difficulties arise design development evolution context aware applications 
designers lack conceptual tools methods account contextawareness 
result choice context information applications driven context acquisition mechanisms available hardware software sensors 
approach entails number risks 
initial choice sensors may appropriate 
details shortcomings sensors may carried application level hinder flexibility interaction evolution application 
importantly sensor driven approach constrains possibilities designers limiting kind applications able design context uses imagine 
developers face set problems related distribution modifiability reusability 
context aware applications distributed acquire provide context information number different places 
example conference assistant scenario room venue conference able sense presence identity users 
mechanisms distribution mainstream desktops servers appropriate distributed networks sensors 
context awareness relevant environment highly dynamic user mobile 
context aware applications may implemented diverse kinds computing platforms ranging handheld devices wearable computers custom built embedded systems 
result context aware applications require lightweight portable interoperable mechanisms wide range platforms 
graphical user interfaces crucially lack experience context aware applications iterative development key creating usable context aware applications 
applications implemented way easy modify context related functions 
currently guidelines models tools support requirement 
application developers able reuse satisfactory context aware solutions 
methods tools task easy 

overview main goals provide operational understanding context derive concepts useful context aware applications development introduce conceptual framework assist design context aware applications toolkit facilitate context aware computing research allowing empirical investigation design space exploration difficult challenges handling implicitly sensed context 
section overview current understanding uses context context awareness literature 
propose practical basic context types context uses help clarify design space context aware computing 
section requirements framework supports acquisition representation delivery reaction context information automatically sensed implicit input affect application behavior 
section discuss relevant details context toolkit instantiation conceptual framework dey 
sections explore design space context aware applications description various applications developed context toolkit 
final example detailed discussion design implementation prototype conference assistant 
section discuss related conceptual frameworks architectures support context aware computing compare 
section demonstrate existing challenges context aware computing better representations context handling higher level notions context support privacy concerns support imperfect ambiguous sensed context higher level programming abstractions explored result conceptual framework context toolkit 

understanding context section survey context aware computing performed authors provide better understanding context dey abowd 
look previous definitions context ubiquitous computing literature 
build definitions provide general definition context refine looking entities provide context information 
define context awareness identify key categories context aware functions 

defining context provide operational definition context helps determine context 
enable establish common characteristics context supported abstractions tools 
webster dictionary context situation background environment relevant happening personality definition general useful context aware computing 
definitions context previous authors fall categories enumerations examples context information categorizations 
previous definitions defined term context aware schilit theimer refer context location identities nearby people objects changes objects 
similar definition brown chen define context location identities people user time day season temperature 

ryan pascoe morse define context user location environment identity time 
dey enumerates context user emotional state focus attention location orientation date time objects people user environment 
definitions define context example difficult apply 
considering potential new type context information clear definition help decide classify information context 
details context toolkit including downloadable versions tutorial www cc gatech edu fce 
example previous definitions helps decide user preferences interests context information 
definitions provided synonyms context referring context environment situation 
consider context user environment consider application environment 
example brown defines context elements user environment computer knows 
franklin see situation user 
ward jones hopper view context state application surroundings rodden define application setting 
hull bedford roberts include entire environment defining context aspects current situation 
definitions clearly general enumerations generality limitation 
definitions provide little guidance analyze constituent elements context identify 
definitions schilit adams want dey abowd wood pascoe closest spirit operational definition seek 
schilit adams want claim important aspects context user user resources nearby 
define context constantly changing execution environment 
environment threefold computing environment available processors devices accessible user input display network capacity connectivity costs computing user environment location collection nearby people social situation physical environment lighting noise level dey abowd wood define context user physical social emotional informational state 
pascoe defines context subset physical conceptual states interest particular entity 
definition prior attempts define context proceed definition taken previous dey abowd context information characterize situation entities person place object considered relevant interaction user application including user application 
context typically location identity state people groups computational physical objects 
definition encompasses definitions previous authors 
stated earlier goal context acquisition determine user trying accomplish 
user objective difficult determine directly context cues help infer information inform application best support user 
definition provided quite general 
context awareness represents generalized model input including implicit explicit input allowing application considered context aware insofar reacts input 
concentrate gathering implicit environmental sensed input applications 
conceptual framework explicit implicit input focuses supporting ease incorporating implicit input applications 
definition differentiate manually acquired information automatically acquired information 
great division context aware researchers context include automatically acquired information manually automatically acquired information 
opted inclusive definition 
ideal setting context obtained automatically need manual acquisition 
real world context sensed automatically applications rely user manually provide 
information relevant interaction information acquired impact seen context 
main goal providing definition context offer guidance identifying broad categories context 

categories context looking scenario section conference assistant needs acquire various kinds information environment order perform correctly location user topics interest user contents presentation audio video recorded session location users 
diversity context information useful attempt categorize easier comprehend systematic manner 
introduce simple classification context information entities context assessed categories context information 
entities identified relevant places people things 
places regions geographical space rooms offices buildings streets 
people individuals groups located distributed 
things physical objects software components artifacts instance application file 
introduce essential categories characteristics context information identity location status activity time 
identity refers ability assign unique identifier entity 
identifier unique namespace applications 
location just position information space 
expanded include orientation elevation information deduce spatial relationships entities location proximity containment 
example information object upside location information 
location applies places 
places located frame geographical coordinates relative spatial relationships location 
status activity identifies intrinsic characteristics entity sensed 
place current temperature ambient light noise level 
person refer physiological factors vital signs activity person involved reading talking 
similarly group people status characteristic group enthusiasm global mood description activity attending lecture having meeting 
software components status basically refers attribute software component queried 
typical examples uptime load cpu existence state files file system state software component application 
time context information helps characterize situation 
enables leverage richness value historical information 
conjunction pieces context timestamp time span indicating instant period contextual information known relevant 
cases just knowing relative ordering events causality sufficient 
reason choice basic context categories information provide infer additional pieces context lead extensive assessment situation 
simple inference derivation context information happens related context information deduced single known piece context information 
example phone number address person derived identity 
complex inference context information refers process considering pieces context information describe situation infer new piece context information 
example knowing room occupied number people room relative positions room talking determine meeting place 
context categories identified inferred context information number ways context aware applications 
clarify context uses turn functions application context aware 

context aware functions having definition context identified key context types examine applications effectively context information 
survey contextaware computing proposed classification context aware functions context aware application may implement dey abowd 
classification introduces categories functions related presentation information execution services storage context information attached captured information retrieval 
category presenting information services refers applications context information user context propose appropriate selections actions user 
examples class functions literature commercially available systems showing user vehicle location map possibly indicating nearby sites interest abowd bederson davies feiner fels mccarthy mccarthy presenting choice printers close user schilit adams want sensing presenting information group users salber dey abowd ambient information displays heiner hudson tanaka ishii ullmer mynatt weiser brown providing remote awareness schmidt rvi 
second category automatically executing service describes applications trigger command reconfigure system behalf user context changes 
examples include teleport system user desktop environment follows moves workstation workstation want car navigation systems recompute driving directions user misses turn hertz recording whiteboard senses informal unscheduled encounter individuals occurs automatically starts recording ensuing meeting brotherton abowd truong mobile devices enhanced sensors determine context change settings actions harrison hinckley schmidt camera captures image user sensed biometric sensors healey picard devices deliver reminders users specified location beigl schmandt 
third category attaching context information retrieval applications tag captured data relevant context information 
example zoology application tags notes taken user location time observation pascoe ryan morse 
informal meeting capture system mentioned provides interface access informal meeting notes meeting occurred meeting located 
similar vein time machine computing rekimoto placeless documents dourish systems attach context desktop networked files enable easier retrieval 
complex examples category memory augmentation applications forget lamming flynn remembrance agent rhodes 
section established definition context elicited dimensions context information possible uses context aware applications 
turn software design context aware applications 

requirements conceptual framework handling context software design context aware applications raises new challenges 
handling context difficult reasons guiding principles support software engineering practices designers lack abstractions think context context sensing distributed leads complex distributed designs 
section separation concerns context acquisition context applications guiding principle 
derive abstractions help acquire collect manage context application independent fashion identify corresponding software components 
components simple distributed platform form basis context toolkit described section 
looking new technological advance trying easily accessible software designers common stepping stone apply tried true software engineering principles particular case new technology hand 
advent graphical user interfaces gui separation concerns actual application legacy text application new world windows icons menus pointers quickly paramount 
requirement led software architecture models design processes development tools effectively support design development guis 
principles reusability modifiability stemmed particular nature gui design development original solutions costly develop iterative design key usability 
context aware applications faced similar problem 
context awareness opens new possibilities drive development new applications beneficial legacy applications 
gui applications focus explicit input contextaware applications try take general notion input focusing implicit input dealing explicit input 
context aware applications need take advantage sensors sensing techniques available 
guis major preoccupation achieve separation application se context acquisition processing 
inspired concepts commonly gui toolkits defined abstractions help infer higher level information context support separation concerns 
identified requirements dealing context extensions traditional gui capabilities 
section introduce requirements context abstractions defined describe derive abstractions application specifications 
abstractions form conceptual framework design context aware applications 

requirements dealing context perspective application designer mind want provide conceptual framework automatically supports tasks common applications requiring designer provide support application specific tasks 
identified number requirements framework fulfill enable designers easily deal context 
requirements separation concerns context interpretation transparent distributed communications constant availability context acquisition context storage resource discovery 
discuss requirements 
separation concerns main reasons context applications common way acquire handle context 
general context handled fashion 
application developers choose whichever technique easiest implement expense generality reuse 
look common ways context handled connecting sensor drivers directly applications servers hide sensor details 
applications harrison rekimoto drivers sensors detect context directly hardwired applications 
situation application designers forced write code deals sensor details protocol sensors dictate 
problems technique 
problem task building context aware application burdensome requiring application builders deal potentially complex acquisition context 
second problem technique support software engineering practices 
technique enforce separation application semantics low level details context acquisition individual sensors 
leads loss generality making sensors difficult reuse applications difficult simultaneously multiple applications 
ideally handle context manner handle user input 
user interface toolkits support application designers handling input 
provide important abstraction enable designers input worrying input collected 
abstraction called widget interactor 
widget abstraction provides benefits standard keyboard mouse interaction pen speech input arons unconventional input devices virtual reality macintyre feiner 
facilitates separation application semantics low level input handling details 
example application modified pen pointing mouse 
supports reuse allowing multiple applications create instances widget 
contains querying mechanism possesses notification callback mechanism allow applications obtain input information occurs 
toolkit widgets common external interface 
means application treat widgets similar fashion having deal differences individual widgets 
systems support event management bauer schilit querying mechanisms notification mechanisms acquire context sensors 
previous suffered design specialized servers share common interface bauer 
forces application deal server distinct manner able deal servers way 
server implementation side common support difficult produce servers resulting minimal range server types focusing location schilit 
requirement querying notification mechanisms supported implement 
reasons flexibility application advantage available rodden 
querying sensor context appropriate time context needs 
sole querying requires applications proactive polling requesting context information sensors 
receives context application determine context changed changes interesting useful 
notification publish subscribe mechanism appropriate repetitive context needs application may want set conditions wants notified 
separating context acquired applications contextual information worrying details sensor acquire context 
details completely hidden obtained needed 
context interpretation need extend notification querying mechanisms allow applications retrieve context distributed computers 
may multiple layers context data go reaching application due need additional abstraction 
simple needing smart card id owner name complex 
example application wants notified meetings occur 
lowest level location information interpreted determine various users identity information check location 
level information combined sound level information scheduling information determine meeting place 
application designer perspective multiple layers transparent 
order support transparency context interpreted application 
application may interested low level information may want know meeting starts 
order interpretation easily reusable multiple applications needs provided architecture 
application re implement necessary implementation 
number systems provide mechanisms perform transparent recursive interpretation dey abowd wood fox 
transparent distributed communications traditional user input comes keyboard mouse 
devices connected directly computer 
dealing context devices sense context attached computer running application react context 
example indoor infrared positioning system may consist infrared emitters detectors building 
sensors physically distributed directly connected single machine 
addition multiple applications may require location information applications may run multiple computing devices 
environments computers instrumented context sensed context coming multiple distributed machines connected computer network 
fact communication distributed transparent sensors applications 
simplifies design building sensors applications relieving designer having build communications framework 
designer design implement communications protocol design implement encoding scheme accompanying decoder passing context information 
related requirement need global mechanism 
typically dealing distributed computing environment distributed computers maintain clock synchronized 
earlier discussion context see time important type context 
order accurately compare combine context arriving distributed computers computers share notion time synchronized greatest extent possible 
constant availability context acquisition gui applications user interface components buttons menus instantiated controlled single application exception groupware applications 
contrast context aware applications instantiate individual components provide sensor data able access existing ones require 
furthermore multiple applications may need access piece context 
leads requirement components acquire context executing independently applications 
eases programming burden application designer requiring instantiate maintain keep track components acquire context allowing easily communicate 
components run independently applications need persistent available time 
known priori applications require certain context information consequently components running perpetually allow applications contact needed 
context information available 
take call forwarding example active badge research want 
phone call received application tried forward call phone nearest intended recipient 
application locate user badge server active 
badge server instantiated controlled single application applications context provides 
context storage history requirement linked need constant availability desire maintain historical information 
user input widgets maintain little historical information 
example file selection dialog box keeps track files selected allows user select easily 
general complete history required left application maintain 
contrast component acquires context information maintain history context obtains 
context history establish trends predict context values 
context storage type analysis performed 
component may collect context applications interested particular context information 
may applications available store context 
may application requires history context 
example application may need location history user order predict location 
reasons architecture support storage context 
ideally architecture support storage finest level detail possible order meet application requests historical information 
resource discovery order application communicate sensor software interface know kind information sensor provide located communicate protocol language mechanisms 
distributed sensors means knowing minimum hostname port computer sensor running 
able effectively hide details application architecture needs support form resource discovery schwartz 
resource discovery mechanism application started specify type context information required 
mechanism responsible finding applicable components providing application ways access 
example case simple board application location sensing technology developer indicate application notified user board enters leaves building 
information provided source location context 

context abstractions describe conceptual framework meets requirements previous section 
roughly speaking framework matches physical world sensors supports ability transform collect contextual information 
discussing framework demonstrate build context aware applications 
context widget software component provides applications access context information operating environment 
way gui widgets mediate application user context widgets mediate application operating environment 
result just gui widgets insulate applications presentation concerns context widgets insulate applications context acquisition concerns 
address context specific operations introduce additional categories components conceptual framework interpreters aggregators services 
context widgets gui widgets hide specifics input devices application programmer allowing changes minimal impact applications manage interaction provide applications relevant results user actions provide reusable building blocks 
similarly context widgets provide benefits provide separation concerns hiding complexity actual sensors application 
location user sensed active badges floor sensors rf radio frequency indoor positioning system combination impact application 
context information suit expected needs applications 
widget tracks location user building city notifies application user moves room street corner doesn report significant moves application 
widgets provide abstracted information expect applications need frequently 
provide reusable customizable building blocks context sensing 
widget tracks location user variety applications tour guides car navigation office awareness systems 
furthermore context widgets tailored combined ways similar gui widgets 
example presence widget senses presence people room 
meeting widget may built top presence widget assume meeting people 
widget abstraction criticized gui arena hides underlying details input collected 
context widgets support uniform interface allow applications acquire context completely hide underlying details context acquired sensors 
includes details type sensor data acquired sensor resolution accuracy sensor 
default behavior provide details applications 
applications request information desired 
application perspective context widgets encapsulate context information provide methods access way similar gui widget 
context widgets provide callbacks notify applications significant context changes attributes queried polled applications dey salber abowd 
mentioned earlier context widgets differ gui widgets live longer execute independently individual applications multiple applications simultaneously responsible maintaining complete history context acquire 
example context widgets include presence widgets determine particular location temperature widgets determine temperature location sound level widgets determine sound level location activity widgets determine activity individual engaged 
designer perspective context widgets provide abstractions encapsulate acquisition handling piece context information 
additional abstractions necessary handle context information effectively 
abstractions embody notions interpretation aggregation 
interpreters context interpreters responsible implementing interpretation abstraction discussed requirements section 
interpretation refers process raising level abstraction piece context 
location example may expressed low level abstraction geographical coordinates higher levels street names 
simple inference derivation transforms geographical coordinates street names example geographic information database 
complex inference multiple pieces context provides higher level information 
example room contains occupants sound level room high guess meeting going combining pieces context 
context aware applications require higher level abstraction sensors provide 
interpreters transform context information raising level abstraction 
interpreter typically takes information context sources produces new piece context information 
interpretation context usually performed applications 
separating interpretation applications reuse interpreters multiple applications widgets supported 
interpreters common interface components easily determine interpretation capabilities interpreter provides know communicate interpreter 
allows application widget aggregator send context interpreter interpreted 
aggregators aggregation refers collecting multiple pieces context information logically related common repository 
need aggregation comes part distributed nature context information 
context retrieved distributed sensors widgets 
application query distributed widget turn introducing complexity making application difficult maintain aggregators gather logically related information relevant applications available single software component 
definition context earlier describes need collect related context information relevant entities people places objects environment 
aggregators aid architecture supporting delivery specified context application collecting related context entity application interested 
accessing information provided aggregators simplified operation application applications access information single aggregator 
addition aggregators facilitate inference context information inferring higher level context multiple potentially distributed pieces context information easier pieces available aggregator 
collecting logically related information aggregators provide abstraction helps handle consistently separate pieces context information offer shop applications 
example application may context aware behavior execute conditions met individual happy located kitchen making dinner 
support aggregation application specification mechanism combination subscriptions queries different widgets determine conditions met 
unnecessarily complex difficult modify changes required 
aggregator responsible collecting context entity 
aggregators application communicate single component responsible individual entity interested 
aggregator similar capabilities widget 
applications notified changes aggregator context query poll updates access stored context entity aggregator represents 
aggregators provide additional separation concerns context acquired 
services components discussed far widgets interpreters aggregators responsible acquiring context delivering interested applications 
examine basic idea context aware applications acquiring context environment performing action see step action represented conceptual framework 
services components framework execute actions behalf applications 
review context aware applications identified categories context aware behaviors services 
actual services categories quite diverse application specific 
common context aware services multiple applications turning light delivering displaying message support service architecture remove need application implement service 
calls service building block developers design implement services available multiple applications 
context service analog context widget 
context widget responsible retrieving state information environment sensor input context service responsible controlling changing state information environment actuator output 
widgets applications need understand details service performed order 
context services synchronous asynchronous 
example synchronous context service send mail user 
example asynchronous context service send message user way pager containing number possible message responses 
service complete user chooses response returns 
asynchronous service guarantee user respond application requesting service probably want wait indefinitely response 
service notifies application service initiated deliver service results available 
final component conceptual framework 
responsible maintaining registry capabilities exist framework 
includes knowing widgets interpreters aggregators services currently available applications 
components started notifies discoverer presence capabilities contact component language protocol machine hostname 
widgets indicate kind context provide 
interpreters indicate interpretations perform 
aggregators indicate entity represent type context provide entity 
services indicate context aware service provide type context information required execute service 
components fail discoverer responsibility determine component longer available 
applications find particular component specific name identity white pages lookup 
example application may want locate presence building widget contains information presence people building alternatively applications find class components match specific set attributes services yellow pages lookup 
example application may want access aggregators people sensed local environment 
similar widgets notify applications changes available set components queried polled applications 
applications context components locate context components interest 
allow applications know priori components located network sense 
allow applications easily adapt changes context sensing infrastructure new components appear old components disappear 

conceptual framework identified categories components implement distinct functions 
context widgets acquire context information 
interpreters transform raise level abstraction context information 
interpreters may combine multiple pieces context produce higher level context information 
aggregators gather context information related entity easy access applications 
services execute behaviors environment acquired context 
allow applications components determine capabilities environment take advantage 
limited number relationships established components 
widgets queried notification inform clients changes 
clients applications aggregators widgets 
aggregators turn act bridge widgets applications 
interpreters solicited stage widget aggregator application 
services triggered primarily applications components may services 
communicate components acquiring information widgets interpreters aggregators providing information applications notification queries 
shows example configuration including sensing devices widgets aggregator interpreters service discoverer applications 
context components available register capabilities discoverer 
allows aggregators find relevant widgets interpreters allows applications find relevant aggregators widgets interpreters 
sensor provides data context widget stores context call interpreter obtain higher level abstraction data context available components applications 
aggregator collects context widgets provide context entity represents 
stores received context call interpreter context available 
applications query subscribe aggregators directly widgets desired call interpreters desired level abstraction available widgets aggregators 
application application aggregator interpreter interpreter discoverer service actuator widget sensor widget sensor 
example configuration context toolkit components context architecture components execute independently applications allowing constant acquisition context multiple applications 
addition components applications communicate automatically known network protocols languages 
allows programmer implementing particular component application communicate components having worry mechanisms communications 
demonstrate conceptual framework build applications 
sub sections describe active badge call forwarding application want arguably context aware application mobile tour guide common context aware application built 
active badge call forwarding original active badge application helps receptionist forward phone calls extension nearest recipient location building 
dynamically updating table displays phone extension location person system 
addition user request list locations individual past minutes past hour locate individual find names location request list people particular location request notified individual sensed system 
shows application built conceptual framework described 
active badge location system consisted number infrared sensors distributed building detected presence user worn active badges 
location widget represents sensor 
sensor detects badge corresponding location widget determines wearer identity badge id name interpreter stores information passes wearer user aggregator 
user aggregator user system collects stores location information location widgets corresponding user available application 
components interpreters aggregators widgets register discoverer allow locate needed widgets need locate badge id name interpreter aggregator needs locate widgets 
application uses discoverer locate user aggregators room phone extension interpreter 
room phone extension interpreter discoverer location widget active badge sensor active badge application user aggregator badge id name interpreter aggregator user location widget active badge sensor 
architecture diagram active badge call forwarding application 
display list building occupants location nearest phone extension application just subscribe location updates user aggregator convert room location local phone extension 
similarly notified individual sensed system application create separate subscription individual user aggregator 
features displaying users particular location locating individual requesting location history user application poll aggregators specifying information interested 
mobile tour guide common context aware application mobile tour guide abowd bederson davies feiner fels 
mobile tour guide typically runs handheld computer allows visitor tour particular indoor outdoor space 
visitor moves space shown current location map shown information interesting sites near 
purposes design assume building mobile tour guide indoor space space location system reports location updates centralized server 
shows architecture diagram application 
location widget built centralized location server 
room aggregator room subscribes location widget notified user enters leaves corresponding room 
room aggregators subscribe exhibit widgets respective rooms know exhibits available time 
exhibit widget contains information exhibit tour 
application subscribes location widget location updates user 
receives update updates map display polls room aggregator representing user current location list available exhibits 
displays exhibit information user subscribes room aggregator notified changes exhibit list 
application displays locations user friends create additional subscription room aggregators friend notified location event corresponding friend received 
discoverer location widget location sensor mobile tour guide room aggregator exhibit widget exhibit widget 
architecture diagram mobile tour guide application 

context toolkit aggregator room previous section requirements component abstractions conceptual framework supports building execution context aware applications 
section discuss details context toolkit implementation conceptual framework 
context toolkit developed provides designers abstractions described widgets interpreters aggregators services distributed infrastructure dey salber abowd salber dey abowd 
context toolkit developed java programming language independent mechanisms allowing creation interoperability widgets interpreters aggregators applications language 
instances widgets applications written frontier visual basic python 
widget aggregator interpreter discoverer component implemented single process 
typically different components distributed different processors 
context toolkit built top simple distributed infrastructure uses peer peer communications 
main requirement distributed infrastructure support reliable communication distributed objects multiple platforms 
additional features multicasting object migration resource discovery desirable required 

distributed communications current implementation context toolkit utilize simple object communication mechanism hypertext transfer protocol xml extensible markup language encoding messages 
choice dictated portability concern requirement communication infrastructure platform supports tcp ip 
simple requirement support unconventional custom built devices wearable computers way pagers handheld computers mobile phones shelf custom sensors common ubiquitous wearable computing environments 
possible alternatives corba common object request broker architecture java rmi remote method invocation deployed limited number platforms require significantly computing resources approach 
drawback approach limited scalability number components increases 
reached limit experimentation solutions scalability problem exist distributed infrastructures jini tm sun microsystems sun microsystems expense resource intensive solution 
distributed communications ability encapsulated component called 
widgets interpreters subclass aggregators subclass widgets inheriting communications ability 
communications protocol language designed pluggable allowing instantiation time replacement protocol language 
widget service aggregator interpreter 
object diagram context toolkit abstractions 

subscriptions discoverer demonstrates application subscribes context widget 
application needs acquire programming language independent handle widget 
contacting discoverer specifying context interested white pages yellow pages lookup mechanism 
widget handle uses instance contact widget 
widget receives communication strips xml encoding passes request widget 
request subscribe widget widget adds application list subscribers information contact application application handle application method call context received filters subscription 
example subscription filters application want receive context produced location widget wants context contains information specified individuals 
widget acquires new information sensor steps list subscribers determine subscriber send context 
acquired context matches filters placed subscription particular subscriber context delivered subscribing application 
context sent widget instance application 
application decodes incoming message calls appropriate application method 
sensor sensor data arrives location widget base object subscribe widget callback data matches subscription 
application subscribing context widget 

event handling discoverer get widget application base object handle callback delivered handler concept context widget modeled gui widgets emphasize important difference way events handled distributed 
piece context information changes modification detected context widget charge specific piece context 
timestamps context notifies subscribers may include widgets aggregators applications 
new information modified interpreters way context widget client subscriber 
context widget subscribers necessarily run machine events sent distributed infrastructure xml messages 
gui windowing system events generated user actions expected sequential 
placed event queue processed sequentially 
distributed context assumptions event timings 
component context widgets aggregators interpreters applications ready process events time possibly simultaneously 
event queue mechanism clearly apply context 
placing received events sequentially queue components listen events constantly 
event arrives handed new thread processes event web servers 
component listening events events handled parallel 
approach creating new thread event appropriate particularly designing 
widgets delivering small amounts context applications approach works 
streams context sent temperature sensor produces updates time temperature changes degrees approach may quite heavyweight 
alternative approach implement allow applications specify event handling policy creation new thread event just available policies 
obvious policy create single thread responsible handling streams context widgets 
alternative model event delivery model chosen context toolkit data flow model dey abowd wood fox 
data flow model widgets act sources context deliver context applications act context sinks 
widgets act filters delivering context application indicated interest 
interpreters aggregators act context sinks obtain context widgets context sources provide context applications aggregators 

discovery discovery mechanism context toolkit centralized 
uses single discoverer opposed federation discussed conceptual framework 
centralized mechanism chosen reasons simplicity suffers single point failure 
communications mechanism mechanism designed pluggable 
easily replaced standard sophisticated mechanism service location protocol working group ietf universal plug play universal plug play forum jini 
started widgets aggregators interpreters register discoverer known network address port 
discoverer pings registered component pre specified frequency ensure component functioning correctly 
component fails respond consecutive pings component removed registry components registered interest component notified 
addition components stopped manually notify discoverer longer available 
applications register discoverer 
application shut manually automatically unsubscribe widgets aggregators subscribed 
application crashes subscribed widgets aggregators continue attempt send data application 
response consecutive attempts application removed subscription list 

context services conceptual framework context services class components 
implementation framework chose incorporate services widgets 
widget responsible simply collecting data sensor widget ability perform analog gui interactors act environment transducer 
chose combine components widgets services logical functionality programmers 
example light widget application determine current lighting conditions specified location change lighting conditions lamps window blinds 
allows single component logically represent light room 
context toolkit built implementation conceptual framework supporting building execution context aware applications 
particular choices implementation clear limitations regards scalability goal supporting rapid prototyping applications outweighs need scalability time 
toolkit enabled prototype deploy number sophisticated context aware applications discuss section 
addition toolkit proven research testbed allowed explore difficult issues field context aware applications 
discuss issues section 

exploring space context aware applications identified relevant abstractions dealing context design corresponding components managing context context aware applications 
providing toolkit handles aspects context acquisition facilitate implementation context aware applications 
abstractions provide assume designers identify easily application requirements 
help step look actual abstractions defined suggest design process building contextaware applications 
discuss applications implemented context toolkit including conference assistant described section 
applications helped explore design space context aware applications validate conceptual framework implementation 
applications demonstrate context architecture reusable supports acquisition complex context simple location identity supports evolution context aware applications 

board context aware mailing list reuse simple widget applications built leverage context widget indicates arrival departure individual physical space 
describe application built 

board application description application board 
board built context toolkit located laptop entrance research lab 
displays status green red dot building occupants displays day time occupants entered left building 
longest running application serving users years 
web version board displays information standard version exception 
privacy reasons requests web version coming non georgia tech ip address provided occupant building seen system 
third version board application ran handheld windows ce device 
version location change meaning 
example user building building seen building seen interface 
user leaves building enters building building marked building previously listed listed building 
device location tied user application knows location user implicitly knows location 

standard web versions board application 
building application shows components build standard application web application 
location widget detects users enter leave research area 
implementations location widget 
version commonly detects user presence users explicitly dock dallas semiconductor ibutton tm dallas semiconductor reader 
widget uses docking event toggle user status entered left left entered 
second implementation uses radio frequency pinpoint id tm indoor rf positioning system pinpoint automatically detect user presence 
system users wear pager sized tags detected antennas distributed research labs 
tag range antennas user status set left 
technologies return id ibutton tag indicates user detected 
additional interpreter id name interpreter required convert id user name 
board web board location widget ibutton reader context aware mailing list id name interpreter board web board location widget pinpoint id context aware mailing list id name interpreter 
architecture diagrams board context aware mailing list applications ibutton readers pinpoint id location information 
standard application started queries widget current status users listed board 
uses information render board 
subscribes widget updates entering leaving events 
user arrives leaves widget detects event notifies subscribing application 
receiving notification application updates board display accordingly 
web version slightly different 
common gateway interface cgi script maintains state information 
script executed web browser queries widget current status users automatically generates html page containing status users requesting browser render 
requesting browser ip address control time information included generated web page 

context aware mailing list application description mail mailing lists useful way broadcasting information group people interested particular topic 
mailing lists source annoyance mail sent list relevant sub group list 
problem compounded sub group constituents dynamic 
context aware mailing list application delivers mail messages members research group 
differs standard mailing lists delivering messages members research group currently building 
application supports context aware feature automatically executing service 
building application shows context toolkit implement application 
widget interpreter board application 
application started queries widget find current status users 
application adds user currently building mailing list controlled standard mail program 
application subscribes widget updates entering leaving events 
user leaves building removed mailing list user enters building added mailing list 
message sent mailing list delivered members research group currently building 

toolkit support board context aware mailing list examples simple applications simple context 
applications required type context presence individual defined location allowing reuse context widget senses presence 
reuse context components eases development context aware applications 
built third prototype application reuses components information display 
simply displays information thought relevant user arrives building 
relevance decided research group user part 
just set simple components number interesting context aware applications easily built 
context component abstraction easy change underlying technology sense presence information 
able swap widget implementation entirely went ibutton technology pinpoint technology viceversa changing line code application 
addition technologies simultaneously application 
abilities allow easily evolve context aware systems terms sensing technologies prototype variety sensors 
applications context dealing users presence research laboratory 
context sensing environment lab contained single widget time provide information 
ideally multiple context widgets homogenous heterogeneous sensing technologies mouse keyboard activity office door opening intelligent floor available sense presence information lab 
applications obtained required context aggregator represented research lab 
applications code look different communicating aggregator widget applications enhanced able leverage multiple widgets insulated run time widget instantiations crashes 

dummbo evolution non context aware applications 
application description dummbo dynamic ubiquitous mobile meeting board existing system brotherton abowd truong chose augment 
dummbo instrumented digitizing whiteboard supports capture access informal spontaneous meetings 
captured meetings consist ink written erased whiteboard recorded audio discussion 
meeting participant access captured notes audio indicating time date meeting 

dummbo dynamic ubiquitous mobile meeting board 
front view dummbo 
rear view dummbo 
computational power whiteboard hidden board curtain 
initial version dummbo recording meeting initiated writing strokes erasing previously drawn strokes physical whiteboard 
starting audio capture writing began whiteboard discussion occurred writing started lost 
enable capture discussion augmented dummbo audio recording triggered people gathered whiteboard 
keeping track whiteboard capture location whiteboard able support sophisticated access captured material 
just time date locate access previously captured meetings users identities meeting participants number participants location meeting aid access 
screenshot dummbo access interface 
user specify information approximate time location meeting 
timeline month displayed days highlighted whiteboard activity day place 
interface indicates people board time 
month timeline hour timeline shows actual highlighted times activity selected day 
selecting session brings whiteboard looked start session 
user scroll forward backward time watch board update 
allows quick searching particular time meeting 
user access audio directly writing board request synchronized playback ink audio point timeline 
interface supports efficient intuitive method locating browsing captured meetings previously available 
application supports context aware features automatically executing service starting audio recording tagging context information retrieval 
playback controls filters ink written current time original color ink written current time original color current time session selected session selected day day containing whiteboard activity 
dummbo access interface 
user selects filter values corresponding 
dummbo displays days containing whiteboard activity 
selecting day highlight sessions recording day 
playback controls allow live playback meeting 

building application context architecture support dummbo application shown 
single location widget detect users mobile whiteboard 
multiple location widgets determine whiteboard located lab widget location dummbo moved 
application started subscribes location widgets 
single widget application uses detect users whiteboard application subscribes available events arriving leaving 
multiple widgets application uses determine location whiteboard application subscribes filtered events interested whiteboard arriving leaving particular location 
application receives notification widget people whiteboard starts recording information 
receives notification change whiteboard position augments meeting location tag associated meeting captured 
possible location mobile board location widget ibutton reader dummbo location widget ibutton reader 
context architecture dummbo application 

toolkit support id name interpreter context architecture mentioned previously dummbo existing application augmented context 
dummbo augmented original researchers built members research group researchers involved context toolkit 
researchers simply needed install context toolkit determine widgets interested instantiate widgets handle widget callbacks 
application required changing adding lines java code total lines main application class file modifications localized single class file 
significant modifications include lines added context toolkit widgets line modified enable class handle widget callbacks lines provided desired context aware behavior 
comparatively size context toolkit time lines java code 
supporting context programmers having add large amounts code context toolkit easier leverage context 
board context aware mailing list application multiple widgets 
widgets type providing presence information 
widgets underlying sensing technology 
widget different sensor application require changes 
application aggregator reduced number lines code required programmer 
aggregator represented mobile whiteboard collect location information presence widgets allowing application subscribe aggregator knowledge whiteboard location 
tradeoff reducing number lines application code creating aggregator whiteboard exist executing additional context component 

intercom complex context services 
application description homes intended facilitate conversations occupants distributed home 
standard drawbacks including need move particular location home wall mounted intercom unit carry handset intercom lack control directing communication occupant knowing location broadcasting lack knowledge callee status determine communication occur 
intercom application uses context acquired instrumented home facilitate way monitor broadcast twoway conversations communications address drawbacks kidd 
occupant home intercom application simply talking home 
example broadcast message occupants initiator say house announce house responds go ahead indicate understood request user continues dinner ready come kitchen audio announcement delivered occupied room house 
indicate announcement user says intercom parent wants intercom facilitate baby monitoring say house baby doing intercom delivers audio room baby room mother 
mother moves house audio baby room follows 
monitoring saying intercom occupant house wants initiate conversation person house say house want talk sam house responds telling occupant sam currently living room barbara asks occupant wants speak sam 
user really needs talk sam details conversation personal approves connection 
room sam approval automatic 
intercom application sets way audio routing occupant room living room 
conversation initiator sam change rooms conversation audio correctly re routed appropriate rooms 

building application context architecture support intercom application shown 
speech widget wrapped ibm ibm recognize users saying speaking house support text speech tts service allow house speak users 
ceiling mounted speakers placed room provide audio output users wore wireless microphones provide input house 
audio widget built audio switch supporting switch service enabled routing audio house 
location widget pinpoint positioning system determine users house 
room aggregators room house person aggregators occupant collect location information location widget 
discoverer room aggregator id name interpreter location widget pinpoint id intercom application person aggregator speech widget tts service 
architecture diagram intercom application 
audio switch audio widget switch service context architecture intercom application subscribes speech widget notified requests containing type connection caller callee intercom 
receiving request application queries person aggregator caller callee determine respective locations case conversation request queries room aggregator callee determine room 
application uses tts service switch service provide caller information ready hear announcement information people callee 
connection approved caller necessary switch service route audio appropriately depending type connection 
application subscribes relevant person aggregators notified caller callee changing rooms 
changes rooms switch service re route audio 
party enters room conversation occurring switch service executed party enters unused room 
application uses switch service connection notified speech widget conversation participants terminated call notified person aggregators participants room 

toolkit support intercom application fairly sophisticated context aware application built members research group include developers context toolkit 
displays context user indicating presence individual callee room automatically executes services context creating audio connections users re routing users move house 
application uses context simple location individual 
uses information users say location users status conversations house 
intercom application demonstrates aggregators simplify application development services allow actuation environment 
developers application able reuse location widget speech widget room person aggregators previously developed applications leaving audio widget application developed 
reuse components design implementation intercom system easier 

conference assistant complex context systematic design context aware application section describe detail abstractions introduced design methodology actual application built 
context aware application consider conference assistant 
illustrated scenario section 
implemented quite rich scenario differences deficiency context toolkit conceptual framework 
implemented scaled prototype proof concept test ideas dey 
simulate conference setting defined presentation areas laboratory area number colleagues act presenters areas colleagues act conference attendees 
methodology identifying context components application requirements details typical conference assistant show apply methodology particular example 
result process software architecture application 

identifying context components context components map nicely concepts introduced section 
section introduced entity categories places people objects section introduced categories context information 
design context aware application designers identify relevant entities categories context information identify entity relevant context attributes 
additionally designers specify requirements pieces context information 
requirements typically express desired frame units naming scheme quality service constraints desired coverage resolution location 
mapping rules provide straightforward way identify context components architecture 
context attribute context widget acquires required context information 

context entity aggregator collects context information entity context widgets 

applications obtain necessary context relevant context entities 

pieces context information provide higher level context information interpreters assure inference 

discrepancies occur requirements context attributes information provided sensors regard frames interpreters assure conversion frame 

applications receive context interested perform application specific behaviors available services environment 
available components environment meet needs application built application programmer implement missing components 
advantages building components abstractions adding functionality application ad hoc manner ease building leveraging existing components 
example build widget details specific instance created need provided programmer including descriptions context widget acquiring communicate sensor 
storage context support notification querying communications components automatically provided 
support reuse 
implementing functionality outside application multiple applications reuse new components time simultaneously shown section 
support evolution 
context aware application evolution occurs ways changing context application uses way context acquired behaviors executed application receives appropriate context 
described component abstractions applications change context changing specifications provide discoverer provide handle appropriate component section 
widget changes sensing technology uses acquire context applications widget affected need changed section 
application changes behaviors wants performed simply change service component uses 

conference setting desire build context aware applications deal wide variety context moving simple identity location led investigate complex setting rich sources context 
chose environment conference involves people multiple locations diverse collection activities 
performed informal study conference attendees conferences came list determine presentations demonstrations interesting relevant attend keep track colleagues order share relevant information take notes interesting presentations meet people doing interesting research 
conference assistant context aware application supports conference attendees performing tasks task supported subsequent version application 
conference setting dynamic environment context awareness offer 
described section context awareness allows conference assistant adapt changing context providing additional value added support tasks 

conference assistant user attending multi track conference 
registers receives handheld device runs conference assistant application 
starts application automatically displays copy conference schedule showing multiple tracks conference including tracks demonstration tracks 
schedule augmented highlighting certain papers demonstrations highlighted light gray indicate may particular interest user 
conference assistant compares user research interests provided registration text presentation find potential matches 

screenshot augmented schedule horizontal tracks 
screenshot comes handheld windows ce device resolution pixels 
user takes advice application walks room suggested presentation 
enters room conference assistant automatically displays name presenter title presentation 
indicates audio video recorded presentation 
presenter combination powerpoint tm web pages 
thumbnail current slide web page displayed handheld computer display 
conference assistant allows user create notes attach current slide web page 
presentation proceeds application displays updated slide web page information 
interest indicator user notes audio video indicator 
screenshot conference assistant note interface 
thumbnail user looks conference schedule notices colleagues attending presentations 
colleague daniel indicated high level interest particular presentation digital desk decides join 
display colleagues context supports type dynamic social collaborative filtering 
high interest medium interest low interest 
screenshot partial schedule showing location interest level colleagues 
symbols indicate interest level 
conference uses retrieval application running desktop computer retrieve information particular presentation 
application shows timeline conference schedule presentation demonstration tracks 
application uses context retrieval 
provides query interface allows user populate timeline various events arrival departure different rooms asked question people asked questions presentation particular keyword audio video recorded 
selecting event timeline user view slide web page time event text captured slide web page audio video recorded presentation slide personal notes may taken 
continue view current presentation moving back forth slides web pages 
schedule query interface retrieved slide web page captured slide web page text user notes video display 
screenshots retrieval application query interface timeline annotated events captured recorded audio video 
similar fashion conference conference presenter application retrieve information presentation 
application displays timeline presentation differing events populate timeline 
case events include different slides audience members arrived left presentation identities identities audience members asked questions slides relevant questions 
presenter re live presentation playing back audio video moving presentation slides web pages 

applying design methodology starting usage scenarios identify entities provide context information conference assistant application 
look context attributes requirements attribute 
examine choice sensors acquire specified context information 
derive software architecture application information context sources attributes 
identifying entities object oriented analysis ooa methods provide useful support identify objects 
objects users usually context entities 
case conference assistant attendees presenters interest 
places rooms conference assistant modeled context entities 
physical computational objects handled care candidates context entities objects highly dynamic 
conference schedule example conference track static objects qualify 
scenario account changes conference schedule obvious extension 
hand presentation current slide web page displayed presenter objects interest context modeling 
interest objects content wish capture annotate context information question asked attendee notes taken user 
identifying context attributes identified context entities look candidate context attributes entity 
ooa methods provide insight identifying attributes context entities corresponding objects 
decide attribute context related 
identify context related attributes context categories section guide 
entity attributes fit context categories interesting context attributes 
example attendee contact information interests colleagues derived identity 
room attendee currently stands location information 
time user moves room needed retrieval application shows user timeline whereabouts 
current level interest user falls status category 
presenter need name person identity 
comes room entity notice interesting 
room characterize location user location presentation held 
matter fact scenario involve attributes room se identity 
distinguish different rooms presentations held need identify rooms way 
imagine different application involve context attributes room 
example interested monitoring rooms time help planners edition conference 
case identify occupancy attribute room 
presentation concerned location room held 
current slide web page presentation identity slide number url secondary identity information title status information thumbnail shown user handheld scenario 
question user notes share attributes slide web page relate time question asked note taken interest 
question note contents captured annotated context information 
need able relate note slide web page display note timeline provided retrieval application 
similarly annotate questions time information slide web page question 
summarizes identification context entities context attributes conference assistant application 
entities attributes people attendee name contact info interests colleagues room times arrival departure level interest presenter name places room name things presentation room time slide number title thumbnail time web page url title thumbnail time question related slide web page time user notes related slide web page time 
context entities attributes conference assistant application 
attributes derived context types 
identifying quality service requirements look quality service constraints context attribute 
part analysis focus dynamic attributes 
names attendee presenter room name room presentation occurs particular challenges regard quality service 
set acquired application startup 
hand location user highly dynamic context attributes current slide web page level interest user 
user location available application user conference grounds 
require coverage user location space occupied conference 
space need contiguous 
demonstration setup lab areas opposite ends lab room corridor rooms tracks simulated conference held 
requirements strict resolution want able differentiate user location rooms visiting 
location user room useful scenario 
room level resolution sufficient 
extended application help conference attendees navigate different rooms higher level resolution required 
specify high accuracy reliability requirements incorrect missing user location seriously jeopardize usefulness conference assistant 
frequency timeliness requirements match expected behavior users 
expect attendees move normal pace rooms stay room minutes 
retrieval application allow users re live experience displays schedule resolution minutes 
user moves room want display immediately information presentation currently held room 
user accept delay couple seconds information displayed handheld 
consequence may set requirements frequency update second minimum timeliness second maximum 
context attributes slide web page user handheld device 
attached notes taken user 
coverage resolution apply slides context attributes 
partial coverage mean context information available application constrained slides color pictures titles shorter characters 
limited resolution mean example web page jump transmitted application 
course limited coverage limited resolution conference assistant 
require coverage best possible resolution 
set high requirements accuracy reliability similar reasons 
evaluate needs terms update frequency timeliness 
approximation set update frequency timeliness second 
want avoid glaring discrepancies display shown audience display handheld 
application deployed quality service requirements definitely need backed theoretical data user testing 
level interest set user chosen values low medium high 
level interest communicated colleagues user 
level interest discrete variable values required coverage resolution best available respectively 
similarly high accuracy required 
tolerate perfect reliability 
feature essential operation conference assistant 
frequency timeliness highest importance typical minutes acceptable 
choosing sensors stage analysis identified pieces context need acquire quality service requirements 
examine sensing techniques available context attribute quality service requirements choose appropriate set sensing techniques 
user location choice sensing techniques severely limited 
information current slide web page acquired inter application communication mechanisms com dcom 
level interest user input manually user 
techniques just practical setup 
computer vision techniques extract relevant information slide reliability may issue 
physiological sensors may able determine level interest reliability may issue intrusiveness sensors 
number techniques available acquiring user location 
considered olivetti active badges want dallas semiconductor pinpoint id systems satisfy requirements terms coverage resolution accuracy 
active badges users wear ir transmitting badges signal picked fixed receivers 
users carry devices dock explicitly indicate change location adding extends coverage room level resolution easily achieved 
pinpoint system users carry rf active tag signal received set antennas setup 
triangulation signals received antennas provides tag location 
set high requirements reliability systems potential drawbacks 
active badges require line sight badge reader installed indoors 
room potentially packed attendees guarantee transmission successful 
regard rf system pinpoint system preferable 
suffers potential reliability problems tag orientation crucial operation 
providing carefully designed tag holder alleviate problem 
suffer kind reliability problem operated manually user run risk users forget indicate change location 
experience pinpoint system satisfy frequency timeliness requirements 
summary analysis pinpoint system appropriate requirements 
complexity involved initial setup pinpoint system led prototype 
provide significant advantage pinpoint system providing users control disclosing location system 
motivated users want collaborate colleagues want take advantage advanced services require user location provide location 
systems provide slightly different information 
pinpoint system provides identity tag numeric id zone number zone map defined statically 
dock provides identity docking ibutton numeric id attach location information dock 
deriving software design derive software design analysis context entities attributes apply rules introduced section 
map entities aggregators context attributes context widgets identify need interpreters infer context information 
model conference assistant application consists entities attendee presenter room presentation slide web page 
entities number attributes 
mapping rules software design application contains aggregator component entity context widget attribute entity 
apply produce aggregators widgets sections software components list shown 
aggregators attendee presenter room presentation slide web page widgets name attendee room attendee times departure arrival attendee level interest attendee name presenter name room room presentation number slide title slide thumbnail slide url web page title web page thumbnail web page current slide question time question current slide user note time user note interpreters tag id name attendee zone id room attendee ibutton id name attendee 
software components derived conference assistant 
entity name parentheses indicates entity attribute relates 
conference assistant application complex context inference 
need interpreters information acquired ibutton pinpoint sensors 
assume may sensing technologies life cycle application 
consequence need interpreters hand transform ibutton id attendee name hand transform tag id zone id provided pinpoint system attendee room names 
show list components shown simplified examine tradeoffs involved 
consider aggregators provide single piece context information acquired directly context widget presenter room presentation 
aggregators intended aggregate information multiple sources aggregator source information limited usefulness 
aggregator removed software design 
gain simplicity implementation performance 
main drawback concerns extensibility 
new context attributes presentation entity number attendees interest added aggregator new attributes easier access 
result remove presenter room presentation aggregators application interact directly respective widgets 
attributes entity clearly static expected usage period application need acquired context widgets 
result name widget associated room aggregator removed room name change 

model reality conference assistant implementation actual conference assistant application developed articulated design method just followed 
application helped gain experience design context aware applications 
interesting look actual implementation conference assistant compare design produced approach 
original design produced slightly compact architecture expense modularity 
main differences software design previous paragraph actual design conference assistant application due factoring 
actual implementation kinds factoring occurred 
entities similar slide web page entities factored single widget 
second logically related entities context attributes implemented single aggregator widget 
example single aggregator called presentation implements presentation entity result factoring slide web page 
similarly context attributes slide web page acquired single widget called content 
attendee entity context attributes factored moment acquired 
contact information interests acquired registration time registration widget 
room attendee enters leaves corresponding times acquired location widget 
result software design fewer components shown 
modularity traded simplicity implementation 
shows implemented software architecture conference assistant application 
component type responsibility attendee aggregator aggregates information user presentation aggregator aggregates information presentation registration widget acquires contact info interests colleagues location widget acquires location arrivals departures users content widget acquires title url slide number thumbnail slide web page question widget acquires audience questions relevant presentation info memo widget acquires user notes relevant presentation info record widget acquires audio visual presentation info name interpreter transforms ibutton id user name 
actual components responsibilities conference assistant implementation 
record widget camera microphones question widget software presentation space content widget software presentation aggregator location widget ibutton reader 
conference assistant context architecture 
conference assistant user aggregator memo widget software user colleague recommend interpreter registration widget gui context architecture prototype conference assistant application implemented deployed tested laboratory presentation rooms handheld devices 
deploying real conference environment scalability implemented architecture needs tested 
addition great obstacle real deployment large infrastructure requirement detecting indoor location providing ubiquitous communications supplying handheld devices conference attendees 
application interesting complex terms context uses useful testing context toolkit ideas design context aware applications 
example application design highlighted major benefits approach 
break design series manageable steps outcome clearly defined 
way context abstractions shield application designers irrelevant technical details underlying architecture 
map high level components facilitate description complex applications 

applications summary previous sections described applications built context toolkit help explore space context aware applications 
applications standard context location identity time user activity 
applications supported types context aware behaviors displaying context board dummbo intercom conference assistant automatically executing service available context board context aware mailing list dummbo intercom conference assistant tagging captured information context retrieval dummbo conference assistant 
applications described conceptual framework implementation context toolkit facilitate design implementation context aware applications 
particular conference assistant application describe identify context components application requirements construct software design 
demonstrated context aware applications reuse abstraction components toolkit applications evolved different underlying sensing technology change context context aware applications acquire complex forms context useful ways 
section discuss related architectures middleware support building context aware applications 

related frameworks past years number frameworks pieces middleware developed support different aspects ubiquitous computing 
developed specifically deal context aware computing generic focus 
general systems address issues terms acquiring handling action context 
learned systems result constructed conceptual framework implementation 
section discuss related systems 

context aware frameworks frameworks built proposed supporting context aware applications 
frameworks influential complementary research provide complete support set required features section 
schilit system architecture ph thesis schilit system architecture supported context aware mobile computing schilit 
architecture support context aware computing influential research 
helped identify important features context context awareness identify difficult problems building context aware applications 
schilit focused making contextaware computing applications possible build 
focuses making applications easier build 
difference focus begins delineate research differs 
schilit architecture supported gathering context devices users 
main components system device agents maintain status capabilities devices user agents maintain user preferences active maps maintain location information devices users schilit theimer 
architecture support provide guidelines acquisition context 
device user agents built individual basis tailored set sensors 
difficult evolve existing applications changing applications context changing set underlying sensors 
addition architecture support context interpretation storage leaving applications implement features 
stick notes stick notes system general framework supporting non programmers building context aware applications brown 
research looking supporting acquisition delivery context research complementary focuses support application designers context perform context aware behaviors 
provides general mechanism indicating context application designer wants provides simple semantics writing rules stick notes specify actions take particular combination context realized 
group notes rules collected form stick document 
context aware application consists document stick note architecture 
previous research context aware computing built architecture called dey abowd wood 
architecture built automatically integrate web services virtual context context derived electronic world 
virtual context personal information user interacting screen including email addresses mailing addresses dates names virtual context infer activity user involved order display list relevant web services 
limited types context handle contained mechanisms believe necessary general context aware architecture 
applications simply specified context types interested notified context types available 
modular architecture supported automatic interpretation automatically interpreting individual multiple pieces context produce entirely new set derived context 
architecture supported abstraction context information aggregation combination context information 
moved away architecture support multiple simultaneous applications centralized mechanism support querying storage context 
context location aware information service architecture designed support context aware applications nelson 
performed solve problems ad hoc nature sensor lack fine grained location information management system 
abstraction developed hide details sensors context aware applications 
similar schilit architecture little support aid developers adding new sensors architecture architecture support storage context interpretation context leaving application developers provide mechanisms individual basis 
supported distributed context sensing provided query notification mechanisms 
interesting feature composite events able subscribe combination events 
example application request notified event occurred event occurred intervening events 
powerful mechanism acquisition analysis context easier application developers 
cooltown cooltown infrastructure supports context aware applications representing real world object including people places devices web page 
web page dynamically updates gathers new information entity represents similar aggregator abstraction 
cooltown primarily aimed supporting applications display context services users 
example user moves environment see list available services environment 
request additional information execute services 
cooltown infrastructure provides abstraction components urls sensed information web pages entities discovery mechanism building types applications easier 
designed support interpretation low level sensed information 
focuses displaying context intended support context aware features automatically executing service context tagging captured information context 
situated computing service situated computing service proposed architecture similar supporting context aware applications hull bedford roberts 
insulates applications sensors acquire context 
situated computing service single server responsible context acquisition abstraction 
provides querying notification mechanisms accessing relevant information 
single prototype server constructed proof concept single sensor type success difficult gauge 
situated computing service provides support acquiring sensor information delivering 
context information service context information service cis proposed architecture supporting context aware applications pascoe 
implemented level contains interesting features 
supports interpretation context choosing sensor provide context information quality service guarantee 
contrast situated computing service promotes tight connection applications underlying sensors application dependent approach system building 
cis maintains object oriented model world real world object represented object set predefined states 
objects linked relationships close 
example set nearby printers specified close relationship user range printers candidate object 
set dynamically updated user moves environment 

relevant middleware previously described infrastructures including context toolkit contain specific components support acquisition handling context 
number pieces middleware addressing context address similar issues supporting multiple applications multiple users multiple devices multiple sources data 
discuss middleware approaches including abstractions agents tuple spaces 
abstractions project pederson metadesk system ullmer ishii provided widget abstractions dealing physical sensors 
project attempted provide peripheral awareness remote colleagues information 
object oriented architecture concepts sensor abstraction interpretation 
playing role application synthesizers take awareness information display 
provide support adding new sensors context types sensor abstraction easier replace sensors 
metadesk system platform demonstrating tangible user interfaces 
graphical user interface widgets interact system users physical icons manipulate information virtual world 
system sensor proxies separate details individual sensors application 
system architecture supported distribution namespaces mechanism allow simple runtime evolution applications 
interpretation sensed information left individual applications 
agents adaptive agent architecture kumar cohen levesque hive minar metaglue coen agent middleware supporting multimodal applications ubiquitous computing environments 
agents abstractions represent sensors services 
adaptive agent architecture sensor data available agent representing places data centralized blackboard 
application needs handle user input agent representing translates input places results blackboard 
applications indicate information agents 
useful data appears blackboard relevant applications agents notified agents pass data respective applications 
blackboard provides level indirection applications sensors effectively hiding details sensors 
similarly hive metaglue mobile agents acquire information environment distribute applications 
agent approach implement conceptual framework number concepts added including ability interpret aggregate store context information 
tuple spaces limbo davies javaspaces sun microsystems tspaces wyckoff tuple space infrastructures original linda tuple space 
tuple spaces offer centralized distributed blackboard items tuples placed retrieved 
tuple spaces provide abstraction layer components place tuples components retrieve tuples 
abstraction meets separation concerns requirement provide support interpretation aggregation persistent context storage essential requirements context aware computing 

conceptual framework research testbed section described context toolkit design implement context aware applications 
toolkit addresses lot basic requirements context aware applications number research issues address facilitate design development types applications 
context toolkit research testbed explore number issues including representation acquisition context privacy ambiguity sensed data higher level programming abstractions 

representation acquisition context categories section provide rough useful breakdown context information 
finer taxonomy context information serve major purposes better support design providing checklist context application may need acquire 
support easier implementation allowing developers provide standardized library context components 
pursue parallel guis gui applications today take advantage standard components encapsulate complex interactions user 
similarly context aware applications rely standard components provide context information environment 
achieve general usable way provide interesting useful applications simple rule automata expect tackle difficult issues knowledge modeling representation 
uses context envision require applications capable maintaining basic dynamic model real world 
includes model environment suggested harter 
brumitt 
detailed models entities environment 
able example signal user milk passing grocery store suggest interesting activity town weekend requires accumulated knowledge user interests whereabouts social situation available meaningful application 
requires moving environmental context traditional contextaware research include general context sensed directly environment user interests shared knowledge social relationships users environment user example 
context toolkit currently address type context provides support acquiring delivering available 

privacy computational capabilities environments growing legitimate concern technologists spending intellectual cycles social implications 
hope 
context aware computing holds promise providing mechanisms support social concerns 
example context tag captured information may intrusion individual privacy want meet room records say context protect concerns individuals providing computational support establish default access control lists information captured lau etzioni weld limiting distribution attendance 
took approach initial exploration handling privacy concerns nguyen 
context collected context widget assigned owner 
owner specifies set rules indicating context seen situations 
example may provide family member complete access schedule allow colleague view schedule working hours allow strangers see times busy 
component application wants access context widget authenticate standard public private key encryption 
component authorized full access context context owner rules context delivered usual 
component authorized partially authorized access context information partial information delivered 
complete solution obviously holds potential explored context toolkit 

ambiguity context data assumption application development context sensing accurate 
obviously false assumption difference actual context context sense 
real need deal difference results inaccurate ambiguous context 
complementary approaches addressing issue passing ambiguity applications attempting disambiguate context automatically attempting disambiguate context manually 
application specify accuracy context needs context sensing infrastructure 
infrastructure supply necessary context specified accuracy provides context measure accurate infrastructure unable meet accuracy requirements notify application available accuracy allow application decide course action request context lower degree accuracy disregard context example 
second approach data multiple sensors available improve accuracy available context 
multiple homogeneous sensors remove noise sensing techniques 
multiple heterogeneous sensors offset failures exist 
example computer vision tends poorly low lighting conditions affected electromagnetic interference environment 
rf sensors operate level accuracy lighting conditions susceptible electromagnetic interference 
process multiple sensors disambiguate sensor information context called sensor fusion brooks iyengar 
course limits currently acquire sensors infer 
gap ability sense infer sensor fusion completely alleviate problem third approach dealing ambiguous inaccurate sensor data approach explored provide interface allows user manually disambiguate dey mankoff abowd mankoff abowd hudson 
hiding user fact application inaccurate data application notify user multiple possible alternatives interpreting sensor data 
user chooses ignore ambiguity application choose default alternative 
user chooses actively select alternatives application proceed chosen alternative 
addition notify context sensing architecture chosen alternative allow applications context information take advantage manually disambiguated context 

higher level programming abstractions context toolkit allows programmer model world instrumented sensors 
context widgets map sensors context aggregators map people places objects real world 
model matches real world quite forces programmers think design applications terms individual component abstractions 
allow programmers higher level abstractions sit top component abstractions 
higher abstraction easier programmer expense having information temporarily hidden programmer 
investigated situations higher level programming abstraction dey abowd 
situation collection context data may may accessed individual component context toolkit 
example user may want access pieces context individual 
information easily acquired individual aggregator 
user may want know stock broker arrives office share price particular stock risen certain value user free time call broker 
information acquired single component acquired multiple components analyzed determine situation occurred 
typically steps left application programmer perform 
allowing programmer specify complex situation real world event having infrastructure automatically collect analyze context multiple components programmer job easier 

context aware computing infancy 
attempted clarify notion context laid foundations design development context aware applications 
defined broad categories entities capable providing context information identified basic categories context 
separation concerns guiding software engineering principle built classification introduce abstractions encapsulate common context operations 
abstractions form conceptual framework supporting context aware applications map directly components context toolkit 
variety applications implemented demonstrated context toolkit design build context aware applications supports reusability components evolution applications acquisition complex context 
introduced structured design approach helps identifying context abstractions leads software design 
demonstrated approach design complex context aware application intended conference attendees 
outlined research issues exploring context toolkit enable elaborate realistic context aware applications 
issues dealing impact context aware computing go social problems raised 
ultimately authentic experience context aware computing everyday lives help learn impacts individuals groups 
main contribution context aware toolkit infrastructure seen bootstrapping mechanism encourage creative explore emerging applications area 
killer application cause widespread context aware computing 
killer existence able demonstrate coordinated intelligent interaction everyday activities computational services 
notes background 
article phd thesis author 
information context toolkit described including gaining access research development please contact authors visit web page www cc gatech edu fce 
acknowledgments 
members computing environments fce group georgia tech continued influence development ideas context aware computing 
particular jennifer mankoff original insights lead analogy gui widgets context 
support 
supported part national science foundation career iri experimental systems software eia university partnerships research program motorola sponsorship dr ron dr ken 
authors addresses 
anind dey gregory abowd college computing gvu center georgia institute technology atlanta ga phone email anind abowd cc gatech edu 
daniel salber ibm watson research center saw mill river road hawthorne ny email salber acm org hci editorial record 
supplied editor abowd atkeson hong long kooper pinkerton 

cyberguide mobile context aware tour guide 
acm wireless networks 
arons 

design audio servers toolkits supporting speech user interface 
journal american voice society 
bauer segall 

collaborative wearable system remote sensing 
proceedings nd international symposium wearable computers iswc 
los alamitos ca ieee 
bederson 

audio augmented reality prototype automated tour guide 
proceedings chi conference human factors computing systems 
new york ny acm press 
beigl 

location remembrance appliance 
personal technologies 
brooks iyengar 

multi sensor fusion fundamentals applications software st ed 
englewood cliffs nj prentice hall 
brotherton abowd truong 

supporting capture access interfaces informal opportunistic meetings git gvu 
atlanta ga georgia institute technology gvu center 
brown 

stick document framework creating context aware applications 
proceedings electronic publishing 
austria ifip 
brown chen 

context aware applications laboratory marketplace 
ieee personal communications 
brumitt shafer krumm meyers 

easyliving role geometry ubiquitous computing 
proceedings darpa nist nsf workshop research issues smart computing environments atlanta ga 

creating web representations places 
proceedings nd international symposium handheld ubiquitous computing huc heidelberg germany springer verlag 
coen philips 

meeting computational needs intelligent environments metaglue environment 
proceedings st international workshop managing interactions smart environments heidelberg germany springer verlag 
dallas semiconductor 
ibutton home page 
web page available www ibutton com 
davies wade friday blair 

limbo tuple space platform adaptive mobile applications 
proceedings international conference open distributed processing distributed platforms 
toronto canada 
davies mitchell cheverst blair 

developing context sensitive tour guide 
proceedings st workshop human computer interaction mobile devices glasgow scotland 
dey 

context aware computing project 
proceedings aaai spring symposium intelligent environments 
menlo park ca aaai press 
dey abowd wood 

framework providing self integrating context aware services 
knowledge systems 
dey salber abowd 

conference assistant combining context awareness wearable computing 
proceedings rd international symposium wearable computers iswc 
los alamitos ca ieee 
dey salber abowd 

context infrastructure smart environments 
proceedings st international workshop managing interactions smart environments 
heidelberg germany springer verlag 
dey 

providing architectural support building context aware applications 
unpublished phd thesis georgia institute technology 
dey abowd 

better understanding context contextawareness 
proceedings workshop context awareness affiliated chi conference human factors computer systems new york ny acm press 
dey abowd 

context aware system supporting reminders 
proceedings nd international symposium handheld ubiquitous computing huc 
heidelberg germany springer verlag 
dey mankoff abowd 

distributed mediation imperfectly sensed context ubiquitous computing environments git gvu 
atlanta ga georgia institute technology gvu center 
dourish edwards lamarca lamping petersen salisbury thornton terry 

extending document management systems active properties 
acm transactions information systems 
feiner macintyre webster 

touring machine prototyping mobile augmented reality systems exploring urban environment 
personal technologies 
fels sumi simonet mase 

progress map context aware mobile assistant 
proceedings aaai spring symposium intelligent environments 
menlo park ca aaai press 
fox 

framework separating server scalability availability internet application functionality 
unpublished phd dissertation university california berkeley 
franklin 

gadget representation jack dull environment 
proceedings aaai spring symposium intelligent environments 
menlo park ca aaai press 


generative communication linda 
acm transactions programming languages systems 
harrison fishkin want 

squeeze hold tilt exploration manipulative user interfaces 
proceedings chi conference human factors computer systems 
new york ny acm press 
harter hopper steggles ward webster 

anatomy contextaware application 
proceedings th annual acm ieee international conference mobile computing networking mobicom 
new york ny acm press 
healey picard 

cybernetic wearable camera 
proceedings nd international symposium wearable computers iswc 
los alamitos ca ieee 
heiner hudson tanaka 

information ambient information display decorative object 
proceedings th annual acm symposium user interface software technology uist new york ny acm press 
hertz 

web page available www hertz com serv prod lost html 
hinckley pierce sinclair horvitz 

sensing techniques mobile interaction 
appear proceedings th annual acm symposium user interface software technology uist new york ny acm press 
hull bedford roberts 

situated computing 
proceedings st international symposium wearable computers iswc 
los alamitos ca ieee 
ibm 
ibm voice systems home page 
web page available www ibm com software speech 
ishii ullmer 

tangible bits seamless interfaces people bits atoms 
proceedings chi conference human factors computing systems 
new york ny acm press 
fox 

dynamic mediation integrate cots entities ubiquitous computing environment 
proceedings nd international symposium handheld computing huc heidelberg germany springer verlag 
kidd connell nagel patil abowd 

building better intercom context mediated communication home 
git gvu 
atlanta ga georgia institute technology gvu center 
kumar cohen levesque 

adaptive agent architecture achieving fault tolerance persistent broker teams 
proceedings th international conference multi agent systems icmas 
los alamitos ca ieee 
lamming flynn 

forget intimate computing support human memory 
proceedings friend international symposium generation human interfaces 
tokyo 
lau etzioni weld 

privacy interfaces information management 
communications acm 
macintyre feiner 

language level support exploratory programming distributed virtual environments 
proceedings th annual acm symposium user interface software technology uist 
new york ny acm press 
mankoff abowd hudson 

providing integrated toolkit level support ambiguity recognition interfaces 
proceedings chi conference human factors computer systems 
new york ny acm press 
schmandt 

location aware information delivery commotion 
proceedings nd international symposium handheld ubiquitous computing huc heidelberg germany springer verlag 
mccarthy 

visualization tool location awareness support informal interactions 
proceedings st international symposium handheld ubiquitous computing huc heidelberg germany springer verlag 
mccarthy 

support peripheral awareness events 
proceedings nd international symposium handheld computing huc heidelberg germany springer verlag 
minar gray maes 

hive distributed agents networking things 
ieee concurrency 
mynatt back want baer ellis 

designing audio aura 
proceedings chi conference human factors computing systems 
new york ny acm press 
nelson 

context aware location systems 
unpublished phd dissertation university cambridge 
nguyen mynatt 

dynamic door displays 
web page available cc gatech edu htm 
pascoe 

adding generic contextual capabilities wearable computers 
proceedings nd international symposium wearable computers iswc 
los alamitos ca ieee 
pascoe ryan morse 

human computer giraffe interaction hci field 
proceedings workshop human computer interaction mobile devices glasgow scotland 
pederson 

representation presence supporting mutual awareness 
proceedings chi conference human factors computing systems 
new york ny acm press 
pinpoint 
pinpoint id 
web page available www com products products title htm 
rekimoto 

tilting operations small screen interfaces 
proceedings th annual acm symposium user interface software technology uist 
new york ny acm press 
rekimoto 

time machine computing time centric approach information environment 
proceedings th annual acm symposium user interface software technology uist new york ny acm press 
rhodes 

wearable remembrance agent 
proceedings st international symposium wearable computers iswc 
los alamitos ca ieee press 
rodden cheverst davies dix 

exploiting context hci design mobile systems 
proceedings workshop human computer interaction mobile devices glasgow scotland 
ryan pascoe morse 

enhanced reality fieldwork context aware archaeological assistant 
exxon 
eds 
computer applications archaeology 
salber dey abowd 

context toolkit aiding development context enabled applications 
proceedings chi conference human factors computer systems 
new york ny acm press 
schilit adams want 

context aware computing applications 
proceedings st international workshop mobile computing systems applications 
los alamitos ca ieee 
schilit theimer 

disseminating active map information mobile hosts 
ieee network 
schilit 

system architecture context aware mobile computing 
unpublished doctoral dissertation columbia university 
schmidt tuomela laerhoven velde 

advanced interaction context 
proceedings st international symposium handheld ubiquitous computing huc 
heidelberg germany springer verlag 
schmidt rvi 

context aware telephony wap 
personal technologies 
schwartz kahle neuman 

comparison internet resource discovery approaches 
computer systems 
sun microsystems 
jini connection technology home page 
web page available www sun com jini 
sun microsystems 
javaspaces technology 
web page available www javasoft com products javaspaces index html 
working group ietf 
service location protocol home page 
web page available www org 
ullmer ishii 

metadesk models prototypes tangible user interfaces 
proceedings th annual acm symposium user interface software technology uist 
new york ny acm press 
universal plug play forum 
universal plug play forum home page 
web page available www upnp org 
want hopper falcao gibbons 

active badge location system 
acm transactions information systems 
ward jones hopper 

new location technique active office 
ieee personal communications 
weiser 

computer st century 
scientific american 
weiser brown 

coming age calm technology 
denning metcalfe 
eds 
calculation years computing 
new york springer verlag 
wyckoff lehman ford 

spaces 
ibm systems journal 

