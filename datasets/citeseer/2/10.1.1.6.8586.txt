kolmogorov structure functions application foundations model selection vereshchagin paul vitanyi kolmogorov proposed non probabilistic approach statistics individual combinatorial relation data model 
time original structure function proposed kolmogorov minimizing data model code length finding ml estimator mdl estimator class contemplated models prescribed maximal kolmogorov complexity results model best fit expressed minimal randomness deficiency 
show structure function minimum randomness deficiency function assume shapes full domain improving old result levin old 
determine un computability properties various functions algorithmic sufficient statistic 
mathematical innovation extraordinary scientific career kolmogorov proposed statistical theory finite combinatorial principles independent probabilistic assumptions 
relation individual data explanation model expressed kolmogorov structure function 
function variations relation model selection obtained comprehensively analyzed understood 
questioned kolmogorov chose focus mysterious function hx evident variant 
main result beauty truth justifies kolmogorov intuition 
easily stated consequence data minimizing part code consisting part model description part data model code essentially celebrated mdl code supported part russian federation basic research fund 
done visiting cwi 
department mathematical logic theory algorithms faculty mechanics mathematics moscow state university gory moscow russia 
email ver mech math msu su 
supported part eu fifth framework project ist noe ist esf qit eu fourth framework bra neurocolt ii working group ep 
address cwi kruislaan sj amsterdam netherlands 
email paul vitanyi cwi nl 
subject model complexity constraint minimizing part code consisting just data model code essentially maximum likelihood estimator case high probability selects model best explanation log jxj accuracy data model complexity constraint 
notion best explanation best fit understood sense data typical selected model rigorous mathematical sense discussed lack typicality model measured randomness deficiency 
practical consequence follows approximate log jxj accuracy best fitting model 
means existence algorithm outputs finite sequence pairwise different computer programs length log jxj program prints model best sense 
program length prints model randomness deficiency log jxj constant 
note able find algorithm non halting know program output 
kolmogorov initial proposal models finite sets finite binary strings data strings discrete data binary encoded 
restriction finite set models just matter convenience main results generalize case models arbitrary computable probability density functions model class consisting arbitrary total recursive functions see 
probabilistic statistics goodness selection process measured terms expectations probabilistic ensembles 
current applications average relations irrelevant part support probability density function observed zero measure 
may case example complex video sound analysis 
arises problem individual cases selection performance may bad performance average vice versa 
problem probability means subjective objective exists 
kolmogorov proposal strives contentious ground finite combinatorics effective computation 
kolmogorov complexity prefix codes informally kolmogorov complexity algorithmic entropy string length number bits shortest binary program string compute fixed universal computer particular universal turing machine 
intuitively represents minimal amount information required generate effective process 
conditional kolmogorov complexity xjy relative defined similarly length shortest program compute furnished auxiliary input computation 
formally consider special type turing machine way input tape separate tape way output tape 
turing machines called prefix turing machines 
machine halts output having scanned input tape call program self delimiting code word easy see fp prefix code 
precise definitions notation results see text 
functions 


defined terms particular machine model machine independent additive constant acquire asymptotically universal absolute character church thesis ability universal machines simulate execute effective process 
express property needed introduce notation denote kolmogorov complexity string encoding pair fixed correspondence pairs strings strings furthermore stand encoding pair 
celebrated symmetry information property yjx xjy additive constants customary area additive constant equivalently additive term mean constant accounting length fixed binary program independent variable parameter expression occurs 
kolmogorov structure functions prove close relation functions describing priori seemingly unrelated aspects modeling individual data 
need definition 
denote complexity finite set length number bits shortest binary program universal prefix machine computes listing elements halts 
fx xng xn xn 
finite set containing xjs log jsj 
consider code consisting dlog bit long index lexicographical ordering code called data model code 
lack typicality respect amount xjs falls short length data model code 
randomness deficiency defined xjs log jsj xjs 
minimal randomness deficiency function min xjs set min 
xjs small may considered typical member means best model explanation 
simple special properties single majority elements just terminology xjs small satisfies properties low kolmogorov complexity hold high probability elements precise consider strings length subset strings 
property satisfied xjs holds probability elements 
ii property holds probability elements holds simultaneously xjs jn 
kolmogorov proposed function kolmogorov structure function hx data defined hx min flog jsj contemplated model nonnegative integer value bounding complexity contemplated 
clearly kolmogorov structure function non increasing reaches log number bits required change fxg 
log jsj consider part code part shortest self delimiting program second part dlog bit long index lexicographical ordering determines log jsj code self delimiting obtain constant length program reconstruct part code 
conclude hx function hx decreases fixed independent constant diagonal sufficiency line defined lower bound hx approached constant distance graph hx certain instance 
hx model corresponding witness hx called sufficient statistic minimal suggestive nomenclature explained 
length minimal part code consisting model cost length index complexity upper bounded mdl function min log jsj total length part code help model apart convenient technical analysis celebrated part minimum description length code length example model code length restricted example 
lossy compression function relevant lossy compression instance compress images assume need compress bits 
course implies loss information way select redundant information discard follows find set small xjs consider compressed version reconstruct selects random element xjs small obtain effectively indistinguishable items ii 
serves purpose message 
look example 
transmit picture rain channel limited capacity transmit indication picture rain particular drops may chosen receiver random 
interpretation indicates random typical respect best model complexity level indistinguishable original randomly reconstructed expected 
background related kolmogorov proposed combinatorial non probabilistic approach individual data model relation part codes separating structure meaningful information string meaningless accidental features 
written version apart lines reproduce example rely oral history witnesses says cover remember long hours trying understand motivation kolmogorov approach 
peter kolmogorov drew picture hx function monotonically approaching diagonal sufficiency line 
kolmogorov stated known proved levin cases remained far diagonal line till 
levin kolmogorov told hx inverse am sure asked behave 
proved log monotone arbitrary accuracy stabilizes exceeds halting 
expression accuracy kolmogorov re wording gave elegant equivalent terms log number jumps 
remember kolmogorov defining suggesting result 
published topic believe strings significant halting exist world 
related called non stochastic objects hx drops large 
established randomness deficiency function assume possible shapes obvious constraints jxj 
survey kolmogorov information theory authors preferred mention definition optimizes best fit hx usefulness meaningfulness mysterious 
kolmogorov seldom intuition show original proposal hx proper sense incorporates desirable properties fact superior 
notion algorithmic sufficient statistics derived kolmogorov structure function suggested algorithmic approach probabilistic notion sufficient statistic central classical statistics 
investigates algorithmic notion detail formally establishes relation 
algorithmic minimal sufficient statistic related minimum description length principle statistics inductive reasoning 
observed hx establishing sided relation question raised converse holds 
fundamental result equality hx holds logarithmic additive terms argument value 
additionally set witnesses value hx witnesses value vice versa 
easy see hx upper semi computable definition show upper lower semi computable 
priori reason suppose set witnesses hx witnesses fact kolmogorov original proposal establishes hx pre result taken foundation justification common statistical principles model selection maximum likelihood mdl examples 
possible coarse shapes functions hx examined section 
roughly stated structure functions hx assume possible shapes full domain definition additive logarithmic precision argument value 
improves extends result improves independent related result levin applied snooping curves extends result example 
computability properties examined section incidentally proving knowledge natural example function semi computable computable oracle halting problem 
page limitations omit proofs various results concerning realization fine shape details sufficient statistic 
full available xxx lanl gov abs cs cc coarse structure defined hx defined 
functions may constant 
represent coarse shape functions different functions characteristic shape 
informally represents means graph contained strip logarithmic length width centered graph 
formal statements rely notion definition 
informally obtain results length complexity non increasing function represents function represented provided function non increasing represents hx function hx represented provided non increasing property 
hx represents conversely minimal size set complexity log randomness deficiency xjs log 
log 
structure function strip determined 
provide precise statements need definition 
definition 
functions defined kg values 
say close symbols jj ij jj ij 
write small values log consider data length note definition symmetric allows arbitrary values 
transitive sense close close close linear continuous meaning jg jj constant difference bounded notion closeness applied unrestricted meaningful 
example take function value odd 
function 
non increasing gives information instructive consider example 
equal constant 
function may take value value value value see 
point discontinuity gives interval size large ambiguity loosely speaking graph line contained strip radius middle line graph definition immediately implies properties non increasing lemma shows properties translate directly properties hx hx close lemma 
hx 
hx 
proof 
sketch 
inequality hx immediate 
suffices prove hx 
witness 
hx log jsj assume partition equal size parts select part containing log js log jsj cost increasing complexity mjk specify part containing index parts 
choosing jk appropriate constant obtain log js log jsj jk 
lemma implies set witnessing hx witnesses additive term 
converse true smallest cardinality set witnessing 
restriction counter example random set witnesses witness hx 
theorems state main results precise form 
mean minimum length program outputs computes domain 
theorem 
string length complexity integer valued non increasing function defined 
ii conversely non increasing integer valued function domain includes length complexity 
proof 
observe length witnessed extreme witnessed fxg 
define equation maxf satisfies requirements item theorem 
ii fix satisfying conditions theorem 
suffices show string length 

inequality implies 
claim 
length string length domain 
proof 
fix length belongs set total number elements different second inequality follows 
prove item ii demonstrating lexicographically defined claim satisfies 
suffices construct set cardinality complexity 
fixed run algorithm set variable initially containing strings length set variable initially containing strings lexicographical order 
run programs length dovetail style 
time program length halts defined prints set cardinality remove elements call step happens step 
time empty step replace contents set strings lexicographical order current contents possibly replacement incomplete elements left easy see just final replacement stays forever programs dovetailing process may running elements may eliminated 
claim 
contents set replaced times 
proof 
types replacements treated separately 
case replacement current contents step element removed current contents trivially number type replacements bounded number steps number programs length case replacement current contents elements current contents removed steps estimate number type replacements element removed step belongs set 
cumulative number elements removed steps bounded inequality follows 
replacements second type happen times 
claim stabilizes certain number steps 
number may large 
number replacements small 
final set cardinality specified number replacements resulting current contents claim 
shows 

theorem implies function function satisfies conditions item ii hx 

proof theorem shows function satisfying conditions item ii ijn conditional structure function log jsj ig 
consequently function function satisfies conditions item ii hx ijn conditional structure function hx jsj ig 

proof item ii theorem consider finite set ju place set strings length obtain string 
central result shows equivalently hx lemma expressed logarithmic additive error 
theorem 
length complexity holds log 
proof 
statement theorem easily follows inequalities valid respectively length second log log log satisfying convenient rewrite formula defining xja symmetry information follows xja log jaj ajx log ajx log ad easy set witnessing xjs log log xjs 
ad difficult 
suffices prove lemma 
ajx log log jsj log jaj log means dlog 
witnessing set witness log log 
remains note log jaj xja log provided 
proof 
fix 
task log ja jx enumerate family jx log different sets log jsj log ja cover covered sets ajy jx log jaj log ja complexity enumerated exceed jx log log ja jx jx log lemma proved 
proof running algorithm log ja jx run programs dovetail style 
maintain auxiliary set variables initially 
time new program length dovetailing process halts output set log jaj log ja execute steps step update step update fy covered jx different generated sg log defined 
step step executed covered different generated 
enumerate new disjoint sets needed cover just chop parts size log ja part may incomplete name parts new sets time new set enumerated update claim 
string element enumerated number enumerated jx log proof 
way contradiction assume element enumerated 
jx different generated sets satisfies ajx jx log jx chosen appropriately 
certainly generated contradiction 
remains show enumerated jx log different 
step executed executions step step executed times 
step executed jx times 
number formed incomplete parts step jx bound number formed complete parts 
total number elements different generated log ja counting multiplicity 
number elements union having multiplicity jx log ja jk jx formed complete part set step accounts log ja 
number formed complete parts jx corollary 
length complexity non increasing function log 
conversely non increasing function length complexity log 
proof 
part immediate 
part theorem prove second part second part theorem second part theorem 
see proof theorem complexity log minimizing holds xjs log 
ignoring log terms see complexity level best hypothesis level respect best respect typicality 
explains worth find shortest descriptions data single known way find respect typical possible complexity level 
note set fhx ijx xjs enumerable able generate directly section 
converse true hypothesis consisting finite set witnessing witnesses hx 
example strings length respectively 
fyg witness log log log log log js hx log log 
decreases witness set witness set hx 
call critical respect model complexities part mdl code length decreases stable critical points 
measure criticality function sx defined follows sx maxf function sx decrease speed growth small positive measures criticality slower sx increases critical 
critical close close specifically sx 
theorem shows critical xjs log jsj hx 
theorem 
constant holds 

xjs log 
log jsj hx sx 
sx 
example 
snooping curves logarithmic loss notion snooping curve lx introduced expressing minimal logarithmic loss predicting consecutive elements individual string prediction preceding sequence elements best prediction strategy complexity formally lx min 
minimum taken prediction strategies complexity prediction strategy mapping set strings length jxj set rational numbers segment 
value regarded belief probability observed actual bit strategy suffers loss log log 
strategy finite object may defined complexity object minimum size program identifies jxj finds 
notation indicates total loss sum losses jxj log jp 
result describes possible shapes lx 
show lemma 
lx log hx log lemma theorem describe coarse shape possible snooping curves proof 
finite set binary strings length identified prediction strategy having read prefix outputs jay jay ay stands number strings having prefix easily seen induction log jaj jay log jaj corresponds sense ja obtain lx log hx 
term log required initial set complexity contain strings different lengths need know get rid strings lengths different 
conversely assume fx mg 
jxj loss proof induction loss conclude elements 
log obtain hx log lx 
example 
foundations mdl consider algorithm minimum description length principle 
data explain maximum allowed complexity explanation search programs length print finite set pairs possible explanations 
programs unknown computation time certain possible explanations 
unknown moment case number possible explanations finite 
best explanation defined xjs minimal 
function xjs computable find best explanation xjs directly 
overcome problem indirect method mdl jpj log jsj currently minimum said currently best hypothesis 
initially currently best hypothesis changes time time due appearance better hypothesis 
hypothesis declared best twice moment onwards explanation declared best change anymore 
witnesses 
theorem xjs log log 
log worse best hypothesis complexity log 
chosen jump interval log little worse best hypothesis complexity example 
foundations maximum likelihood algorithm ml principle similar algorithm previous example 
difference currently best log jsj minimal 
case limit hypothesis witness hx obtain corollary xjs log log 
example 
positive negative individual randomness existence strings established essentially singleton set consisting string minimal sufficient statistic 
sufficient statistic object yields part code short shortest code restricting complexity allowed statistic may yield part codes considerably longer best part code statistic insufficient 
happens non stochastic objects 
fact object complexity bound happens bound small logarithmic call object stochastic simple satisfactory explanation sufficient statistic 
kolmogorov full text important distinction object random negative sense having bound high high complexity typical elements model object random positive probabilistic sense having bound small having complexity considerably exceeding bound string length typical set set complexity log 
corollary establishes length complexity maximal complexity length length complexity minimal randomness deficiency log log log log 
set length strings complexity partitioned subsets strings kolmogorov minimal sufficient statistic complexity log log 
instance length non stochastic strings maximal complexity having significant log randomness deficiency respect fact finite set complexity log 
translation levin kolmogorov constructive object corresponds function natural number log minimal cardinality containing sets allow definitions complexity element allows simple definition function drops small lacking definition element random negative sense 
positively probabilistically random function having taken value relatively small changes approximately 
computability questions difficult compute functions hx minimal sufficient statistic 
express properties appropriately require notion functions computable approximated monotonically computable function 
definition 
function upper semi computable turing machine computing total function lim 
means computably approximated 
upper semi computable lower semi computable 
function called semi computable upper semicomputable lower semi computable 
upper semicomputable lower semi computable call computable recursive domain integer 
semi computability gives speed convergence limit value monotonically approximated know stage process close limit value 
functions hx finite domain table formally speaking computable 
issue algorithm computes functions considering argument functions show quantify functions hx upper semi computable computable 
algorithm finds hx 
function upper lower semi computable compute oracle halting problem 
algorithm finds minimal sufficient statistic structure function easy see hx upper semi computable run programs length fashion check halting program produced finite set containing replace previous candidate new set smaller 
question function function arguments computable 
course case find large string complexity know string applying algorithm strings lexicographical order find obviously 
known prove sufficiently large 
assume 
argument statement remains true computable algorithm 
assume algorithm required output correct answer approximation 
show algorithm find close 
theorem 
constant constant holds 
algorithm infinitely length log jk kj log finds log log algorithm required approximate precise value 
able prove case algorithm compute 
impossible approximate complexity minimal sufficient statistic 
formulate result precisely consider promise problem input 
output log 
cases occurs algorithm may output value value 
assume log algorithm required output simultaneously 
theorem 
algorithm infinitely solves promise problem jxj log corollary 
algorithm finds integer valued function jxj log jxj 
algorithm solve promise problem jxj log jxj log answering 

replace promise problem prefix complexity plain complexity modified problem strengthen theorem allowing constant depends computer 
discussion results andrei muchnik suggested proved bigger complexity minimal sufficient statistic compute domain 
result underlines significance information contained minimal sufficient statistic theorem 
constant algorithm finds nonincreasing function defined log minf log kg 
randomness deficiency function function computable oracle halting problem run programs length fashion find finite sets containing produced 
respect sets determine conditional complexity xjs randomness deficiency xjs 
minimum find 
things possible information halting problem determine program terminate 
case function upper semicomputable logarithmic error follows semi computability theorem 
subtle semi computable large margin error theorem 
function lower semi computable precision jxj ii upper semi computable precision jxj log jxj 
open question 
non increasing respect upper semi computable function fx fx log jxj jxj 
compare statistical hypotheses explain take account parameters xjs log jsj 
parameter simplicity theory explaining data 
difference xjs log jsj xjs randomness deficiency shows typical data respect sum log jsj reflects short total part code data theory simply full length index ignore non typicality 
define worse explanation symbols xjs xjs 
note equivalent saying xjs xjs log js log js 
relation implies vice versa 
eager define set ax triples hk xjs component wise order relation triples 
results theorems describe completely log accuracy possible shapes closely related set bx consisting triples set xjs 
sets ax bx minimal triples informally say results describe completely possible shapes set triples hk xjs non improvable hypotheses explaining previously characterization obtained possible shapes projections bx coordinates case jxj 
results describe possible shapes entire set bx full domain log accuracy 
nonincreasing integer valued function fh kg length complexity bf bx bf hc log log log ni universal constant conversely length complexity log holds hc log log log results imply set bx computable computable major result finite set witnesses hx minimizes log cardinality set containing complexity simultaneously witnesses minimizes randomness deficiency respect set containing complexity 
addressed non computability hx validity extended models kolmogorov analyzed canonical setting models finite sets 
kolmogorov pointed real restriction finite sets model class equivalent logarithmic additive term model class probability density functions studied 
analysis valid logarithmic additive terms model class total recursive functions studied 
model class computable probability density functions consists set functions 
computable means turing machine tp positive rational computes precision 
prefix complexity computable possibly partial function defined min fk turing machine computes pg string typical distribution randomness deficiency xjp log xjp small 
conditional complexity xjp defined follows 
say function approximates ja positive rational 
xjp minimum length program function approximating oracle prints similarly optimal log data model code length log jsj finite set models consider data model code length log shannon fano code 
value log measures hypothesis mapping 
pmin pmin minimizes log maximum likelihood estimator 
results imply maximum likelihood estimator returns hypothesis minimum randomness deficiency 
model class total recursive functions consists set computable functions defined argument 
prefix complexity total recursive function defined min fk turing machine computes pg place log jsj finite set models consider data model code length xg 
string typical total recursive function randomness deficiency xjp xjp small 
conditional complexity xjp defined minimum length program oracle prints similarly optimal proposition 
finite set computable probability distribution function log log jsj xjp xjs total recursive function log jsj xjp xjs 
proof 
define jsj 
fx xm define xd mod proposition 
constants string holds computable probability distribution function finite set log jsj log xjs xjp log log total recursive function finite set log jsj xjs xjp lx lx proof 
log define fy jsj implies claimed value log jsj 
list suffices compute consecutive values sufficient precision combined probabilities exceed 
xjs log jsj xjs log xjs xjp xjp xjs xjp xjp 
define fy jdj log jsj 
list suffices compute argument length equal 
lx 
upper bound xjs derived just way proof item 

large nonconstant additive complexity terms proposition strings length 
item commonly interested log log 
minfk ng log xjp xjp log log minf log ng 
defined follows un un stands uniform distribution additive terms item log 
item commonly interested log 
minfk ng log xjp xjp log ng 
defined follows maps strings additive terms item log 
sense results hold finite set models extend logarithmic additive term computable probability density function models total recursive function models 
results hold additive logarithmic term anyway means equivalently hold model class computable probability density functions model class total recursive functions 
acknowledgment harry buhrman andrei muchnik marcus hutter helpful discussions tom cover peter leonid levin historical details kolmogorov original proposal structure function early seventies unpublished subject 
author questioned result theorem known muchnik answered negatively supplied independent proof 
suggested proved theorem 
barron rissanen yu minimum description length principle coding modeling ieee trans 
inform 
theory 
cover kolmogorov complexity data compression inference pp 
impact processing techniques communications ed nijhoff publishers 
cover attending email pv january 
cover gray kolmogorov contributions information theory algorithmic complexity ann 
probab 
cover thomas elements information theory wiley new york 
fisher mathematical foundations theoretical statistics philosophical transactions royal society london ser 

symmetry algorithmic information soviet math 
dokl 
correction ibid 
attending email pv january 
tromp vitanyi 
algorithmic statistics ieee trans 
inform 
theory 
gao li vitanyi applying mdl learn best model granularity artificial intelligence 
levin 
emails pv february 
li vitanyi kolmogorov complexity applications springer verlag new york nd edition 
kolmogorov approaches quantitative definition information problems inform 
transmission 
kolmogorov 
complexity algorithms objective definition randomness 
talk moscow math 
soc 
meeting 
available mat 
nauk translation section 
kolmogorov talk information theory symposium estonia 
martin lof definition random sequences inform 
contr 
rissanen universal prior integers estimation minimum description length annals statistics 
kh 
shen concept stochasticity kolmogorov sense properties soviet math 
dokl 
kh 
shen discussion kolmogorov complexity statistical analysis computer journal 
vitanyi li minimum description length induction bayesianism kolmogorov complexity ieee trans 
inform 
theory 
vitanyi meaningful information proc 
isaac lncs springer verlag berlin 
xxx lanl gov abs cs cc defect randomness finite object respect measures complexity bounds siam theory probab 
appl 
algorithmic complexity stochastic properties finite binary sequences computer journal 

snooping help 
theoret 
comput 
sci 
wallace freeman estimation inference compact coding royal stat 
soc series discussion ibid 

