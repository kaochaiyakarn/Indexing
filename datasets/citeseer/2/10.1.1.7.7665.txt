daml web service description semantic web daml coalition ankolekar mark burstein jerry hobbs ora lassila david martin drew mcdermott sheila mcilraith srini narayanan massimo paolucci terry payne katia sycara bbn technologies carnegie mellon university nokia research center sri international stanford university yale university 
daml daml oil ontology describing properties capabilities web services 
web services web accessible programs devices great deal interest industry standards emerging low level descriptions web services 
daml complements ort providing web service descriptions application layer describing service just 
describe aspects ontology service pro le process model service grounding 
focuses grounding connects ontology low level xml descriptions web services 
services semantic web semantic web rapidly reality development semantic web markup languages daml oil 
markup languages enable creation arbitrary domain ontologies support unambiguous description web content 
web services web accessible programs devices important resources web provide information user enable user ect change world :10.1.1.21.61
web services great deal interest industry standards developed low level descriptions web services 
languages wsdl web service description language provide communication level description messages protocols web service 
complement ort interest developing semantic markup sit application level wsdl describe sent wires just sent 
developing daml oil ontology web services called daml objective making web services computer interpretable enabling tasks discovery locating web services typically registry service provide particular service adhere speci ed constraints invocation activation execution identi ed service agent service interoperation breaking interoperability barriers semantics automatic insertion message parameter translations clients services composition new services automatic selection composition interoperation existing services veri cation service properties execution monitoring tracking execution complex composite tasks performed service set services identifying failure cases providing explanations di erent execution traces :10.1.1.21.61:10.1.1.21.61
web service software agent needs computer interpretable description service means accessed 
describes collaborative ort bbn technologies carnegie mellon university nokia stanford university sri international yale university de ne daml web services ontology 
earlier version daml speci cation described updated version daml www daml org services daml 
brie summarize update speci cation discuss important problem grounding translate sent message service sent 
particular linking daml web services description language wsdl 
daml complements wsdl providing application level description lacking wsdl 
upper ontology services daml oil categories entities events de ned terms classes properties 
daml de nes set classes properties speci description services daml oil 
class service top daml ontology 
service properties level general 
upper ontology services silent particular subclasses service conceptual basis structuring taxonomy expected taxonomy structured functional domain di erences market needs 
example imagine broad subclass transaction encompass services purchasing items retail web sites tracking purchase status establishing maintaining accounts sites 
ontology services provides essential types knowledge service characterized questions service require agents provide 
provided pro le class describes capabilities parameters service 
say class service presents serviceprofile 

answer question model class describes ow possible execution paths service 
class service servicemodel serviceprofile provides information service agent determine service meets rough needs satis es constraints security locality quality requirements contrast servicemodel enables agent perform depth analysis service meets needs compose service descriptions multiple services perform speci task coordinate activities di erent agents monitor execution service 
generally speaking serviceprofile provides information needed agent discover service servicemodel provides information agent service 
sections discuss service pro le service model greater detail introduce service grounding describes agents communicate invoke service 
service pro le service pro le provides high level description service provider request advertise services discovery services capability registries :10.1.1.21.522
service pro les consist types information description service service provider functional behavior service functional attributes tailored automated service selection 
pro le includes high level description service provenance typically users browsing service registry see table 
class actor de ned describe entities humans organizations provide request web services 
speci classes derived actor class service requester class class represent requester provider service respectively 
properties actor include name phone email fax 
functional attributes specify additional information service guarantees response time accuracy provides cost service classi cation service registry naics 
implicitly service pro les specify intended purpose service specify functional behaviors publicly provided 
book selling service may involve di erent functionalities allows clients browse site nd books interest allows buy books nd 
book seller choice advertising just book buying service may advertise browsing functionality 
case service fact agents may browse buying book 
contrast advertising book selling functionality service discourages browsing requesting agents intend buy 
service providers de ne advertisements services service pro le service requesters pro le specify needs expectations instance provider advertise service provides quotes ticker symbol requester may look service reports current market prices stock quotes 
services advertise pro les internet wide discovery services middle agents registries uddi match service requests advertised table :10.1.1.126.670
description properties functional attributes 
description properties servicename name service 
high level description constitutes typical successful execution service 
brief human readable description service summarizing service ers capabilities requested 
role link actors involved service execution 
sub property role referring service requester 
sub property role referring service provider 
functional attributes geographic scope service global scale commerce regional scale pizza delivery 
quality quali cations providing cheapest fastest possible service 
expandable list properties characterize execution service 
high level summary service may communicate communication language kqml soap 
broad classi cation service described ontology service types categories de ned service category ontology 
categories may include products information services guarantees service promises deliver guaranteeing provide response minutes industry ratings dun rating businesses 
pro les identify services provide best match service requests constructed partial service pro le descriptions matched pro les advertised services stored registries daml oil subsumption relations 
advertisements requests di er sharply level detail level abstraction terms 
matches generally recognized service advertised subsumed particular case service description requested 
service representation daml richer representation provided emerging standards uddi wsdl 
uddi description service include capability description limiting name pointer provider service port access service 
addition uddi allows services refer tmodels link service technical speci cations classi cation schemes 
possible ask uddi services wsdl scheme services provide requested functionality 
wsdl despite repeated uddi daml research multi agent systems may variety di erent registries protocols 
speci cation de nes formats query interactions service provide model semantics exchanges 
daml service pro les similarities service description languages emerging multi agent interaction community larks oaa :10.1.1.31.3660
languages daml focus representation service nd service 
daml improves service locating models advantage daml oil ontologies inferential capabilities greatly enhance possibility locating relevant services 
modeling services processes web services web accessible programs devices 
operation described terms process model details control structure data ow structure service possible steps typically initiated messages sent client required execute service 
process model comprises subclasses properties class 
chief components process model process ontology describes service terms inputs outputs preconditions ects appropriate component subprocesses process control ontology describes process terms state including initial activation execution completion 
version process ontology released current version daml support automated web service invocation composition interoperation 
process control ontology useful automated execution monitoring released 
de ned ontology resources simple ontology time described publications 
expect process ontology serve basis specifying wide array services 
developing ontology drew variety sources including ai planning languages programming languages distributed systems emerging standards process modeling ow technology nist process speci cation language psl ow management coalition ort modeling verb semantics event structure ai modeling complex actions agent communication languages multi agent infrastructure nally previous action inspired web service markup :10.1.1.21.61
primary kind entity process ontology unsurprisingly process 
basic process class associated properties 
process number inputs representing information conditions required execution process 
number outputs information process provides conditionally execution 
inputs outputs important type parameter speci es participants process 
number preconditions hold order process invoked 
process www org wfmc number ects side ects world result execution program 
outputs ects conditions associated 
range properties upper ontology level thing left totally unrestricted 
service applications speci range restrictions cardinality restrictions 
anticipate cases range properties subclasses class formed formulae logical language ontology de ne daml oil 
daml distinguish atomic simple composite processes 
atomic processes directly exchanging messages service subprocesses execute single step perspective service requester 
requester sends single message receives back single message making service 
atomic processes provide grounding enables service requester construct invocation message interpret response message 

simple processes hand directly associated grounding 
atomic processes conceived having single step executions 
simple processes elements processes simple process may provide view specialized way atomic process simpli ed representation composite process purposes planning reasoning 
case simple process atomic process case simple process expands composite process 

composite processes decomposable non composite composite processes 
decompositions speci ed control constructs sequence table 
decompositions show things control structure associated composition processes input output data ow composition 
property control structure composite indicated 
control construct turn associated additional property called components indicate ordering conditional execution subprocesses control constructs composed 
instance control construct sequence components property ranges list items restricted processes control constructs 
process upper ontology included minimal set control constructs specialized describe variety web services 
process viewed di erent levels granularity primitive process black box view composite process glass box view 
composite process viewed black box simple process represent 
case relationship simple composite represented expand property inverse collapse property 
table 
process constructs construct description sequence execute list processes sequential order concurrent execute elements bag processes concurrently split invoke elements bag processes split join invoke elements bag processes synchronize unordered execute processes bag order choice choose alternatives execute speci ed condition holds execute execute 
repeat iterate execution bag processes condition holds 
repeat iterate execution bag processes condition holds daml ontology provides set distinguished classes properties describing content capabilities web services 
daml oil language speci ed de ned semantics expressive power daml oil sucient restrict daml intended interpretations 
developed proposals model theoretic execution semantics daml descriptions 

approach provides model theoretic semantics describing intended interpretation daml expressive rst order logic language 
provide operational semantics representation translated distributed operational semantics high level petri nets 
allowed determine complexity important decision procedures reachability deadlock various subsets daml process language 
approach functional core language describe daml constructs 
concurrent interleaving strict operational semantics daml de ned provides formal basis daml execution model 
proposals allow translate daml speci cations executable process model simulation veri cation composition daml described services 
grounding service concrete realization grounding service speci es details access service details having mainly protocol message formats serialization transport addressing 
grounding thought mapping concrete speci cation service description elements required interacting service purposes inputs outputs atomic processes 
note daml le servicemodel conceived representations deals concrete level speci cation 
daml content message speci ed implicitly input output properties atomic process 
atomic processes addition specifying primitive processes larger processes composed thought communication primitives process speci cation 
concrete messages speci ed explicitly grounding 
central function daml grounding show inputs outputs atomic process realized concretely messages carry inputs outputs speci format 
industry long way adopting concrete message speci cation 
crafting daml grounding mechanism web services description language wsdl particular speci cation language proposal representative orts area strong industry backing 
wsdl xml format describing network services set endpoints operating messages containing document oriented information 
operations messages described abstractly bound concrete network protocol message format de ne endpoint 
related concrete endpoints combined endpoints services wsdl extensible allow description endpoints messages regardless message formats network protocols communicate 
daml concept grounding generally consistent wsdl concept binding 
extensibility elements provided wsdl new extensibility element proposed easy matter ground daml atomic process 
section show may done relying wsdl speci cation 
relationships daml wsdl approach described allows service developer going provide service descriptions potential clients take advantage complementary strengths speci cation languages 
hand side service speci cation developer bene ts making daml process model expressiveness daml oil class typing mechanisms relative xml schema provides 
hand concrete side developer bene ts opportunity reuse extensive done wsdl related languages soap software support message exchanges declarations de ned date various protocols transport mechanisms 
emphasize daml wsdl grounding involves complementary languages way accord intentions authors wsdl 
languages required full speci cation grounding 
languages cover conceptual space 
indicated gure languages overlap area providing speci cation wsdl calls types turn characterize inputs outputs services 
wsdl default speci es types xml schema daml allows binding soap process model atomic process dl types inputs outputs message operation daml wsdl fig 

mapping daml wsdl de nition types description logic daml oil classes wsdl xsd unable express semantics daml oil class 
similarly daml means currently de ned express binding information wsdl captures 
natural daml wsdl grounding uses daml oil classes types message parts declared wsdl relies wsdl binding constructs specify formatting messages daml wsdl grounding correspondences daml wsdl 
shows rst 

daml atomic process corresponds wsdl operation 
di erent types operations related daml processes follows atomic process inputs outputs corresponds wsdl request response operation 
atomic process inputs outputs corresponds wsdl way operation 
atomic process outputs inputs corresponds wsdl noti cation operation 
composite process outputs inputs sending outputs speci ed coming reception inputs corresponds wsdl solicit response operation xml schema primitives de ne daml oil properties 
daml oil classes de ned wsdl types section de ned separate document referred wsdl description 
remainder exposition describe approach 
composite process grounding construct grounded indirectly means relationship simple process collapse property atomic process property mentioned section 
considering create new kind atomic process daml corresponds directly solicit response operation 

set inputs set outputs daml atomic process corresponds wsdl concept message 
precisely daml inputs correspond parts input message wsdl operation daml outputs correspond parts output message wsdl operation 
note wsdl allows input output message associated operation 
accord decision independently daml grounding map inputs single message similarly outputs 

types daml oil classes inputs outputs atomic process correspond wsdl extensible notion type may wsdl speci cations message parts 
job daml wsdl grounding rst de ne wsdl messages operations atomic process may accessed specify correspondences 
logically necessary believe useful specify correspondences wsdl daml 
indicated allow constructs languages purpose 
grounding daml services wsdl soap daml xml language atomic process declarations input output types nicely wsdl easy extend existing wsdl bindings daml soap binding 
subsection indicate brie arbitrary atomic process speci ed daml grounding wsdl soap assumption chosen transport mechanism 
grounding daml wsdl soap involves construction wsdl service description usual parts message operation port type binding service constructs types element normally omitted 
daml extensions introduced follows 
part wsdl message de nition daml property attribute indicate fully quali ed name daml input output property part message corresponds 
property name appropriate daml range class class object message part contain easily obtained 

wsdl operation element daml process attribute indicate name daml atomic process operation corresponds 

wsdl binding element attribute value www daml org daml oil daml indicate message parts serialized normal way class instances types speci ed version daml 
having completed wsdl service description object constructed daml speci cation refers speci elements wsdl speci cation properties uri indicates version wsdl 
list uris indicating relevant standards employed wsdl code soap mime 
list uris wsdl document give grounding 
uri wsdl operation corresponding atomic process 
object containing uri wsdl message definition carries inputs atomic process list mapping pairs indicate correspondence particular daml input properties particular wsdl message parts 
similar outputs 
short walk daml nal section walk small daml example restrict illustrating aspects process model relate service grounding 
walk utilizes example ctitious book buying service 
service collection smaller congo programs web accessible composed form program 
complete speci cation daml please refer daml document daml comprises ontologies daml oil march markup language 
example refer pro le ontology process ontology ontologies de ne classes properties form foundation service description 
describe particular service specialize classes properties creating subclasses subproperties speci service 
step describe individual programs rst step marking web service describe individual programs comprise service 
process model provides declarative description program properties 
process model program atomic process simple composite process 
non decomposable web accessible program described atomic process 
atomic process characterized ability executed single call returns response 
example atomic process program takes input name book returns description book price book congo catalogue 
simplest way atomic process subclassof construct follows 
detailed example www daml org services 
www daml org services daml daml html www daml org services daml pro le daml www daml org services daml process daml associated process set properties 
program function metaphor process parameters associated 
types parameters daml properties input conditional output de ned process ontology 
example input name book 
subpropertyof construct 
inputs mandatory optional 
contrast outputs generally conditional 
example search book congo catalogue output may detailed description book congo carries may sorry don carry message 
outputs characterized conditional outputs 
describe conditional output range output class called subclass thing 
turn properties condition output 
unconditional output zero cardinality restriction condition 
example conditional output output conditional book congo catalogue 
book congo catalogues output message ect conditional outputs specializing process ontology subclassof subpropertyof 
provide markup illustrate relations 
designation inputs outputs enables programs services describing daml automated web service invocation 
order enable programs services automated service composition additionally describe side ects programs exist 
describe precondition conditional ect properties program 
described analogously inputs outputs 
step describe grounding atomic process relate grounding 
class need say instance invocation class instance property value property de ned process daml 
nontrivial applications range output restricted subclasses logical formed formulae 
atomicprocess output condition thing subclassof subpropertyof domain range property fig 

conditional ouput daml example daml grounding instance 
example 
com uris refer constructs corresponding wsdl document shown 
www org tr note wsdl schemas org wsdl soap schemas org soap example com congo wsdl rdf resource example com wsdl rdf resource example com wsdl rdf resource example com wsdl bookname message map elements rdf resource example com wsdl similar 
space precludes inclusion steps walk 
step describe compositions atomic processes 
example describe composite process composition step optional step describe simple process service 
certainly pro le description perform step 
pro le description provides declarative advertisement service 
partially populated process model exists step service description 
daml upper ontology describing web services written daml oil 
aspects daml service pro le process model service grounding focus 
service grounding critical successful deployment daml provides connection semantic web approach emerging industry standards web service description wsdl demonstrating daml complementary mainstream industry orts 
acknowledgments pro ted discussions number people notably including jim hendler 
research funded defense advanced research projects agency part darpa agent markup language daml program air force research laboratory contract sri international stanford university carnegie mellon university 
additional funding provided nokia research center nokia mobile phones 

ankolekar huch sycara 
concurrent semantics web services speci cation language daml 
proc 
coordination conf 

berners lee hendler lassila 
semantic web 
scienti american 

bureau 
north american industry classi cation system naics 
www census gov www naics html 

christensen curbera meredith weerawarana 
web services description language wsdl 
www org tr note wsdl 

daml coalition ankolekar burstein hobbs lassila martin mcilraith narayanan paolucci payne sycara zeng 
semantic markup web services 
proc swws pages 

decker sycara williamson 
middle agents internet 
ijcai 

finin labrou may eld 
kqml agent communication language 
bradshaw editor software agents 
mit press cambridge 

ghallab pddl planning domain de nition language 
tech report cvc tr dcs tr yale university 

hendler mcguinness 
darpa agent markup language 
ieee intelligent systems 

lassila 
serendipitous interoperability 
hyv editor semantic web proc 
kick seminar finland appear 

levesque reiter lesperance lin scherl 
golog logic programming language dynamic domains 
journal logic programming april june 

martin cheyer moran 
open agent architecture framework building distributed software systems 
applied arti cial intelligence 

mcdermott burstein smith 
overcoming ontology mismatches transactions self describing agents 
proc 
swws pages 

mcilraith son 
adapting golog composition semantic web services 
proc 
kr 
appear 

mcilraith son zeng 
semantic web services 
ieee intelligent systems 

meseguer 
conditional rewriting logic uni ed model concurrency 
theoretical computer science 

milner 
communicating mobile agents pi calculus 
cambridge university press cambridge 

narayanan 
reasoning actions narrative understanding 
proc 
ijcai pages 


narayanan mcilraith 
simulation veri cation automated composition web services 
proc www appear 

gruninger valois lee 
process speci cation language psl overview version speci cation 
nistir national institute standards technology gaithersburg md 

paolucci payne sycara 
semantic matching web services capabilities 
int 
semantic web conf appear 

payne singh sycara 
browsing schedules agent approach navigating semantic web int 
semantic web conf appear 

sycara klusch 
brokering matchmaking coordination agent societies survey 
coordination internet agents 

sycara klusch lu 
dynamic service matchmaking agents open information environments 
journal acm sigmod record 

uddi 
uddi technical white 
www uddi org 


wong sycara 
taxonomy middle agents internet 
icmas 
