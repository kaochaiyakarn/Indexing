resource allocation networked application binary integer programming bao hua liu sanjay jha chun tung chou pradeep ray university new south wales university email cse unsw edu au elec edu au ray unsw edu au enterprise wide distributed computing systems dcs inherently stochastic performance management distributed applications running top dcs complex computationally hard task 
enterprise wide distributed application single process running specific computer multiple processes components running entire network 
components application dependent relationships communicate provide services users 
define enterprise distributed application provide queueing analysis relationship application level performance parameters network computer system parameters 
provide binary integer programming bip model case study allocate components application enterprise local area network 
index terms binary integer programming bip distributed application distributed computing system markovian system queuing networks 
enterprise wide distributed computing systems dcs inherently stochastic performance management distributed applications running top dcs complex computationally hard task 
allocation distributed applications enterprise wide dcs design underlying infrastructure networks systems combinatorial optimization problem involves multiple conflicting objectives high flexibility high performance low delay high utilization low cost high performance minimal remote communication 
current turn information technology telecommunication industry efficient performance management business applications enterprise infrastructure critical success business 
technological progress evolution add complexity performance management distributed applications 
business applications longer single programs multi tiered components running entire networks 
detailed discussion distributed application 
definition distributed application combination objects processes dependencies communicate provide service users 
example distributed application running enterprise environment process flows shown 
application components form distributed application running enterprise lans 
processes web server acts corba client middle tier corba naming service corba server backend database 
process flows denote operation application communicates resolve name corba server returns naming context passes request corba server interacts database query update operation returns results forwards results 
process flows drawn diagram include client request forwarding final response client 
proper operation example requires application components network components lan lan lan system components cooperate communicate seamlessly 
example expanded fault tolerant dynamic load balancing group 
object process may needed object fails fault tolerant group needed client load demands dynamic load balancing group 
group configurations interdependency interrelationship objects quite complex 
lan lan fig 

distributed application provide stochastic analysis combined queueing models relationships application level performance parameters network computer system parameters single class system 
provide binary integer programming bip model case study allocate components application enterprise local area network lan 
objective minimize application response time optimized deployment distributed application components 
contribution lies areas systematic mapping application level response time computer system parameters cpu disk speed memory usage network parameters router latency link bandwidth binary integer programming model allocation distributed application components minimize response time application 
outline follows 
section ii presents related 
section iii defines application network model corresponding design parameters 
section iv provides detailed analysis mapping application response time network computer parameters 
section provides binary integer programming model objective function 
section vi shows case study model 
section vii summarizes research lan directions 
ii 
related stumbling blocks distributed application management mapping correlating application performance computer system network parameters 
literature survey shows limited research systematic mapping 
methodology data mining techniques historical data collected network monitor agents mapping analysis 
tse au described methodology graphically characterize response time existing database application function network tunable latency client server environment 
substantial research done resource allocation dcs 
bhattacharjee elaborated integrated approach resource planning allocation distributed computing system iterative stage design pattern includes domain creation resource allocation middleware service selection 
proposed scheme effective distribution object oriented applications 
proposed approach requires comprehensive exploitation information available design stage includes phases distribution 
defined model distributed applications developed binary integer programming bip model minimize remote communication bandwidth application 
earlier research includes efficient phase heuristic algorithm solve wan dcs design problem studied important models database allocation computer networks 
resource allocation new research area enormous new challenges emerging continuous evolution technologies business models 
research indicated dcs stochastic systems models stochastic approach 
differs look complete system focusing particular distributed application applied wide range networked applications 
iii 
distributed application network models section define model distributed application underlying computer system network 
define corresponding measurement parameters model 
network modeled nodes connections 
nodes include computers network switching apparatus routers bridges 
connection links pair nodes direct link indirect multiple links nodes 
nodes distribute application components dedicated server machines 
call dedicated server machines distributing nodes 
distributing nodes assume connection route route connection interchangeably exists pair nodes 
nodes may connected switching nodes routers bridges links 
link described bandwidth data rate 
switching node described latency represents time taken switching node process packet datagram 
parameter usually provided vendors microseconds packet datagram 
define listed parameters model 
note service time mentioned include queueing time 
distributing node cpu speed described cp 
parameter practice 
cpu service time specific application component directly 
see 
memory size described 
node limited memory size 
average disk time described average service time execute disk operation 
network components link described bandwidth bl 
router described router latency 
application component application component requires size node memory run time 
average cpu time component node described sai 
sai denotes average service time execute transaction job component node ka denotes average number visit disk component execute transaction job 
application component requires zero visits disk execute transaction job 
disk service time component node calculated ka 
network dedicated distributed application 
define parameters describe status network distributing nodes deployment application 
parameters listed 
distributing node current cpu utilization cp 
current disk utilization disk 
current memory usage mem network components current load packet time unit link current utilization router distributed application component may communicate components 
assume component distributed application normally generates traffic addressed component average wab packets distributed probability mass function assume average packet length vab bits note bits bytes simplicity distributed probability mass function means wab wab vab vab equations described average communication data size components 
assume arrival rate customer requests communication data rate component component describe wab vab turn discussion mapping application response time network computer system parameters 
iv 
mapping response time network system parameters trivial task model distributed applications comprise application components network computer components 
level model distributed application system open queueing network 
include node queues connection queues note connection may include multiple links routers 
simplicity model service provided nodes connections queue call node connection service facility 
assume application system markovian system means distributions inter arrival times service times exponential distributions poisson exhibit markov memoryless property 
system service facilities may inputs multiple facilities outputs multiple facilities 
assume input output pro cesses poisson processes merged split poisson processes poisson processes 
example modeled distributed application jackson network 
jack conn conn conn conn fig 

application queueing network model conn conn son network system service facilities facility 
infinite queue customers arriving outside system poisson process server exponential service time distribution 
customer leaving facility routed facility 
probability pij departs system probability qi pij 
example arrival rate customer requests 
arrival rate queue sum 
queue customer job routed conn queue probability routed conn queue probability leaves system probability 
distributed application process flows components pre defined 
assume system operational equilibrium find arrival rate facility easily 
example assume system operational equilibrium thought convince 
average response time distributed application little law arrival rate customer requests average number customer requests application system 
assume known parameter need resolve calculate average sojourn time customer request system 
series queues include queues nodes connections nodes write average number customer requests node queues average number customer requests connection queues 
turn analysis resolving 
analysis node queues assume application components running multiple nodes 
component cpu queue disk queue application component necessarily need disk operations 
total number customer requests application described node index subsection focus discussion specific node 
na na cp na disk application component uses cpu visits disk times execute transaction 
component may communicate components distributed application 
simplicity assume exists mean value service time application component execute transaction matter processing job coming 
example receives requests different sources users 
assume component cpu queue disk queue 
utilization cpu disk component defined component assigned node ua cp sa cp ua disk sa disk ka ua cp ua disk utilization cpu disk component customer request component sa cp average service time component ka average number visit disk component finish transaction average service time disk operation 
calculate average number customers component cpu disk need know total utilization cpu disk 
assume application components components assigned node total utilization cpu disk node described cp disk ua cp cp ua disk disk cp disk utilization deployment application 
average number requests customers components defined na cp ua cp cp na disk ua disk disk equations equation calculate average number customer requests nodes 
analysis connection queues resolve average number customers connection queues 
analysis connection queues complex queues network level correspond network packet customer requests 
connection route application components include number links switching nodes routers bridges 
assume route defined routing algorithm topology network 
listed equations describe average number customer requests connection queues supposing application components nab nab average number customer requests connection components distributed different nodes need communicate 
components deployed node network delays ignore communication time 
average number customer requests connection queue nab ab ab holds operational equilibrium system ab denotes customer request service rate connection components find service rate find average delay customer request route route may include number links routers 
series infinite queues model route 
links routers bridges modeled series queues 
functional unit queues network packet customer requests 
denote ab input parameter packets time unit route 
ab wab wab average number packets process flow component component arrival rate customer requests application system 
denote rp ab average delay packet route component component assume links routers route 
denote tl average sojourn time packet link tr average sojourn time packet router rp ab tl tl defined sl tl lsl tr sl service time link average load link packets time unit 
find know application process flows link 
assume process flows application process flows link written average load process flow link calculated equation 
average load link deployment application components 
transmission link sl product link data rate bandwidth average packet length bl tl bl bl consider router delay 
router route process flow component utilization router process flow described ur ab ab need know total utilization router 
assume process flows application subset flows router total utilization router defined ur ur ur denotes utilization process flow router calculated equation utilization router deployment application 
tr defined tr ur equations equation get average delay packet route component component average sojourn time customer route calculated wab rp ab 
reciprocal ab equation 
binary integer programming model section provide binary integer programming model deployment application components local area network 
objective minimize response time application 
constraints satisfied optimized deployment pattern application component deployed node 
node cpu utilization exceed 
node disk utilization exceed 
node memory usage exceed node total memory size 
average load link exceed link bandwidth 
router utilization exceed 
may policies require certain components deployed certain nodes security reasons 
utilization constraint mentioned theoretical value 
practice unacceptable facility utilization approaches lead sharp increase response time 
deployment assumptions constraints define decision variables number components application number distributing nodes network 
component assigned node completeness constraint specifies component assigned node components application assigned run time memory usage constraint node described mem run time cpu disk utilization constraints node described ui cp ui disk uai cp cp uai disk disk network level constraints specify link average load exceed link bandwidth router utilizations exceed 
require auxiliary parameters describe constraints 
link define vij router define wij link route node node router route node node assume route defined routing algorithm topology network vij wij known parameters 
link constraint described note represents case components allocated different nodes vij vl bl communication data rate component component see section iii denote average load packets time unit link deployment application vl average packet size 
note relationship vl average load link packets time unit deployment 
router utilization constraint described ur ur ab wij utilization router deployment application 
objective function objective minimize response time distributed application 
equation see find average number customers application system 
decision variables define average number customer requests nodes nai nai average number customer requests component node average number customer request connections defined average number customer requests component component component assigned node component assigned node objective function written minimize nai objective function linear inspection 
product decision variables nai constants calculated equations include decision variables 
complexity objective function increased decision variables denominators equations 
vi 
case study section provide case study illustrate model ethernet lan shown 
lan lan lan lan lan fig 

example network distributing nodes assume application components 
assume arrival rate customer requests requests second 
utilization constraint set 
corresponding parameters shown tables list vij wij values derived easily topology network 
table nodes parameters node cp disk mems mem mb mb mb mb mb mb mb mb table ii links parameters item lan lan lan lan lan mhz packet table iii routers parameters item table iv application components parameters item mem mb mb mb table components packets node gams general algebraic modeling system package solve problem 
objective function binary integer non linear function associated solver sbb 
sbb simple branch bound combination standard branch bound method known mixed integer linear programming nonlinear programming solvers 
gams solved problem iterations nodes 
gams output optimized response time equal 
tells scenario achieve response time seconds deploy component node 
interestingly set components allocated node achievable response time set allocation pattern achievable response time set feasible solution 
tells things allocation pattern dependent arrival rate customer request current network application configuration support heavy customer load requests second 
solutions second issue include upgrades hardware increase service rate duplicate application components balance customer load 
vii 
defined enterprise distributed application formulated stochastic analysis mapping distributed application response time network parameters link bandwidth router latency computer parameters cpu disk speed memory usage 
provided non linear binary integer programming model allocating application components lan minimize response time 
allocation pattern dependent arrival rate customer requests 
distributed application model combination objects processes running network dependent relationships communicating provide service customers 
known issues addressed heavy load customer requests single components may need duplicated allocated different nodes balance load 
include customer traffic load model 
considered traffic load application 
component transaction requests different components treated different classes requests 
lead complex model approach analysis 
numerous challenges remain area 
model concerns allocation distributed application local area network 
areas pursued research include simultaneous allocation multiple distributed applications application multiple components 
component shared multiple applications directory service database 
allocation application components wide area networks wan 
viii 
authors dr bruce dr shi dr valuable feedback 
partially supported smart internet crc cooperative research center 
liu ray jha mapping distributed application sla network qos parameters proc 
th international conference telecommunications ieee ict bhattacharjee ramesh design framework business infrastructure integration resource management ieee trans 
system man cybernetics part applications reviews vol august shvartsman binary integer programming model optimal object distribution international conference principles distributed computing pp 
jain effective distribution object oriented applications communications acm vol 
august tse au qos measurement analytic methodology application response time vs tunable latency ip networks network operations management symposium 
ieee ifip page geoff managing business applications application management white 
borland software 
van der wallen lewis experiments datamining enterprise management proc 
th ifip ieee international symposium integrated network management im pp 

resource allocation capacity assignment distributed systems computers operations research vol 
pp 
optimization models configuring distributed computer systems ieee 
comput vol 
pp july computer database location distributed computer systems ieee 
comput vol 
pp july frederick gerald lieberman operations research page mcgraw hill companies almeida capacity planning web services page prentice hall ptr 
