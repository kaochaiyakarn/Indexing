efficient image retrieval vantage objects jules remco veltkamp department computer science utrecht university box tb utrecht netherlands 
describe new indexing structure general image retrieval relies solely distance function giving similarity images 
image object database distance set predetermined vantage objects calculated vector distances specifies point dimensional vantage space 
database objects similar terms distance function query object determined means efficient nearest neighbor search points 
demonstrate viability approach experimental results obtained database polylines 
years seen growing interest developing effective methods searching large image databases 
manual browsing may adequate collections images larger databases require automated tools search perusal 
content image retrieval certain characteristics images particular interest lies approaches feature extraction 
methods perform matching contents image comparing features query image images stored database 
global features derived entire shape examples roundness central moment eccentricity major axis orientation 
specifically interested features geometric flavor able search collection vector images occurrence query polyline 
way efficiently comparing features query image large number images stored database 
approach works mapping database objects points dimensional space way points lie close correspond images similar features 
allows efficiently retrieve objects similar query object determining points lie close point corresponding query image 
requisite approach similarity distance function defined database objects 
application implemented approach database polylines show efficiently retrieve polylines similar translation rotation query 
related wolfson describes geometric hashing paradigm enables unified approach rigid object recognition different viewing transformations dimensional objects 
assumed extract interest points model 
intensive research supported sion project advanced multimedia indexing searching 
preprocessing stage model information indexed hash table features 
query image interest points extracted efficiently compared stored database 
partial match votes possible presence stored model requiring perfect match interest points absent hidden objects affecting matching algorithm 
candidate models obtained checked computationally expensive verification step 
drawback paradigm lies time storage bounds 
query objects contains called interest points example polyline typically number vertices worst case complexity planar objects interest points hash table requires nm storage achieve invariance translation rotation scaling 
vantage object structure describe paradigm store objects data structure objects similar features retrieved efficient manner 
wolfson describes different paradigm rigid object recognition different viewing transformations calls geometric hashing 
combinations called interest points database objects indexed hash table 
interest points query image compared stored database voting mechanism 
drawback paradigm lies time storage bounds query object containing interest points example number vertices polylines worst case complexity planar objects interest points hash table requires nm storage achieve invariance translation rotation scaling 
important ingredient approach described algorithm determines nearest neighbors set high dimensional points 
theoretically efficient solutions arisen computational geometry community algorithms equally efficient practice :10.1.1.15.3125
yianilos considers problem finding nearest neighbors general metric spaces 
introduces vantage point tree vp tree short associated algorithms 
uhlmann independently reported structure calling metric tree 
expected complexity vp tree query certain circumstances log practice appears perform somewhat better tree 
vp tree guaranteed balanced expected complexity may met inputs particular unfavorable distributions 
emphasized despite similarity naming vantage object structure little common vantage point tree vantage object structure data structure store objects efficient similarity retrieval vp tree implements nearest neighbor queries point sets 
similarity naming occurs structures categorize database objects terms distances vantage objects 
completeness mention nearest neighbor data structures similar properties devised high dimensional data sets mind sr tree due katayama satoh ss tree white jain tv tree proposed lin tree reported berchtold 
nearest neighbor step algorithm replaced range search determining nearest neighbors consider points lie fixed distance query point 
essentially achieved distance threshold introduce section exists wealth literature range searching research considered problem achieving asymptotic complexity favorable running times 
algorithm due schwarzkopf theoretically efficient explicitly designed perform practice realistic inputs 
outline describe notations conventions 
section describe framework vantage object structure framework leaves choices filled specific applications 
section describes application framework test case retrieving images database experimental results provided section 
conclude indicate directions section 
preliminaries fa set objects call continuous function theta 
distance function 
way identity 
positive 
triangle inequality 
note require distance function usual identity symmetric necessarily imply need equal 
distance function defined closely adhere intuitive notion shape resemblance results query perceived resembling query object 
superscripted asterisk variables related vantage objects subscripted question mark applies query related variables 
vantage object structure suppose collection objects distance measure defined 
consider objects similar small third object call vantage object 
satisfies triangle inequality jd gamma small 
words measure resemblance comparing respective distances note correspondence strictly way objects similar similar distances vantage object objects similar distances necessarily similar appearance 
query object determine superset similar objects computing distance vantage object selecting objects achieve similar distance formally object corresponds point dimensional vantage space defined coordinate 
noted selection include objects similar happen similar distance set objects large set objects similar distance grow large 
problems relieved increasing number vantage objects say fa set vantage objects 
object corresponds point xm dimensional vantage space 
query object compute distance vantage objects defines point 
determine vantage space points sufficiently close points corresponds object guaranteed objects returned similar query object objects sufficiently similar correctly returned manner 
see define object space neighbors ffl set objects distance ffl ffl fa fflg contrast ffl denote set vantage space neighbors objects distance vantage objects differs ffl corresponding distance ffl fa jd gamma fflg difficult see considering equivalence natural numbers distance equals distance larger 
lemma set vantage space neighbors query object includes object space neighbors ffl ffl 
proof 
object ffl fa set vantage objects 
triangle inequality ffl holds follows included set ffl 
similarity query objects reduces simple nearest neighbors query set points 
answer query need compute distance query object vantage objects determine vantage space points sufficiently close resulting query point 
main advantage approach computationally step computing similarity measure database objects performed entirely offline runtime deal points original images 
framework leaves details filled 
defined terms distance function set vantage objects depend application hand 
secondly need means finding nearest neighbors query point set dimensional points 
limit discussion mentioning known solutions achieve log query time log preprocessing :10.1.1.15.3125
gives result 
theorem set objects query object ffl constant denote time required compute distance objects 
constant preprocess mnt log time mn space retrieve objects ffl mt log time cardinality ffl 
matching implemented algorithm described previous section collection approximately total polylines 
apply framework database need matching distance function measures distance pick number vantage objects collection 
additionally framework requires efficient algorithm retrieve nearest vantage space neighbor 
consists number polylines need way map query results separate polylines entire 
matching distance function 
arkin describe matching metric polygons invariant translation rotation scaling defined convex non convex polygons computed time log numbers vertices respective polygons 
metric distance turning functions polygons 
turning function theta polygon measures angle counterclockwise tangent function arc length measured point boundary words theta angle tangent point orientation example axis theta keeps track turning takes place traces boundary increasing left hand turns decreasing right hand turns 
turning functions periodic theta theta mod perimeter length turning function theta polygon translation invariant definition theta ff polygon rotated ff degrees scaling invariance achieved normalizing polygons standard perimeter length 
distance turning functions theta theta defined min ff theta gamma theta ffj ds approach essentially metric slight adaptations case matching polylines polygons 
note distance sufficiently short line segment polyline zero perfectly match longer line segment overcome problem enforcing threshold number segments database polylines polylines sufficient number segments considered 
simply scale polylines unit length want able match portions polyline matching polyline entirety 
example consider polyline longer polyline contains sub polyline 
occurs entirety want perfectly match 
scale polylines unit length turning functions polygons longer match 
words simply scale polylines prior matching achieve scale invariance 
moment viable alternative implies implementation scale invariant 
overcome adapting metric scale invariance employing different distance function proposed cohen guibas 
matching algorithm runs identical log time polylines 
brings entire preprocessing step polylines vantage polylines mnc log maximum number segments single polyline mn consider constant 
database 
may relatively high number average lower fourteen 
choosing vantage objects 
aspect approach choice vantage objects 
ideally vantage objects differentiate database objects possible 
means measure different properties objects vantage objects different distance object vantage object similar little information gained adding extra vantage objects 
possible way ensure vantage point adds relevant discriminating power choosing vantage points lie maximally far apart 
computing furthest set points exponential problem resort heuristic algorithm 
choose initial vantage object polyline case random 
repeatedly pick vantage object maximizing minimum distance previously chosen vantage objects gamma vantage objects chosen probably maximally far apart constitute set spread 
number vantage polylines choose clear trade fewer polylines return non relevant polylines answers query polylines increase dimension search space time required answer query 
comparisons different values different vantage objects section 
retrieving nearest neighbors 
problem determining nearest neighbors set points studied field computational geometry efficient solutions exist 
particular interest approximate nearest neighbor algorithm due arya show nearestneighbor problem solved particularly efficiently weaken problem formulation determining approximate nearest neighbors query point 
query point constant ffl point ffl approximate nearest neighbor ffl delta 
set points preprocessed log time space query point constant ffl constant integer compute ffl approximations nearest neighbors log time 
theoretically optimal worst case approach observed efficient practice ffl 
vantage polylines single query polylines takes mt log time number polylines returned time required compare polylines 
distance function described previously mc log log log constant maximum number segments polyline 
postprocessing step explicitly measure similarity query polyline polylines returned algorithm takes additional kc log time influence bound 
postprocessing step omitted experimental results main goal demonstrate usefulness vantage object structure postprocessing query results 
matching entire far algorithm description focused matching single polylines 
database consist typically separate polylines 
need devise strategy combine results multiple polylines single result 
query consisting polylines perform separate queries polyline 
polylines returned queries grouped part gives certain number matching polylines 
user way reflects resemblance query 
effective way explicitly measure distance query polygon 
mentioned purpose refrain doing want demonstrate vantage object retrieval algorithm provides relevant ordering query results 
sort matched simple heuristics 
polylines match closely polyline query better consider match query 
sort identical number matching polylines increasing maximum distance matched polyline corresponding query polyline 
note priori clear nearest neighbors want retrieve query point grouping done retrieval step 
chose threshold maximum distance vantage space point query point polylines distance exceed threshold returned answers queries 
experimental results implemented algorithm described previous sections available implementation search algorithm due arya mhz pentium ii workstation 
typical queries vantage points returned shown table 
queries set minimum number segments polyline consist polylines define single angle ignored matching process 
queries increase detail 
consists simple shape recurs numerous query results contain digitized hand exact copy shape 
second query specific result get matches contain exact copy query bird followed number contain similarly shaped birds 
query shown contains shape unique database query results resemble query object various degree 
note intuitive resemblance gradually decrease ranking 
mentioned bulk computations performed preprocessing steps 
polyline database need compute corresponding vantage space point involves computing distance vantage polylines takes table example queries best matches 
minutes vantage polyline 
case want add polylines database computation need performed newly added polylines 
time required building nearestneighbor data structure depends number vantage objects example slightly seconds 
step performed image database changes 
query time low due intensive preprocessing steps example randomly selected query polylines vantage objects retrieving nearest neighbors takes ms average 
comparison purposes implemented trivial algorithm implementation matching algorithm 
find database polylines similar query polyline compute distance polyline collection query take best matching 
answering query single polyline way identical computing distance vantage polyline takes somewhat minutes 
match entire query time multiplied number polylines consists 
issue number vantage objects 
table summarizes number results returned computing time required single query different values ffl number vantage points ffl distance threshold 
tendency query time increase significantly approximately linear increasing number vantage objects 
example average time ms mentioned ms 
number results returned quickly grows vantage points means possibly expensive postprocessing required results meaningful order 
benefit vantage points relevance query results appears better increase number vantage points 
ffl ffl ffl ffl ffl ms ms ms ms ms ms ms table comparison different numbers vantage points distance thresholds 
indexing structure general image retrieval relies solely distance function giving similarity images demonstrated efficiently determine shape image similarity 
moment approach invariant translation rotation working scale invariance 
possible workaround perform queries number differently scaled versions query object scale invariant distance function obviously preferable 
viability approach demonstrated single specific case retrieving images potential far general 
fact indexing structure applies set images similarity distance function defined includes raster images vector images 
distance calculation performed offline preprocessing step advantage approach rely distance function cheap easy compute query requires small number typically distance calculations 
sufficient preprocessing time available elaborate possibly expensive distance function desirable properties robustness noise cracks deformations 
extended library 
centre computer aided research faculty utrecht university utrecht netherlands 
www theo uu nl html 
marco la cascia di ges 
content indexing image video databases global shape features 
proc 
int 
conf 
pattern recognition 
esther arkin chew huttenlocher kedem joseph mitchell 
efficiently computable metric comparing polygonal shapes 
ieee trans 
pattern anal 
mach 
intell 
arya mount netanyahu silverman wu 
optimal algorithm approximate nearest neighbor searching 
proc 
th acm siam sympos 
discrete algorithms pages 
implementation available www cs umd edu mount ann 
bentley 
trees point sets 
proc 
th annu 
acm sympos 
comput 
geom pages 
berchtold keim 
kriegel 
tree index structure higher dimensional data 
proc 
th vldb conference pages 
la cascia 
jacob just content query system video databases 
ieee int 
conf 
acoustics speech signal processing 
bernard chazelle emo welzl 
quasi optimal range searching spaces finite 
discrete comput 
geom 
clarkson 
nearest neighbor queries metric spaces 
proc 
th annu 
acm sympos 
theory comput pages 
cohen leonidas guibas 
partial matching planar polylines similarity transformations 
proc 
th acm siam sympos 
discrete algorithms pages january 
veltkamp 
measuring resemblance complex patterns 
proc 
int 
conf 
discrete geom 
comput 
imagery 
katayama shin ichi satoh 
sr tree index structure high dimensional nearest neighbor queries 
sigmod pages 
kelly cannon 
query image example candid approach 
proc 
spie storage retrieval image video databases iii volume pages 
kleinberg 
algorithms nearest neighbor search high dimension 
proc 
th annu 
acm sympos 
theory comput pages 
lin faloutsos 
tv tree index structure higher dimensional data 
vldb journal 
matousek 
efficient partition trees 
discrete comput 
geom 
matousek 
range searching efficient hierarchical cuttings 
discrete comput 
geom 
rajiv mehrotra james gary 
similar shape retrieval shape data management 
ieee computer 
niblack barber equitz petkovic yanker faloutsos taubin 
qbic project querying images content color texture shape 
storage retrieval image video databases 
virginia michael stonebraker 
chabot retrieval relational database images 
ieee computer 
pentland picard sclaroff 
photobook tools content manipulation image databases 
proc 
spie storage retrieval image video databases ii volume pages 
schwarzkopf jules 
range searching low density environments 
inform 
process 
lett 
jeffrey uhlmann 
satisfying general proximity similarity queries metric trees 
inform 
process 
lett 
white jain 
similarity indexing ss tree 
proc 
th ieee internat 
conf 
data engineering pages 
wolfson 
model object recognition geometric hashing 
proc 
st europ 
conf 
comp 
vision pages 
yianilos 
data structures algorithms nearest neighbor search general metric spaces 
proc 
th acm siam sympos 
discrete algorithms pages 

