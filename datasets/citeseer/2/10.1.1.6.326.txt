efficient constructions way hash chains yih chun hu markus jakobsson adrian perrig november cmu cs school computer science carnegie mellon university pittsburgh pa yih chun hu uc berkeley eecs berkeley edu markus jakobsson rsa laboratories com adrian perrig carnegie mellon university perrig cmu edu 
adrian perrig research supported part center computer communications security carnegie mellon daad army research office gifts bosch intel 
views contained authors interpreted necessarily representing official policies endorsements express implied aro bosch carnegie mellon university intel government agencies 
keywords way hash chains efficient constructions broadcast authentication 
way chains important cryptographic primitive security applications 
lamport proposed way chains time password authentication 
subsequently researchers proposed way chains basic building block digital cash extending lifetime digital certificates constructing time signatures packet authentication way chains efficient verify increasingly popular designing security protocols resource constrained mobile devices sensor networks low powered processors compute way function milliseconds require tens seconds minutes generate verify traditional digital signature 
sensor network security protocols extensively way chains design protocols scale resource constrained sensors 
researchers proposed variety improvements way hash chains storage access efficient setup verification efficient :10.1.1.3.43
new constructions way hash chains significantly improve efficiency way chains 
construction sandwich chain provides smaller bandwidth overhead way chain values enables efficient verification way chain values trusted way chain value far away 
second construction comb features new lower bound way chains terms storage traversal overhead 
fact previously researchers cite lower bound log product value traversal overhead memory requirements onedimensional chains 
show achieve lower bound considering multi dimensional chains 
particular dimensional construction requires log memory traversal overhead improving dimensional bound 
addition setup cost way chain contrast log 
benefits constructions include faster verification step traditional hash chains provide verifier catch efficiently having missed number previously released hash values sandwich chain resistance dos attacks authentication values 
describe fractal traversal schemes proposed structures bringing traversal costs structure simpler traditional hash chain 
new construction orthogonal previously proposed techniques conjunction techniques efficient setup verification way chains 
way chains widely deployed cryptographic primitive 
lamport proposed way chains efficient authentication time passwords haller refined key standard 
lamport researchers proposed way chains basic building block variety applications example digital cash extending lifetime digital certificates constructing time signatures authenticating link state routing updates efficient packet authentication 
despite computational efficiency way functions way chains challenging resource constrained environments small mobile devices sensor networks 
especially proposed sensor networks significant resource limitations minimal hardware lower energy consumption 
resource challenged environments setup traversal verification storage long way chains major challenge 
researchers proposed variety improvements way hash chains setup traversal storage efficient 
metric way chain efficiency product value traversal overhead memory requirements 
example simply storing value oneway chain length result cost storage requires memory traversal computation necessary way chain values simply stored array 
straightforward approach store seed chain derive value fly efficiency storage costs traversal costs 
jakobsson coppersmith jakobsson propose new techniques traversal storage efficient apply techniques traditional way chains 
techniques allow computation consecutive values hash chain cost log way function computations traversal cost requiring log storage resulting efficiency log 
traversal techniques applied standard hash chains verification cost affected manner values represented computed making verification cost 
traversal cost zero entire chain stored result product zero 
deal accounting memory accesses adding number way function computations traversal cost 
techniques result non zero positive traversal cost 
computational cost setup phase value endpoint computed randomly selected seed computation may performed powerful trusted device opposed resource constrained device performs traversal 
hu propose new structure way chains level chains 
main benefit approach structure allows efficient verification verifier compute sequence hash function evaluations corresponding small portion total number traversed values 
review approach section refine construction design new way chain requires traversal overhead log storage resulting efficiency log 
liu ning propose level way chain chains second level derived values level 
scheme provides linear speedup setup verification requires setup storage verification overhead 
contributions framework 
introduce framework comparing way chain techniques considering setup traversal verification storage communication overheads 
new dimensional chains 
propose new technique authenticating chains level hierarchy producing clear advantages comparison related approach avoids jamming dos attacks focus disrupting transmission sensitive authentication values secondary chains 
second allows users store forward new authentication values benefit users receive transmitted 
approach require users trust 
note obtain benefit digital signatures heavy weight constructions fact approach low computational demands approach taken 
third allows user missed potentially large number authentication values catch computational effort fraction number transmitted authentication values missed 
feature proposals traditional hierarchical chains may prove particularly beneficial settings nodes mobile 
light chains 
propose notion light way chains lower communication overhead 
relatively short hash chains values shorter normally needed avoid attacks inverting finding collisions show way avoid attacks 
known hash indexing techniques proposal resistant birthday attacks reduce security structure number elements grows 
specifically new way chain constructions comb 
sandwich chain new hash chain structure fractal traversal algorithm requiring log computation storage reduction bandwidth requirements substantially reduced verification effort 
exact verification effort depends parameter choices described detail 
comb new hash chain featuring log cost setup log storage cost traversal 
construction substantially efficient lower bound dimensional way chains 
new structures construction compatible previous uses hash chains :10.1.1.3.43
evident common uses traditional hash chains easily adapted structure 
outline follows 
section presents way chain basics evaluation framework 
section introduces sandwich chain section presents comb construction 
describe light chains 
section discusses different deployment scenarios analyzes way chain technique appropriate 
background evaluation framework framework evaluating comparing way chain proposals comparing setup traversal verification storage communication costs 
constructions hierarchy chains values chains refer primary chains roots chains called secondary chains 
way chain setup 
way chain 
vn collection values value value vn way function value particular way function selected cryptographic hash function psfrag replacements standard level way chain 
structure called hash chain 
setup way chain generator chooses random root seed chain value vn derives previous values iteratively applying hash function described 
value refer normally public potentially linked identity user possessing corresponding root value 
example standard hash chain shown 
verification way chain values 
assume verifier knows authentic value generator way chain usually value verify input value chain verifier iteratively applies way function times compares result trusted value verify equals computed known values equal input value said authentic 
note value known suffices iteratively apply way function times input value compare result intermediate value 
way chain traversal 
generator discloses successive values way chain call way chain traversal 
mentioned simple traversal techniques generator stores values way chain memory generator recomputes value seed value 
called fractal traversal techniques set values stored modified time manner reduces computation complexity 
way chain advantages disadvantages 
traditional way chains advantages 
trusted value chain intractable find value assuming secure way function output sufficiently large discuss security way chains 
easy assess validity value verifying assuming provides weak collision resistance called second pre image collision resistance 
psfrag replacements vn vn vn vn hierarchical way chain vn 
values way primary chain values 
values secondary light chain 
subchain serves verification value 
drawback traditional way chains verifier perform operations validate expensive large 
repeated disclosure way chain values carries cost related transmission values 
required bandwidth may burden senders especially highly resource constrained environments sensor networks 
hierarchical way chains 
hierarchical way chain consists levels chains values level primary chain act roots set second level secondary chains 
refer secondary chain rooted ith value primary chain ith secondary chain 
values ith secondary chain released values st chain released primary chain value released 
shows example structure 
described different way functions may primary secondary chains aim lowering communication costs 
set hierarchical chain generator picks vn random computes primary chain vn 
generator computes secondary chain fly 
clear advantage efficient setup operations needed compute length secondary chain 
way chain generator traverses secondary chains sequence 
discloses values primary way chain possible 
disadvantage hierarchical chain authentication values secondary chain 
hierarchical chain proposed liu ning 
liu ning propose tesla authentication protocol primary chain authenticate values secondary chain 
approach shortcoming hierarchical chain conjunction tesla authentication protocol propose authenticate secondary chain tesla authentication protocol primary chain 
disadvantage approach loss authentication message prevents verifier authenticate secondary chain values value primary chain disclosed 
shortcoming approach authentication staged generator send authentication values transitions primary chain 
tradeoff clear hand infrequent transitions primary chain hand prefer short authentication delay 
note values need authenticated primary chain secondary chains 
discuss authentication mechanism liu ning shortcomings 
overcome shortcomings propose sandwich chain enabling efficient authentication values secondary chain moment assuming additional authentication protocols 
light chains 
lower communication overhead introduce notion light chain 
sequence values derived respective predecessors means way function results relatively short output 
contrast may refer standard way chains heavy chains 
permits refer chain consisting light heavy components plainly way chain specifically hash chain 
way combine light heavy chains heavy chain primary chain value heavy chain root light secondary chain 
described select hash function particular light chain large family potential functions disclosing function long disclosure values light chain begins different light chains different functions 
way avoid threat pre computation attacks attacker able building input output dictionary selection function disclosed 
propose send redundant messages achieve higher robustness packet loss approach increases communication overhead 
clear shorter values light chains smaller effort attacker find collisions invert function 
presents tradeoff savings communication cost related size individual values light chain time particular light chain 
turn puts constraints maximum length light chain known rate traversed values disclosed 
choice way functions 
mentioned different way functions may primary respectively secondary chains 
different way functions may different segments secondary chain simplicity consider option 
basic security requirement generating function way chain wayness preventing attacker deriving value chain knowing addition generating function needs provide second preimage collision resistance known weak collision resistance 
weak collision resistance prevents attacker finding generator disclosed satisfies enable attacker forge value way chain prevent verifier verifying subsequent values way chain certainly 
candidate way functions cryptographic hash functions sha md 
way function compute values primary chain denoted way function derive values ith secondary chain referred derive third way function refer hash trunc hash salt trunc denotes function truncates input desired length 
construction provides required security properties pseudo random functions prf 
prf key construction provide wayness weak collision resistance denotes constant string zero bits 
note value key prf 
commonly instantiation prf message authentication code mac example hmac popular choice 
pseudo random permutation prp block cipher prf prp times birthday bound allows 
construction disadvantage generator run key setup function block cipher way chain value inefficient 
resistance birthday attacks 
previous proposals involving hash chains appear vulnerable birthday attacks 
specifically attacker selects random seed computes hash chain chances collision computed values value existing chain increase length avoided known technique hash functions indexed position chain 
words order compute image value compute hash denotes concatenation opposed way chain value commonly done 
simplicity notation indexing explicit descriptions onwards 
way chain value bits expected cost attacker find pre image second pre image way function computations 
taxonomy hash chain usage 
proposed protocols hash chains categorize protocols categories element skipping elements rare skipping elements common 
protocols fast traversal generator desirable 
addition skipping elements common faster verification desirable especially hash chain elements quickly 
cases wireless network protocols network partitioning force node perform large number hash functions catch cases faster verification significantly improve protocol responsiveness 
evaluation metrics 
metrics measure efficiency way chain techniques setup traversal verification storage communication cost 
describe cost detail 
setup cost measured number hash function computations derive value way chain 
traversal cost average number hash function computations generator performs derive way chain value assuming chain value consecutively disclosed 
real time constrained environments upper bound traversal cost desirable 
proposed efficient way chain schemes provide upper bound log technique attributed micali leighton unpublished manuscript propose technique avoid birthday attacks merkle trees 
traversal cost 
verification cost measured number oneway function computations verifier performs verify way chain value 
verification cost usually verifier receives way chain values interesting metric verification overhead case verifier needs catch missed way chain values started receiving values late verifier may need traverse large part way chain verify 
advanced way chains feature efficient mechanisms catch 
storage cost measured amount memory generator needs traverse way chain 
communication cost measures bandwidth overhead distributing way chain values 
introduce notion light chains lower communication cost 
requirements offline verification 
chains describe verified offline communicating chain generator 
offline verification requires reliable delivery loose time synchronization 
chains describe sandwich chain light chains sections require reliable delivery loose time synchronization allow offline verification 
hand comb section special requirements offline verification 
sandwich chain construction previously mentioned primary secondary chains shows significant disadvantage simple way chain commitment value secondary chain lost verifier wait generating value secondary chain value primary chain disclosed 
describe sandwich chain new construction removes drawback nice properties 
shows example sandwich chain 
sandwich chain combination hierarchical way chain way chain wn 
verification values light chain 
describe sandwich chain generated verifiers authenticate values 
sandwich chain setup 
generator picks vn wn random computes vn 
generator derives psfrag replacements salt sandwich chain 
upper horizontal chain primary chain diagonal chains secondary chains lower horizontal chain verification points secondary chains 
dotted arrows correspond salt derivation computation diagonal chains 
associated secondary chain 
follows salt 
generator derives value follows 
graphically represents derivations 
sandwich chain traversal 
similarly hierarchical chains described generator uses values light chains 


values disclosed secondary chain values published example disclosing generator send needed salt secondary chain authenticate values disclosed necessary secret authenticate values secondary chain 
sandwich chain traversed fractal traversal 
sandwich chain value authentication 
initially verifier receives authentic channel uses values authenticate subsequent values 
trusted values verifier easily authenticate value way chain checking equals assumes verifier received 
describe verifier authenticates value general secondary chain assuming verifier kept receiving verifying chain trusting values 
section describe efficient verification technique receiver keep verification 
light chain spanned verifier needs know verify value verifier computes checks matches stored case authentic 
value secret generator retransmit periodically 
value salt secondary chain needs transmitted periodically easily authenticated 
additional measure authenticate secondary chain values verifier check disclosed 
efficient authentication way functions describe novel mechanism authenticate arbitrary values mac function 
assume secure weak collision resistant way function derive way chain secure way function produce commitments 
generator generates way chain vn 

assume generator verifiers loosely time synchronized maximum synchronization error generator specifies regular disclosure schedule values way chain disclosing time time delay disclosure values time disclosure value authenticate value generator publishes value disclosed 
verifier gets time verifies generator disclose checking condition holds accepts waits disclosure authenticate verifier verifies authenticity way chain authentic value 
authentic authentic 
authentication similar nature tesla authentication protocol require mac computation 
sandwich chain efficient authentication technique sandwich chain especially constructed enable efficient authentication values light chain authentication technique described section 
advantage client receives authentic values sandwich chain efficiently authenticate secondary chain values chain generated recomputing previous secondary chains 
approach substantially reduces verification overhead new verifier needs catch current values chain 
assume primary way chain 
vn satisfies requirements discussed section values disclosed specific times verifier structure sandwich chain authenticate values chain way back authentic value trusts 
consider verifier time synchronized trusts value joins transmission time generator currently traversing values spanned secondary chain spanned disclosed 
point verifier authenticate values receives may computationally expensive recompute sandwich chain way back generator periodically distributes long verifier gets time verifier authenticate receives value successful authentication value verifier knows value authentic values chain immediately authenticate values secondary chains 
loosely synchronized clocks sandwich chain enables computation bound verifiers efficiently authenticate current way chain values waiting short time delay recomputing majority sandwich chain 
comb construction hu describe mechanism 
composed signature chain collection secondary chains 
signature chain 
chain time signatures 
value signature chain spans signature scheme time signature values reduced psfrag replacements comb 
values signature chain represents initial verification value 
represent light chains 
hexagon represents instance merkle signature simplified version signature shown inside hexagon 
denotes sign single value resembling way chain 
value thought private key time signature value corresponding public verifying key 
similarly form private public key pair 
hu describe signature chain propose signature time signature scheme 
value signature chain derive secondary chain 
values generated describe section 
vein hierarchical chain construction section light chains represent single way chain length jth value mod length secondary chain 
contribute novel parameterization traversal scheme provides computation retaining log storage requirement significant improvement previous log bound 
verification values secondary chain 
values secondary chain verified repeated application way function separate way verifying 
comb time signature signature chain value authenticate value light chain 
particular ith time signature sign verify time signature verifier follows signature chain way trusted value way follows standard way chain 
note traversal primary chain previous time signatures redundant 
words traversal principle allows forgery old time signatures synchronization issues non issue just knowledge previously released chain values general pose security threat applications consider 
parameterization traversal chain length choose log log 
important intuition allows achieve computation fractal traversal signature chain requires log storage store entire secondary chain length log penalty asymptotic storage cost 
result traversal secondary chains achieved constant computation traversal cost signature chain log amortized entire light chain length log resulting constant computation cost emitted value 
particular perform efficient traversal primary signature chain cost log memory log computation step amortize traversal steps secondary chain computation 
addition traverse secondary chain memory computation storing entire chain 
amortize computation light chain costs memory computation 
total cost log memory computation 
initialization 
perform initialization necessary fractal traversal signature chain 
compute store entire secondary chain 
prepare initialization second secondary chain 
main routine 
perform partial step signature chain 
particular follow fractal traversal algorithm hash operation performed cost 
log steps performed signature chain value ready 
particular emitted available 
generate step chain 
particular emitting compute set return value appropriate value previously computed 
example emitting return value computed emitting analysis step perform hash operation constant amount step requires computation log mem ory 
second step performs hash operation requires computation log memory 
third step consists single load requires computation log memory 
fact memory second third step combined require just hash values stored 
hash signature constant time operations requires computation 
represents total cost computation log memory memory times computation complexity log 
result substantially improves previous result provides memory times computation complexity log establishes lower bound 
comb provide efficiency improvements example scheme setup time log 
intend examine hierarchical comb multiple levels signature chains mechanism improving setup times 
light chains resource constrained environments sensor networks communication bandwidth premium data sending receiving expensive terms battery energy 
reduce communication overhead propose way chains reduced value size need careful introduce new security vulnerabilities 
light way chain 
collection values value way function short output 
output standard hash functions typically bits long output shorter example bits long 
preferably hash function referred keyed hash function output truncated fixed length 
chain segment chain salt associated appended input hash function evaluation 
effect function selected family functions indexed salt 
similar standard chains called value root 
salt chain chain segment selected chain computed root value released verifier needs verify authenticity chain value 
psfrag replacements salt salt derived light way chain 
shorter sized values may introduce pre computation attacks attack proposed hellman 
chain bit values attacker performs operation setup graph size graph attacker performs operations find pre image value 
thwart attack countermeasures hash functions described indexed hash functions described section paragraph resistance birthday attacks 

outputs may substantially shorter outputs inverting assumed computationally intractable may possible invert find collisions sufficient time 
want infeasible invert time period associated important time interval shorter lower estimate time takes invert evidently crucial prevent pre computation attacks salt comes 
effect hash function randomly selecting function large family functions 
sufficiently long effectively infeasible compute table input output pairs knowledge salt 
public just time period associated prevents pre computation attacks 
discussion give examples instances constructions useful 
examples light chains bits security heavy chains bits security 
time signatures comb merkle construction sign bits value light chain 
sign bits signature chains length checksum chains length checksum chain length 
construction requires hash function computations generate signature average hash function computations verify 
application sensor network resource limited sensors 
sensor network nodes tesla protocol broadcast authentic data lifetime assume years 
achieve relatively low authentication delay short way chains sensors value way chain second requiring total values lifetime sensor network 
study overhead sandwich chain 
main features sandwich chain low communication overhead enables fast verification chain values case receiver absent time newly deployed 
select length secondary chain light chain say sensor wait minutes efficiently authenticate chain values deployment light chain length values 
primary chain length values 
setup cost hash function computations compute fractal traversal traversal requires log value computation storage 
verification overhead low sensor joins network close lifetime verify value minutes assuming hash function computation requires ms 
contrast traditional way chains take times longer 
communication cost low light chain values bits long heavy chain values length bits need disclosed values 
lower traversal setup cost expense higher communication overhead comb mechanism 
choosing length light chains want length allows signature chain robustness packet loss generator may periodically publish latest values required authentication 
computed single hash operation emitted element 
application signature chain requires hash operations step signature chain requires logarithmic number applications need log elements light chain 
traversal store elements chain length provide reverse traversal single computation 
result pick minimum allows traverse chain length 
case light chain elements long 
signature chains length initialization requires traversing light chain hash functions entire signature chain hash functions total setup time 
traversal costs current light chain light chain signature chain total applications 
perform traversals require sets light chains stored simultaneously cost pebbles 
addition log pebbles needed top chain total pebbles 
contrast scheme requires pebbles traverse chain cost operations element 
verification overhead low sensor joins network close lifetime verify signature chain minutes assuming hash function computation requires ms 
communication cost fairly low light chain values bits long byte signature needs disclosed values possibly robustness 
represents roughly additional bits chain value 
example internet peer peer traffic 
payments example pay isp dialup access open access wireless hotspots pay content transfer peer peer file sharing network 
estimate pricing services consider cable modem pricing cap gb assume isp requires revenue gb transfer 
provider sold increments chain elements long 
comb compute length light chains log choose light chains length 
result signature chains length 
initialization requires hash functions 
traversal costs current light chain light chain signature chain total applications 
perform traversals require sets light chains stored simultaneously cost hash values stored just values 
addition log hash values stored top chain total hash values better optimized 
contrast scheme requires storage values traverse chain cost operations element 
verification overhead higher network node receives close chain may take seconds verify assuming hash function computation requires 
communication cost fairly low light chain values bits long byte signature needs disclosed values possibly robustness 
represents roughly additional bits chain value 
proposed constructions way chains useful settings speed current setup traversal verification way chains 
constructions drop replacements current uses way chains 
sandwich chain particularly useful environments low bandwidth communication channels verifiers computation constrained may need catch verify chain value distant trusted chain value 
comb construction higher communication overhead sandwich chain provides efficient setup mechanism log efficient traversal small storage overhead log 
construction beats previously established lower bound product memory overhead traversal overhead log 
contrast construction achieves memory times computation complexity log 
possible contradict previous lower bounds move dimensional dimensional hierarchical chains 
includes investigating deeper hierarchies constructions establish general bounds way chain costs 
william aiello ostrovsky 
fast digital identity revocation 
hugo krawczyk editor advances cryptology crypto volume lecture notes computer science 
international association research springer verlag berlin germany 
ross anderson harry chris sutherland 
practical electronic cash system 
personal communication december 
bellare kilian rogaway 
security cipher block chaining 
advances cryptology crypto pages 
lecture notes computer science volume 
mihir bellare ran canetti hugo krawczyk 
keying hash functions message authentication 
neal koblitz editor advances cryptology crypto volume lecture notes computer science pages 
international association research springer verlag berlin germany 
giles brassard editor 
advances cryptology crypto volume lecture notes computer science santa barbara ca usa 
international association research springer verlag berlin germany 
brown cheung hernandez menezes 
pgp constrained wireless devices 
proceedings th usenix security symposium pages 
usenix august 
cable news 
time warner division implements consumption caps 
published www com may may html 
steven cheung 
efficient message authentication scheme link state routing 
th annual computer security applications conference pages 
coppersmith jakobsson 
optimal hash sequence traversal 
proceedings fourth conference financial cryptography fc lecture notes computer science 
goldreich micali 
line line digital signatures 
brassard pages 
oded goldreich shafi goldwasser silvio micali 
construct random functions 
journal acm october 
neil haller 
key time password system 
rfc february 
ralf hauser gene tsudik 
reducing cost security link state routing 
proceedings symposium network distributed systems security ndss pages san diego california february 
internet society 
ralf hauser michael steiner michael waidner 
micro payments ikp 
th worldwide congress computer communications security protection pages paris la defense france june 
martin hellman 
cryptanalytic time memory trade 
ieee transactions information theory july 
yih chun hu adrian perrig david johnson 
efficient security mechanisms routing protocols 
network distributed system security symposium ndss pages february 
jakobsson 
fractal hash sequence representation traversal 
proceedings ieee international symposium information theory isit pages july 
kahn katz pister 
mobile networking smart dust 
acm ieee international conference mobile computing networking mobicom seattle wa august 
leslie lamport 
password authentication insecure communication 
communications acm november 
liu peng ning 
efficient distribution key commitments broadcast authentication distributed sensor networks 
network distributed system security symposium ndss pages february 
mark lomas editor 
security protocols international workshop volume lecture notes computer science cambridge united kingdom april 
springer verlag berlin germany 
ralph merkle 
digital signature conventional encryption function 
carl editor advances cryptology crypto volume lecture notes computer science pages santa barbara ca usa 
international association research springer verlag berlin germany 
ralph merkle 
certified digital signature 
brassard pages 
silvio micali 
efficient certificate revocation 
technical report mit lcs tm massachusetts institute technology laboratory computer science march 
technical memo 
national institute standards technology nist 
secure hash standard may 
federal information processing standards fips publication 
torben pedersen 
electronic payments small amounts 
lomas pages 
adrian perrig ran canetti tygar dawn song 
efficient authentication signing multicast streams lossy channels 
ieee symposium security privacy may 
adrian perrig robert szewczyk victor wen david culler tygar 
spins security protocols sensor networks 
wireless networks september 
ronald rivest 
md message digest algorithm 
internet request comment rfc internet engineering task force april 
ronald rivest adi shamir 
simple schemes 
lomas pages 
pankaj rohatgi 
compact fast hybrid signature scheme multicast packet 
gene tsudik editor proceedings th acm conference computer communications security pages singapore november 
acm press 
yaron 
computation storage trade offs hash chain traversal 
proceedings financial cryptography fc 
kan zhang 
efficient protocols signing routing messages 
proceedings symposium network distributed systems security ndss san diego california march 
internet society 

