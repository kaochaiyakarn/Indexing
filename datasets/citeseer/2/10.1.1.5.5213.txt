exact approximate distances graphs survey uri zwick school computer science tel aviv university tel aviv israel zwick cs tau ac il www cs tau ac il zwick 
survey results related computation exact approximate distances corresponding shortest shortest paths graphs 
consider di erent settings models try identify remaining open problems 
problem nding distances shortest paths graphs basic studied problems algorithmic graph theory 
great variety intricate elegant algorithms developed various versions problem 
basic problems area research open 
short survey try outline main results obtained mention remaining open problems 
input versions problem graph 
graph may directed undirected may weighted unweighted 
graph weighted edge weight length attached 
edge weights arbitrary real numbers may integers 
case weights may nonnegative may allowed negative 
may interested distances shortest paths single source vertex vertices graph known single source shortest paths sssp problem may interested distances shortest paths pairs vertices graph known allpairs shortest paths apsp problem 
may insist getting exact distances genuine shortest paths may willing settle approximate distances shortest paths 
errors approximate distances willing accept may additive multiplicative nature 
insist explicitly obtaining distances pair vertices graph size output number vertices graph 
mind 
may supported part israel science foundation founded israel academy sciences humanities 
interested example concise implicit approximation distances 
may achieved example nding sparse subgraph approximates distances subgraph called spanner 
implicit approximation distances ered spanners 
may want concise representation approximate distances quick means extracting approximations need 
leads study approximate distance oracles 
summarizes di erent problems considered survey 
need specify computational models 
di erent variants unit cost random access machine ram model see 
edge weights real numbers operations allow edge weights numbers derived addition comparison 
operations assumed take time 
operations real numbers allowed 
call addition comparison model 
reminiscent algebraic computation tree model see counting operations manipulate weights want single concise program works input size 
edge weights integral adopt word ram model opens way varied algorithmic techniques 
model word memory assumed bit wide capable holding integer range 
assume distance graph ts machine word 
assume log example name vertex stored single machine word 
assumptions regarding relation allowed perform additions subtractions comparisons shifts various logical bit operations machine words 
operation takes time 
surprisingly shifts ands xors operations little problem computing shortest paths speed algorithms problem sub logarithmic factors 
cases allow operations multiplication generally try avoid non ac operations 
see discussion model :10.1.1.10.7787
algorithmic techniques algorithms considered combinatorial 
relations distance problems matrix multiplication 
algorithms considered apsp problem rely fast matrix multiplication algorithms see 
algorithms considered deterministic randomized 
interesting variants problems related distances shortest paths considered short survey 
include algorithms restricted families graphs planar graphs see parallel algorithms see algorithms dynamic versions problems see routing problems see geometrical problems involving distances see :10.1.1.10.7787
short survey adopts theoretical point view 
problems involving distances shortest paths graphs great mathematical problems practical problems encountered everyday life 
great interest developing algorithms problems practice 
topic di erent survey hope write 
discussion practical issues see 
basic de nitions graph 
jv jej assume distance graph smallest length path graph length path sum weights edges 
graph unweighted weight edge taken 
graph directed paths considered directed 
directed path graph de ne 
edge weights nonnegative distances de ned 
graph contains directed cycles negative weight path passes negative cycle 
shortest paths source vertex vertices graph compactly represented tree shortest paths 
tree rooted spans vertices reachable graph vertex reachable graph unique path tree shortest path graph 
algorithms discuss return tree tree shortest paths similar representation 
cases producing tree straightforward 
cases doing substantially increasing running time algorithm non trivial task 
due lack space concentrate computation exact approximate distances brie mention issues related generation representation corresponding paths 
single source shortest paths single source shortest paths problem :10.1.1.10.7787
input graph source goal compute distances construct corresponding shortest paths tree 
subsections consider various versions problem 
nonnegative real edge weights input graph unweighted problem easily solved time breadth search bfs see :10.1.1.10.7787
suppose edge nonnegative real edge weight associated 
problem solved classical dijkstra algorithm 
vertex hold tentative distance 
initially fsg 
keep set unsettled vertices initially stage choose unsettled vertex minimum tentative distance settled explore edges emanating 
unsettled update tentative distance follows minfd goes vertices settled 
dicult prove vertex settled change 
ecient implementation dijkstra algorithm uses priority queue hold unsettled vertices 
key associated unsettled vertex tentative distance 
vertices inserted priority queue insert operations 
unsettled vertex minimum tentative distance obtained extract min operation 
tentative distances updated operations 
simple heap priority queue perform insertions extract min decrease key operations log worst case time operation 
gives immediately log time sssp algorithm 
fibonacci heaps fredman tarjan require amortized time insert decrease key operation log amortized time extract min operation :10.1.1.10.7787
gives log time sssp algorithm 
relaxed heaps driscoll may obtain result 
require worst case amortized time decrease key operation log worst case time extract min operation 
operations performed algorithms edge weights additions comparisons 
furthermore sum weights computed algorithms length path graph 
log time algorithm fastest known algorithm model 
dijkstra algorithm produces distances sorted order 
clear requires worst case log comparisons 
sort elements form star leaves attach elements sorted weights edges 
de nition sssp problem require distances returned sorted order 
leads rst open problem algorithm sssp problem model beats information theoretic log lower bound sorting 
algorithm algebraic computation tree model 
nonnegative integer edge weights directed graphs consider single source shortest paths problem nonnegative edge weights :10.1.1.10.7787
time assume edge weights integral just add compare weights 
leads improved running times 
improvements obtained sub logarithmic running time dijkstra algorithm addition comparison model linear 
fact edge weights integral opens new possibilities 
techniques applied scaling bucketing hashing parallelism 
possible tabulate solutions small subproblems 
description techniques scope survey 
merely try state currently best available results 
improved results sssp problem word ram model obtained constructing improved priority queues 
pioneering results obtained van emde boas fredman willard :10.1.1.10.7787
fact construct monotone priority queues priority queues required support sequences operations value minimum key decreases 
thorup describes priority queue log log expected time operation 
gives immediately log log expected time algorithm sssp problem 
randomization needed algorithms reduce space needed linear 
shows sssp problem harder problem sorting edge weights 
han describes deterministic sorting algorithm runs log log log log log time 
gives deterministic log log log log log time linear space algorithm sssp problem 
han algorithm uses multiplication 
thorup describes deterministic log log time linear space sorting algorithm multiplication yielding corresponding sssp algorithm 
improved results graphs sparse may obtained constructing monotone priority queues constant amortized time decrease key operation 
thorup uses approach obtain log expected time algorithm 
recall width machine word 
raman building results ahuja cherkassky obtains nw expected time algorithm 
note rst algorithm fast large second algorithm fast small 
combining algorithms raman obtains log expected time algorithm :10.1.1.10.7787
building results obtains deterministic algorithms running times log log log log :10.1.1.10.7787
interesting note may replaced running times log largest edge weight graph 
hagerup extending technique thorup undirected graphs obtains deterministic log time algorithm 
linear time algorithm directed sssp problem word ram model 
note linear time sorting algorithm give answer question 
sssp problem may easier sorting 
nonnegative integer edge weights undirected graphs improved algorithms mentioned exception just intricate implementations dijkstra algorithm :10.1.1.10.7787
produce sorted list distances avoid sorting bottleneck 
sharp contract thorup developed elegant algorithm avoids rigid settling order dijkstra algorithm 
thorup algorithm bypasses sorting bottleneck runs optimal time 
algorithm works undirected graphs 
remains open problem extensions ideas obtain similar result directed graphs 
results lines obtained hagerup 
positive negative real edge weights allow rst time negative edge weights :10.1.1.10.7787
gap best upper bound obvious lower bound wider 
dijkstra algorithm breaks presence negative edge weights 
best algorithm known problem addition comparison model simple mn time bellman ford algorithm see start fsg 
perform times edge minfd tentative distances change iteration graph contains negative cycle 
problem deciding graph contains negative cycles special case problem nding minimum mean weight cycle graph 
karp gives mn time algorithm problem :10.1.1.30.1861
mn time algorithm single source shortest paths problem positive negative weights addition comparison model 
positive negative integer edge weights goldberg improving results gabow gabow tarjan uses scaling obtain mn log time algorithm version problem absolute value smallest edge weight :10.1.1.10.7787
assumed 
goldberg algorithm algorithms dealing negative edge weights uses potentials see section 
progress problem years 
better algorithm 
pairs shortest paths exact results move consider pairs shortest paths problem 
input graph 
required output matrix holding distances concise representation shortest paths possibly shortest path tree rooted vertex 
nonnegative real edge weights edge weights nonnegative simply run dijkstra algorithm independently vertex 
running time mn log 
karger koller phillips mcgeoch note orchestrating operation dijkstra processes unnecessary operations may saved 
leads log time algorithm problem number essential edges number edges participate shortest paths 
worst case karger introduce notion path forming algorithms 
algorithms addition comparison model additional requirement sum weights computed algorithm length path graph 
addition comparison algorithms mentioned far satisfy requirement 
show path forming algorithm apsp problem perform worst case mn operations 
positive negative real edge weights edge weights negative dijkstra algorithm directly 
johnson observed negative weight cycles new nonnegative edge weights preserve shortest paths computed mn time 
idea simple 
assign vertex potential 
de ne new edge weights follows easy verify new distances satisfy 
potentials path cancel 
shortest paths respect new edge weights shortest paths respect original edge weights original distances easily extracted 
add new vertex add zero weight edges vertices graph 

negative weight cycles graph distances de ned mn time bellman ford algorithm 
triangle inequality immediately implies run dijkstra algorithm vertex new nonnegative weights 
total running time mn log 
may high running time johnson algorithm may high :10.1.1.10.7787
running time achieved simple floyd warshall algorithm see :10.1.1.10.7787
consider possibility obtaining faster algorithms dense graphs 
pairs shortest paths problem closely related fmin product matrices 
ij ij matrices matrix th element ij min fa ik kj refer distance product graph 
may assume ng 
ij matrix ij ij 
easy see exponentiation done respect distance product gives distance pair vertices graph 
furthermore graph contains negative cycle negative elements diagonal apsp problem easily solved log distance products 
fact reasonable assumptions logarithmic factor saved shown apsp problem harder problem computing single distance product matrices see theorem 
distance products computed naively time help :10.1.1.10.7787
algebraic products matrices computed faster 
strassen rst show done operations :10.1.1.10.7787
improvements followed 
exponent matrix multiplication smallest constant matrix multiplication performed algebraic operations additions subtractions multiplications 
brevity forget annoying term substitute 
coppersmith winograd showed :10.1.1.10.7787
known lower bound trivial lower bound 
similar techniques directly obtain algorithms computing distance products :10.1.1.10.7787
unfortunately 
fast matrix multiplication algorithms rely essential way fact addition operations reversed subtractions 
opens way clever cancellations speed computation 
known fact matrix multiplication requires operations additions multiplications allowed :10.1.1.10.7787
follows lower bounds monotone circuits boolean matrix multiplication obtained mehlhorn galil paterson :10.1.1.10.7787
yuval describes simple transformation distance products standard algebraic products :10.1.1.30.1861
assumes exact exponentiations logarithms nite precision real numbers computed constant time 
model unrealistic 
ideas exploited restricted form mentioned section :10.1.1.10.7787
erroneous follow ups yuval result appeared 
cited 
fredman describes elegant way computing distance products matrices additions comparisons algebraic computation tree model 
ecient way implementing algorithm ram model require programs exponential size 
running algorithm small matrices short programs implement algorithm precomputed obtains log log log time algorithm computing distance products :10.1.1.10.7787
takaoka slightly improves bound log log log :10.1.1.10.7787
genuinely sub cubic algorithm apsp problem model algorithm runs time :10.1.1.10.7787
integer edge weights directed graphs consider pairs shortest paths problem directed graphs integer edge weights :10.1.1.10.7787
unweighted case interesting 
rst obtain genuinely sub cubic algorithm unweighted problem alon galil margalit 
algorithm runs time :10.1.1.10.7787
result extends case edge weights range mg 
running time algorithm 
mn :10.1.1.10.7787
see galil margalit :10.1.1.30.1861:10.1.1.10.7787
takaoka obtained algorithm running time :10.1.1.30.1861:10.1.1.10.7787
bound takaoka better bound alon larger values running time takaoka algorithm sub cubic :10.1.1.10.7787
shorthand 
log sssp problem ghting shave sub logarithmic factors 
apsp problem real battle right exponent 
notation hide interesting polylogarithmic factors 
algorithms galil margalit takaoka improved zwick :10.1.1.30.1861:10.1.1.10.7787
furthermore algorithm works edge weights range fm mg 
improvement ingredients 
rst mn algorithm mentioned computing distance products matrices nite elements range fm mg 
algorithm idea yuval :10.1.1.30.1861
implemented time realistic model 
algorithm uses fast matrix multiplication algorithm integer multiplication algorithm 
note mn time algorithm distance products give immediately mn time algorithm apsp problem range elements increased distance product 
second ingredient sampling technique enables replacement distance product matrices smaller rectangular product 
algorithm uses fast rectangular matrix multiplication algorithm see :10.1.1.30.1861
state running time zwick algorithm need introduce exponents rectangular matrix multiplication 
smallest constant product matrix matrix computed algebraic operations 
suppose running time algorithm satis es best available bounds imply example apsp problem directed graphs edge weights taken solved time 
algorithm runs sub cubic time case takaoka algorithm :10.1.1.10.7787
algorithms mentioned di er algorithms mentioned survey augmenting produce compact representation shortest paths distances non trivial task 
requires computation witnesses boolean matrix multiplications distance products 
simple randomized algorithm computing witnesses boolean matrix multiplication seidel :10.1.1.10.7787
algorithm derandomized alon naor see 
alternative somewhat slower deterministic algorithm galil margalit :10.1.1.10.7787
obtaining improved algorithms particular sub cubic algorithms larger values version problem challenging open problem 
hagerup obtained mn log log time algorithm problem word ram model 
reduced mn 
integer edge weights undirected graphs galil margalit seidel obtained time algorithms solving apsp problem unweighted undirected graphs :10.1.1.30.1861:10.1.1.10.7787
seidel algorithm simpler 
algorithms show fact version problem harder boolean matrix multiplication problem logarithmic factor 
seidel algorithm appears uses integer matrix products dicult obtain version uses boolean products :10.1.1.10.7787
witnesses boolean matrix products needed paths distances 
seidel algorithm extremely simple elegant 
simple way ideas obtain similar algorithm weighted graphs 
algorithm galil margalit extended fairly straightforward way handle small integer edge weights 
running time algorithm edge weights taken mg 
improved time bound mn problem obtained zwick 
show fact apsp problem undirected graphs edge weights taken mg harder problem computing distance product matrices elements taken range logarithmic factor 
mentioned section known directed graphs :10.1.1.10.7787
obtaining improved algorithms particular sub cubic algorithms larger values version problem challenging open problem 
undirected graphs equivalent mentioned obtaining faster algorithms distance products matrices elements range mg 
pairs shortest paths approximate results cost exactly computing distances graph may prohibitively large 
section explore savings may obtained settling approximate distances shortest paths 
section assume edge weights nonnegative 
say estimated distance stretch 

say estimated distance surplus estimates correspond actual paths graph upper bounds actual distances 
directed graphs dicult see nite obtaining stretch estimates distances graph hard boolean matrix multiplication :10.1.1.10.7787
hand zwick shows approximate distances stretch distances directed graph may computed time log largest edge weight graph edge weights scaled smallest nonzero edge weight 
unweighted undirected graphs surprisingly graph undirected unweighted estimated distance small additive error may computed quickly fast matrix multiplication algorithms 
rst shown :10.1.1.10.7787
showed surplus estimates distances speci ed pairs vertices may computed log time :10.1.1.10.7787
particular surplus estimates distances graph corresponding paths may computed log time 
give approximation algorithm diameter weighted directed graph runs log log time :10.1.1.10.7787
describes algorithm computing estimated distances set sources vertices graph 
shows constant estimated distance satisfying may computed mn time 
furthermore corresponding shortest paths edges graph 
see section note term multiplying arbitrarily close errors estimates obtained purely additive 
dor obtained improved algorithms obtaining nite surplus estimates distances graph :10.1.1.10.7787
show surplus estimates may computed time time :10.1.1.10.7787
furthermore exhibit surplus time tradeo showing surplus estimates distances may computed kn time 
particular surplus log estimates distances may obtained optimal time 
weighted undirected graphs cohen zwick adapted techniques dor weighted graphs :10.1.1.10.7787
obtain stretch estimates distances time stretch estimates time stretch estimates corresponding stretch paths optimal time :10.1.1.10.7787
algorithms additive errors 
show example path estimate produced time algorithm satis es wmax length wmax weight heaviest edge spanners weighted undirected graphs undirected graph :10.1.1.10.7787
applications related distributed computing see desired obtain sparse subgraph approximates certain extent distances subgraph said spanner :10.1.1.30.1861

de nition implicit appears explicitly 
ofer describe simple algorithm constructing spanner undirected graph nonnegative edge weights :10.1.1.30.1861
algorithm similar kruskal algorithm see computing minimum spanning trees 
consider edges nondecreasing order weight 
currently considered edge 
add easy see process spanner easy see girth greater 
girth graph smallest number edges cycle 
known graph edges contains cycle edges 
follows weighted graph vertices spanner edges 
result believed tight 
proved :10.1.1.10.7787
see :10.1.1.10.7787
fastest known implementation algorithm ofer runs mn time :10.1.1.30.1861
graph unweighted spanner size easily time 
thorup zwick improving result cohen give randomized algorithm computing spanner size kmn expected time :10.1.1.10.7787
approximation algorithms hardness results related spanners obtained peleg peleg :10.1.1.30.1861
unweighted undirected graphs peleg say subgraph unweighted graph spanner 

related notion emulators see :10.1.1.10.7787
peleg improving extending preliminary results dor show graph vertices spanner edges exists graph vertices spanner edges :10.1.1.10.7787
intriguing open problem spanners turned spanners purely additive spanners 
particular open exists graph vertices spanner edges :10.1.1.10.7787
shown graph vertices steiner spanner edges :10.1.1.10.7787
steiner spanner standard spanners necessarily subgraph approximated graph 
furthermore edges steiner spanner may weighted original graph unweighted 
distance oracles section consider problem graph 
preprocess subsequent distance queries shortest path queries answered quickly 
naive solution solve apsp problem best available algorithm store matrix distances 
distance query answered constant time 
obvious drawbacks solution large preprocessing time large space requirements 
better solutions exist graph undirected willing settle approximate results 
term approximate distance oracles coined thorup zwick problem considered previously awerbuch cohen dor :10.1.1.10.7787
improving results authors thorup zwick show graph vertices preprocessed kmn expected time constructing data structure size kn stretch answer distance query produced time :10.1.1.10.7787
space requirements approximate distance oracles optimal conjectured optimal value :10.1.1.10.7787
related conjecture regarding size spanners section 
see discussion :10.1.1.10.7787
open problems remain regarding possible tradeo preprocessing time space requirement query answering time obtained stretch approximate distance oracles 
particular possible combine techniques obtain stretch distance oracle preprocessing time space constant query time :10.1.1.10.7787
tradeo possible randomization allowed 
distance oracles currently available multiplicative errors 
non trivial distance oracles additive errors 
addendum preparation camera ready version survey pettie ramachandran brought attention 
pettie ramachandran de ne addition comparison model distinction ram pointer machine algorithms 
main result algorithm pairs shortest paths apsp problem undirected graphs runs pointer machine mn time making mn log additions comparisons 
number edges number vertices tarjan inverse ackermann function 
main ingredient obtain new algorithm shortest paths sssp algorithm undirected graphs positive edge weights runs log log time pointer machine ratio maximum minimum edge weights 
obtain algorithm sssp problem directed graphs runs log time pointer machine 

aho hopcroft ullman 
design analysis computer algorithms 
addison wesley 

ahuja mehlhorn orlin tarjan 
faster algorithms shortest path problem 
journal acm :10.1.1.10.7787
:10.1.1.10.7787
chekuri indyk motwani 
fast estimation diameter shortest paths matrix multiplication 
siam journal computing 

alon galil margalit 
exponent pairs shortest path problem 
journal computer system sciences 

alon galil margalit naor 
witnesses boolean matrix multiplication shortest paths 
proceedings rd annual ieee symposium foundations computer science pittsburgh pennsylvania pages :10.1.1.10.7787

alon naor 
derandomization witnesses boolean matrix multiplication construction perfect hash functions 
algorithmica :10.1.1.10.7787

ofer das dobkin joseph soares 
sparse spanners weighted graphs 
discrete computational geometry :10.1.1.10.7787

awerbuch 
complexity network synchronization 
journal acm :10.1.1.10.7787

awerbuch berger peleg 
near linear time construction sparse neighborhood covers 
siam journal computing :10.1.1.10.7787

ben 
lower bounds algebraic computation trees 
proceedings th annual acm symposium theory computing boston massachusetts pages :10.1.1.10.7787

cherkassky goldberg 
shortest paths algorithms theory experimental evaluation 
mathematical programming series :10.1.1.10.7787

cherkassky goldberg silverstein 
buckets heaps lists monotone priority queues 
siam journal computing :10.1.1.10.7787
:10.1.1.10.7787
cohen 
selective path doubling parallel shortest path computations 
journal algorithms :10.1.1.10.7787

cohen 
fast algorithms constructing spanners paths stretch siam journal computing :10.1.1.10.7787

cohen 
polylog time near linear approximation scheme undirected shortest paths 
journal acm :10.1.1.10.7787

cohen zwick 
pairs small stretch paths 
journal algorithms :10.1.1.10.7787

coppersmith 
rectangular matrix multiplication revisited 
journal complexity :10.1.1.10.7787

coppersmith winograd 
matrix multiplication arithmetic progressions 
journal symbolic computation 

cormen leiserson rivest 
algorithms 
mit press 


compact routing minimum stretch 
journal algorithms :10.1.1.10.7787

italiano 
fully dynamic transitive closure breaking barrier 
proceedings th annual ieee symposium foundations computer science redondo beach california pages :10.1.1.10.7787

dijkstra 
note problems connexion graphs 
numerische mathematik 
:10.1.1.10.7787
dor halperin zwick 
pairs shortest paths 
siam journal computing 

driscoll gabow tarjan 
relaxed heaps alternative fibonacci heaps applications parallel computation 
communications acm :10.1.1.10.7787


computing shortest paths 
technical report mcs faculty mathematics computer science weizmann institute science rehovot israel :10.1.1.10.7787

peleg 
spanner constructions general graphs 
proceedings th annual acm symposium theory computing crete greece :10.1.1.10.7787
appear 

peleg 
approximating spanner problems 
proceedings th conference integer programming combinatorial optimization utrecht netherlands 
appear 

eppstein 
spanning trees spanners 
org sack jorge urrutia editors handbook computational geometry chapter pages 
elsevier 

fredman 
new bounds complexity shortest path problem 
siam journal computing 
:10.1.1.10.7787
fredman tarjan 
fibonacci heaps uses improved network optimization algorithms 
journal acm :10.1.1.10.7787
:10.1.1.10.7787
fredman willard 
surpassing information theoretic bound fusion trees 
journal computer system sciences :10.1.1.10.7787
:10.1.1.10.7787
fredman willard 
trans dichotomous algorithms minimum spanning trees shortest paths 
journal computer system sciences :10.1.1.10.7787
:10.1.1.10.7787
gabow 
scaling algorithms network problems 
journal computer system sciences :10.1.1.10.7787
:10.1.1.10.7787
gabow tarjan 
faster scaling algorithms network problems 
siam journal computing :10.1.1.10.7787
:10.1.1.10.7787
galil margalit 
witnesses boolean matrix multiplication 
journal complexity :10.1.1.10.7787
:10.1.1.10.7787
galil margalit 
pairs shortest distances graphs small integer length edges 
information computation :10.1.1.10.7787
:10.1.1.10.7787
galil margalit 
pairs shortest paths graphs small integer length edges 
journal computer system sciences :10.1.1.10.7787
:10.1.1.10.7787
goldberg 
scaling algorithms shortest paths problem 
siam journal computing 
:10.1.1.10.7787
hagerup 
sorting searching word ram 
proceedings th annual symposium theoretical aspects computer science paris france pages :10.1.1.10.7787

hagerup 
improved shortest paths word ram 
proceedings th international colloquium automata languages programming geneva switzerland pages 

halperin zwick 
unpublished result 

han 
improved fast integer sorting linear space 
proceedings th annual acm siam symposium discrete algorithms washington pages :10.1.1.10.7787
:10.1.1.10.7787
henzinger klein rao subramanian 
faster shortest path algorithms planar graphs 
journal computer system sciences :10.1.1.10.7787

huang pan 
fast rectangular matrix multiplications applications 
journal complexity 

johnson 
ecient algorithms shortest paths sparse graphs 
journal acm :10.1.1.10.7787

karger koller phillips 
finding hidden path time bounds pairs shortest paths 
siam journal computing :10.1.1.10.7787

karp 
characterization minimum cycle mean digraph 
discrete mathematics :10.1.1.10.7787

king 
fully dynamic algorithms maintaining pairs shortest paths transitive closure digraphs 
proceedings th annual ieee symposium foundations computer science new york new york pages 

klein subramanian 
randomized parallel algorithm single source shortest paths 
journal algorithms 

peleg 
generating sparse spanners 
journal algorithms :10.1.1.10.7787

kruskal 
shortest spanning subtree graph traveling salesman problem 
proceedings american mathematical society 

mcgeoch 
pairs shortest paths essential subgraph 
algorithmica :10.1.1.10.7787
:10.1.1.10.7787
mehlhorn galil 
monotone switching circuits boolean matrix product 
computing 

mitchell 
shortest paths networks 
jacob goodman joseph rourke editors handbook discrete computational geometry chapter pages 
crc press llc boca raton fl 

mitchell 
geometric shortest paths network optimization 
sack jorge urrutia editors handbook computational geometry pages :10.1.1.10.7787
elsevier science publishers north holland amsterdam 

paterson 
complexity monotone networks boolean matrix product 
theoretical computer science :10.1.1.10.7787

peleg 
distributed computing locality sensitive approach 
society industrial applied mathematics siam philadelphia pa 

peleg sch er 
graph spanners 
journal graph theory :10.1.1.10.7787

pettie ramachandran 
computing shortest paths comparisons additions 
technical report tr department computer sciences university texas austin 
www cs utexas edu users vlr papers sp ps 

raman 
priority queues small monotone trans dichotomous 
proceedings nd european symposium algorithms barcelona spain pages :10.1.1.10.7787

raman 
results single source shortest paths problem 
sigact news 

sch strassen 
zahlen 
computing 
:10.1.1.10.7787
seidel 
pairs shortest path problem unweighted undirected graphs 
journal computer system sciences :10.1.1.10.7787

zwick 
pairs shortest paths undirected graphs integer weights 
proceedings th annual ieee symposium foundations computer science new york new york pages 

strassen 
gaussian elimination optimal 
numerische mathematik :10.1.1.10.7787

takaoka 
new upper bound complexity pairs shortest path problem 
information processing letters :10.1.1.10.7787

takaoka 
cost algorithms pairs shortest path problem 
algorithmica :10.1.1.10.7787

thorup 
faster deterministic sorting priority queues linear space 
proceedings th annual acm siam symposium discrete algorithms san francisco california pages 

thorup 
undirected single source shortest paths positive integer weights linear time 
journal acm :10.1.1.10.7787

thorup 
floats integers single source shortest paths 
journal algorithms :10.1.1.10.7787

thorup 
ram priority queues 
siam journal computing :10.1.1.10.7787

thorup 
compact oracles reachability approximate distances planar digraphs 
manuscript 
:10.1.1.10.7787
thorup zwick 
approximate distance oracles 
proceedings th annual acm symposium theory computing crete greece pages :10.1.1.10.7787

thorup zwick 
compact routing schemes 
th annual acm symposium parallel algorithms architectures crete greece pages :10.1.1.10.7787

van emde boas 
preserving order forest logarithmic time linear space 
information processing letters :10.1.1.10.7787

van emde boas 
design implementation ecient priority queue 
mathematical systems theory 

yuval 
algorithm nding shortest paths nite precision multiplications 
information processing letters 

zwick 
pairs shortest paths weighted directed graphs exact exact algorithms 
proceedings th annual ieee symposium foundations computer science palo alto california pages :10.1.1.10.7787
journal version submitted title pairs shortest paths bridging sets rectangular matrix multiplication 

zwick 
pairs lightest shortest paths 
proceedings th annual acm symposium theory computing atlanta georgia pages :10.1.1.10.7787
