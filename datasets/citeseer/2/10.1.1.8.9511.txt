design multi lingual parallel processing statistical parsing engine daniel bikel department computer information science university pennsylvania south rd street philadelphia pa cis upenn edu 
widespread availability penn treebank numerous statistical parsers developed english :10.1.1.14.298
varying degrees parsers successful tasks designed limitations fairly fixed probabilistic structure changed re coding significant portion program hard coded features specific english hard coded features specific penn treebank designed uniprocessor environment building developed design head driven chart parsing engine addresses limitations design 
particular design provides appropriate layers abstraction encapsulation quickly porting di erent languages treebank annotation styles plug play probability structures multi threaded multiprocessor environment throughput far superior traditional parsers 

background remarks charniak naacl conference parser appear limitation possessing flexible mechanism specify di erent probability structures 
probability structures sentence level parallelism preparation explored variety lexical probability structures involving wordnet synsets 
facilitate experimentation developed plug play lexical probability structure architecture 
model extending extracted bbn sift system history model derived large part model :10.1.1.14.298
computation probability estimates bbn parser hard coded construction data objects represent history events computing maximum likelihood estimate delivers count argument training data 
architecture placed layer abstraction computation histories various back levels parser pseudocode construction history object particular back level simply history get initial parallel processing developing multi threaded sentence server provide parallelism sentence level cluster computing environment 
paved way significantly greater degree parallelism architecture current parsing engine 
language independence took parsing models bbn sift derived parser david chiang stochastic tag parser adapted parse chinese 
results chinese adapted models performed accuracy close english counterparts trained comparably sized corpora tested respective domains 
main di culty project replacing traces english specific treebank specific code parsers replacing code dependent default character encoding finding abstracting away word features parts speech 
project greatly influenced language independent design current architecture allows language package contains data methods specific particular language treebank annotation style 
comparably sized corpora words wsj text english penn treebank words newswire text chinese treebank 
stochastic tag model performed labeled precision recall test set compared english test set 
see details 

design overview parsing engine developed supports wide range head driven parsing models including bbn sift system models 
gives pictorial overview design 
language package significant data encapsulation design language package 
language package typically actual java package collection java classes extensions classes provide specification data methods specific particular language treebank annotation style 
required classes treebank training 
treebank class provides data methods specific particular treebank predicates complex nonterminal labels 
training class provides methods data specific preprocessing training trees 
primary function class read data text file specifying head rules specific particular language treebank provide head finding method 
class provides mapping lexical items particular language orthographic morphological word feature vectors aid part speech tagging 
additional language independent design criterion relevant input output files written read user settable character encoding 
goal treebanks radically di erent penn treebank chinese treebank possibly korean treebank property able create new language package weeks 
language dependent module currently sit inside language package wordnet simply due fact implement model 
initial implementation complete language specific lexical resources part language package framework 
probability structure objects type output element models supported engine including parts speech words word features gaps subcat frames associated object specifies form data objects representing history possible backo levels output element 
objects containing maximal context called objects passed single method delivers appropriate history specified back level pseudocode example section 
layer abstraction exists probabilistic events objects represent events conform event interface 
abstraction allows maximum flexibility underlying types representation event elements java package lisp provides separate name space collection classes data members providing level access control data methods data methods accessible enclosing package 
part speech tagging fully integrated models supported architecture 
lines word features shown reduce part speech ambiguity unknown words may employed models architecture 
java stores characters internally unicode characters runtime environments support wide variety character encodings supporting wider variety world languages making java ideal language implement software 
interface java construct borrowed smalltalk programming language specifies contract implementations follow form set method function signatures augmented needed api documentation 
typically output elements parser include features derived output elements 
way user easily test new probability structures architecture new events new types event elements 
probability level parallelism simplest form parallelization increase parser throughput splitting test file multiple segments multiple executables run segments separate host 
sentence server provided finer granularity parallelism required separate parser host 
schemes waste memory resources parser contains massive tables containing counts events observed training data 
current design exhibits finer degree parallelism introducing probability server 
idea object sit multiprocessor large amount ram providing smoothed top level probability estimates small chart parsing clients 
architecture supports load balancing multiple large multiprocessing hosts available 
java provides elegant solution distributed computing built technology called remote method invocation rmi 
additional feature distributed computing parsing engine fully fault tolerant objects parsing clients fail system keep operating 
switchboard fail see servers clients patiently wait reconnect switchboard new switchboard brought recover state old switchboard time failure 
distributed system need collection closely knit identical hosts 
java runtime environment available virtually operating system architecture parsing engine run disparate set hosts running example solaris linux windows macos requirement internet connectivity 

built speed want flexibility compromise ciency system spent significant ort optimizing decoder 
employed categories optimizations 
precomputation log probability estimates necessitating floating point add operations computing probability estimates decoding 
creation hash maps optimized mapping arbitrary java objects primitive types achieving spatial locality probability lookups eliminating need primitive wrapper objects 
short circuiting decoding operations evident resulting new chart item zero probability 
elimination new object creation decoding including object pool cient recycling chart item objects 
smaller optimizations profiling scott miller bbn invaluable advice parser optimization 
language contains static language package objects treebank training language package rmi rmi cky client cky client cky client optional models client requests stub sentences requests maximal context model objects provides event objects containing treebank training corpus wordnet server prior decoding causes derive back counts trainer rmi client server settings settings switchboard rmi part speech dictionary model object contains object stores counts smoothed probability computation subcat dictionary smoothed probabilities requests server registers pictorial design overview 
arrows indicate functional relationships 
necessarily bi directional flow information solid arrows indicate direction requests client server consumer producer 
dashed arrows explicitly indicate flow information objects 
words words parser lr lp lr lp collins bikel results collins thesis model replication model section penn treebank 
lr labeled recall 
lp labeled precision 
optimization technique crucial importance achieving single greatest speed improvement 
particular computation modifier generation probability decoder checks see level back model history occurred particular modifier generated training 
impossible model deliver zero probability 
put way coarsest context occurred generated certainly specific contexts occurred model zero probability entire smoothed estimate 
optimization resulted fold speedup implemented subcat generation model resulting greater speedup 

flexibility put test replicating collins thesis model models described tasks great importance field 
baseline research attempted replicate model collins thesis new engine 
replication turned di cult anticipated happily achieved results development test set nearly identical reported collins thesis see 
documented implementation orts extreme javadoc documentation tool integrated standard java software development kit 
collins important model fully described public domain aim release system public research purposes year means provide fully documented version model collins thesis resource researchers interested statistical parsing language processing general 
hope flexibility engine useful research testbed 
developing language package chinese mentioned section desideratum engine able implement new language package weeks 
implemented language package chinese chinese treebank half days 
significantly shorter expected implementation time achieved state art results 
division reading thoroughly detailed written document implementing model puzzling gap performance parser model documented performance 
happened replication model required painstaking analysis data files output collins trainer order reconstruct trainer doing detailed analysis parser code 
analyses revealed things discrepancies details described actual implementation 
additionally replication required mail exchanges collins clear ambiguities thesis parser code 
mike collins invaluable advice orts replicate model 
data training test sets set previous sentences length engine achieved labeled recall labeled precision 
comparison parsers aware trained tested data parser recall equivalent precision significantly higher 
encouraging results hope improve chinese parsing performance implement language packages set treebanks languages 

design shown various engineering practices technologies modern computer science address limitations current statistical parsers 
techniques technologies applied nlp software general particularly light growing need develop cient software 
abstracting away idiosyncrasies training data particular probability structure parser output elements provide parser developers means test various probability structures features back schemes result pure theorizing empirical study presumably allow experimentation maintaining high degree computational ciency 
shown choosing linguistically motivated features independence assumptions result estimated high performance model 
hope continued application sound engineering practices lead cient scalable portable nlp software benefit exploration testing linguistic theories 

daniel bikel 
statistical model parsing word sense disambiguation 
joint sigdat conference empirical methods natural language processing large corpora hong kong october 
daniel bikel david chiang 
statistical parsing models applied chinese treebank 
martha palmer mitch marcus aravind joshi fei xia editors proceedings second chinese language processing workshop pages hong kong 
eugene charniak 
maximum entropy inspired parser 
proceedings st meeting north american chapter association computational linguistics pages seattle washington april may 
david chiang 
statistical parsing automatically extracted tree adjoining grammar 
proceedings th annual meeting association computational linguistics 
michael collins 
generative lexicalised models statistical parsing 
proceedings acl eacl pages 
michael collins 
discriminative reranking natural language parsing 
international conference machine learning 
appear 
michael john collins 
head driven statistical models natural language parsing 
phd thesis university pennsylvania 
magerman 
statistical decision tree models parsing 
rd annual meeting association computational linguistics pages cambridge massachusetts 
morgan kaufmann publishers 
mitchell marcus beatrice santorini mary ann marcinkiewicz 
building large annotated corpus english penn treebank 
computational linguistics 
scott miller fox lance ramshaw ralph weischedel 
sift statistically derived information text 
seventh message understanding conference muc washington 
weischedel meteer schwartz ramshaw 
coping ambiguity unknown words probabilistic methods 
computational linguistics 
fei xia chung han martha palmer aravind joshi 
comparing lexicalized treebank grammars extracted chinese korean english corpora 
martha palmer mitch marcus aravind joshi fei xia editors proceedings second chinese language processing workshop pages hong kong 
fei xia martha palmer xue mary ellen john huang tony mitch marcus 
developing guidelines ensuring consistency chinese text annotation 
proceedings nd international conference language resources evaluation lrec athens greece 
