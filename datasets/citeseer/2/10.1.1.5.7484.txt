sound computational interpretation formal encryption composed keys laud university estonia math ut ee ricardo corin university twente box ae netherlands 
corin cs utwente nl 
formal computational views cryptography related seminal abadi rogaway 
formal treatment encryption uses atomic keys justified computational world 
proposed formal approaches allow composed keys arbitrary expression encryption key 
consider extension formal model abadi rogaway allowed composed keys formal encryption 
provide computational interpretation expressions allow establish computational soundness formal encryption composed keys 
usually necessary adopt view cryptographic operations message encryption design analysis cryptographic protocols manageable 
di erent related views cryptographic operations formal computational developed separately years 
exchanged messages protocol modelled formal expressions term algebra 
cryptographic operations message pairing encryption modelled term constructors 
setting adversary abilities modelled terms messages adversary knows see 
furthermore security properties protocol supposed achieve modelled formally 
hand computational model messages considered realistically bit strings cryptographic operations seen functions bit strings 
supported estonian science foundation 
funded project 
adversary modelled cient algorithm security properties cryptographic protocol defined terms probability adversary perform succesful attack 
models advantages disadvantages 
hand formal model allows reason cryptographic protocols easily generally 
benefits arise adoption fairly strong assumptions freeness term algebra fixing adversary model 
hand computational model considering messages bit strings modelling adversary cient algorithm provides realistic model ers convincing security guarantees 
proving protocols correct computational model di cult general formal model 
abadi rogaway shown formal expressions similar formal adversary corresponding computational interpretations represented bit strings computational model indistinguishable computational adversary 
result comprises important step relating formal computational model 
composed keys 
formal encryption modelled atomic keys formal expression represents encryption message key formal expression atomic symbol representing cryptographic key 
considering atomic keys encryption su cient need able allow encryption composed keys representing non atomic constructed keys 
setting formal language need able consider expressions form expressions 
considering composed keys possible encryption keys important due protocol design fairly common construct symmetric keys shared secrets exchanged data part protocol run 
examples gong proposed protocol achieving private authentication 
real world cryptographic protocols composed keys see example ssl 
furthermore formal model approaches constraint solving designed specific support composed keys subsequently improved 
defines computational interpretation operation briefly interpretation consists encrypting interpretation key obtained applying random oracle 
interpretation quite intuitive 
hand forces random oracle model computational model 
random oracle necessary goodness keys questioned independence di erent keys 
define relation formal expressions main contribution show implies computational indistinguishability 
related 
abadi rogaway extended abadi laud 
works similar soundness results obtained richer formal languages considering values formal expressions dealt outputs programs 
di erently formal language extended languages treat encryption operation atomic keys 
micciancio warinschi considered converse soundness result completeness formal language 
shown completeness result obtained considering stronger encryption scheme authenticated encryption scheme 
extensions seminal deal encryption cycles expressions 
instance expression contains trivial cycle key immediately encrypted 
computational model security traditional encryption scheme compromised adversary gets hold message containing encryption cycle 
original abadi rogaway formal expressions restricted cycle free 
black laud shown fact discrepancy addressed di erent ways considering new stronger security definition encryption scheme strengthening adversary model formal model able break encryption cycles 
bellare studied security cryptosystems related key attacks provided construction secure cryptosystem certain kind attacks 
related keys di erent composed keys related key constructed existing key non key data composed key constructed non key data 
plan 
section formal language 
section introduce basic notions computational model needed sequel algorithm translating formal expressions computational distributions bit strings 
section introduce equivalence relation formal expressions 
equivalence relation elaborated illustrated examples section 
section main contribution soundness result relates formal computational models 
section concludes 
expressions patterns bool set keys set formal keys fixed infinite set symbols 
intuitively elements keys represent cryptographic keys 
rnd set formal random numbers fixed infinite set symbols disjoint keys 
rnd needed usually constructors formal expressions encryption represent probabilistic operations 
means operation executed twice arguments results di erent 
elements rnd keep track subexpressions expression represent invocation operation subexpressions represent di erent invocations 
set formal expressions exp defined grammar bit key pair encryption bool keys rnd 
clearly see composed keys allowed encryption operation 
labels identifiers invocations encryption algorithm demand consider expressions label abadi rogaway formal random numbers assumed occurrence encryption constructor represents di erent invocation encryption operation 
furthermore abadi considered richer language needed keep track di erent invocations 
done similarly formal random numbers 
define notation related structure formal expressions 
subexpression relation smallest reflexive transitive relation exp containing exp rnd 
expression denote keys keys rns rnd exp atoms keys rns call elements atoms atoms intuitively formal pattern describes adversary able see looking expression 
elements set formal patterns pat defined grammar bit key pair encryption undecryptable denote ciphertexts encrypted key adversary know see inside 
formal random numbers di erentiate ciphertexts require formal random numbers encryptions di erent formal random numbers 
relation functions keys rns atoms extended pat 
note sets rns atoms contain formal random numbers 
computational interpretation computational model encryption system triple polynomialtime algorithms working bit strings 
probabilistic algorithms deterministic 
key generation algorithm takes input security parameter represented unary returns new key 
encryption algorithm takes input security parameter key plaintext produces corresponding ciphertext 
probabilistic di erent invocations may return di erent ciphertexts 
lastly decryption algorithm takes input security parameter key ciphertext returns corresponding plaintext 
fixed bit string 
say encryption system type secure probabilistic polynomial time ppt algorithms interfaces oracles di erence probabilities pr pr negligible function negligible reciprocal grows faster polynomial 
abadi rogaway showed type security achievable standard cryptographic assumptions 
type secure encryption system distribution uniform probability distribution fixed polynomial 
type secure guarantees algorithm probabilistic denote invocation random coin flips fix algorithm deterministic 
security definition assume uniform distribution bit string 
random oracle machine query checks queried values 
case returns answer 
proceeds follows 
random oracle creates uniformly randomly bit string length random oracle records query returned 
random oracle model single random oracle world algorithms machines allowed query oracle 
able translate model random oracle world real system random oracle needs replaced function leap faith involved applying results proved random oracle model real system 
sure real system insecure caused approximation ready give computational interpretation expressions patterns 
pat associate family indexed security parameter probability distributions bit strings 
denote family 
fig 
depicts algorithm sampling th distribution family 
initialize run convert invoked 
algorithm initialize keys bb rns algorithm convert keys return key bool return bit convert convert return pair convert convert return ciphertext bb return ciphertext fig 

algorithm sampling note sample pair probability negligible 
fact existence random oracle su cient existence type encryption systems 
particular fixed encryption system example 
random oracle little possible fixed 
families probability distributions bit strings indistinguishable denoted ppt algorithms di erence probabilities pr pr negligible fact indistinguishability computational equivalent sameness 
equivalence relation pat define equivalence relation formal expressions generally patterns implies 
similarly abadi rogaway define function pattern exp pat state pattern pattern obtained conversion keys formal random numbers 
define function pattern similarly giving entailment relation relation describes formal expressions dolev yao attacker may obtain expression replacing undecryptable encryptions expressions corresponding blobs chose give di erent equivalence definition 
reason followed abadi rogaway assume expressions contain encryption cycles 
atomic keys encryption cycle expression sequence keys 
km encrypted possibly indirectly 
km encrypted expression definition type security say security encryption cycles systems abadi rogaway results applied encryption cycles occur 
considering composed keys definition encryption cycles di erent parts key kept track 
avoid defining encryption cycles definition applies expressions 
pat 
operation box replaces encryptions form occurring 
formally operation box defined box box box box box box box box box looking su cient conditions box 
particular going prove su cient condition 
set atoms occurring subexpressions form keys random numbers inside count 
su cient condition looking atoms state formally define sets bq pat way bq bq bq bq bq bq bq bq bq bq set bq 
condition fulfilled say box 
say obtained conversion applied formal keys random numbers 
extend equivalence relation 
ready define function pattern pat 
exists pat box occurs encryption key box put pattern pattern box 
put pattern easy check pattern defined 
furthermore function pattern ciently computable 
examples going proof equivalence implies indistinguishability interpretations see examples 
going repeat examples abadi rogaway examples intend illustrate clarify constitutes encryption cycle expression 
atom encryption key occur 
reader checking examples keep mind uses formal random numbers occurrence encryption constructor assumed di erent formal random number attached imply contains encryption cycles 
expression clear cut encryption cycle 
encryption cycles subtle examples show 

example contains encryption cycle 
second example atom key occur 
examples show importance formal random numbers 

compared example addition means atoms encryption key occur 
correctness proof theorem 
pat atoms bq 
box 
proof 
assume contrary algorithm distinguish families probability distributions box 
fig 
shows algorithm call initialize convert sampling box depending values oracles algorithm fig 
samples 
algorithm samples box 
composing algorithm algorithm allows break type security encryption system 
show algorithm convert complete job access point undefined 
key occurs belong bq key occurs subexpression encryption key convert needed context oracle encrypting 
need value 
similarly rnd occurs bq need computing interpretation encryption key necessary compute 
belongs set subtracted bq algorithm initialize oracles generate random numbers 
argue algorithm fig 
samples claimed families distributions 
clearly convert samples box 
algorithm initialize bq set bq rnd occurs rnd occurs algorithm convert convert invoked return value returned previously keys return key bool return bit convert convert return pair convert convert convert return ciphertext return ciphertext fig 

algorithm sampling show key indistinguishable convert values bq 
key independent values values uniquely determine convert atoms bq 
values guess value convert negligible success probability 
application random oracle value gives random bit string independent values key bit string convert identically distributed indistinguishable conditions 
convert samples 
considered extension abadi rogaway 
extension mainly constituted considering composed non atomic keys encryption operator formal language 
briefly proceeded follows related formal expressions language equivalence relation 
providing intuitive computational interpretation showing time formal expressions equivalent indistinguishable computational world lifted abadi rogaway case composed keys 
mentioned support encryption composed keys important cryptographic protocols :10.1.1.115.3569
having soundness result case formal encryption composed keys provides faithfulness verification results formal approaches support composed keys 
giving computational interpretation needed random oracle 
approach gives security guarantees original abadi rogaway standard security assumptions 
believe random oracle necessary guarantee goodness independence constructed keys 
usage random oracle allow model situation user generates keys completely secure manner accordance existing definitions computational model 
situations considering composed keys key generation process may private activity 
new setting adversary knowledge randomness key genera tion 
furthermore stronger active adversary may control key generation process 
believe interesting study new scenario new proper definitions constructions needed 

abadi 
private authentication 
proceedings workshop privacy enhancing technologies pages 
springer verlag 

abadi 
formal eavesdropping computational interpretation 
fourth international symposium theoretical aspects computer software tacs lncs 
springer verlag 

abadi rogaway 
reconciling views cryptography computational soundness formal encryption 
journal cryptology number pages 
springer verlag 

basin 
constraint di erentiation new reduction technique constraint analysis security protocols 
workshop security protocol verification 
concur september 

bellare 
practice oriented provable security 
information security international workshop lncs pages 

bellare 
theoretical treatment related key attacks prfs applications 
eurocrypt lncs pages 

bellare rogaway 
random oracles practical paradigm designing cient protocols 
acm conference computer communications security pages 

black rogaway shrimpton 
encryption scheme security presence key dependent messages 
selected areas cryptography sac lncs 
springer verlag 

burrows abadi needham 
logic authentication 
acm transactions computer systems 

corin 
improved constraint system verification security protocols 
th int 
static analysis symp 
sas lncs september 

dolev yao 
security public key protocols 
ieee transactions information theory 

freier kocher 
ssl protocol 
version 

goldreich 
foundations modern cryptography 
lecture notes computer science 

gong 
way functions authentication 
acm sigcomm computer communication review 

laud 
semantics program analysis computationally secure information flow 
programming languages systems th european symposium programming esop held part joint european conferences theory practice software etaps genoa italy april volume lncs pages 
springer verlag 

laud 
encryption cycles views cryptography 
proceedings th nordic workshop secure systems university studies pages 

micciancio warinschi 
completeness theorems abadi rogaway language encrypted expressions 
appear 

millen shmatikov 
constraint solving bounded process cryptographic protocol analysis 
acm conference computer communication security volume proc 
pages 
acm press 

paulson 
inductive approach verifying cryptographic protocols 
journal computer security 
