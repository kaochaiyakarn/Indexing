solving examination timetabling problems adaption heuristic orderings burke newall automated scheduling optimisation planning group school computer science university nottingham nottingham ng bb uk cs nott ac uk limited road belfast bt af northern ireland jim newall com keywords examination timetabling heuristics graph colouring ams mos classification heuristic ordering methods similar graph colouring problems long applied successfully examination timetabling problem 
despite success methods real life problems limited computing resources approach fundamental flaw effective heuristic 
motivations attempt develop approaches operate higher level generality adapt heuristics suit particular problem instance hand 
adaptive method adapts suit particular problem instance fly 
method provides alternative existing forms backtracking required cope possible heuristic 
range experiments benchmark problems test evaluate approach 
comparison published approaches solving problem adaptive method general significantly quicker easier implement produces results comparable better current state art 
demonstrate level generality approach starting inverse known heuristic null ordering random orderings showing adaptive method transform bad heuristic ordering 
exam timetabling problem essentially concerned scheduling number exams limited number timeslots periods order satisfy possible set specified constraints 
constraints vary institution institution 
detailed analysis study institutional requirements british universities 
essential constraints completely satisfied 
constraints called hard constraints 
usually constraints relate operational limitations bypassed real world constraint person places maximum number people accommodated particular room 
call timetable satisfies hard constraints feasible timetable 
class constraints occur timetabling problems deemed desirable difficult impossible fully satisfy 
include providing study time student exams making efficient rooms 
constraints usually called soft constraints 
constraints determine quality timetable 
general think quality timetable firstly feasible secondly satisfies soft constraints acceptable level 
course quality solution subjective 
institution idea timetable poor timetable institution 
example may institution insists having clear day exams students hard constraint 
institution may concerned holding exams quickly possible case inclusion constraint detrimental quality timetable 
issues surrounding perceived quality examination timetables real world situations british universities discussed detail 
years wealth literature automated timetabling review papers discuss major approaches timetabling 
early approaches exam timetabling tended employ heuristic ordering heuristic measure difficulty scheduling particular exam 
heuristics graph colouring heuristics 
idea difficult exams scheduled get way easier exams scheduled process 
general approach proved effective particularly backtracking added process 
backtracking procedure called possible place particular exam timetable earlier placements 
essence procedure certain exams clash current exam 
allow problem exam scheduled 
unscheduled exams rescheduled alternative times 
details heuristic procedures survey papers mentioned 
carter laporte lee competitive results range benchmark problems 
results generated employment graph colouring heuristics backtracking 
burke newall weare employ backtracking incorporated random element heuristic procedure produce compromise approach heuristic ordering methods time consuming meta heuristic approaches 
years range meta heuristic approaches applied examination timetabling 
simulated annealing problem investigated thompson dowsland 
employ phase approach 
st phase concerned finding feasible solution nd phase attempts optimise soft constraints attempt produce better quality timetables 
bullnheimer investigated simulated annealing examination timetabling 
concentrates small scale problems real world problem particular 
tabu search extensively studied 
earliest investigations meta heuristic exam timetabling hertz 
employed tabu search successfully solve real world problem university technology 
white xie tabu search approach examination timetabling 
approach uses short term memory longer term memory attempt find quality solutions 
results data sets compare favourably results carter laporte lee reported di schaerf investigate tabu search method exam timetabling 
di schaerf approach draws heavily graph colouring heuristic methods 
relatively detailed comparison approach approaches range benchmark problems produced competitive results :10.1.1.3.8704
authors say approach works better pure memetic algorithm constructive 
approach solving examination timetabling problems adaption heuristic orderings decomposition performs better 
memetic decomposition methods briefly discussed 
years significant level interest evolutionary genetic approaches examination timetabling 
corne fang mellish investigated straightforward genetic algorithm approach examination problem department artificial intelligence university edinburgh 
approach compared favourably previously produced manual results 
corne ross fang discussed employment evolutionary algorithms exam timetabling problems noted potential evolutionary algorithms area 
discussed mutation operators delta evaluation method speed evolutionary approach 
burke weare discussed series recombination operators exam timetabling 
ross corne compared approaches genetic algorithms simulated annealing stochastic hill climbing test suite exam timetabling problems 
authors point limited experiment simulated annealing stochastic hill climbing better genetic algorithm terms solution quality 
course ross corne point representation genetic algorithm particularly important consideration comparisons employing different representations may lead different results 
burke weare represent timetable directly incorporate graph colouring techniques crossover operators 
heuristics meta heuristics solve problem theme runs papers exam timetabling problem 
burke newall weare memetic algorithm applied benchmark problems 
memetic approach hybrid evolutionary algorithm employed mutation recombination hill climbing algorithm 
produced results time benchmark data 
genetic algorithm exam timetabling approach demonstrated real data middle east technical university ankara turkey 
corne ross looked initialisation strategies 
term represent slightly hungry algorithms greedy ones 
showed strategies effective greedy random ones exam timetabling data department artificial intelligence university edinburgh 
burke newall weare study initialisation strategies evolutionary exam timetabling 
particular concentrated employment graph colouring heuristics initialisation process showed strategies improve performance memetic approach 
authors pointed algorithm initialisation started solutions comparable solutions finished started random population 
meant evolutionary algorithm employed fine tune solutions 
burke newall incorporated problem decomposition method memetic algorithm :10.1.1.3.8704
basic idea split large timetabling problems series smaller subproblems deal turn 
obvious drawback potential run difficulties sub problems decisions taken earlier subproblems 
authors addressed graph colouring heuristics form subproblems employing look ahead approach sub problems dealt 
strategy hardest exams schedule heuristics placed earlier sub problems 
development decomposition method motivated goal trying speed evolutionary process 
significantly improved solution quality produced best results far published certain benchmark problems 
erben investigated theme incorporating graph colouring heuristics evolutionary methods exam timetabling problems 
approach uses representation draws grouping character graph colouring 
details grouping problems see 
erben method developed graph colouring problem initial modifications apply exam timetabling problem shown promise 
burke petrovic drew hill climbing mutation operators develop multi criteria approach examination timetabling 
possible compare approaches methods employ single cost function provide higher level flexibility handling constraints 
multi criteria approach able comfortably handle range fundamentally dif solving examination timetabling problems adaption heuristic orderings ferent constraints establish balance quality measure may applied 
ross hart corne discussed limitations genetic algorithms concluded direction timetabling research investigate genetic algorithms choose right algorithm solve problem employed directly problem 
marin ross investigated just approach demonstrated potential shows raise level generality automated timetabling methods 
research themes authors currently investigating ross hart uk research council funded project investigate hyper heuristics thought heuristics choose heuristics 
research carried project 
approach exam timetabling years consider constraint techniques 
nuijten kunnen aarts dignum employed constraint satisfaction real world exam timetabling problem eindhoven university technology 
boizumault constraint programming language called chip develop exam timetabling package 
results real world timetabling problem universite catholique de 
david constraint approach incorporates heuristics local repair methods 
approach ecole des mines de nantes 
examination timetabling problems generating considerable interest researchers fields operations research artificial intelligence 
details directions timetabling research case reasoning solve problem directly select appropriate heuristics multi criteria methods hyper heuristics seen 
range methods techniques years tackle exam timetabling problems tended draw problem specific information particular heuristics 
deals goal trying develop general exam timetabling systems certain extent independent heuristics employed 
examination timetabling problem heuristic ordering methods problem definition general problem discussed concerned scheduling number exams set number periods timeslots 
problem description authors aid reader 
constraints problem 
student required attend exams time 

allocated number seats period exceeded 

students allowed reasonable study time exams possible 
reality number additional side constraints certain exams limiting exam particular times rooms describe problem formally exams scheduled periods examination seats available period non negative integers 
multiple periods single day possible exams conflict 
term conflict exams mean student enrolled exams 
consider types conflicts solving examination timetabling problems adaption heuristic orderings order conflicts describe situations conflicting exams scheduled period 
highly undesirable involves quarantining students exam may sit exam main sitting 
difficult situations regarded basic hard constraint 
second order conflicts hand important represent situations conflicting exams scheduled period scheduled periods near 
instance want students sit exams consecutive periods sit exams day 
satisfaction constraints practical usually treated soft constraints 
important goal respect limitations available seating period 
notation employed ip ij pq exam scheduled period number students exams period day period adjacent days 
provides higher weight day conflicts important satisfy 
number students exam cases may possible construct feasible timetable 
extra period th period exams scheduled valid period placed 
hard constraints prevent scheduling period heavily penalised 
experiment alternative methods solution evaluation order enable comparison wider range existing methods 
shown expressions 
expression represents mechanism measuring student spread proximity 
expression represents alternative measure sums cases students attend exams consecutive periods strongly discourages incomplete timetables weighting number unscheduled exams 
consecutive periods day adjacent conflicts weighted 
single night conflicts weighted conflicts ignored example periods split weekend 
ij ti regardless method evaluation hard constraints observed remain formulae 
equation states event scheduled timetable 
equation specifies conflicting events scheduled period relation enforces condition total number seats required period greater number seats available 
solving examination timetabling problems adaption heuristic orderings ti heuristic ordering methods tip ip jp ij tips mentioned useful think clash elimination part problem terms graph colouring 
relationship graph colouring problem illustrated associating exams vertices associating clashes exams edges vertices 
relationship completed associating colours periods timetable 
obvious similarity surprise number graph colouring approaches briefly discussed applied exam timetable problem 
probably best known heuristic ordering methods 
terms graph colouring methods function heuristic estimate difficult vertex colour 
idea colouring difficult vertices require lower number colours completely colour graph coloured vertices random order 
examples common heuristics estimate difficulty include largest degree 
vertices large number edges vertices termed degree dealt 
timetabling terms considered difficult schedule lower degree 
largest colour degree 
similar largest degree count edges vertices coloured 
example vertex high degree adjacent vertices coloured considered currently difficult assigned colour 
saturation degree 
heuristic chooses exams valid periods currently available timetable 
idea exams need scheduling sooner number options easily exhausted 
mentioned method proposed burke newall weare improve results traditional heuristic ordering methods adding random element process 
scheduling difficult exam stage schedule random choice difficult exams 
random element get different solution time algorithm run 
effect method run multiple times best solution kept 
results showed iterated approach produce substantially better results single non randomised run 
solving examination timetabling problems adaption heuristic orderings adaptive heuristic construction method motivation key motivation design method goal developing general solutions exam timetabling problems 
wealth timetabling research years resulted various exam timetabling algorithms approaches certainly increased understanding exam timetabling problems solve 
case techniques methods focus problem type problem 
carter laporte point survey 
limited research attempting develop timetabling systems operate higher level generality 
situation change see 
goal attempt choice heuristic automated exam timetabling process important currently example consider largest degree heuristic 
functions estimating difficult vertex colour 
assumption vertices edges typically difficult colour 
move graph colouring related problems timetabling additional factors come play 
instance event may difficult suitable room available scheduled limited 
means largest degree useful factors added problem 
essence want arrive estimation difficulty experience pre specified metric 
current example saturation degree sorting estimates difficulty number valid colours periods currently available assign vertex event 
carter conclude comparing different algorithmic strategies shown combined backtracking strategy saturation degree sorting rule systematically yields shorter schedules computing time 
clearly case random test problems difficult real problems 
expect experience approaches better worst average case performance pre defined metrics due ability adapt extreme circumstances 
solutions generated pre defined metrics require time consuming tweaking human operator exceptions pre defined metric arise 
examples approaches attempt harness run time experience include concept wheel optimisation proposed joslin clements :10.1.1.17.8180
greedy constructor applied problem followed analysis phase identifies problematic elements produced solution 
ensures greedy constructor concentrates problematic elements time authors phrase wheel gets 
cycle iterated stopping criteria met 
selman kautz propose similar modification gsat procedure 
gsat procedure randomised local search procedure solving propositional satisfiability problems 
functions iteratively generating truth assignments successively flips variable leads greatest increase clauses satisfied steepest descent style 
proposed modification increases weight clauses unsatisfied local search procedure 
effect subsequent attempts local search element concentrate satisfying clauses 
iterated heuristic ordering method 
iteration method essentially isolated iteration reuse partial solutions 
logical merely heuristic guess difficult exam schedule augment experiences previous iterations trying schedule exam 
example suppose exam deemed heuristic moderately difficult 
algorithm schedule exams deemed difficult comes exam time may able schedule exam breaking hard constraints 
solving examination timetabling problems adaption heuristic orderings case idea promote exam difficulty order runs algorithm 
thought analogous human performing task manually 
trouble scheduling certain exams probably remember year give priority 
proposed approach motivated observations 
argued experience approaches employed reduce violations soft constraints 
course somewhat problematic determining acceptable level violation subjective matter 
attempt address issue implementation section 
algorithms basic heuristic approach shows sample pseudo code simple heuristic method basis experiments difficulty chosen heuristic 
quite heuristic chosen completely appropriate 
previously scheduled exams may need moved unscheduled order produce feasible timetable 
heuristic modifiers exam order decreasing estimated difficulty difficulty schedule timetable schedule period penalty leave unscheduled endif endfor enable ordering adapted time introduce idea heuristic modifier 
simply integer added produced heuristic give new measure difficulty varies time 
perceived difficulty exam iteration equation heuristic gives heuristic estimate difficulty ei gives heuristic modifier exam iteration having defined modifier determine circumstances alter 
possibility increase modifier find exam scheduled breaking hard constraints 
help generation feasible timetables problem 
addition increase modifier exam scheduled breaking certain soft constraints aim improve quality timetable 
study approaches investigated 
process analogous wheel optimisation :10.1.1.17.8180
terms basic heuristic ordering greedy algorithm exams scheduled easily wheels heuristic modifier represents element prioritisation 
considering hard constraints 
pseudo code basic heuristic approach difficulty heuristic ei concerned section hard constraints need increase modifier exam scheduled breaking constraints 
formulation shows solving examination timetabling problems adaption heuristic orderings increase modifier iteration function modify represents strategy increase modifier 
choice incrementing modify represents finest grade adjustment integer system 
possible higher values 
possible employ alternative strategies multiplying value greater risk losing benefit initial ordering 
general higher value relevant initial ordering 
disadvantage fine adjustment level generally take iterations large adjustments may necessary 
experiment strategies adapting modifier 
firstly consider exponent approached modifier incremented value number times exam modifier increased 
example time exam modifier increased nd time increased rd time 
expect increase speed approach considering poor initial orderings due larger steps involved 
second method increment modifier random value 
introducing element randomness may open options available deterministic algorithm 
clear implementing require negligible amount system resources standard approach 
pseudo code method definitions shown 
max number iterations exam order decreasing difficulty schedule timetable schedule period penalty ei ei ei modify ei endif endfor evaluate solution store best far endfor 
sample pseudo code adaptive method considering hard soft constraints modify ei iff exam scheduled ei mentioned considering soft constraints presents question level violation acceptable 
inevitably depend nature problem vary considerably institution institution 
approach choose implement method level acceptable violation lowered gradually certain conditions 
test cases linear weighted penalty function evaluate solutions 
evaluate cost scheduling single exam 
say exam cost acceptable variable 
reasonable initial value carrying dummy run selecting highest cost scheduling exam 
gradually reduced order increase pressure find better solutions 
solving examination timetabling problems adaption heuristic orderings rate reduce presents new problem 
avoid potential pitfalls reduced solution state equilibrium 
equilibrium mean exams scheduled cost lower 
solution state subsequent runs produce identical results lowered cause exam viewed unacceptable 
possible method may cases exams cost lower time scheduled early process 
results cycle broken continue forever 
break cycles maintain count times exam modifier increased 
reaches set limit say times regard exam exempt 
essentially means solution state equilibrium exempt exams just modified 
allows algorithm lower cycle occurs concentrate exams 
algorithm process shown pseudo code represents number time exam modifier increased ignored times experiments 
exam modified endfor max number iterations false exam order decreasing difficulty schedule timetable penalty schedule period penalty modified true endif ei ei modified modified ei modify ei endif endfor evaluate solution store best far worst cost encountered timetable endif endfor 
sample pseudo code adaptive method considering soft constraints possible advantage approach maximum cost exam solutions state equilibrium tend lower set limit 
viewed fairer system 
system adapted different needs 
instance determine terms cost student large exams take burden smaller exams 
possibilities multi objective problems hierarchy constraints 
example want try eliminate students having exams row trying eliminate exams day 
solving examination timetabling problems adaption heuristic orderings experimental results benchmark setup method tested wide range real world timetabling benchmark problems carter evaluate algorithmic strategies timetabling 
problems di schaerf test tabu search techniques 
subset problems burke newall evaluate effects decomposing problem smaller chunks 
freely available data direct comparisons different techniques 
table lists problems testing characteristics 
appropriate number periods testing carter 
data institution periods number exams number students number density conflict matrix car carleton university ottawa car carleton university ottawa ear hec earl collegiate institute toronto ecole des etudes montreal king university lse london school economics pur purdue university indiana sta tre uta ute yor st andrew junior high school toronto trent university ontario faculty arts sciences university toronto faculty engineering university toronto york mills collegiate institute toronto nott nottingham university uk table 
benchmark problems methods evaluating solution quality 
shown carter proximity cost assigned student sit examinations periods apart 
weights defined 
sum measures divided number students give average penalty student 
problems limits amount seating available period 
context earlier problem definition involves minimising expression ignoring seating limitation requirement expression 
second method evaluation burke newall :10.1.1.3.8704
problems set limit number students sit exam period 
penalty function calculated counting situations student exams adjacent periods day weighted plus number situations student exams adjacent periods split days 
exams left unscheduled incur penalty 
weights arbitrarily chosen intended reflect relative importance con solving examination timetabling problems adaption heuristic orderings straints 
context problem definition minimise expression subject constraints 
major aspect proposed approach ability adapt initial choices heuristic 
experiments conducted various initial orderings method 
case tie simply employ order data input 
initial orderings largest degree ld 
generally thought simple reasonably effective heuristic graph colouring timetabling problems 
expect adaptive approach reasonably started heuristic 
flat ordering 
start process assigning value zero exam degree resulting flat ordering 
expect poor results ordering lot scope adaptive method outperform 
smallest degree 
take opposite largest degree form misleading heuristic 
expect results worse randomised flat ordering 
challenge adaptive approach virtually reverse ordering find reasonable results 
saturation degree 
typically produces better ordering largest degree reported 
due higher effectiveness produce better quality starting point investigate leads higher quality final solution 
saturation degree dynamic ordering create initial ordering 
random orderings 
course start algorithm randomly generated orderings 
aim explore situation dealing chaotic starting point 
experiments performed mechanism account soft constraints modification 
method generally include random elements single run scenario problem needed run cases 
specified method run maximum iterations time reported time taken find best solution 
experiments run athlon mhz system running linux 
please note methods comparisons run slower systems 
results di schaerf performed athlon mhz burke newall run mhz alpha ev system :10.1.1.3.8704
experiments carter run mhz sun sparc sever 
relatively slow speed machine cpu times included comparisons experiments carter compare randomised approaches take average costs way compare randomised deterministic methods 
adapting hard constraints experiments performed mechanism increase modifier exam scheduled due hard constraints 
method stabilise terminate feasible solution 
particularly try optimise soft constraints expect excel respect constraints 
largest degree initial ordering table shows results obtained largest degree base heuristic 
best results particular table bold 
table row showing totals columns provided give aggregate impression performance instances 
algorithm modify basis soft constraints manages achieve best result car car problems comparable carter approach cases 
solving examination timetabling problems adaption heuristic orderings noted results carter represent range different heuristics 
best result heuristic course approach employs heuristic 
tabu solver competes cases 
data initial orderings tabu solver avg 
di schaerf carter adaptive ld cost time cost cost time car car ear hec lse sta tre uta ute yor total table 
results seeding largest degree order establish initial ordering affect results experiments conducted ordering methods 
firstly flat ordering identify benefit initial heuristic ordering 
secondly reverse largest degree smallest degree tried evaluate performance method inappropriate heuristic 
saturation degree investigate effects initial ordering random orderings investigate performance chaotic circumstances 
flat initial ordering lose benefits gained largest degree 
expect method generate worse solutions take longer evolve ordering 
results table show cases achieve slightly worse result 
time taken generally considerably 
results car sta tre uta slightly better largest degree 
casts doubt useful largest degree adaptive method 
expected saturation degree performs effectively obtaining best result orderings test cases 
recall bold figures represent best results table 
worth noting adaptation ordering required hec problem order obtain feasible solution 
adaption typically faster say flat approach due increased overheads calculating saturation degree 
interesting see situation develops start considering soft constraints adaptation process 
largest degree generally regarded reasonable heuristic timetable problems expect reverse ordering achieve poor results 
starting method initial smallest degree method challenge method give idea worst case performance 
ordering achieved giving exam heuristic value obtained subtracting degree exam total number exams 
results table show expect takes longer algorithm solving examination timetabling problems adaption heuristic orderings data ld initial order flat initial order initial order initial order cost time cost time cost time cost time car car ear hec lse sta tre uta ute yor total table 
results achieved different initial orderings evolve ordering produces feasible solution 
genuinely hard exams tend placed ordering 
long process fight way front 
flat initial ordering cases final result better largest degree 
case ute produces best results orderings beat approaches carter di schaerf 
cases results remain competitive considerable achievement method inappropriate heuristic illustrated amount adaption required reach feasibility 
noted tabu solver di schaerf uses graph colouring heuristics generate initial feasible solution 
random ordering assign initial random priority range exam 
experiments previous ones incorporate random element runs performed times varying random seeds 
interesting observation value big impact performance method resulting run times far excess required smallest degree 
reason lies way calculate initial values smallest degree shown results smaller spread values compared random distribution 
table shows results set number exams problem half number exams 
note cases method achieves roughly equivalent final quality takes substantially longer average larger random range 
amount time taken inherently linked size random range amount increment heuristic modifier 
smaller random range larger modifier tend flat ordering 
solving examination timetabling problems adaption heuristic orderings data average cost exponent adaption number events number exams average time best cost worst cost average cost average time alternative simply incrementing heuristic modifier time failure worthwhile investigating drastic approach exponent adaption described section 
expect especially useful poor initial orderings accelerate process 
experiments point flat initial orderings merely reproduce behaviour incremental adaption 
initial orderings saturation degree rarely require adaption excluded experiments 
table shows result exponent approach applicable initial orderings 
quality produced solutions remains largely just minor variations time taken produce feasible solution drastically reduced 
effect noticeable random initial ordering feasible solution approximately tenth time takes simple incremental adaption 
dramatic speed illustrated car problem 
solving examination timetabling problems adaption heuristic orderings best cost car car worst cost ear hec lse sta tre uta ute yor total table 
results randomised ordering cost incremental adaption exponent adaption time 
incremental exponent adaption random orderings car problem data ld initial order initial order adapting hard soft constraints random average number events cost time cost time cost time car car ear hec lse sta tre uta ute yor total table 
results considering hard constraints exponent adaption illustrated competitive results adapting hard constraint violation 
expect case improve results considering violation soft constraints methods lined 
results shown table confirm case 
ld initial ordering approach able produce better results test cases tabu solver heuristic approaches table initial aim approach general competitive beat approaches problem 
considered approach success get ball park heuristic dependent approaches general quicker easier implement 
comparable approaches produce better results cases 
interesting observation saturation degree longer achieves best final result majority cases showing adaptive method fact compensate bad orderings 
illustrated shows performance largest degree saturation degree time car problem 
saturation degree produces better result early stages soon caught process started largest degree 
solving examination timetabling problems adaption heuristic orderings data ld initial ordering flat initial ordering initial ordering initial ordering cost time cost time cost time cost time car car ear hec lse sta tre uta ute yor total table 
results considering soft constraints incrementally adapting cost time largest degree saturation degree 
largest degree saturation degree adapting soft constraints shall experiments employ exponent adaption 
table shows results started largest degree saturation degree smallest degree 
final results show minor differences improvement 
benefit context appears ability reach feasible solutions earlier process started poor orderings 
illustrated showing performance incremental exponential adaption car problem smallest degree 
behaviour explained large scale modification tending initial ordering relatively insignificant 
final set experiments carried random modifier initial saturation degree ordering 
case due random element experiment run times average worst best results taken 
shown table 
modest improvements achieved average compared deterministic methods adaption 
solving examination timetabling problems adaption heuristic orderings data ld initial ordering initial ordering initial ordering cost time cost time cost time car car ear hec lse sta tre uta ute yor total table 
results considering soft constraints exponent adapting cost incremental adaption adaption time 
incremental exponential adaption smallest degree orderings car problem solving examination timetabling problems adaption heuristic orderings data average cost possible random adaption scope improvement longer maximum run time 
test experiment repeated maximum iterations 
results table show modest improvements cases user prepared wait little longer 
brief experiments performed backtracking operator similar carter 
problems received marginal improvement problems fact achieved worse results 
certainly due backtracking procedure frustrating process adaption 
backtracking adds adaptive approach 
comparison best worst cases best worst cost time cost time car car ear hec lse sta tre uta ute yor total table 
results considering soft constraints saturation degree random adaption data average cost best worst cost time cost time car car ear hec lse sta tre uta ute yor total table 
results considering soft constraints saturation degree random adaption extended run time mentioned earlier expect experienced approaches better average worst case performance 
investigated average performances interesting solving examination timetabling problems adaption heuristic orderings compare best worst case performance available data 
information table best results marked bold worst results marked italics 
noted worst case results published experiments di schaerf attribute worst case method average worse methods 
may reality method produces worst cases indicated 
noted include cases adaptive method experiments considering hard soft constraints 
adaptive method comes comparison attaining best results test cases worse result may different worst case figures tabu solver available 
quite notable adaptive results fall narrow range extent worst result adaptive approach superior best result methods 
data tabu solver di schaerf focussing adaptive results worth noting best results problems randomised adaption extended run times course leads longer run times listed table 
configuration contributed worst case suggests quite robust 
complete results final solutions downloaded www asap cs nott ac uk misc jpn adaptive comparisons burke newall carter adaptive best cost time costs costs times car car ear hec lse sta tre uta ute yor total table 
comparisons best worst case performance addition comparisons shall compare approach burke newall :10.1.1.3.8704
results data sets di schaerf providing angle comparison tabu solver approach 
general problems real life situation include limits number seats period 
penalty solving examination timetabling problems adaption heuristic orderings function expression 
table lists problems time seating limitations placed 
approach involves number different techniques parameters compare setup produced best results general saturation degree set size look ahead set 
table shows comparative results di schaerf tabu search solver burke newall decomposition approach adaptive method largest degree saturation degree flat initial orderings 
seen decomposition data ts solver average cost data number periods max students period car nott pur table 
data burke newall decomposition adaptive ld adaptive flat adaptive average cost time cost time cost time cost time car nott pur total table :10.1.1.3.8704
comparison burke newall approach dominates results problems :10.1.1.3.8704
adaptive approach follow closely substantially lower run times difference machine speed account 
decomposition approach complicated method implement 
randomised adaption initial saturation degree previous experiments applied problems 
table shows produces results comparable decomposition method comparable amount time exception huge pur problem decomposition method excel 
data ts solver decomposition adaptive average best worst average best average best cost cost time cost time car nott pur total table 
comparison burke newall randomised adaption solving examination timetabling problems adaption heuristic orderings experiments leave questions outstanding initial orderings adaption method best unfortunately questions interrelated definite answer question 
answers probably best illustrated context varying situations reasonable ordering heuristic exists known 
case perfect sense heuristic initial ordering combined incremental adaption tweak solution 
saturation degree ordering experiments example case 
performs test problems 
solution quality improved adaption mechanism 
effective ordering heuristic known 
probably wise start flat initial ordering 
choice adaptation strategy flat ordering largely irrelevant random adaption produce varying results 
time taken generate solutions may longer equivalent quality solutions attainable 
ordering heuristic known efficacy problems interest varies 
situation lie extreme cases arises practice 
may worthwhile heuristic combined exponential adaption shown overcome extremely bad initial orderings relativity quickly 
addition points randomised adaption shows great promise improve results especially user willing wait little longer results run method multiple times 
experiments shown adaptive method perform efficiently competitively wide range problems 
method compares time consuming approaches relatively easy implement 
positive feature method narrow gap best worst results extensive range experiments 
demonstrates certain robustness regardless possible configuration chosen 
proposed method thought giving mechanisms solve problem 
ordering heuristic ideal problem solution produced start process 
heuristic entirely suitable adaptive method try improve salvage initial ordering 
lead significant developments automated timetabling systems ultimately relatively novice users little familiarity graph theory little idea suitability particular heuristics 
potential benefit general knowledge poor systems cheaper develop problem specific systems lead greater general systems user community 
numerical results relatively simple problems examination timetabling important indication effectiveness major advantage approach fundamentally general way operates 
approach potentially investigated problems exam timetabling similar ordering construction heuristics exist 
possible advantage approach may ability gradually increase pressure produce fairer timetables 
approach taken cap total penalty exam possible concentrate certain constraints regard particularly important 
instance exam timetabling usually desirable spread exams evenly possible entire timetable 
varying levels spread having full period exams full periods exams call constraints firm treated lying hard soft constraints 
solving examination timetabling problems adaption heuristic orderings acknowledgments research described supported epsrc gr 

computer aided school university timetabling new wave 
peter ross edmund burke editor practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
patrice boizumault 
constraint logic programming examination timetabling 
journal logic programming february 
jean paul stephane 
methods solve examination timetable problem 
edmund burke peter ross editors practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 

new methods colour vertices graph 
communications association computing machinery 
bernd bullnheimer 
examination scheduling model maximize students study time 
michael carter edmund burke editor lecture notes computer science pages 
springer verlag berlin 
burke ford weare 
examination timetabling british universities survey 
edmund burke peter ross editors practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
burke weare 
university timetabling system graph colouring constraint manipulation 
journal research computing education 
burke weare 
hybrid genetic algorithm highly constrained timetabling problems 
larry eshelman editor genetic algorithms proceedings th internation conference pages san francisco 
morgan kaufmann 
burke weare 
specialised operators timetabling problems 
fogarty editor lecture notes computer science aisb workshop evolutionary computing pages 
springer verlag berlin 
burke kirk jackson jeffrey kingston weare 
automated university timetabling state art 
computer journal 
burke newall 
multi stage evolutionary algorithm timetable problem 
ieee transactions evolutionary computation 
burke newall weare 
memetic algorithm university exam timetabling 
edmund burke peter ross editors practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
burke newall weare 
initialization strategies diversity evolutionary timetabling 
evolutionary computation 
burke newall weare 
simple heuristically guided search timetable problem 
international icsc symposium engineering intelligent systems eis pages 
icsc academic press canada switzerland 
solving examination timetabling problems adaption heuristic orderings burke ross cowling petrovic kendall 
investigation hyperheuristic methods 
research project funded engineering physical sciences research council epsrc ref gr 
edmund burke yuri petrovic 
approach timetabling 
edmund burke erben editors practice theory automated timetabling iii lecture notes computer science pages 
springer berlin 
edmund burke petrovic 
research directions automated timetabling 
appear european journal operations research 
carter 
survey practical applications examination timetabling 
operations research 
carter laporte 
developments practical examination timetabling 
edmund burke peter ross editors practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
carter laporte 
general examination scheduling system 
interfaces 
carter laporte lee 
examination timetabling algorithmic strategies applications 
journal operational research society 
corne fang mellish 
solving modular exam scheduling problem genetic algorithms 
proceedings sixth international conference industrial engineering artificial intelligence expert systems pages 
corne ross fang 
fast practical evolutionary timetabling 
fogarty editor lecture notes computer science pages 
springer verlag berlin 
dave corne peter ross 
initialisation strategies evolutionary timetabling 
peter ross edmund burke editor practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
philippe david 
constraint approach examination timetabling local repair techniques 
edmund burke michael carter editors lecture notes computer science pages 
springer verlag berlin 
de werra 
timetabling 
european journal operations research 
de werra 
restricted coloring models timetabling 
discrete mathematics 
luca di andrea schaerf 
tabu search techniques examination timetabling 
edmund burke erben editors practice theory automated timetabling iii lecture notes computer science pages 
springer berlin 
dowsland 
simulated annealing solutions multi objective scheduling timetabling 
modern heuristic search methods pages 
wiley chichester england 
kathryn dowsland 
peg measure timetabling scheduling sa ts 
edmund burke michael carter editors lecture notes computer science pages 
springer verlag berlin 
wilhelm erben 
grouping genetic algorithm graph colouring exam timetabling 
edmund burke erben editors practice theory automated timetabling iii lecture notes computer science pages 
springer berlin 
solving examination timetabling problems adaption heuristic orderings 
ga examination scheduling experience middle east technical university 
peter ross edmund burke editor practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
falkenauer 
genetic algorithms grouping problems 
john wiley sons 

construction examination timetables computer 
computer journal 
hertz 
tabu search large scale timetabling problems 
european journal operations research 
joslin clements :10.1.1.17.8180
wheel optimization 
journal artificial intelligence research 
mehta 
application graph coloring method examination scheduling problem 
interfaces 
nuijten kunnen aarts dignum 
examination timetabling case study constraint satisfaction 
ecai workshop constraint satisfaction issues raised practical applications pages 
peter ross dave corne 
comparing genetic algorithms simulated annealing stochastic hillclimbing timetable problems 
fogarty editor lecture notes computer science aisb workshop evolutionary computing pages 
springer verlag berlin 
peter ross dave corne hsiao lan fang 
improving evolutionary timetabling delta evaluation directed mutation 
davidor 
schwefel manner editors parallel problem solving nature volume iii pages 
springer verlag berlin 
peter ross emma hart dave corne 
observations ga timetabling 
michael carter edmund burke editor lecture notes computer science pages 
springer verlag berlin 
schaerf 
survey automated timetabling 
artificial intelligence review 
selman kautz 
domain independent extensions gsat solving large structured satisfiability problems 
proceedings th int joint conf 
artificial intelligence pages 

hugo marin peter ross manuel valenzuela 
evolution constraint satisfaction strategies examination timetabling 
proceedings genetic evolutionary computation conference pages 
morgan kaufmann san francisco 
thompson dowsland 
general cooling schedules simulated annealing timetabling system 
peter ross edmund burke editor practice theory automated timetabling selected papers st international conference lecture notes computer science pages 
springer verlag berlin 
welsh powell 
upper bound chromatic number graph application timetable problems 
computer journal 
george white bill xie 
examination timetables tabu search longer term memory 
edmund burke erben editors practice theory automated timetabling iii lecture notes computer science pages 
springer berlin 
solving examination timetabling problems adaption heuristic orderings 
