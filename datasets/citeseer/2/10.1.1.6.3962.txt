combining case reasoning tabu search personnel rostering problems gareth petrovic automated scheduling optimisation planning research group school computer science information technology university nottingham campus nottingham ng bb united kingdom grb cs nott ac uk 
investigate advantages case reasoning cbr solve personnel rostering problems 
constraints personnel rostering problems commonly categorised hard soft 
hard constraints satisfied roster violates constraints considered feasible 
soft constraints flexible measure roster quality terms sta satisfaction 
introduce method repairing hard constraint violations cbr 
cbr artificial intelligence paradigm new problems solved considering solutions previous similar problems 
store history hard constraint violations corresponding repairs captured human rostering experts solve similar violations new rosters 
soft constraints defined explicitly 
treatment captured implicitly repair hard constraint violations 
knowledge case base combined tabu search concepts hybrid meta heuristic algorithm 
experiments real world data uk hospital 
results show cbr guide meta heuristic algorithm feasible solutions high sta satisfaction need explicitly define soft constraint objectives 
personnel rostering problems highly constrained di cult solve manually 
legal management sta requirements conflicting taken account making rostering decisions 
example management requirements cover skill mix needed particular task may conflict maximum working hours allowed law contract individual sta preferences 
rostering experts develop strategies balancing conflicts able solve problems satisfaction 
describes approach automated rostering draws experience learned human rostering experts 
number di erent operational research approaches explored solving employee rostering problems 
bailey bailey field miller warner mathematical programming techniques generate nurse rosters optimised respect measures sta ng costs salaries sta ng costs shift pattern penalties desirable shift patterns 
constructive algorithms developed address particular rostering requirements burns carter 
multi objective approaches goal programming investigated arthur ravindran scheduling nurses shift patterns modeling soft constraints goals reached 
constraint satisfaction techniques cheng meyer auf hofe provide natural way expressing complex constraint information 
recognition real life rostering problems np hard lead researchers explore meta heuristic approaches 
describe genetic algorithm multi objective nurse rostering model incorporating individual nurse preferences emphasis role decision maker 
bailey simulated annealing genetic algorithms solve nurse rostering problem involving nurses di erent types 
hyper heuristic approach developed burke iteratively chooses low level heuristics going performance 
tabu search enhancement basic local search concept employs memory avoid getting trapped local optima 
memory contains list moves search space swapping assignments nurses may performed set number iterations 
concept tabu moves gives potential short term degradation solution quality allowing algorithms explore new areas search space 
dowsland developed nurse rostering method tabu search strategically chooses neighbourhoods depending current characteristics search 
roster quality determined satisfaction coverage constraints shift pattern penalties notions pattern quality individual nurse preference 
hybrid tabu search approach developed burke highly constrained real life rostering problems 
modular evaluation function determine roster quality large variety optional constraint types 
quantity representation domain knowledge di erent automated problem solving techniques varies considerably 
example mathematical programming models knowledge entirely stored form constraints objective function 
knowledge rigidly embedded problem solving structure making methods inflexible 
classical meta heuristic methods incorporate domain knowledge relaxed fashion definition neighbourhood structures help search explore promising regions solution space 
neighbourhoods defined natural alterations solution similar employed human problem solver 
knowledge hard coded algorithm making di cult adapt new problems new circumstances 
knowledge capturing technique described provides means neighbourhoods tailored dynamically address specific constraint violations individual problems human rostering experience 
case reasoning cbr artificial intelligence methodology imitates human decision making solving new problems knowledge solutions similar problems 
cbr methodology operates premise similar problems require similar solutions 
previous problems solutions stored case base accessed reasoning processes identification retrieval adaptation storage 
identification retrieval phases search case base cases containing problems similar current problem terms set characteristic indices 
solutions retrieved cases adapted context current problem 
new solution useful solving problems stored new case case base 
cbr various scheduling problems 
scott simpson combined casebased reasoning constraint logic programming storing shift patterns construction nurse rosters 
cbr successfully applied machine scheduling problems miyashita repair improve schedules dynamic environment 
schmidt cbr store machine scheduling problems solution techniques complex classification system 
burke solved university course timetabling problems case base previous partial solutions 
approach burke developed cbr system choose appropriate heuristics solving course examination timetabling problems 
cunningham smyth employed cbr quickly build quality solutions traveling salesman problem single machine scheduling problem 
novel cbr approach rostering problem captures rostering knowledge human experts storing history constraint violations corresponding repairs 
extension previous investigation concept authors 
rostering problem type constraint satisfaction problem roster defined feasible violate constraints 
constraint violation similar repaired retrieved case base adapted context current roster 
various meta heuristic approaches developed nurse rostering success 
aim investigate possible cbr meta heuristic concepts especially tabu search 
algorithms attempt find feasible rosters direct repair individual constraint violations 
research described guided real world nurse rostering problem ward queen medical centre university hospital trust nottingham united kingdom 
cases stored case base acquired course actual scheduling rescheduling actions head nurse ward 
organised follows 
section rostering problem formulated 
section gives overview case reasoning framework 
hybrid constraint satisfaction algorithms described section incorporating case repair generation tabu list concepts 
section performance algorithms compared number problem instances 
discussion benefits methods proposed section 
problem formulation define nurse rostering problem ordered pair nurse set nurses set constraints 
nurses ward possible qualification levels 
descending order registered rn enrolled en auxiliary student sn 
registered nurses qualified extensive practical management training enrolled nurses mainly trained practical aspects nursing 
auxiliary nurses unqualified nurses perform basic duties student nurses currently training registered enrolled nurses 
real nurse types grouped additional qualification types 
classification xn denotes nurse type 
rns ens ans classified employed pn rns ens qualified qn 
addition basic qualifications nurses receive ward specific training case eye training denoted grade ranging determined combination qualification specialty training amount practical experience 
gender male female international status international home nurses taken account making rostering decisions 
nurse denoted tuple nurse hours nr np 
array descriptive features element rn en sn qn pn xn nurse qualification 
qn pn xn qualifications included array describe general skill requirements constraints violations describe need qualified nurse cover particular shift filled registered enrolled nurse 
remaining elements 
describe gender international status specialty training grade nurse 
number hours nurse contracted week normally denoted hours set assignment variables nr period represents shift assignments nurse day number days roster constructed denoted period 
set preference assignments np period represents preferred shift assignments nurse rostering period 
preferred assignments established process pre rostering consultation initial instantiation shift assignment variables initially nr pr 
variables take values set unassigned early late night 
set consists number constraints types cover constraints define skill mixes required di erent shifts 
minimum number nurses particular feature set represented variable assigned particular shifts 
example early shift requires qualified nurses constraints limit number days nurses may row 
ward generally nurses constraints define minimum number days nurses may successively succession constraints define illegal shift combinations nurses 
night shift followed early shift illegal combination totals constraints define maximum number hours nurse may set time period 
example nurse may hours 
literature constraints divided categories 
hard constraints violated define roster feasibility 
model constraints defined explicitly set hard constraints 
soft constraints flexible constraints satisfied 
describe roster quality adding penalty objective function proportional degree violation 
define soft constraints explicitly treatment captured implicitly cases case base 
remainder word constraints refers hard constraints set constraints applied set nurses generate set violations violation having type determined corresponding constraint type 
define problem instance spaces set constraint violations possible repairs current roster respectively 
element violation describes type violation parameters relevant 
violations denoted follows day shift insu cient nurses feature set assigned shift day nurse nurse working shifts row starting days nurse nurse working shifts row starting days nurse day nurse illegal shift combination days day day nurse nurse working hours days 
fig 

graphical presentation repair generation technique 
element repair describes type repair nurses days shift assignments involved 
types reassign nurse day shift assign shift nurse day swap nurse nurse day interchange shift assignments nurse nurse day switch nurse day day interchange shift assignments nurse days day day 
sets represent information relevant specific instance rostering problem 
nurses days shifts describe refer directly particular roster 
order store reuse examples previous violation repair experiences need define generalised structure independent individual rostering problem instance 
define case base cb set previously encountered violations corresponding repairs 
gives graphical representation cbr repair generation technique described section 
emphasise di erence variables pertain current rostering problem variables represent historical information stored case base 
case base cb spaces stored violations problem history repairs solution history respectively 
case cb define follows ype 
ype contain type necessary parameters describing violations repairs respectively 
stored generalised forms independent individual problem instance 
store feature information needed identify similar problem instances case retrieval generate repairs case adaptation 
index sets arrays statistical feature values 
characteristics problem identified having influence decision making process 
violation indices depend specific type violation include measures roster infeasibility nurse utilisation satisfaction shift pattern statistics shift coverage 
repair indices statistical information parameters repair cover shifts repair utilisation satisfaction nurses involved 
detailed description violation repair indices see 
generalisation violation roster mapping set violations roster set violations stored case base 
similarly generalisation repair mapping set possible repairs roster set repairs case base 
violations repairs generalised removing instance specific information keeping general type information 
example succession violation nurse nr np assigned night shift day followed early shift day described notation succession nurse 
store violation case base generalised form succession night early describes type nurse involved violation illegal combination shift assignments 
process generalisation includes calculating statistical characteristics stored violation repair indices 
case repair generation method described section generates repairs constraint violations roster generalised experience stored case base 
key success method notion problem similarity 
method find similar problems current problem violation current roster 
having identified similar violations corresponding repairs adapted context current roster 
notion solution similarity set simple rules repairs generated similar retrieved solution possible current set nurses shift assignments 
descriptions retrieval process similar violations identified adaptation process generating repairs 
retrieval process split distinct searches case base 
search filters case base obtain cases containing violations match current problem terms violation type parameters 
second search ranks restricted set cases similarity function sim defined follows 
generalised violations ype ype sim dist index index violation index sets respectively number elements index sets index weights dist index index index index index min index min maximum minimum values index case base 
function assigns higher values similar cases 
identical cases deemed infinitely similar computational reasons assigned largest number stored double type 
problem violation retrieval algorithm consists steps 
generalise violation get ype generalising violation parameters calculating violation indices respect current roster 
choose cases case cb ype ype 
rank cases sim sorted set cases passed adaptation process separated phases 
initially method generates set candidate repairs type repair retrieved case data current roster 
second phase involves ranking candidate repairs similarity repair retrieved case 
set repair indices retrieved case compared indices candidate repairs sim function equation repair index sets 
adaptation algorithm summarised follows 
consider top ranking case case 
generate set repairs type possible relevant combinations nurses shifts roster 
repairs generated remove top case goto step 
generalise repairs set calculating repair 
rank repairs sim illustrate processes shall describe simple example see appendix additional details 
consider roster table early late unassigned 
nurse nurse registered female non international grade nurses nurse enrolled female non international eye trained nurse 
rn en 
nurse nurse nurse table 
simple example nurse roster single constraint applied roster requiring minimum qualified nurse assigned early shift 
seen day nurse assigned early shift 
violation needs repaired violation cov er qn early feature set indicates feature take value 
violation passed retrieval process examples cover violations involving qualified nurses identified case base 
retrieval process converts violation generalised form ype cover qn early calculates values violation indices 
case base searched cases containing violations match ype suppose example cases 
cases ranked similarity measure equation shown appendix case highest similarity retrieved case base case cover qn early reassign rn unassigned early 
repair information stored case adapted create repair current violation 
example case contains generalised repair type reassign uses nurse rn originally assigned unassigned shift day repair 
adaptation process generates set reassign repairs nurses correct feature set currently assigned unassigned day 
roster table nurses characteristics repairs generated repair reassign nurse early repair reassign nurse early 
generalise repairs calculating index sets compare repair case shown appendix 
repair reassign nurse early returned solution 
case containing constraint violation applied repair added case base generalising violation repair increasing case base experience 
cbr tabu search concepts meta heuristic approaches rostering problems search solution space iteratively selecting solutions exploring neighbourhoods 
neighbourhood defined generating number new solutions selected 
objective function choose solution neighbourhood move 
traditional tabu search approach meta heuristic keeps memory visited solutions may revisited certain time period tenure 
feature helps search avoid local optima forcing explore new areas search space 
section describe di erent meta heuristic algorithms 
algorithms define neighbourhood solution way classical meta heuristics 
applying operator entire solution algorithms choose violation solution attempt repair 
goal search find feasible solution minimise number constraint violations roster 
addition nurses shift preferences satisfied possible 
hard constraints defined set define roster feasibility nurse preference information usually modeled soft constraints measure roster quality 
di erence algorithms represent levels nurse satisfaction quantitatively search generating repairs 
number di erent mechanisms available help local search algorithm find quality feasible solutions 
algorithms described composed different combinations mechanisms 
mechanisms case repair generation repairs constraint violations generated expert knowledge case base 
particular whilst addressing hard constraint violations repairs imitate expert handling nurses shift preferences 
tabu lists repairs repeated certain number iterations placing tabu list forbidden repairs 
reduces chance search get trapped loop repeating violations repairs objective function search guided objective function counts number violated constraints roster minimised 
repairs chosen ability reduce total number violations roster 
motivation defining algorithms determine ect mechanism search quality 
shall show knowledge case base successfully combined traditional meta heuristic search concepts reducing knowledge acquisition overhead required model problem domains 
algorithms search new solutions iteratively repairing constraint violations 
instance initial roster consists solely nurses individual shift preferences 
roster violates large number constraints goal algorithms repair violations 
emphasised algorithms objective function explicit representation goal 
algorithms burden placed mechanism generates repairs guide search correct direction 
algorithms described 
algorithms generate repairs randomly utilise tabu lists rrg tl objective function rrg obj mechanisms combined rrg obj tl 
methods case base retrieval adaptation methods described previous section generate repairs pure case repair generation cbrg tabu lists cbrg tl objective function cbrg obj final algorithm cbrg obj tl uses mechanisms 
algorithms iterative repair structure 
true 
generate applying constraints 
exit 
pick random element violation 
perform repair generation violation apply repair 
repeat algorithm described remainder section implements di erent version step 
steps generate set constraint violations roster iteration step chooses violation repaired 
repair generated applied roster entire process repeated 
random repair generation tabu list rrg tl algorithm uses problem solving knowledge generate repairs uses idea tabu search proposed glover 
tabu list repairs help algorithm avoid local optima number constraint violations tenure specified sets length list number iterations stored repair considered tabu 
tenure enforced repair added tabu list removing oldest repair 
help algorithm ensuring parameters violations including nurses days shifts involved included parameters repairs 
choice repair type reassign swap switch parameters involved entirely random 
evaluation quality repairs degree violation roster deciding repairs 
roster tabu list tenure 
randomly create repair parameters violation appropriate 
repair goto 
apply repair 
add repair update random repair generation objective function rrg obj algorithm generates set repairs violation chooses repair cause largest decrease smallest increase number constraint violations roster 
algorithm basic local search includes mechanism avoiding local optima 
method randomly generating repairs rrg tl 
roster repair objective function repair defined repair applying repair applying repair 
roster objective function 
randomly generate set possible repairs parameters violation 
choose element repair set repairs highest repair 
apply repair random repair generation tabu list objective function rrg obj tl tabu list objective function mechanisms combined algorithm 
essentially tabu search algorithm constraint satisfaction problem operates specific constraint violations roster 
roster objective function tabu list tenure 
randomly generate set possible repairs parameters violation 
choose element repair set repairs highest repair 
repair remove repair set repairs goto 
apply repair 
add repair update case repair generation cbrg experience stored case base generate repairs 
assumed experiments follow case base trained contains su cient examples variety di erent problem solving episodes 
objective function choose repairs similarity retrieved repairs case base drives search 
similar repair similar case iteration 
method diversification search algorithm 
algorithm performing blind search feasibility relying quality repairs stored case base 
roster 
generate repair case retrieval adaptation methods 
apply repair case repair generation tabu list cbrg tl rrg tl algorithm described section guided rostering knowledge repairs violation randomly generated 
cbrg guides search knowledge case base unable cope violations repeatedly created create repair violation time encountered 
diversification provided tabu lists rostering knowledge stored case base combined algorithm 
tabu lists store repairs cases combination 
nearest case case base currently tabu list nearest case retrieved 
similarly repair generated tabu list nearest repair generated retrieved case 
roster tabu lists tr tc respectively 
retrieve similar case case cb 
case discard case goto 
generate repair case repair 
add case repair update tabu lists 
apply repair case repair generation objective function cbrg obj algorithm combines explicit representation search goal objective function case base repair generation method 
repair generated scored combination similarity repair retrieved case reduction number hard constraints causes roster 
objective function equation candidate repair repair retrieved repair roster function score defined score repair sim repair feature information generalised repair see section 
summation weights experimentation equal may case problems 
roster score function weights 
retrieve similar case case 
generate set repairs case 
choose repair highest value score repair 
apply repair case repair generation tabu list objective function cbrg obj tl final algorithm combines mechanisms 
described tabu search constraint satisfaction problem neighbourhoods determined case base repair generation method constraint violation iteration 
roster tabu lists tr tc respectively 
retrieve similar case case 
case discard case goto 
generate set repairs case 
choose repair highest value score repair 
repair remove repair set repairs goto 
add case repair update tabu lists 
apply repair comparison algorithms algorithms tested real world data eleven di erent variants case repair generation cbrg case repair generation tabu lists cases tenure cbrg tl repairs tenure cbrg tl tabu lists cbrg tl case repair generation objective function cbrg obj case repair generation objective function tabu lists cases cbrg repairs cbrg obj tl cases repairs cbrg obj tl random repair generation tabu list repairs tenure rrg tl random repair generation objective function rrg obj random repair generation objective function tabu list repairs tenure rrg obj tl tabu lists chosen preliminary experimentation showed performance number problems 
noticed increase repair tenure causes little change algorithm performance 
case tenure sensitive setting value high decrease performance case repair generation significantly 
cases case base higher frequency due higher average occurrence violation represent roster 
consequently case tenure increased case retrieved case base violation insu ciently similar lead generation inappropriate repair 
case base trained examples violations repairs derived preference final rosters acquired 
types violations represented case base evenly spread cover violations making majority cases 
reflects proportion violations rosters variety repairs cover violations involving di erent types nurses shifts 
technique train case base described detail 
cient robust training method subject going research 
algorithms run test problems preference rosters week periods march april initial solutions 
algorithm run times problem maximum iterations 
solution number feas iterations speed march cbrg cbrg tl cbrg tl cbrg tl cbrg obj cbrg obj tl cbrg obj tl cbrg obj tl rrg tl rrg obj rrg obj tl april cbrg cbrg tl cbrg tl cbrg tl cbrg obj cbrg obj tl cbrg obj tl cbrg obj tl rrg tl rrg obj rrg obj tl table 
algorithm performance 
constraint violations run kept results summarised table 
column results shows mean standard deviation brackets number constraint violations solutions runs algorithm 
value indicates feasibility run 
total number feasible solutions algorithm shown second column 
mean standard deviation number iterations needed get solution speed average number violations solved iteration shown third fourth columns 
final column contains percentage nurse shift preferences satisfied 
clear results table algorithms employed case repair generation able find solutions fewer constraint violations randomly generated repairs 
compares mean minimum maximum number constraint violations solutions algorithm 
cbrg algorithms able reach better solutions faster rrg counterparts 
fact prolonging run times rrg algorithms help find significantly better solutions 
nurse preference satisfaction results shown show cbrg algorithms outperform rrg counterparts 
emphasised rrg algorithms information nurse preference expected perform badly 
experiments show repairs generated nurse preference information implicitly stored case base able guide search direction better solutions 
tabu lists help algorithms avoid local optima reducing occurrence repeating loops repairs violations 
experiments show cbrg fig 

mean maximum minimum number constraint violations fig 

mean maximum minimum nurse satisfaction algorithms tabu lists get stuck loops 
improvements number violations best solutions obtained cbrg algorithms tabu lists problems statistically significant confidence level rrg results show behaviour 
fact rrg obj tl algorithm performs slightly worse rrg obj di erence significant 
lack improvement possibly due fact neighbourhoods defined random repair generation method large small tabu tenure 
tabu lists unable help move search away local optima 
average progress cbrg cbrg tl rrg obj rrg obj tl march problem seen 
experiments show clearly type tabu list works best cbrg algorithms 
tl tl tl variants cbrg cbrg obj algorithms show similar improvements 
certainly true choice tabu list dependent problem solved content case base 
suggest combined tabu list tl best option problems incorporates types diversification 
nurse preference satisfaction adversely ected tabu lists cbrg algorithms see 
issue approached caution 
conceivable keeping repairs cases tabu lists increase probability new repairs violate nurse preference 
particular tabu cases may force case base retrieve similar cases generate suitable repairs 
avoided including su cient cases case base keeping tenure case tabu list relatively low 
cbrg rrg algorithms significantly improved objective function confidence level 
improvement rrg algorithms objective function great gained cbrg 
cbrg algorithms objective function introduced trade repair similarity repair quality guided search feasibility fewer iterations 
scoring function ensures similar repairs generated case base possible generate similar repairs objective function larger influence 
shows average progress cbrg cbrg obj rrg tl rrg algorithms 
statistically significant improvement nurse satisfaction seen experimental results 
explained increased speed obj algorithms arrived best solutions see 
general faster convergence feasible solutions reduces chance unnecessary damage nurse preferences 
results show clearly benefits hybrid approach 
cbrg guides search solutions constraint violations high nurse preference satisfaction unable reliably find feasible solutions 
addition tabu lists helps search quality local optima increases chance finding feasible solutions 
objective function increases rate convergence placing weight repairs cause decrease number constraint violations whilst advantage knowledge case base 
results intended show case approach outperform methods employ tabu search strategy se 
rrg methods shown means tailored problem sensible implementation include explicit rules avoiding violation nurse preference specific conditions probably choose repairs minimising number new violations created 
results show combined simple meta heuristic algorithm case repair generation increase performance significantly 
sample test statistical significance assuming equal population variance fig 

ects tabu list average number constraint violations march problem fig 

ects tabu list average nurse preference satisfaction march problem fig 

ects objective function average number constraint violations april problem fig 

ects objective function average nurse preference satisfaction april problem demonstrate case base capture expert rostering knowledge storing examples constraint violations corresponding repairs 
knowledge generate repairs constraint violations new problems 
experiments show simple iterative algorithm employing case repair generation mechanism successfully find quality albeit usually sub optimal solutions 
shown case repair generation methodology imitates repairs lead feasible near feasible rosters repairs preserving nurses shift preference requests final roster 
benefits case guided search approach threefold 
expert quality repair examples stored case base help search find feasibility faster guide search sensible directions 
help guide search away areas search space containing bad local optima solutions locally optimal contain constraint violations 
repairs stored case base avoid violating nurse shift preferences possible guide search feasible solutions high nurse satisfaction 
information stored implicitly case base need hard coded algorithm explicit rostering rules 
shown quality rosters produced case repair methodology better produced standard meta heuristic mechanisms objective function tabu lists 
hybrid approach incorporating case repair generation tabu lists objective function quickly produces quality solutions high levels nurse shift preference satisfaction 
research focus improving knowledge capturing ability case base 
methods maintain consistency knowledge identify erroneous bad quality data developed 
incorporation case repair generation methodology constraint satisfaction techniques considered 
research supported engineering physical sciences research council epsrc uk number gr queen medical centre university hospital trust nottingham 
appendix details similarity calculations example section 
cases case base containing violations type ranked similarity function equation index values sim score gsat guo mag luo na case case case case highest similarity case retrieved case base 
violation indices number constraint violations gsat percentage shift preferences satisfied nurses guo percentage contract working hours assigned nurses roster percentage contract working hours assigned nurses week containing violation mag magnitude violation case cover shortage percentage shift preferences satisfied nurses described violation luo percentage contract working hours assigned nurses described violation roster percentage contract working hours assigned nurses described violation week containing violation 
case contains repair adapted current roster see equations 
new repairs generated type repair retrieved case 
repairs ranked statistical similarity repair case base repair index values see appendix sim score scot util sp na repair repair similar repair repair repair indices number nurses types assigned original shift day repair scot number nurses described repair assigned original shift day repair number nurses types assigned new shift day repair number nurses described repair assigned new shift day repair util percentage contract hours assigned nurse repair sp shift pattern distance score described detail 
original shift shift assigned nurse repair applied whilst new shift shift assigned repair 


interactive constraint nurse scheduler 
proceedings international conference exhibition practical application constraint technologies logic programming 

arthur ravindran 
multiple objective nurse scheduling model 
transactions 

bailey 
integrated days shift personnel scheduling 
computing industrial engineering 

bailey field 
personnel scheduling models 
journal operations management 

bailey garner hobbs 
simulated annealing genetic algorithms solve sta scheduling problems 
asia pacific journal operational research 


scheduling sta mixed integer programming 
european journal operational research 


multi objective approach nurse scheduling hard soft constraints 
socio economic planning sciences 

burke de causmaecker vanden berghe 
hybrid tabu search algorithm nurse rostering problem 
selected papers nd asia pacific conference simulated evolution learning volume volume lnai pages 
springer verlag 

burke kendall soubeiga 
tabu search hyperheuristic timetabling rostering 
accepted publication journal heuristics 

burke petrovic qu 
structured cases case reasoning re adapting cases time tabling problems 
knowledge systems 

burke petrovic qu 
case heuristic selection timetabling problems 
accepted publication journal scheduling 

burns carter 
force size single shift schedules variable demands 
management science 

cheng lee wu 
nurse rostering system redundant modeling approach 
technical report department computer science engineering chinese university hong kong 

cunningham smyth 
case reasoning scheduling reusing solution components 
international journal production research 

kathryn dowsland 
nurse scheduling tabu search strategic oscillation 
european journal operational research 

mort reeves petrovic 
handling preferences genetic nurse scheduling problem 
proceedings multidisciplinary international conference scheduling theory applications volume pages 

glover 
tabu search part orsa journal computing 

kolodner 
case reasoning 
morgan kaufmann publishers 

meyer auf hofe 
solving rostering tasks constraint optimization 
selected papers rd international conference practice theory automated timetabling lecture notes computer science pages 
springer verlag 

michalewicz fogel 
solve modern heuristics 
springer 

miyashita sycara 
cabins framework knowledge iterative revision schedule improvement reactive repair 
artificial intelligence journal 

miyashita sycara 
improving system performance case iterative optimization knowledge filtering 
proceedings internation joint conference artificial intelligence ijcai pages 

miyashita sycara mizoguchi 
modeling ill structured optimization tasks cases 
decision support systems 

miyashita mizoguchi 
capturing scheduling knowledge repair experiences 
international journal human computer studies 

petrovic vanden berghe 
storing adapting repair experiences employee rostering 
practice theory automated timetabling iv selected papers volume lncs lecture notes computer science pages 
springer verlag 


nurse scheduling mathematical programming 
operations research 

schmidt 
case reasoning production scheduling 
international journal production economics 

scott simpson 
case bases incorporating scheduling constraint dimensions experiences nurse rostering 
advances case reasoning ewcbr lecture notes artificial intelligence 
springer verlag 

warner 
scheduling nursing personnel nurse preference mathematical programming approach 
operations research 

