results approximating steiner tree problem generalizations vijay vazirani steiner tree problem occupies central place emerging theory approximation algorithms methods devised attack led fundamental paradigms rest area 
reason interest problem lies rich mathematical structure arisen repeatedly diverse application areas 
euclidean steiner tree problem fairly understood see vast gaps understanding metric steiner tree problem generalizations variants 
short survey key ideas results obtained year steger factor ffl approximation algorithm constant ffl metric steiner tree problem jain factor approximation algorithm steiner network problem 
mention result compelling open problem area design algorithm bidirected cut relaxation metric steiner tree problem determine integrality gap relaxation 
steiner trees matroid parity metric steiner tree problem graph vertices partitioned sets required steiner vertices function cost specifying non negative costs edges find minimum cost tree containing required vertices subset steiner vertices 
easy see edge costs assumed satisfy triangle inequality loss generality 
easy see constant construct polynomial time optimal steiner tree connecting required vertices clearly done subsets required vertices polynomial time 
low cost steiner tree constructed information 
state scheme formally need definitions 
hypergraph generalization graph allowing arbitrary family subsets just element subsets 
sequence distinct vertices hyperedges said cycle gamma college computing georgia institute technology vazirani cc gatech edu subgraph said spanning tree connected acyclic spans vertices case graph hypergraph may spanning tree connected 
hypergraph said regular hyperedge consists vertices 
constant hypergraph vertex set consisting possible hyperedges containing vertices 
cost hyperedge cost minimum cost steiner tree set vertices spanning tree yields steiner tree replace hyperedge spanning tree optimal steiner tree connecting vertices cycles remove edges tree obtained 
clearly cost steiner tree obtained bounded cost spanning tree 
ae denote supremum graphs ratio cost minimum cost spanning tree optimal steiner tree address questions ae function minimum cost spanning tree constructed polynomial time just corresponds finding minimum spanning tree set required vertices furthermore easy show ae 
zelikovsky proved ae borchers du proved ae ae 
hand problem constructing minimum spanning tree np hard fixed 
scheme yield approximation algorithm better 
complexity computational problem open 
steger show problem costs hyperedges unary 
scaling weights appropriately obtain polynomial time approximation scheme problem 
gives ffl factor randomized algorithm steiner tree problem fixed ffl 
provide overview ideas involved 
lemma problem finding minimum cost spanning tree reduced finding minimum cost spanning tree regular hypergraph 
proof number vertices jrj maximum cost hyperedge nc 
construct regular hypergraph set vertices jzj gamma 
hyperedges size included original costs 
addition edge include hyperedges fzg cost cost called type hyperedges 
furthermore include hyperedge fv cost called type hyperedges 
spanning tree number size hyperedges respectively 
spanning tree gamma 
gamma gamma 
augmenting size hyperedge distinct vertex leaves number vertices uncovered 
picked type hyperedges yield spanning tree cost cost gamma similarly spanning tree yields spanning tree cost cost gamma gamma dropping type hyperedges removing vertices type hyperedges 
lemma follows 
lemma problem finding minimum cost spanning tree regular hypergraph reduced minimum weight matroid parity problem 
proof regular hypergraph 
new graph vertex set constructed follows corresponding hyperedge fv add edge pair choice arbitrary 
cost pair hyperedge 
set hyperedges corresponding set edge pairs easy see spanning tree iff spanning tree consider graphic matroid impose additional restriction independent sets pick edges pair find maximal independent set minimum weight 
minimum weight matroid parity problem 
earlier solution problem gives minimum cost spanning tree interestingly determining complexity minimum weight matroid parity open cardinality version problem known 
weights unary problem rp rnc 
gives steger result 
algorithms problem see 
algorithm achieving slightly better approximation factor appears 
involved current form survey beat factor takes time exceeding 
steiner networks lp rounding steiner network problem generalizes metric steiner tree problem higher connectivity requirements graph cost function edges necessarily satisfying triangle inequality connectivity requirement function mapping unordered pairs vertices find minimum cost graph edge disjoint paths pair vertices multiple number copies edge construct graph copy edge cost 
purpose edge specified stating upper bound number copies edge allowed bound number copies edge lp duality approximation algorithms metric steiner tree problem generalizations undirected relaxation 
order give integer programming formulation relaxation define cut requirement function defined largest connectivity requirement separated cut ju sg 
denote set edges cut ffi 
integer program variable edge minimize subject ffi lp relaxation minimize subject ffi optimal extreme point solution petersen graph 
certain np hard problems vertex cover node multiway cut admit lp relaxations having remarkable property half integral optimal solution 
clearly rounding halves solution leads factor approximation algorithm 
relaxation property 
answer 
surprisingly petersen graph counter example consider minimum spanning tree problem graph pair vertices 
edge unit cost 
petersen graph edge connected fact vertex connected edge feasible solution 
solution optimal degree vertex solution minimum needed allow connectivity required 
cost solution 
half integral solution cost pick extent half edges hamiltonian cycle 
petersen graph hamiltonian cycles half integral optimal solution 
say extreme point solution called vertex solution basic feasible solution lp feasible solution written convex combination feasible solutions 
turns solution edge extreme point solution 
extreme point solution shown thick edges picked extent thin edges extent missing edge picked 
isomorphism group petersen graph edge transitive related extreme point solutions solution edge average 
notice extreme point solution half integral picks edges extent half 
jain algorithm proving fact extreme point solution lp pick edge extent half 
pay factor rounding edges 
proceed 
start computing residual cut requirement function 
suppose set edges picked far 
residual requirement cut gamma jffi ffi represents set edges crossing cut 
general residual cut requirement function may correspond cut requirement function certain set connectivity requirements 
need definitions characterize definition function said submodular sets conditions hold 
gamma gamma 


notice graph vertex set function jffi submodular 
definition function said weakly supermodular sets conditions holds ffl gamma gamma ffl easy consequence definitions lemma subgraph weakly supermodular function residual cut requirement function easy see original cut requirement function weakly supermodular lemma residual cut requirement function 
henceforth assume function lp weakly supermodular function 
state central polyhedral fact proved jain full generality 
enable design iterative algorithm steiner network problem 
theorem weakly supermodular function extreme point solution lp pick edge extent half edge algorithm started design completed iteration round edges picked extent half optimal extreme point solution update residual cut requirement function 
algorithm halts original cut requirement function completely satisfied residual cut requirement function identically zero 
maxflow subroutine obtain separation oracle lp residual cut requirement function optimal extreme point solution computed polynomial time 
sketch theorem proven 
polyhedral combinatorics know feasible solution set linear inequalities extreme point solution iff satisfies linearly independent inequalities equality 
assume optimal solution lp edge edges dropped graph permanently picked cut requirement function updated accordingly 
tight inequalities optimal extreme point solution lp correspond cut requirements sets case say set tight 
say collection subsets forms laminar family sets collection cross 
inequality corresponding set defines vector vector corresponding edge ffi 
call incidence vector set denote theorem corresponding extreme point solution lp collection tight sets ffl incidence vectors linearly independent ffl collection sets forms laminar family 
extreme point solution peterson graph assigns non zero values edges 
theorem tight sets incidence vectors linearly independent 
marked 
fix extreme point solution lp 
laminar family tight sets incidence vectors linearly independent 
denote span vector space generated set vectors fa js lg 
extreme point solution span collection tight sets show span tight set addition violate increases span 
continuing manner obtain tight sets required theorem 
studying properties crossing tight sets 
lemma crossing tight sets 
hold ffl gamma gamma tight aa ab aa gammab ab gammaa ffl tight aa ab aa aa proof weakly supermodular gamma gamma 
assume holds proof similar 
tight ffi ffi gamma gamma violated ffi gamma ffi gamma gamma gamma ffi ffi ffi gamma ffi gamma edges having endpoint contribute inequality 
rest edges contribute equally sides 
inequality satisfied equality 
furthermore edge edge having endpoint aa ab aa gammab ab gammaa set define crossing number number sets crosses 
lemma set crosses set sets gamma gamma smaller crossing number proof illustrates ways set cross sets crossing shown dotted 
cases crosses 
addition crosses sets 
lemma tight set span crosses set tight set having smaller crossing number span 
proof cross suppose possibility established lemma holds proof second possibility similar 
gamma gamma tight sets gammat gammas linear dependence implies gammat gammas span span 
lemma gamma gamma smaller crossing number lemma follows 
corollary span tight set span fsg laminar family 
corollary maximal laminar family tight sets linearly independent incidence vectors lj establishes theorem 
counting argument characterization extreme point solutions theorem yields theorem fairly involved counting argument 
considerably simpler argument style leads slightly weaker result showing edge picked extent third 
argument 
extreme point solution collection tight sets established theorem 
number sets equals number edges degree defined jffi result claimed follow lemma set degree 
laminar family viewed forest trees elements ordered inclusion 
precise 
contained set say root set 
root set say parent minimal set containing unique 
called child relation descendent reflexive transitive closure relation child 
sets children called leaves 
manner partitioned forest trees rooted root set 
set subtree rooted mean set descendents edge incident set ffi 
set owns endpoint edge smallest set containing subtree rooted set owns endpoint edge descendent owns prove lemma contradiction 
assume set cut contains edges 
edges endpoints 
prove set endpoints owned subtree rooted redistributed way gets endpoints proper descendents gets endpoints 
carrying procedure root sets forest get total number endpoints graph exceed leading contradiction 
lemma set child endpoints 
proof child point incident set edges incident 
leading contradiction 
exactly endpoint ffi ffi differ fraction contradicting fact sets tight integral requirements 
lemma follows 
lemma consider tree rooted set assumption set degree endpoints owned redistributed way gets points proper descendents gets endpoints 
proof proof induction height tree base case obvious 
say set surplus endpoints assigned 
induction step consider non leaf set prove moving surplus children considering endpoints owned assign endpoints induction step involves cases 
children assign surplus child assigning endpoints 
child say lemma owns endpoints 
moving surplus assign endpoints integrality gap relaxation supremum ratio costs optimal integral optimal fractional solutions 
importance lies fact limits approximation factor algorithm relaxation achieve 
consequence factor approximation algorithm steiner network problem get integrality gap undirected relaxation 
previously algorithms achieving guarantees largest requirement obtained problem 
bidirected cut relaxation undirected relaxation integrality gap general problem steiner network problem minimum spanning tree problem problem 
proof claim consider cycle vertices edges unit cost 
optimal integral solution minimum spanning tree problem graph pick gamma edges cost gamma optimal fractional solution picks edge extent half total cost 
ratio solutions gamma fundamental questions arise ffl exact relaxation integrality gap minimum spanning tree problem 
ffl tighter relaxation metric steiner tree problem 
questions appear intimately related answer question 
goes back seminal edmonds giving primal dual schema polynomial time algorithm general problem finding minimum branching directed graph 
similar idea gives remarkable relaxation metric steiner tree problem bidirected cut relaxation 
relaxation conjectured integrality gap close worst example known due goemans integrality gap 
despite fact relaxation known decades algorithms designed upper bound known integrality gap trivial bound factor follows undirected relaxation 
primal dual schema factor approximation algorithm relaxation special class quasi bipartite graphs graph quasi bipartite contains edges steiner vertices 
part difficulty designing algorithm bidirected cut relaxation arises edges running steiner vertices 
restricting graphs enables finesse difficulty address rest aspects problem 
progress reported quite similar matching problem restricting bipartite graphs difficulty created odd cycles 
bidirected cut relaxation leave open problem designing approximation algorithm beating factor 
bidirected cut relaxation replace undirected edge directed edges cost cost 
denote graph obtained 
pick arbitrary vertex designate root 
choice root set ae called valid set contains required vertex contains root 
integer program trying pick minimum cost collection edges way valid set edge 
easy see optimal solution program minimum cost steiner tree directed minimize cost subject ffi valid set lp relaxation integer program called bidirected cut relaxation metric steiner tree problem 
notice need explicitly add constraints upper bounding variables minimize cost subject ffi valid set easy verify choice root affect cost optimal solution ip lp 
usual dual seeking maximum cut packing 
talk gave conference honour manuel blum th birthday 
honour attend special event manuel ph advisor 
agrawal klein ravi 
trees collide approximation algorithm generalized steiner problem networks 
siam journal computing june 
arora 
nearly linear time approximation schemes euclidean tsp geometric problems 
th annual symposium foundations computer science pages miami beach florida october 
ieee 
berman 
improved approximations steiner tree problem 
algorithms 
borchers du steiner ratio graphs 
stoc 

random pseudo polynomial algorithms exact matroid problems 
algorithms 
edmonds 
optimum branchings 
res 
nat 
bur 
standards 
garg vazirani yannakakis 
approximation algorithms multiway cuts node weighted directed graphs 
proc 
th international colloquium automata languages programming 
goemans 
personal communication 
goemans williamson 
general approximation technique constrained forest problems 
siam journal computing april 
goemans goldberg plotkin shmoys williamson 
approximation algorithms network design problems 
soda 
grotschel lov asz schrijver 
ellipsoid method consequences combinatorial optimization 
combinatorica 
jain 
factor approximation algorithm generalized steiner network problem 
manuscript 
kou markowsky berman 
fast algorithm steiner trees 
acta informatica 
karpinski zelikovsky 
new approximation algorithms steiner tree problem 
electr 
colloq 
comput 
compl tr 
lovasz 
matroid matching problem 
algebraic methods graph theory mathematica janos bolyai hungary 
narayanan vazirani 
randomized parallel algorithms matroid union intersection applications arborescences edge disjoint spanning trees 
nemhauser trotter jr 
vertex packing structural properties algorithms 
mathematical programming 
steger 
rnc approximation algorithms steiner problem 
reischuk editors proceedings symposium theoretical aspects computer science volume lecture notes computer science pages 
springer verlag berlin germany 
rajagopalan vazirani 
bidirected cut relaxation metric steiner tree problem 
submitted 
williamson goemans mihail vazirani 
primal dual approximation algorithm generalized steiner network problems 
combinatorica 
zelikovsky 
approximation algorithm network steiner problem 
algorithmica 

