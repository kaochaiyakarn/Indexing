chained negotiation distributed notification services richard lawley michael luck luc moreau school electronics computer science university southampton ral mml moreau ecs soton ac uk distributed notification services allow consumers publishers notifications interact different notification services 
distributed infrastructure difficult share notifications consumers consumers allowed specify quality service levels 
chained negotiation engine enabling distributed notification services support negotiation reuse existing subscriptions 
demonstrate benefit system reducing load service providers enabling content shared 
notification services nss messaging middleware components providing asynchronous communications services users distributed environment 
responsible delivery messages publishers subscribers publishers information services provide information filtered delivered subscribed consumers specification topic delivery parameters 
publishers consumers notifications may different conflicting requirements terms delivery parameters 
example subscribers service may wish filter notifications set criteria specify minimum intervals notifications 
essentially measures quality service qos different subscribers may demand request different levels qos 
publisher may able meet requirements reasons policy system load mechanism required resolve difference preferences consumer provider 
previous determined competitive approach negotiation enable differences requirements publisher consumer resolved 
bi lateral negotiation model enabling mutually acceptable values notification parameters automatically determined 
demonstrated negotiation model manage client demands load service provider reduced enabling clients service 
requirement negotiate qos levels distributed service oriented computing environment recognised grid community 
nss distributed address security scalability issues 
multiple instances ns hosted different locations grid 
publishers consumers interact different nss typically publish messages consume ns located institution 
distributed nss ensure messages routed propagate notifications publishers relevant consumers 
multiple consumers subscribed topic notifications sent 
multiple consumers site receiving notifications sensible reuse subscriptions order reduce network traffic potential delays 
consumer allowed specify different qos parameters subscription may difficult share notifications 
key aspect distributed nss intermediaries exist publishers consumers form nss 
order negotiate quality service publisher consumer complex form negotiation required 
publisher consumer longer communicate directly negotiation take place intermediaries middlemen 
middlemen pass proposals suggest existing commitments reused satisfy consumer requirements impact negotiation outcome consumer publisher 
enable negotiation qos context notification service provide efficient notifications designed extended negotiation model support chained negotiation 
model publishers subscribers need know negotiating directly middleman interactions participate remain identical cases 
negotiations take place negotiation components built publishers consumers number middlemen 
publisher ns publishing notifications topic consumer interested 
situations consumer connected different notification service chained negotiation required mediate differing requirements 
discuss design preliminary evaluation negotiation engine implementing chained negotiation 
demonstrate effectiveness designed series experiments aim show chained negotiation system conjunction distributed notification service enables consumers serviced set notification services done time reducing load service providers 
shown negotiation reduce load service provider directly connected scenario aim show improved results distributed system 
notification services years significant increase number computers devices access run remote services network 
traditionally accomplished remote procedure calls rpc remote service invoked client issues requests stays connected waiting complete 
turned unsuitable model common requirement able issue requests disconnect reconnect receive outcome request 
needed permanent connection available job long running continuous practical stay connected waiting results 
various message oriented middleware solutions enable asynchronous reliable communications suitable role handling remote requests 
queuing products microsoft message queue ibm mqseries robust commercial implementations allow reliable asynchronous communication guaranteed delivery constraints 
notification service ns form middleware utilising publish subscribe model acting intermediary responsible asynchronous delivery messages publishers subscribers 
ns referred notification broker ws notification specification 
publishers information sources publish information topic 
published information delivered subscribed topic 
topics subscribed subscribers published publishers 
notification service takes notifications publisher handles delivery subscribed consumers 
simply passing messages notification services filter collect notifications allowing consumers specify want notifications matching certain criteria particular sources want receive notifications period single digest 
responsibility notification service ensure notifications distributed subscribers publisher need know subscribed topic 
notification services able offer persistent reliable delivery notifications meaning subscribed consumer reached example disconnected network notification service attempt deliver notification reached 
notifications instance include announcements changes content databases new releases tools services termination workflow execution 
grid community recognised essential nature notification services grid monitoring architecture grid notification framework logging interface open grid services architecture peer peer high performance messaging systems naradabrokering 
notification service core architectural element mygrid project 
mygrid www mygrid org uk science project aims help biologists perform workflow silico experiments help automating management workflows personalisation notification change publication experiments 
focusses increasingly data intensive bioinformatics provision distributed environment support silico experimental process 
ns viewed centralized server message delivery data persistence 
immediately introduces potential scaling problem server gets heavily loaded unable cope 
distributed notification servers overcome problem enabling consumers publishers connected different nss 
message routing handled nss ensure notifications reach destinations 
potentially distributed nss enable number messages transmitted optimised 
consider nss ns ns 
ns publisher ns subscribers wanting subscribe topic 
available options ns subscription connected subscriber messages transmitted twice ns recognise subscribers subscribed topic reuse subscription ns serve 
address distributed ns issue mygrid notification service supports federated notification topics 
ns individual topics metadata attached marking part federated notification topic 
information federated topics local member topics stored topic registry 
consumer subscribes federated topic ns contacts topic registry find nss topic federated topic subscribes topics 
enables consumer receive notifications topic ns published ns 
distributed ns desirable able request levels qos 
different levels requested different consumers ns difficult reuse existing subscriptions 
example consumer subscription notifications database changes specified notifications sent hours apart second subscriber requesting notifications hour going able reuse subscription 
form negotiation required allow subscriber request appropriate levels qos ns respond alternative proposals put existing subscriptions better 
proposed chained negotiation describe section 
negotiation negotiation process parties communicate order reach mutually acceptable agreement particular matter :10.1.1.145.2341
specifically negotiation described terms protocols strategies protocols define set rules governing negotiation types participants valid negotiation states strategies determine single participant behaves protocol including generates responds offers bid 
automated negotiation situations developer support negotiation certain parameters needing know details negotiate 
automated negotiation frameworks possible defining particulars negotiate terms protocols strategies 
plenty existing automated negotiation aware addressing concern chained negotiation 
example previous introduced automated negotiation engine bilateral negotiation framework intended notification service 
bartolini developed framework negotiation enabling different types negotiation specified rules 
jennings discuss framework automated negotiation focussing rules negotiation allowing different types negotiation carried framework :10.1.1.145.2341
chained negotiation direct negotiation takes place consumers suppliers 
consumers attempt negotiate price set constraints product service obtain supplier 
chained negotiation extended form negotiation intermediary middleman consumer supplier 
chained negotiation enables middlemen provide value added services top provided service service available efficiently number consumers 
middleman exist purpose making profit increasing social welfare community 
situation subject negotiation information middleman able redistribute multiple consumers needing individual agreement information provider 
chained negotiation suitable distributed notification service 
consumers subscribe local ns provider may connected ns 
distributed ns handles sending messages various nss trouble multiple consumers request different delivery constraints 
example consumer requests updates database day consumer requests hourly updates way existing notifications reused 
chained negotiation consumer find set mutually acceptable qos values subscriptions place 
rest section give brief overview previous negotiation engine discuss extensions support chained negotiation 
bilateral negotiation engine previous introduced bilateral negotiation engine negotiations take place negotiation item 
notification service subscription notifications particular topic 
attributes item called negotiation terms various qos aspects message frequency message size granularity cost notifications 
system referred negotiation engine 
conceptually regarded single shared entity split negotiation component nc party negotiation maintain privacy preferences utility functions enabling local information system load taken consideration negotiation 
types messages negotiation 
proposals exchanged find acceptable values 
party receives proposal prepared accept respond accept message 
immediately commit mean commit party replies confirm accept message 
negotiations terminated terminate message 
due space limitations omit details proposals generated evaluated see details 
selection potential negotiation partners scope negotiation model assume fixed chain consumer supplier 
testing purposes fixed set partners discovered suitable service discovery mechanism 
chained negotiation extension chained negotiation types participants 
consumers attempt obtain products services suppliers contacting directly go middleman local 
messages exchanged sequentially involved parties 
typical sequence message exchanges shown distinction messages travelling away upstream consumer consumer downstream 
messages travel negotiation chain middlemen 
middlemen satisfy request reply incoming request forwarding message 
upstream downstream message exchange chained negotiation requirements established extending bilateral negotiation model cover chained negotiation consumer supplier know participating chained negotiation 
needed changes model mainly due time taken negotiations 
evaluation previous model simple time model sending message takes interval actual transmission time 
successful proposal time deadline expired negotiation fail 
system chained negotiation fail easily participants final concessions deadline expires time get message destination 
solve included extra field message holding distance number hops away consumer furthest downstream sender message combined new rule stating messages sent upstream time reply reach consumer dist 
impossible determine far upstream message needs go proposal accepted closest middleman sent 
uncertainty rule sending closest party 
message types chained negotiation unchanged accept message enables components get prepared commit stage making commitment 
extra rule introduced protocol stating negotiation component confirm accept downstream party having existing agreement new upstream commitment satisfy downstream commitment 
prevents consumer thinking successful subscription possible 
proximity scoring functions key part chained negotiation proximity function determining proposal satisfiable 
proposal satisfiable element counterpart point view sender negotiation object notification subject case proposal 
subj subj qos qos prox satisfiable satisfiable proximity functions determine appropriate existing commitments 
scoring functions determine best action take time message received middleman 
action offer counter proposal accept received proposal direction 
actions generated ways selecting appropriate existing commitments proximity functions received proposals direction passing 
case middleman adjust values proposal potentially take cut monetary aspect proposal 
methods enables negotiation take place middleman making possible reuse existing commitments close proposals 
key chained negotiation having scoring functions 
framework developed allow extra scoring functions plugged order evaluate scoring functions 
scoring function uses proximity function determine close action acceptable 
second scoring function favours actions lead acceptable state ones favour actions matched existing commitment incur cost upstream 
final scoring function increasingly favours actions directions 
example rounds messages downstream action chosen upstream action get higher score function time 
actions evaluated combination scoring functions 
deadline passes negotiation successful proposal accepted negotiation terminated 
negotiations explicitly terminated reasons longer requiring service system shutdown 
cost defined terms money having evaluation integrating negotiation engine notification service run number simulations predict performance chained negotiations context notification service 
experiment setup experimental setup divided negotiation components ncs ncs middle ncs representing components negotiation middlemen respectively 
experimental system communication mechanism ncs coupled directly method calls 
negotiation terms experiments represented numeric real value turn represent qos terms suggested previously 
set varying factors negotiation experiment preferences deadlines grouped environment 
infinitely large space possible environments randomly generated repeatable manner experiments may re run 
experiment ncs played number middlemen 
average values get indications real world results 
tactics generate values term proposal 
time dependent tactics ncs set experiments simplicity details tactics experiment setup please see 
experiments compared various factors affect different types negotiation direct negotiation consumer supplier directly connected chained negotiation uses intermediaries pass proposals attempts match existing commitments forwarded negotiation subset chained negotiation existing commitments reused 
forwarded negotiation represents worst case chained negotiation take assuming requests sufficiently different commitments reused 
chained negotiation examine amount negotiations matched cases existing commitments reused making new ones 
previous evaluation direct negotiation examined consumer supplier utility 
increase consumer utility normally corresponds decrease supplier utility 
chained negotiation supplier may involved request satisfied middleman 
concentrated consumer utility experiments 
success rate direct forwarded chained matched deadline effect varying deadline success rate utility direct forwarded chained deadline effect varying deadline utility experiments results varying deadline negotiation completed certain time deadline ensure agreements point 
previously determined deadline set short negotiation fail give lower utility party 
ran experiments environments single negotiation term determine negotiation outcome affected deadline varied upto messages 
shows success rates different types negotiation deadline varied 
forwarded negotiation consistently performs worse direct negotiation 
chained negotiation fares better showing better results immediately 
set environments tests run sufficiently large negotiations matched existing commitments 
graph shows set periodic spikes curves 
spikes occur change protocol described section consumer determine distance opponent request fulfilled middleman inbetween 
determine best time offer reservation value negotiation succeed 
final offer remaining time allows message reach supplier return deadline expires negotiation succeed better outcome consumer 
shows consumer utility experiment 
shown similar results success rate chained negotiation average performs quickly 
forwarded negotiation perform direct negotiation shorter deadlines approaches level deadline sufficiently large 
reason utilities decrease slightly negotiation deadlines increase due concession pattern supplier 
short deadline concessions larger steps supplier determine possible moment final concession reservation value consumer get better deal 
longer deadlines supplier smaller steps proposal acceptable consumer deadline 
earlier resulting proposal better respect consumer preferences 
investigate effect middlemen chained negotiation ran experiment different numbers middlemen 
focus forwarded negotiation matter middlemen initial commitment offer similar satisfied middleman chain 
ran experiment described varied number middlemen 
success rate middleman middlemen middlemen middlemen deadline effect varying deadline multiple middlemen shows number middlemen increases success rate drops 
illustrates effect chained negotiation number middlemen increases specific values dead line tend negotiation successful 
typically occurs small overlap ranges values party considers acceptable 
reason drop supplier determine allowed final concession offer reservation value consumer know far away supplier final concession consumer reach supplier negotiation deadline 
worst case happen deadline number middlemen integer 
varying negotiation terms single negotiation term easy match new request existing commitment 
negotiation terms negotiation get point terms satisfiable commitment reused 
varied number terms negotiation run random deadlines messages 
success rate direct forwarded chained matched terms effect varying number terms shows number negotiation terms increases number negotiations matched existing commitments drops sharply 
shows forwarded negotiation perform direct negotiation explain reason mentioned previously forwarded negotiation performs worse direct negotiation deadline due extra time required send messages 
ran experiment larger numbers environments 
produces opportunities commitments reused rate matched commitments decreased slower rate 
success rate chained negotiation badly affected increasing number negotiation terms level forwarded negotiation worst case chained negotiation 
supplier capacity main objectives chained negotiation reduce amount redundancy required sending notifications increasing number consumers single publisher serve 
simulate set experiment number nss chained single publisher 
consumers spread evenly nss negotiations run 
measured difference success rate utilities compared consumers negotiating publisher ns directly 
success rate utility direct chained table success rate consumer utility chained negotiation table shows success rate consumer utility higher chained negotiation negotiating directly 
successful negotiations involved making commitments supplier 
rest satisfied existing commitments held middlemen 
time matched negotiations satisfied local middleman corresponding commitment match distant middleman accepted 
preliminary investigation indicates chained negotiation may initial agreements harder reach especially multiple middlemen outweighed benefit emerges subsequent requests satisfied existing commitments 
context notification service allows publisher ns send notifications consumers nss allowing consumers specify aspects qos 
shown need chained negotiation support qos negotiation distributed notification service 
design chained negotiation engine shown circumstances better results terms negotiation success rates achieved reusing existing commitments 
reduces load upstream components enabling consumers serviced 
determined chained negotiation reduced benefit negotiation involves terms 
expect small number qos terms time system provide benefit 
stage integrate chained negotiation engine mygrid notification service 
mygrid ns currently support negotiation qos attributes added time 
adding qos negotiation abilities enable consumers request levels qos ns ns retaining control levels qos realistic 
adding chained negotiation enable ns support consumers system increasing number messages required significantly 
identified number changes chained negotiation model may provide better results altering middleman negotiate sides negotiation simultaneously sending message direction waiting reply 
research funded part epsrc mygrid project ref 
gr 
czajkowski dan keahey ludwig pruyne tuecke xu 
web services agreement specification ws agreement feburary 
bartolini preist jennings 
architecting reuse software framework automated negotiation 
rd international workshop agent oriented software engineering pages bologna italy 
faratin sierra jennings 
negotiation decision functions autonomous agents 
international journal robotics autonomous systems 
foster gannon nick 
open grid services roadmap 
technical report open grid services architecture wg 
www ggf org ogsa wg 
fox 
narada event brokering system overview extensions 
editor international conference parallel distributed processing techniques applications pdpta volume pages las vegas nevada 
csrea press 
graham niblett chappell lewis parikh patil tuecke weihl 
web services notification january 
object management group 
event service specification 
www omg org mar 
object management group 
notification service specification 
www omg org aug 
gullapalli czajkowski kesselman 
grid notification framework 
technical report gis global grid forum jul 
houston 
building distributed applications message queuing middleware white 
technical report microsoft 
jennings parsons sierra faratin :10.1.1.145.2341
automated negotiation 
th international conference practical application intelligent agents multi agent systems pages manchester uk 
java message service api 
java sun com products jms 
krishna tan lawley miles moreau 
mygrid notification service 
proceedings uk ost science second hands meeting pages nottingham uk september 
lawley luck decker payne moreau 
automated negotiation publishers consumers grid notifications 
parallel processing letters december 

change events propagation mygrid 
technical report european bioinformatics institute 
www ebi ac uk change notification pdf 
sierra jennings noriega parsons 
framework argumentation negotiation 
intelligent agents iv th international workshop agent theories architectures languages volume lnai pages 
springer 
tierney gunter smith taylor wolski 
grid monitoring architecture 
technical report ggf performance wg 
lbl gov ggf perf gma wg 
