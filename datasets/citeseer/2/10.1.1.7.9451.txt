mechanism design automated negotiation application task oriented domains gilad zlotkin center coordination science sloan school management mit amherst st cambridge ma usa gilad mit edu jeffrey rosenschein institute computer science hebrew university ram jerusalem israel jeff cs huji ac il revised expanded version papers domain theory task oriented negotiation agents negotiation mechanisms multi agent systems appeared proceedings ijcai chambery france pages pages respectively 
distributed systems computers play increasingly important role society necessary consider ways machines interact effectively 
especially interacting machines independently designed essential interaction environment conducive aims designers 
designers example wish machines behave efficiently minimum overhead required coordination mechanism 
rules interaction satisfy needs 
formal tools analysis help appropriate design rules 
consider concepts game theory provide standards design appropriate negotiation interaction environments 
design highly sensitive domain interaction place 
different interaction mechanisms suitable different domains attributes efficiency stability maintained 
general theory captures relationship certain domains negotiation mechanisms 
analysis possible categorize precisely kinds domains agents find category choose appropriate negotiation mechanisms 
theory generalizes previous results allows agent designers characterize new domains accurately 
analysis serves critical step theory negotiation real world applications 
show certain task oriented domains exist distributed consensus mechanisms simple stable strategies lead efficient outcomes agents incomplete information environment 
additional novel results particular concave domains deals lying agent beneficial subadditive domains exist beneficial decoy lies require full information regarding agent goals 
machines controlling sharing resources computers making decisions relatively autonomous fashion 
telecommunication networks controlled computers decide routing telephone calls data packets 
electrical grids decisions computer regarding loads balanced times peak demand 
similarly research done computers react control automotive airplane traffic real time 
decisions computers generating concert machines 
inter machine consultation crucial task hand 
example personal digital assistants pdas individual palmtop computer expected coordinate schedules pdas software agent determines car fixed time garage contacts taxi order cab updates day schedule 
scheduling take place inter machine communication 
rarely take place resolution inter machine conflict humans machines represent conflicting goals 
similarly concept intelligent databases relies sophisticated interactions autonomous software agents 
user request piece information may require collecting synthesizing information distributed databases 
machines need formulate necessary collection requests arrange access data may partially restricted cooperate get information needed 
computer tasks involve machines may beneficial involve 
example find automated systems controlling resources telecommunications network mentioned 
benefit separate resource controlling systems share resources fiber optic lines short long term storage switching nodes 
inter machine coordination place kind interaction environment 
inevitably protocols machines deal 
concerns details stuff information packet network higher level issue agents communicate common language translation filters 
assume agents communicate understand come agreements 
interaction rules establish basis inter machine negotiation agreement coordination cooperation 
inter machine protocols primitive incapable capturing subtleties cooperative opportunities machines act inefficiently 
wrong decisions 
people depend decisions suffer 
overview article article organized parts 
part sections discuss general approach framework automated negotiation motivation related research 
give brief informal overview results 

second part sections formal details application framework task oriented domains 
second part includes formal discussion main issues raised part article 

appendix proofs theorems contained second part article 
heterogeneous self motivated agents field distributed artificial intelligence dai researchers explore methods enable coherent coordinated efficient interaction computers distributed systems 
major distinctions dai research distributed problem solving dps distributed system centrally designed multiagent ma systems distributed system independently designed agents 
dps global task system performing exists implicitly global notion utility constrain direct agent activity 
dps assumed single body able design time directly influence preferences agents system 
multiagent systems assumed single body able design time directly influence preferences agents system 
agents preferences arise distinct designers 
ma systems agent concerned goals different agents goals may overlap global notion utility 
ma system agent concerned welfare welfare designer acts accordingly increase welfare 
distinction distributed problem solving multiagent systems really seen primarily distinction research agendas 
certainly obvious outside observer distributed system falls category 
single designer may built agents act competitively believing improves system efficiency 
similarly individually motivated agents seen sharing information helping determined best interests act way 
research questions asked researcher dps distinct asked mas researcher despite fact terms undergoing change 
multiagent systems refer entire field distributed artificial intelligence 
discussion dps mas distinction see 
deal overlap 
particular dps researcher show acting particular way system impose behavior agents system design time 
mas researcher alternative unavailable 
best able design aspects environment motivate selfish agents act certain way 
need indirect incentives element distinguishes mas research dps research 
approach ma system research particularly appropriate kinds scenarios mentioned 
mci computers communicate purpose load balancing message traffic concerned welfare 
interaction environment take account software agents coming agreement primarily concerned increased benefit agreement 
looking benevolent altruistic behavior machines 
similarly systems interacting machines tend open sense system composition fixed 
pdas example new agents new types agents constantly entering environment 
pda effective negotiation coordination able deal open dynamic configurations agents 
research multiagent systems appropriate model analyze independent software agents interactions 
related distributed artificial intelligence streams research dai approached problem multiagent coordination different ways 
briefly review categorizing general areas multiagent planning negotiation social laws economic approaches 
multiagent planning focus dai research planning multiple agents considers issues inherent centrally directed multiagent execution 
smith contract net falls category dai 
second focus research distributed planning multiple agents participate coordinating deciding actions 
question group activity fashioned centrally distributed manner axis comparison 
important issue distinguishes various dai research efforts goals need adjusted may fundamental conflicts different agents goals 
example georgeff early multiagent planning assumed basic conflict agent goals coordination necessary guarantee success 
similarly planning context lesser corkill durfee research involves coordination activities sensor network computations agents inherent conflict surface conflict may exist 
planning means avoidance redundant distracting activity efficient exploration search space important issue relationship agents degree willing compromise goals assuming compromise necessary 
benevolent agents design willing accommodate built cooperative share information coordinate pursuit implicit notion global utility 
contrast multiagent system agents cooperate best interests 
potential relationship agents modified master slave relationship called supervisor supervised relationship non absolute control exerted agent 
synthesis synchronization adjustment process multiple agent plans constitute varied foci dai planning research 
synchronization conflict avoidance distribution single agent planner multiple agents centralized multiagent planner consensus mechanisms aggregating subplans produced multiple agents explored 
includes 
axiomatic approaches group activity exists large growing body artificial intelligence attempts capture notions rational behavior logical axiomatization 
approach usually centers formalized model agent beliefs desires intentions called bdi model 
purpose formal model precisely characterize constitutes rational behavior intent imposing rational behavior automated agent 
formal axioms run time directly constrain agent decision process compile time produce efficient executable module 
focus research coming single agent artificial intelligence perspective architecture single automated agent 
example cohen levesque explored relationship choice commitment intention agent commit certain plans action remain loyal plans long appropriate example agent discovers plan infeasible plan dropped 
looking multiagent systems researchers examined member group designed looking design individual agent productive group member 
example axioms proposed cause agent discovers fail fulfill role joint plan notify members group 
axiomatizations need deal groups agents joint commitment accomplishing goal agent interpersonal commitments notions 
bdi abstractions allow agent reason agents relativize intentions terms beliefs agents intentions beliefs 
social laws multiple agents various researchers distributed artificial intelligence suggested worthwhile isolate aspects cooperative behavior general rules cause agents act ways conducive cooperation 
hypothesis agents act certain ways share information act predictable ways defer globally constraining choices easier carry effective joint action 
moses shoham tennenholtz example suggested applying society metaphor artificial systems improve performance agents operating society 
issues dealt synchronization coordination agents activities cooperative ways achieve tasks safety fairness constraints system guaranteed 
propose coordinating agent activity avoid conflicts system structured agents arrive potential conflict situations 
social laws seen method avoid necessity costly coordination techniques planning negotiation 
agents appropriate social laws need run time coordination reduced 
important agent designers may willing invest large amount effort design time building effective distributed systems important run time overhead low possible 
similarity pre compiled highly structured social laws development pre defined interaction protocols 
social laws approach assumes designer laws full control agents agents assumed follow social laws simply designed individually benefit social laws 
obeying social laws may stable assuming obeys laws agent better breaking 
approach concerned social conventions stable suitable individually motivated agents 
economic approaches attempts consider market mechanisms way efficiently allocating resources distributed system 
ai smith contract net malone enterprise system wellman walras system 
contract net high level communication protocol distributed problem solving system 
enables distribution tasks nodes operate system 
contract nodes established tasks executed node net act manager contractor 
task assigned node decomposed contractor 
contract established bidding scheme includes announcement task manager bids sent potential contractors 
enterprise system built variation contract net protocol 
distributed scheduling protocol locates best available machine perform task 
protocol similar contract net defined assignment criteria 
system takes economic approach solving distributed problem price mechanism explored wellman 
wellman uses consumer producer metaphor establish market pricing mechanism task redistribution ensures stability efficiency 
agents act consumers producers 
distinct auction associated agents get submitting bids auction 
system developed wellman walras computes market equilibrium price 
negotiation negotiation subject central interest dai 
word variety ways general refers communication processes coordination 
negotiating procedures included exchange partial global plans communication information intended alter agents goals incremental suggestions leading joint plans action 
interagent collaboration distributed problem solving systems explored ongoing research lesser durfee colleagues 
focused implementation analysis data fusion experiments systems distributed sensors absorb interpret data ultimately arriving group 
agents exchange partial solutions levels detail construct global solutions examined effective strategies communication data hypotheses agents particular kinds relationships nodes aid effective group analysis 
example different organizations different methods focusing node activity help system far efficient 
sycara examined model negotiation combines case reasoning optimization multi attribute utilities 
particular research assume agents goals fixed negotiation sycara specifically interested agents influence change goals process negotiation information transfer 
kraus colleagues explored negotiation negotiation time issue 
agents may lose value negotiation drags long different agents asymmetric regard cost negotiation time 
agents attitudes negotiation time directly influences kinds agreements reach 
interestingly agreements reached delay 
avoidable inefficiency delaying agreement 
gasser explored social aspects agent knowledge action multiagent systems communities programs 
social mechanisms dynamically emerge communities programs generate modify codify local languages interac tion 
gasser approach may effective agents interacting unstructured domains domains structure continuously changing 
research hand exploits pre designed social layer multiagent systems 
ephrati rosenschein clarke tax voting procedure agent consensus mechanism essence avoid need classical negotiation 
mechanism assumes ability transfer utility explicitly 
clark tax technique fact assumes requires agents able transfer utility system taxes paid agents 
utility transferred system wasted reduces efficiency mechanism 
price paid ensure stability 
assume explicit transfer utility implicit transfer possible certain extent 
negotiation mechanism ensures stability inefficiency transfering utility system 
relationship previous negotiation previous considered various negotiation protocols different domains examined properties 
agents assumed goal specified set acceptable final states 
agents entered iterative process offers counter offers exploring possibility achieving goals lower cost resolving conflicts goals 
procedure making offers formalized negotiation mechanism specified form agents offers take deal types 
deal agents generally joint plan 
plan joint sense agents probabilistically share load compromise agent actions compromise agent gets parts goal satisfied 
interaction agents occurs consecutive stages 
agents negotiate execute entire joint plan agreed 
divergence agreed deal allowed deal publically agreed appropriate behavior externally enforced 
sharp separation stages consequences rules certain negotiation tactics interleaved process 
step agents simultaneously offer deal 
monotonic concession protocol introduced specified point agent demand previously words offer repeated previous offer conceded demanding 
negotiation ended ways ffl conflict agent concession step default agreed domain dependent conflict deal ffl agreement step agent example offers agent asks agree offer agents overshoot demands coin toss breaks symmetry 
result rules agents backtrack simultaneously stand negotiation occurrence causes reach conflict 
negotiation process strongly monotonic ensures convergence deal 
deal types explored previous included pure deals deals mixed deals joint plans mixed joint plans semi cooperative deals multi plan deals 
types agreement proved suitable solving different kinds interactions 
example semi cooperative deals proved capable resolving true conflicts agents mixed deals 
similarly multi plan deals capable capturing goal relaxation part agreement 
shown certain properties true deal types 
particular different agent strategies appropriate rational different deal types domains 
agents shown incentive lie certain deal types certain domains incentive lie deal type domain combinations 
examination relationship negotiation mechanism domain prototypical examples domain introduced slotted blocks world 
clear domains exemplified general classes multiagent interactions domain inherently cooperative slotted blocks world 
clear attributes domains certain negotiation mechanisms appropriate 
clear domains compare prototypes 
new domain agents querying common database previous results applicable weren 
research lacked general theory explaining relationship domains negotiation mechanisms 
article beginnings general theory 
analysis possible understand previous results domain generally characterize new domains accurately negotiation mechanisms appropriate 
analysis serves critical step theory negotiation real world applications 
aim research purpose research described article consider build machines capable making constructive agreements 
want machines interact flexibly 
want represent interests compromise advantage 
may want times revealing information want recognize part possible 
short want agents faithfully act surrogates encounters agents 
social engineering machines humans interact vacuum 
social conventions laws constrain behavior purpose social conventions laws exactly 
tax levied air intended certain kind behavior 
positive publicity provides benefit behavior 
think complicated system laws conventions kind social engineering intended produce certain behavior people 
interested social engineering machines 
want understand kinds negotiation protocols incentive mechanisms motivate individual designers build machines act ways designers find beneficial 
mentioned development social laws parallels 
social laws centrally designed systems agents dps necessarily sense independently designed agents 
example rule encourage efficient behavior followed single agent benefit rule system stable 
agents necessary maximize benefit stability critical issue need rules agents independently find best interests follow 
return issue stability 
setting standards scenario consider follows 
imagine representatives various companies agent designers coming agree interaction protocols automated agents 
particular domain balancing telecommunications traffic wide area networks meeting scheduling various interaction mechanisms shown mechanism certain provable properties 
example mechanism arrive guaranteed globally optimal solutions cost agent possibly doing badly 
mechanism ensure gap agents benefits minimized cost doing little worse 
shown representatives protocol immune deception interest design cheating agent deviates protocol way reporting higher lower network traffic 
representatives consider various options decide protocol build agents 
meeting agents built beneficial agreements reached 
turns attributes mechanism highly sensitive domain agents operating 
rules interaction appropriate domain quite inappropriate 
representatives sit meeting need told domain protocol properties immune deception 
protocol properties immune deception 
research explores space possibilities analyzing negotiation mechanisms different domains 
designers automated agents meet kind information need 
alternative having analysis wander dark build negotiation modules understanding properties 
result deals 
machines better 
build deceptive agent takes advantage mine 
design agent deceptive 
goals 
research intended answer kinds questions 
builders complex distributed systems interconnected networks shared databases assembly line monitoring manufacturing distributed processing broaden range tools bring bear issues inter agent coordination 
existing techniques generally rely individual agents don take account complex interactions competing goals 
new tools applied high level design heterogeneous distributed systems creation appropriate negotiation protocols 
protocol design machines decide share resources machine give way proceeds 
negotiation compromise necessary build machines things 
designers separate machines decide techniques agreement enable mutually beneficial behavior 
techniques appropriate 
definite statements techniques properties 
way begun address questions synthesize ideas artificial intelligence concept reasoning rational computer tools game theory study rational behavior encounter self interested agents 
assuming automated agents built separate self interested designers interact interested designing protocols specific domains get agents interact useful ways 
word protocol means different things different people 
describe networks protocol structure messages allow computers pass information 
word protocol mean rules agents come agreements 
specifies kinds deals sequence offers counter offers allowed 
high level protocols dealing mechanisms communication content 
protocols intimately connected domains mean environment agents operate 
automated agents control telecommunications networks operating different domain formal sense robots moving boxes 
research focused relationship different kinds domains protocols suitable 
protocol need consider agent strategy appropriate 
strategy way agent behaves interaction 
protocol specifies rules interaction exact deals agent proposes result strategy designer put 
analogy protocol rules governing movement pieces game chess 
strategy way chess player decides move 
game theory automated agent match game theory right tool right place design automated interactions 
game theory tools primarily applied analyzing human behavior certain ways inappropriate humans rational beings necessarily consistent preferences alternatives 
automated societies hand particularly amenable formal analysis design 
automated agents exhibit predictability consistency purpose emotions humor fears clearly defined consistent risk attitude explicit measurement utility operative meaning inside program controlling agent 
notion strategy specification alternative interaction classic game theory term takes clear unambiguous meaning simply program put computer 
notion human choose fixed strategy interaction follow alteration leads unintuitive results person 
formal construct realistic requirement humans consider alternative ahead time decide 
hand notion computer programmed fixed strategy interaction follows alteration simple description current reality 
course humans computer programs ideal game theory agents 
importantly capable unlimited reasoning power game theory assumes 
certain ways automated agents closer game theory idealization agent humans 
described design interaction environments machines closely related field mechanism design game theory 
comparison game theory bargaining theory approach taken article strongly previous game theory primarily known nash bargaining problem nash model 
classic game theory talks agents reaching deals defined vectors utilities agent 
bargaining game possible outcome deal 
player full preference order set possible outcomes preference order expressed utility function 
deal utility vector list utilities deal participant 
special utility vector called conflict status quo point utility player assigns conflict lack final agreement 
game theory assumes set possible deals simplex utility vectors possible deals vector line connecting utility vector possible deal meaning domain deals continuous 
classic game theory deals question set utility vectors simplex utility vector players agree particular assumptions 
words classic bargaining theory focused prediction outcomes certain assumptions players outcomes 
nash showed rational behavior symmetry assumptions players reach agreement deal individual rational pareto optimal maximize product players utility see section complete discussion 
considered player bargaining problem player decision process deciding concede assumption players concede particular step reach conflict 
evaluated risk player willing take decides concede risks conflict 
player willing risk concession 
showed approaches equivalent sense players criteria reach nash solution 
approaches furnish tools design evaluation negotiation mechanisms primary concern 
game theorists usually concerned games played descriptive normative point view 
game solutions consist strategies equilibrium social behavior reaches equilibrium agent incentive diverge equilibrium behavior 
equilibrium considered solution game 
may strategies equilibrium different notions equilibrium nash perfect equilibrium dominant strategy equilibrium 
groups game theorists consider problem design games certain attributes 
area mechanism design closest concerns automated agents 
mechanism design implementation theory mechanism design know game theory literature implementation problem 
implementation question asks mechanism game form distinguishable equilibrium point dominant strategy strong merely nash social profile group behavior associated players follow equilibrium strategies desired outcome 
words assumed group agents utility function preferences possible social outcomes 
social welfare function rates possible social outcomes socially efficient agreement may rated higher non efficient 
question design game unique solution equilibrium strategies individual agent behaves equilibrium strategy social behavior maximize social welfare function 
game designed said game implements social welfare function 
example social welfare function consider minimization pollution 
may interested lowering pollution interested bearing associated costs 
mechanism implement social welfare function include example taxes polluting industries tax credits purchase electric cars 
precisely kind mechanism cause agents equilibrium strategy minimize pollution 
incentive compatibility designer mechanism deal configuration agent utility functions precisely designing mechanism game form specific game 
agents may may complete information utility functions may may know concrete game playing 
complicates problem mechanism design 
usually assumption agents certain limitations form utility functions 
exists known set possible utility functions 
agent assigned type utility functions currently 
mechanism called direct mechanism agents asked straight type agents declared types mechanism generates outcome 
agents asked type mechanism called indirect mechanism 
revelation principle states done indirect mechanism done direct mechanism 
words social function implementable indirect mechanism implemented direct mechanism agents incentive declare true type 
called incentive compatible mechanism 
advantage direct mechanism agents incentive declare true type indirect mechanism simplicity agents strategies 
simplicity part agents may offset need complicated mechanism 
prefer direct mechanism important simple 
look described article kind mechanism design social welfare function implemented efficiency sum agents utilities 
requiring sum maximized priori rules social behaviors may allow multiple sum maximization behaviors 
words sum maximized way utility divided agents may differ 
agent wants bigger share group utility typical negotiation scenario 
agents agree division reach conflict 
talking automated agents depend designers reach consensus mechanism associated strategies 
mechanism design simpler game theory 
contrast classic mechanism design concerned uniqueness equilibrium strategies 
important existence equilibrium strategy maximizes social welfare function 
satisfied existence maximizing equilibrium social behavior may social behaviors equilibrium maximize social welfare function 
designers automated agents choose mechanism equilibrium points maximize social welfare function don coordinate jointly choosing strategy agents reach particular equilibrium point maximizes social welfare function 
relaxing requirement mechanism may discover social welfare functions implemented approach implemented game theory stricter approach 
attributes standards attributes interest representatives meet discuss interaction environment machines 
set attributes relative importance ultimately affect choice interaction rules 
considered attributes important system designers 

efficiency agents resources come agreement wasted utility agreement reached 
example sense agreements satisfy requirement pareto optimality agent derive different agreement agent deriving alternate agreement 
consideration global optimality achieved sum agents benefits maximized 
kind optimality necessarily implies 
speaking self motivated agents care utilities sum system wide utilities agent general willing accept lower utility just increase system sum pareto optimality plays primary role efficiency evaluation 
pareto optimal solutions consider secondary criterion solutions increase sum system wide utilities 

stability designer incentive deviate agreed strategies 
strategy agents programmed proposed part interaction environment design 
strategies proposed want individual designers companies incentive go back build agents different manipulative strategies 

simplicity desirable interaction environment low computational demands agents require little communication overhead 
related efficiency stability interaction mechanism simple increases efficiency system fewer resources carrying negotiation 
similarly stable mechanisms resources need spent opponent trying discover optimal choices 
optimal behavior publicly revealed better just carry 

distribution preferably interaction rules require central decision maker obvious reasons 
want distributed system performance bottle neck collapse due single failure special node 

symmetry designer wants negotiation process arbitrarily biased agent 
mechanism treat agents differently inappropriate criteria 
exactly constitutes inappropriate criteria depends specific domain 
mechanism may asymmetric example agent tasks carry maintain strict irrelevant aspects agents differ agents manufacturers 
attributes need universally accepted 
fact tradeoffs attribute example efficiency stability conflict 
protocols designed specific classes domains satisfy attributes 
ultimately kinds criteria rate acceptability interaction mechanism 
example attribute stability assumes particular importance consider open systems new agents constantly entering leaving community interacting machines 
want maintain stability face new agents bring new goals potentially new strategies 
mechanism self benefit society follow rules benefit individual member social behavior remains stable society members change dynamically 
interaction rules create environment particular strategy optimal beneficial social behavior resistant outside invasion 
domain theory times alluded connection protocols domains class interactions protocols suitable 
useful categorize domains tier hierarchy task oriented domains state oriented domains worth oriented domains 
hierarchy means complete cover large proportion kinds real world interactions interested 
article focused task oriented domains 
treatments state oriented domains see treatments worth oriented domains see 
task oriented domains domains agent activity defined terms set tasks achieve 
tasks carried concern interference agents resources necessary accomplish tasks available agent 
hand possible agents reach agreements redistribute tasks benefit example agent doing task may little cost able agent task 
domains inherently cooperative 
negotiation aimed discovering mutually beneficial task redistribution 
key issue notion task indivisible job needs carried 
course constitutes task specific domain 
kinds activity conceived way execution indivisible tasks 
example imagine children needs delivered different school morning 
neighbor children needs take school 
delivery child modeled indivisible task 
neighbor interested setting doubt able achieve tasks necessary 
worst happen neighbor won come agreement setting case worse 
benefit worse neighbor existence 
assume children neighbor children go school cost carrying deliveries tasks cost carrying 
obviously sense children taken neighbor need trip carry tasks 
kinds agreements reach 
decide take children days month neighbor take odd days children involved neighbor take specific children am responsible rest children mine 
possibility flip coin morning decide take children 
important issue deals reached specific deal agreed see section 
consider examples domain database domain fax domain domains described detail formally 
domain agent set letters deliver various nodes graph starting post office agents traverse graph deliveries 
cost associated carrying letters carry number cost associated graph traversal 
agents interested making short trips 
agents reach agreements carry letters save travel 
database domain similarly assigns agent set tasks allows possibility beneficial task redistribution 
agent query common database extract set records 
query turn may composed subqueries agent tasks 
example agent may want records female employees making year agent may want records female employees children 
agents share sub task query involves extracting records female employees prior extracting subset records 
having agent get female employee records agent lower cost 
third example fax domain 
appears similar domain subtly different 
fax domain agent set faxes send different locations world fax task 
cost establish connection 
connection unlimited number faxes sent 
course agents faxes send paris london may redistribute faxes sending faxes paris sending faxes london 
despite seemingly minor differences domains attributes suitable protocols different see 
state oriented domains state oriented domain sod type domain ai research dealt 
blocks world example classic state oriented domain 
superset tods tod cast form sod 
sod agent concerned moving world initial state set goal states 
course possibility real conflict 
example competition resources agents fundamentally different goals 
may goal states satisfy agents 
times may exist goal states satisfy agents expensive reach require agents isolation 
mechanisms dealing state oriented domains examined 
negotiation mechanisms certain attributes task oriented domains efficiency stability necessarily attributes state oriented domains 
worth oriented domains worth oriented domains generalization state oriented domains agents assign worth potential state establishes desirability agent opposed sod worth function essentially binary non goal states zero worth 
establishes decision theoretic flavor interactions 
example tileworld 
key advantage worth oriented domain worth function allows agents compromise goals increasing efficiency agreement 
sod cast terms course binary worth function 
negotiation mechanisms suitable sod need suitable attributes mechanism may change moving sod 
mechanisms dealing worth oriented domains examined 
building blocks negotiation mechanism designing negotiation mechanism rules interaction step process 
agent designers agree definition domain agree negotiation protocol propose negotiation strategy 
domain definition complete definition domain give precise specification concept goal agent operations available 
example domain goal agent set letters agent deliver tod goal set tasks need carried requirement agent post office 
specification agent operations available define exactly agent nature actions cost 
domain part domain definition agent carry unlimited number letters cost graph traversal total distance traveled 
formal domain definition necessary step analyzing new domain 
agents negotiating sharing message traffic telecommunications networks necessary specify completely constitutes goal agent operations available 
similarly pdas involved negotiations schedules need goals operators precisely defined 
negotiation protocol domain specified need specify negotiation protocol establishes rules interaction agents 
need concerned space possible deals negotiation process 
ffl space possible deals specify set candidate deals 
specifically kinds agreements agents come 
example restrict agents discussing deals involve redundant example parents consider deals parents visiting school 
similarly specify deals involve tossing coin 
ffl negotiation process set possible deals process agents converge agreement single deal 
words rules specify consensus reached 
agreed deal differentiated candidates 
example specify parent turn offer delivery schedule assignments parent accept offer reject counter offer 
allow part negotiation process parent point leave proposition accepted negotiation agreement 
example negotiation process monotonic concession protocol described section 
negotiation strategy set possible deals negotiation process strategy individual agent adopt participating process 
example strategy parent scenario compute particular delivery schedule leave deal 
strategy start deal best parent rejects minimally modify concession parent 
specification negotiation strategy strictly part interaction rules decided designers automated agents 
words designers really free build agents see fit 
compel build agents certain way having certain strategy attempted probably effective 
provide strategies known properties allow designers incorporate 
specifically may able bring table strategy show provably optimal agent 
incentive designer different strategy 
agents strategy certain beneficial global properties interaction 
negotiation strategy provided designers service compelling case designers fact incorporate strategy agents 
generally interested negotiation protocol strategy combinations 
classes tods mentioned domain examples section tods great deal common 
critical differences focused domains cost functions 
demonstrate differences categorize tods possible attributes cost function subadditivity concavity modularity 
hierarchy modularity implies concavity turn implies subadditivity 
protocols strategies stable kind tod necessarily stable kinds 
issues discussed greater length 
subadditive domains combining sets tasks may reduce increase total cost compared sum costs achieving sets separately 
domain example subadditive 
sets addresses need visit worst case able minimal cycle visiting addresses minimal cycle visiting addresses 
best plan addresses disjoint decoupled topology graph 
case cost visiting addresses equal visiting set plus cost visiting set 
cases may able better visit addresses way 
subadditivity means 
example consider database query domain 
evaluate sets queries course evaluate queries independently evaluate queries best course action queries disjoint decoupled total cost cost plus cost able better sharing results queries sub queries evaluate lower total cost 
relatively minor change domain definition eliminate subadditivity 
domain agents required return post office deliveries domain subadditive 
concave concave domain cost arbitrary set tasks adds set tasks greater cost add subset fax domain database query domain concave domain 
intuitively concave domain predictable subadditive domain concave 
element monotonicity combining tasks concave domain missing domains 
know example original set tasks faced getting additional outside set suffer greatly enlarge original set extra adds unaffected reduced enlargement original set 
non concave domain subadditive find extra adds greater enlargement 
modular modular domain cost combination sets tasks exactly sum individual costs minus cost intersection 
intuitively behaved subadditive domain category 
task sets combined overlap matters tasks extraneous negotiation 
fax domain tod examples modular 
incomplete information research conducting model negotiation considers issues relating agents incomplete information encounter 
example may aware goal knowing goal agent negotiating 
may need adapt negotiation strategy deal uncertainty 
obvious way uncertainty exploited agent true goal 
task oriented domain involve hiding tasks creating false tasks intent improving negotiation position 
process reaching agreement generally depends agents declaring individual task sets negotiating global set declared tasks 
declaring task set falsely principle certain circumstances change negotiation outcome benefit 
research focused negotiation mechanisms deceit 
kinds negotiation mechanisms called incentive compatible mechanisms game theory literature 
mechanism incentive compatible agent designer reason agent declare true goal negotiation 
designer free build agent way telling truth shown optimal strategy 
concern honesty agents encouraging honesty structure negotiation environment absolutely essential aspect multiagent systems 
situations agents incentive lie general stable 
agent designers may discuss strategy motivated go back build agents differently 
ultimately result efficient systems outcomes worse individual agents 
agents reasonably expend great deal energy discovering true goal negotiator effort lowers simplicity efficiency system 
second tempted risk strategies may result inferior outcomes 
agents coming trying choices benefit 
efficiency stability closely related 
point multiagent systems considering efficiency considering stability 
stability efficiency guaranteed agents tempted deviate globally efficient strategy 
task oriented domains formal definition task oriented domain tod describes certain class scenarios multiagent encounters 
intuitively domain cooperative negative interactions agents goals 
agent existence agents benefit reach agreement sharing tasks 
definition task oriented domain tod tuple 
set possible tasks 
fa ordered list agents 
monotonic function ir stands finite subsets finite set tasks cost executing tasks single agent 
monotonic finite subsets 
definition encounter tod ordered list ng finite set tasks needs achieve 
called goal 
definition cost function takes parameters task set 
general defined having global parameters initial state world 
cost set tasks independent tasks need achieved 
agent tod certain able achieve goal cost 
attributes examples tods give examples tods cover variety agent interaction situations 
subsequently classify tod examples respect cost properties mentioned section 
delivery domain description agents deliver sets containers warehouses arranged weighted graph 
limit number containers fit warehouse 
agents start central distribution point 
agents exchange containers cost distribution point prior delivery 
task set set addresses graph address agent task set means container deliver cost function cost subset addresses length minimal path starts distribution point visits members domain description agents deliver sets letters mailboxes arranged weighted graph 
limit number letters fit mailbox 
delivering letters agents return starting point post office 
agents exchange letters cost post office prior delivery 
task set set addresses graph address agent task set means letter deliver cost function cost subset addresses length minimal path starts post office visits members ends post office 
database queries description agents access common database carry set queries 
result query set records 
example agent may want records satisfying condition female employees earning year agent may want records satisfying condition female employees years 
agents exchange results queries sub queries cost 
task set possible queries expressed primitives relational database theory including operators join projection union intersection difference 
cost function cost set queries minimal number database operations needed generate records 
possible result query input queries operations destructive 
fax domain description agents sending faxes locations telephone network weighted graph 
send fax agent establish connection receiving node 
connection established multiple faxes sent extra cost 
agents cost exchange messages 
task set set possible receiving nodes network 
node agent task set means fax send cost function cost associated establishing single connection node cost set tasks sum costs establishing connections nodes set 
cost dial connection node independent nodes task set 
black white hole domain description set identical pegs basket set holes 
peg hole basket agent hand 
hole labeled black white hold peg 
agent concerned configuration pegs black holes concerned configuration pegs white holes 
agent list color holes fill empty 
pegs satisfy agents goals 
operations world pickup pick peg non empty hole peg basket putdown put peg currently held empty hole basket 
agent hold peg time 
task set single task hole contain pegs hole empty contain peg 
hole encounter world initial state encounter specific parameter affects cost function cost function identical agents 
agent consistent task set includes white holes second agent consistent task set includes black holes 
cost function cost consistent set tasks minimal set pickup putdown operations need done move world initial state final state achieves tasks minimal cost plan involve agent holes takes places pegs holes 
having introduced tods turn attention attributes domains exhibit 
attributes strongly affect relationships negotiation mechanisms 
focus attributes subadditivity concavity modularity 
motivation definitions detail 
definition subadditivity tod called subadditive finite sets tasks words combining sets tasks may reduce increase total cost compared cost achieving sets 
tod examples subadditive delivery domain 
see delivery domain subadditive consider encounter shown 
cost task cost delivering node distribution point cost task cost union delivering go back distribution point continuing deliver 
cost union tasks greater sum costs individual tasks 
delivery domain non subadditive encounters 
article mainly concerned agent subadditive domains 
definition concavity tod called concave finite sets tasks gamma gamma words cost arbitrary set tasks adds set tasks greater cost add subset theorem concave tods subadditive 
proof 
proof theorem theorems additional lemmas appendix general domain black white hole domain concave 
tod examples fax domain database query domain concave 
domain concave may cases task set tasks add set tasks adds subset 
example seen 
edge nodes cost 
fd gg ae fb gg fhg fd hg fd gg fb hg fb gg violation concavity condition gamma gamma example non concavity black white hole domain seen 
initial state seen top slot empty slots filled 
includes task slot filled 
cost achieving initial state need pickup block basket slots putdown block slot includes additional task empty slot 
achieve need pickup time pick block slot putdown 
includes task empty slot 
reason achieved picking block slot putting empty slot 
need move block slot slot achieve need move block slot basket achieve violation concavity condition gamma gamma theorem domain restricted graphs tree topology cycles concave 
definition modularity tod called modular finite sets tasks gamma words cost combination sets tasks exactly sum individual costs minus cost intersection 
theorem modular tods concave 
fax domain tod examples modular 
stated theorem domain restricted tree topology concave 
graph star topology node degree greater star topology subcase tree topology 
node degree greater called center graph 
restrict domain trees star topologies post office center modular tod 
star example seen left side post office node star topology cost visiting different nodes equal sum visiting node separately fvg fwg fvg fwg implies modularity condition 
domain restricted fully connected arc nodes homogeneous arcs length graphs modular 
example fully connected homogeneous graph seen right side 
length nodes cost visiting set nodes fully connected homogeneous graph jxj simply implies modularity condition jx jxj jy gamma jx jxj jy gamma jx gamma non homogeneous fully connected graphs concave 
example example seen additional sufficiently long additional arcs graph fully connected 
mechanisms subadditive tods section develop framework formalizing agent negotiation mechanisms subadditive task oriented domains 
similar definitions previous 
definition encounter agent tod fa 
pure deal redistribution tasks agents 
ordered list semantics deal agent commits executing tasks cost deal defined cost 
mixed deal pure deal probability mixed deal denoted semantics deal agents perform lottery probability assigned assigned probability gamma assigned assigned cost deal defined cost gamma gammak 
deal mixed deal agreeing deal chance executing tasks gamma chance doing 
definitions deal types consider utility negotiation set optimal protocols stable negotiation strategies 
definition encounter tod fa 
deal ffi pure mixed define utility ffi gamma cost ffi 
pure deal theta called conflict deal 
theta conflict agent agrees execute tasks 
note utility theta agents fail agree run conflict default execute conflict deal theta assumption rational agents utility maximizers guarantee utility agree deal gives negative utility 
definition vectors ff ff ff ff fi fi fi fi say ff dominates fi write ff fi ff fi ff fi 
say ff weakly dominates fi write ff fi ff fi definition deals ffi ffi pure mixed say ffi dominates ffi write ffi ffi utility ffi utility ffi utility ffi utility ffi say ffi weakly dominates ffi write ffi ffi utility ffi utility ffi utility ffi utility ffi say ffi equivalent ffi write ffi ffi utility ffi utility ffi ffi ffi means deal ffi better agent worse 
definition deal ffi individual rational ffi theta simple observation definition definition conflict deal utility deal ffi individual rational utility ffi definition deal ffi called pareto optimal exist deal ffi ffi ffi 
pareto optimal deal improved agent lowering agent utility deal 
definition set deals individual rational pareto optimal called negotiation set ns 
agents definition indifferent deals give utility interested negotiation mechanisms produce pareto optimal deals agent gets utility deals prefers don want settle 
point considering negotiation mechanisms result deal ns 
sense mechanisms efficient outcomes 
theorem encounter tod ns pure deals empty 
theorem encounter tod ns mixed deals empty 
mechanisms maximize product utilities having introduced mechanisms remember mechanism includes protocol strategy shift attention entire class mechanisms satisfy conditions ffl protocol symmetrically distributed ffl strategy equilibrium ffl protocol agents play strategy agree deal maximizes product utilities 
product maximizing deal agree deal product maximizers maximizes sum utilities 
sum maximizing product maximizer protocol choose deals arbitrary probability 
definition implies individual rationality pareto optimality agreed deals 
call class mechanisms product maximizing mechanisms pmms 
pmms efficient 
rest article concerned exactly negotiation mechanism agents long belongs pmm class 
number existing approaches bargaining problem game theory 
earliest popular nash axiomatic approach 
nash trying axiomatically define fair solution bargaining situation 
listed criteria ones fair solution satisfy 
individual rationality fair participant get anyway agreement 
pareto optimality fair solution specify agreement improved participant harming 
symmetry situation symmetric agents get utility agreement possible deal symmetric deal possible fair solution symmetric give participants utility 
invariance respect linear utility transformations 
example imagine agents negotiating divide 
agent measures utility dollars measures cents influence fair solution 
similarly agent bank evaluates deal gives dollars having utility evaluates deal having utility influence fair solution change origin doesn affect solution 
independence irrelevant alternatives 
imagine agents negotiating divide cents 
nash solution cents due symmetry assumption 
imagine agents negotiating 
deals reach example agent gets gets solution original solution cents new deal space 
nash showed product maximizing solution satisfies criteria solution satisfies 
criteria explicitly implicitly assumed approach fact example version fourth assumption restrictive nash 
fifth criteria assumed turns true cases anyway 
nash solution general reasonable bargaining outcome applicable 
nash assumptions space deals hold 
example nash bargaining problem assumes bounded convex continuous closed region negotiation 
agent negotiations assume space deals convex continuous 
definition product maximizing mechanism pmm set deals mechanism negotiation strategy equilibrium agents negotiation strategy agree deal ns maximizes product agents utility 
deal maximizes product mechanism chooses arbitrarily equal probability 
note pmm definition satisfies stability efficiency criteria mentioned section 
monotonic concession protocol defined section equilibrium strategy deal type yields agreement deal ns maximizes product agents utility 
strategies risk criteria 
monotonic concession protocol mentioned section pmm 
theorem pmm mixed deals subadditive agent tods divides available utility equally agents 
incentive compatible mechanisms agents full information goals 
raises question agents benefit concealing goals manufacturing artificial goals 
lying occur explicitly declaring false goals implicitly behaving false goals true depending specific negotiation mechanism 
previous papers partly focused combinations negotiation mechanisms domains agents incentive lie 
negotiation mechanism called incentive compatible strategy telling truth behaving true goals equilibrium agent uses strategy best thing agent strategy 
domain identified types lies 
hiding tasks letter hidden 
phantom tasks agent claims letter non existent produced lying agent 
decoy tasks agent claims letter non existent manufactured demand necessary 
certain deals require exchange letters phantom lie uncovered decoy lie course hidden lie 
phantom lie certain negotiation mechanisms safe 
different domains differ easy hard generate decoy tasks 
section provide characterization relationship kinds lies domain attributes deal types 
kinds lies tods considered domain attributes subadditivity concavity modularity classes optimal negotiation mechanisms pure mixed deals 
resulting matrix represented 
notation described 
consider entry subadditive deal decoy lie ll refer entry 
entry position means optimal negotiation mechanism deals exists subadditive domain encounter agent incentive lie decoy lie means lying may beneficial 
entry position means concave domain encounter domain optimal negotiation mechanism mixed deals agents incentive lie decoy lies means telling truth beneficial 
entries table marked refer lies beneficial may discovered encounter domain agent tells truth afraid penalty levied lie discovered 
transformed optimal negotiation mechanism includes sufficiently high penalty discovered lies 
table relationship cells 
fact entry implies entry denoted single shaft arrow cell arrow going cell 
similarly implies entry denoted arrows 
modular domains concave concave domains subadditive incentive lie subadditive domain certainly incentive lie concave modular domains sub classes subadditive domains 
similarly entry implies entry beneficial lie modular domain certainly concave domain superset 
downward influences marked table arrows 
relationship certain table entries domain attribute relationships denoted double shaft arrows 
example incentive lie general mixed deals incentive lie deals subset 
cell implies cell implies turn implies 
fill table need demonstrate small number fixed points turn imply table entries 
fixed points need demonstrated numbered table 
demonstrate values cells theorems general statements optimal negotiation mechanisms 
incentive compatible fixed points incentive compatible fixed points determined theorems 
theorem fixed point encounter agent subadditive tod optimal negotiation mechanism deals hiding lie beneficial 
theorem encounter agent subadditive tod deal ns maximizing product utilities 
deal candidate agreement negotiation mechanism arbitrarily choose 
reason implied 
exists encounter agents incentive lie negotiation deals encounter agents incentive lie negotiating general mixed deals agreement deal 
consequence theorem 
theorem fixed point encounter agent subadditive tod pmm mixed deals phantom lie positive probability discovered 
sufficiently severe penalty mechanism beneficial declare phantom task 
theorem fixed point encounter agent concave tod optimal negotiation mechanism mixed deals decoy lie beneficial 
theorem encounter agent concave tod optimal negotiation mechanism deals lie including combinations hidden phantom beneficial 
theorem clear concave domains agents benefit lying deals optimal negotiation procedure deals incentive compatible 
true modular domains subcase 
seen table entire row marked modular concave domains 
additionally subadditive domain decoy tasks generated optimal negotiation procedure deals penalty mechanism discovered lies incentive compatible shown different form 
seen table row marked excluding decoy column 
theorem fixed point encounter agent modular tod optimal negotiation mechanism pure deals decoy lie beneficial 
non incentive compatible fixed points fixed point example beneficial phantom lie concave domain negotiation mechanism pure deals consider example domain restricted graphs tree topology domain concave due theorem example phantom letter consider graph left length cost edge written 
post office root tree agents need deliver letters nodes agent chance delivering letters utility chance delivering letters utility 
expected utility 
happens creates phantom letter tells letter deliver node 
see right side 
cost delivering letters plus phantom letter 
individual rational visit visit deliver letter way 
agree deal delivers letters apparent utility actual utility 
utility risen creating phantom letter 
lie safe lie verify phantom letter delivered 
fixed point example beneficial decoy lie subadditive domain domain unrestricted graph topology negotiation mechanism deals consider example 
example graph 
edge nodes cost 
agent needs deliver letters nodes total cost 
agent needs deliver letters nodes total cost 
tells truth utilities cycle probability 
lies decoy letter node apparent cost 
delivery entire set letters apparently costs 
agree deal gives agents apparent utility 
agent entire delivery including decoy letter probability fact getting utility 
agent simply cycle decoy letter probability getting actual utility 
lying beneficial telling truth gives real utility lying gives real utility 
example instance general case 
turns agent knows relationship opponent total costs negotiation possible reliably generate beneficial default lie decoy tasks 
subadditive domain domain generate extra decoy tasks way don increase stand cost improve position final agreement 
done cost greater cost example instance situation 
important result lie generated reliably having full information agent set tasks 
theorem encounter agent subadditive tod pmm deals agent knows cost greater cost generate default decoy lie may benefit harm 
demonstrate fixed points bring examples domain topology star modular tod represented 
post office center star length lines represent distances post office 
fixed point consider left example 
agents deliver letters nodes distance distance 
note 
agents tell truth negotiation mechanism arbitrarily send node node agent hides letter node pure deal maximizes product agents utilities sends agent node 
agent node agent benefits lie 
fixed point consider right example 
agent deliver set letters includes ones nodes agent deliver set letters includes ones nodes note hides letter node apparent set tasks node 
note pmm assumption true set tasks agree mixed deal fa fg call deal ffi 
stand utility ffi stand utility deal 
utility real utility gamma gamma greater utility gotten told truth 
deal beneficial agents agree probability give agent real utility gamma gamma expected payoff lying agent negotiation mechanism chooses deal lying agent benefits 
provide agents suitable interaction environment coordinate may desirable establish high level protocols motivate socially beneficial individually beneficial behavior 
game theory provide tools appropriate design protocols 
attributes designers see interaction environments efficiency stability simplicity 
design suitable protocols closely connected domain agents acting 
certain protocols appropriate domain inappropriate 
cases important provide protocols deal incomplete information part agents maintaining stability mechanism 
article general domain theory analyzing negotiation protocols 
characterized task oriented domains tods cover important set multiagent interactions 
examples tods examined attributes domains exhibit subadditivity concavity modularity 
enumerated relationship deal types domain attributes types deception focusing agent tod attribute deal type motivated tell truth 
particular shown concave tods benefit agent lying deals 
general subadditive domain agents able generate decoy tasks deals sufficient create stability discourage lies 
addition demonstrated subadditive domains exist beneficial decoy lies require full information regarding agent goals 
acknowledgments research done gilad zlotkin computer science department hebrew university jerusalem supported leibniz center research computer science 
research partially supported israeli ministry science technology israel science foundation 
proofs proof theorem concave tods subadditive 
proof follows immediately choose empty set 
concave domain finite subsets gamma gamma gamma proof theorem domain restricted graphs tree topology cycles concave 
weighted connected graph tree topology 
graph tree topology contain cycles non repetitive path node path appears nodes 
post office 
subset nodes cost minimal cyclic path starts post office visits nodes ends post office 
graph tree topology minimal path visits unique modulo order visiting specific nodes 
called closure union nodes visited minimal path visited maximal superset relation cost 
minimal connected subgraph includes post office subset nodes ae specific node define distance set nodes node dist length shortest path nodes closure 
dist defined due fact loops fvg dist show domain concave need show sets nodes gamma gamma prove induction size jzj 
assume jzj fzg know fzg dist fzg gamma dist argument fzg gamma dist implies dist dist needed show 
distance superset greater distance subset 
assume gamma gamma true sets size equal show true sets size arbitrary set nodes jzj node 
gamma gamma induction 
fzg gamma fzg gamma case subset 
add inequalities get fzg gamma fzg gamma regrouping fzg gamma fzg gamma set fzg satisfies concavity condition 
proof theorem modular tods concave 
modular domain finite subsets monotonicity modularity gamma gamma gamma gamma gamma gamma proof theorem encounter tod ns pure deals empty 
theta individual rational pure deal infinite chain pure deals ffi ffi ffi theta 
deal ffi utility ffi bounded maximal benefit reached tasks executed agent 
exists maximal pure deal ffi pareto optimal individual rational ffi ns 
proof theorem encounter tod ns mixed deals empty 
encounter agent tod 
show negotiation set empty sufficient show mixed deal individual rational pareto optimal 
pure deals satisfy conditions min min min sum minimal total cost min satisfies min sum conditions conflict deal theta satisfies min sum conditions finite number pure deals pure deal exists 
loss generality assume min condition see cases ffl deal individual rational 
ffl deal gamma gammac gammac individual rational 
pareto optimal deal dominates individual rational satisfies min sum conditions utility gamma gamma gammai min min min dominates implies utility utility true contradicts fact minimal total cost pure deal satisfies min sum conditions 
lemma efficiency agreement encounter agent subadditive tod mixed deal ns proof 
subadditivity proof contradiction assume show results contradiction 
show deal dominated deal pc gammap contradict fact negotiation set pareto optimal 
greater sides equation equal 
show lies order legal mixed deal 
pc gamma definition completes proof demonstrating claim deal dominates deal cost qc fby definition qg pc gamma cost agent deals equivalent 
subadditivity condition follows splitting right side equation get pc gammap gammap pc term equal means gamma pc gamma 
gamma pc gamma 
gamma pc left side inequality equals cost right side inequality equals cost cost cost deal cheaper agent agent utility greater 
utility utility utility utility means deal dominates 
lemma constant sum equality encounter agent subadditive tod mixed deal ffi ns utility ffi utility ffi gamma proof 
ffi mixed deal 
utility ffi utility ffi gamma pc gamma gamma gamma pc gamma gamma gamma proof theorem pmm mixed deals subadditive agent tods divides available utility equally agents 
deal ffi ns utility ffi utility ffi gamma lemma 
definition pmm know agreement reached maximize product utilities 
ffi deal agents agree negotiation pmm 
ffi utility ffi utility ffi utility ffi gamma utility ffi utility ffi gamma utility ffi maximize take derivative respect utility ffi 
discover value utility ffi maximize derivative equal zero 
utility ffi gamma utility ffi gamma utility ffi means utility ffi utility ffi proof theorem fixed point encounter agent subadditive tod pmm deals hiding lie beneficial 
assume agent decides hide tasks show beneficial deals 

ffi deal agents agree deal ffi utility ffi utility ffi theorem 
utility ffi gamma cost ffi gamma cost ffi utility ffi gamma pc gamma gamma gamma gamma gamma agreement reached fl ffi gammab 
cost fl gamma cost fl gamma utility fl utility fl gamma agent lies hides tasks broadcasts gamma subadditivity domain negotiate agree gammab 
agent perform probability gammab perform gammaa expected cost gammab gammaa complete proof sufficient show gamma gamma gamma gamma gamma gamma cc gamma gamma gamma gamma gamma gamma cases case case case know equation means gamma sufficient show gamma gamma gamma gamma gamma gamma gamma gamma gamma cc gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma case means gamma sufficient show gamma gamma gamma gamma gamma gamma gamma gamma lc gamma gamma gamma gamma gamma gamma gamma know equation 
sufficient show gamma gamma gamma gamma gamma gamma true equation 
proof theorem encounter agent subadditive tod deal ns maximizing product utilities 
assume negotiation set 
probability defined proof lemma show steps proof lemma changing symbol negotiation set dominated proof theorem fixed point encounter agent subadditive tod pmm mixed deals phantom lie positive probability discovered 
sufficiently severe penalty mechanism beneficial declare phantom task 
follows immediately theorem 
agents agree deal assign tasks including phantom tasks non lying agent positive probability 
proof theorem fixed point encounter agent concave tod pmm mixed deals decoy lie beneficial 
true encounter 
negotiation true information pmm mixed deals lead agreement mixed deal ffi satisfies utility ffi gammac utility ffi assume agent lies declares initial set tasks set decoy tasks 
words agent apparent initial cost apparent total cost 
negotiation information true lead agreement mixed deal ffi satisfies utility ffi gammac utility ffi ft definition concavity conclude gamma gamma cost adds greater cost adds ft 
means gamma gamma conclude utility ffi gammac gammac utility ffi words agent perform decoy tasks utility larger agent told truth 
speaking constant sum game lemma reasonable agent utility goes agent utility go 
show 
agents agree mixed deal ffi gamma gamma agent perform decoy tasks actual utility ffi denote utility ffi gamma px gamma gamma hand agent perform decoy tasks 
utility ffi gamma gamma gamma py sum utilities 
utility ffi utility ffi gamma px gamma gamma gamma gamma gamma py gamma gamma py px gamma gamma gamma utility ffi utility ffi note consequence px gamma similarly consequence gamma py theorem concave tods subadditive tods definition subadditivity shown agent utility plus agent utility agent lies equal combined utility agent doesn lie 
shown agent utility agent lies greater equal agent utility agent doesn lie 
agent actual utility bigger utility 
lie beneficial agent proof theorem encounter agent concave tod pmm deals lie including combinations hidden phantom beneficial 
encounter agreement reached pmm common knowledge true information mixed deal ffi assume agent declares set tasks ft gamma set hidden tasks set decoy tasks 
agreement agents reach assume information true ffi consider negotiation agent declares set tasks ft gamma ffi agreement agents reach negotiation 
words apparent cost apparent total cost 
negotiation information true lead agreement mixed deal ffi satisfies utility ffi gammac utility ffi ft definition concavity conclude gamma gamma cost adds greater cost adds ft 
means subtle agent apparent utility goes concerned actual utility 
gamma gamma conclude utility ffi gammac gammac utility ffi words apparent utility agent utility hidden tasks 
consider situation agent declares ft theorem see utility ffi utility ffi final utility ffi utility ffi liar actual utility utility 
proof theorem fixed point encounter agent modular tod pmm pure deals decoy lie beneficial 
encounter 
ffi pure deal utility ffi utility ffi gamma gamma gamma modularity implies gamma intersection empty 
means utility ffi utility ffi gamma agents agree deal maximizes product utilities definition pmm section 
pure deals constant sum utility deals maximize product smallest difference agents utilities 
pure deal complementary pure deals maximize product 
case unique pure deal gives agents equal utility 
case complementary pure deals chosen arbitrarily probability 
agents expected utility 
assume agent lies creates decoy task apparent initial set tasks fdg decoy task fdg pure deal ffi apparent utility agent deal gamma actual utility agent gets ffi depends decoy task actual utility ffi gamma gamma fdg gamma fdg gamma fdg gamma fdg gamma actual utility ffi equal apparent utility ffi 
actual utility ffi gamma gamma fdg gamma gamma fdg actual utility ffi lower apparent utility fdg 
cases 
case fdg agent expected actual utility 
gotten actual utility declaring true set tasks 

agent expected actual utility gamma fdg 
gotten declaring true set tasks 
proof theorem encounter agent subadditive tod pmm deals agent knows cost greater cost generate default decoy lie may benefit harm 
theorem know agents agree deal gives equal utility 
negotiating deals means agree probability satisfies relationship gamma gamma gamma agree gammac agent declares superset extra decoy tasks agree satisfies gammac monotonicity agent chosen apparent utility gamma actual utility gamma won carry decoy tasks 
agent benefits lie 
definition equivalence inequality 
robert axelrod 
evolution cooperation 
basic books new york 
ken binmore 
fun games text game theory 
heath lexington massachusetts 
stephanie cammarata david mcarthur randall 
strategies cooperation distributed problem solving 
proceedings eighth international joint conference artificial intelligence pages karlsruhe west germany august 
clark radhakrishnan 
consensus planning protocol cooperating expert systems 
proceedings eleventh international workshop distributed artificial intelligence pages glen arbor michigan february 
philip cohen hector levesque 
intention choice commitment 
proceedings sixth national conference artificial intelligence pages seattle washington 
philip cohen hector levesque 
intention choice commitment 
artificial intelligence 
philip cohen hector levesque 
teamwork 
sri international menlo park california 
susan robert meyer victor lesser 
multistage negotiation distributed planning 
alan bond les gasser editors readings distributed artificial intelligence pages 
morgan kaufmann publishers san mateo 
daniel corkill 
hierarchical planning distributed environment 
proceedings sixth international joint conference artificial intelligence pages tokyo august 
daniel corkill 
framework organizational self design distributed problem solving networks 
phd thesis university massachusetts amherst ma december 
keith decker victor lesser 
generalizing partial global planning algorithm 
international journal intelligent cooperative information systems 
jon doyle 
rationality roles reasoning 
computational intelligence may 
edmund durfee 
coordination distributed problem solvers 
kluwer academic publishers boston 
edmund durfee victor lesser 
partial global plans coordinate distributed problem solvers 
proceedings tenth international joint conference artificial intelligence pages milan 
edmund durfee victor lesser daniel corkill 
cooperation communication distributed problem solving network 
michael huhns editor distributed artificial intelligence chapter pages 
morgan kaufmann publishers los altos california 
ephrati 
divide conquer multi agent planning 
proceedings national conference artificial intelligence pages august 
ephrati jeffrey rosenschein 
deriving consensus multi agent systems 
artificial intelligence 
appear 
ephrati jeffrey rosenschein 
clarke tax consensus mechanism automated agents 
proceedings ninth national conference artificial intelligence pages anaheim california july 
ephrati jeffrey rosenschein 
constrained intelligent action planning influence master agent 
proceedings tenth national conference artificial intelligence pages san jose california july 
ephrati jeffrey rosenschein 
planning please planning constrained master agent 
proceedings eleventh international workshop distributed artificial intelligence pages glen arbor michigan february 
ephrati jeffrey rosenschein 
reaching agreement partial revelation preferences 
proceedings tenth european conference artificial intelligence pages vienna austria august 
ephrati jeffrey rosenschein 
distributed consensus mechanisms heterogeneous agents 
international conference intelligent cooperative information systems pages rotterdam may 
ephrati jeffrey rosenschein 
multi agent planning dynamic search social consensus 
proceedings thirteenth international joint conference artificial intelligence pages august 
drew fudenberg jean tirole 
game theory 
mit press cambridge massachusetts 
les gasser 
social conceptions knowledge action dai foundations open systems semantics 
artificial intelligence 
les gasser 
social knowledge social action 
proceedings thirteenth international joint conference artificial intelligence pages chambery france august 
michael georgeff 
communication interaction multi agent planning 
proceedings national conference artificial intelligence pages washington august 
michael georgeff 
theory action multi agent planning 
proceedings national conference artificial intelligence pages austin texas august 
michael georgeff amy lansky 
reactive reasoning planning 
proceedings sixth national conference artificial intelligence pages washington july 
barbara grosz sarit kraus 
collaborative plans group activities 
proceedings thirteenth international joint conference artificial intelligence pages chambery france 
john 
approaches bargaining problem theory games critical discussion hick nash theories 
econometrica 
john 
rational behavior bargaining equilibrium games social situations 
cambridge university press cambridge 
kamel 
object oriented multiple agent planning system 
les gasser michael huhns editors distributed artificial intelligence volume ii pages 
pitman publishing morgan kaufmann publishers san mateo ca 
matthew katz jeffrey rosenschein 
verifying plans multiple agents 
journal experimental theoretical artificial intelligence 
david kinny magnus ljungberg anand rao elizabeth sonenberg gil tidhar eric werner 
planned team activity 
pre proceedings fourth european workshop modeling autonomous agents multi agent world rome italy july 
kurt konolige 
order formalization knowledge action multi agent planning system 
machine intelligence 
sarit kraus jonathan 
negotiations time multi agent environment preliminary report 
proceedings twelfth international joint conference artificial intelligence pages sydney august 
sarit kraus jonathan gilad zlotkin 
multiagent negotiation time constraints 
artificial intelligence june 
thomas frank von martial 
negotiation framework autonomous agents 
yves demazeau jean pierre muller editors decentralized proceedings second european workshop modelling autonomous agents multiagent world pages 
north holland amsterdam 
kuwabara victor lesser 
extended protocol multistage negotiation 
proceedings ninth workshop distributed artificial intelligence pages rosario washington september 
brigitte hassan victor lesser 
negotiation role cooperative distributed problem problem solving 
proceedings tenth international workshop distributed artificial intelligence bandera texas october 
chapter 
duncan luce howard raiffa 
games decisions 
john wiley sons new york 
thomas malone richard fikes kenneth michael howard 
enterprise market task scheduler distributed computing environments 
huberman editor ecology computation 
north holland publishing amsterdam 
frank von martial 
multiagent plan relationships 
proceedings ninth international workshop distributed artificial intelligence pages rosario washington september 
frank von martial 
coordination plans multiagent worlds advantage favor relation 
proceedings tenth international workshop distributed artificial intelligence bandera texas october 
frank von martial 
coordination negotiation connection dialogue states actions 
proceedings eleventh international workshop distributed artificial intelligence pages glen arbor michigan february 
david mcarthur randall stephanie cammarata 
framework distributed problem solving 
proceedings national conference artificial intelligence pages pittsburgh pennsylvania august 
morgenstern 
order theory planning knowledge action 
joseph halpern editor theoretical aspects reasoning knowledge pages 
morgan kaufmann los altos 
morgenstern 
formal theory multiple agent nonmonotonic reasoning 
proceedings eighth national conference artificial intelligence pages boston massachusetts july 
yoram moses moshe tennenholtz 
artificial social systems part basic principles 
technical report cs weizmann institute 
yoram moses moshe tennenholtz 
computational aspects artificial social systems 
proceedings eleventh international workshop distributed artificial intelligence pages glen arbor michigan february 
john nash 
bargaining problem 
econometrica 
edwin pednault 
formulating multiagent dynamic world problems classical planning framework 
michael georgeff amy lansky editors reasoning actions plans proceedings workshop pages 
morgan kaufmann san mateo california 
martha pollack marc ringuette 
introducing tileworld experimentally evaluating agent architectures 
proceedings eighth national conference artificial intelligence pages boston massachusetts august 
randall pope susan robert mayer 
distributing planning process dynamic environment 
proceedings eleventh international workshop distributed artificial intelligence pages glen arbor michigan february 
anand rao michael georgeff elizabeth sonenberg 
social plans preliminary report 
pre proceedings third european workshop modeling autonomous agents multi agent worlds germany august 
jeffrey rosenschein 
synchronization multi agent plans 
proceedings national conference artificial intelligence pages pittsburgh pennsylvania august 
jeffrey rosenschein 
rational interaction cooperation intelligent agents 
phd thesis stanford university 
jeffrey rosenschein 
agents negotiation mechanisms multi agent systems 
proceedings thirteenth international joint conference artificial intelligence pages chambery france august 
jeffrey rosenschein michael genesereth 
deals rational agents 
proceedings ninth international joint conference artificial intelligence pages los angeles california august 
jeffrey rosenschein gilad zlotkin 
rules encounter designing conventions automated negotiation computers 
mit press cambridge massachusetts 
alvin roth 
axiomatic models bargaining 
springer verlag berlin 
yoav shoham moshe tennenholtz 
emergent conventions multi agent systems initial experimental results observations preliminary report 
principles knowledge representation reasoning proceedings third international conference cambridge massachusetts october 
yoav shoham moshe tennenholtz 
synthesis useful social laws artificial agent societies preliminary report 
proceedings national conference artificial intelligence san jose california july 
reid smith 
framework problem solving distributed processing environment 
phd thesis stanford university 
reid smith 
contract net protocol high level communication control distributed problem solver 
ieee transactions computers december 
cammarata hayes roth 
distributed intelligence air fleet control 
technical report wd arpa rand december 
christopher stuart 
implementation multi agent plan synchronizer 
proceedings ninth international joint conference artificial intelligence pages los angeles california 
katia sycara 
resolving goal conflicts negotiation 
proceedings seventh national conference artificial intelligence pages st paul minnesota august 
katia sycara 
argumentation planning agents plans 
proceedings eleventh international joint conference artificial intelligence pages detroit august 
michael wellman 
general equilibrium approach distributed transportation planning 
proceedings tenth national conference artificial intelligence san jose california july 
michael wellman 
market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 
frederik 
problems monopoly economic 
routledge sons london 
gilad zlotkin jeffrey rosenschein 
compromise negotiation exploiting worth functions states 
artificial intelligence 
appear 
gilad zlotkin jeffrey rosenschein 
mechanisms automated negotiation state oriented domains 
journal artificial intelligence research 
appear 
gilad zlotkin jeffrey rosenschein 
negotiation task sharing autonomous agents cooperative domains 
proceedings eleventh international joint conference artificial intelligence pages detroit michigan august 
gilad zlotkin jeffrey rosenschein 
negotiation conflict resolution noncooperative domains 
proceedings eighth national conference artificial intelligence pages boston massachusetts july 
gilad zlotkin jeffrey rosenschein 
cooperation conflict resolution negotiation autonomous agents noncooperative domains 
ieee transactions systems man cybernetics december 
gilad zlotkin jeffrey rosenschein 
incomplete information deception multi agent negotiation 
proceedings twelfth international joint conference artificial intelligence pages sydney australia august 
gilad zlotkin jeffrey rosenschein 
negotiation goal relaxation 
yves demazeau jean pierre muller editors decentralized proceedings second european workshop modelling autonomous agents multi agent world pages 
north holland amsterdam 
gilad zlotkin jeffrey rosenschein 
compromise negotiation exploiting worth functions states 
technical report leibniz center computer science hebrew university january 
gilad zlotkin jeffrey rosenschein 
domain theory task oriented negotiation 
proceedings thirteenth international joint conference artificial intelligence pages chambery france august 
gilad zlotkin jeffrey rosenschein 
extent cooperation state oriented domains negotiation tidy agents 
computers artificial intelligence 
gilad zlotkin jeffrey rosenschein 
negotiation incomplete information worth strict versus tolerant mechanisms 
proceedings international conference intelligent cooperative information systems pages rotterdam netherlands may 
distribution point non subadditive encounter delivery domain post office non concave encounter domain initial state non concave encounter black white hole domain delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta modular graph topologies subadditive concave modular hid 
phan 
dec hid 
phan 
dec hid 
phan 
dec pure mixed dimensional table incentive compatibility post office post office example fixed point post office example fixed point star topologies delivery 
