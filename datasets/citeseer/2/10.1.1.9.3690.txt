efficient delivery web services mourad ouzzani dissertation submitted faculty virginia polytechnic institute state university partial fulfillment requirements degree doctor philosophy computer science applications dr bouguettaya chair dr reza dr ing ray chen dr edward fox dr ramakrishnan january falls church virginia keywords web services web databases query optimization semantic web copyright mourad ouzzani efficient delivery web services mourad ouzzani dissertation addresses issues efficient access web databases services 
propose distributed ontology meaningful organization efficient access web databases 
dedicate presenting comprehensive query infrastructure emerging concept web services 
core query infrastructure enable efficient delivery web services concept quality web service 
treating web services class objects fundamental step achieving envisioned semantic web 
semantics aware processing information requires intensive web services 
research propose new query model queries resolved combining web service invocations 
efficiently deploy scheme propose optimization strategy aggregating quality web service qows different web services 
qows adjusted dynamic rating scheme multilevel matching 
web service rating provides assessment behavior 
multilevel matching allows larger solution space enabling similar partial answers 
received support nsf eia usenix scholarship 
iii acknowledgments advisor committee chair professor bouguettaya continuous support 
pushing pursue excellence 
patience years working possible finish phd write dissertation 
professors edward fox ing ray chen reza ramakrishnan helpful comments serving committee 
am indebted lifelong friend medjahed support advice 
keen help difficult moments 
constantly available help discuss 
wish success phd 
am thankful lab students especially zaki malik help keeping lab enjoyable 
keep memories time spent lab discussing various research topics concerns life 
parents el guidance encouragement 
love key academic pursuits 
special go wife um unlimited support period 
instrumental helping staying focused balanced 
continuous encouragement finished 
wish daughters brightness 
hope spending time phd 
iv contents list figures list tables xii web databases querying 
web services querying 
characteristics service web 
research issues 
solutions 
web services digital government scenario 
organization dissertation 
related web database web services 
web databases integration efficient querying 
pre web data integration 
mediator approaches 
research issues 
dimensions query optimization web 
cost optimization 
quality optimization techniques 
adaptive query optimization 
optimizing queries sources limited capabilities commercial data integration systems 
discussions 
information routing 
web services querying optimization 
active xml 
quality optimization self serv 
request language web services 
quality web services 
service composition 
optimization web databases web services 
ontological organization web databases information space organization modeling 
vi domain models 
inter ontology relationships 
information sources modeling 
metadata support databases 
language support 
user education information discovery 
ontology interaction negotiation 
webfindit ontology architecture web databases system architecture 
hardware software environment 
web services query model level query model 
mapping relations virtual operations 
virtual operations representation 
queries specification 
multi level matching virtual operations 
level model reconfiguration 
quality web service aware optimization quality web service model 
quality web service parameters 
vii discount relationships 
web services monitoring 
monitoring process 
ratings 
fine tuning monitoring 
service execution plan 
operation dependencies 
feasibility service execution plan 
quality web service service execution plans 
processing optimizing web service queries 
cost model 
optimization strategies 
exhaustive algorithm 
selecting optimal plan presence binding requirements selecting optimal plan presence discount relationships selecting optimal plan presence post conditions implementation experiments webdg web service infrastructure digital government organizing web services webdg 
webdg implementation 
viii implementation query infrastructure webdg 
complexity proposed algorithms 
analytical evaluation 
bi selection algorithm 
iterative algorithm 
simulated annealing algorithm 
experiments 
conduct experiments 
experimental results 
bibliography publications vita ix list figures web evolution 
summarized view dissertation 
typical scenario senior citizens services 
competing providers transportation service 
consumer context changes 
combined different providers 
classification query optimization techniques 
distributed ontologies healthcare domain 
outline typical database schema 
webfindit layers 
detailed implementation 
level query scheme senior citizens scenario 
individual selection web services 
combined selection web services 
best combination discount relationships senior citizen 
best combination discount relationships self sufficiency worker quality web service categories 
query transformations 
dependency graphs 
query optimization outline 
webdg architecture 
bi selection algorithm time processing 
iterative algorithm form time processing 
iterative algorithm form time processing 
simulated annealing algorithm time processing 
experimental model 
bi selection algorithm 
iterative algorithm form 
simulated annealing algorithm 
processing time comparison 
aggregated costs comparison 
xi list tables summary web data integration systems features 
sample virtual operations senior citizens scenario 
quality web service summary 
quality web service monitoring 
quality web service service execution plan 
qows service execution plan 
experimental parameters 
mapping publications dissertation 
xii chapter data integration received considerable attention due relevance variety data management applications information systems 
large body database research devoted issues related building data integration tures 
earlier research dealt distributed database systems multidatabase systems mediators 
cases focus enabling data sharing small number databases 
advent web elicited con wealth information sources services hitherto inaccessible 
simple interface instant success helped tremendously wide deployment 
early web provided users access text pages hypertext links 
widespread web issue data sharing heterogeneous autonomous databases 
connectivity longer issue attention turned providing web enabled infrastructure sustain data sharing web databases 
paved way new research opportunities provide uniform integrated access web resources 
potential added value enabled emergence various new web mourad ouzzani chapter 
applications 
respect research projects initiated database community 
ultimate goal leverage techniques developed database arena web 
web evolved exponential growth resulted higher expectations went largely unfulfilled 
powerful search engines data integration systems developed sift massive amount information increasing amount accessible information quality information search arduous task 
main impediment adding semantics web information automatically processed 
envisioned semantic web paradigm shift fulfill goal 
simple terms semantic web extension current web information defined meaning better enabling computers people cooperation 
key player enabling semantic web emerging concept web services 
web service set related functionalities programmatically accessed manipulated web 
interacting web resources including databases information sources new direction emergence web services 
dissertation addresses issues efficient access web databases web services 
focus providing distributed ontology meaningful orga efficient access web databases 
dedicate presenting comprehensive query infrastructure emerging concept web services 
core query infrastructure concerns efficient delivery web services concept quality web service 
mourad ouzzani chapter 
web evolution web databases querying today dbms technology faces challenge researchers attempt ex immense amount heterogeneous fast evolving data available web 
large number web databases greatly complicates autonomy ity issues 
requires better models tools describing data semantics specifying metadata 
techniques automatic data metadata extraction classification ontologies example crucial building tomorrow semantic web 
query languages query processing optimization techniques need extended exploit semantic information 
users need adaptive systems help explore web discover interesting data sources support dif ferent query search paradigms 
data dissemination techniques notification services developed enable effective data delivery services 
web centric applications commerce digital government applications pose stringent mourad ouzzani chapter 
organizational security performance requirements far exceed possible traditional database techniques 
frequently encountered issues web databases users efficiently query large highly intricate amounts available heterogeneous information sources 
major difficulty optimizing queries web query submitted specific information source control execution longer possible 
compounding problem information source may exhibit different behavior initially assumed impairing predictions 
result traditional optimization techniques rely heavily statistical information may hardly applicable 
query optimization web may span larger spectrum criteria classical cost models 
example information quality criterion reliability availability fees 
furthermore web volatility highly dynamic nature challenge expectation queries return results 
information sources expected provide query capabilities 
query processor needs sure generated query execution plan feasible respect limitations 
respect investigating research issues enabling efficient uniform querying web databases 
main focus designing mean organization segmentation large information space 
research resulted ontology organization web databases distributed ogy web databases 
organization web databases filter interaction accelerate searches large space web databases 
scalability achieved incremental formation discovery inter relationships web databases 
information space organized information type groups 
group forms ontology represent domain interest related web databases 
ontologies dynamically clump databases mourad ouzzani chapter 
common areas interest single atomic unit 
ontologies related inter ontology relationships 
individual web databases join leave formed ontologies discretion 
proposed ontological organization implemented webfindit healthcare scenario extended webdg 
webfindit system describing locating accessing web databases 
offers web centric infrastructure elicit interoperation web databases 
webdg enables citizens get timely services local state federal governments 
webdg investigate design implementation middleware organizing accessing managing government databases services social services 
web services querying web services gaining momentum start widely diverse activ ities web 
emerging wave innovation web revolution 
organizations spectra rushing provide modular ap plications programmatically accessed web 
expected foundational infrastructure different forms dynamic semantic aware interactions web 
examples applications web services include commerce forms digital government wireless applications grid computing 
web evolving passive medium publishing data active platform conducting business 
web services de facto means deliver kind functionalities web direct consumption programs 
line fully automated semantic web intelligent agents interact behalf owners 
unprecedented proliferation mourad ouzzani chapter 
web services sustained intense activity aimed standardizing differ ent aspects web services wsdl description soap message exchange bpel ws web services orchestration 
take fundamental research fully exploit connectivity provided web vast amount government business applications developed past decades 
leveraging web facilitator efficient delivery web services paramount significance large array 
governments able better serve citizens streamlining combining web accessible resources 
businesses able dynamically outsource core functionalities provide economies scale 
ability efficiently access share web services critical step full deployment new line economic political social era 
enabling service web requires development techniques address various challenging issues 
required techniques include services description discovery querying compo sition monitoring security privacy 
calls comprehensive mid framework managing autonomous heterogeneous web services 
process conducted dynamically transparently 
project currently investigation virginia tech concerns architectural components web service management system 
aim provide web services dbmss provided data 
users longer need think terms data services 
web services treated class objects manipulated pieces data 
main focus dissertation propose comprehensive query infrastructure efficient de web services 
proposed query infrastructure constitute central component highly anticipated 
web services may tied specific data sources generic operate wide range data sources 
may part legacy systems newly mourad ouzzani chapter 
developed systems databases services 
fact large portion information hiding web services 
web services consists generally invoking operations sending receiving messages 
complex applications accessing diverse web services travel package need integrated efficient way manipulate deliver web services functionalities 
address challenge propose novel query infrastructure offers complex query facilities web services 
nutshell users submit declarative queries resolved combined invocations different web service operations 
queries target web services information flow exchanged invocation operations 
proposed query model allow efficient integration diverse web services 
step enabling queries define query model facilitates formulation submission queries transformation actual web service operations 
propose level query model users formulate queries relations defined top level 
queries processed levels obtaining service execution plan web services operations invoked results combined 
proposed query infrastructure fundamental assumptions web services autonomous highly volatile priori unknown number large 
autonomy means web services independent particular behavior mandated 
web services highly volatile subject fre quent fluctuations lifetime unavailability changes quality performance 
importantly large numbers web services expected compete offering similar functionalities different conditions 
major challenge devise best combination web services respect expected quality 
propose optimization model quality web service qows capture users requirements efficiency 
concept qual mourad ouzzani chapter 
ity web service qows considered key feature distinguishing competing web services 
qows encompasses different quality parameters characterizes behavior web service delivering functionalities 
examples parameters include availability latency fees 
fluctuations may occur web service lifetime 
promised qows may fulfilled 
general small differences delivered advertised values may acceptable users 
large differences may seen performance degradation web service delivering func 
reason propose monitor qows invoked web services 
monitoring essentially measure fluctuations qows parameters give assessment rating web service 
user request may able find web service offers exact match 
approach proposes different levels matching allowing broader range choices ity solving query 
involves ontologies express semantics requests web service offerings 
characteristics service web outline major characteristics web service environment building proposed query infrastructure challenging task 
large service space web services proliferating fast pace ubiquitous kinds human activities 
locating web services interest arduous task 
sifting large service space may feasible appropriate organization web services 
autonomy dynamism web services dynamic independent en 
query infrastructure mandate particular behavior mourad ouzzani chapter 
web services achieve goal 
cooperation web services opti mization purposes may assumed 
addition adaptation changes may necessary building executing service execution plan 
web services competition different categories service providers com pete offering similar functionalities 
differ terms quality web service qows deliver functionalities 
need provide necessary mechanisms select best web services combinations web services 
research issues efficiently querying web databases web services requires tackle chal research issues 
outline issues ad dressed dissertation 
web databases space organization due sheer size databases space necessary define adequate organization foster effi ciency solving queries 
organization filter interactions allow exploit service space tractable manner 
seen lightweight schema data space 
organization easily deployable support inherent dynamism web 
web service query model users able express needs service information simple queries 
need devise query model web services treated class objects 
model define settings queries formulated submitted resolved 
resolution process lead invocation actual web services 
mourad ouzzani chapter 
optimization model performance prime importance successfully deploying query infrastructure web services 
need define op timization model capture efficiency requirements web services centric environment 
parameters conditions relevant defining optimal execution plans queries devised 
guide con ception efficient techniques achieve optimization 
literature shows quality web service qows individual web services crucial competitiveness 
addition increasing need provide acceptable quality web service qows web applications 
concept qows capture accurately users applications requirements efficiency query optimization 
web service monitoring web services highly volatile independent en users control 
may exhibit fluctuations may available description 
especially true qows 
points need monitor behavior terms delivering promised qows 
important asset optimization model making decisions specific web services 
solutions major focus dissertation supporting efficient querying delivery web services semantic web 
worked web databases querying early stage dissertation 
achieve goals looked different issues contributions 
contributions constitute underlying infrastructure comprehensive query infrastructure web services 
examples context digital government solutions generic applied various domains including commerce mourad ouzzani chapter 
summarized view dissertation forms summarize major contributions research 
ontological organization web databases web services pro pose distributed ontology organization web databases 
organization facilitates location querying web databases 
web databases organized segmented simple ontologies describe coherent slices information space 
main premise web databases built serve specific purposes 
distributed ontologies web databases established simple domain ontology 
inter ontology relationships dynamically established ontologies 
viewed simplified mourad ouzzani chapter 
way share information low overhead 
addition intra ontology rela tionships web databases considered 
allows flexible precise querying ontology 
relationships form hierarchy classes information type classification hierarchy inside ontology 
level query model web services propose query model adapted web services 
users applications formulate declarative queries translated invocations different web services operations 
specific users needs may possible find exact web service fulfill need 
addition users may willing accept similar close answers requests 
trying find exact match query propose flexible matching scheme details selected web services differ specified request 
quality web service model literature shows qows individual web services crucial competitiveness 
ad dition increasing need provide acceptable qows web ap plications 
concept qows capture accurately users applications requirements efficiency query optimization 
challenge define appropriate metrics characterize qows devise tech niques measure qos 
comprehensive characterization non functional properties web services proposed ob 
results model quality web services classified web service behavior characterize 
quality web service monitoring scheme qows may subject fluctuations web service lifetime 
large differences may seen performance degradation web service delivering functionalities 
propose monitor qows invoked web services 
monitoring mourad ouzzani chapter 
essentially measure fluctuations qows parameters rate web services accordingly 
ratings optimization adjust values qows parameters 
efficient techniques querying web services propose different techniques efficiently query web services quality web ser vice model defined 
web services may compete offering similar functionalities 
query solved accessing different web services need take account quality web service eventual business partnerships may exist 
business partner ships generally imply privileges may enhance quality service execution plan discounts 
web services digital government sce illustrate need comprehensive query infrastructure web services consider case social services virginia department aging department aging operates mainly area agencies aging aaa located different counties cities state 
point contact senior citizens seeking support social benefits 
scenario starts illustrating different aaas currently functioning highlight challenges facing self sufficiency workers senior citizens alike 
outline approach efficient delivery web services help achieve maximum efficiency aaas best services senior citizens 
part ongoing project virginia tech virginia department aging state virginia 
mourad ouzzani chapter 
typical scenario senior citizens services assume maria indigent senior citizen receive services department aging 
visit local aaa mountain county interview 
peter self sufficiency worker conduct interview asking list documents information maria 
expertise different means manuals online databases peter evaluates maria needs 
finds maria potentially qualified benefits sub contracted outside organizations non profit organizations businesses government agencies transportation elderly handicapped meals provider meals delivery senior mourad ouzzani chapter 
activity center residential repair nursing home senior nutrition program insurance counseling legal aid 
competing providers transportation service eligibility check peter select appropriate provider service 
potential providers may candidates 
needs contact selected providers individually check meet aaa requirements budget able serve maria needs 
communication providers takes place various media including mail email fax phone 
choice provider peter expertise information gathered different means web sites 
may easy task self sufficiency worker 
example transportation service may mourad ouzzani chapter 
provided different transportation companies county shuttle county service provides free rides senior citizens eligible persons limited coverage vans shuttle private shuttle charges monthly fee offers flat fee taxi cab specialized transportation handicapped 
providers offer transportation services conditions price quality services offered may differ 
instance vans shuttle may expensive may provide level service handicapped persons specialized 
consumer context changes difficult process looking best providers maria situation changes 
example assume maria gets involved car ac wheelchair confined 
case self sufficiency worker adapt different services maria new situation 
means instance provider transportation service may need changed 
mourad ouzzani chapter 
case selected vans shuttle 
addition peter finds maria may eligible new services independent living service maximize integration disabled citizens community leadership independence productivity rehabilitation program therapy program physical emotional rehabilitation disabled citizens 
peter need select best providers contact individually check effectively meet aaa requirements maria needs 
major change occurs maria decides move county valley county 
needs visit local aaa 
self sufficiency worker valley aaa isabel re initiate process scratch 
caring needs maria may require types services meals provider meals delivery senior nutrition program 
case individual providers type selected way optimizes combination 
instance choice meal home meals provider may reduce costs combined meals meals delivery provider 
providers business partnership provide discounts common customers 
summary particular service maria qualified tain valley counties potential providers may exist 
may offer similar services conditions price quality services offered may differ 
manually looking appropriate providers indi combination error prone process may lead sub optimal outcomes agency senior citizens 
especially critical aaas generally tight funding 
addition maria situation changes necessary modify existing services add new ones 
furthermore provider quality changes time new providers available unavailable aaa may decide change maria providers cost purposes 
mourad ouzzani chapter 
combined different providers discussion scenario governments outsource functions private sector busi non profit institutions achieve maximum cost efficiency 
framework automatically dynamically deliver best web services lacking 
especially needed providers compete burgeoning market 
propose build system continuously searches best services point time 
providers channel offerings web services 
web services deemed choice excellence government agencies businesses conduct forms interactions web 
essence need system allow tap easily uniformly continuously growing web services space treating web services class objects 
central issue select best web services combine optimal way 
especially entails efficient querying web services 
self sufficiency worker senior citizen express needs mourad ouzzani chapter 
simple powerful declarative queries defined interface 
ultimate goal develop generic approach optimally querying web services 
organization dissertation remainder dissertation organized follows 
chapter extensive survey query processing optimization web database integration systems 
overview information routing research 
research enabling querying supporting optimization web services closely related research 
chapter propose distributed ontology organization web databases 
distributed ontology caters meaningful organization efficient access web databases 
approach database database attached 
database meta information repository xml enabled database stores information associated database ontologies inter ontology relationships database 
proposed distributed ontology fully implemented webfindit 
salient features webfindit system deployment large number database systems 
chapter propose novel query model web services 
main idea model abstraction service space levels query virtual concrete 
represent sort schema service space 
propose multi mode matching process allow close partial answers 
chapter propose holistic approach problem query optimiza tion web services 
consider non functional properties selecting combining web services 
quality web service parameters 
propose monitoring technique assess behavior web services delivering func mourad ouzzani chapter 
promised qows 
algorithms optimizing web service queries qows 
chapter describe implementation approach efficiently query ing web services webdg system 
analytical study dif ferent algorithms chapter 
conduct extensive experiments algorithms asses performance compare results 
chapter conclude dissertation promising research 
chapter related web database web services chapter survey query processing optimization web database inte systems web services 
major difficulty optimizing queries web query submitted specific information source control execution longer possible 
compounding problem information sources may exhibit different behavior initially assumed impairing predictions 
result traditional optimization techniques rely heavily statistical information may hardly applicable 
query opti mization web may span larger spectrum criteria classical cost model 
example information quality criterion reliability availability sources fees furthermore web volatility highly dynamic nature challenge expectation queries return results 
information sources expected provide query capabilities 
query processor needs sure generated query execution plan feasible respect limitations 
mourad ouzzani chapter 
related classification different techniques com framework evaluate 
described systems adopt mediator approach data integration 
systems match formation requests consumers individual users applications information providers 
chapter classifies different systems focus query optimization approaches 
overview cost optimization techniques adaptive query optimization quality optimization query optimization presence sources limited capabilities 
general cost optimization techniques extend classical cost model various means estima tion caching adaptive schemes addresses efficiency presence unpredictable events 
quality optimization takes different direction regarding mat ters terms optimization web 
group techniques focuses optimizing queries making sure execution possible 
highlighted chapter providing efficient access nected databases information sources received sustained interest 
sev eral approaches techniques proposed deal various issues 
issues particularly challenging due characteristics web including amounts web data large heterogeneity spectrum strict autonomy volatility 
section shed light major paradigm shift place web concepts semantic web web services 
believe paradigm shift important impact issue data inte subsequently query processing optimization web 
classical data integration relevant specific domains providing query facilities web services covers broader scope 
web geared important paradigm shift concept semantic web 
basically means transition documents human consumption documents machine processable semantics 
allowing machine mourad ouzzani chapter 
related processable content mainly new paradigm shift web services 
web service piece software defined described discovered xml artifacts www org ws 
enabling efficient access plethora services emerging research challenge tomorrow semantic web 
interacting web resources databases xml data stores new direction emergence web services 
web services gaining momentum starting widely diverse activities web 
web services offer new perspectives addressing issues related querying web 
opens door broader view information integration web 
important direction build query infrastructure web ser vices treated class objects 
users applications submit queries resolved combining invocations web service operations 
surge research web services due reasons attractive alternative data centric approaches 
ongoing standardization efforts describe publish search invoke web services instrumental emergence 
second web services ubiquitous access web resources including web databases mainly achieved web services 
web services ideal candidate enabling querying web 
web evolving passive medium publishing data active plat form conducting business 
result need build infrastructure organize efficiently query web services treated class objects 
remainder chapter organized follows 
section summarizes early query optimization pre web era 
briefly outlines basic query optimization principles 
section introduces data integration web thorough presentation research issues query optimization context 
mourad ouzzani chapter 
related section describes different systems techniques query optimization web data integration systems 
covered parts focus 
section provides summary discussion different data centric approaches 
move section discuss research web services overlapping proposed query infrastructure 
web databases integration efficient querying advent web brought fore seamless interconnection di verse large numbers information sources 
allowing uniform querying sources major goal research efforts 
proposed systems techniques focused making uniform querying feasible despite types hurdles heterogeneity autonomy unpredictability web 
achieving full potential uniformly querying disparate web information sources fundamentally dependent devising adequate query optimization techniques 
different approaches web data integration 
widely approach concept mediator initially introduced 
systems techniques chapter fall category 
approaches agents ontology information retrieval techniques 
section starts historical note pre web data integration efforts 
gives details mediator approach 
highlights major research issues related query optimization data integration web 
mourad ouzzani chapter 
related pre web data integration briefly outline section major conducted database integration query optimization pre web era 
summarize basic concepts query optimization 
overview main data integration approaches query optimization addressed 
declarative query sql execution plans produce results 
different plans answer query equivalent terms final output 
may differ dif ferent performance parameters response time resource 
researchers recognized importance designing module select best query execution plan 
optimization received particular attention database arena techniques proposed 
role optimizer determine query execution plan minimizes objective cost function 
optimization problem described abstractly follows query execution space computes cost function defined find execution eq subset computes minimum cost mine eq 
optimizer characterized dimensions execution space captures underlying execution model defines alternative executions 
ii cost model predict cost execution iii search strategy enumerates execution plans select best 
traditional query optimization strategies classified main categories heuristic heuristic rules re arrange different operations query execution plan 
example minimize size intermediate results 
cost cost different strategies estimated best mourad ouzzani chapter 
related selected order minimize objective cost function 
example number os 
hybrid heuristic rules cost estimates combined 
cases focus join operation costly operation 
data integration approaches information systems provide interoperation varying degrees integration multiple databases termed multidatabase systems federated databases generally heterogeneous distributed database systems hd dbs 
data integration generally implies uniform transparent access data managed multiple databases 
mechanism achieve goal integrated schema involves parts component schemas 
tax classifies existing solutions categories global schema integration federated databases multidatabase language approach 
categories tightly integrated component systems 
global schema integration attempts data sharing hd dbs 
complete integration multiple databases provide single view global schema 
exhaustive survey schema integration pro vided comparison methodologies 
federated databases certain amount autonomy individual database systems maintained 
formation sharing occurs import export schemas 
particular database exports part schema depending database exporting 
importing database perform needed integration locally 
databases registered federal dictionary 
multidatabase language approach intended users prede mourad ouzzani chapter 
related fined global partial schema 
preexisting heterogeneous local databases usually integrated modifications 
information stored different databases may redundant heterogeneous inconsistent 
aim multidatabase language provide constructs perform queries involving databases time 
major criticism approach lack distribution location transparency users priori find right information potentially large network databases 
users responsible understanding schemas detecting resolving semantic conflicts 
approach users faced issues consist finding relevant information multiple databases standing individual database schema detecting resolving semantic conflicts performing view integration 
query optimization query optimization received particular attention heterogeneous distributed databases systems 
noted early lack statistical information participating databases prevented direct application techniques developed homogeneous systems 
different techniques proposed overcome lack statistical information 
example pegasus uses cost model logical parameters include database cardinality selectivity 
parameters obtained calibrating queries 
calculated number heuristics optimize queries 
cords sampling probing applied local databases estimate costs gathering statistical information 
special queries executed top participating databases behavior results recorded 
process repeated frequently needed 
query processing global level conducted gathered information classical cost model 
example mind 
uses dynamic optimization strategy 
statistical scheme runtime determine select mourad ouzzani chapter 
related costly selective inter site operation currently available partial results 
inter site operation assigned weight includes cost selectivity transfer cost 
operations scheduled weights exceed threshold value computed time partial result available 
mediator approaches mediators provide integrated view mediated schema multiple heterogeneous autonomous information sources 
schema represents generally synthesized view specific application domain 
users access integrated view uniform interface offers location model interface transparency 
general source connected wrapper enables participation system 
translates source local language model concepts mediator level 
resolve query mediator typically performs main tasks database selection locate select databases relevant query 
query translation decompose query sub queries respect previously selected databases 
sub query transformed form executable corresponding database 
sub query sent database wrapper results retrieved 
result merging combine different results global answer user 
important characterization mediator systems relates nature relationship mediated schema schemas participating databases 
mourad ouzzani chapter 
related main approaches adopted source centric local view approach relations stored information sources described terms global schema 
query centric global view approach global schema defined terms relations stored local information sources 
source centric approach scales better query centric modifications information sources affect rest system 
hand translating global queries local ones easier query centric approach 
research issues query optimization received particular attention different types database systems central distributed multidatabase 
ultimate goal database system allow efficient querying 
unsurprisingly data integration systems web escape objective 
query optimization central deployment data integration systems overs web 
deemed challenging due nature web large heterogeneity spectrum strict autonomy large user base dynamic behavior queries web information sources may answered various ways 
alternative outputs usually results 
alternatives may differ widely terms efficiency 
may relate response time network resources number information sources involved quality information accessed quality returned results users satisfaction 
consequently query optimization techniques web need carefully crafted 
devising right techniques necessitate address large spectrum issues 
outline issues directly related query optimization data integration systems web 
mourad ouzzani chapter 
related optimization paradigm optimizing queries amounts usually minimizing response time 
objective function driving optimizers 
desirable web applications may require different parameters objective function 
include fees access informations sources quality data freshness number sources access devising optimizer requires set adequate objective function relevant web applications 
optimizing large number heterogeneous autonomous infor mation sources data integration faces far incongruent environment pre web era 
heterogeneity happen different levels data integration system 
time resources required bridge heterogeneity may important impact optimization process 
autonomy serious impact optimization techniques require specific information information sources 
information easily available 
furthermore sub query submitted specific information source optimizer data integration system control 
web witnessing exponential growth terms information sources potential users 
query optimization take account scalability issues avoid performance degradation 
degradation lead inefficient query execution plans 
evolving dynamic environment major characteristic web lies high dynamism volatility 
infor mation sources availability behavior change warning 
addition mourad ouzzani chapter 
related unpredictable events happen anytime query processing execution 
query optimizer need adaptive mechanisms avoid missing optimal query execution occurrence event 
adaptive techniques gather optimization information fly modify execution plan 
dealing limited query capabilities web information sources generally exhibit capabilities terms queries handle 
limitations due reasons including performance security 
may range fully featured database systems allowing full access content information sources restricted access forms 
query optimizer generate efficient query execution plans effectively executable respect constraint imposed accessed sources 
may especially mean optimal plans skipped feasible 
locating sources interest queries generally specify specific information sources need ac cessed 
cases finding sources straightforward process query unfolding global view mediators 
challenging 
precisely query optimizer able limit access rel sources avoid wasting resources sources superior qualities alternative sources compete offering information 
addressing issue dependent meta information available information sources 
relates issue source description advertisement 
mourad ouzzani chapter 
related dimensions query optimization web surveying research conducted query optimization web data integration sys tems noticed lack comparison different approaches 
situation due lack analytical model compare techniques 
classical systems established models benchmark tools devel oped purpose 
propose dimensions query optimization web data integration systems compared 
dimensions subjective may precisely quantified 
scalability dimension measures degradation query optimization technique number information sources grows 
growth terms information sources users 
dimension may difficult measure real setting 
fine tuning may necessary 
autonomy preservation relates information required information source deploying optimization technique 
optimization performance dimension provide performance eval uation objective function different scenarios 
scenarios may varied types queries submitted number types sources accessed parameters 
analytical experi mental studies need conducted 
note approaches done studies 
adaptiveness reflects ability optimization technique take account unexpected changes 
capabilities dimension checking optimization technique takes account sources different limited query capabilities 
need check technique optimal plans 
mourad ouzzani chapter 
related cost optimization web data integration systems query optimization ex tending classical cost model 
major challenge approach relates optimization information autonomous information sources 
approaches sume statistics available estimated provided wrappers 
disco disco mediator system global view approach 
mediator generates multiple access plans involving local operations information sources global operations mediator level 
data model odmg standard 
object definition language extended allow multiple extents associated interface type mediator 
provides type mapping information mediator data source 
disco uses cost optimization approach 
combines generic cost model specific cost information exported wrappers 
generic cost model uses cost formulas established calibrating approach developed iro db federated system 
data source interface specified subset corba idl extended cardinality section data source statistics cost formula section specific formulas 
wrapper writer exports statistics cardinality collection size rules reflect change result sizes due operation cost computation rules compute cost estimates 
query optimized estimating cost single operations entire plans 
mediator selects specific information available wrappers generic cost model 
cost execution query plan determined step bottom algorithm cost formula integration cost estimation 
step wrapper rules integrated mediator cost model 
second step cost estimates plan mourad ouzzani chapter 
related generated 
plan represented tree operator nodes 
traversed root leaves leaves root 
traversal cost formulas associated nodes 
second traversal cost operator computed 
garlic garlic provides integrated view heterogeneous information sources global view approach 
query processing dynamically deter mining middleware wrapper roles answering query 
wrapper provides tasks including modeling information sources garlic objects allow ing garlic retrieve object allowing garlic invoke methods objects retrieve attributes participating query processing execu tion 
garlic objects interface abstractly describes object behavior corresponding implementation provides concrete realization 
query translated tree operators pops plan operators 
operator corre sponds runtime operator join sort fetch scan 
garlic provides generic pop called pushdown pop encapsulates conducted information source 
plan characterized properties tables plan output columns estimated cost 
garlic extends traditional cost optimization approach involving wrappers important components optimization process 
wrappers operate estimation total cost query plan 
proposed framework aims provide necessary means extend traditional cost optimization heterogeneous environment 
framework includes cost model cost formulas statistics 
wrappers may default cost model spe cific model execution strategies 
default cost model considers total cost pop operator combination cost basic tasks reset mourad ouzzani chapter 
related initializing operator advance retrieving result 
default cost formulas compute costs statistics 
cost reset advance tasks wrapper able provide cost estimates plans included global query plan 
total cost re execution cost result cardinality considered cost pushdown pop 
required estimate cost global query plan 
optimizer selects winning plan plan translated executable form 
garlic pops translated operators directly executed garlic execution engine 
ariadne ariadne integration system uses local view mediation approach 
loom knowledge representation system construct domain model represents integrated view sources 
user queries formulated model 
query processing phases preprocessing phase query planning phase 
source selection algorithm pre processes domain model allowing selection sources classes attributes 
query planning combination source selection strategy traditional distributed query opti mization 
generates initial plan eventually suboptimal applies rewriting rules order improve quality plan 
rewriting rules iteratively applied acceptable solution resource limit reached 
quality query plan classical cost model depending size intermediate results cost relational operations communication costs 
authors assume availability statistics underlying sources compute costs 
classes rewriting rules considered 
class rules derived properties distributed environment contains rules 
rule alternative information mourad ouzzani chapter 
related sources answer query different costs 
rules allow execution group operations remote sources trans data executing operations local source 
second class rules derived properties relational algebra commutativity associativity class rewriting rules relates heterogeneity environment 
needed reconcile semantic differences sources 
idea axioms describe attributes classes obtained combining information set sources 
hermes hermes considers construction mediators major distinct tasks domain integration physical linking information sources semantic integration coherent extraction combination information provided sources 
query optimization hermes cost model caching 
statistics calls sources locally cached order estimate cost possible execution plans 
addition invariants derive equivalent execution query plans 
invariants represent expressions show possible tions external domain calls 
specify call substituted 
query processor checks cache see answer domain call stored cache 
uses invariants substitute domain calls check cache 
invariants indicate domain call cache provides partial list answers actual domain call may need performed 
hermes optimizer components 
rule rewriter finds different possible rewritings original query expressed terms external calls 
cache invariant manager maintains caches avoids actual calls external domain answer call physically cache 
manager uses mourad ouzzani chapter 
related invariants find acceptable entries cache 
domain cost statistics module provides estimates calls external information sources 
module keeps execution time cardinality statistics database provides cost estimates rule cost estimator 
rule cost estimator takes rewritten query rule rewriter computes cost plan obtaining cost estimates individual calls sources 
rule rewriter derives plan query 
estimate costs plan select best plan 
cost estimation relies cost vector database maintained 
database records cost information domain calls executed mediator 
quality optimization techniques systems considered different parameters included cost query 
parameters relate information quality sources data 
argument quality parameters equally important context web classical parameters response time 
data integration centered types suppliers data suppliers function providers query processing operators cycle providers operator execution 
execution query may involve query operators supplied different function providers executed different cycle providers retrieve data different data providers 
query processing follows multi step strategy 
lookup service locates instances types suppliers relevant resolution query 
cost information gathered step 
second step optimal plan built mourad ouzzani chapter 
related cost model previously gathered information 
step query execution plan distributed relevant cycle providers executed iterator model 
queries lookup service extracted parser themes attributes specified different clauses query 
lookup service uses gen erated queries locate relevant resources consulting meta data repository 
lookup service responsible gather statistical information optimizer authorization information different providers 
authorization informa tion recorded compatibility matrix annotate query execution plan 
optimizer enumerates alternative query execution plans system dynamic algorithm 
costs plans estimated information lookup service 
information missing set default value 
optimal plan executed distributing different cycle providers specified host annotations plan 
addition users specify quality constraints execution query 
constraints defined results size result cost user ready pay time time results 
qos management introduced part query processor 
fact quality constraints treated phases querying processing 
fulfilled query plan dynamically adapted query aborted 
qos concept optimizer goal maximize percentage successful queries abort query fulfill qos constraints soon possible 
high quality information querying uses information quality criteria sup port query optimization mediator systems 
focus incorporating information quality query planning 
useful environments biological information systems users sensitive quality criteria mourad ouzzani chapter 
related classical database criterion response time 
approach uses architecture mediator uses query correspondence assertions resolve queries 
set oriented equations involving queries mediator wrapper schemas 
sort combination source centric query centric approaches mediators 
query resolution process tries find correct plans combinations union results obtain complete answer 
include quality information iq query planning classes quality criteria 
source specific criteria determine quality source 
include ease understanding reputation reliability timeliness 
specific criteria determine quality aspects specific queries computable source 
include availability price response time accuracy relevancy representational consistency 
attribute specific criteria relate ability source provide attributes specific query 
query processing conducted phase strategy 
source specific iq criteria phase prunes low quality sources 
second phase finds plans combinations produce semantically correct answers 
query planning strategy information manifold see section 
phase quality related information 
plans obtained previous phase qualitatively ranked 
phase starts determining iq scores different different plans 
score vector dimensions dimension corresponding non source specific criteria specific attribute specific 
attribute specific criteria recalculated new query stable 
second step iq vector computed plan merging iq vectors join nodes appearing plan 
third step iq scores different plans scaled weighted compared simple decision making method simple additive weighting 
method scales scores comparable apply user weighting sum scores plan 
mourad ouzzani chapter 
related adaptive query optimization important issue web data integration adaptive dynamic query optimization techniques face high volatility web 
techniques address mainly lack statistical information occurrence unpredictable events query execution 
generally try change execution plan run time re optimize query specific operators deal flexibly unpredictable events data delivery rates 
interesting characterization adaptive query processors 
states query processing adaptive receives information environment uses information determine behavior process iterates time generating feedback loop environment behavior 
section major projects dynamic query optimization 
telegraph telegraph project aims build query engine web information sources adaptive data flow paradigm 
objective adaptively route un predictable bursty data flows computing resources 
query processor continuously reorders applications pipelined operators query plan run time tuple tuple basis 
uses concept eddy defined ary tuple router interposed data sources set query processing operators 
eddy encapsulates ordering operators dynamically routing tuples 
idea times processing binary mourad ouzzani chapter 
related operator join union possible modify order inputs modifying state operator 
times called moments symmetry 
occur called synchronization barriers 
case merge join corresponds table scan waiting table scan produces values larger seen 
reported eddies join operator due impact query performance 
focus telegraph join algorithms frequent times symmetry adaptive non existent barriers minimal ordering constraints 
efficiency system depends tightly routing policy eddies 
different routing policies need different circumstances 
depends operator selectivity operator consumption production rate join implementation initial delays input relations 
eddies implemented context shared parallel query processing framework called river 
tukwila tukwila system addressing adaptiveness data integration environ ment 
adaptiveness introduced levels optimizer execution engine execution engine 
level adaptive ness deployed annotating initial query plans event condition action eca rules 
rules check conditions certain events occur subsequently trigger execution actions 
examples events include operator failure time memory exceptions 
conditions include comparison ac tual cardinalities known run time estimated 
actions include rescheduling query operator tree re optimization plan alteration memory allocation 
plan organized partially ordered set fragments set corresponding rules 
fragments pipelined units operators 
fragment terminates results materialized rest plan re mourad ouzzani chapter 
related optimized rescheduled 
addition data manipulation operators perform actions statistics gathering optimizer event handler invocation case significant event occurs 
operator tree execution follows top iterator model described 
second level adaptiveness operators dynamic collectors double pipelined hash join operator 
collector operator dynamically chooses relevant sources union involves data possibly overlapping redundant sources 
optimizer specifies order access sources alternative sources case unavailability slow delivery 
collector include set children wrapper calls table scans policy contacting 
policy expressed set event condition action eca rules 
double pipelined hash join symmetric incremental join 
aims producing tuples quickly masking slow data sources transfer rates 
requires maintaining hash tables memory relations 
original double pipelined join implemented adaptations 
adaption retrofit data driven bottom execution model operator tukwila query processing top iterator scheme 
second relates problem memory overflow 
strategies swapping 
interleaving scheduling optimization dynamic scheduling strategy deals memory limitation proposed 
monitoring arrival rates information sources memory availability 
case significant changes execution plan revised 
means planning execution phases interleaved 
query execution plan represented operator tree particular edges blocking 
blocking edge consumption data start entirely produced 
edge data consumed tuple mourad ouzzani chapter 
related time meaning consumption start soon tuple available 
possible characterize query execution plan chains represent maximal set physical operators linked edges 
query engine concurrently select schedule execute query fragments chains partial materializations minimizing response time 
query engine main components dynamic query optimizer dynamic query scheduler dynamic query processor communication manager 
dynamic query optimizer uses dynamic re optimization techniques generate annotated query execution plan 
annotations relate blocking edges memory requirements estimates results sizes 
dynamic query scheduler builds scheduling plan scheduling phase triggered events query processor 
scheduling heuristics current execution status information benefits materialization chains 
dynamic query processor concurrently processes query fragments maximizing pro cessor priorities defined scheduled plan 
execution may interrupted case data arriving sources query fragment ended delivery rates significantly changed 
reported query scheduler eventually query optimizer scheduling optimization changes 
communication manager receives data different wrappers rest system 
estimates delivery rates sources reports significant changes query processor 
query scrambling query scrambling approach proposed 
goal react delays modifying query execution plan fly 
unexpected delays hidden performing useful works 
scrambling pronged action rescheduling scheduling operators execution operator synthesis new operators mourad ouzzani chapter 
related created operator execute 
techniques re necessary modify query execution plan 
scrambling policies differ degree parallelism introduce aggressiveness scrambling changes existing query plan 
important trade offs considered rescheduling number operators reschedule concurrently 
con benefits overlapping multiple delays cost materializations achieve overlapping 
second rescheduling individual operators entire subtrees 
choice specific operator reschedule 
operator sis significant amount additional may added operations originally chosen optimizer 
avoid problem simple heuristic avoiding cartesian products prevent creation overly expensive joins 
performance heuristic highly sensitive cardinality new operators created 
optimizing queries sources limited capa bilities building mediators involves dealing sources presenting different capabilities terms queries handle 
scenario occur web sources adhering specific requirements constraints limit access patterns 
example users online bookstore get information books forms 
forms allow types keyword queries including search title subject author keyword isbn user submit database queries complex conditions prices requesting available books 
reasons limiting query capabilities information source 
include mourad ouzzani chapter 
related performance types queries allowed maintain perfor mance system 
example allowing conditions attributes indexes 
security supported queries access privileged information 
legacy underlying data may stored systems limited query capabilities 
business queries retrieve useful business information aggregate queries allowed 
section techniques developed deal problem efficiently answer queries sources limited capabilities 
tsimmis tsimmis prototype integrates heterogeneous information sources global view approach mediation 
proposed mediation supported number concepts 
object model called oem object exchange model exchange information components system 
mediator specifica tion language msl oem serves query language specification language mediators query language wrappers 
capabilities sources described templates 
oem self describing object data model data parsed external schema 
templates represent set queries answerable source 
generally speaking query answerable provides inputs required source 
capability descriptions sources decide feasibility physical query plans 
query resolution tsimmis focuses mainly finding feasible query plans respect limited capabilities available sources 
user query initially expressed mourad ouzzani chapter 
related integrated view 
view expander module mediator translates query logical plan view definitions 
logical plan specify order source queries processed 
processing order specified physical plan may turn may alternatives 
plan generator processes logical plan generates optimized feasible physical plan step process 
matcher finds source queries process parts logical plan source descriptions 
second sequencer pieces source queries processing conditions logical plan build feasible plans 
find feasible sequence source queries 
example query feasible sequence property binding requirements exported source queries appear earlier sequence 
optimizer chooses efficient feasible plan cost optimization algorithm 
information manifold information manifold provides uniform interface structured information sources 
proposes mechanism describe declaratively content query capabilities information sources 
system uses source descriptions prune sources query generate executable query plans 
sources content described queries set relations classes 
users express queries mediated view consisting collection virtual relations classes 
relations described sources queries world view relations 
information manifold follows local view approach mediation 
execution plan query generated phase algorithm 
phase semantically correct plan generated 
conjunctive query uses source relations contained user query subgoal query algorithm computes bucket containing information sources tuples subgoal obtained 
possible combinations mourad ouzzani chapter 
related information sources bucket considered 
obtained plan checked semantic correctness 
subgoal query relevant information sources computed separately 
conjunctive plans built selecting relevant source subgoal query 
plan checked relevance soundness 
conjunctive plan sound answers produces guaranteed answers query 
conjunctive plan relevant produce answers query descriptions sources constraints query 
step phase plan checked minimality 
ensures subgoal removed plan plan sound anymore 
second phase orders subgoals plan executable respect capabilities sources 
algorithm generates ordering possible bindings 
maintains list available parameters initialized set bound variables query 
subgoal added ordering input requirements satisfied respect list available parameters source requirements considered 
infomaster infomaster provides integrated access distributed heterogeneous information sources including databases semistructured data 
infomaster uses knowledge interchange format kif internal content language 
kif represent order logic expressions 
infomaster system follows source centric ap proach mediation 
infomaster considers types relations 
interface relations users formulate queries 
second source relations describe data stored information sources 
relations described third type world relations represents schema system 
query optimization notion local completeness limits number sources queried 
infomaster uses weak form completeness mourad ouzzani chapter 
related assumes subset data stored information source complete 
assumed entire data stored information source complete 
claim assumption reasonable specific appli cation domain 
approach source relation represented views global relations 
liberal view conservative view 
views schema corresponding source relation 
conservative view lower bound source relation describes subset data known complete 
liberal view upper bound source relation 
conservative liberal views different information sources query proces sor generates query plan retrievable semantically correct source complete view minimal 
query processor generates plans step algorithm 
reduction query transformed terms base relations rewriting atom definition associated predicates 
abduction expression qb terms base relations set definitions set consistent minimal conjunctions retrievable atoms produced 
set contained qb respect definition 
conjunctive mini mization redundant conjunct eliminated 
disjunctive minimization disjunct shown contained union remaining disjuncts discarded 
grouping conjuncts conjunction grouped atoms group share common provider 
annotated query plans approach proposed extends system optimizer deal sources having limited query capabilities 
uses annotated query plans search space 
annotations describe input sub plan query plan answerable 
proposed algorithm aims prune invalid non viable plans early possible uses best search strategy produce complete plan mourad ouzzani chapter 
related early search 
limitations sources modeled binding patterns 
binding pattern specifies attributes bound input value order retrieve tuples relation 
binding pattern labeled cost accessing cardinality expected output input 
cost sub plan computed costs cost associated operator 
approach assumes select project join queries conjunctive queries 
goal find cheapest complete query execution plan conjunctive query set binding patterns 
complete query execution plan plan covers conjuncts query adornment maps precisely bound variables query bound 
atomic plan costs deduced data access descriptions 
non atomic plan costs estimated costs operators costs sub plans 
query optimization algorithm starts initial set plans containing atomic plans single relations 
iteratively updated adding new plans obtained combining plans selection join operations 
choice partial plans combined utility measure 
utility measure number conjuncts covered plan cost plans number free variables combination thereof 
combination partial plans pruning occurs comparing costs equivalent plans costs covering plans 
plan covers plan labeled set conjuncts query may need variables bound equivalent selection applied 
iteration cases occur 
case contains equivalence class query optimal plan 
second case processing needed get optimal plan 
algorithm applies exhaustive enumeration possible placements selections obtained plans 
process leads optimal plan 
mourad ouzzani chapter 
related source sequencing algorithms simple greedy strategy partitioning scheme proposed deal limited capabilities sources 
algorithms cost model num ber source queries execution plan 
users submit conjunctive queries integrated views provided mediator 
integrated view defined set conjunctive queries source relations 
source relation defines set access templates specify binding requirements 
algorithm starts finding answerable subgoals initial bindings logical plan picks cost 
selected subgoal provide additional bound variables 
process repeated selecting cheapest subgoals updating set bound variables 
process stops subgoals left subgoals answerable 
clear greedy approach may optimal plan 
second algorithm generates optimal plans frequently worse running time 
phases phase subgoals organized list clusters source capabilities 
subgoals cluster answerable block queries queries initially bound variables answerable parameterized queries queries variable bindings subgoals earlier clusters 
second phase algorithm finds best sub plans cluster combines obtain best feasible plan query 
capability sensitive plans selection queries algorithms generating plans selection queries web data sources 
sources exhibit restrictions size structure condition expressions limitations set returned attributes 
sources mourad ouzzani chapter 
related described context free language 
queries form noted sp 
selection condition represented condition tree 
leaf nodes represent atomic conditions disjunctive conjunctive conditions 
non leaf nodes represent boolean connectors 
mediator query plans represented query trees 
leaf nodes represent sp source queries non leaf nodes represent selection projection union intersection operations 
operations performed mediator level combine results source queries 
algorithm simple exhaustive modular scheme modules rewrite mark generate cost 
rewrite module produces set equivalent rewritings target query condition 
employs number rules including commutative associative distributive transformations condition expressions 
rewrite module outputs set condition trees cts represent condition expressions query 
condition tree produced rewrite module mark module determines parts evaluated source 
condition supported source generate module produces set feasible plans repeatedly invoking exhaustive plan generator epg algorithm cts passed mark module 
epg recursive algorithm generates feasible plan query sp 
epg finds feasible plans represents special operator indicate alternative query plans sp 
cost module selects best plan cost model 
second scheme improves reducing number cts need processed search space knowledge cost model 
result rewrite module triggers fewer number rules 
commutativity rule included source description triggered 
requires rewriting source descriptions parsing larger set rules 
overhead occurs impact performance 
cost querying source consists overhead sending messages starting query cost mourad ouzzani chapter 
related computing answer source cost transferring results network 
cost model pruning rules reduce search space prune impure plans pure plan exist pure plan process entire query source prune locally sub optimal plans decomposing impure plan sub queries choose sub queries cost prune dominated plans plans expensive cost plans relation attributes condition includes condition expensive plan applied conjunctive conditions 
commercial data integration systems section overview major database products provide support data integration 
major database vendors oracle ibm sybase microsoft claim different levels support data integration web 
purpose section compare commercial products overview main features 
large number products section attempt cover 
focus major players arena 
coverage available information user manuals white papers published technical papers detailing commercial products 
additionally existing products various development stages operate different levels disclosure 
major concern shared products allow access external databases data sources xml multimedia sources 
details query optimization achieved dbmss web databases missing cases 
mourad ouzzani chapter 
related ibm db data integration ibm db started allows submit sql queries external non db databases 
db relational connect brought con cept data integration allowing federation db non db databases accessed uniformly 
db federated system consists db instance data sources 
federated database contains catalog entries identi fying data sources characteristics 
note garlic research project described chapter important asset enabling data integration db 
oracle oracle data access gateways enable access manage data heterogeneous data sources 
types access possible transparent gateways non oracle databases ii procedural gateways provide procedural access non oracle transactional systems 
data integration achieved data warehousing external non oracle databases oracle warehouse builder 
sybase enterprise connect data access sybase tool access non sybase databases cluding db oracle ms sql server 
sybase adaptive server build federation heterogeneous databases 
users transparent access heterogeneous databases 
achieved component integration services cis enable definition proxy tables mapped actual tables distributed heterogeneous databases 
query optimization cost model assumes availability access costs remote tables 
ciss focus mourad ouzzani chapter 
related aspects distributed query optimization query optimization determines optimal join strategy order ii query decomposition determines load pushed remote databases processing 
ms sql server ms sql server supports data integration distributed query facilities 
allow sql server users access data stored instances sql server heterogeneous data stored various relational non relational data sources 
ac cess enabled ole db providers 
ole db providers expose data tabular objects called row sets 
sql server allows row sets ole db providers referenced sql statements sql server table 
discussions enabling data integration web subsequent need efficient querying targeted large research effort 
chapter repre segment research 
discussion outlines various query optimization issues addressed 
depicts classification different approaches optimizing queries web data integration systems 
highlights categories query optimization techniques context web data integration 
cost quality capability adaptive 
category lists main features different tech niques implement query optimizers category 
proposed approaches extend classical cost model 
major diffi culty relates gathering optimization information cardinality selectivity autonomous information sources 
approaches disco simply sumption information easily available sources exported mourad ouzzani chapter 
related query optimization cost model adaptiveness capability assume existence necessary statistics wrappers export statistics query processor wrappers cooperate estimate costs query processor gathers statistics sources cache statistics economic paradigm bidding processing data quality information user quality constraints data flow reordering re scheduling re optimization special operators local completeness extension system optimizer rule optimization sub goals partitioning classification query optimization techniques mourad ouzzani chapter 
related wrappers 
garlic provide wrapper builders tools gather information query sampling requiring involvement database 
approaches cost information obtained generic model generally 
generic model may applicable web context large spectrum autonomous heterogeneous informa tion sources 
addition making assumption statistics available easily obtained may reasonable 
suggests techniques may appropriate intranet applications 
systems main objective terms optimization reduce number sources accessed 
sources reduction occurs query planning time infomaster available source descriptions user query run time special types queries ariadne 
reducing number sources important context web number potential sources query large 
may optimization necessary 
technique hermes bases optimization caching statistics sources calls estimate cost possible execution plans 
uses notion expression invariants derive equivalent execution query plans 
cache may sufficient optimization purpose 
addition optimization techniques 
trend adaptive dynamic approaches dealing query optimization 
motivated intrinsic dynamics web unpredictable events may occur execution query 
types actions considered approaches fall cases change query execution plan change scheduling operations query execution plan different concurrent query plans introduce new operators cater unpredictable events modify order inputs binary operators 
adaptive techniques demonstrate applicability real mourad ouzzani chapter 
related web applications large numbers information sources 
need show react heavy fluctuations 
interesting direction optimizing queries web data integration systems information quality 
main motivation quality parameters reflect user needs better environments 
approaches uses different classes quality criteria select relevant sources rank alternative query plans 
approach allows users specify quality constraints execution queries 
constraints may relate expected results cost query time results complete execution 
quality service qos constraints enforced execution query 
quality constraints crucial importance applications 
major issue get related information sources scattered web 
furthermore due subjective nature constraints query optimizer may succeed finding best plans 
important issue processing queries web data integration systems deal limited query capabilities sources 
limitations di rect impact optimization process 
query execution plans may optimal feasible 
different query planning strategies focus generally finding feasible optimal subgoal orderings available bindings supported conditions information sources 
proposed techniques assume full knowledge query capabilities participating source 
rely heavily way information sources described binding patterns free grammars objective function optimizer number sources response time 
source description model may possible large spectrum information sources 
table summarizes main features different prototypes techniques covered chapter 
commercial products included mourad ouzzani chapter 
related table due lack details 
features covered tables underlying information sources types sources supported 
majority web data integration systems attempt include large spectrum information sources databases html files text files knowledge bases general mediator systems assign wrapper interface hides underlying heterogeneity source 
wrapper takes care interaction source rest system 
sources description sources description advertisement direct im pact source location process consequently query optimization 
data model data model usually serves basis data exchange different components data integration systems 
query language specifies language formulate queries 
query optimization main concept underlying query optimization sum 
information routing information routing information filtering focuses long term information needs information retrieval environments 
set user profiles auto matically classify texts way relevant information routed appropriate users 
usually viewed probabilistic inference process compares text representations different forms linguistic statistical evidence natural language queries user interaction 
general large number mourad ouzzani chapter 
related table summary web data integration systems features system underlying information sources disco structured data relations represented information types garlic databases image archives ariadne semistructured data hermes structured semistructured data semistructured semistructured data sources description data model query language query optimization garlic object specified gdl variant odmg object description language odmg data model embedded catalogs loom system object relational sql object oriented extension sql sql loom query language cost optimization wrappers exporting statistics strategy alternative rules star build query trees 
cost optimization achieved means wrapper cooperation 
planning rewriting cost optimization 
rewriting rules derived properties distributed heterogeneous environments relational algebra 
domains relational domain calls cost optimization caching invariants 
sources described rdf structured data query correspondence assertions set oriented equations telegraph mainly relational streaming data sources tukwila relational databases xml sources interleaving scheduling optimization relational databases tsimmis structured semistructured data information manifold xml model extension sql relational extension sql distribution query processing capabilities qos optimization query planning quality criteria selecting sources 
relations relational sql concept eddy tuple router interposed data sources query processing operators 
adaptiveness implemented level tuples 
relations relational sql operator reordering eca rules 
optimized operators dynamic collectors double pipelined hash join 
relations relational sql adapt scheduling arrival rate changes templates object exchange model oem structured data capability records relational data model features 
infomaster structured semistructured data annotated query plans source sequencing selection queries relations built predicates knowledge kif msl lorel conjunctive queries conjunctive queries capability processing standard optimization oem data model conjunctive plans generation subgoals ordering declarative description source content capabilities query optimization local completeness source relations represented views liberal view conservative view represent upper lower bounds source relations respectively 
structured data binding patterns relational datalog extension system optimizer annotating query plans take account capabilities sources 
structured data access templates relational datalog greedy optimization sub goals partitioning source capabilities 
structured data context free grammar relational datalog exhaustive modular optimization algorithm rule optimization knowledge cost model 
mourad ouzzani chapter 
related archived profiles representing users needs compared individual documents 
information routing regarded major function text systems 
reported information routing systems main characteristics designed unstructured semistructured data 
target mainly textual information 
deal large amounts data 
involve data streams broadcasted remote sources newswire ser vices sent directly sources 
profiles description individual group information preferences 
imply removing data incoming stream finding data stream 
major issues information routing efficiency effectiveness 
effi ciency crucial dealing high volume document streams large space user profiles 
led look new indexing memory architec tures systems 
terms effectiveness algorithms determine cutoffs required distinguish relevant non relevant documents 
context learning techniques may determine cutoffs automatically build profiles user feedback 
proposes techniques creating routing queries 
especially im portant queries designed long term 
special care exercised crafting 
time spent process amortized uses 
authors experimentally compared effectiveness routing queries created automatically interactively relevance feedback mourad ouzzani chapter 
related users 
come concepts associated query terms document database improve effectiveness query database 
authors address issues related representation classification management users profiles 
propose filtering model deals inherent uncertainties changing interests user dynamic document stream 
conducted making sure user interventions minimal little performance degradation adjusting sys tem changes documents users needs 
research collaborative filtering 
aims producing recommendations computing similarity preferences user users 
collaborative algorithms classified categories memory algo rithms model algorithms 
memory algorithms start finding users training database similar current test user terms rating pattern 
combine users ratings obtain prediction test user 
model approaches cluster different users training database rating patterns 
predict rating test user approaches categorize user predefined clusters predicted cluster test user prediction 
representatives research conducted context information routing 
query infrastructure take advantage research especially terms concepts developed management users profiles 
interesting extension approach profiles determining users requirements terms qows 
profiles cluster users eventually cache previous queries results 
mourad ouzzani chapter 
related web services querying optimization major booster deployment web services relates standards developed support new paradigm 
include standards web services description wsdl discovery uddi communication soap 
adoption standards led exponential proliferation web services 
proliferation fostering large spectrum research disciplines 
major research efforts related proposed approach querying web services web service discovery integrating web services xml querying web services composition query optimization database integration systems 
web service discovery concerns mainly location single web services pub service registries 
example uddi registration consists white pages contact information yellow pages industrial categorization green pages technical information services 
service consumers inquiry api locate web services keyword search different advertised information 
approach service discovery steps query process 
goal answer declarative complex queries combining operations located web services 
review number related research efforts overlapping query infrastructure proposing 
active xml active xml enables querying xml documents web services 
documents defined xml documents portions correspond web service operation invocations 
invocations defined explicitly mourad ouzzani chapter 
related xquery queries documents 
focuses different issues related evaluation web service invocations document 
include activation time determination invocation arguments discovery put validity time different techniques drawn databases xml research proposed address issues 
authors looked distri bution replication issues documents 
major difference view web services class objects active xml uses web services mean update xml documents 
object querying xml documents 
additionally support qows type optimization selecting web services 
quality optimization self serv authors propose technique linear programming optimize service composition 
part self serv prototype service compo sition 
optimization qows criteria duration price reliability 
composite services represented state chart task matched web services belonging community 
community collection web services offering functionality eventually differing terms qows 
authors expressed optimization problem finding best web services execute composite service form linear programming prob lem 
constraints considered introduced computation qows composite service plan 
take account global constraints imposed application existence partnerships tween web services 
optimization consider discount relationships qows may increase quality composite service 
addition pre post operations post conditions mentioned 
mourad ouzzani chapter 
related request language web services authors propose web service request language xml ai planning techniques 
proposed framework handle execute requests 
aim provide planning actions uncertainty basis refinement revision new service related information acquired interaction user uddi execution context change 
focus defining language specification requests web services 
includes specifying core entities request user scheduling preferences de requested web services 
language xquery 
requests translated generic plans ai planning techniques 
plan executor produces instantiated plans interacting uddi users web services 
overlapping query infrastructure especially part 
clear available literature global planning conducted 
authors gave details generic plan obtained 
furthermore qows efficiency issues addressed 
quality web services concept quality service qos mainly networking multimedia applications surge adapting concept web services 
required definition parameters specific web service environment 
parameters specified presents interesting directions treating qows context web services 
propose taxonomy qows parameters takes account facets web service behavior delivering functionalities 
second monitoring scheme believe necessary sustain effective qows context efficiency stake mourad ouzzani chapter 
related service composition key difference service query model service composition intend build new web services outsource functionalities existing ones 
goal provide query facilities web services 
users applications get information submitting queries resolved combining access different web services 
note currently sustained effort define standards specification web service orchestration 
includes wsfl web services flow language xlang bpel ws business process execution language web services 
wsfl uses notions flow global model define composite services 
flow model relates execution sequence component services 
defined directed graph 
node activity models single step business goal achieved 
activities linked services locator element 
binding static dynamic 
wsfl uses types edges connect activities control links data links 
control links define execution order activities 
data links represent flow information activities 
global model specifies component services interact 
xlang focuses language constructs describe behavioral aspects web services combine build multi party business processes 
intra service level xlang extends wsdl language adding behavior element 
behavior defines list actions belong service execution order 
xlang defines types actions regular wsdl operations xlang specific actions timeout operations 
inter service level xlang defines contract element interconnecting xlang service descriptions 
ex ecution order xlang actions defined control processes sequence 
mourad ouzzani chapter 
related bpel ws combines features wsfl support graph oriented processes xlang structural constructs processes defining business pro cesses 
business process composed steps called activities 
bpel ws defines collection primitive activities invoking operation 
primitive activities combined complex primitives structural activities pro vided bpel ws 
include ability define ordered sequence steps sequence branching case statement approach switch define loop execute alternative paths pick indicate collection steps executed parallel flow 
specifications little support optimization qows 
interestingly generate detailed description service execution plan produced optimizer 
take advantage new technology supports specifications 
optimization web databases web services database integration subject sustained research effort 
query opti mization context major challenge 
fundamental difference database query optimization approach lies manipulated objects 
class objects approach services data class object databases 
approach optimization focuses qows parameters related behavior web services existing techniques optimization concerns response time query execution plan 
efficiently ordering web services operations service execution plan similarities classical problem processing queries sources limited capabilities 
differences classical problem databases 
operations need discovered matched mourad ouzzani chapter 
related virtual operations 
service execution plan bear virtual operations located concrete operations 
second virtual operation may choices concrete operations complicates query processing optimization 
matching strategy allows certain types matching may change binding requirements corresponding virtual operations 
chapter ontological organization web databases organizations world rely wide variety databases conduct everyday business 
databases usually designed scratch meet requirements 
led proliferation databases obeying different sets requirements modeling situations 
instances lack organized databases users create pieces information may exist current databases 
may known certain piece information stored locating may prohibitive terms cost effort 
renewed interest sharing information heterogeneous platforms readily available relatively cheap network connectivity 
may potentially access participating databases reality intractable task due various fundamental problems 
challenge give users sense accessing single database contains needs 
allow effective efficient data sharing web need mourad ouzzani chapter 
ontological organization web databases infrastructure support flexible tools information space organization com munication facilities information discovery content description assembly data heterogeneous sources conversion data reconciliation incompatible syntax semantics integration distributed information 
old techniques ma sources appropriate efficient 
users provided tools logical scalable exploration systems step process involving location appropriate information sources ii searching sources relevant information items iii understanding structure ter patterns information items data integration ultimately querying 
approach ontologies information repositories established simple domain ontology 
meta information represents domain interest underlying information repositories 
example collection databases store information topic grouped 
individual databases join leave formed ontologies discretion 
proposed cal organization constitutes foundation webfindit prototype 
webfindit provides scalable portable architecture latest dis tributed object web technologies including corba distributed computing platform java connectivity gateways access native information sources 
information space organization modeling organizing web databases distributed ontologies mainly motivated fact highly dynamic constantly growing network databases accessible web need meaningful organization segmentation information space 
adopt ontology organization diverse databases filter interactions accelerate information searches allow mourad ouzzani chapter 
ontological organization web databases sharing data tractable manner 
key criteria guided approach scalability design simplicity easy structuring mechanisms object orientation 
information space organized distributed domain ontologies 
databases join leave ontology domains interest represent portion information space 
example databases share topic medical research linked ontology 
topic provides terminology formulating queries involving specific area interest 
organization aims reduce overhead locating querying information large networks databases 
database may contain information related domain interest may linked ontology time 
different ontology formed principle isolated entities related inter ontology relationships 
relationships created users needs 
allow user query resolved databases remote ontologies resolved locally 
intend achieve automatic reconciliation heterogeneous ontologies 
system users incrementally educated available formation space browsing local ontology inter ontology relationships 
way sufficient information query actual data 
domain models ontology specialized single common area interest 
provides domain specific information terms interacting ontology underlying databases 
providing abstraction specific domain 
abstraction intended users ontologies description specific mourad ouzzani chapter 
ontological organization web databases domain 
ontologies dynamically clump databases common areas interest single atomic unit 
generates conceptual space specific content scope 
formation modification ontology semi automatic process 
privileged users database administrators provided tools maintain different ontologies mainly negotiation basis 
considering simple membership databases ontology intra ontology relationships sources considered 
allows flexible precise querying ontology 
relationships form hierarchy classes information type classification hierarchy inside ontology 
respect users refine queries browsing different classes ontology 
inter ontology relationships user submits query local ontology resolvable locally 
case system try find remote ontologies eventually resolve query 
order allow query migration inter ontology relationships dynamically established ontologies users needs 
inter ontology relationships viewed simplified way share information low overhead 
amount sharing inter ontology relationship typically involve minimum amount information exchange 
relationships involve basically ontologies ex tended databases 
allows flexibility organization querying information space 
inter ontology relationships types see 
type involves relationship ontologies exchange information 
second type involves relationship databases 
third type involves relationship ontology database 
inter mourad ouzzani chapter 
ontological organization web databases ontology relationship ontologies involves providing general description information shared 
likewise inter ontology relationship tween databases involves providing general description information databases share 
third alternative relationship database 
case database ontology provides general description information willing share ontology database 
difference alternatives lies way queries resolved 
third alternative information provider ontology providing ontology takes resolve query 
second case user responsible contacting providing database order gain knowledge information 
dynamic distributed ontologies information accessing tractable limiting number databases interact 
databases join leave ontologies inter ontology relationships local requirements con straints 
point time single database may ontologies inter ontology relationships 
believe complete reconciliation databases accessible web tractable problem 
approach automatic translation different ontologies 
users incrementally educated available information space 
discover familiar databases effectively relevant 
submit precise queries guarantee relevant answers returned 
hand databases join simply distributed ontologies providing local information choosing ontologies meet interests 
addition join involve major modifications system need changes metadata level related involved ontologies 
allows system scale easily queried simple flexible way 
mourad ouzzani chapter 
ontological organization web databases distributed ontologies healthcare domain 
information sources modeling database decides join distributed ontologies define areas interest 
links established ontologies implementing concepts negotiation may engaged databases form new ontologies 
database administrator provide object oriented view underlying database 
view contains terms interest available database 
terms provide interface communicate mourad ouzzani chapter 
ontological organization web databases database 
specifically view consists types called access interface database containing exported operations attributes functions textual description operations 
membership database ontology materialized fact database instance classes different ontologies 
note useful information provided database administrator see section 
illustrate way database modeled related domain model consider virginia cancer fund database member ontology research see 
assume database instance class ontology research 
represents example database contains relations cancer id scientific name common name infection area cause known hereditary description group id cancer id start date supervisor id staff staff id title name location phone research field ownership id group id staff id date commenced date completed funding funding id group id provider name amount conditions result id group id results date description database administrator decides public information related relations advertised specifying information type published follows mourad ouzzani chapter 
ontological organization web databases type funding attribute string function real amount string type results attribute string staff name attribute int function string description string staff name int date note textual explanations attributes operations left description clarity 
attribute denotes relation field function denotes access routine database 
implementation features transparent user 
instance function description denotes access routine returns description results obtained staff member date 
routine written interface 
case object oriented database attribute denotes class attribute function denotes class method access routine 
users locate database investigate exported interface fetch useful attributes functions access database 
metadata support databases databases introduced means implementing distributed ontology concept aid inter site data sharing 
metadata repositories mourad ouzzani chapter 
ontological organization web databases surround local dbms know system capability functionality 
formation information space relationships ontologies inter ontology rela tionships maintenance exploration relationships occur special purpose language called 
overview language section 
locating set databases fit user queries requires detailed information content database system 
avoid problem cen administration information meta information repositories distributed information networks 
approach participating database database attached 
database meta information repository xml enabled database stores information associated database ontologies inter ontology relationships database 
set databases exporting cer tain type information represented class database schema 
means ontology represented class hierarchy classes information type classification hierarchy 
typical database schema contains represent ontologies inter ontology relationships deal specific types information see fig ure 
sub schema consists tree classes class represents set databases answer queries specialized type information 
subschema represents ontologies 
class ontologies root forms root ontologies tree 
subclass class ontologies represents root ontology tree 
node tree represents specific information type 
ontology hierarchically organized form tree information type number subordinate information types superior information type 
organization allows ontology structured tion relationship 
instance class research subclasses cancer research child research 
classes joined ontology tree support mourad ouzzani chapter 
ontological organization web databases answering queries directed 
user query conforms better information type subclass query forwarded sub class 
classes ontology tree handling user query user simplifies query query forwarded ontologies databases inter ontology relationships 
splitting ontology smaller units increases efficiency searching information types 
inter ontology root class database root class ontologies relationships root class database relationships root class ontology ontology class ontology database class database ontology class ontology root class database database class ontologies root class outline typical database schema ontology root class database contains type subschema 
subschema con sists hand subschema inter ontology relationships involve ontology database member hand subschema inter ontology relationships involve database 
sub schemas consists turn subclasses respectively describe inter ontology relationships databases inter ontology relationships ontologies 
particular class ontology tree contains description participating databases type information contain 
description databases include information data model operating system query mourad ouzzani chapter 
ontological organization web databases language description information type include general structure behavior 
mention documentation demo associated information instance stored actual databases 
done reasons database autonomy maintained modified little overhead associated databases 
class ontology root contains generic attributes inherited classes ontology tree 
subset attributes class ontology root class ontology root attribute string information type attribute set string synonyms attribute string dbms attribute string operating system attribute string query language attribute set string sub information types attribute set inter ontology root inter ontology relationships attribute set ontology root members 
attribute information type represents name information type research instances class research 
attribute synonyms describes set alternative descriptions information type 
users descriptions effect obtaining databases provide information associated information type 
attribute sub information types describes specialization relationship 
attributes self explained 
sub class class ontology root specific attributes de mourad ouzzani chapter 
ontological organization web databases scribe domain model related set underlying databases 
attributes necessarily correspond directly objects described particular database 
example subset attributes class research project types defined class research isa ontology root attribute string subject attribute set project projects attribute set funding 
class inter ontology root contains generic attributes relevant types inter ontology relationships 
relationships answer queries local ontology answer 
inter ontology relationship seen intersection overlap relationship related entities 
synonyms generalization specialization seen intra ontology relationships compared inter ontology relationships 
subset attributes class inter ontology root class inter ontology root attribute set string description attribute string point entry attribute string source attribute string target 
attribute description contains information type provided inter ontology relationship 
assume user queries ontology mourad ouzzani chapter 
ontological organization web databases medical medical insurance 
synonyms tion specialization relationships fails answer user query 
ogy medical inter ontology relationship ontology insurance value attribute description health insurance medical insurance 
clear inter ontology relationship provides answer user query 
attribute point entry represents name database contacted answer query 
attribute source target self explained 
far metadata model describe ontologies relationships 
follows particular database described linked ontologies 
example database attached fairfax hospital database contains information related ontologies inter ontology relationships 
fairfax hospital database member ontologies research medical stores information 
database contains information ontologies databases relationship ontologies database self 
database stores information inter ontology relationships state government funding database insurance ontology stores access infor mation fairfax hospital database includes exported interface internet address 
interface database consists set types contain ing exported operations textual description types 
database advertised database specifying information type documentation file containing multimedia data program plays product demonstration access information includes location wrapper program allowing access data database set exported types 
mourad ouzzani chapter 
ontological organization web databases information source fairfax hospital information type research medical documentation www nvc cs vt edu fairfax location nvc cs vt edu wrapper nvc cs vt edu interface url www nvc cs vt edu fairfax contains documentation fairfax hospital database 
contains type presentation accessible web java applet plays video clip 
wrapper needed access data oracle database query 
exported interface contains types advertised explained previous section virginia cancer fund database 
interface database query data stored database 
possible locating database relevant database 
pointed sub class class ontology root set attributes describe domain model underlying databases 
fact attributes query data stored underlying databases 
attributes correspond directly attributes database interfaces 
reason define relationships database types ontology domain model attributes 
call relationships mappings 
specifically exists mapping type interface database 
mappings translate ontology query set queries relevant databases 
note attribute function type database may related different attributes functions different ontologies 
example attribute patient name type may related domain attributes ontology medical ontology research 
described mourad ouzzani chapter 
ontological organization web databases follows mapping attribute string patient name research medical information sharing achieved databases communicating 
mentioned database may belong ontology 
case database contain information ontologies belongs 
databases belong ontology different databases 
true databases belong different ontologies involved different inter ontology relationships 
reason desirable database database attached having single database ontology 
database autonomy high information availability reasons desirable physically centralize database 
language support sql extensions thereof best database schemas known user 
respect concerned discovering metadata 
querying sql done single step get data 
contrast access web databases happen steps iteratively 
addition nature ontology architecture calls special handling ontology inter ontology relationships management 
knowledge language developed support access management ontologies context web databases 
follows briefly introduce main features language 
focus aspects designed specifically user education information sources location mourad ouzzani chapter 
ontological organization web databases distributed ontologies 
details language outside scope dissertation 
designed address issues related design evolution webfindit 
world users partitioned privileged users general users 
queries resolved interactive process 
privileged users administrators issue data definition data manipulation op erations 
formation ontologies inter ontology relationships database schema evolution achieved data definition operations 
ontology bootstrapped formal negotiation privileged users takes place 
ontology inter ontology schema stored maintained databases 
databases contains replicated data schema updates propagated appropriate databases predefined set protocols 
data accessed component information repository provide users information regarding structure system nature databases 
general users may issue read queries 
distributed updating querying databases achieved interface process allows interactions remote sites 
consists data definition manipulation constructs 
data definition features define different schemas intrinsic relationships 
provides constructs define classes information types corresponding relationships 
conventional object oriented databases behavior class instances 
provides mechanisms defining constraints firing triggers evolution purposes 
feature evolve schemas propagate changes related schemas 
data defini tion queries accessible selected number users administrators 
formation schema achieved negotiation process 
respect provides features administrators form evolve schemas 
mourad ouzzani chapter 
ontological organization web databases specifically provides data definition operations define classes objects structure behavior 
define operations schema evolution 
define operations negotiation schema creation instantiation 
manipulate schema states 
users query structure behavior meta information types 
users query language query information participating databases 
manipulation meta data actual data 
specifically provides manipulation operations search information type 
search information type providing structure 
search information type providing structure information host databases 
query remote databases user education information discovery consider example distributed ontologies represent medical information domain represented 
assume physicians fairfax hospital interested gathering information cancer disease virginia research treatment costs insurance purpose webfindit order gather needed information 
go interactive process language 
mourad ouzzani chapter 
ontological organization web databases suppose physicians fairfax hospital queries webfindit medical research related cancer disease 
purpose starts investigation submitting query find ontologies information medical research order resolve query webfindit starts ontologies fairfax hospital member checks hold information 
system local ontologies research ontology deals type formation 
refinement needed performed specific information type 
user interested specific information medical research cancer submit refinement query find specific information type follows display subclasses class medical research ontology class medical research shows contains subclasses cancer research child research aids research 
user decide query displayed classes continue refinement process 
user interested subclass issues query display instances subclass display instance class cancer research user faced instances subclass cancer research contained databases 
assume decides query arlington hospital database instance subclass 
user knowledgeable database construct displays documentation information 
provides construct displaying documentation information 
example query mourad ouzzani chapter 
ontological organization web databases display document instance arlington hospital class cancer research assuming user finds database contains requested information tributes functions provided directly access database instance information type 
provides users primitives manipulate data drawn diverse databases 
users local functions directly access providing databases get actual data 
example user interested querying database virginia cancer fund class cancer research ontology research uses query display interface exported database display access information instance virginia cancer fund class cancer research point user completely aware database 
knows location database access get actual data useful information 
database virginia cancer fund located mars nvc cs vt edu exports types 
example exported type type funding attribute string function real amount string function amount returns total budget research project 
instance interested budget research project lung cancer function amount lung cancer 
function translated sql query native query language underlying database mourad ouzzani chapter 
ontological organization web databases select amount funding lung cancer groupid groupid scenario user involved browsing session discover databases interest inside ontology research 
ontology contains large number databases browsing description documentation access information underlying databases may unrealistic 
case user may interested query data stored databases domain attributes ontology 
example effect obtaining name projects related cancer user type query select projects name ontologies research subject cancer query expressed domain model ontology research 
system uses mappings defined section translate query set queries relevant databases members ontology 
assume physician interested querying system private medical insurance 
query submitted system 
find ontologies information insurance usually webfindit checks ontologies fairfax hospital mem ber 
local ontologies research medical fail answer query 
mourad ouzzani chapter 
ontological organization web databases webfindit finds inter ontology relationship ontology insurance appears deal requested information type 
point entry provided ontology 
way inter ontology relationship contains resources available ontology answer requests handled locally 
establish connection remote ontology user uses query connect ontology insurance user able investigate ontology looking relevant infor mation 
refinements database selected queried part example 
ontology interaction negotiation ontologies inter ontology relationships provide means dynamically syn database interactions decentralized manner 
joining ontology databases implicitly agree 
databases retain control join leave ontologies inter ontology relationships local considerations 
forming joining leaving ontologies inter ontology relationships con privileged users database administrators 
instances users may ask information local domain interest 
requests small mapping set information meta types ontology inter ontology relationships resolve query 
number requests remains high database administrator may efficiency reasons investigate formation ontology popular remote databases join pre existing ontology 
alternatively database administrator may initiate negotiation database members establish inter ontology relationship mourad ouzzani chapter 
ontological organization web databases existing ontology database 
assume database ontology insurance wants es inter ontology relationship ontology medical 
initiate ontology query inquire ontology medical send requested information remote structural information servicing medical representative administrator site database uses query send object medical template negotiation process ends establishment inter ontology relationship involved entities decide 
primitives exist remove meth ods objects database relinquishes access local information 
basic primitives establish ontology propagate validate changes 
operation validated participating tors 
instantiation operation exception 
case database described object decides object state 
dis agreement validation process administrator operation choose course action taken 
joining database provide information data share information 
new information repository accepted member administrator ontology decide ontology schema changed 
informal exchange parameters need set 
instance threshold minimum maximum number mourad ouzzani chapter 
ontological organization web databases ontology members negotiated set 
likewise threshold minimum maximum number inter ontology relationships information sources ontologies set 
initially administrator selected create root class ontology schema 
done root schema sent participating information repository validation 
feedback group creator decide change object 
process continue consensus 
changes single site consensus achieved time change persistent propagated appropriate databases 
existing classes methods updated responsibility lies information repository owns 
ontology deleting corresponding subschema par database schema 
addition objects belong classes ontology deleted 
update databases resulting inter ontology relationship changes practically defined ontologies 
difference changes ontologies obey stricter set rules 
webfindit ontology architec ture web databases section presents architecture supports webfindit frame 
architecture adopts client server approach provide services interconnecting large number distributed autonomous heterogeneous databases 
corba java technologies 
corba pro vides robust object infrastructure implementing distributed applications includ ing multidatabase systems 
applications constructed seamlessly mourad ouzzani chapter 
ontological organization web databases components legacy systems new developed systems hosted different locations network developed different programming languages operating systems 
interoperability multi vendor corba orbs provided iiop internet inter orb protocol 
iiop allows objects distributed internet connected different orbs com 
java allows user interfaces deployed dynamically web 
java applets downloaded user machine communicate webfindit components corba objects 
addition jdbc access sql relational databases java applications 
java corba offer complementary functionalities develop deploy distributed applications 
noted types middleware technologies sides java corba 
technologies cgi approach activex dcom developing intranet internet applications 
recognized cgi approach may adequate need sophisticated remote server capabilities data sharing databases required 
java corba approach offers ad cgi 
note corba iiop run network uses internet backbone 
interoperability corba activex dcom reality beta version orbix comet desktop 
access internet databases interfaced cgi html activex dcom possible minimal cost 
system architecture webfindit components grouped layers interact selves query large number heterogeneous distributed databases web interface see 
basic components webfindit mourad ouzzani chapter 
ontological organization web databases query layer communication layer metadata layer data layer 
internet database servers information source interfaces database servers orb iiop corba browser query processor orb orb orb iiop webfindit layers query layer communication layer meta data layer data layer query layer provides users access webfindit services 
com ponents browser query processor 
browser user interface webfindit 
uses metadata stored databases educate users available information space locate information source servers send query remote databases display results 
browser implemented java applets 
query processor receives queries browser coordinates execution returns results browser 
query processor interacts communication layer layer dispatches queries databases metadata layer databases data layer 
query processor written java 
communication layer manages interaction webfindit compo nents 
mediates requests query processor database database servers 
communication layer locates set servers perform tasks 
component implemented network iiop compliant corba mourad ouzzani chapter 
ontological organization web databases orbs visibroker java orbix 
corba possible encapsulate services database database servers sets dis tributed objects associated operations 
objects provide interfaces access servers 
query processor communicates corba orbs directly orb client server java orb visibroker java orb communicate orbix 
metadata layer consists set database servers store meta data associated databases information type location ontologies inter ontology relationships 
databases designed respond queries regarding available information space locating sources information type 
databases implemented xml supported oracle 
data layer components databases information source inter faces isis 
current version webfindit supports relational oracle sybase db object oriented objectstore databases 
information source interface provides access specific database server 
current implementation provides translation queries native local lan guage sql translation results format native system format 
hardware software environment current implementation system solaris jdk includes jdbc access relational databases corba products iiop compliant orbix visibroker java see 
orbs connect databases databases databases 
database encapsulated corba server object proxy 
databases implemented different dbmss relational mourad ouzzani chapter 
ontological organization web databases detailed implementation 
object oriented systems oracle db objectstore 
user interface implemented java applets communicate corba objects 
objectstore databases connected orbix 
relational databases stored oracle db connected java interfaced corba 
oracle databases connected visibroker db connected 
corba server objects mourad ouzzani chapter 
ontological organization web databases jdbc communicate relational databases 
case corba ob jects implemented java visibroker java server objects 
method invocation communicate interfaced object oriented databases corba servers orbix objectstore support interface 
chapter web services query model basic web services consists invoking operations sending receiving messages 
definition describe potential interactions operations web service web services 
complex applications accessing diverse web services benefits senior citizens require advanced capabilities manipulate deliver web services functionalities 
general users needs fulfilled simply invoking single operation operations independently 
web services starting get deployed web large number web services compete offering similar functionalities different meals providers senior citizens scenario different airlines offering connection cities 
expected differ way functionalities offered required input output parameters conditions quality web services 
addition satisfying users requests may necessarily require returning exact answers 
users may satisfied alternative partial answers 
mourad ouzzani chapter 
web services query model major step addressing challenges propose new approach query web services information flow generated invocation operations 
query resolution lead invocation various web service operations combination results 
proposed query model enables users express requests simple declarative queries 
incumbent query infrastructure supporting model efficiently transform query best combination invocations actual web service operations 
level query model drawing analogy databases propose level query model web services 
top level define relations allows users easily formulate queries 
second level define virtual operations specific application domain 
termed virtual belong actual web service 
third level represents concrete operations actual web services 
level model acts schema service space querying purposes 
build web service query model database concepts note major differences 
databases actual data known static owned managed central authority 
contrast web service query infrastructure needs locate appropriate web services query 
priori unknown highly volatile web services independent entities compete 
addition proposed model query may answered different web services executed twice 
precisely level query model defined follows query level consists set relations allow users formulate mourad ouzzani chapter 
web services query model submit declarative queries web services 
different sets relations may defined virtual operations different mapping rules 
means may different query interfaces depending users needs 
definition set relations ri defined query level 
examples relations social services senior citizen application clude transportation options food provider menu 
virtual level consists web service operations typically offered particular application domain 
determine relations kind queries supported query infrastructure 
definition set virtual operations defined virtual level 
examples virtual operations social services senior citizen appli cation includes 

concrete level represents space web services offered web 
potential candidates answer queries 
web services priori unknown 
need discovered matched virtual operations appearing query 
definition set concrete operations available web services 
forms concrete level 
general scenario level query model de signer willing provide query capabilities web services senior citizens scenario 
target application designer starts building set virtual operations 
virtual operations represent basic operations self sufficiency workers senior citizens need deal area aging agency 
important feature virtual operations related priori existing web mourad ouzzani chapter 
web services query model services 
crucial web services continuously evolving system looking best deals users queries 
designer defines set relations 
relations tailored particular user group interested specific part service space adding conditions composing virtual operations example citizens access set virtual operations self sufficiency workers 
users pose queries relations 
level query scheme senior citizens scenario illustrate level scheme senior citizens scenario 
example self sufficiency worker get services providing meals area fulfilling conditions price quantity simply formulating query uses relation meals 
relation mapped correspond ing virtual operations 
virtual operations mourad ouzzani chapter 
web services query model matched various operations concrete level 
exam ple matched operations potential web services 
mapping relations virtual operations relations query level define specific view application domain 
obtained invoking virtual operations 
represent conjunctive queries virtual operations 
virtual operations viewed relations 
precisely set relations defined query level vop set virtual operations 
definition relation ri ri xn opj yj xi attributes ri opj vop yj input output variables corresponding operation 
ck represent conditions variables appearing different virtual operations opj 
form ck op input output variable opj constant op 
transcription implication arrow 
means get ri need invoke different operations opj 
part referred head part body 
refers conjunction usually replaced comma sign 
multiple occurrences variable express equality 
different sets relations defined query level set virtual operations 
definition relations conjunction operations mandate order invocation 
order obtained processing optimization phase complete queries 
enables flexibility deciding ck mourad ouzzani chapter 
web services query model web services solve query 
example mapping rule meals zipcode area rice ype rice zipcode area area view relation meals defined virtual operations returns meals delivery service operating certain area returns meals providers 
area list delivery service operates 
mapping rule states conditions sure meal delivery service serves area includes meal provider zipcode specified relation 
users may directly virtual operations access web services 
relations benefits allows definition natural way formulate submit database queries concept relations assimilated relations databases 
addition provides view tailored particular group users interested specific part service space 
virtual operations representation virtual operation appearing query need locate relevant concrete operation priori unknown service space 
matching virtual concrete operations occur fully automated way 
description virtual operations contain information decide match possible 
time flexible allow wide range concrete operation selections 
purpose semantic description required addition syntactic attributes 
mourad ouzzani chapter 
web services query model assume business partners agree common ontology 
com mon ontology description concrete web services virtual opera tions 
ontology description web services described adopted 
ontology specified daml oil 
assume oper ation virtual concrete semantically described category function 
function contains attributes functionality synonyms 
func tionality represents business functionality provided operation 
examples functionalities include eligibility screening listing 
synonyms attribute contains list alternative functionality names operation 
example eli screening synonym eligibility check 
category contains attributes domain synonyms 
domain gives area interest operation 
exam ples domains include food legal counseling 
synonyms attributes similar defined operation purpose 
web services concrete operations described wsdl 
wsdl provide support semantic description 
assume different semantic attribute added wsdl description advertised service registry web service example uddi tmodels 
important aspect web services able invoke opera tion necessary provides values input variables 
formulating queries users free specify type conditions different variables 
may lead scenario system invoke operations due missing values input variables 
propose specify part virtual operation descrip tions possible values range input variables may possible input variables 
means query processing input variable range expanded possible values depending condition involved 
operations variables play role input output 
mourad ouzzani chapter 
web services query model may situations web services offering similar functionalities variable input web services output 
example transportation services may specify variable related pricing type ride monthly input case output 
way enhance flexibility virtual operations allowing possible concrete operations matches propose define variables input output 
processing time actual web services located matched virtual operations actual nature input output variables determined 
definition virtual operation formally represented quintuple op inout domains category set input variables set output variables inout set variables may input output domains set pair range enumerable variable appearing range set possible values category describes domain interest describes business function 
example virtual operation attributes inout domains category rules price inout domains category travel transportation listing fares 
mourad ouzzani chapter 
web services query model queries specification queries formulated relations query level 
usually users pose queries user friendly graphical user interface 
queries manipulated internally query infrastructure conjunctive queries 
definition conjunctive select project join query general form ri xi ri relations query level 
xi tuples variables xi 
ck represent conditions variables appearing query 
form ck op input output variable appearing xi constant op 
illustrate query model need information services expressed simple declarative queries examples senior citizens scenario 
loss generality different operations expressed directly virtual operations 
query bearing relations easily transformed query bearing virtual operations simply applying different mapping rules defined application 
table outlines sample virtual operations defined senior citizen application 
different potential queries maria self sufficiency worker may submit 
example maria looking best web services transportation service art gallery service 
may submit different queries service single query need necessarily invoked 
case may take advantage potential discounts may offered art gallery partnership transportation service 
ck mourad ouzzani chapter 
web services query model table sample virtual operations senior citizens scenario operation input output explanation transportation rules price get transportation services provided zip codes 
returned information includes rules service price pricing policy ride month zipcode provide information art gallery zip code meal price returns type price meals food providers zip code area provides delivery services area 
price capacity provides group transportation zipcode provides hours operation activity center individual selection web services 
query rules price transportation rules price price query zipcode zipcode zipcode mourad ouzzani chapter 
web services query model individual selection web services combined selection web services 
query rules price zipcode transportation rules price zipcode price zipcode example maria looking best combination web services meet needs 
combined selection web services needs take account potential relationships 
query zipcode area zipcode area area zipcode mourad ouzzani chapter 
web services query model query rules price zipcode price transportation price zipcode zipcode combined selection web services query zipcode area zipcode zipcode area area best combination discount relationships senior citizen assume self sufficiency worker looking best providers carrying group senior citizens specific event certain activity center 
mourad ouzzani chapter 
web services query model query price capacity price capacity zipcode price zipcode zipcode capacity best combination discount relationships self sufficiency worker post conditions queries users priori specify kind conditions queries 
generally conditions checked related operations invoked 
non fulfillment condition specific web services mean necessarily web services fulfill 
may mourad ouzzani chapter 
web services query model need lookup concrete operations virtual operation invoke times getting right match concrete operation meets conditions 
examples conditions may concern capacity price transportation service hours operation food provider delivery time certain goods 
note situations non fulfillment post condition may require look web service 
includes situa tions unique match virtual operation matched single concrete op eration 
outcome outcome regardless concrete operation 
user requirement user sets limit invocation virtual operation 
multi level matching virtual operations fast proliferation web services different providers expected compete offerings 
offer similar functionalities differently 
differences may occur required input returned output quality service means possible find exact match virtual operation 
addition users may willing accept similar close answers 
trying find concrete operations match exactly virtual operations appearing query propose flexible matching scheme virtual concrete operations attributes may differ 
scheme generates different levels precision matching process 
mourad ouzzani chapter 
web services query model define function similar check attributes appearing operations 
similar rue correspond concepts respect common ontology defined application domain 
operations op op op op op op number variables ii op resp 
op op resp 
op similar rue 
op op defined similarly 
define op op op op similar way set subset second set 
op virtual concrete operations respectively 
identified different matching levels obtained varying way attributes virtual concrete operations compared 

exact match concrete operation matches virtual operation re spect attributes 
operations match exactly input output variables category respectively 

overlapping match relates operation offering close functionalities virtual operation 
operations overlap input output variables category defined common ontology overlap 

partial match corresponds case input output attributes operations coincide 
operations op match partially category respectively op op example subset relationship operation return output attributes expected virtual operation 
mourad ouzzani chapter 
web services query model 
partial overlap match level combination overlap partial matches 
operations op match partially overlap op op category attributes overlap 
assign matching degree level 
quantifies precision matching 
matching degree direct impact quality query results 
compute matching degree matched concrete operation matching level 
define matching degrees levels respectively 
values arbitrary 
main goal distinguish different matching levels 
may changed depending intended impact degrees optimization process 
level model reconfiguration system evolves definition different entities constituting service schema may fine tuned better reflect users needs 
especially case definition virtual operations 
service space highly volatile web services operations may subject frequent changes due market fluctuations changes regulations maintain competitive advantage 
may lead virtual operations matched concrete operation matching levels defined 
new interesting web services may available 
concrete operations matched existing virtual operations way 
addition relations mapping rules may properly serve users 
due constraints expanding users needs new regulations users may need different relations 
support evolution system propose semi automatic mourad ouzzani chapter 
web services query model level model 
mainly collecting information failed queries partial overlap matches poor quality service execution plans 
collected information service schema designer modify entities 
collect usage patterns users feedback system suggest changes query level 
events may trigger change level query model 
virtual operation long time period 
large number queries specific relations virtual operations succeed 
chapter quality web service aware optimization due large space competing web services query potentially solved service execution plans different web services 
necessary set appropriate criteria select best service execution plan pos sible 
literature shows quality service quality web service qows individual web services crucial competitiveness 
addition increasing need provide acceptable qows web applica tions 
concept qows capture accurately users applications requirements efficiency query optimization web 
chal define appropriate metrics characterize qows devise techniques optimizing service queries 
approach qows encompasses number quantitative qualitative parameters non functional properties measure web service performance delivering functionalities 
mourad ouzzani chapter 
quality web service aware optimization start defining comprehensive model qows context web services 
define qows parameters individual web services service execution plans composed web services 
qows parameters may subject various fluctuations web service life time propose monitoring scheme assess qows advertised service providers actual behavior 
algorithms optimize queries proposed qows model presence different constraints 
see constraints task finding optimal service execution plan extremely challenging 
quality web service model concept quality service context networking multimedia applications 
quality service defined collective effect service performance determines satisfaction user service 
characterized combined aspects performance factors applicable services 
certain extent definition holds context query infrastructure 
case web services need go classical system centric quality 
different aspects influence user experience web service taken account 
section define different qows parameters web services service execution plans categorize behavioral aspects characterize 
mourad ouzzani chapter 
quality web service aware optimization quality web service parameters assume web service advertise qows parameters service registry example uddi 
parameters applicable types web services 
addition parameters may computed query infrastructure obtained third parties rating systems epinions com reputation parameter 
way parameters specified scope 
focus defining parameters context optimization 
definition qows web service vector qows parameters 
qows parameter defined couple name value 
name name qows parameter 
value na parameter applicable web service value obtained 
value may represent probability scalar enumeration 
assume meaning qows parameters common web services 
qows generic domains application specific 
example response time latency inherent operation tion 
transportation service characterized time rate 
clearly applicable web service 
focus generic parameters 
model easily extensible include application spe cific parameters 
consider main categories generic qows depending behavior web service characterize computational behavior business behavior 
mourad ouzzani chapter 
quality web service aware optimization computational qows quality web service categories computational qows characterizes various aspects related invoking web service operations perceived service consumer 
organized sub categories execution includes performance parameters interacting web service 
consider parameters latency latency represents average time operation return results invocation 
availability represents probability service available 
large values mean high availability 
small values indicate low availability 
avail mourad ouzzani chapter 
quality web service aware optimization ability defined property system ready immediately 
general refers probability system operating moment available perform functions behalf users 
words highly available system working instant time 
accessibility represents degree web service capable serving request 
may measured ratio number requests sent web service number requests effectively served 
situations web service available accessible 
security relates ability web service providing appropriate security mechanisms 
parameters considered equal encryption web service supports encryption messages received sent 
authentication web service provides mechanisms identify invoking party service consumer allow operation invocation 
access control web service supports access control re operation invocation access information authorized par ties 
privacy relates ability web service preserving privacy submitted information 
includes parameters equal 
privacy policy specifies web service privacy policy 
information sharing specifies web services shares collected information third parties 
mourad ouzzani chapter 
quality web service aware optimization information disclosure specifies web service asks explicit permission disclose information third parties 
business qows business qows includes parameters usage fee represents units money consumer web service needs pay web service invoke operations 
reputation measures reputation web services user feed backs 
users prompted rate web services scale querying session 
reputation corresponds average collected ratings 
previous parameters classified negative positive parameters 
negative parameters higher value worse quality 
include latency usage fees 
positive parameters lower value worse quality 
include availability accessibility reliability authentication encryption access control privacy policy information sharing information disclosure reputation 
table summarizes different qows parameters 
discount relationships era high competition shared interests case differ ent service providers engage partnerships 
partnerships usually translated offering privileges customers partners achieving needs 
case query infrastructure means user mourad ouzzani chapter 
quality web service aware optimization category sub category table quality web service summary parameter definition potential values computational execution latency average response time scalar availability probability web service ready immediate accessibility ratio served received requests security encryption support message encryption authentication support authentication invoking party access control restrict operation invocation information access privacy privacy policy provide privacy policy information sharing share collected information information disclosure ask permission disclose information business usage fee cost invoking operations scalar reputation reputation obtained user feedbacks get better qows query resolved specific web services 
example scenario caring needs maria required types services meals provider meals delivery senior nutrition program 
case individual providers type selected way optimizes combination 
instance choice meal home meals provider may reduce costs combined meals meals delivery provider 
providers business partnership pro mourad ouzzani chapter 
quality web service aware optimization vide discounts common customers 
concept captured definition 
definition service provider sp discount relationship service provider sp discount sp sp qows parameter pi sp pi discount dv sp sp solve query 
dv default value parameter pi 
discount pi negative parameter discount pi positive parameter 
cases new values better 
service provider may engaged discount relationship 
case best discounted value qows parameter partner involved resolving query 
loss generality assume discount relationship non symmetric 
value discount decided partners advertised corresponding qows service registry 
web services monitoring web services dynamic independent entities offering miscellaneous functional ities web 
functionality web services may compete offerings 
key difference functionalities delivered terms qows 
getting right value qows parameter easy trivial task 
context monitoring web services behavior crucial calculating qows parameters values assessing web service claim terms promised qows 
objective monitoring rate behavior web service delivering functionalities terms qows parameter 
monitoring may take different forms depending qows parameter 
mourad ouzzani chapter 
quality web service aware optimization include message interception probing user feedback 
allow probing assume web services support free operations invoked effect invoker 
ideally web services support ping operation 
avoid high overhead system monitoring conducted periodically 
qows subjected monitoring due nature limitations explain reason 
monitoring process rating web services require collecting different information depending qows considered 
execution parameters monitoring latency actual latency values collected operation invocation average computed time period lat 
availability web service periodically 
failed succeeded pings recorded time period av 
ratio calculated recorded values discarded 
accessibility number successful failed operation invocations accu 
ratio computed time period acc collected values discarded 
security parameters monitoring idea detect security breach terms parameters 
web service claim regards parameters mourad ouzzani chapter 
quality web service aware optimization monitored 
usually operations invoked proper security credentials 
may cases requirement violated 
encryption occurrence successful operation invocation un encrypted messages recorded 
average number occurrences computed time period enc 
authentication successful operation invocation proper cation recoded 
average number occurrences computed time period aut 
access control successful invocation restricted operations recorded 
average number occurrences computed time period act 
privacy parameters monitoring privacy parameters may easily monitored looking individual operation invocation probing web services 
need determine web service violated claims terms privacy parameters 
finding violations require complex mechanisms similar described 
mechanisms scope 
just briefly describe needs checked 
privacy policy adherence web service content privacy policy monitored 
information sharing need find web service disclosed information third parties 
mourad ouzzani chapter 
quality web service aware optimization information disclosure need find web service disclosed information third parties proper permissions 
business qows usage fee usage fee generally change published value actual value invocation time 
may cases may happen 
case compute difference values 
reputation parameter computed query infrastructure 
subject monitoring 
value different time periods pi frequency different infor mation collections depend mainly qows monitored application domain 
example value fee long changes fees occur frequently 
addition load query infrastructure high short time periods may sufficient monitoring message interception latency accessibility 
table summarizes monitoring conducted qows parameter 
ratings general idea rating web services compute qows distance qows parameter quantifies web service behavior delivering promised qows 
distance depends qows meaning parameter negative positive advertised promised value information collected monitoring 
value distance mourad ouzzani chapter 
quality web service aware optimization sub category table quality web service monitoring parameter methodology collected information execution latency messages interception availability probing pinging accessibility messages interception security encryption messages interception authentication messages interception access control messages interception privacy privacy policy applicable applicable information sharing applicable applicable information disclosure applicable applicable average actual latencies lat ratio successful pings total number pings av ratio successful invocations total number invocations acc average number successful encryption breaches enc average number successful authentication breaches aut average number successful access control breaches act business usage fee values collection difference advertised requested fees reputation applicable applicable increase decrease rating assigned qows 
formulas give parameters subject monitoring 
lat av sav acc sacc enc aut mourad ouzzani chapter 
quality web service aware optimization act effectively requested loss generality assume ratings take values interval 
sake homogenization fairness parameters subject monitoring assigned fixed rating highest value 
web services receive initially highest ratings qows 
query infrastructure evolves qows available corresponding rating re evaluated 
general idea goes certain thresholds rating increased decreased certain amount 
reflects bad web service behaving terms providing promised qows 
note increase decrease rating bound maximum minimum values 
summarize rating computed 
max lat lat min lat lat max av av min av av max acc acc min acc acc mourad ouzzani chapter 
quality web service aware optimization max enc enc min enc enc max aut aut min aut aut max act act min act act max fee fee min fee fee ratings mainly weigh qows determining optimal service execution plan 
play important role objective function 
rating scheme evolves way privileges web services respect promises terms qows 
dynamic nature gives chance web services low ratings catch 
web services may improve ratings changing promised qows putting efforts achieve 
fine tuning monitoring proposed monitoring ratings produces depend parameters 
include monitoring methods message interception probing 
values mourad ouzzani chapter 
quality web service aware optimization collection policy number values collected collection frequency threshold values distance checks 
parameters determine degree tolerance conduct monitoring rating 
aggressive approach example conducting frequent probing allowing small thresholds may deliver precise ratings 
may put important burden query infrastructure need spend resources rating web services serving users 
tolerant approach put burden query infrastructure delivers poor quality ratings 
follow approach qows parameters 
example may tolerant terms availability reluctant tolerate degradation privacy latency 
fair approach configurable monitoring approach 
case different parameters adjusted depending requirements terms rating precision application 
service execution plan queries expressed relations query level 
subject transformations outlined obtaining service execution plan contains concrete operations order need invoked 
answering query requires accessing web services 
operation invocations may occur sequence parallel depending potential constraints may exist different operations 
represent service execution plan directed graph 
allows express sequence concurrency operation invocations 
definition service execution plan sep represented directed graph mourad ouzzani chapter 
quality web service aware optimization query transformations called execution graph 
ops opt op op set opera tions invoked service execution plan 
ops opt special nodes correspond actual operation 
represent starting termination sep set edges represent control flow sep edge drawn node opi node opj opj executed opi 
operations connecting paths executed concurrently 
operation dependencies operation needs invoked necessary input variables available bound 
capture requirement defining operation dependency set containing operations output variables input variables operation 
example op op op dependency op op op op op 
notations means input variable means output variable 
bound variables provided query available operations 
op mourad ouzzani chapter 
quality web service aware optimization erations draw required input bound variables specified query invoked service execution plan 
definition operation op define dependency set dependency op opi output opi input op 
dependencies define dependency graph query directed graph initially built binding requirements virtual operations 
query processed graph updated reflect dependencies concrete operations 
graph easily know operations missing input variable 
definition query define dependency graph 
op 
represents node acting operation output variables bindings provided initially query 
op represents node acting operation provide output variable 
vertices different operations query including op 
edges represent dependency relationships operations 
edge drawn opi opj opi dependency opi 
edge drawn op opi opi requires input variable provided node graph 
straightforward dependency graphs check query answerable binding requirements 
example represents de graphs may answerable may 
query non answerable instruct service locator match corresponding virtual operation edge op concrete operation require missing input variables 
may lead exact answer query 
partial close answers may acceptable user 
mourad ouzzani chapter 
quality web service aware optimization op op op op op op dependency graph op op op op op op op op dependency graphs feasibility service execution plan op op dependency graph main concern optimizer find best service execution plan necessary sure plan effectively executable feasible 
context query infrastructure sure operation ready invoked output variables available bound 
addition web service selected discounted qows need sure partner web services effectively resolution query 
specify conditions need fulfilled feasible service execution plan 
definition service execution plan feasible operation opi sep required input bindings opi available opi ready invoked ii web service selected discounted qows partners discount relationship sep op op op mourad ouzzani chapter 
quality web service aware optimization quality web service service execution plans web service wsi characterized vector qows parameters wsi lat wsi av wsi acc wsi enc wsi aut wsi act wsi pp wsi wsi id wsi fee wsi rep wsi 
lat latency fee usage fee take scalar values 
av availability acc accessibility represent values real value 
enc tion aut authentication act access control pp privacy policy information sharing id information disclosure boolean values 
rep reputation ranges interval 
need compute qows parameters entire service execution plan 
meaning qows define aggregation functions compute qows service execution plans 
assume web services inde pendent respect qows 
allow easily aggregate parameters representing probability 
assume service execution plan contains operations 
latency web services may accessed concurrently need determine longest path respect latency execution graph starting nodes 
latency service execution plan corresponds sum latencies web services executed sequence path 
availability service execution plan depends availability web services accesses 
availability corresponds probability web services available 
assume web services independent terms qows equal av wsi 
mourad ouzzani chapter 
quality web service aware optimization accessibility accessibility computed similarly availability 
corresponds probability web services accessible acc wsi 
encryption qows takes boolean value individual web services 
assume service execution plan value encryption web service value consider ratio encrypted web services 
options may desirable 
leave user query infrastructure administrator select option 
authentication parameter treated similarly encryption 
access control parameter treated similarly encryption 
privacy policy parameter treated similarly encryption 
information sharing parameter treated similarly encryption 
information disclosure parameter treated similarly encryption 
usage fee accessing web services appearing service execution plan requires paying access fees 
parameter corresponds sum usage fees invoked web services fee wsi 
reputation reputation service execution plan depends rep web services 
parameter corresponds average reputation invoked web services rep wsi 
table summarizes different aggregation functions compute qows parameters service execution plan 
mourad ouzzani chapter 
quality web service aware optimization table quality web service service execution plan qows parameter latency aggregation function latency wsi availability wsi max av wsi accessibility encryption authentication access control privacy policy information sharing information disclosure usage fee reputation acc wsi enc wsi aut wsi act wsi pp wsi wsi id wsi enc wsi aut wsi act wsi pp wsi wsi id wsi fee wsi rep wsi processing optimizing web service queries selecting optimal service execution plan core query infrastructure 
challenging task exacerbated large number competing web services mourad ouzzani chapter 
quality web service aware optimization optimizer need select 
different service execution plans different web services solve query 
may differ qows deliver 
differences orders magnitude large 
necessary devise appropriate techniques select best execution plan 
requires define cost model compare service execution plans solving query 
need build search strategies cost model 
cost model propose cost model mainly concept qows introduced earlier 
general idea define constitutes optimal service execution plan qows 
service execution plan built mapping relations virtual operations locating actual web services concrete operations matched virtual operations combining different operation invocations way answer query 
step straightforward involve optimization decision 
steps key producing optimal plan 
hand users may preferences queries answered 
may specify part query qows parameters important important 
done assigning weights ranging qows parameter 
obviously query infrastructure consider default values weights user specify 
aggregating qows service execution plan approach rank service execution plans qows individual web services aggregate qows parameters single formula 
interesting mourad ouzzani chapter 
quality web service aware optimization method simple additive weighting widely decision making 
ranking results usually close results sophisticated methods 
method comprises basic steps applied qows potential plan scale different parameters qows comparable ii apply user supplied weights parameter iii sum weighted scaled qows parameters 
service execution plans ranked scores obtain step 
cost model scores obtained simple additive weighting method 
objective function defined service execution plan sep follows sep qi neg qmax service execution plans matching degrees max max qi qi pos qi qmax maximum value th qows parameter potential minimum 
virtual operations matched concrete ones different match ing defined chapter 
level delivers different matching precision assign matching degree level quantify precision 
define matching degrees levels respectively 
values arbitrary 
main goal distinguish different matching levels 
may changed depending intended impact degrees optimization process 
define matching degree service execution plan average matching degrees concrete operations 
values different matching degrees may application specific respect users needs intended impact optimization 
matching degrees returned query results giving users mourad ouzzani chapter 
quality web service aware optimization hints query processed 
user accept reject results 
better approach send matching degrees invoking operations 
way user may decide query starts execution 
matching degrees include part cost model 
example object function matching degrees introduced directly formula computation different service execution plan 
case objective function md sep matching degree sep qmax qi qi neg max qi pos qi qmax second case objective function 
neg ative qows value computing aggregated qows sep replaced wsj matching degree wsj web services wsj sep positive qows value computing aggregated qows sep re placed wsj matching degree wsj web services wsj sep corresponding values lowered increased reflect effect matching level 
ratings part query approach web services monitored rated behavior terms delivering promised qows 
ratings included cost model enable adjusting advertised qows actual behavior web services 
matching degrees included objective function directly formula computation different qows service execution plan 
case approximate mourad ouzzani chapter 
quality web service aware optimization rating service execution plan average ratings web services plan 
case qows individual web services weighted ratings computing qows service execution plan corresponding aggregation functions 
negative qows value computing aggregated qows sep replaced wsj rating wsj web services wsj sep positive qows value computing aggregated qows sep replaced wsj rating wsj web services wsj sep corresponding values lowered increased reflect effect ratings 
optimization problem specification previous discussion specify targeted optimization prob lem 
query expressed relations find operations form feasible service execution plan sep maximizes objective function sep qi neg wi max max qi qi pos wi qi qmax neg pos set negative positive qows respectively 
wi weights assigned users parameter 
qi value th qows service execution plan obtained aggregation functions table adjusted ratings matching degrees obtained individual web services forming plan 
qmax potential service execution plans maximum value th qows parameter minimum 
values computed considering matching concrete operations highest lowest values th qows adjusted ratings matching degrees 
generate potential execution plans 
elect include ratings matching degrees computing qows give accurate evaluation mourad ouzzani chapter 
quality web service aware optimization service execution plans provide precise comparison optimization purpose 
query optimization outline optimization strategies loss generality assume query contains virtual operations virtual operation matched concrete operations 
nutshell optimization strategy consists selecting virtual operation concrete operation potential concrete operations 
making sure web service selected discounted qows partner plan 
ordering concrete operations way obtained plan feasible 
mourad ouzzani chapter 
quality web service aware optimization straightforward solutions optimization problems exhaustive search local selection 
exhaustive strategy generate possible service execution plans select best 
obviously strategy optimal plan 
achieved prohibitive cost 
assume query translated virtual operations virtual operation matched concrete operations 
total number potential service execution plans case computation cost ex approach 
clearly option consider expanding service space single functionality offered large number web services 
local selection strategy best concrete operation operations qows selected virtual operation query 
strategy may lead sub optimal solutions constraints need enforced 
especially true case discount relationships need check concrete operations fact respective web services involved discount relationship selected service execution plan 
faced optimization problem large number solutions order 
issue select optimal near optimal solution realistic time scale 
means time needed examine solutions 
algorithms take account presence spe cific constraints binding requirements discount relationships 
algorithms designed way find balance finding optimal plan processing query acceptable time 
comparison purpose start lining algorithm exhaustive strategy support type constraints 
algorithm serves check far algo rithm missing optimal plan 
important experimenting different algorithms 
mourad ouzzani chapter 
quality web service aware optimization exhaustive algorithm experimental purposes consider case optimization algorithm exhaustive search 
algorithms compared check optimal plan far 
exhaustive algorithm starts searching potential concrete operations match virtual operation query 
computes qows possible service execution plans located concrete operations account discount relationships corresponding web services 
account discount relationships increases number potential service execution plans web services may different qows 
mourad ouzzani chapter 
quality web service aware optimization exhaustive algorithm input conjunctive query rn xn cm output feasible optimal service execution plan 
initialization ri op op obtained mapping rule ri endfor computation potential service execution plans opi get concrete operations matching opi opi null return query answerable endif endfor lan initial value objective function lan lan lan loop plans generate get potential plan lan lan current potential plan feasible better quality replace current best plan feasible lan lan lan lan lan lan lan endif endwhile build execution graph binding requirements lan return return lan exhaustive algorithm consists main phases 
phase set virtual operations obtained mapping rules relations appearing query 
fact algorithms need go initialization phase 
second phase potential service execution plans generated compared objective function defined 
service execution plan greater value function current best plan mourad ouzzani chapter 
quality web service aware optimization selected feasible 
third phase builds execution graph best service execution plan 
query answerable empty set returned 
selecting optimal plan presence binding re algorithms process queries web services focus respecting binding requirements different operations 
algorithms sequence operation invocations binding requirements local selection optimization 
best concrete operation qows selected virtual operation simple additive method described section service execution plans matching degrees ratings 
call algorithm simple sequencing second dg algorithm dg refers dependency graph 
major differences algorithms simple sequencing algorithm may invoke lookup function times getting best concrete operation violate binding requirement 
dg algorithm uses dependencies virtual operations request concrete operations exact required binding requirements input output 
algorithms base optimization individually selecting best match concrete operation virtual operation appearing query take account discount relationships 
mourad ouzzani chapter 
quality web service aware optimization simple sequencing algorithm simple sequencing algorithm input conjunctive query rn xn cm output feasible efficient service execution plan initialization bindings set bound variables initially bound variables specified query virtual operations initially empty sequence sets operations 
operations set invoked concurrently requirement ri query unfolding op op obtained mapping rule ri endfor virtual operations ordering number sets seq op op bindings seq seq op endfor seq return query answerable seq seq bindings bindings op op seq endwhile service discovery operations matching op lookup op null return query answerable op op op goto lookup get invocation subsequent operations replace op endfor endfor build execution graph sequence binding requirements return mourad ouzzani chapter 
quality web service aware optimization simple sequencing algorithm consists phases 
phase self explanatory 
set contain result algorithm 
set virtual operations obtained mapping rules relations appearing query 
second phase virtual operations selected invoked available bindings 
operation invoked query answerable 
selected virtual operations added available bindings updated 
third phase virtual operations replaced concrete operations making sure obtained sequence feasible available bindings 
function find match virtual operation query answerable 
function returns partial match concrete operation returns fewer output variables algorithm checks virtual operation sequence inputs depend missing outputs 
lookup function called find different match 
virtual operation replaced corresponding concrete operation 
fourth phase builds execution graph function returns concrete operation highest value objective function applied individual operation 
starts looking relevant web services available service registries category attributes virtual operation 
returned web service de scription searched operations match virtual operation different levels previously defined 
function selects operation highest value objective function belong second argument 
mourad ouzzani chapter 
quality web service aware optimization dependency graph algorithm dg algorithm input conjunctive query rn xn cm output feasible efficient service execution plan dg 
initialization virtual operations initially empty query unfolding ri op op obtained mapping rule ri endfor dg dependency graph building binding requirements determination operation lookup dg cset cset set concrete operations invoked concurrently op st order op corresponding concrete operation require missing input variables missing input op dependency op missing input label op op missing input provide output required subsequent neighbors required output op subsequent neighbor op dg label op op locate best concrete operation matches vop require missing input provide required output op missing input required output replace op dg update dg subsequently return answerable endfor endfor return dg dg algorithm consists phases 
phase self tory 
set contain result algorithm 
set virtual operations obtained mapping rules relations appearing query 
step phase builds dependency graph dg virtual operations available bindings see definition 
second phase dependency mourad ouzzani chapter 
quality web service aware optimization graph traversed ascending order nodes maximum der graph 
virtual operation determine input requirements obtainable node missing input output requirements required output required subsequent neigh graph 
function invoked return best concrete operation matches virtual operation require missing input provide required input 
match query answerable 
located concrete operation inserted current set cset operations invoked concurrently 
updated dependency graph returned 
selecting optimal plan presence discount re main issue optimizing queries presence discount relationships sure partners plan 
means web service selected discount value qows partner discount relationship selected 
optimizer faced global constraints call presence test checked service execution plan 
case algorithms flavors 
algorithm local bi selection 
second algorithm iterates initial service execution plan replacing concrete operation finding feasible plan satisfies presence test reach threshold 
choice concrete operation replace may done different replacement policies 
address issue binding requirements build dependency graph virtual operations 
lookup look concrete operations satisfy input requirements specified dependency graph 
mourad ouzzani chapter 
quality web service aware optimization local bi selection algorithm local bi selection algorithm input conjunctive query rn xn cm output feasible efficient service execution plan 
initialization set virtual operations set concrete operations selected discounted qows partners plan set missing partners ri op op obtained mapping rule ri endfor dg local selection op lookup best cop account discount relationships op cop partner cop null return query answerable endif cop cop remove corresponding partners op op partner cop endif dg dg cop update dg replacing vop cop partner partner dg cop partner endif endfor second local selection cop remove cop partner op cop get virtual operation corresponding cop lookup best cop considering discount relationships op cop cop cop remove corresponding partner endif dg dg cop cop update dg removing cop replacing cop endfor return dg mourad ouzzani chapter 
quality web service aware optimization local bi selection algorithm main phases 
phase local selection conducted account discount relationships 
virtual operation replaced best concrete operation objective func tion applied individual operations 
returned concrete operation may require presence partner test partner 
test located concrete operation partner previous concrete operations 
second phase concrete operation missing partners replaced concrete operation require 
operation best match selected account discount relationships 
fi nally dependency graph representing service execution plan returned 
efficiency reasons assume functions share common information avoid extra computations 
iterative algorithm iterative algorithm contrast bi selection algorithm keeps trying finding feasible plan account discount relationships 
iterative algorithm input conjunctive query rn xn cm output feasible efficient service execution plan initialization set virtual operations set matching concrete operations set concrete operations selected discounted qows partners plan set missing partners ri op op obtained mapping rule ri endfor dg local selection op op cop partner lookup best concrete account discount relationships mourad ouzzani chapter 
quality web service aware optimization cop null return query answerable endif cop cop remove corresponding partners op endif dg dg cop update dg replacing op cop partner partner cop partner endif endfor iterative selection form iterate finding feasible solution reaching threshold sort sort facilitate subsequent selection concrete operations threshold remove concrete operation may effect qows cop get virtual operation corresponding concrete operation op cop op cop partner get best concrete cop null concrete operation match return give query may answerable endif cop cop remove corresponding partner endif dg dg cop cop update dg removing cop replacing cop partner partner dg cop respect sort updating partner endif threshold threshold endfor return execution graph return dg return query threshold reached endif mourad ouzzani chapter 
quality web service aware optimization usual initialization phase iterative algorithm local selection service execution plan 
plan feasible respect discount relationships partners missing algorithm goes iterative process simple heuristic 
algorithm selects concrete operation having missing partner may effect qows 
replaces best match 
process repeated feasible plan threshold reached 
threshold set way total computation time acceptable users 
efficiency reasons assume functions shared common information avoid extra computation 
small modification iteration phase previous algorithm 
replacing concrete operation concrete operations set replaced 
iterative selection second form iteration finding feasible solution reaching threshold different replacement policy threshold cop get virtual operation corresponding concrete operation op cop op cop partner get best concrete operations dg dg cop cop update dg removing cop replacing cop cop cop remove corresponding partner endif partner cop partner cop partner cop endif endfor endwhile mourad ouzzani chapter 
quality web service aware optimization simulated annealing algorithm simulated annealing optimization method correspondence complex optimization problems statistical mechanics 
underlying idea controlled perturbation updating solution avoid trapping local global optimum 
perturbation reduced optimality solution improves global optimum determinism recovered solution remains optimal 
simulated annealing relies scheme acceptance rejection small change state system known metropolis algorithm downhill moves occur probability unity uphill moves probability proportional difference boltzmann weights 
simulated annealing algorithm optimize queries web services 
initial solution obtained local selection consid ering discount relationships making sure binding requirements satisfied 
current solution starting initial perturbed changing concrete operation virtual operations 
new service execution plan tested feasibility terms binding requirements discount relationships 
feasible plans considered 
objective function computed new plan 
compared current 
current execution plan replaced new leads better solution replacement takes place probability exp sep sep defined simulated annealing algorithm 
mourad ouzzani chapter 
quality web service aware optimization simulated annealing algorithm input conjunctive query rn xn cm output feasible efficient service execution plan initialization set virtual operations ri op op obtained mapping rule ri endfor dg local selection op op cop lookup best concrete operation account discount requiring exact match dg dg cop endfor annealing iterations tf max iteration dg perturb dg dg dg exp dg dg random dg dg endif endfor endwhile return dg simulated annealing algorithm main phases 
usual ini phase initial feasible solution built local selection ignoring discount relationships 
third phase algorithm continuously iterates perturbing initial solution reaching final temperature tf 
algorithm guaranteed current temperature decreased cooling rate 
parameters need determined algorithm 
include initial temperature final temperature tf number iterations mourad ouzzani chapter 
quality web service aware optimization max iteration cooling rate alpha perturbation function 
current solution need identify appropriate way modify solution making sure feasible discount relationships binding requirements 
feasibility check may require looking potential service execution plan 
kind perturbation applied need characterize neighbourhood structure execution plan 
done example selecting random number virtual operations seek matching concrete operation 
options decide concrete operation take randomly pick concrete operation potential matches vop ii get best cop 
selecting optimal plan presence post conditions conditions expressed query checked web service invoked 
non satisfaction conditions necessarily mean satisfied cases 
web services offering similar functional ities may different outcomes conditions 
example case different transportation choices senior citizen scenario depicted 
different prices pricing modes may obtainable front dif ferent web services available actual operations invoked 
optimizer provide mechanisms check conditions runtime eventually replace web service may caused non satisfaction conditions 
done ensuring optimization 
propose technique compensate undo re optimize 
idea query optimized algorithms 
runtime post condition fails need determine operations undo 
mourad ouzzani chapter 
quality web service aware optimization simple solution select operations providing output condition 
possible query stopped user informed 
execution suspended remaining part service execution plan re optimized algorithm initially 
execution resumed re optimization step 
note operation involved may possible select get failed condition new operations 
chapter implementation experiments chapter report implementation experiments query infrastructure web services 
implementation conducted context webdg digital government prototype development virginia tech 
webdg provides access government databases services related social services 
prototype webdg supports access government services 
represent large number web services available web 
necessary asses approach experiments synthetic data 
major objective measure cost different algorithms quality service execution plans generate 
focus computing time takes algorithm reach decision 
quality results simply objective function defined service execution plan section 
different results compared different scenarios constraints 
mourad ouzzani chapter 
implementation experiments webdg web service infrastructure digital government government project indiana family social services administration department aging 
provides welfare programs assist low income citizens strengthen families children help elderly disabled people 
department aging focuses senior citizens seeking support social benefits 
process collecting social bene fits agencies currently time consuming frustrating 
citizens visit different offices located outside 
case officers need delve myriad applications depending specific citizens situations 
situation manually determine applications appropri satisfy citizens needs ii determine access application iii combine results returned different applications 
interactions conducted making sure citizens information unauthorized entities 
difficulty obtaining needed help hinders ability citizens self dependent consequences health 
facilitate welfare applications satisfy citizens needs wrap applications web services 
adopting web services government enables standardized description discovery invocation welfare programs ii efficient querying web services iii composition pre existing services provide value added services iv uniform handling privacy issues 
development techniques efficiently access government services preserving citizens privacy core project 
chapter describe ongoing project virginia tech family social services admin state indiana 
mourad ouzzani chapter 
implementation experiments design implementation infrastructure government services called webdg web digital government 
organizing web services webdg interactions webdg services involve types participants provider registry consumer 
providers divisions bureau family resources different area agencies aging external agencies department health human services 
define descriptions services operations network location publish registry 
consumers access registry locate services interest 
include citizens case officers government services 
registry returns description relevant service 
consumers description understand corresponding web service 
webdg services described wsdl web services description language standard describing operational features web services 
operation modes way notification request response solicit response 
way notification operation service receives sends message 
request response solicit response operation service receives sends message sends receives correlated message 
example wic service offers request response operation 
operation receives message including citizen income family size 
returns message indicating citizen eligible wic program 
wsdl descriptions stored uddi universal description discovery integration standard publishing discovering web services 
example registration service includes url needed communicate service pointer wsdl description 
mourad ouzzani chapter 
implementation experiments communication webdg services enabled soap simple object access protocol standard 
xml messaging established protocols smtp soap platform independent 
key industry leaders participate soap development 
soap early stage meet scalability requirements needed web applications 
scalability problems may overcome government environments 
complex data types soap requests may add overhead processing requests 
data types government generally agreed priori government agencies reducing overhead 
composing webdg services service composers self sufficiency workers provide high level specification desired composition 
composability rules webdg generates composi tion plan 
plan gives list outsourced services interact achieve desired composition 
composition focus different research 
preserving privacy privacy major issue needs addressed government 
citizens gen divulge sensitive information ssn salary accessing government services 
characteristics add complexity privacy problem government sharing citizens information government agencies different citizens requirements respect privacy 
privacy focus different research 
mourad ouzzani chapter 
implementation experiments webdg implementation webdg system implemented network solaris workstations 
citizens case officers access webdg graphical user interface gui implemented html servlet 
webdg currently includes appli cations implemented java jdk 
applications wrapped wsdl descriptions 
axis java wsdl utility ibm web services toolkit automatically generate wsdl descriptions java class files 
wsdl service descriptions published uddi registry 
adopt wasp uddi standard uddi toolkit 
database uddi registry 
webdg uses service management client provided apache soap deploy government services 
apache soap provides server side deploying managing service client side api invoking services 
service deployment descriptor 
descriptor includes unique identifier java class invoked session scope class operations class available clients 
service deployed descriptor url apache soap servlet input arguments 
implementation query infrastructure webdg service query engine responsible correct optimal execution web service queries webdg 
web service queries expressed conjunctive queries relations defined social services 
service query engine includes modules service locator service locator discovers wsdl descriptions accessing uddi registry 
implements uddi inquiry client wasp uddi api 
mourad ouzzani chapter 
implementation experiments webdg architecture operation matchmaker matchmaker interacts service locator retrieve services descriptions wsdl determines concrete opera tions service execution plan 
wsdl descriptions augmented semantic attributes defined parsed concrete operations matched virtual operations matching modes 
monitoring agent module responsible monitoring web service cations 
goal assess behavior terms delivered qows 
monitoring agent maintains local repository ratings information mourad ouzzani chapter 
implementation experiments compute ratings 
entry added repository time web service query infrastructure 
query optimizer central component query engine 
task determines best service execution plan query 
uses algorithms section 
interacts modules achieve goal 
execution engine optimizer generates efficient service execution plan plan handed execution engine 
execution engine service execution plan invoking web services soap 
soap binding stubs implemented apache soap api purpose 
complexity proposed algorithms critical goal query infrastructure get optimal near optimal service execution plan terms qows acceptable time 
due nature environment number potential solutions need checked exponential 
step assess different algorithms compute complexity time 
give hand glimpse different algorithms behave experiments actual settings 
assume time get web services descriptions uddi registry match concrete operations virtual operations constant value 
parameters complexity computation query define parameters computation time dif ferent algorithms 
parameters algorithm specific 
mourad ouzzani chapter 
implementation experiments number virtual operations appearing query unfolding 
average number concrete operations matched virtual operation 
average number discount relationships web service involved 
initial temperature simulated annealing algorithm 
tf final temperature simulated annealing algorithm 
cooling rate simulated annealing algorithm 
maximum iterations simulated annealing algorithm 
exhaustive algorithm time exhaustive algorithm dominated iteration potential service execution plans 
potential concrete operations match virtual operation algorithm needs generate different plans find best 
complexity algorithm order 
simple sequencing algorithm simple sequence algorithm main phases takes processing time 
virtual operations ordering binding requirements iterative local selection concrete operations 
worst case ordering phase may find virtual operation ordered available bindings iteration 
approximated time complexity 
iterative local selection requires iterate virtual operations 
operation needs find best concrete operation 
finding best concrete operation requires sort mourad ouzzani chapter 
implementation experiments takes log 
second phase approximated log 
note building execution graph requires iterations worst case previous ordering phase done providing sequence set operations 
complexity simple sequence algorithm order log 
dg algorithm dg algorithm need build dependency graph set virtual operations get best matching concrete operation restrictions input output 
building dependency graph requires iterations 
second phase iterates virtual operations requires sort takes log 
complexity dg algorithm order log 
local bi selection algorithm local bi selection algorithm main phases 
phase building dependency graph requires iterations 
second phase looks best concrete operation account discount relationships virtual operation 
phase requires sort takes log average number discount relationships operation 
third phase replaces concrete operations may missing partners 
worst case applies operations requires scan get best concrete operation discount relationships 
local bi selection algorithm approximated log facts order log 
mourad ouzzani chapter 
implementation experiments iterative algorithm iterative algorithm main phases 
phase building depen dency graph requires iterations 
second phase looks best concrete operation account discount relationships virtual operation 
phase requires sort takes log average number discount relationships operation 
third phase iterates finding solution reaching threshold 
done different replacement policies 
replacement policy may takes threshold 
second may takes 
total complexity algorithm log replacement policy log second policy 
simulated annealing phases building dependency graph local selection takes log respectively 
third phase depends parameters inherent annealing process 
nested loops inner loop runs iterations 
condition outer loop tf way converge tf number iterations outer loop approximated log tf log 
assume perturbation function constant value running time 
total complexity algorithm log log tf log 
mourad ouzzani chapter 
implementation experiments table summarizes complexities time different algorithms 
table qows service execution plan algorithm complexity exhaustive simple sequencing log dg log local bi selection log log iterative form log iterative second form log simulated annealing log log tf log analytical evaluation section look processing time details 
give idea type results expect experiments 
processing time varies algorithm depends variables parameters 
variables parameters specific algorithm 
bi selection algorithm compute processing time bi selection algorithm 
basic formula selec mourad ouzzani chapter 
implementation experiments loss generality need assumptions able detail formula 
consider parameters dg average number operations run parallel 
corresponds number nodes having order dependency graph 
pdr probability web service involved discount relationship 
ime probability concrete operation selected phase algorithm partner service execution plan 
assume time lookup concrete operations service registry constant 
building dependency graph requires order graph check dg remaining operations dependency operations previous order 
transformed dg dg dg dg local selection consists mainly matching virtual operations best concrete operations possibilities account discount relationships 
time depends mainly lookup service registry sorting web services qows 
pdr pdr log pdr pdr note concrete operations subject discount relationships multiplied average number discount relationships concrete operation 
cost second selection simple mourad ouzzani chapter 
implementation experiments scan find best concrete operation discount relationships operations missed phase 
assume scan gets operation discount relationships half way total number operations discount relationships pdr 
ime pdr total time algorithm selec dg pdr pdr log pdr time pdr ime pdr cops vop cops vop cops vop number virtual query bi selection algorithm time processing shows running time bi selection algorithm varying size query average number virtual operations different values mourad ouzzani chapter 
implementation experiments number potential concrete operations respectively 
assume values different parameters 
pdr ime dg 
notice virtual operations query processing time grows rapidly 
having concrete operations match increases processing time 
iterative algorithm basic formula iterative algorithm similar bi selection algorithm components processing time computed way 
dg pdr pdr log pdr pdr third component replacement policies 
assume algorithm reaches decision threshold 
purpose simple assumption set missing partners decreases certain constant probability 
set missing partners geometrically decreases iteration rate defined 
assume iteration missing partner iterations decrease initial size missing partners set 
approximate log log log 
time replacement policy log log mourad ouzzani chapter 
implementation experiments constant time search sorted structure 
dg pdr pdr log pdr pdr log log log log log second replacement policy concrete operations replaced 
log log dg pdr pdr log pdr pdr log log assume values different parameters 
pdr ime dg 
show running time iterative algorithm second replacement policy respectively varying size query average number virtual operations different values respectively 
second replacement policy processing time increases rapidly 
due extra iterations done second case 
mourad ouzzani chapter 
implementation experiments tme time cops vop cops vop cops vop number virtual operations iterative algorithm form time processing cops vop cops vop cops vop number virtual operations iterative algorithm form time processing simulated annealing algorithm basis formula simulated annealing algorithm similar bi selection algorithm mourad ouzzani chapter 
implementation experiments time build dependency graph 
dg time local selection bit different take account discount relationships 
log third component depends different annealing parameters number iterations approximated log tf log 
iteration current plan perturbed objective function computed 
assume constant value perturbation function approximate objective function dg log log tf log shows running time simulated annealing algorithm varying size query average number virtual operations different values respectively 
assume values different parameters 
tf 
simulated annealing shows dramatic increase compared previous algorithms 
experiments different algorithms run different scenarios results com pared 
algorithms heuristics interested deter mining failure rate terms finding optimal service execution plan far plan 
interested correlate information mourad ouzzani chapter 
implementation experiments time cops vop cops vop cops vop number virtual operations simulated annealing algorithm time processing time spent processing queries 
getting solution short pe time may interesting spending time get better solution 
conduct experiments conduct experiments different approaches 
approaches differ way concrete operations generated 
approach sume virtual operations matched concrete operations 
second approach concrete operations obtained randomly generated wsdl files advertised uddi registry 
experiments assume queries expressed terms virtual operations 
mourad ouzzani chapter 
implementation experiments approach virtual operation assume matched eventually different matching levels set concrete operations 
focus generating qows values concrete operations web services 
consider binding constraints 
service execution plan necessarily feasible conditions discount relationships satisfied 
general form experiments queries varied number virtual operations 
query consider different situations varying number po concrete operations virtual operations 
randomly generate values qows parameters different concrete oper ations 
randomly generate discount relationships number concrete operations partnerships qows subject discount values dis counts 
process query different algorithms 
collect values objective function obtained service execution plan time takes algorithm compute 
settings 
number virtual operations query varied 
number matching concrete operations virtual op eration varies 
qows generated respective domains scalar 
number concrete operations involved discount re varied available concrete operations 
mourad ouzzani chapter 
implementation experiments loss generality assume web service involved discount relationship 
algorithm run generated sample data 
allow compare 
exhaustive algorithm may run cases size sample grows particular number virtual concrete operations 
run collect values objective function processing time 
second approach second approach get concrete operations actual wsdl descriptions generated randomly user provided parameters number operations 
experiments reflect reality manipulate actual wsdl descriptions synthetic data 
means particular queries may answer able matching concrete operations virtual operations 
means number potential concrete operations virtual operations query 
binding requirements need checked sure service execution plan feasible 
represents major components test bed 
experiments conducted similarly previous approach differences generate wsdl descriptions varying number operations number web services generated 
generate virtual operations similar principles generate wsdl descriptions 
means particular generations wsdl descriptions virtual operations randomly draw param eters pool potential operations input output parameters mourad ouzzani chapter 
implementation experiments experimental model categories 
explained details section 
build queries varying number virtual operations randomly selected set virtual operations generated previous step 
process query different algorithms 
need sure obtained service execution plan feasible terms bindings requests discount relationships constraints 
collect quality score service execution plan time takes algorithm compute 
collect number potential concrete operations virtual operations 
settings similar previous approach differences 
number virtual operations query varies 
number matching concrete operations virtual operation depends available generated wsdl files 
qows generated respective domains scalar mourad ouzzani chapter 
implementation experiments 
number concrete operations involved discount relationships varied available concrete operations 
loss generality assume web service involved algorithm run generated sample data 
allow compare 
exhaustive algorithm may run cases size sample grows particular number virtual concrete operations 
run collect values objective function processing time 
addition total processing time collect time spent operation matchmaker service locator modules 
experimental results section results obtained different ex periments 
table gives values different parameters generate sample service space level query model perspective 
presents experimental results obtained bi selection algorithm 
see chart behavior algorithm similar obtained analytical study 
presents experimental results obtained iterative selection algorithm form 
see chart behavior algorithm similar obtained analytical study 
presents experimental results obtained simulate annealing algorithm 
see chart behavior algorithm similar obtained analytical study 
mourad ouzzani chapter 
implementation experiments parameter value notes table experimental parameters maximum number virtual operations maximum number concrete operations maximum number operations discount relationship maximum number input attributes operation maximum number output attributes operation maximum number categories operation maximum number functions operation threshold iterative algorithm number potential values input output attribute number potential values category attribute number potential values function attribute number qows parameters number negative qows parameters number positive qows parameters experiment compare processing time algorithms bi selection iterative form simulated annealing 
bi selection iterative algorithms comparable processing times simulated annealing spends greater time find solution 
predictable annealing tries attain equilibrium state loops 
mourad ouzzani chapter 
implementation experiments time time bi selection experimental cops vop cops vop cops vop query size bi selection algorithm iterative experimental cops vop cops vop cops vop query size iterative algorithm form experiments compare value aggregated cost objective function algorithms bi selection iterative form mourad ouzzani chapter 
implementation experiments time time annealing experimental cops vop cops vop cops vop query size simulated annealing algorithm iterative bi selection processing time query size processing time comparison simulated annealing 
bi selection iterative algorithms achieve similar results 
surprisingly simulated annealing algorithm achieves poor results 
may mourad ouzzani chapter 
implementation experiments due perturbation procedure causing current solution diverge optimal solution 
query size aggregated score scaled scores aggregated costs comparison bi selection iterative annealing chapter dissertation addresses key issues enable efficient access web databases web services 
proposed distributed ontology allows meaningful organization efficient access web databases 
dedicated presenting comprehensive query infrastructure emerging concept web services 
core query infrastructure relates efficient delivery web services concept quality web service 
treating web services class objects fundamental step achieving envisioned semantic web 
semantics aware processing information requires intensive web services 
research propose new query model queries resolved combining web service invocations 
efficiently deploy scheme propose optimization strategy aggregating quality web service qows different web services 
qows adjusted dynamic rating scheme multilevel matching 
web service ratings provide assessment behavior 
multilevel matching allows larger solution space enabling similar partial answers 
mourad ouzzani chapter 
early stage research worked distributed ontology web databases 
web databases organized segmented simple ontologies describe coherent slices information space 
distributed ontologies web databases established simple domain ontology 
inter ontology relationships dynamically established ontologies 
addition intra ontology relationships web databases considered 
allows flexible precise querying ontology 
relationships form hierarchy classes information type classification hierarchy inside ontology 
querying web services enabled novel level query model provides easy way developers represent service space users formulate submit queries 
users formulate declarative queries relations top level query level 
queries transformed bear virtual operations defined second level 
link levels defined simple mapping rules 
relations virtual operations mapping rules define schema actual service space accessed 
final stage virtual operations query dynamically matched concrete operations leading service execution plan accesses actual web services 
virtual operations play central role proposed level query model 
allow achieve important objectives having generic operations matched ways concrete operations explained matching scheme define able select appropriate concrete operation non functional properties qows 
prime importance expanding service web 
addition trying find exact match query propose flexible matching scheme details selected web services differ specified request 
resulted defining dynamic multi level matching scheme virtual concrete operations 
mourad ouzzani chapter 
widespread deployment web services result competition 
address important issue designed complex qows model discriminate competing web services offering similar functionalities 
ex amples qows includes usage fee latency 
concept qows captures users applications requirements efficiency query optimization web 
approach qows encompasses number quantitative qualitative parameters measure web service performance delivering ties 
heading semantic web software agents humans charge formulating queries submitting behalf humans 
scenario important consider aspect qows may influence resolution query 
qows parameters may subject various fluctuation web service life time 
addressed important issue monitoring scheme assesses qows advertised service providers actual behavior 
monitoring web services behavior important calculating qows parameters values assessing web services claim terms promised qows 
monitoring rates behavior web services delivering functionalities terms qows parameter 
conducted collecting different information web services computing qows distance metric 
selecting optimal service execution plan key successful deployment query infrastructure web services 
addressed challenging en exacerbated large number competing web services devising cost model qows proposing optimization techniques 
techniques differ way decisions constraints consider 
especially focused important constraints binding requirements inherent proper invocation web service operations discount relationships may exist partners 
mourad ouzzani chapter 
research extensions query infrastructure 
develop semantic optimization techniques web services 
require intelligent agents may take advantage current context semantic application enhance optimization 
extension cater dynamic volatile nature web services 
adaptive techniques need designed compensate effects service execution plan efficiency unpredictable events run time 
example web service may unavailable needs replaced web service offering similar functionalities 
replacement strategy decrease quality service execution plan 
research philosophy dissertation focuses supporting strong synergy data services semantic web 
mainly concerns research data service integration semantic web 
special emphasize devising novel query paradigms original strategies efficiently delivering web services web databases integrated way 
avenues research concerns query processing optimization techniques data streaming grids web services 
multi pronged endeavor addressing fundamental research important impact real world applications including enterprise application integration digital government commerce different variants 
bibliography aarts korst 
simulated annealing boltzman machines stochastic approach combinatorial optimization neural computing 
john wiley sons new york usa january 
abiteboul milo 
web services data integration 
international conference web information systems engineering pages singapore december 
abiteboul manolescu milo 
dynamic xml documents distribution replication 
proceedings acm sigmod international conference management data pages san diego california usa june 
candan papakonstantinou subrahmanian 
query caching optimization distributed mediator systems 
proceedings acm sigmod international conference management data pages montreal canada june 
aiello papazoglou yang pistore serafini traverso 
request language web services planning constraint satisfaction 
proceedings rd international workshop technologies services pages hong kong china august 
mourad ouzzani bibliography amann beeri scholl 
querying xml sources ontology mediator 
proceedings th international confer ence cooperative information systems pages irvine california usa october 
ambite knoblock 
flexible scalable query planning distributed heterogeneous environments 
proceedings th ternational conference artificial intelligence planning systems pages pittsburgh pennsylvania usa june 
bonnet franklin tomasic urhan 
improving responsiveness wide area data access 
ieee data engineering bulletin september 
arocena mendelzon 
weboql restructuring documents databases webs 
proceedings th international conference data engineering pages orlando florida usa february 
arpaci dusseau anderson culler hellerstein patterson yelick 
cluster river making fast case common 
proceedings th workshop parallel distributed systems pages atlanta georgia usa may 
avnur hellerstein 
eddies continuously adaptive query processing 
proceedings acm sigmod international conference management data pages dallas texas usa may 
baker cahill nixon 
bridging boundaries corba perspective 
ieee internet computing may 
mourad ouzzani bibliography batini lenzerini navathe 
comparative analysis method database schema integration 
acm computing surveys december 
bea ibm microsoft 
business process execution language web ser vices bpel ws 
xml org bpel ws html 
belkin croft 
information filtering information retrieval sides coin 
communications acm december 
benatallah bouguettaya elmagarmid 
overview multi database systems past chapter 
morgan kaufmann san fran cisco california usa january 
benatallah sheng ngu dumas 
declarative compo sition peer peer provisioning dynamic web services 
proceedings th international conference data engineering pages san jose california usa february 
berners lee 
services semantics web architecture 
www org tbl 
berners lee hendler lassila 
semantic web 
scientific american may 
fabret mohan valduriez 
dynamic query schedul ing data integration systems 
proceedings th international conference data engineering pages san diego california usa february march 
mourad ouzzani bibliography bouguettaya 
large multidatabases federation global schema integration 
proceedings th australasian database conference pages christchurch new zealand january 
bouguettaya benatallah elmagarmid 
interconnecting neous information systems 
kluwer academic publishers boston usa august 
bouguettaya benatallah ouzzani beard 
sup porting dynamic interactions web information sources 
ieee transactions knowledge data engineering ber october 
bouguettaya benatallah ouzzani 
java corba implementing internet databases 
proceedings th ternational conference data engineering pages sydney australia march 
bouguettaya benatallah ouzzani 
webfindit architecture system querying web accessible databases 
ieee internet computing july august 
bouguettaya elmagarmid medjahed ouzzani 
ontology support digital government 
proceedings th international conference large data bases pages roma italy september 
bouguettaya king 
large multidatabases issues directions 
ifip ds semantics interoperable database systems editor hsiao neuhold sacks davis 
elsevier publishers 
mourad ouzzani bibliography bouguettaya medjahed ouzzani wen 
pri preserving composition government web services demo 
proceedings national conference digital government research pages los angeles california usa may 
bouguettaya ouzzani medjahed cameron 
managing gov databases 
ieee computer february 
kemper kossmann kreutz 
ubiquitous query processing internet 
vldb journal june 
breese heckerman kadie 
empirical analysis predictive algorithms collaborative filtering 
proceedings th conference uncertainty artificial intelligence pages madison wisconsin usa july 
callan croft 
evaluation query processing strategies tipster collection 
proceedings th annual interna tional acm sigir conference research development information retrieval pages pittsburgh usa june july 
casati georgakopoulos 
shan editors 
nd international workshop technologies services lncs september 
world wide web consortium 
simple object access protocol soap 
www org tr soap 
world wide web consortium 
web services description language wsdl 
www org tr wsdl 
mourad ouzzani bibliography conti kumar das shirazi 
quality service issues internet web services 
ieee transactions computers june 
croft 
people want information retrieval 
top research issues companies sell ir systems 
lib magazine november 
du krishnamurthy 
shan 
query optimization hetero dbms 
proceedings th international conference large data bases pages vancouver canada august 
duschka 
query planning optimization information integration 
phd thesis computer science department stanford university stanford cal december 
duschka genesereth 
query planning infomaster 
proceedings th annual acm symposium applied computing pages san jose california usa february 
evans rogers 
java applets corba multi user distributed applications 
ieee internet computing september 
florescu levy manolescu suciu 
query optimization presence limited access patterns 
proceedings acm sigmod international conference management data pages philadelphia pennsylvania usa june 
garcia molina 
capability sensitive query pro cessing internet sources 
proceedings th international conference data engineering pages sydney australia march 
mourad ouzzani bibliography garcia molina papakonstantinou quass rajaraman sagiv ullman vassalos widom 
tsimmis approach media tion data models languages 
journal intelligent information systems 
sha tang 
calibrating query optimizer cost model iro db 
proceedings nd international conference large data bases pages bombay india september 
graefe 
query evaluation techniques large databases 
acm computing survey june 
gravano papakonstantinou 
mediating internet 
ieee data engineering bulletin june 
haas kossmann wimmers yang 
optimizing queries diverse data sources 
proceedings rd international confer ence large data bases pages athens greece august 
heimbigner mcleod 
federated architecture information sys tems 
acm transactions office information systems july 
hellerstein franklin chandrasekaran deshpande hil drum madden ramana shah 
adaptive query processing technology evolution 
ieee data engineering bulletin june 
horrocks 
daml oil description logic semantic web 
ieee data engineering bulletin march 
mourad ouzzani bibliography hurson bright 
multidatabase systems advanced solution global information sharing 
ieee computer society press los alamitos california usa 
ibm 
web services flow language wsfl 
xml org wsfl html 
ives florescu friedman levy weld 
adaptive query execution system data integration 
proceedings acm sigmod international conference management data pages philadelphia pa usa june 
jin si zhai callan 
collaborative filtering decoupled models preferences ratings 
proceedings th international conference information knowledge management pages new orleans louisiana usa november 
konopnicki shmueli 
www information gathering ql query language qs system 
acm transaction database sys tems december 
levy rajaraman ordille 
querying heterogeneous information sources source descriptions 
proceedings nd international conference large data bases bombay india 
lohman 
grammer functional rules representing query optimiza tion alternatives 
proceedings acm sigmod international confer ence management data pages chicago illinois usa september 
mourad ouzzani bibliography macgregor 
deductive pattern matcher 
proceedings aaai national conference artificial intelligence pages st paul minnesota usa august 
medjahed bouguettaya elmagarmid 
composing web services semantic web 
vldb journal november 
medjahed bouguettaya ouzzani 
semantic web enabled government services 
proceedings national conference digital government research pages boston massachusetts usa may 
medjahed ouzzani bouguettaya 
web services government applications 
proceedings national sciences dation conference digital government research pages los les california usa may 
medjahed bouguettaya ouzzani 
infrastructure government web services 
ieee internet computing jan february 
mena illarramendi kashyap sheth 
observer ap proach query processing global information systems interop eration pre existing ontologies 
international journal distributed parallel databases april 
mendelzon mihaila milo 
querying world wide web 
international journal digital libraries april 
microsoft 
web services business process design xlang 
xml org xlang html 
milo abiteboul amann dang 
exchanging intensional xml data 
proceedings acm sigmod international mourad ouzzani bibliography conference management data pages san diego california usa june 
mostafa mukhopadhyay lam 
multilevel approach intelligent information filtering model system evaluation 
acm transactions information systems october 
tomasic 
leveraging mediator cost models heterogeneous data sources 
proceedings th international conference data engineering pages orlando florida february 
naumann 
data fusion data quality 
proceedings new tech niques technologies statistics seminar pages sorrento italy may 
naumann lesser 
quality driven integration heterogeneous infor mation systems 
proceedings st international conference large data bases pages edinburgh uk september 
nodine ngu 
semantic brokering dynamic heterogeneous data sources infosleuth 
proceedings th inter national conference data engineering pages sydney australia march 

client server programming java corba 
john wiley sons new york usa 
ouzzani benatallah bouguettaya 
ontological approach formation discovery internet databases 
distributed parallel databases international journal july 
mourad ouzzani bibliography ouzzani bouguettaya 
query paradigm web services 
proceedings st international conference web services pages las vegas nv usa june 
ouzzani bouguettaya 
efficient access web services 
ieee internet computing march april 
ouzzani bouguettaya 
query processing optimization web 
distributed parallel databases international journal may 
ouzzani bouguettaya medjahed 
optimized querying government services 
proceedings national conference digital government research pages boston massachusetts usa may 
dogac 
dynamic query optimization multidatabases 
ieee data engineering bulletin september 
tamer ozsu patrick valduriez 
principles distributed database sys tems 
prentice hall new jersey usa 
bouguettaya malik 
reputation approach pre serving privacy web services 
proceedings th international shop technologies services pages berlin germany september 
ouzzani bouguettaya medjahed 
preserving privacy web services 
proceedings th international acm workshop web information data management pages november 
roth haas 
cost models matter providing cost information diverse data sources federated system 
proceedings mourad ouzzani bibliography th international conference large data bases pages edinburgh scotland uk september 
roth schwarz 
don scrap wrap 
wrapper architecture legacy data sources 
proceedings rd international conference large data bases pages athens greece august 
ruiz 
duran 
automated support quality requirements web systems 
proceedings th ieee workshop trends distributed computing systems pages bologna italy october november 
selinger astrahan chamberlin lorie price 
access path selection relational database management system 
proceedings acm sigmod international conference management data pages boston massachusetts may june 

shan 
pegasus architecture design principles 
proceedings acm sigmod international conference management data pages washington dc usa june 
amit sheth james larson 
federated database systems manag ing distributed heterogeneous autonomous databases 
acm computing surveys september 
spaccapietra parent 
step forward solving structural conflicts 
ieee transactions knowledge data engineering april 
tannenbaum van steen 
distributed systems principles paradigms 
prentice hall new jersey usa 
mourad ouzzani bibliography tomasic rashid valduriez 
scaling heterogeneous database design disco 
proceedings th international conference distributing computing systems pages hong kong china may 
tsur abiteboul agrawal dayal klein weikum 
web services revolution commerce 
panel 
proceedings th international conference large data bases pages roma italy september 
uddi 
universal description discovery integration 
www uddi org 
international telecommunication union 
itu recommendation terms definitions related quality service network performance including dependability itu 

service discovery 
ieee internet computing jan february 
wiederhold 
mediators architecture information systems 
ieee computer 
li ullman garcia molina 
optimizing large join queries mediation systems 
proceedings international conference database theory pages jerusalem january 
yoon hwang 
multiple attribute decision making 
oaks sage oaks california usa january 
zeng benatallah dumas sheng 
quality driven web services composition 
proceedings th international conference world wide web pages budapest hungary may 
mourad ouzzani bibliography zhu larson 
global query processing optimization cords multidatabase system 
proceedings international conference parallel distributed computing systems pages france september 
appendix publications journals table mapping publications dissertation chapter publications chapter chapter chapter chapter chapter 
ouzzani bouguettaya 
query processing optimization web 
distributed parallel databases international journal may 
mourad ouzzani appendix publications 
ouzzani bouguettaya 
efficient access web services 
ieee internet computing march april 

medjahed bouguettaya ouzzani 
infrastructure government web services 
ieee internet computing january february 

bouguettaya ouzzani medjahed cameron 
managing gov databases 
ieee computer february 

bouguettaya benatallah ouzzani beard 
sup porting dynamic interactions web information sources 
ieee transactions knowledge data engineering september october 

ouzzani benatallah bouguettaya 
ontological approach formation discovery internet databases 
distributed parallel databases international journal july 

bouguettaya benatallah ouzzani 
webfindit architecture system querying web accessible databases 
ieee internet computing july august 
conferences 
ouzzani bouguettaya 
query paradigm web services 
international conference web services las vegas nv usa june 

ouzzani bouguettaya medjahed 
optimized querying government services proceedings national conference digital government research boston ma usa may 
mourad ouzzani appendix publications 
medjahed bouguettaya ouzzani 
semantic web enabled government services 
proceedings national conference digital government research boston ma usa may 

ouzzani bouguettaya medjahed 
preserving privacy web services 
th international acm workshop web information data management november 

bouguettaya medjahed ouzzani wen 
privacy preserving composition government web services demo 
pro ceedings national conference digital government research los angeles ca usa may 

medjahed ouzzani bouguettaya 
web services government applications 
proceedings national sciences dation conference digital government research los angeles ca usa may 

bouguettaya elmagarmid medjahed ouzzani 
ontology support digital government 
proceedings th international conference large data bases rome italy september 
morgan kaufmann 

bouguettaya elmagarmid medjahed ouzzani 
web architecture government databases services 
proceedings national conference digital government research los angeles ca usa may 

bouguettaya benatallah beard smith ouzzani 
world wide database integrating web corba databases 
proceedings acm sigmod international conference management data philadelphia june 
mourad ouzzani appendix publications 
bouguettaya benatallah ouzzani 
java corba implementing internet databases 
proceedings th international conference data engineering sydney australia march 

ouzzani 
concurrency multidatabases 
proceedings th du belgium may 

ouzzani 
top approach level serializability 
proceedings th international conference large data bases vldb santiago 
chile september 

ouzzani 
maintaining level se top approach 
proceedings rd iasted international conference computer applications industry cairo egypt december 

ouzzani 
transaction management multidatabase systems 
proceedings international des systemes may 
book chapters 
bouguettaya medjahed ouzzani 
internet comput ing support digital government 
crc press kaufmann appear 

bouguettaya ouzzani medjahed elmagarmid 
web approach support digital government applications 
kluwer academic pub 

bouguettaya benatallah medjahed ouzzani 
adaptive web communities 
idea group publishing 
mourad ouzzani appendix publications 
bouguettaya medjahed ouzzani meng 
ubiquitous access theses web databases chapter 
idea group publishing 

ouzzani 
sc 
thesis concurrency control multidatabase systems 
university science technology algeria april 

ouzzani 
sc 
project predicate petri net vali dation distributed systems 
university science technology algeria june 
appendix vita research interests data integration web databases query optimization internet computing web services semantic web 
education department computer science virginia tech august ph may dissertation topic efficient delivery web services advisor dr bouguettaya department computer science algeria sc computer science april thesis option concurrency control multidatabase systems sc computer science june mourad ouzzani appendix vita research experience department computer science virginia tech graduate research assistant august research phd dissertation relates designing building comprehensive query infrastructure efficient delivery web services 
treating web services class objects fundamental step achieving envisioned semantic web 
semantic aware processing information requires extensive web services 
research investigate new query scheme queries resolved combining web service invocations 
efficiently deploy scheme propose optimization strategy aggregating quality web service qows different web services 
qows adjusted dynamic rating scheme multilevel matching 
web service rating provides assessment behavior 
multilevel matching allows larger solution space enabling similar partial answers 
am member webdg project digital government 
aim project enable citizens indiana get timely information local state federal governments 
emphasis helping citizens need help unemployed children people disabilities single mothers 
citizens needs satisfied single meeting 
social workers able access necessary information uniform interface 
am responsible extending maintaining webfindit virginia tech 
migrated webfindit system network sun solaris workstations 
includes creating populating databases dbmss oracle ibm db informix objectstore setting different corba orbs orbix visibroker voyager 
supervised different extensions including xml querying webfindit access rmi dcom windows platform replacing objectstore databases xml oracle 
school information systems qut graduate research assistant january august participated design implementation webfindit system interoperation autonomous heterogeneous web databases 
specifically looked architectural language query processing issues 
system middleware shelf products industry standards corba mourad ouzzani appendix vita activex dcom ejb rmi centers definition design implementation query optimization techniques web databases 
department computer science thesis master december april topic thesis concurrency control multidatabase systems 
proposed novel efficient concurrency control techniques systems level serializability 
resulted publication highly prestigious database conference large data base conference vldb 
publications see appendix teaching experience school information systems qut graduate teaching assistant july august undergraduate course database management systems 
associate lecturer march june advance graduate course current advances database technology 
graduate teaching assistant march june undergraduate course object oriented analysis design methodology 
graduate teaching assistant july november undergraduate course database management systems 
ecole national informatique graduate teaching assistant september june undergraduate course language theory 
honors awards awards nominated graduate student month award april 
outstanding reviewer ieee internet computing november 
mourad ouzzani appendix vita nominated outstanding graduate student award 
graduated summa cum laude honors cs june 
best student award algeria granted best high school students nation june 
year usenix scholarship 
year scholarship phd studies qut brisbane australia 
government scholarship graduate studies france declined 
virginia tech award june computing research association award attend cra academic career workshop january 
qut travel demo sigmod may 
academic activities students advising sc 
independent study projects ma 
uniform interface querying government databases invoking services 
yu wang implementation distributed ontologies 
edward deploying government services speak dcom 
li deploying government services speak ejb 
mourad ouzzani appendix vita christina healy extending webfindit xml repositories 
hao long implementing web services government applications 
technical journals distributed parallel databases international journal 
ieee transactions systems man cybernetics 
ieee internet computing 
data knowledge engineering 
ieee computer 
journal software maintenance 
conferences edbt 
ride 


vldb tes 
ieee cec 
ride 
cikm 
dexa 
euro pds 
services department installed network sun solaris workstations nis 
prior experience whatsoever system administration 
system stable large number graduate students 
installed major databases informix oracle ibm db shelf application client server type mode 
technical societies memberships member ieee ieee computer society acm 
member ieee technical committee data engineering acm sigmod 
miscellaneous items contributed write nsf nih 
attended day workshop finding funding writing successful virginia tech december 
attended cra academic careers workshop designed new faculty advanced graduate students january 
mourad ouzzani appendix vita fall spring coordinator research seminar series cs department 
attended week intensive course informix database administrators organized funded informix part ibm june 
attended day workshop hp speak organized funded hp july 
provided review logistics support special issue ontologies distributed parallel databases international journal vol january 
professional experience department computer science virginia tech part time system administrator january december assumed miscellaneous tasks system administration network sun solaris workstations different software packages mainly dbmss 
independent consultant algeria consultant trainer january december information technology consultant trainer companies 
involved development mainly database software packages 
computer skills programming languages java pascal prolog 
middleware technologies corba orbs visibroker java rmi ejb jdbc 
databases sql informix oracle db ms sql server ms 
operating systems sun solaris ms windows 
