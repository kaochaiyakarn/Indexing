defeasible logic donald nute department philosophy arti cial intelligence center university georgia athens ga ai uga edu september reach partially basis evidence false 
newspaper story warning local water supply contaminated prevent person drinking water tap home 
suggests absence evidence contributes usual belief water safe 
hand reasonable person received letter telling won dollars consciously consider evidence letter misleading making plans spend money 
arrive retract contrary evidence available 
contrary evidence defeats earlier reasoning 
reasoning defeasible way 
considerable research ai focused model reasoning sort 
describe theoretical approach problem discuss implementation approach extension prolog describe application normative reasoning learning planning types automated reasoning 
goal reasoning reach true avoid false 
require justi ed 
constraints justi ed belief false true belief ed 
true beliefs ultimate goal fact guarantee truth justi cation beliefs 
methods reach new old preserves truth reach reject new information 
reject earlier rejected reason 
call reasoning sort monotonic 
human reasoning monotonic 
reject old new evidence old justi ed time arrived 
justi cation preserving reasoning monotonic 
say human reasoning nonmonotonic 
monotonic reasoning restrictive 
monotonic reasoning general truth preserving reasoning particular primarily prevent reaching false 
allows reach possibly doubt long original reasons remain intact 
dangerous believe things false just dangerous believe things true 
need reasoning system lets draw conclusive evidence 
need mechanism correcting kind reasoning light evidence 
sounds am describing reasoning uncertainty certainly part mind 
fact absence information positive reason believing 
milk refrigerator 
look see milk 
failure nd evidence milk case reason believe milk refrigerator 
example believe cat front believe appears cat front ample evidence 
course think situations wrong 
cat mirror cat think see front reason believe am evidence holographic projector mirror 
absence evidence perceptual circumstances abnormal provides part justi cation belief cat front knew reacting medication having experiences example form belief cat front reasoning uncertainty normal sense 
recognizing absence information help justify beliefs 
am going describe particular approach nonmonotonic reasoning 
discuss formal theory approach done implementing theory applications developed approach nonmonotonic reasoning 
defeasible logic language explaining mean nonmonotonic system reasoning context formal systems 
suppose consequence relation formal system 
monotonic just case sets formulas formula language 
reasoning system preserves truth monotonic 
reasoning system preserves justi cation monotonic 
justi ed belief false true belief ed 
learned justi ed false belief false longer justi ed 
means belief justi ed belief set propositions set propositions came believe propositions longer justi ed believing 
nonmonotonic formalisms special unary operator mark peculiar conditions rules 
long conditions rule satis ed consequent rule 
example autoepistemic logic derive 
contrast defeasible systems rules consequents may antecedents derivable :10.1.1.5.4035
detachment consequent defeasible rules may defeated fact rule 
competing rule may rst rule supporting con icting consequent may simply undercut rst rule identifying situation rule apply 
defeasible logic uses strict rules defeasible rules undercutting defeaters 
de ne atomic formulas usual way 
literal atomic formula negation 
literals formulas language 
atomic formula say complements 
denotes complement formula positive negative 
rules class expressions distinct formulas 
rules constructed primitive symbols 
set formulas strict rule defeasible rule undercutting defeater case call antecedent rule call consequent rule 
denote similarly defeasible rules defeaters 
antecedents strict rules defeaters non empty antecedents defeasible rules may empty 
call rule form presumption represent simply 
allow variables rules treat rules schemata instantiations 
strict rules defeated 
exceptions exceptions 
may think expressing necessary connection antecedent consequent 
examples kind claim represent strict rule married penguins birds 
defeasible rules represent weaker connections defeated 
examples penguins live birds 
example presumption presumably life moon 
undercutting defeaters weak support inference 
role call question inference inclined 
represent caveats damp match burn 
defeasible theory include initial set facts set rules include 
rules con ict antecedents satis ed consequents incompatible 
obviously rules consequents con ict rules con ict cases 
example rules consequents carpet square carpet circular con ict 
component defeasible theory set con ict sets 
con ict set represent minimal set incompatible formulas 
want set con ict sets re ect necessary relations embodied strict rules 
theory con ict sets 
want set con ict sets include pairs containing formula complement want closed strict rules theory 
exact sense closure strict rules theory de nition closed defeasible theory 
notice con ict set may contain formulas rules may con ict proper subgroup rules con icts 
notion explicitly de ning con ict sets theory way responding problem deciding rules con ict 
serious obstacles developing constructive syntactic approach defeasible nonmonotonic reasoning 
earlier suggested rules con ict just case consequent complement 
suggests extended rules incompatible consequents 
makinson suggests detach consequents norms iteratively controlling consistency condition piecemeal way page 
recognizing exactly consequents rules set rules lead inconsistency serious problem particularly rst order logic question decidable 
restricting formal language severely introducing notion closure strict rules answer problem limited case 
component defeasible theory precedence relation 
relation provides way con icts con icting rules 
want apply defeasible rule look con ict sets belongs 
set member di erent rule consequent antecedent rule fails takes precedence rule 
said precedence relation de nition defeasible proof 
theories consider consist set literals representing initial facts world set rules set con ict sets closed strict rules theory precedence relation 
de nition closed defeasible theory quadruple hf 
set formulas 
set rules 
set nite sets formulas formula 
acyclic binary relation non strict rules semantics common approach developing semantics nonmonotonic systems xed point approach 
xed point systems consider supersets theory satisfy certain constraints 
xed points called extensions theory 
typically default rule system failed antecedent contained extension defeated applied consequent extension 
extension sense smallest set satis es requirement 
sense smallest simply set theoretic notion 
single theory may multiple extensions 
theory multiple extensions option take consequences theory intersection extensions theory called skeptical approach 
general algorithms generating extensions theory generating extensions computationally expensive 
see testing see formula member admissible set having generate entire set 
furthermore particular theory may extension 
examples am calling xed point theories include default logic autoepistemic logic deontic arena allowed entailments 
xed point semantics defeasible language due donnelly 
want set literals includes initial literals theory complies rules theory 
de nition closed defeasible theory 
set literals compliant 




compliance rules theory 
take extensions compliant sets proper subsets compliant 
problem approach gratuitous beliefs represented set 
take example theory just contains pairs atomic formulas negations 
intuitively want extensions set smallest compliant set 
say point view belief gratuitous 
supports accepted defeat inference remove remaining set rules requires put back set 
throw literals away left force put back 
happen extension defeasible theory 
de nition closed defeasible theory 
set literals extension 
compliant 

ii 
iii 

say literal defeasibly entailed defeasible theory just case extension 
de nition closed defeasible theory literal extension proof theory mentioned known approaches nonmonotonic reasoning develop xed point semantics provide proof theory go 
cases appears constructive proof theory possible 
confess semantics developed long considerable done constructive proof theory defeasible reasoning 
xed point semantics proof theory intellectually satisfying respects practical application dicult impossible 
certainly isn attractive model nonmonotonic reasoning ordinary people 
semantics designed proof theory mind 
proof theory investigate relationship proof theory semantics 
defeasible logic re nement system 
proof theory provide constructive way establish particular formula derivable theory having generate xed point extension theory 
theory unique closure logic 
order apply defeasible rule necessary show competing rule satis ed antecedent conditions derivable 
proof include positive negative defeasible assertions 
course want formal systems resemble reasoning system ordinary people generally don want formal system mirrors exactly ordinary people 
ordinary people reason badly 
want discover patterns reasoning best try extend patterns correct cases reasoning goes astray 
de nition positive defeasible assertion defeasible theory formula 
negative defeasible assertion defeasible theory formula 
defeasible assertion positive defeasible assertion negative defeasible assertion 
negative assertion intended stronger statement 
indicates demonstration follow detach consequent defeasible rule need establish defeated con icting rule 
need show antecedent con icting rule satis ed 
need complementary notions derivation refutation 
need show formula refutable order show formula derivable need show formula derivable order show formula refutable 
course refutable mean formula shown false 
mean show derivable 
think uses terms refute refutation occur ordinary usage important keep mind intended 
defeasible proofs tree structure usual linear structure 
familiar logic programming know query succeed fail nitely fail nitely 
query fails nitely attempt prove proceed inde nitely succeeding failing usual sense 
way query fail nitely circularity theory new query proved occurs repeatedly 
example theory contains formulas single rule rule attempt nd proof lead try prove proving ad 
automated theorem prover way check loops course proof theory committed particular method generating proofs 
necessary follow successful proof showing refutes need show orts prove fail 
way attempt fail looping 
giving proofs tree structure possible recognize nite failures proof theory 
alternatively try labeled logic gabbay labels carry information descendants node proof tree 
de nition defeasible argument tree nite tree defeasible theory th node formula labeled th th 
de nition defeasible argument tree node 
depth dp ancestors 
depth dp node dp jg 
far notion antecedent rule succeeding failing informally 
presenting basic defeasible proof theory say precisely means sets formulas succeed fail node defeasible argument tree 
de nition defeasible argument tree th node set formulas 

succeeds child labeled 

fails child labeled 
de nition defeasible proof proof defeasible argument tree th conditions holds node 
labeled strict detachment succeeds factual detachment succeeds 
fails ii 
fails iii 
fails 

labeled failure strict detachment fails failure defeasible detachment fails ii 

succeeds succeeds succeeds 

failure looping labeled ancestor labeled node labeled negative defeasible assertion 
failure looping condition de nition needs justi cation 
apply defeasible rule need show competing rule satis ed 
showing attempt derive antecedent competing rule fails 
suppose antecedent contains 
explore way derive 
discover way deriving requires derive sure derived way doing circular 
reject circular attempts establish 
way allows avoid examining non circular ways established 
failure looping amounts recognition non circular way establish formula way establish 
de nition defeasibly derivable proof top node labeled 
de nition defeasibly refutable top node labeled 
described de nition say establishes respectively 
de nition set formulas defeasibly derivable 
de nition set formulas defeasibly refutable 
informal notion refutation possible derive refute formula defeasible theory 
refutation supposed demonstration refuted formula derived 
theorem establishes essential property basic defeasible logic 
theorem coherence 
important property proof theory defeasible rules produce new contradictions 
contradictions derivable theory depend strict rules initial set literals theory 
de nition hf fa 


theorem consistency 
makinson propose rule defeated act defeater rule 
language inheritance nets rule link makinson call zombie path 
note defeasible logic developed rejects zombie paths 
intuitions closer touretzky thomason 
constructive approach defeasible reasoning reject makinson notion oating 
formula belongs intersection extensions theory rule supporting formula satis ed extension 
return relationship proof theory semantics 
donnelly proves result 
theorem soundness 
donnelly shows proof theory complete respect semantics 
literal may belong extension may depend di erent paths various extensions 
proof theory sound unable derive oating 
long theory multiple extensions possibility oating 
implies general just defeasible logic complete 
semantics nonmonotonic reasoning proof theory semantics oating possible semantics proof theory sound complete 
priorities speci city normative reasoning method determining priorities rules defeasible theories speci city 
rule antecedent said speci rule antecedent relative theory derive rules vice versa 
precedence relation theory notion speci city 
interesting case explicit relation rules theory want core precedence relation 
extend core precedence relation speci city cases core precedence relation settle matter 
state condition precisely fr antecedent empty de nition speci non strict antecedent antecedent 
ha hb 
ha hb special case speci city sole criterion con icts non strict rules 
amounts empty set core precedence relation 
de nition theory preserves speci city speci advantage speci speci city preserving theories compute rule takes precedence 
particularly important add deontic operator ought logic represent norms rules deontic consequents 
proof theory deontic defeasible logic requires additional principles handle interaction norms rules resolve paradoxes standard deontic logics 
deontic extension defeasible logic described 
call theory contains norms primary theory call theory contains rules rules take precedence rules precedence theory doing proofs refutations determine cases speci city way assign priorities rules 
principles lex superior lex posterior familiar examples 
suppose theory containing rules representing federal laws united states laws particular state united states 
language second theory names rules predicates federal state contain instances form state special instance principle lex superior suppose speci combination lex superior speci city determine precedence laws theory normative 
proofs refutations determine core precedence relation complete defeasible theory components primary theory theory precedence primary theory 
notice lex superior takes priority higher level speci city de nition speci city guarantees speci city applied core precedence relation determine priority 
clearly matters complex try add lex posterior precedence theory try include laws fty states may turn impossible violating requirement non cyclical 
open question non cyclic relation non strict rules set rules set facts con icts set language possible construct theory hf ci speci notice example lex superior rule express principle defeasible 
shouldn strict rule 
need defeasibility precedence theory 
doctrine states rights interpretations illustrates need defeasible rules precedence theories 
lex superior tell law take precedence federal state law 
get nice neat level normative system 
position southern states american civil war constitution prohibits federal government enacting laws limiting powers state governments certain areas 
principle states rights prevail principle lex superior defeasible 
exceptions case federal law contradicted state law subjects con icting laws fell umbrella guarantee states rights 
implementation prolog design defeasible logic uenced issues implementation particularly implementation prolog 
prolog nonmonotonic extension prolog programming language 
versions prolog dating back see 
latest version implementation earlier version defeasible logic described :10.1.1.5.4035
complete description version prolog chapter 
features latest version prolog including ways defeasible logic implements di ers formal logic described earlier 

prolog implement failure looping 

prolog closed strict rules 
con ict pairs members 
pairs literals complements form con ict pair 
con ict pairs listed explicitly predicate incompatible 
prolog closed strict rules inference strict rules handled di erently 
conditions competing strict rules defeasibly satis ed prolog treats rules defeat consequent rule detached 
purpose strategy limit contradictions derived follow strict rules initial facts 

prolog query spec 
toggles enabling disabling speci city 
response query prolog informs user speci city just enabled disabled 
speci city enabled programmer add clauses predicate sup force resolution con icts rules speci city fails determine superiority 
prolog loaded speci city enabled default 
de ning language prolog 
unary functor neg binary functors added prolog 
neg sound negation operator distinguish built negation failure operator 
atom atomic clause atom neg atom complements 
neg atom occur head body rule 
clauses form head body called defeasible rules clauses form head body called undercutting defeaters simply defeaters 
defeasible rule form head true called presumption 
contrast ordinary prolog rules called strict rules 
may derivable strictly defeasibly 
derivable strictly derivable facts strict rules knowledge base 
clause goal strictly derivable just case query goal 
succeeds 
defeasibly derivable derivable clauses knowledge base including defeasible rules presumptions defeaters 
defeasibly derivable strictly derivable 
introduce new unary functor invoke defeasible inference engine clause goal defeasibly derivable just case query goal 
succeeds 
read goal defeasibly goal apparently goal 
unary functor introduced support exhaustive investigation queries 
want way nd single query ground atomic clause negation strictly defeasibly derivable 
response query goal prolog test possibilities give appropriate report de nitely de nitely presumably presumably tell 
example prolog knowledge base 
born usa born atlanta 
neg born usa native speaker greek 
born stavros atlanta true 
native speaker stavros greek true 
knowledge base prolog responds query born stavros usa 
report presumably strict rule superior defeasible rule 
familiar example called nixon diamond demonstrates defeasible rules may defeat 
represent example prolog facts rules 
pacifist quaker 
neg pacifist republican 
quaker nixon 
republican nixon 
correct response query pacifist nixon tell defeasible rules superior 
decide kind situation political party takes priority religious 
add clause prolog knowledge base 
sup pacifist quaker neg pacifist republican 
addition query pacifist nixon 
produces report presumably 
begun new version prolog implements con ict sets closed strict rules failure looping 
grapher knowledge systems model inference speci domains incorporate representations knowledge necessary solve problems domains 
kind decision support tool needed allows users model knowledge represented system 
argumentation system abs provide tools help user represent knowledge domain 
incorporate inference mechanism help user derive knowledge modeled 
system inference process visible user allow user construct variety scenarios easily quickly 
kbs applies preselected argument structures information provided user abs allow user construct evaluate competing arguments subject making decision 
systems sort reported 
grapher argumentation system built implementation defeasible logic 
knowledge represented grapher defeasible graphs graphical representations defeasible logic theories 
nodes defeasible graph represent atoms corresponding consequents rules sets literals corresponding antecedents rules 
nodes connected kinds arrows representing positive negative strict defeasible defeater links 
negative link bar 
negative link represents rule 
literal graph marked true displaying green marked false displaying red 
shown atom negation derived displayed yellow 
describe algorithm propagating markings colors defeasible graph showed nite defeasible graphs initial partial marking algorithm eventually marks node graph 
showed algorithm sound respect earlier version defeasible logic implemented prolog 
means graph marking algorithm provides sound decidable proof theory fragment defeasible logic represented defeasible graphs 
grapher tool building reasoning defeasible graphs 
grapher interface written visual basic allows user build label defeasible graphs drag drop method 
user mark initial set atoms graph green true red false 
user clicks button inference representation graph sent prolog inference engine 
complete set markings returned interface graph marked appropriately 
applications expert system expert decision support system developed uses prolog 
fore helps user select business forecasting method available methods 
selection sixteen di erent criteria 
analysis criteria ect choice forecasting method appeared 
results organized matrix 
cell matrix explanation corresponding criterion strongly weakly indicates counter indicates corresponding method 
explanations converted prolog rules 
small core prolog rules constructed control way indicators counter indicators determine nal selection forecasting method 
prolog control way rules interacted easier write large set rules representing selection matrix 
particular necessary write exceptions rule 
prolog allows exceptions added new rules altering rules knowledge base 
fore interface asks user questions user forecasting requirements data criteria ecting selection forecasting method 
questions asked need know basis meaning answers earlier questions determine question needs asked 
answers determine methods strongly weakly indicated counter indicated 
core rules arrive recommendations determining methods preferred user situation 
system recommendations provides explanation recommendations 
planning learning defeasible logic looks promising planning machine learning initial done areas 
involves orts develop agents perform complex tasks arti cial environment 
environment world simulator written prolog 
supports development arti cial worlds complex ontologies similar seen video games 
agents developed interact worlds learning ontology world interaction objects actors working achieve goal requires complex planning 
graphical interface allows user observe actions softbots move virtual world 
agent interacts object actor world environment agent strength damage level may increase decrease consequence interaction 
learning experiments agent noted salient feature object interacted combined feature consequences action defeasible rule 
example agent pushed object salient feature tree interaction resulted damage agent learn rule damage incurred tree push 
rule guide agent avoid trees damage level high imperative experiment built agent prompt agent interact tree occasion strong 
occasion agent experience damage increase strength pushed tree 
look salient feature tree just encountered learn new speci rule neg damage incurred tree fruit bearing push 
strength enhanced tree fruit bearing push 
third encounter tree result rule damage incurred tree fruit bearing thorny push 
course thorns caused damage original encounter assuming salient feature tree feature agent associated damage 
time agent experiments kind entity previously experienced uses rules learned predict outcome experiment 
outcome di erent prediction agent determines rule supported prediction determines feature entity included rule forms new rule overrule defeat original rule adds store knowledge 
eventually agent developed rules allowed predict outcomes experiments relatively simple environments world 
process simpler rules learned early agent history useless defeated speci rules learned 
added procedure eventually removed rules red long time reasonable primitive model agent learns ontology environment ontology represented 
just rules learned learning agent defeasible plans constructed planning agent 
experiments agent began full understanding ontology environment 
goal learn geography environment locate object transport object location 
task complicated various obstacles doors required keys guardians cause damage safely passed successful attacks agent began simple plan represented presumption example valid plan find gold take gold goto castle true 
agent gold discovered gold guarded dragon knew sword required eliminate add rule knowledge base 
valid plan find sword goto dragon attack dragon goto gold take gold goto castle true 
hand agent located gold unguarded remove rule holding plan just acted delete rst step assert new simpler rule valid plan take gold goto castle true 
agent began set rules telling plans valid 
examples 
neg valid plan step strength low step goto food 
neg valid plan step step take object guarded object actor 
agent library rules simple plans certain situations example valid plan goto food strength low 
move agent determined derive valid plan rules 
derived valid plan move plan 
derive valid plan called planning routine generate new plan valid move 
approach planning interesting consequences 
plans invalid deleted 
plans deleted step time executed 
session possible examine plans agent developed way point abandoned 
possible plan invalid valid 
allow agent return plan pursue having develop new plan 
small number experiments investigate value defeasible logic learning planning simple environments completed experiments show promise approach 
hope return line research near 
normative reasoning earlier section alluded extension defeasible logic incorporated deontic operators 
hunter developed extension prolog implemented features defeasible deontic logic 
prior researchers developed machinery performing normative reasoning framework prolog 
ryu prolog model lending policies university texas model small secured loans pawns described uniform business code 
prolog model parking regulations george mason university 
authors built additional machinery top prolog foundation handle speci issues arose regard normative reasoning way authors approached problems di erent 
case studies ad hoc avor give impression models developed pragmatically limited consideration underlying theoretical issues involved applying defeasible reasoning normative contexts 
ryu lee published papers explored theoretical questions 
relative amount ort expended theory development implementation applications defeasible logic mirror situation research nonmonotonic formalisms generally 
great deal gone development theory continues part convergence occurred 
considerably done implementing nonmonotonic reasoning systems defeasible logic tends lag theoretical development 
cases certainly true defeasible logic experience implementations earlier systems uncovered issues led re nement underlying theories 
number applications involving nonmonotonic reasoning systems remains quite small compared ort gone theoretical 
applications appear implementations nonmonotonic inference systems widely available con dence theoretical implementations depends nally development interesting applications 
conklin 
tool reasons 
journal american society information systems 
covington nute 
prolog programming depth second edition 
prentice hall englewood cli nj 

normative expert system deontic logic defeasible reasoning 
master thesis university georgia 
donnelly 
semantics soundness incompleteness defeasible logic 
master thesis arti cial intelligence center university georgia 
dung kowalski toni 
synthesis proof procedures default reasoning 
proceedings international workshop logic programming synthesis transformation pages 
springer lecture notes computer science 
gabbay 
labelled deductive systems volume 
oxford university press oxford 
ge ner 
default reasoning causal conditional theories 
phd thesis ucla 
research report cognitive systems laboratory department computer science 
ge ner pearl 
framework reasoning defaults 
kyburg loui carlson editors knowledge representation defeasible reasoning studies cognitive systems pages 
kluwer academic publishers boston 

manager guide forecasting 
harvard business review pages 
hua 
hypermedia argumentation decision support systems 
unpublished manuscript 
hunter 
dd prolog deontic extension prolog 
master thesis university georgia 
konolige 
relation default theories autoepistemic logic 
arti cial intelligence 
loui 
defeat arguments system defeasible inference 
computational intelligence 
loui 
theory computation uncertain inference decision 
phd thesis university rochester 
technical report department computer science 
makinson 
fundamental problem deontic logic 
prakken mcnamara editors 
eon th international workshop deontic logic computer science 
universit degli studi di bologna 
makinson 
floating zombie paths deep diculties directly skeptical approach inheritance nets 
arti cial intelligence 
moore 
possible worlds semantics autoepistemic logic 
proceedings non monotonic reasoning workshop menlo park ca 
aaai 

reasons think act 
nute editor defeasible deontic logic synthese library pages 
kluwer academic publishers dordrecht netherlands 
nute 
basic defeasible logic 
nas del cerro editors intensional logics programming pages 
oxford university press 
nute 
decidable quanti ed defeasible logic 
prawitz editors logic methodology philosophy science ix pages 
elsevier science new york 
nute 
defeasible logic 
gabbay hogger editors handbook logic arti cial intelligence logic programming volume iii 
oxford university press oxford 
nute 
apparent obligation 
nute editor defeasible deontic logic synthese library pages 
kluwer academic publishers dordrecht netherlands 
nute 
norms priorities defeasibility 
mcnamara prakken editors norms logics information systems pages 
ios press amsterdam 
nute 
world 
software arti cial intelligence center university georgia 
available online www arches uga edu 
nute erk 
defeasible logic graphs theory 
decision support systems appear 
nute henderson hunter 
defeasible logic graphs ii implementation 
decision support systems appear 
nute lewis 
users manual prolog 
research report arti cial intelligence programs university georgia 
nute mann brewer 
expert system recommendations defeasible logic 
decision support systems 
pollock 
self defeating argument 
minds machines 
pollock 
theory defeasible reasoning 
international journal intelligent systems 

comparison knowledge representation prolog defeasible prolog 
master thesis arti cial intelligence center university georgia 
reiter 
logic default reasoning 
arti cial intelligence 
ryu 
formal representation normative systems defeasible deontic reasoning approach 
phd thesis university texas 
ryu lee 
defeasible deontic reasoning logic programming model 

ch 
meyer wieringa editors deontic logic computer science normative system speci cation 
john wiley sons 
ryu lee 
defeasible deontic reasoning applications normative systems 
decision support systems 
ryu lee 
deontic logic viewed defeasible reasoning 
nute editor defeasible deontic logic essays nonmonotonic normative reasoning 
kluwer academic publishers dordrecht holland 

defeasible reasoning constructive cumulative rules 
casati smith white editors philosophy cognitive sciences pages 
older pichler 
touretzky thomason 
inference algorithm networks mix strict defeasible inheritance 
ras editor proceedings fifth international symposium methodologies intelligent systems 
north holland 

