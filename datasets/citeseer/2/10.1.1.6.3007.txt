generalized resolution theorem pascal hitzler artificial intelligence institute department computer science dresden university technology rounds 
zhang proposed study form resolution algebraic domains 
framework allows reasoning knowledge hierarchically structured forms suitable domain precisely coherent algebraic cpo studied domain theory 
give conditions resolution theorem form underlying resolution logic programming systems obtained 
investigations bear potential engineering new knowledge representation reasoning systems firm domain theoretic background 
keywords domain theory automated theorem proving domain logics resolution domain theory mathematical theory programming semantics grown respected field borderline mathematics computer science 
relationships domain theory logic noted early scott subsequently developed authors including smyth abramsky zhang 
domain logics logics types program correctness focus functional imperative languages 
little relating domain theory logic programming ai paradigms exceptions application methods quantitative domain theory semantic analysis logic programming paradigms studied hitzler seda rounds zhang domain logics disjunctive logic programming default reasoning 
authors introduced form clausal logic generalized coherent algebraic domains motivated theoretical investigations logical nature ordered spaces occuring domain theory 
essence propose interpret finite sets compact elements formal clauses yielding theory links standard domain theoretic notions corresponding logical notions 
things establish sound complete proof theory generalized resolution rule form disjunctive logic programming domains 
corresponding semantic operator turns scott continuous 
study clausal logic henceforth called logic rz convenience 
occurrence proof theory generalized resolution rule poses question results underlying resolution logic programming systems carried logic rz 
fundamental results underlying systems resolution theorem states clause logical consequence theory possible derive contradiction empty clause resolution theory 
just called resolution theorem certainly immediate consequence fact resolution sound complete classical logic 
obvious transfered logic rz mainly necessitates negating clause negation available logic rz explicit form 
observation lead thoughts develop conditions underlying domain ensure negation allows prove theorem 
structured follows 
section review fundamental definitions logic rz laid 
section recall corresponding proof theory form resolution framework 
section simplify proof theory provide rule system simpler easier 
remainder devoted determining conditions resolution theorem form mentioned proven logic rz 
conditions involve atomicity underlying domain studied section form negation spaces studied section 
conclude section 
extended appeared 
preliminaries logic rz partially ordered set pair nonempty set antisymmetric transitive relation subset partially ordered set directed ideal directed downward closed set 
complete partial order cpo short partially ordered set element called bottom element directed set upper bound supremum element said compact finite directed exists set compact elements cpo denoted 
algebraic cpo cpo directed supremum compact elements 
set said scott open just open upward closed directed 
scott topology topology open sets scott open sets 
open set compact open compact scott topology 
coherent algebraic cpo algebraic cpo intersection compact open sets compact open 
coincides coherency notion defined may consulted basic domain theory 
topological notions sequel 
note coherency algebraic cpo implies set minimal upper bounds finite number compact elements finite 
compact elements set mub 
minimal upper bounds elements finite 
note mub element assumed coherent algebraic cpo 
call spaces domains 
elements called inconsistent symbolically common upper bound 
element called atom atomic element 
set atoms domain denoted 
definition coherent algebraic cpo set compact elements 
clause finite subset 
denote set clauses 
clause write exists contains element theory set clauses may empty 
element model theory written equivalently clause contains element clause called logical consequence theory written implies write note holds theories say say logically equivalent written order avoid confusion denote empty clause empty theory 
theory logically closed implies clauses called consistent equivalently rounds zhang originally set characterize logically notion smyth powerdomain coherent algebraic cpos 
naturally lead clausal logic rz definition 
shown smyth powerdomain coherent algebraic domain isomorphic set consistent closed theories domain ordered set inclusion 
corollary proof clause logical consequence theory logical consequence finite subset theory compactness theorem logic rz 
example domain denoted running example 
consider valued logic propositional case usual knowledge ordering set truth values induces pointwise ordering space interpretations partial truth assignments countably infinite set propositional variables language consideration 
partially ordered set coherent algebraic cpo 
compact elements interpretations map finite number propositional variables denote compact elements strings pqr indicates mapped mapped note upward closed logical formula considering kleene strong valued logic recognized important logic programming context 
clause formula disjunctive normal form pqr pq translates note compact element uniquely expressed supremum finite number atomic elements set atomic elements 
furthermore exists bijective function extends naturally scott continuous involution 

clause domain called atomic clause finite subset 
atomic clauses correspond propositional clauses classical sense 
note general example shows knowledge represented algebraic domains 
convenience examples subsets notation example 
example consider subspace constituted elements bird flies fly lives australia lives near south pole bfs penguin bfa 

knowledge representation capabilities logic rz investigations exhibited strong link formal concept analysis 
resolution logic rz sound complete proof theory clausal hyperresolution follows 
clause set clause 
mub hr rule sound sense admissible choice antecedent 
completeness necessary adjoin clausal hyperresolution rule special rule allows inference clause empty clause 
indicate rule follows 
spec addition theory clause stands finite number applications clausal hyperresolution rule special rule 
furthermore shows binary hyperresolution spec complete system consisting binary clausal hyperresolution rule mub bhr special rule sound complete 
set inconsistent mub 
clausal hyperresolution generalizes usual notion resolution rule 
example returning example note bf bfa bhr 
simplifying resolution system note special instances clausal hyperresolution rule follows call reduction rule extension rule 
red ext rule follows hr rule follows 
special rule spec understood instance ext 
note resolution ext red complete 
order see refer example 
pq 
way produce ext red 
easy show induction derived ext red contains su ces 
desire provide sound complete system rules simple possible 
consider rule call simplified hyperresolution 
easy see instance hr general 
mub shr theorem system consisting shr ext red complete 
proof order show completeness derive bhr shr ext red 
furthermore clause mub mub 

exists shr derive mub repeated application ext red obtain 

ext repeatedly add remaining elements argumentation similar 
completes proof 
note rule weaker preconditions red su ces call weakening rule red derived follows 
particular derive equal contained hand derived red ext follows 
show assume extension rule reduction rule applied yielding required 
technical result inspired theorem 
proposition clauses 




proof assume 
arbitrarily chosen 

ext 

conversely assume 






choose 
assumption obtain call system consisting rules red ext shr rad system resolution algebraic domains 
theories write clauses write respectively respectively symbol denotes derivation single application rules rad 
slight abuse notation theories allow write clause 
interpret rad rules setting example 
know clauses correspond formulas disjunctive normal form dnf theories sets dnf formulas 
weakening rule acts single clauses replaces conjunction contained dnf formula conjunction contains subset propositional variables contained original conjunction 
extension rule disjunctively extends dnf formula conjunction propositional variables 

simplified hyperresolution rule takes dnf formulas deletes conjunction forms disjunction resulting formulas conjunction deleted items 
resolved 
interpretation rad system comes standard intuition underlying domain theory 
elements domain interpreted pieces information represents contains information compact elements understood items computationally accessible 
point view rad gives calculus reasoning disjunctive information computation clause finite set computationally accessible information items disjunctive knowledge items 
rules rad yield system deriving knowledge disjunctive information 
weakening rule states replace item contains information 
extension rule states extend knowledge disjunctively bits information 
rules decrease knowledge 
simplified hyperresolution rule states disjunctively merge collections disjunctive information strengthening knowledge replacing items collections item contains pieces information deleting original items 
example example note bf bfa shr bf bfa bfa bfa 
atomic domains simplify proof search resolution requiring stronger conditions domain 
definition atomic domain coherent algebraic cpo property set finite 
domain example example atomic domain 
remainder section atomic domain 
seek represent clause finite set atomic clauses logically equivalent 
define follows 


theorem holds 
theorem clause 
proof clause 
set 

obtain hr 


repeated application weakening rule 
conversely define compact element set clauses 
clause obtain sets clauses 




consequently completes proof 
view theorem su ces study theories atomic clauses obtain stronger result follows provides kind normal forms derivations 
theory define 
theorem atomic domain theory clause tn derivation rad 
exists derivation tn atomic extension rule axt multiple atomic shift rule mas follows 
mub 
furthermore clauses occuring derivation atomic 
proof clauses 
distinguish cases assertion follows easily induction 
reduction rule 
note atomic shift rule ash special instance multiple atomic shift rule 
mub ash follows mas 


say 
loss generality assume 





mub derive 


atomic shift rule 

extension rule 

atomic extension rule derive atomic extension rule su ces 

simplified hyperresolution rule 
mub 
furthermore mub 


note 






mub mub 
multiple atomic shift rule obtain mub 



obtain 
su ces atomic extension rule 
note atomic extension rule special case extension rule multiple atomic shift rule obtained subsequent application hyperresolution rule mub 
multiple instances reduction rule rules sound 
note theorem hold mas replaced binary version bas follows 
mub 
order see consider atomic elements mutually consistent supremum sup ij common upper bound 
empty clause derived theory axt bas 
easy show induction clause derived applications axt bas contains elements domains negation introduce investigate notion negation domains motivated classical negation example 
definition atomic domain called atomic domain negation exists involutive scott continuous negation function properties maps 
ii 
iii finite subset supremum exists 
example example atomic domain negation 
proposition atomic domain negation 

proof 
consistent 
ii definition obtain pair elements consistent iii supremum exists 
monotonicity obtain monotonicity know upper bound consequently required 
result resolution theorem mentioned allows replace search derivations search contradiction 
theorem atomic domain negation 
theory atomic clause 

proof assume follows easily repeated application resolution rule 
conversely assume 
assume exists show exists hypothesis obtain weakening rule atomic domains negation establish sound complete proof principle 
theorem theory clause 
consider 
atomic clause attempt show axt mas 
succeeds conversely exists derivation mentioned rules 
proof theorem derivation carried mentioned rules obtain 
theorem obtain 
theorem yields obtain application theorem noting conversely theorems 
theorem yields theorem obtain derivation done designated rules 
example give example notation example shows atomic domains negation lead directly back consider constituted elements pqr pqr pq pr qp qr rp rq atomic domain negation 

mas mub 
shown certain domains logical consequence logic rz reduced search contradiction result yields proof mechanism similar underlying resolution principle resolution logic programming systems 
result understood foundational establishing logic programming systems hierarchical knowledge formal concept analysis built firm domain theoretic background 
research undertaken substantiate 
william rounds guo qiang zhang 
clausal logic logic programming algebraic domains 
information computation 
samson abramsky achim jung 
domain theory 
samson abramsky dov gabbay thomas maibaum editors handbook logic computer science volume 
clarendon oxford 
dana scott 
domains denotational semantics 
nielsen erik schmidt editors automata languages programming th colloquium july aarhus denmark proceedings volume lecture notes computer science pages 
springer berlin 
michael smyth 
powerdomains predicate transformers topological view 
josep editor automata languages programming th colloquium july barcelona spain proceedings volume lecture notes computer science pages 
springer berlin 
samson abramsky 
domain theory logical form 
annals pure applied logic 
guo qiang zhang 
logic domains 
birkhauser boston 
pascal hitzler 
generalized metrics topology logic programming semantics 
phd thesis department mathematics national university ireland university college cork 
pascal hitzler anthony seda 
generalized metrics uniquely determined logic programs 
theoretical computer science 
guo qiang zhang william rounds 
semantics logic programs representation smyth powerdomains 
klaus keimel editors domains processes pages 
kluwer 
alan robinson 
machine oriented logic resolution principle 
journal acm 
john lloyd 
foundations logic programming 
springer berlin 
pascal hitzler 
resolution theorem algebraic domains 
georg gottlob toby walsh editors proceedings th international joint conference artificial intelligence acapulco mexico august pages 
morgan kaufmann publishers 
peter johnstone 
stone spaces 
number cambridge studies advanced mathematics 
cambridge university press 
gordon plotkin 
universal domain 
journal computer system sciences 
melvin fitting 
kripke kleene semantics general logic programs 
journal logic programming 
pascal hitzler matthias wendt 
formal concept analysis resolution algebraic domains 
aldo de moor bernhard ganter editors conceptual structures contributions iccs pages 
shaker verlag aachen 
guo qiang zhang 
chu spaces concept lattices domains 
proceedings nineteenth conference mathematical foundations programming semantics march montreal canada volume electronic notes theoretical computer science 
thierry coquand guo qiang zhang 
sequents frames completeness 
th international workshop computer science logic germany august volume lecture notes computer science pages 
springer 
pascal hitzler phd dipl math born germany studied mathematics computer science university tubingen germany completed distinction 
phd student dr anthony seda national university ireland university college cork finished dissertation mathematics 
research assistant prof dr ste en holldobler artificial intelligence institute department computer science dresden university germany 
publication record shows publications pure mathematics topology fixed point theory foundations artificial intelligence domain theoretic aspects knowledge representation reasoning logic connectionism programming language semantics particular logic programming 
actively involved running enhancement programmes skilled high school students 
homepage www wv inf tu dresden de pascal 
