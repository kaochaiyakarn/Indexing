ieee transactions systems man cybernetics part systems humans vol 
july imitation alice learning imitate corresponding actions dissimilar embodiments aris nehaniv kerstin dautenhahn imitation powerful mechanism knowledge may transferred agents biological artificial 
key problems topic imitation emerged various areas close artificial intelligence including cognitive social sciences animal behavior robotics human computer interaction embodied intelligence software engineering programming example machine learning 
artificial systems study imitation test models imitation derived observational neurobiological data imitation animals apply different kinds systems ranging robots software agents 
crucial problem imitation correspondence problem mapping action sequences demonstrator imitator agent 
problem particularly obvious agents share embodiment affordances 
describes new general imitation mechanism called action learning imitation correspondence embodiments alice specifically addresses correspondence problem 
mechanism implemented efficacy illustrated testbed created study imitation agent perspective particular agent particular environment 
index terms correspondence problem embodiment imitation machine learning 
social animal species dolphins chimpanzees humans apes ability learn imitation see 
inspired nature past decade researchers attempted design life social agents software robotic artifacts able learn human beings imitation 
hand robot software program human teach simply showing demonstrating needs done exciting new programming paradigm 
hand imitation plays crucial part development humans animals social beings 
robots software systems possess imitative skills important step truly social artifacts see discussions 
manuscript received january revised july 
recommended associate editor 
authors computer science department adaptive systems research group university hertfordshire hertfordshire ab 
mail ac uk 
digital object identifier ieee area social learning animal learns benefiting presence experiences animal influences may support adaptation 
biologists psychologists study social learning animals usually want know nonhuman animals imitate behaviors observe 
provides opportunity investigate cognitive abilities animals compare humans help understand role social interactions development patterns behavior 
theories imitation discussed literature 
discuss particularly influential relevant examples 
byrne proposes string parsing theory imitation separates copying behavioral organization understanding cause effect observed behaviors 
recurring patterns visible stream behavior composed structurally ambiguous strings detected build statistical sketch underlying hierarchical structure turn may aid comprehend cause effect 
linear sequence elements represent simple behaviors recognizable animal different states physical world affected behavior 
theory interesting highly underspecified respect actual underlying mechanisms 
partly inspired theory develops computational algorithms imitation observed behaviors 
promising theory imitation testable predictions heyes ray associative sequence learning asl theory 
theory assumes sequence action units composes behavior imitated unitary 
resolution action units vary depending observer perception 
order observer imitate sequence asl requires processes successfully take place 
horizontal process associates representations action units successive chain observer knows sequence looks vertical process associates directly indirectly sensory representations action units appropriate motor representations observer know perform sequence 
vertical associations captured correspondence library see section iv temporal sequence demonstrator actions relates horizontal process asl 
primary purpose stimulate development testable models imitation guide analytic experiments 
strengths asl applied relatively perceptually opaque actions facial ex imitating alice learning imitate embodiments yield dissimilar sensory inputs observed executed 
weak points asl address effects environment framework see section ii allows handled appropriate metrics 
note theories complementary heyes ray asl theory aims detect copy sequential ordering byrne string parsing aims extract hierarchical organization structure sequential ordering copy higher hierarchical levels 
byrne terms asl deals action level imitation string parsing program level imitation 
robotics researchers inspired biology creating controllers autonomous robots 
imitation powerful learning tool social interaction humans robots multirobot systems takes place 
having robot observe learn perform task experienced teacher presents flexible adaptive solution explicit programming behavior 
learning process faster direct teaching required expert just performing demonstrating task pass required knowledge robot turn may demonstrator imitated robots shown 
robotics research imitation separates mechanism social dimension imitation developing architectures usually vision system identify salient features movements model map appropriate motor outputs robot imitator 
focusing question imitate particular robotic system specified task leads diverse control approaches difficult generalize different platforms contexts 
exception architecture dynamical recurrent associative memory architecture drama learning imitation applied different robot platforms contexts described see studies physical simulated robots 
learning imitation area study investigates agent exploit imitation means acquiring knowledge having solved problem imitate 
scenario discussed robot learns properties environment robot imitating trajectory hilly landscape 
shown providing robot ability imitating teacher agent enhances performance learning synthetic proto language 
imitation means enhancing learning capabilities agent previous examples commonly share common context replicate actions experienced teacher 
increasing interest imitative learning control humanoid robots 
ergonomic benefits functioning environments designed humans humanoid robot inspire sense familiarity improves social dimension interaction having ability imitate humanoid robot believable useful social situations 
imitation increasingly studied software systems 
behavioral cloning method human skills captured reproduced computer program 
human subject performs skill actions recorded situation gave rise action 
log records input learning program 
learning program outputs set rules reproduce skilled behavior 
method construct automatic control systems complex tasks classical control theory inadequate 
experiments described flight simulator modified log actions human subjects flying aircraft 
logs input induction program produced decision tree autopilot code derived 
radically different approach computer programming developed early called programming example 
called programming demonstration pbd user demonstrates examples desired behavior computer 
concept user knows perform task computer need learn computer language order describe carry task 
number examples computer able derive program corresponding user actions performed able repeat generalize program similar situations 
researchers area noticed similarities imitation studies systems inspired cognitive frameworks far 
learning algorithms worked examples developed computer program implements imitation algorithm operates principles similar ones required byrne string parsing theory 
actual embodiment biological artificial agents plays critical role intelligence learning issues studied nouvelle ai embodied ai see 
imitation provides ad hoc mapping demonstrator imitator assumes share identical embodiments systematically investigates constructive solutions correspondence problem dissimilar embodiments see section ii 
general framework imitation dissimilar embodiments section ii 
experimental testbed described section iii section iv generic imitating mechanism alice introduced 
experiments alice implemented platform section discussed section vi 
follow section vii 
ii 
general framework order study imitate define precisely mean imitation context 
classical definition imitation thorndike learning act seeing done definition open ended 
prefer mitchell detailed definition allows agents necessary imitation research robotics computer science 
requirements satisfied evidence imitation ieee transactions systems man cybernetics part systems humans vol 
july copy produced organism machine ii similiar model iii necessary production iv designed similiar imitation powerful learning mechanism general agent approach order identify interesting significant problems prevalent ad hoc approaches imitation robotics research far 
traditional approaches concentrate finding appropriate mechanism imitation developing robot control architecture identifies salient features movements visually observed model maps appropriately built usually static method motor outputs imitator cf 
examples robotic imitation 
model imitator usually interacting share perceive common context 
furthermore social dimension imitation corresponding issues agent imitate usually ignored 
effectively kind approach limits answering question imitate particular robotic system particular imitation task 
led diverse approaches robot controllers imitative learning difficult generalize different contexts different robot platforms 
contrast agent approach imitation considers behavior autonomous agent relation environment including autonomous agents 
mechanisms underlying imitation separated behavior context including social environments motivations relationships agents agent individual learning history 
perspective helps unfold full potential research imitation helps identifying challenging important research issues 
agent perspective broader view includes central questions designing experiments research imitation imitate imitate imitate imitate evaluate successful imitation 
systematic investigation research questions show full potential imitation agent perspective 
imitate important imitating agent chooses demonstrator way engaging imitating behavior benefit imitator way 
need imitate agents tasks needs relevant beneficial 
agent choose demonstrators evaluation performance appropriate behavior possible candidate models required choice 
note demonstrator required aware fact performed behavior model imitator help providing feedback success imitation 
imitate suitable demonstrator imitating agent segment entire demonstrator behavior assigning behavior imitated 
imitator decide suitable time place imitate previously currently observed behavior appropriate carry current context applicable times repeat 
imitate aspects behavior imitated 
may preferable imitate states actions desirable effects observed behavior combination 
structure knowledge transferred poses problem distinction different modes imitation 
byrne propose different kinds imitation program level action level opposite ends spectrum copying organizational structure behavior versus copying surface form behavior 
general consequence agent required ability build hierarchical structures order exhibit program level imitation 
imitate correspondence problem addition deciding imitate agent employ appropriate mechanisms learn carry necessary imitating actions 
embodiment agent affordances play crucial role stated correspondence problem observed behavior model starting state leads model sequence hierarchy subgoals states action effects find execute sequence actions possibly dissimilar embodiment corresponding starting state leads corresponding subgoals corresponding states actions effects possibly responding corresponding events 
statement correspondence problem draws attention fact agents may necessarily share morphology may affordances members species true biological agents differences height humans artificial agents differences motor actuator properties 
having similar embodiments affordances just special case general problem 
evaluate imitation attempt attempt imitate demonstrator behavior needs measure evaluate behavioral matching 
choice appropriate metric important capture notion difference performed desired actions difference attained desired states 
evaluation performed imitator demonstrator external observer 
show issues come imitating agent consider example robot painter 
robot observes human workers house construction site sense choose imitate human paints walls human relevant role assigned robot 
choice imitating alice learning imitate embodiments brief evaluation individual required criteria cover wall surface messy spill paint floor 
painting behavior imitated wall needs painting 
robot painter choose imitate action level replicating exact sequence paint strokes wall demonstrator 
alternatively choose emulate demonstrator necessarily sequence type actions example throwing bucket paint wall aiming result covering wall evenly paint 
robot plan sequence actions send appropriate control signals motors actuators order move limbs 
actual embodiment robot shape number size limbs choice painting tool wider larger brush cover greater surface smaller brush precise play crucial role solution partial correspondence problem 
possible evaluation measure wall surfaces covered paint nearby windows floor carpet 
research imitation robotics usually takes approach studying learning imitation assuming artifact possesses skill imitate successfully turn exploits ability means acquire knowledge 
addresses complementary approach trying imitate learning imitate study specifying necessary mechanisms observed executed actions matched agent imitation learn perform useful behavior 
investigate different attempts imitation evaluated quantified illustrate possible mechanisms solving correspondence problem demonstrator imitator 
differences embodiment animals robotic software systems difficult necessarily impossible acquire corresponding behaviors 
iii 
introducing order study main issues imitation mentioned introduce generic testbed implemented swarm multiagent simulation system 
preliminary results testbed reported 
inspiration comes need create shared environment interacting agents different embodiments affordances 
rules game chess player controls army chess pieces consisting variety different types different movement rules see section iii 
borrow notion having different types chess pieces able move different movement rules treat agents dissimilar embodiments moving familiar board see fig 

actual player game chess studied relevant imitation 
pairs embodied imitator demonstrator agents illustrate interesting research problems imitation familiar context chess generic way 
familiarity fig 

illustrating effect having dissimilar embodiments 
demonstrator queen darker color moves imitated lighter color moves bishop knight 
benefits having simple discrete environment defined precise rules 
range possible behaviors chess agents limited movement related ones 
demonstrator performs random walk board imitator observes sequence moves relevant displacement tries imitate starting point 
considering moves sequentially agent try match eventually performing similar walk board 
imitative behavior performed completion model behavior obstacles static walls dynamic chess pieces edges board obstruct movement 
different granularities addressing imitate data demonstrator behavior structured variety ways effectively reflecting different levels complexity 
specifically depending salience moves important qualitative differences observed 
going discuss briefly different levels granularity successively increasing levels resolution point level trajectory level path level 
considering starting final locations intermediate squares visited demonstrator ignored define point level granularity result trail agent tries reach destination qualitatively different shown demonstrator behavior imitated respect result 
imitator emulates goal cumulative displacement demonstrator see fig 

imitator considers list locations reached sequentially corresponding ones visited successive moves demonstrator trail considerably similar model 
define trajectory level granularity 
case effects individual movements displacements considered sequentially terms cumulative effect detailed imitating behavior emerge 
thought ieee transactions systems man cybernetics part systems humans vol 
july fig 

illustrating effect different granularities 
bishop lighter color moves imitates demonstrator queen darker color moves trajectory level granularity point level granularity 
program level imitation task reaching sequential locations subgoals 
game chess piece move new square long obstacles way 
current version obstacles exist pieces take pieces 
usual mental image pieces sliding board exception knight jumping new location instantly define path level granularity 
precisely path level granularity targets list locations including ones visited demonstrator result movements intermediate ones 
represents greater level resolution trajectory level granularity 
path level granularity thought similar action level imitation trying replicate trajectory demonstrated actions closely possible 
character resulting imitation depends granularity success depends important extra details see section iii 
current perception simplified 
demonstrator behavior preprocessed segmented granularity noise free imitator agent 
generally perception segmentation actions important research issues robotics cognitive science computer vision nature testbed allows away concentrate issues specific imitation 
different metrics evaluating imitation attempts previous section described possible resulting imitations qualitative terms defined various notions successful imitation context 
agent behavior composed sequence moves move results displacement board current previous location 
reasonable way measure imitation success context measure distance square imitator agent moved analogous square visited demonstrator ideally distance zero salient displacement demonstrated behavioral sequence 
possible metrics behavioral metrics including complex ones 
various ways measure distance points plane known metrics fig 

different metrics measuring distance current location hy ha subgoal location vertical axes normalized 
fig 

illustrating qualitative effect different metrics 
king lighter color moves imitates demonstrator queen darker color moves euclidean distance norm infinity norm metric 
mathematical analysis 
distance squares chessboard 
hamming norm norm euclidean distance norm infinity norm different metrics provide different notions distance visualized fig 

example effect different metrics shown fig 

cases imitator get blocked unable get closer subgoal single move depending metric 
example infinity norm value subgoal located diagonally current location rook value current location metric reduced 
table shows possible cases getting stuck happen 
caused default algorithm see section iii examines single moves sequences moves illustrates imitating alice learning imitate embodiments table possible situations displacement possible single move reduce value metric 
displacement subgoal relative current location choice metrics crucial evaluation character attempts imitative behavior 
default imitation algorithm sequence demonstrator moves imitating agent list locations board reached sequentially depending chosen granularity way evaluate imitation success chosen metric 
generate sequence moves define appropriate imitating behavior simple algorithm elements planning learning 
lines pseudocode effectively outline default algorithm default imitation algorithm pseudocode 
observe demonstrator moves 

convert perceived moves sequence subgoals imitation depending granularity 

subgoal displacement 
choose possible move maximally decreases metric distance 

repeat step subgoal reached move strictly reduces distance subgoal 

move subgoal sequence repeat step 
effects dissimilar embodiment demonstrator imitator chess pieces type process straightforward granularity 
move demonstrator resulting displacement board imitator exact move achieve displacement 
repertoire movements warrants similar displacement achieve case dissimilar embodiment complex solutions emerge different degrees success 
movement rules chess pieces interesting combination 
rook single action move arbitrary number squares horizontally vertically bishop moves diagonally 
queen sense uses superset movement rules combining sets king uses related set allows movement directions square time 
knight distinct style moving jumping opposite rectangle 
pawn omitted rules chess move single square direction having significantly restricted movement capabilities simple imitation tasks 
indicate compass direction magnitude individual moves notationally follows nw displacement units diagonally northwest displacement unit south units east knight assigning demonstrator imitator agents instances different chess pieces creates dissimilar embodiments scenario requires solving correspondence problem 
default algorithm produce single action probably sequence actions corresponding action demonstrator sequence attempting successively reduce distance subgoal metric step 
moving target square achieved perfectly due embodiment issues agent move square due movement rules focus default algorithm move subgoal having current error added desired displacement 
demonstrator imitator initial starting point rest imitation attempt correction takes place put imitator back trail allowing errors accumulate 
example consider queen demonstrator performs action move squares east 
imitator queen algorithm simply produce sequence 
sequence produced imitator rook 
imitator king algorithm produce sequence sequential moves single square east 
imitator bishop algorithm produce ne se se ne 
note due embodiment limitations bishop occupy target square different color moving action sequence imitator reach desired square exactly adjacent 
similar embodiment issues occur imitator knight sequences 
corresponding imitation sequence produced default algorithm performed imitator learning association demonstrator imitator actions takes place stage 
crucial limitation default algorithm generate imitating sequences lack planning 
move produced sequence reduces distance current subgoal choice different move beneficial long term leading better location subsequent subgoals time undesirably increasing distance current subgoal 
alternatives potentially increase imitation performance imitator agent 
example knight achieve displacement adjacent square avoid confusion interpreting action names entire knight action set 
avoid multiple names actions correspond hopping squares east square north equivalently square north squares east 
ieee transactions systems man cybernetics part systems humans vol 
july default algorithm see table allowed temporarily increase distance target 
iv 
introducing alice planning learning added system increasing complexity algorithm approach specific generic depending problem domain context 
address easy generalize way introduce alice generic mechanism building correspondences generating method attempts imitation examining history attempts cf 
byrne string parsing approach imitation 
preliminary results alice mechanism implemented reported 
metaphorically speaking correspondence library alice builds functions kind refractive looking glass prism transform demonstrator behavior repertoire imitator actions constrained embodiment 
library action correspondences employed imitating cf 
natural imitation humans dolphins robotic imitation 
mechanisms correspondences type relevant imitation perceptually opaque behaviors sensory motor correspondences extraction structure demonstrated behavior neural mechanisms perception actions affordances direct mapping motor actions mirror neurons 
variety existing machine learning techniques addressing experience learning example reinforcement learning case reasoning inductive learning learning behavioral histories 
intention develop particular new efficient machine learning algorithm 
propose systematically study general framework learning imitate solving correspondence problem 
clearly framework easily combined machine learning techniques 
alice consists components top arbitrary generating method 
component imitator observes new demonstrator action seen imitator relate result generating method action 
relation placed library correspondences 
entries library performing generating method actions observed computationally expensive especially complexity algorithm produces matching behavior increases 
example consider degree freedom robot arm real world solve inverse kinematics equations moving manipulator perceptually opaque behaviors perceived differently observed performed tongue protrusion singing 
stage growth library correspondences example partial relational homomorphism automata associated demonstrator imitator 
point workspace action performed initial configuration solving inverse kinematics wasteful scenario 
second component sequences produced generating method build correspondence library performance imitator directly limited choice algorithm possible improvement response time required observed discussed previous paragraph 
stored imitator sequences valid solutions correspondence problem related demonstrator actions may invalid certain contexts 
second component alice helps overcome difficulties imitator agent examine history discover imitative sequences having modify improve generating algorithm 
define history list actions performed far agent imitating demonstrator actions relative effects possible effects environment 
kind history provides valuable experience data alice extract useful mappings improve add correspondence relation library created point 
methods extracting information vary managing sequences depend additional metrics keep shortest sequence achieve particular effect keep top sequences performance measure 
possible demonstrator action encountered initially say library complete candidate corresponding imitator sequence possible demonstrator action complete set correspondence relations demonstrator imitator necessarily guarantee consistently satisfying performance imitation simple environments 
corresponding sequence may invalid different context observed added library 
apparent world resolution complexity increases context relevant variety quality correspondence relations important 
mechanism extracts sequences history ongoing feature address continue enrich individual mappings alternatives possibly provide better solutions 
second alice component relates byrne string parsing theory discovers underlying structures alternative correspondence solutions program level imitation 
summary alice mechanism high level pseudocode alice mechanism pseudocode consider demonstrator behavior sequence actions 
demonstrator actions demonstrator action observed create new entry correspondence library add imitating alice learning imitate embodiments table ii possible correspondences different imitator types default algorithm generating method euclidean distance metric 
disp relative displacement effect action sequence 
demonstrator type action effect possible sequences effects imitator type shown 
note bishop knight achieve exact desired displacement sequence imitator actions generating method 
entry exists select appropriate action sequence correspondence library 
examine history considering sequences actions performed imitator far 
sequences sequence produces similar effects known effects known demonstrator action include sequence alternative corresponding entry library 
choice default algorithm imitation sequence generating method purely simplicity alice generic approach augment initial choice mechanism replacing 
generating method complex mentioned setting cost recalculating solution considerable correspondence library desirable feature 
bishop sequence ne se imitate queen action see table ii piece currently located northern edge board 
generating algorithm situation order find alternate solution desirable possible alternative sequences se ne included correspondence library 
note sequences move agent desired target square adjacent square 
perfect imitation achieved demonstrator action due imitator embodiment limitations bishop imitator agent knight embodiment exist possible imitating sequences achieve displacement see table ii 
kind sequence default generating algorithm fig 

different possible corresponding sequences knight imitate action ne displacement northeast units demonstrator queen bishop 
alice augments default algorithm 
value metric decreases increases result certain actions 
fig 
different possible solutions correspondence problem knight imitating queen bishop performing particular diagonal move shown 
result imitator achieving displacement imitator follows different trajectory 
note sequences invalid imitator close upper lower edges board respectively having alternative sequences entry correspondence library useful 
fig 
shows possible development alice correspondence library knight imitate queen 
time instances shown observed demonstrator action noted point appropriate vertical horizontal coordinates resulting displacement 
negative positive relative current location chess piece 
correspondence sequences far accomplishes exact displacement dark color tone 
light 
shape slowly emerges relates set actions observed far type demonstrator 
experiments performed section describes experiments performed assess alice simulation 
methodology experimental set order test hypothesis agents dissimilar embodiments improve performance solving ieee transactions systems man cybernetics part systems humans vol 
july fig 

possible development alice correspondence library knight imitate queen 
simulation step knight attempts imitate queen sequence moves 
correspondence build shown intervals simulation steps left right top bottom 
displacement coordinates indicated respect horizontal vertical axes figures observed demonstrator action dark light color tones indicate corresponding sequences entry satisfies imitation criteria perfectly respectively 
demonstrator imitated queen shape slowly emerges composed vertical horizontal diagonal directions characterize movement rules 
correspondence problem imitation testbed provide dissimilar embodied agents engaging imitation behavior alice generic mechanism solving correspondence problem 
statistical significance improvement performance expected alice default algorithm improved generating method compared default generating method 
experiment demonstrator agent performs random walk chessboard agents turn imitate 
demonstrator case embodied queen chess piece limiting movement rules 
choice give demonstrator sequences greatest diverse variety possible classic chess pieces 
experiments described salient perceptual data imitator agent trajectory level granularity 
presents middle ground simplifying point level granularity complicating path level granularity task 
takes advantage natural segmentation actions chess 
length demonstrator behavior run moves 
perceived random walk segmented sequences moves 
demonstrator start initial square 
course run dissimilar embodiments possible displacement errors appear 
imitator reach target square starting different starting point previous target square reached exactly 
errors affect performance chose allow reasons 
unexpected errors absolute location current square change absolute location target square problem slightly modified 
second displacement error complicate imitator task possibly simplify placing agent better location depending movement rules 
third nature barring intervention teacher resetting relocation imitator occurs course attempt imitation 
metric experiments hamming norm 
observed choice metric hamming euclidean infinity norm algorithm affect significantly quantitative performance measures evaluate performance 
qualitatively character resulting imitative behaviors vary different metrics see section iii fig 

performance measures order provide view imitation attempt 
displacement performance measure imitation metric default algorithm takes account distance performance measure focuses aspect behavior 
measures success minimizing distance successive subgoals behavioral sequence error divided initial distance subgoal metric giving indication close subgoal imitator 
displacement performance measure remaining distance current subgoal 
initial distance current subgoal 
subgoal performance measure demonstrator sequence moves measure number subgoals achieved total number subgoals 
indication subgoals behavioral sequence imitator managed achieve depending granularity 
subgoal performance measure number subgoals achieved imitator 
total number subgoals demonstrator sequence 
implementation second component alice requires specification method extract sequences order correct error place agent back trail imitator corrective move part normal repertoire 
add unclassified events agent history complicates alice history longer linear 
alice history corrective events removed effects accounted corrective type move allowed agent movement rules moves invalid agent 
correction method 
measures possible performance measure speed performance measure measuring moves imitator subgoal moves demonstrator 
demonstrator speed sequence depends granularity level 
example trajectory level granularity move subgoal granularity subgoals move point granularity moves subgoal 
scenario imitating agents severely limited embodiment movement rules metrics generating method consider fast chess pieces move performance measure slightly modified setting 
imitating alice learning imitate embodiments imitating agent history 
design issue accomplished variety ways depending platform 
current scenario simple method 
simulation time step consider moving window variable length actions scanning history backward 
agent assumed knowledge effects actions particular embodiment repertoire effect sequence known 
exact effect noted result demonstrator action correspondence library sequence included entry 
example knight able discover move adjacent squares manner 
note require exact match effects displacement case allow near matches metric depending action effects considered 
solutions previously seen problems added reason overload correspondence library unnecessary data imitator prior knowledge complete set demonstrator actions 
maintenance correspondence library deliberately simple scenario 
limit correspondences exist single demonstrator action kind sorting corresponding sequences takes place 
imitator looks known demonstrator action randomly selected best far solution returned exists 
results interpretation results plots figures shows imitation attempts random walk demonstrator chessboard different kind chess pieces 
simulation step agent attempts imitate demonstrator move sequence 
sequence average performance measure value simulation runs plotted 
standard deviation measure runs shown dotted line 
value shows perfect imitation performance measure 
plot shows performance generating method plot shows performance alice mechanism default generating method 
king rook agents embodied king rook chess pieces imitate perfectly random walks demonstrator queen displacement subgoal performance measures described 
pieces easily reach subgoal king repeated single square moves rook pair horizontal vertical moves diagonal displacement required 
correspondence problem case relatively simple perform perfectly default algorithm necessary alice mechanism 
knight imitator solving correspondence problem knight imitating queen interesting embodiment prevent agent moving square chessboard solutions impossible find default algorithm generating method 
figs 
illustrate improvement performance displacement performance subgoal performance measures respectively attained alice 
fig 

displacement performance measure knight imitating queen average demonstrator random walks 
simulation step agent attempts imitate demonstrator move sequence 
sequence average displacement performance measure value different simulation runs random walk demonstrator plotted 
standard deviation sequence shown dotted line 
alice mechanism generating method default algorithm 
agent default algorithm generating method partially successful perfect performance attained displacement performance measure average subgoal performance measure average showing improvement 
demonstrator behavior alice mechanism generating method correspondence library introduced eventually level generally perfect performance achieved 
similar experiments carried runs demonstrator random walk runs different demonstrator random walks case 
shown fig 
results similar 
approximately imitation attempts performance difference remains highly statistically significant sample tests assuming unequal variances variances homogeneous tests 
expect perfect performance level correspondence library complete sense possible demonstrator moves observed appropriate correspondence sequences noted glitches sporadically observed 
noted section iv unexpected dimensions squares restrictive correspondences invalid ieee transactions systems man cybernetics part systems humans vol 
july fig 

subgoal performance measure knight imitating queen average demonstrator random walks alice alice 
sequence average subgoal performance measure value different simulation runs random walk demonstrator plotted 
boundaries 
glitches performance level occur demonstrator moves close edges board imitator appropriate corresponding sequence actions context 
test case repeated experiment demonstrator random walk happening center larger chessboard situations arise performance level correspondence library perfectly matching entries remains constantly 
shown fig 

bishop imitator imitator embodiment bishop chess piece major disadvantage half locations chessboard visited 
improved solutions correspondence problem default algorithm generating method 
alice mechanism yields noticeable performance improvement seen figs 
demonstrator random walk visits significant amount inaccessible locations 
performing tests showed statistically significant difference performance 
vi 
summary results examining different chess pieces imitator agent embodiments established alice mechanism useful solving correspondence problem augmenting simple fig 

displacement performance measure knight imitating queen average different demonstrator random walks alice alice 
sequence average displacement performance measure value different simulation runs different demonstrator random walk plotted 
imitation sequence generating methods 
depending specific affordances embodiment contribution alice improving imitating performance significant complementary 
movement affordances sequences moves imitator king rook embodiments allow attain single move displacement achievable demonstrator queen allow perfect performance performance measures solutions correspondence problem qualitatively different demonstrated model see example fig 

perfect performance improved alice mechanism alice reduce need generate imitating sequences constructed previously exploit correspondence library see section iv 
bishop embodiment affords complementary subset moves rook severely comparison pieces embodiments reach half positions board pieces 
generating method get bishop close possible target square significant performance difference noted alice benefits correspondence library described earlier 
imitating alice learning imitate embodiments fig 

displacement performance measure knight imitating queen unconstrained context average demonstrator random walks alice alice 
sequence average displacement performance measure value different simulation runs random walk demonstrator plotted 
demonstrator random walk figs 
takes place center squares chessboard 
knight embodiment example seemingly complicated repertoire moves successfully mimic possible demonstrator actions correspondence problem solved 
demonstrator actions require imitating sequences knight default algorithm 
alice shown significantly improve performance 
demonstrator actions performed initial correspondence library entries created expect gradual improvement performance resulting permanent near perfect level performance possible demonstrator actions observed suitable correspondences default generating method mechanism extracts additional correspondence sequences history 
important alternative correspondence sequences demonstrator action imitative sequences may invalid different context originally observed 
original chessboard restrictive effect results observed glitches constant performance level imitator 
agents placed larger chessboard edges longer obstruct performance corresponding sequences imitator performance level complete correspondence library attained subject glitches due contextual factors 
fig 

displacement performance measure bishop imitating queen average demonstrator random walks alice alice 
sequence average displacement performance measure value different simulation runs random walk demonstrator plotted 
vii 
imitation behavioral matching serve fundamental components behavior acquisition humans animals artificial systems 
agent embodiment different metrics subgoal granularities affect success character imitation observed 
order agent successfully imitate correspondence problem needs solved finding appropriate mappings actions ones demonstrator agent possibly dissimilar embodiment 
possible build solution correspondence problem incrementally learning observing demonstrator time 
correspondence serves refractive looking glass observed demonstrator behavior transformed yield similar possibly quite action sequences imitator 
allows imitator get affordances embodiment exploiting observations behavior environment 
showed imitator agent alice exposed demonstrator behavior build useful partial solutions correspondence problem mapping demonstrator actions perform particular embodiment achieve similar effects exhibiting highly successful imitating performance 
effectively alice provides combination learning memory help solve corre ieee transactions systems man cybernetics part systems humans vol 
july fig 

subgoal performance measure bishop imitating queen average different demonstrator random walks alice alice 
sequence average subgoal performance measure value different simulation runs different demonstrator random walk demonstrator plotted 
problem 
generalization learned corresponding action sequences reused imitator new situations contexts 
due generic nature alice implemented variety ways depending specific generating method platform 
contrary traditional approach robotics research imitation concentrates creating dedicated control architectures ignoring social dimension imitation general agent approach considers behavior particular autonomous agents relation environment various agent specific metrics perceptual saliency criteria 
specifically addressing interaction form basis harnessing imitation richer social interactions artifacts artifacts humans 
lead better understanding animal imitation improved design imitation algorithms robots 
alice mechanism requires addition correspondence library agent able keep track actions mechanism extract additional useful correspondences personal history 
contents development correspondence library depend types effects actions demonstrator imitator agents capable depending embodiments experience 
methods implementa tion extract useful correspondence sequences history simple methods setting depend structure personal history agents keep 
implementation alice mechanism correspondence library imitator agent history relatively simple small set actions chess moves single type effect displacement chessboard 
history kept track relative displacements caused imitator actions 
method extract correspondences history involved looking sequences bounded length perfectly achieve corresponding effect metric 
correspondence library visualized vertical horizontal axes dimensional plane sorting maintenance correspondence library entries needed 
different environment complex agents complex implementation alice mechanism necessary dealing actions may diverse type effects 
example agents move environment interact directly able pick objects move complex implementation history required keeping track imitator actions resulting effects 
mechanism extract correspondences able cope history 
extracted sequences correspondence library entry require form sorting action correspondence performance evaluation metric 
plan bring alice complex testbeds study requirements method extracts alternative corresponding sequences history imitator complex settings address issues perception segmentation context self repair self imitation previous optimal behavior advanced machine learning techniques components alice 
scaling real world platforms describe early progress implementing alice mechanism robotic arm simulation 
case demonstrator imitator agents robotic arm manipulators different numbers joints lengths joints operating workspace 
acknowledgment personal inspiration 
authors anonymous reviewers constructive comments 
nehaniv dautenhahn learning things imitation proc 
amer 
assoc 
artif 
intell 
fall symp 
learning things pp 

looking glass alice trying imitate correspondences proc 
int 
workshop epigenetic robotics modeling cognitive development robotic syst lund sweden pp 

correspondences different robotic embodiments proc 
fifth german workshop artif 
life beck germany pp 

imitating alice learning imitate embodiments gaussier moga nadel learning communication imitation autonomous robot perspective ieee trans 
syst man cybern pt 
vol 
pp 
sept 
arbib mirror system imitation evolution language imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

atkeson hale riley schaal shibata vijayakumar kawato kawato humanoid robots study human behavior ieee intell 
syst vol 
pp 
aug 
billard drama connectionist model robot learning experiments grounding communication imitation autonomous robots ph dissertation dept artif 
intell univ edinburgh edinburgh oct 
imitation means enhance learning synthetic autonomous robots imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

billard dautenhahn experiments learning imitation grounding communication robotic agents adapt 
beh vol 
pp 

grounding communication autonomous robots experimental study robot 
auton 
syst vol 
pp 

billard hayes dautenhahn imitation skills means enhance learning synthetic proto language autonomous robot proc 
aisb symp 
imitation animals artifacts 
edinburgh pp 

breazeal scassellati infant social interactions robot human caretaker adapt 
beh vol 

brooks cambrian intelligence 
cambridge ma mit press 
byrne imitation intentionality 
string parsing copy organization behavior animal cogn vol 
pp 

byrne learning imitation hierarchical approach beh 
brain sci vol 
pp 

call carpenter sources information social learning imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

cypher ed watch programming demonstration 
cambridge ma mit press 
dautenhahn trying imitate step releasing robots social isolation proc 
perception action conf lausanne switzerland pp 

dautenhahn getting know artificial social intelligence autonomous robots robot 
auton 
syst vol 
pp 

dautenhahn nehaniv eds imitation animals artifacts 
cambridge ma mit press 
dautenhahn nehaniv agent perspective imitation imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

demiris hayes imitative learning mechanisms robots humans proc 
fifth eur 
workshop learning robots bari italy pp 

active passive routes imitation proc 
aisb symp 
imitation animals artifacts 
edinburgh pp 

model imitation learning algorithms worked examples cybern 
syst special issue imitation natural artificial systems vol 
pp 

gallese rizzolatti action recognition premotor cortex brain vol 
pp 

gaussier moga perception action loops imitation processes bottom approach learning imitation appl 
artif 
intell 
special issue socially intelligent agents vol 
pp 

hayes demiris robot controller learning imitation proc 
second int 
symp 
intell 
robotic syst grenoble france pp 

herman vocal social self imitation dolphins imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

heyes transformational associative theories imitation imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

heyes jr eds learning animals roots culture 
new york academic 
heyes ray significance imitation animals adv 
study beh vol 
pp 

kolodner case reasoning 
san mateo ca morgan kaufmann 
kuniyoshi inoue inaba design implementation system generates assembly programs visual recognition human action sequences proc 
ieee int 
workshop intell 
robots syst pp 

kuniyoshi inaba inoue learning watching extracting reusable task knowledge visual observations human performance ieee trans 
robot 
automat vol 
pp 
nov 
lieberman ed special issue programming example commun 
acm vol 
pp 

matari getting humanoids move imitate ieee intell 
syst vol 
pp 
july aug 
matari representation behavioral history learning nonstationary conditions robot 
auton 
syst vol 
pp 

mitchell comparative developmental approach understanding imitation perspectives vol 
pp 

nadel butterworth eds imitation infancy 
cambridge cambridge univ press 
nehaniv dautenhahn helicopters algebraic framework interdisciplinary studies imitation applications interdisciplinary approaches robot learning singapore world scientific 
measures correspondence imitation cybern 
syst int 
vol 
pp 

correspondence problem imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

matari learning interacting human robot domains ieee trans 
syst man cybern 
vol 
pp 
sept 
pfeifer scheier understanding intelligence 
cambridge ma mit press 
quinlan programs machine learning 
san mateo ca morgan kauffman 
rizzolatti arbib language grasp trends neurosci vol 
pp 

rudin principles mathematical analysis rd ed 
new york mcgraw hill 
sammut hurst michie learning fly imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

schaal imitation learning route humanoid robots trends cogn 
sci vol 
pp 

sutton barto reinforcement learning 
cambridge ma mit press 
thorndike animal intelligence experimental study associative process animals psychol 
rev 
pp 

whiten imitation sequential hierarchical structure action experimental studies children chimpanzee imitation animals artifacts dautenhahn nehaniv eds 
cambridge ma mit press pp 

imitation forms social learning animals evidence function mechanisms cybern 
syst special issue imitation natural artificial systems vol 
pp 

aris received eng 
degree cybernetics department cybernetics university reading reading 
currently pursuing ph degree adaptive systems research group computer science department university hertfordshire hertfordshire research interests include artificial life imitation artificial systems 
ieee transactions systems man cybernetics part systems humans vol 
july nehaniv received ph degree mathematics university california berkeley 
currently professor mathematical evolutionary computer sciences university hertfordshire hertfordshire taught conducted interdisciplinary research various universities united states japan great britain hungary 
associate editor journal biosystems director engineering physical science research council network evolvability biological software systems 
kerstin dautenhahn received ph degree biological cybernetics department university bielefeld bielefeld germany 
currently reader artificial intelligence adaptive systems research group university hertfordshire england 
previously worked gmd st augustin germany vub ai lab brussels belgium 
initiated led research projects socially intelligent agents social robotics 
currently directs robotics interactive systems laboratory university hertfordshire hertfordshire associate editor journal adaptive behavior 
