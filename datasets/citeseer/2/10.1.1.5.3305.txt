building content publish subscribe systems distributed hash tables david tam reza hans arno jacobsen department electrical computer engineering university toronto toronto canada jacobsen toronto edu 
building distributed content publish subscribe systems remained challenge 
existing solutions typically relatively small set trusted computers brokers may lead scalability concerns large internet scale workloads 
broker maintains state large number users may difficult tolerate faults broker 
propose approach building content publish subscribe systems top distributed hash table dht systems 
dht systems effectively scalable fault tolerant resource lookup large peer peer networks 
approach provides predicate query semantics supports constrained range queries 
experimental evaluation shows approach scalable thousands brokers proper tuning required 
publish subscribe systems increasingly popular building large distributed information systems 
systems subscribers specify interests system set subscriptions 
publishers submit new information system set publications 
receiving publication system searches matching subscriptions notifies interested subscribers 
client server model publish subscribe model decouples time space flow publishers subscribers may lead benefits reduced program complexity resource consumption 
major classes publish subscribe systems topic ii content 
topic systems subscribers join group containing topic interest 
publications belong topic broadcasted members group 
publishers subscribers explicitly specify group wish join 
topic systems similar earlier group communication event notification systems newsgroups 
appear international workshop databases information systems peer peer computing september humboldt university berlin germany ii lecture notes computer science springer verlag 
content publish subscribe systems matching subscriptions publications content prior knowledge needed set available topics 
systems flexible useful subscribers specify interests accurately set predicates 
main challenge building systems develop efficient matching algorithm scales millions publications subscriptions 
publish subscribe systems implemented centrally distributed manner 
centralized systems advantage retaining global image system times enabling intelligent optimizations matching process 
examples intelligent matching algorithms :10.1.1.22.55
major disadvantages centralized systems lack scalability fault tolerance 
distributed publish subscribe systems introduced address problems 
main difficulty building distributed content systems design efficient distributed matching algorithm 
existing distributed content systems typically rely small number trusted brokers inter connected high bandwidth network 
scenarios configurations may offer adequate scalability 
provide satisfactory level fault tolerance crashing single broker may result large number state transfer operations recovery 
distributed hash tables dhts emerged infrastructure efficient scalable resource lookup large peer peer distributed networks :10.1.1.140.3129:10.1.1.142.752:10.1.1.105.3673
systems decentralized scalable self organizing automatically adapt arrival departure failure nodes network 
characteristics dhts attractive building distributed applications 
fact dhts successfully application domains distributed file systems :10.1.1.159.9358:10.1.1.119.567:10.1.1.11.3814
shown topic publish subscribe systems built top dhts 
attempts building content publish subscribe systems top peer peer systems remains explored :10.1.1.10.3378
compared system systems described exploit underlying dht infrastructure different degrees 
simple approach building distributed content publish subscribe system top dht 
specifically topic system scribe implemented dht pastry :10.1.1.142.752:10.1.1.20.299
approach topics automatically detected content subscriptions publications schema set guidelines selecting topics 
schema application specific provided application designer statistical analysis 
schemas similar database schemas rdbms 
approach significantly increase expressiveness subscriptions compared purely topic systems 
scheme fully provide query semantics traditional content system 
queries completely free form adhere predefined template 
issues fault tolerance tion storage explored system fault tolerance dht routing multicast routing transparently handled pastry scribe respectively 
implement scheme top existing dht simulator included pastry 
evaluation shows carefully designed schema possible achieve accurate efficient scalable matching 
remainder organized follows 
section review related including brief overview dht systems 
sections describe key features design 
section experimental platform results discussed 
section conclude suggest directions 
related typical dht system node unique identifier nodeid 
message associated key type nodeids 
keys nodeids typically uniformly distributed 
message corresponding key dht system routes message node nodeid numerically closest message key home node 
uniform distribution nodeids keys routing task evenly distributed nodes network 
message routing algorithm works key nodeid digits base 
routing usually requires logn hops total number nodes network 
order tolerate node failures network disconnections methods replicate messages set neighboring nodes home node 
order increase locality proximity metric may defined reflect latency bandwidth connection pair nodes 
proximity metric keys finding optimal route nodes 
scribe topic publish subscribe system multicast infrastructure built top pastry dht system developed rice university :10.1.1.142.752:10.1.1.20.299
subscribers join topics interest topic identified pastry level key 
topic pastry node nodeid numerically closest topic key topic root 
publications submitted corresponding topics 
publication multicasted subscribers topic 
scribe simple structured topic system 
support content subscriptions publications 
siena distributed content event notification system implement publish subscribe system 
routing performed overlay network content messages 
siena dht networking substrate 
take advantage inherent scalability fault tolerance infrastructure 
content publish subscribe systems handling range queries important capability possess 
allows higher expressiveness elegant interface system 
number projects described attempted address issue peer peer systems 
freepastry open source implementation pastry 
extensions proposed evaluated enable range queries :10.1.1.140.3129:10.1.1.140.3129
dht hash function modified hilbert space filling curve map attribute value location key space 
curve enables proximity attribute value space correspond proximity key space 
configuration routing searching key space corresponds routing searching attribute value space 
addresses range queries single attribute extending technique handle range queries multiple attributes addressed 
clear handling multiple attributes accomplished simply applying technique multiple times 
explained extension technique handle multiple attributes single enhanced dht system interesting problem remains completed 
skipnet offers alternative complimentary technology dhts :10.1.1.118.8846
distributed form skip lists data structure skipnet able control routing data placement overlay network 
harvey briefly suggest skip lists enables skipnet inherit ability perform range queries efficient flexible manner 
implementation evaluation range queries skipnet reported 
grid alternative dhts uses distributed binary tree hash table 
gupta develop peer peer data sharing architecture providing approximate answers range queries finding similar ranges :10.1.1.11.9880
locality sensitive hashing scheme locate similar ranges 
contribution important providing dbms query processing peer peer systems practical content publish subscribe hash function error rate approach may high 
extend approximately process basic range queries 
design approach bridges gap topic content systems automatically organizing content topics 
publication subscription build set topics submission topic system 
automatically building topics requires content provided user application follows certain rules constraints 
call rules constraints schema 
application domain may different schema system capable handling multiple domain schemas simultaneously 
domain schema application domain define schema describe general format subscriptions publications belong domain 
idea domain schema similar dbms style schema 
purpose domain schema limit number possible combinations messages table 
example schema table computers indices 
index useful subscribers concerned mainly price visible quality 
second index useful subscribers concerned mainly processing power 
third index useful subscribers concerned mainly storage capacity combined processing power order type unit name values index index index usd price 
string cpu pii piii celeron mhz clock 
mbyte ram 
gbyte hdd 
inch monitor 
string cd cdrom dvd string quality new demo generated sent dht system 
technique enables feasibly transform topic publish subscribe system content system 
schema broadcasted nodes running relevant applications prior operation applications 
domain identified unique id name system handle multiple application domains simultaneously 
instance publish subscribe system may stock market auction network simultaneously 
schema consists tables standard name 
table maintain information set attributes including type name constraints possible values 
assume table attributes ordered 
table set indices actual lookup network 
index ordered collection strategically selected attributes 
selecting optimal set attributes indices essential achieving acceptable performance 
similar indices database systems imperative choose attributes user concern users lookup 
table shows simple example schema table 
contains indices corresponding users various interests 
currently require application designers intelligently specify domain schemas manually 
designers assisted profiles centralized content system identify important attributes values 
basic system operation request publication subscription submitted system inspected extract index digests 
index digest string characters formed concatenating attribute type name value attribute index 
example schema table possible topic digests usd price inch monitor string quality string cpu piii mhz clock mbyte ram 
simple case assume subscribers provide exact values attribute 
handling range queries discussed section 
schemas key technique significantly reducing number topic digests corresponding messages 
schema technique require digest possible combination predicates subscription 
maximum number digests number predicates subscription 
requirements generate extremely large number messages render system infeasible 
subscription submitted system specifies attribute values indices corresponding schema table 
case composed index digest translated dht hash key 
subscription sent key home node dht system 
publication attribute values match subscription submitted system hash key generated publication delivered node network 
matching partial subset subscription predicates matched way 
key home node responsible completing matching process comparing publication submitted subscriptions node 
standard centralized matching algorithm home node purpose 
nodes subscriptions completely match publication notified hash key home node 
event notification multicast tree problem basic scheme home nodes may overloaded task processing publications subscriptions 
improvement scheme build multicast tree structure enable better distribution tasks 
multicast tree constructed nodes subscribed certain hash key 
root tree hash key home node branches formed routes subscriber nodes root 
similar root node internal nodes tree may may subscribed index key 
scribe multicast tree infrastructure exploited system achieve scalable performance 
implement efficient multicasting scribe builds multicast tree rooted topic root node follows 
subscription finds route topic root intermediate nodes route added multicast notification tree belong 
particular scenario routing stops encountering edge corresponding multicast tree 
optimization enables subscription operation efficient completely distributed 
multicast tree structure significantly reduces total number messages generated subscribers allowing subscriptions submitted lower levels tree obviating need traverse entire route root node 
lower level nodes absorb home node may may subscribed hash key 
targeted root node prevent root node bottleneck matching process 
multicasting publication sent topic root publication sent way multicast tree 
infrastructure significantly reduce number messages generated publishers ii notification latency 
event notification accomplished logn time number nodes 
details scribe multicast infrastructure 
section section describe scribe multicast tree exploited improve basic matching scheme 
handling false positives predicates subscription may indices publications sent index home node may match predicates subscription 
fact match subset subscription predicates specified index 
term refer received publication partially matches submitted subscription fully match 
term hit refer received publication fully matches submitted subscription 
filter misses exact matching performed receiver node conventional matching algorithms 
subscriptions publications uniformly distributed network matching process occurs distributed manner scales number publications 
multicast trees event notification allows distribution matching process nodes multicast tree concentrating solely root node 
index values frequently multicast tree grows proportionately number users index value matching load automatically balanced 
impact false positives examined experiments illustrated variety hit rate curves see fig 
fig 

range queries disjunctive forms potential complexity content subscriptions constraint attributes may specified range exact value 
naive approach handling queries build hash keys indices include range predicates 
disadvantage approach fold 
subscriptions range predicates may possible indices indices submission 
solution suggests dropping subscriptions results practical system 
second solution limits index selection policy result accurate partial matching 
method handling range predicates build separate index hash key attribute value specified range 
solution adequate attributes value domains large 
instance table may handful possible values monitor attribute 
attributes price value range include thousands possible values 
solution types attributes divide range values intervals interval indicators values building hash keys 
instance ram attribute may suggest possible intervals greater 
predicate ram mbyte belong keys ram ram greater 
course matching occurs scheme partial actual complete matching performed nodes multicast tree 
probability distribution function attribute possible improve division value intervals choosing interval boundaries collective probability interval equal 
means value subranges queried frequently intervals finer grained 
instance table density values clock attribute may higher near main stream processors frequencies ghz ghz older processors ghz high performance processors greater ghz 
having handful values attribute may able confine total number hash keys subscription order tens 
show section possible maintain acceptable performance solution cost subscription multicast tree system relatively low 
similar range queries disjunctive form subscriptions may treated set separate conjunctive subscriptions hash keys generated separate subscription 
duplicate notifications problem basic scheme possible publication sent times single subscriber subscriber indices 
solution problem subscriber maintain list publications seen publication unique identifier discard duplicate publication messages 
list may relatively small average propagation time publication small 
expected publication duplicates received subscriber relatively short interval 
subscriber may able set short deadline publication purge copy list deadline 
better solution prevent subscriber submitting index digest allow submit index digest applicable index 
case subscriber submit index digest corresponding index important 
solution publications specify values attributes believe common case publishers information sources 
publication specify value attribute index publication missed subscribers index 
experiments publishers specify values attributes 
implementation implemented approach top scribe pastry 
choice platform fundamental design built system top dht system 
advantageous exploit multicast tree infrastructure scribe manually implemented exist 
scribe pastry platform implemented java 
simulates network nodes arbitrary size 
networks associated proximity metric improve locality 
optimizations transparent system 
platform allows bind java object node application 
object implement interface provides functions 
called pastry system message delivered node called node located route forwarding message node 
programmability able embed functionality content publish subscribe system application object 
instrumented calls methods collect statistics understand behavior system 
evaluation preliminary dht content publish subscribe system main performance goal scalability 
want ensure size system grows performance remains relatively reasonable 
section evaluate feasibility system 
metric number messages exchanged system 
metric reasonable order measurement system 
distributed systems deal communication computation physically separate nodes measuring traffic characteristics important 
detailed metrics concerning communication characteristics latency bandwidth consumption gathered 
area subject 
measuring number messages offers order evaluation system performance 
examine impact changes various system parameters number messages 
parameters include number publications subscriptions number nodes system number range predicates subscription 
experimental setup pastry scribe includes network simulator enabling simulate nodes physical computer 
workload generator generate synthetic workloads 
workload followed schema table described table 
schema table defines possible values attributes 
instance price value 
value ranges inappropriate table 
workload schema table order type name values index index index index integer price integer volume integer color integer size integer temperature integer circumference simplicity 
reality dht concerned possible values color red green blue cyan magenta possible values 
values input hash function generates fixed size key 
particular attribute integer values randomly generated workload generator uniform distribution specified range 
particular workload unique hash key values 
recognize workload necessarily represent real world application 
provides simple example fairly typical subscription publication may look 
results produced workload easily understood analyzed 
difficult find real world content publish subscribe system obtain workload traces 
chosen schema size table small examination table may help predict impact schema growth 
example number attributes table increase dramatically expect moderate increase number indices application domain 
pattern appears plausible due inherent nature indices 
index formed set commonly attributes number indices largely independent number attributes available 
schema size limited impact performance 
size value ranges number intervals attribute parameter may limited impact performance 
important characteristic distribution range queries intervals 
example particular application domain range queries particular attribute may intersect intervals regardless number available intervals 
case corresponding hash keys submitted 
experiments viewed examining performance impact intervals intersection 
event scalability shows scalability system terms number events 
impact number subscriptions publications number messages exchanged 
number nodes fixed nodes 
axis graph subscriptions publications refers random subscriptions followed random publications 
equal number subscriptions publications simplicity 
show various hit rates affected number messages generated 
hit rate proportion delivered publications fully match subscriptions maintained node 
enforce hit rate schema index consisted attributes table index 
enforce hit rates exploit fact workload generator randomly chooses attribute values uniformly distributed manner 
attain hit rate schema index consisted attributes index 
attain hit rate schema index consisted attributes index 
attain hit rate schema index consisted attributes index 
observation fig 
message traffic particular hit rate grows approximately quadratically number subscriptions publications 
growth reasonable subscriptions publications increased simultaneously 
second observation incremental impact various hit rates shown separate curves graph 
expect hit rate means node receives twice publication messages really destined node 
similarly hit rate times publication messages generated compared hit rate configuration 
interestingly results showed lower expected increases 
experiments indicated total messages shown axis fig 
publication messages 
composition subscriptions publications hit rate 
hit rate expected increase total messages observed increase 
hit rate expected increase total messages observed increase 
lower expected increases due multicast notification trees 
publication notifications triggered additional messages needed reach additional subscribing node 
phenomenon leads smaller observed increase message traffic various hit rate curves 
low hit rate curve shows relatively steep traffic increase compared higher hit rates 
results suggest important designed schema indices incur hit rates greater 
complementary techniques subscription summaries may applicable reducing message size 
current implementation exact matching publications subscriptions done leaves multicast notification trees 
results fig 
improved implementing exact matching higher multicast tree 
reductions message traffic carefully balanced increased processor load nodes performing exact correlation subscriptions publications 
guarantee subscription matched publication 
messages exchanged hit rate hit rate hit rate hit rate subscriptions publications fig 

scalability number events 
nodes messages exchanged nodes hit rate hit rate hit rate hit rate fig 

scalability number nodes 
subscriptions publications matching 
summary trade message traffic node processor workload 
node scalability shows scalability system terms number nodes 
system fixed number events consisting random subscriptions followed random publications 
value arbitrarily chosen represented middle point range values fig 

results show system scales hit rates hit rate 
results suggest important designed schema indices incur hit rates greater 
impact range queries shows impact range queries 
order isolate impact index table 
range curve represents workload range queries 
range curve attribute price allowed specify range 
may specifications rice rice rice choice chosen randomly uniform distribution 
attributes specify exact values 
similarly range curve second attributes price volume allowed specify ranges 
results suggest range queries moderate acceptable impact system 
range curve price attribute possible values 
range query average index digests submitted uniformly random distribution 
selection operator messages exchanged ranges range ranges subscriptions publications fig 

impact range queries 
nodes messages exchanged nodes ranges range ranges fig 

scalability number nodes range queries 
subscriptions publications uniformly distributed 
probability particular operator expected number index digest submissions operator expected number index digest submissions subscription similarly expected publications require times messages roughly times interested subscribers 
due expected increases subscription publication components expected times total messages range curve 
contrast results show times messages subscriptions publications 
similarly range curve expected times messages range curve 
contrast results show times messages 
beneficial results due multicast notification trees 
subscriptions registered efficiently additional publication notifications incur low incremental costs 
shows impact range queries node scalability 
similar section system fixed number events consisting random subscriptions followed random publications 
results show system scales supporting range queries 
developed technique implement content distributed peer peer dht publish subscribe system top existing topic system 
multicast tree infrastructure critical achieving performance 
design offers interesting unexplored point design space publish subscribe systems 
design point exists fully centralized content system fully distributed topic system 
compromise system fully distributed content system restrictions expression content 
content follow fit defined schema particular application domain 
content publish subscribe system early prototype plenty done 
step perform detailed examination benefits multicast tree infrastructure 
tasks include adding features enable execution real world workloads ii performing detailed modeling peer peer network iii examining fault tolerance 
represents going research conducted project peer peer toronto publish subscribe system 
recognize endless number experiments run possible combinations workload parameters 
particular locality sensitive distributions workload generator uniform distribution produce interesting set comparative results 
achieve level workload validity guidelines parameters vary relation need researched 
currently aware accepted standard set workloads content publish subscribe systems 
guidelines schema design application domain remain important open research question 
determining optimal set indices particular application domain may require intimate knowledge application domain typical query behavior users 
achieving optimal index may require selecting attributes commonly specified uniquely identify subscription 

fabret jacobsen llirbat pereira ross shasha filtering algorithms implementation fast publish subscribe systems 
acm sigmod record 
leung jacobsen predicate matching subscription matching publish subscribe systems 
proc 
workshop distributed event systems debs vienna austria 
petrovic jacobsen semantic toronto publish subscribe system 
proc 
conf 
large data bases berlin germany 
liu jacobsen modeling uncertainties publish subscribe 
conf 
data engineering appear 

petrovic jacobsen de lara disconnected operations publish subscribe 
ieee mobile data management appear 

carzaniga rosenblum wolf achieving scalability expressiveness internet scale event notification service 
proc 
acm symp 
principles distributed computing podc portland 
triantafillou subscription summaries scalability efficiency publish subscribe 
proc 
workshop distributed event systems vienna austria 
kaashoek distributed hash tables building large scale robust distributed applications 
presentation acm symp 
podc 
ratnasamy francis handley karp shenker scalable content addressable network 
proc 
acm sigcomm san diego ca 
rowstron druschel pastry scalable decentralized object location routing large scale peer peer systems 
proc 
ifip acm conf 
distributed systems platforms heidelberg germany 
stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications 
proc 
acm sig comm san diego ca 
adya bolosky castro douceur howell lorch theimer wattenhofer farsite federated available reliable storage incompletely trusted environment 
proc 
usenix symp 
operating systems design implementation osdi boston ma 
dabek kaashoek karger morris stoica wide area cooperative storage cfs 
proc 
acm symp 
operating systems principles sosp banff canada 
muthitacharoen morris gil chen ivy read write peer topeer file system 
proc 
usenix symp 
osdi boston ma 
rowstron druschel storage management caching past largescale persistent peer peer storage utility 
proc 
acm sosp banff canada 
castro druschel kermarrec rowstron scribe large scale decentralized application level multicast infrastructure 
ieee journal selected areas communication 
volume 

bacon peer peer overlay broker networks event middleware 
proc 
workshop debs san diego ca 
buchmann peer peer approach content publish subscribe 
proc 
workshop debs san diego ca 
xu scalable efficient range queries grid information services 
proc 
ieee conf 
peer peer computing link ping sweden 
harvey jones saroiu theimer wolman skipnet scalable overlay network practical locality properties 
proc 
usenix symp 
internet technologies systems seattle wa 
aberer hauswirth schmidt improving data access systems 
ieee internet computing 
gupta agrawal el abbadi approximate range selection queries peer peer systems 
proc 
conf 
innovative data systems research asilomar ca 
gupta agrawal el abbadi query processing peer peer data sharing systems 
technical report ucsb csd university california santa barbara department computer science 
