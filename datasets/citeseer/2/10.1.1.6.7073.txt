finding patterns dimensional graphs algorithms applications scientific data mining xiong wang jason wang dennis shasha bruce shapiro rigoutsos zhang presents method finding patterns dimensional graphs 
node graph atomic unit label 
edges links atomic units 
patterns rigid substructures may occur graph allowing arbitrary number structure rotations translations small number specified user edit operations patterns graph 
pattern appears graph graph modified call appearance approximate occurrence edit operations include relabeling node deleting node inserting node 
proposed method geometric hashing technique hashes node triplets graphs table compresses label triplets table 
demonstrate utility algorithms discuss applications scientific data mining 
apply method locating frequently occurring motifs families proteins pertaining rna directed dna polymerase motifs classify proteins 
apply method clustering chemical compounds pertaining aromatic 
experimental results indicate performance algorithms high recall precision rates classification clustering 
index terms kdd classification clustering data mining geometric hashing structural pattern discovery biochemistry medicine 
supported part nsf iri iri iis iis natural sciences engineering research council canada 
ogp 
department computer science california state university ca usa wang ecs edu 
part author done department computer information science new jersey institute technology 
department computer information science new jersey institute technology university heights newark nj usa jason cis njit edu 
part author done visiting courant institute mathematical sciences new york university 
courant institute mathematical sciences new york university mercer street new york ny usa shasha cs nyu edu 
laboratory experimental computational biology division basic sciences national cancer institute national institutes health frederick md usa gov 
ibm watson research center yorktown heights ny usa ibm com 
department computer science university western ontario london ontario canada csd ca 
structural pattern discovery finds applications natural sciences computer aided design image processing 
instance detecting repeatedly occurring structures molecules help biologists understand functions molecules 
domains molecules represented threedimensional graphs 
tertiary structures proteins example graphs 
example chemical compounds graphs 
study pattern discovery problem graph data 
specifically propose geometric hashing technique find frequently occurring substructures set graphs 
study motivated advances data mining field automated discovery patterns classification clustering rules main tasks 
establish framework structural pattern discovery graphs apply approach classifying proteins clustering compounds 
domains chosen focus biochemistry approach generalized applications graph data occur commonly 
graphs node graphs concerned atomic unit coordinate 
node label necessarily unique graph 
node labels chosen domain dependent alphabet sigma 
chemical compounds example alphabet includes names atoms 
node identified unique user assigned number graph 
edges graph links atomic units 
consider graphs connected 
disconnected graphs consider connected components 
graph divided rigid substructures 
rigid substructure subgraph relative positions nodes substructure fixed set conditions interest 
note rigid substructure rotated refer structure rotation simply rotation context clear 
relative position node substructure node outside substructure changed rotation 
precise definition substructure application dependent 
example chemical compounds ring rigid substructure 
example 
illustrate rigid substructures graph consider graph fig 

node associated unique number label enclosed parentheses 
table shows coordinates nodes graph respect global coordinate frame 
divide graph rigid substructures str str str consists nodes numbered edges connecting nodes fig 

str consists nodes numbered edges connecting fig 

edges rigid substructures represented boldface links 
edge connecting rigid substructures represented link meaning precisely coordinate indicates location center atomic unit 
substructures rotatable respect edge 
note rigid substructure necessarily complete 
example fig 
edge connecting node numbered node numbered 
global coordinate frame fig 

graph node identifier node label node coordinates table 
identifiers labels global coordinates nodes graph fig 

attach local coordinate frame sf sf respectively substructure str str respectively 
instance focus substructure str fig 

attach local coordinate frame str origin node numbered 
local coordinate frame represented basis points coordinates respectively 
origin basis vectors theta represents vector starting point point theta stands cross product corresponding vectors 
refer coordinate frame substructure frame sf note basis vectors sf orthonormal 
length vector angle basis vectors degrees 
note node numbered substructure str edge referred rotatable edge 
rigid substructures rotated respect edge connecting edge non rotatable edge 
sf sf str str fig 

rigid substructures graph fig 

global coordinate find local coordinate node respect sf denoted gamma gamma gamma patterns graphs consider pattern rigid substructure may occur graph allowing arbitrary number rotations translations small number specified user edit operations pattern graph 
allow types edit operations relabeling node deleting node inserting node 
relabeling node means change label valid label differs original label 
deleting node graph means remove corresponding atomic unit euclidean space edges touching connect neighbors inserting node graph means add corresponding atomic unit euclidean space node subset neighbors neighbors say graph matches graph mutations applying arbitrary number rotations translations node insert delete relabeling operations size ii nodes geometrically match coinciding coordinates iii pair geometrically matching nodes label 
substructure approximately occurs graph approximately contains mutations matches subgraph mutations fewer chosen user 
example 
illustrate patterns graphs consider set graphs fig 

suppose exactly subset neighbors chosen unimportant proposed geometric hashing technique hashes nodes ignoring edges nodes 
notice node inserted deleted nodes surrounding move coordinates remain 
note allow multiple edit operations applied node 
example inserting node label followed relabeling considered inserting node label edit operations extensions edit operations sequences arise naturally graph editing molecule evolution 
shown section edit operations algorithm finds useful patterns classify cluster molecules effectively 
size graph defined number nodes graph geometric hashing technique considers nodes 
furthermore target applications chemistry nodes atomic units determine size compound 
edges links nodes different meaning atomic units consequence exclude edges size definition 
exactly coinciding substructures mutations occurring graphs having size greater considered patterns 
contains pattern shown fig 

substructures having size greater approximately occurring graphs mutation node delete insert relabeling allowed matching substructure graph considered patterns contains pattern shown fig 

fig 

set graphs pattern exactly occurring graphs pattern approximately occurring mutation graphs 
strategy find patterns set graphs decompose graphs rigid substructures geometric hashing organize substructures find frequently occurring ones 
applied approach discovery patterns chemical compounds restricted set edit operations including node insert node delete tested quality patterns classify compounds :10.1.1.27.4300
extend considering general edit operations including node insert delete relabeling ii presenting theoretical foundation evaluating performance efficiency pattern finding algorithm iii applying discovered patterns classifying proteins larger complicated topology chemical compounds iv presenting technique cluster graphs patterns occurring :10.1.1.27.4300
specifically conducted experiments 
experiment applied proposed method locating frequently occurring motifs substructures families proteins pertaining rna directed dna polymerase motifs classify proteins 
experimental results showed method achieved precision rate 
second experiment applied pattern finding algorithm discovering frequently occurring patterns chemical compounds chosen index pertaining aromatic 
patterns cluster compounds 
experimental results showed method achieved recall precision rates 
rest organized follows 
section presents theoretical framework approach describes pattern finding algorithm detail 
section evaluates performance efficiency pattern finding algorithm 
section describes applications approach classifying proteins clustering compounds 
section discusses related 
section concludes 
pattern finding algorithm terminology set graphs 
occurrence number pattern number graphs approximately contain allowed number mutations 
formally occurrence number pattern respect mutation set denoted occur graphs contain mutations 
example consider fig 

contain graphs fig 

occur occur 
set graphs algorithm finds patterns approximately occurs occur graphs allowed number mutations mut jp size jp represents size number nodes pattern 
mut occur size userspecified parameters 
patterns ways 
example biologists chemists may evaluate patterns significant computer scientists may patterns classify cluster molecules demonstrated section 
algorithm proceeds phases search patterns find candidate patterns graphs calculate occurrence numbers candidate patterns determine satisfy user specified requirements 
describe phase turn 
phase algorithm phase algorithm decompose graphs rigid substructures 
dividing graph substructures necessary reasons 
dealing molecules chemical compounds may exist substructures rotatable respect graph containing substructures rigid 
result decompose graph substructures having rotatable components consider substructures separately 
second algorithm hashes node triplets rigid substructures table 
graph large case proteins considering combinations nodes graph may prohibitive 
consequently decomposing graph substructures hashing node triplets substructures increase efficiency 
example consider graph nodes 
node triplets 
hand decompose graph substructures having nodes theta node triplets 
alternative ways decompose graphs rigid substructures depending application hand nature graphs 
purposes exposition describe pattern finding algorithm partitioning strategy 
approach assumes notion atomic unit lowest level description case interest 
intuitively atomic units fundamental building elements atoms molecule 
edges arise bonds atomic units 
break graph maximal size rigid substructures recall rigid substructure subgraph relative positions nodes substructure fixed 
accomplish approach similar employs depth search algorithm referred dfb find blocks graph 
dfb works traversing graph depth order collecting nodes belonging block traversal illustrated example 
block rigid substructure 
merge rigid substructures rotatable respect relative position node node fixed 
algorithm maintains stack denoted stk keeps rigid substructures merged 
fig 
shows algorithm outputs set rigid substructures graph throw away substructures jp size 
remaining substructures constitute candidate patterns generated pattern generation algorithm runs time linearly proportional number edges procedure find rigid substructures input graph output set maximal size rigid substructures generated 
stk 
empty 

locate block dfb algorithm 
delete top entry stk 
stk empty rotatable respect 
push nodes stk 

pop nodes stk merge output resulting substructure 
push nodes stk 


pop nodes stk merge output resulting substructure fig 

algorithm finding rigid substructures graph 
block maximal subgraph cut vertices 
cut vertex graph removal results dividing graph multiple disjointed subgraphs 
example 
graph fig 
illustrate find rigid substructures algorithm fig 
works 
rotatable edges graph represented links non rotatable edges represented boldface links 
initially stack stk empty 
invoke dfb locate block step 
dfb begins visiting node numbered 
depth search dfb visits nodes numbered 
dfb may visit node numbered 
loss generality assume dfb visits node numbered nodes numbered order 
dfb visits node numbered realizes node visited 
dfb goes back node numbered returns node numbered 
point dfb identifies block includes nodes numbered 
stack stk empty push stk step 
fig 

graph illustrating find rigid substructures algorithm works 
iteration call dfb find block step 
dfb returns non rotatable edge block denoted block pushed stk step 
iteration dfb locates block includes nodes numbered step 
top entry stack rotatable respect push stk step 
iteration continue call dfb get single edge block step 
rotatable stack stk nonempty pop nodes stk merge output rigid substructure containing nodes numbered step 
push stk step 
iteration dfb visits node numbered dfb goes back node numbered 
returns single edge block step 
connected current top entry stk rotatable edge pop rigid substructure step 
push stk step 
iteration dfb returns single edge block step 
current top entry stk rotatable respect push stk step 
iteration dfb goes back node numbered node numbered returns single edge block step 
rotatable pop nodes stk merge output resulting rigid substructure containing nodes numbered step 
push stk step 
practice graph representations molecules uses different notation distinguish non rotatable edges rotatable edges 
example chemical compounds double bond non rotatable 
different notation helps algorithm determine types edges 
iteration dfb returns block step 
rotatable pop form rigid substructure step 
push stk step 
iteration dfb returns block containing nodes numbered step 
current top entry stk rotatable respect pop form rigid substructure step push stk step 
block left graph pop nodes form rigid substructure terminate step 
phase algorithm phase pattern finding algorithm consists 
subphase phase hash store candidate patterns generated graphs phase table subphase rehash candidate pattern calculate occurrence number 
notice subphase need store candidate patterns 
processing rigid substructure pattern graph choose node combinations referred node triplets substructure hash node triplets 
hash node combinations fix rigid substructure euclidean space needs nodes substructure nodes sufficient provided collinear 
notice proper order choosing nodes triplet significant impact accuracy approach show 
determine order nodes considering triangle formed 
node chosen opposes longest edge triangle third node chosen opposes shortest edge 
example triangle fig 
choose order 
order unique triangle isosceles equilateral usually holds coordinates floating point numbers 
hand triangle isosceles hash store node triplets assuming node opposes longest edge edges fi jg fi kg length 
triangle equilateral hash store node triplets 
fig 

triangle formed nodes labels nodes triplet form label triplet encoded follows 
suppose nodes chosen order 
maintain node labels alphabet sigma array code labels unsigned long integer defined theta rime theta rime rime sigmaj prime number indices node labels respectively array code label triplet unique 
simple encoding scheme reduces label comparisons integer comparison 
example 
illustrate encode label triplets consider graph fig 

suppose node labels stored array shown table 
suppose rime 
example nodes numbered fig 
code corresponding label triplet theta theta 
index label table 
node labels graph fig 
indices array subphase phase subphase hash candidate patterns generated phase pattern finding algorithm table 
purposes exposition consider example substructure str fig 
assumed candidate pattern 
choose nodes str calculate hash function values follows 
suppose chosen nodes numbered global coordinates respectively 
integers gamma gamma gamma theta scale gamma gamma gamma theta scale gamma gamma gamma theta scale scale multiplier 
intuitively round nearest pth position decimal point accurate position multiply numbers reason multiplier want digits decimal point contribute distribution hash function values 
ignore digits position inaccurate 
appropriate value multiplier calculated data show section 
mod rime mod mod rime mod mod rime mod rime rime rime prime numbers cardinality hash table dimension 
different prime numbers hope distribution hash function values skewed pairs correlated 
node triplet hashed bin address 
intuitively squares lengths edges connecting chosen nodes determine hash bin address 
stored bin graph identification number substructure identification number label triplet code 
addition store coordinates basis points substructure frame sf respect chosen nodes 
specifically suppose chosen nodes collinear 
construct local coordinate frame denoted lf theta basis vectors 
coordinates respect local coordinate frame lf denoted sf form theta matrix calculated follows see fig 
sf theta gamma theta suppose graph fig 
identification number 
hash bin entry chosen nodes sf label triplet code 
nodes substructure str node triplets generated substructure entries hash table substructure 
sf lf fig 

calculation coordinates basis points substructure frame sf respect local coordinate frame lf 
interesting question regarding size limitation patterns rigid substructures algorithm 
suppose graph identification number substructure identification number short integers bytes 
long integer bytes 
sf theta matrix floating point numbers requiring bytes 
requires bytes 
set patterns substructures having nodes average hash table requires theta theta bytes disk space 
suppose patterns 
hash table requires megabytes 
hash table requires gigabytes 
gives estimate large patterns practice 
case pattern sizes size demands modest 
note time memory space needed increase dramatically patterns large 
example 
illustrate hash store patterns hash table consider table 
basis points sf fig 
global coordinates local coordinates respect sf nodes numbered substructure str fig 
follows gamma gamma gamma gamma suppose scale rime rime rime respectively 
example nodes numbered hash bin address sf gamma gamma gamma example nodes numbered hash bin address sf gamma gamma gamma gamma gamma gamma gamma similarly substructure str attach local coordinate frame sf node numbered shown fig 

hash table entries str having form sf nodes str recall choose nodes triangle formed node chosen opposes longest edge triangle third node chosen opposes shortest edge 
loss generality assume nodes chosen order 
shortest length second shortest longest 
node origin axis axis 
construct local coordinate frame lf theta basis vectors 
exclude longest vector constructing lf 

coordinates node graph error due rounding 
real coordinates node ffl ffl ffl small decimal fractions ffl ffl ffl constructing lf calculating sf may add multiply coordinates vectors 
define accumulative error induced calculation denoted delta delta jf gamma result obtained real coordinates result obtained rounding errors 
recall calculating sf basis vectors lf appear matrix defined equation 
ffi ffi ffi ffi jffi jffi jg 
notice theta jj sin length angle delta theta jj jj sin gamma jj sin ffi ffi sin gamma jj sin jffi jffi ffi ffi jj sin jffi sin ffi ffi likewise delta theta ffi ffi delta theta ffi ffi smallest 
accumulative error induced calculating length cross product corresponding vectors smallest 
choose exclude longest vector constructing local coordinate frame lf minimize accumulative error induced calculating sf 
subphase phase resulting hash table obtained subphase phase pattern finding algorithm 
subphase calculate occurrence number candidate pattern rehashing way able match node triplet tri node triplet tri substructure candidate pattern stored subphase tri tri hash bin address 
counting node triplet matches infer matches occurs graph generated 
associate substructure counters created updated illustrated example 
suppose substructures patterns graph identification number fig 
stored hash table subphase suppose nodes substructure str node triplet entry hash table sf 
subphase consider pattern hash node triplets hash function 
nodes hash bin address node triplet matches node triplet 
nodes geometrically match nodes respectively coinciding coordinates rotations translations call node triplet match true match false match 
true match sfp sf theta theta sfp contains coordinates basis points substructure frame sf respect global coordinate frame pattern 
compare sfp associated substructure str initially associated str 
sfp differs existing ones new counter created value initialized new counter assigned sfp sfp existing counter value cnt code label triplet nodes equals code label triplet nodes cnt incremented 
general substructure may associated different sfp having counter 
theory supporting algorithm 
theorem establishes criterion detect eliminate false match 
theorem justifies procedure incrementing counter values 
theorem 
basis points forming sfp defined equation origin 
theta orthonormal vectors nodes geometrically match nodes respectively 
proof 
defined equation theta note geometrically match respectively jbj jaj jbj jaj respectively determinant matrix matrix respectively 
say ja gamma 
equation definition sfp equation sfp theta gamma theta sfp basically transforms translations rotation basis points substructure frame sf 
theta saying sfp existing sf mean entry ith row jth column sfp corresponding entry sf je gamma ffl ffl adjustable parameter depending data 
examples ffl 
orthonormal vectors translations rotations change property know theta orthonormal vectors 
match geometrically having hash bin address distortion aforementioned transformation 
consequently theta longer orthonormal vectors 
theorem 
true node triplet matches yield sfp codes corresponding label triplets node triplet matches combined form larger substructure match str proof 
nodes set sfp fixed position direction nodes definite coordinates sfp node triplet match yielding sfp occurs means geometrically node match str codes corresponding label triplets means labels corresponding nodes 
node triplet matches 
fig 
illustrates node triplet matches augmented 
suppose node triplet yields sfp shown 
suppose node triplet yields sfp shown fig 

labels corresponding nodes numbered augment node triplets form larger match containing nodes numbered 
global coordinate frame sf fig 

illustration node triplet matches 
incrementing counter associated sfp record true node triplet matches sfp notice cases node triplet matches occur due reflections directions corresponding local coordinate systems different sfp 
result node triplet matches 
example 
illustrate update counter values node triplet matches consider pattern fig 

nodes numbered match rotation nodes numbered substructure str fig 

node numbered str appear deleted 
labels corresponding nodes identical 
matches str sf global coordinate frame fig 

substructure pattern mutation node deleted 
suppose global coordinates nodes numbered gamma gamma refer example 
nodes numbered hash bin address nodes numbered str sfp gamma gamma basis vectors forming sfp gamma gamma theta gamma orthonormal 
nodes numbered hash bin address nodes numbered str sfp gamma gamma true node triplet matches sfp corresponding counter associated substructure str graph fig 
updated 
hashing node triplets counter value matching node triplets sfp equation labels corresponding nodes 
consider sfp defined equation basis points forming sfp origin 
note node pattern global coordinate local coordinate respect sfp denoted theta gamma base matrix sfp defined theta vector starting 
theta orthonormal vectors jej 
practically useful criterion detecting false matches check jej 
jej theta orthonormal vectors nodes match nodes geometrically cf 
theorem 
intuitively scheme hash node triplets match triplets 
triplet tri matches tri see substructure containing tri matches pattern containing tri theorem detect eliminate false node triplet matches 
theorem record counter number true node triplet matches 
theorem says counter value needs large sufficient number true node triplet matches order infer match corresponding pattern substructure 
larger mut fewer node triplet matches needed 
theorem 
str substructure hash table graph str generated 
pattern jp mut 
rehashing node triplets suppose sfp associated str counter value cnt theta theta gamma gamma theta gamma theta gamma jp gamma mut 
matches str mut mutations approximately occurs approximately contains mut mutations 
proof 
theorem increase counter value true node triplet matches sfp counter value shows currently node triplets pattern match node triplets substructure str hash table 
note theta represents number distinct node triplets generated substructure size gamma 
gamma node matches str cnt theta cnt theta node matches str completes proof 
notice algorithm handle patterns size smaller basic processing unit node triplet size 
reflected condition jp mut stated theorem 
mut zero greater zero condition implies size pattern greater equal 
example 
illustrate theorem works refer example 
suppose user specified mutation number mut 
candidate pattern fig 
size jp 
rehashing node triplets counter associated substructure str fig 
counter corresponds sfp equation value counter cnt 
cnt greater theta gamma gamma gamma 
theorem match substructure str mutation 
means node matches str rehashing node triplets candidate pattern table check values counters associated substructures theorem approximately occurs graph mut mutations contains substructure str counter associated str value cnt theta occur graphs approximately occurs mut mutations discard remaining candidates qualified patterns 
notice theorem provides sufficient necessary condition finding qualified patterns 
due accumulative errors arising calculations node triplets may hashed wrong bin 
result pattern finding algorithm may node triplet matches qualified patterns 
section show experimentally missed patterns compared exhaustive search 
theorem 
set contain graphs having nodes 
time complexity proposed pattern finding algorithm kn 
proof 
graph phase algorithm requires time decompose graph substructures 
time needed phase kn 
subphase phase hash candidate pattern considering combinations nodes requires time jp jp 
time needed hash candidate patterns kn 
subphase phase rehash candidate pattern requires time kn 
notice cnt theta 
reason augment node triplet matches yield sfp practice node triplet matches augmented yield different sfp due errors accumulated calculation sfp 
consequence algorithm fails detect node triplet matches update counter values appropriately 
parameter value description mut allowed mutation pattern graph occur minimum occurrence number interesting pattern size minimum size interesting pattern ffl allowed error comparing entries coordinate matrices scale multiplier calculating hash bin address rime st prime number calculating hash bin address rime nd prime number calculating hash bin address rime rd prime number calculating hash bin address cardinality hash table dimension table 
parameters pattern finding algorithm base values experiments 
performance evaluation carried series experiments evaluate performance speed approach 
programs written programming language run workstation solaris operating system version 
parameters experiments classified categories related data related pattern finding algorithm 
category considered size number nodes graph total number graphs dataset 
second category considered parameters described section summarized table base values experiments 
files maintained recording hash bin addresses containing entries stored hash bins 
evaluate performance pattern finding algorithm applied algorithm sets data synthetic graphs chemical compounds obtained drug database maintained national cancer institute 
generating artificial graphs randomly generated coordinates node 
node labels drawn randomly range size rigid substructures artificial graph ranged size graphs ranged 
size compounds ranged 
section experimental results answer questions concerning performance pattern finding algorithm 
example approximate patterns recall high 
uninteresting patterns precision high 
section study applications algorithm intend answer questions graphs having common phenomenological activity proteins function share structural patterns common patterns characterize graphs 
effect data related parameters evaluate performance proposed pattern finding algorithm compared exhaustive search 
exhaustive search procedure works generating candidate patterns phase pattern finding algorithm 
procedure examines pattern approximately matches substructure str graph permuting node labels checking match node labels exhaustive search algorithm chemical compounds synthetic graphs number graphs fig 

running times function number graphs 
str 
procedure performs translation rotation checks geometrically match str 
speed algorithms measured running time 
performance evaluated measures recall re precision pr number false matches fm arising hashing process 
recall false match arises node triplet pattern hash bin address node triplet substructure graph nodes match nodes geometrically cf 
section recall defined re theta precision defined pr theta number patterns proposed algorithm number patterns satisfy user specified parameter values number qualified patterns exhaustive search 
re pr high possible 
fig 
shows running times algorithms function number graphs fig 
shows recall 
parameters proposed pattern finding algorithm values shown table 
seen figures proposed algorithm times faster exhaustive search method dataset graphs achieving high 
recall 
due accumulative errors arising calculations node triplets may hashed wrong bin 
result proposed algorithm may node triplet matches subphase phase achieve recall 
experiments precision 
fig 
shows number false matches introduced proposed algorithm function number graphs 
chemical compounds fm small 
synthetic graphs fm increases number graphs large 
similar results obtained testing size graphs types data 
number graphs chemical compounds synthetic graphs fig 

recall function number graphs 
chemical compounds synthetic graphs number graphs fig 

number false matches function number graphs 
scale number false matches fig 

number false matches function scale 
effect algorithm related parameters purpose subsection analyze effect varying algorithm related parameter values performance proposed pattern finding algorithm 
avoid mutual influence parameters analysis carried fixing parameter values related data graphs synthetic graphs compounds described respectively 
experiment algorithm related parameter value varied parameters values shown table 
examined effect varying parameter values generating false matches 
false matches chemical compounds experiments focused synthetic graphs 
observed scale affected number false matches 
fig 
shows fm function scale respectively 
larger fewer entries hash bin consequently fewer false matches 
hand large running times increase substantially needs spend lot time reading table containing hash bin addresses 
examining fig 
see scale affects fm extreme case scale squares lengths edges connecting nodes hashed bin node triplet values node triplets match geometrically cf 
section 
hand scale large scale distribution hash function values skewed reduces number false matches 
observed fm largest scale 
happens scale value inaccuracy introduced calculating hash bin addresses 
node triplet hashed bin generate false matches total number node triplets stored bin large distribution hash function values skewed 
figures show recall function size mut scale respectively 
figures precision 
fig 
fig 
see size mut affect recall slightly 
observed number interesting patterns drops increases respectively significantly size patterns chemical compounds synthetic graphs fig 

effect size 
number mutations allowed synthetic graphs chemical compounds fig 

effect mut 
size mut respectively large 
fig 
shows pattern finding algorithm yields poor performance scale large 
data tested setting scale best recall precision 
sum value scale significant impact performance algorithm 
choice scale domain data dependent 
practice select value scale particular database 
recall coordinates node graph error due rounding cf 
section 
real coordinates node ffl ffl ffl similarly real coordinates node ffl ffl ffl real value equation gamma gamma gamma theta scale ffl gamma gamma ffl ffl gamma gamma ffl ffl gamma gamma ffl theta scale gamma gamma gamma theta scale scale chemical compounds synthetic graphs fig 

impact scale 
theta gamma ffl gamma ffl gamma ffl gamma ffl gamma ffl gamma ffl theta scale ffl gamma ffl ffl gamma ffl ffl gamma ffl theta scale ffl ffl accumulative error ffl theta gamma ffl gamma ffl gamma ffl gamma ffl gamma ffl gamma ffl theta scale ffl gamma ffl ffl gamma ffl ffl gamma ffl theta scale calculate hash bin addresses critical accumulative error mislead wrong hash bin 
assuming coordinates accurate th digit decimal point gamman error caused eliminating digits th position larger theta gamman coordinates ffl theta gamman ffl theta gamman ffl theta gamman ffl theta jx gamma gamma ffl jy gamma gamma ffl jz gamma gamma ffl theta scale jffl gamma ffl jffl gamma ffl jffl gamma ffl theta scale theta jx gamma jffl jffl jy gamma jffl jffl jz gamma jffl jffl theta scale jffl jffl jffl jffl jffl jffl theta scale theta jx gamma jy gamma jz gamma theta theta theta gamman theta scale theta theta theta gamman theta scale jx gamma jy gamma jz gamma theta theta scale theta gamman theta scale theta gamma assume range coordinates gammam 
jx gamma jy gamma jz gamma ffl theta theta scale theta gamman theta scale theta gamma synthetic graphs chemical compounds fig 

recall function ffl 
second term obviously negligible comparison term 
order keep calculation hash bin addresses accurate term smaller 
scale chosen largest possible number theta theta scale theta gamman scale theta theta case coordinates chemical compounds accurate th digit decimal point range coordinates 
consequently scale theta theta choosing scale validated experimental results 
notice scale determined data 
need know accurate data ranges coordinates clearly associated data 
figures show recall precision function ffl 
seen ffl precision recall greater 
ffl smaller ffl precision remains recall drops 
ffl larger ffl recall increases slightly precision drops 
happens irrelevant node triplet matches included rendering unqualified patterns returned answer 
tested different values occur rime rime rime varying parameter values little impact performance proposed algorithm 
examined effect sensor errors caused measuring device ray crystallography proportional values measured 
suppose sensor error gamman real value coordinates ffl theta gamman ffl theta gamman ffl theta gamman theta gamman theta gamman theta gamman 
fl represent sensor error chemical compounds synthetic graphs fig 

precision function ffl 
induced calculating equation 
way similar calculation accumulative error ffl equation obtain fl gamma gamma gamma theta theta gamman theta scale gamma gamma gamma theta gamma theta scale focus term significant 
clearly proposed approach feasible environment large sensor errors 
example suppose sensor error gamma real value 
order keep calculation hash bin addresses accurate accumulative error smaller 
gamma gamma gamma theta theta gamma theta scale gamma gamma gamma theta scale scale euclidean distance nodes smaller square distance viz 
gamma gamma gamma 
data sets including chemical compounds satisfy restriction 
illustrate affect recall consider substructure stored hash table 
add gamma sensor error coordinates node call resulting substructure pattern match original substructure hash table 
node triplets generated pattern include node match corresponding node triplets original substructure supposing pattern nodes total number node triplets include node gamma number node triplet matches 
node triplets include node matched successfully gamma gamma gamma node triplet matches 
theorem gamma node matches pattern original substructure matches mutation 
example reveals general allow mutations occur searching patterns number nodes sensor errors equals allowed number mutations recall case sensor errors search exactly matched patterns mutations 
hand mutations allowed searching patterns sensor errors occur recall zero 
data mining applications important application pattern finding involves ability perform classification clustering data mining tasks 
section data mining applications proposed algorithm scientific domains classifying proteins clustering compounds 
classifying proteins proteins large molecules comprising hundreds amino acids residues 
residue ff fi atoms form backbone residue 
represent residue atoms 
consider protein graph node graph atom 
node label name atom unique protein 
assign unique number identify node protein order numbering obtained protein data bank pdb accessible www org 
experiments examined families proteins chosen pdb pertaining rna directed dna polymerase 
family contains proteins having functionality various organisms 
decompose protein consecutive substructures substructure containing nodes 
adjacent substructures overlap sharing neighboring nodes boundary substructures see fig 

substructure portion polypeptide chain backbone protein polypeptide chain residues linked peptide bonds 
peptide bonds strong bonding forces polypeptide chain rigid 
consequence substructures algorithm rigid 
notice proteins atoms shown fig 
lying residues 
atoms important ff fi determining structure protein consider 
table summarizes number proteins family sizes frequently occurring patterns motifs discovered proteins 
parameter values shown table 
experiments false matches detected eliminated process finding motifs 
times node triplet pattern hash bin address node triplet substructure protein nodes match nodes geometrically cf 
section 
evaluate quality discovered motifs applied classifying proteins way cross validation scheme 
family divided groups roughly equal size 
application proposed algorithm flexible chemical searching structural databases 
fig 

protein 
substructures protein 
specifically rna directed dna polymerase family referred family contained groups having proteins groups having proteins 
family referred family contained groups having proteins groups having proteins 
tests conducted 
test group taken family test data groups training data family 
applied pattern finding algorithm training dataset find motifs parameter values shown table 
motif family associated weight gamma family number proteins maximum protein size minimum protein size number motifs motif size rna directed dna polymerase table 
statistics concerning proteins motifs 
occurrence number training dataset family intuitively frequently motif occurs family frequently occurs family higher weight family collected motifs having weight greater characteristic motifs family 
classifying test protein decomposed consecutive substructures described 
result set substructures say denote number characteristic motifs family matched mutation 
family obtained score total number characteristic motifs family intuitively score determined number characteristic motifs family occurred divided total number characteristic motifs family protein classified family maximum scores families test protein substructure matched characteristic motif opinion verdict 
algorithm similar classify chemical compounds sequences 
section recall re precision pr evaluate effectiveness classification algorithm 
recall defined re gamma theta total number test proteins number test proteins belong family assigned family algorithm assigned family receive opinion verdict 
precision defined pr gamma theta number test proteins belong family assigned algorithm family way cross validation scheme average re tests average pr 
test proteins average received opinion verdict classification 
repeated experiments parameter values obtained similar results larger mut values generally yielded lower re binary classification problem studied concerned assigning protein families 
problem arises frequently protein homology detection 
performance technique degrades applied ary classification problem concerned assigning protein families 
example applied technique classifying families proteins re pr dropped 
clustering compounds addition classifying proteins developed algorithm clustering graphs patterns occurring graphs applied algorithm grouping compounds 
collection graphs algorithm uses procedure depicted section decompose graphs rigid substructures 
jp gamma set substructures graphs size 
proposed pattern finding algorithm examine graph determine substructure str approximately occurs mut mutations 
graph represented bit string length gamma ae str occurs mut mutations example consider patterns fig 
graphs fig 

suppose allowed number mutations 
represented 
hand suppose allowed number mutations 
represented 
distance graphs denoted defined hamming distance bit strings 
algorithm uses known average group method cluster graphs works follows 
initially graph cluster 
algorithm merges nearest clusters form new cluster clusters left user specified parameter 
distance clusters jc jjc gx gy jd jc size cluster algorithm requires distance calculations total number graphs applied algorithm clustering chemical compounds 
compounds chosen index belonged groups pertaining aromatic 
data created corina program converted data represented smiles string data represented pdb format 
table lists number compounds group sizes patterns discovered 
parameter values size occur mut parameters values shown table 
group number compounds minimum compound size maximum compound size number patterns minimum pattern size maximum pattern size aromatic table 
statistics concerning chemical compounds patterns 
evaluate effectiveness clustering algorithm applied finding clusters compounds 
parameter value set groups 
previous sections recall re precision pr evaluate effectiveness clustering algorithm 
recall defined re gamma theta number compounds belong group assigned algorithm group total number compounds tested 
precision defined pr gamma theta number compounds belong group assigned algorithm group experimental results indicated re pr 
compounds compound group assigned incorrectly group 
experimented parameter values obtained similar results 
related groups working pattern finding knowledge discovery molecules graphs 
conklin example represented molecular structure image comprised set parts coordinates set relations preserved image 
authors incremental divisive approach discover knowledge dataset build subsumption hierarchy summarized classified dataset 
algorithm relied measure similarity molecular images defined terms largest common subimages 
developed system called subdue utilized minimum description length principle find repeatedly occurring substructures graph 
substructure substructure simplify graph replacing instances substructure pointer discovered substructure 
dehaspe datalog represent compounds applied data mining techniques predicting chemical carcinogenicity 
techniques mannila toivonen algorithm finding interesting patterns class sentences database 
contrast geometric hashing technique find approximately common patterns set graphs prior knowledge structures positions occurrence frequency 
geometric hashing technique originated lamdan wolfson model recognition computer vision 
researchers attempted parallelize technique various architectures hypercube connection machine 
observed distribution hash table entries skewed 
balance distribution hash function values delicate rehash functions designed 
efforts exploring uncertainty existing geometric hashing algorithms 
rigoutsos employed geometric hashing magic vectors substructure matching database chemical compounds 
magic vectors bonds atoms choice domain dependent type individual graph 
extend occur value fixed experiments fact compounds represented binary bit strings 
providing framework discovering approximately common substructures set graphs applying techniques compounds proteins 
approach differs magic vectors store coordinate system hash table entry 
furthermore establish theory detecting eliminating false matches occurring hashing 
wolfson colleagues applied geometric hashing algorithms protein docking recognition 
attached frame substructure frame orthonormal coordinate frame arbitrary orientations established hinge point 
hinge point point specific point chosen chemical considerations 
substructure rotated hinge point 
authors developed schemes generate node triplets hash table indices 
schemes false matches detected hash table processed subsequent additional verification phase 
pattern appears match substructures searching phase compare pattern substructures sure true matches verification phase 
mutations allowed considered brute force verification test time consuming 
example comparing approach approach performing protein classification described section approaches yield recall precision approach times faster approach 
algorithm finding patterns graphs 
pattern rigid substructure may occur graph allowing arbitrary number rotations translations small number edit operations pattern graph 
algorithm find approximately common patterns set synthetic graphs chemical compounds proteins 
yields kind alphabet patterns 
experimental results demonstrated performance proposed algorithm usefulness pattern discovery 
developed classification clustering algorithms patterns graphs applied classifying proteins clustering compounds 
empirical study showed high recall precision rates classification clustering indicating significance patterns 
implemented techniques combining algorithms acyclic graph matching toolkit 
toolkit find patterns various types graphs arising different domains part tree graph search engine project 
toolkit obtained authors accessible www cis njit edu jason sigmod html web 
plan study topological graph matching problems 
weakness proposed geometric hashing approach sensitivity errors discussed section 
tune scale parameter accuracy data changes 
weakness geometric hashing approach doesn take edges consideration 
domains edges important despite nodes matching 
example computer vision edges may represent kind boundaries considered object recognition 
notice applying proposed geometric hashing approach domain node label alphabet extended contain semantic information color shape done preliminary topological graph matching algorithm matches edge distances software accessible cs nyu edu cs faculty shasha papers agm html 
plan combine geometric matching topological matching approaches finding patterns general graphs 
acknowledgments anonymous reviewers constructive suggestions helped improve quality presentation 
dr carol bo chen song peng useful discussions providing chemical compounds 
bernstein bryant weng protein data bank data commission int union crystallography allen ed bonn cambridge pp 

bernstein williams meyer brice rodgers protein data bank computer archival file macromolecular structures molecular biology vol 
pp 

medioni object recognition geometric hashing connection machine proc 
th int conf 
pattern recognition atlantic city pp 

conklin knowledge discovery molecular structure databases doctoral dissertation dept computing information science queen university canada 
conklin machine discovery protein motifs machine learning vol 
pp 

conklin glasgow knowledge discovery molecular databases ieee trans 
knowledge data engineering vol 
pp 

dehaspe toivonen king finding frequent substructures chemical compounds proc 
th int conf 
knowledge discovery data mining new york pp 

cook holder empirical study domain knowledge benefits substructure discovery ieee trans 
knowledge data engineering vol 
pp 

fischer wolfson efficient automated computer vision technique detection dimensional structural motifs proteins 
struct 
dynam vol 
pp 

gabow galil spencer efficient implementation graph algorithms contraction proc 
th ann 
ieee symp 
foundations computer science pp 

grimson huttenlocher jacobs affine matching bounded sensor error study geometric hashing alignment tech 
memo aim artificial intelligence laboratory massachusetts institute technology 
hamming error detecting error correcting codes bell system tech 
vol 
pp 

reprinted computer arithmetic vol 
ieee computer soc 
press tutorial los alamitos calif 
kaufman rousseeuw finding groups data cluster analysis john wiley sons new york 
lamdan wolfson geometric hashing general efficient model recognition scheme proc 
int conf 
computer vision pp 

mannila toivonen levelwise search borders theories knowledge discovery data mining knowledge discovery vol 
pp 

mchugh algorithmic graph theory prentice hall englewood cliffs 
pennec ayache algorithm substructure matching proteins proc 
st int workshop shape pattern matching computational biology pp 

pu chang ong chang alessio chang bourne prototype object oriented toolkit protein structure verification tech 
report cucs dept computer science columbia university 
rigoutsos hummel scalable parallel geometric hashing hypercube simd architectures tech 
report tr dept computer science new york university 
rigoutsos hummel parallel implementation geometric hashing connection machine tech 
report tr dept computer science new york university 
rigoutsos platt califano flexible substructure matching large databases molecular information research report ibm watson research center yorktown heights 
atoms bonds dimensional atomic coordinates automatic model builders chemical rev vol 
pp 

wolfson method biomolecular structural recognition docking allowing conformational flexibility computational biology vol 
pp 

wolfson flexible docking allowing induced fit proteins insights open closed conformational proteins vol 
pp 

sankoff kruskal ed time warps string edits macromolecules theory practice sequence comparison addison wesley reading 
limitations geometric hashing presence gaussian noise tech 
memo aim artificial intelligence laboratory massachusetts institute technology 
stoll linear algebra matrix theory mcgraw hill 
zheng compositional preferences nearest neighbor residues protein structures statistical geometry analysis proc 
ieee int join symp 
intelligence systems rockville pp 

wolfson flexible structural comparison allowing hinge bending motions proteins vol 
pp 

wang 
chirn marr shapiro shasha zhang combinatorial pattern discovery scientific data preliminary results proc 
acm sigmod int conf 
management data minneapolis pp 

wang ma shasha wu application neural networks biological data mining case study protein sequence classification proc 
th acm sigkdd int conf 
knowledge discovery data mining boston pp 

wang marr shasha shapiro 
chirn lee complementary classification approaches protein sequences protein engineering vol 
pp 

wang shapiro shasha ed pattern discovery biomolecular data tools techniques applications oxford university press new york 
wang wang fast similarity search dimensional structure databases chemical information computer sciences vol 
pp 

wang wang shasha shapiro rigoutsos zhang automated discovery active motifs dimensional molecules proc :10.1.1.27.4300
rd int conf 
knowledge discovery data mining newport beach calif pp 

zhang wang shasha editing distance undirected acyclic graphs int foundations computer science special issue computational biology vol 
pp 


