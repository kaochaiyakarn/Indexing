folklore observations fragmented traffic shannon david moore claffy fragmented ip traffic poorly understood component mix traffic internet 
assertions nature extent fragmented traffic anecdotal empirical 
examine causes attributes measured fragment traffic particular effects nfs streaming media networked video games tunneled traffic prevalence packet fragmentation due improperly configured machines 
understand prevalence causes effects fragmented ip traffic collected analyzed multi day traces sources 
sources include university commodity access link highly aggregated commercial exchange points local nap 
practical method ascertaining data provide representative sample internet traffic include data sources cover different types wans traffic commercial entities educational research institutions large government facilities 
dominant causes fragmentation streaming media tunneled traffic 
main impetus ip packet fragmentation nfs top causes 
keywords fragmentation fragment measurement traffic measurement tcp ip internet protocol ip designed facilitate communication heterogenous networks 
serves common denominator protocol allows computers differing architectures operating systems applications connected varying routes paths protocols exchange information 
ip able handle differences maximum sizes transmitted packets dissimilar networks 
trivial move packets network smaller mtu maximum transmission unit network larger mtu reverse challenging 
overcome obstacle ipv protocol performs fragmentation router breaks datagram smaller individual pieces called fragments 
fragment ip header replica authors caida san diego supercomputer center university california san diego 
mail kc caida org 
support provided darpa contract nsf ncr caida members 
original datagram header 
fragment identification protocol source ip address destination ip address original ip packet 
distinguish fragments allow correct reassembly offset field fragment contains distance measured byte units original datagram particular fragment 
fragment definition offset set second fragment offset value payload size fragment 
fragments fragments bit set destination host waits receive fragments reassembling original ip datagram 
size fragment usually corresponds size mtu subsequent link minus length header added fragment 
disassembly original datagram fragments sent network routed independently destination 
providing automatic mechanism handling disparate mtu sizes ip allows hosts exchange traffic explicit knowledge path 
fragmentation considered harmful kent mogul established packet fragmentation suboptimal method handling packets traverse network 
current technology mitigates described problems consumption bandwidth packet switching cpu resources argument fragmentation detrimental remains valid 
adverse effects fragmentation network performance infrastructure continue negatively impact wide area transport 
intermediate router perform fragmentation 
router process fragment main cpu utilizing specialized hardware line card commonly called fast path 
cpu intensive operation may impair ability fragmenting router efficiently process path traffic 
additional fragmented packets increase load routers networks initial router host 
fragments reach destination reassembled host 
loss fragment causes destination host drop entire packet 
turn original datagram packet fragment fragment fragment fragment fragment series data segment data segment data segment data segment data segment data segment data segment data segment fig 

composition fragment series 
forces source host repeat transmission datagram fragmented 
researchers shown certain specific controlled circumstances fragmentation improve performance observations apply backbone links 
despite widespread advances intervening thirteen years ip packet fragmentation considered harmful 
kent mogul untested hypotheses causes effects fragmented ip traffic come treated fact 
foremost assertion fragmented traffic longer exists 
networking community accept existence fragmented traffic lans believe scope extend backbone links 
common beliefs include udp traffic fragmented nfs source fragmented packet traffic fragmented ip traffic decreasing certain misconfigurations causing increase fragmented traffic 
beliefs group tenable mutually exclusive volume fragmented traffic simultaneously increasing decreasing 
publication suggests ip packet fragmentation increasing fragment folklore basis current network measurement 
ip packet fragmentation continues play small vital role facilitating communication hosts internet 
proliferation protocols send packets different mtus necessitates system flexible accommodate variations 
ip packet fragmentation increases robustness efficacy ip universal protocol 
examine character effects fragmented ip traffic monitored highly aggregated internet links 
organized follows section ii defines terminology describe fragmented traffic 
sources data methodologies analysis section iii 
section iv results characterizing fragmented traffic 
section summarizes current effects fragmented traffic monitored links 
ii 
terminology section introduces terminology discussion ip packet fragmentation 
terms illustrated 
described rfc path mtu smallest mtu links path source host destination host 
context values observed path mtu reflect smallest mtu links source passive monitor 
define original datagram ip datagram fragmented size exceeds mtu link path destination 
packet fragment simply fragment refers packet containing portion payload original datagram 
purposes terms packet datagram synonymous original datagram packet fragment interest clarity 
fragment series simply series ordered list monitored network fragments derived single original datagram 
size series refer total number bytes series length series describes number fragments series 
data segment portion original packet payload payload single fragment 
fragment packet containing original ip header data segment payload original datagram 
fragment packet containing portion payload original datagram 
fragments transmitted order packets reordered pass network observed observed fragments necessarily contain segments payload original datagram respectively necessarily fragment series 
fragment frequently equal size largest fragment series 
largest fragment size greater equal size fragments series 
similarly fragment smallest fragment series 
smallest fragment size equal fragment sizes series 
rfc specify fragments sized payload non fragments multiple bytes length 
ip protocol permits networks drop duplicate reorder packets individual fragment packets single original datagram may arrive destination transmission order 
define series complete fragmented packets monitored provide sufficient coverage original data segment allow reconstruction transmitted datagram reordering duplication may occurred fragments missing 
conversely incomplete series sufficient information reconstruct original datagram part payload reached monitor 
fragment fragment fragment data segment data segment data segment fig 

example incomplete series 
fragment fragment fragment fragment data segment data segment data segment data segment fig 

example order series 
series order fragments observed arriving sequentially monitor fragment offset lower predecessors 
conversely series considered reverse order fragments offsets increase 
computer producing order series transmits data segment data segment computer producing reverse order series transmits data segment data segment 
fragment needs delivered order observe reverse order fragment series 
necessarily correlate order received packet fragments order transmitted fragmenting router fragments reordered network 
longer series probable exact reversal fragment order occurs network ordering due reverse order transmission 
fragment fragment fragment fragment data segment data segment data segment data segment fig 

example reverse order series 
series contains duplicate fragments cover exact portion original payload 
fragment fragment fragment fragment data segment data segment data segment data segment fragment data segment fig 

example duplicate series 
overlapping series fragment packets contain overlapping portions original payload fragments duplicates 
conversely non overlapping series overlapping fragments 
note teardrop denial service attack sends large fragments overlapping single byte exhausting buffer resources certain fragment reassembly implementations 
data data data data data data fig 

example overlapping series 
define correct series series complete overlapping duplicated fragments 
order fragment arrival acceptable correct series 
dataset length characteristics start time utc duration hours packets bytes mb src hosts cerf fri mar cerf fri mar fri mar fri mar tue mar aix fri mar aix mon mar table datasets study march fragment fragment fragment fragment data segment data segment data segment data segment fig 

example correct series 
note series inorder 
iii 
methodology measurement sites data sets study collected different locations summarized table data source study link mae west 
point oc card collect traffic exchanged customers peer mae west 
intra customer traffic observed location 
traffic regional exchange point located san diego california second data source 
libpcap shelf mbit ethernet card monitor traffic 
fore atm oc card monitored commodity access link connects university california san diego campus including entities san diego supercomputer center institute oceanography 
final location traffic collected link ames internet exchange aix mae west wand dag oc card 
numbers unique source hosts data set shown table limited hosts sent packets lifetime trace 
filtering applied provide accurate count actual number hosts transmitting link data sets contained random source denial service attack 
unique ip source addresses sent packets trace lifetime 
traffic monitoring due high volume traffic measurement sites specialized tool crl frag capture collected data study 
crl frag capture relies coralreef software suite header capture interval handling data aggregation 
gleaned packet headers attempted analysis payload portion packet 
organized data collected hour long intervals post processing 
collected types data pcap full header trace libpcap format containing fragmented traffic packets offset fragments bit set 
src ip aggregated table non fragmented traffic containing number packets bytes seen source ip address 
proto ports folded aggregated table traffic number packets bytes seen tuple ip protocol source port destination port 
significant amount monitored traffic travels known port ephemeral port additional aggregation done commonly occurring ports keep tuple table size exceeding memory space machine 
list ports chosen preliminary studies non fragmented traffic links 
packet source destination matching common ports ephemeral port set causing traffic services fall entries tuple table 
method maintains port matches traffic specific application discarding dynamically generated meaningless port 
additionally ports bucketed ports range specific ports aggregation application order 
typically dynamically allocated preliminary studies known ports significant volume traffic 
length table non fragmented traffic aggregated number packets bytes seen ip packet size 
collection full header traces non fragmented traffic feasible due high volume traffic monitored links 
furthermore partitioning data independent tables source ip address protocol ports packet length obscures original relationships fields 
fragment processing depth analysis ip packet fragmentation constituent fragments original datagram assembled fragment series 
fragments separated discrete series identification protocol source ip address destination ip address fields fields uniquely define fragments original datagram 
payload original packet reconstructed offset size fragment sufficient infer basic properties fragmented traffic 
occurrences reassembly timeout seconds complete incomplete duplicate fig 

effects various reassembly timeouts complete incomplete duplicate fragment series 
grouping fragments series sensitive chosen reassembly timeout 
hand wish provide sufficient time fragments series monitored significant network delays 
need account possibility ip id field 
ordinarily expect ip id field wrap short period time cases monitor duplicate ip id fields single host short period time 
example observed tunnel ingress points generated sufficient traffic wrap ip id fields minutes 
timeout lengthy likelihood incorrectly assigning fragments disparate original datagrams fragments series increases 
shown number duplicate fragments series indicator ip id increases tested fragment series timeouts 
conversely number incomplete series decreases increasing timeout magnitude 
exists point erroneous duplicates minimized complete series maximized chosen timeout seconds maximum advisable delay reassembly recommended rfc 
application mapping discern applications services produce fragmented traffic map protocol source port destination port fields ip packet header named application choosing matching rule ordered collection protocol port patterns 
study caida passive monitor report generator application list 
list contained application port mappings including common known ports iana port assignment list emerging multimedia file sharing video game applications realaudio quake napster edonkey fasttrack kazaa 
example traffic ports classified www traffic connections port classified ftp data 
passive ftp utilized dynamically allocated ports distinguish known ports 
described section iv able control traffic identify applications ephemeral ports 
iv 
results trends fragmented traffic table ii shows percentage fragmented traffic data set 
observed hosts sending fragmented traffic non fragmented traffic host percentages may total 
volume fragmented traffic small highly variable 
shows variance number fragmented packets number bytes carried fragmented packets number hosts sending fragmented traffic 
non fragmented traffic measured aix mae west monitors demonstrated diurnal cycles 
traffic share strongly cyclical na mapping code application port list study coralreef current caida list obtained authors coral info caida org 
trace fragmented non fragmented pkts bytes hosts pkts bytes hosts cerf cerf aix aix table ii prevalence fragmented non fragmented ip traffic aix aix cerf cerf traffic bytes aix aix cerf cerf traffic packets aix aix cerf cerf unique hosts fig 

percentage fragmented traffic bandwidth packets unique hosts hour intervals trace 
lines show minimum maximum percentage traffic seen hour bottom top box show th th percentiles line inside box shows median value 
ture traffic locations show daily decrease traffic late night pacific standard time 
shows time series plots non fragmented traffic 
note figures exclude random source denial service attacks 
attacks produce spikes number hosts generating traffic periodic temporal patterns 
classification fragmented traffic fragment series categorized order monitor received constituent packets 
table iii shows breakdown series attributes defined section ii correct complete order reverse order overlapping duplicate 
series complete meaning contain sufficient information reconstruct original datagram 
correct series account series 
complete series order reverse order 
complete series overlapping duplicate series attributes impede exact determination ordering 
complete series overlapping fragments contain duplicates 
monitored series correct series order reverse order reordered transit 
may paxson observed approximately packets arrive order 
appears fragmented traffic greater probability reordered network traffic 
way quantify frequency order non fragmented packets data sets test hypothesis 
reverse order series problematic fact beneficial host receiving series fragment length offset fields received packet immediately allocate correctly sized buffers growing chaining buffers subsequent fragments arrive 
characteristics fragment traffic clearly portray characteristics fragmented traffic graphs generated data collected ames internet exchange demonstrate basic properties fragmented ip traffic observed links studied 
analyzed size bytes monitored fragment series number fragments series sizes largest smallest fragments series effects fragments larger bytes 
bytes fig 

number bytes transmitted correct series trace aix 
note includes bytes ip headers fragment 
bytes fig 

enlargement byte range number bytes transmitted correct series trace aix 
note includes bytes ip headers fragment 
bytes fragment series size payload carried fragment series highly variable 
random component similar distributions packet size general band bytes fragment series 
tunneled traffic major cause fragment series size range 
source host sends original datagrams bytes mtu ethernet link types additional ip headers prepended tunnel ingress point 
banding effect prevalence original datagram sizes bytes seen enlargement byte range 
frequently occurring series size data sets bytes 
observe background relatively uniform distribution packet sizes stretches series size graphs 
case series total sizes bytes occurred uniform frequency time aix aix traffic bytes high bandwidth sites time cerf cerf traffic bytes low bandwidth sites time aix aix traffic packets high bandwidth sites time cerf cerf traffic packets low bandwidth sites time aix aix unique source hosts high bandwidth sites time cerf cerf unique source hosts low bandwidth sites fig 

average hourly bandwidth packets unique hosts non fragmented traffic 
category occurrence correct complete order reverse overlap duplicate series series 
table iii top series kinds series bytes non fragmented packets correct fragment series fig 

cumulative distribution fragmented bytes ip packet trace aix 
fragmented traffic includes bytes ip headers series 
approximately series size 
background level approximately series spanned range bytes bytes 
shows packet size distribution data set including fragmented traffic 
packet sizes bytes occur frequency excess packets 
frequently occurring packet size bytes packets followed bytes packets bytes packets 
shows evidence fragmentation caused mtu misconfiguration 
monitored total series bytes 
series appeared deliberate optimizations slow links majority appear errors 
smallest series bytes bytes payload 
overhead series bytes nearly large size payload 
additional series considered poorly configured series lengths bytes 
instances routers handling predominantly voice ip traffic low mtu optimal configuration mtus lower bytes generally evidence mistaken misguided configuration 
hosts modem connections slip set low mtus dial link mtu sufficient preserve interaction large file transfers 
additional overhead incurred considered smaller mtu chosen byte tcp packets headers necessary delivery packet byte packets byte packets constitute overhead 
deliver payload byte tcp packet byte packets generating extra bytes byte packets generating extra bytes necessary 
phenomenon observe series size histograms large original datagram occurring frequency disproportionate size 
spikes appear transient property traffic link vary datagram size magnitude occurrence time link vary wide area network locations 
data set contains easily identifiable manifestations phenomenon fragment series bytes series bytes 
large datagrams occur links monitored note effects occurrences sections 
sets large series icmp echo requests may ping death attacks 
machines running older versions operating systems crashed sending ping packet larger bytes 
protocols allow packets large ping death packet fragment series compositions byte fragment series consists fragments bytes followed fragment bytes original datagram length bytes 
case bytes overhead caused additional ip headers needed transmit series 
byte fragment series consists fragments bytes followed fragment bytes original datagram length bytes 
case bytes overhead result additional ip headers needed transmit series 
fragments fragment series series packets series fig 

number fragment packets correct series trace aix 
fragment series typically fragments length 
high number fragment series consistent high volume tunneled fragmented traffic series length accounts original datagrams range just exceeding mtu link bytes packet header double mtu link mtu mtu spike fragment series generally followed decreasing numbers packets increasing length series 
observe pairing odd lengths results step decrease frequency occurrence long fragment series 
behavior seen pairs 
observed unusually large number fragment series aix unusual frequency packets lengths bytes respectively 
packets broken typically arrives fragment series reassembled target machine original byte packet crashes target machine byte fragments oddly sized leftover fragment 
largest fragment size distribution bytes fig 

largest fragment size correct series trace aix 
size largest fragment fragment series indicative mtu link provoking fragmentation 
typically fragment fragment series maximum size universally true 
identified aix mae west data total fragment series smallest fragment received largest trailing 
total correct fragment series transmitted reverse order assumption fragment series largest 
misconfigurations apparent bytes fragment series graph visible packet need fragmented size bytes travels exchange point 
observable artifacts original datagram phenomena graph 
anomalies result byte largest fragments far common largest fragment size anomalies visible largest fragment size distribution 
largest fragments occur sizes easily predicted mtus common link types 
table iv shows largest fragment size series seen data sets 
bytes far common largest fragment size maximum packet size ethernet networks 
ethernet networks llc snap accordance rfc produce byte ip packets 
dec traffic results packets length bytes 
bytes widely ppp mtu results usage default byte transmission size 
rfc rfc largest size packet host required accept bytes 
protocol fragmented non fragmented name number pkts bytes pkts bytes udp 
esp ipsec icmp tcp 

gre ah ipsec igmp ax table protocol breakdown fragmented non fragmented ip traffic 
percentages total traffic 
fragment size bytes series 

table iv top largest fragments correct series path mtu discovery fails implemented packets sent size equal bytes 
note ipv minimum mtu link bytes 
default packet size bytes results fragments bytes length payload fragment packet divisible 
size requirement design ip packet header specifies offset field holds position fragment original datagram byte units 
size entire fragment sum length ip header payload 
ip options rarely occur ip headers fragments bytes length 
entire packet size non fragments largest valid fragment packet size equal default transmission size bytes bytes 
packet consist bytes ip header byte units fragment payload 
large fragment sizes configuration errors 
evidence utility path mtu discovery safe transmission size host send packets prevent fragmentation unacceptable increase packet overhead 
effects fragments larger bytes seen previous graphs frequently occurring original datagram sizes shape characteristics resulting fragments 
fragment traffic mae west unusual common largest fragment size link bytes usual sizes smaller bytes 
mae west location monitored study atm link mtu ip atm bytes 
fragments larger bytes fragmented reach destination smaller fragments 
fragmented traffic protocols applications section examines services protocols applications contribute fragmented traffic 
services causing fragmentation hypothesize nfs causes fragmented traffic lans backbone networks data streaming media tunneled traffic dominant cause ip packet fragmentation 
streaming media accounts fragmented traffic 
single application group microsoft media player responsible fragmented traffic 
protocol utilizes path mtu discovery significantly reduce impact application packet fragmentation 
major culprit fragmented tunneled traffic consists ip packets sized mtu local network tunneled causing addition additional ip header 
example byte packet byte ip header added tunneled results byte datagram exceeds mtu subsequent link fragmented byte fragment byte second fragment 
fragmentation entirely host known send traffic ip tunnel set mtu interface associated tunnel bytes 
reduce switching load resulting tunneled traffic machine generate extra packet fifth packet sent requiring second packet original datagram sent machine 
path mtu discovery allow host discover mtu minimizes fragmentation tunneled traffic 
fragmented traffic monitored link ucsd course study consisted ip packet don fragment bit set encapsulated ip header don fragment bit 
host believes correctly performing path mtu discovery oblivious fact packets sends tunnel fragmented 
prevent unnecessary fragmentation implementations tunneling protocols need perform path mtu discovery tunnel ingress point tunnel egress point correctly forward icmp datagram big messages back source hosts 
tunneling protocols increasingly widespread increased fragmentation caused improperly implemented tunneling software may cause performance problems 
tunneled traffic local area network phenomenon 
combination gre udp tp accounts fragment series second largest single cause fragmentation 
protocols currently implement form path mtu discovery 
nfs accounts wide area network fragment series 
frequently fragmented protocol igmp igmp packets fragments 
igmp accounts measured packets fact purely academic import 
shown table vi udp accounts fragmented packets protocol fragmented traffic 
fragmented icmp traffic consists primarily echo requests replies small significant number timestamp requests monitored 
path mtu discovery successfully limits protocol fragmented name pkts bytes series udp 




esp ipsec icmp 

tcp gre ah ipsec igmp ax table vi protocol breakdown fragmented traffic 
series column correct series 
protocol non fragmented name pkts bytes udp 
esp ipsec icmp tcp 

gre ah ipsec igmp ax table vii protocol breakdown non fragmented traffic 
amount tcp traffic fragmented effects quite ubiquitous claim 
packets course week total tcp traffic consisted fragmented packets 
fragmented tcp traffic exist highly aggregated links 
tcp applications table viii fragmented tcp series composed smtp packets 
peer peer file sharing applications napster gnutella account total fragmented tcp traffic despite larger portion traffic 
identify napster gnutella traffic commonly ports 
gnutella servers lesser extent napster servers alternate ports typically tcp application series smtp 
ftp data 
napster data unclassified tcp gnutella bgp ssh kerberos table viii top tcp applications correct fragment series vent blocks intended impede applications underestimate significantly prevalence fragmented non fragmented peer peer filesharing application 
icmp application series echo request 
echo reply 
timestamp request port unreachable ttl expired reassembly host unreachable frag needed df set type code ttl expired transit table ix top icmp applications correct fragment series icmp applications table ix majority icmp traffic observed associated echo request reply 
icmp echo requests series bytes previously discussed section iv 
fragmented icmp traffic timestamp request appears misconfiguration denial service attack 
icmp timestamp request packet normally bytes plus ip header larger bytes 
observed fragmented icmp timestamp traffic predominantly payloads bytes bytes 
instances multiple source hosts sending type byte icmp timestamp messages destination suggesting denial service attack 
udp applications tables xi udp application series series ms media 
unknown 
talk isakmp daytime icu ii nfs table top udp applications ephemeral ports 
percent fragmented udp traffic occurs dynamically allocated ports 
identify applications associated traffic ephemeral ports match ambiguous fragments control traffic known ports 
initial study include packet level trace traffic collected hours including business hours tcp udp icmp flow data ucsd taps february 
distribution applications follow study similar traces earlier study 
specifically unclassified udp traffic accounted observed udp traffic reduction previous study 
utilization applications including games quake doom microsoft media player aol increased distribution applications remained 
location built tuple table source ip address destination ip address protocol ports measured flow 
identified udp flows fragmented packets extracted flows involving source destination ip occurred seconds fragmented flow 
explored effect timeout window size number matched unmatched fragment series 
chose seconds window size study minimizes unmatched fragment series minimizing multiple matches fragment series 
generated multiple matches single unknown udp series despite tuning window size tempted determine matches control stream fragments 
removed duplicate matches eliminated common applications traceroute netbios control streams udp traffic ephemeral ports 
multiple matches remained chose match occurred commonly 
example narrowed choices microsoft player squid player 
varying method resolving multiple matches significant effect final results 
seen table xi vast majority fragmented udp traffic appears caused microsoft windows media player 
culprits include games quake doom call tp tunneling protocol 
categorized applications identified wellknown port numbers thirteen groups similarities application functions 
top application groups contributing fragmented traffic measured february shown table xi 
streaming applications primary contributors fragmented traffic effects tunneled traffic represented table tunneling protocols ipsec gre identifiable port numbers 
ipv packet fragmentation version ip protocol ipv eliminates ip packet fragmentation mechanism routers 
ipv requires checksum udp header udp packets 
udp checksum field appear ipv udp header optional 
proposed mechanism bridging ipv ipv networks udp packets lacking checksums checksums computed applied transmitted ipv networks 
process checksum computation difficult fragmented traffic fragments original datagram reassembled checksum computed 
fragments share egress point ipv network checksum computation impossible 
aware available data prevalence ipv udp fragments udp checksums 
data observe udp fragments lacked udp checksum 
hosts sending fragmented traffic sent udp packets checksums 
hosts sent udp packets check application groups conferencing encryption file systems file transfer games login mail news network infrastructure streaming tunneling www sum sent udp packets checksums 
result consistent application specific checksum incorporation host specific behavior complicates user transparent ipv ipv transition 
assertions nature extent fragmented traffic folklore measurement analysis 
common beliefs include fragmented traffic decreasing prevalence nonexistent fragmented traffic exists lans due nfs backbone links misconfiguration causes fragmentation udp traffic fragmented 
majority fragmented traffic udp packets bytes icmp ipsec tcp tunneled traffic commonly fragmented 
microsoft media player single largest source fragment series accounting seen study 
tunneled traffic major cause fragmented traffic accounts fragmented series 
nfs accounts fragment series observed 
unable classify applications associated small percentage udp traffic ephemeral ports dynamically exchanged ports 
classifiable udp traffic comprised primarily tunneled streaming media game traffic 
fragmented traffic occur regularly highly aggregated exchange points access links 
fragmented traffic small percentage traffic prevalence highly variable fragmented traffic accounted packets hour long periods links 
bursty nature fragmented traffic difficult measure accurately short samples network traffic 
fragmented traffic detrimental wide area network performance 
fragmented traffic causes increased load routers division original packet increased number packets handled subsequent routers 
traffic causes increased load links due overhead extra ip header fragment 
additionally fragments necessary reassemble original packet probability successfully delivering fragmented packet exponentially decreases function number fragments contrast normal packet loss rate 
partial packet loss may increase link router loading higher layers retransmit packets 
advent ipv packets currently fragmented network dropped routers packet big icmp message returned source host 
proposed mechanism transition application series ms media 
unknown 
quake tp doom realaudio udp talk aol isakmp application group series streaming 
unknown 
games tunneling network infrastructure file systems encryption conferencing www table xi top tcp udp applications application groups including applications ephemeral ports identified control streams 
ipv ipv networks requires checksums fragmented udp traffic lacks udp checksum 
understanding actual prevalence causes fragmented traffic critical success currently proposed protocols security efforts 
vi 
acknowledgments ryan koga writing program collect data part study ken keys suggestions help coralreef 
possible assistance steve feldman bobby cates joe mae west aix passive monitors 
especially grateful assistance daniel plummer david meyer bill fenner evi nemeth craig partridge ken keys geoff voelker sigcomm internet measurement workshop reviewers participants acm transactions networking reviewers useful suggestions 
support caida staff invaluable 
kent mogul fragmentation considered harmful wrl technical report dec 
varghese reconsidering fragmentation reassembly podc th acm sigact sigops symposium principles distributed computing 
sean claffy trends wide area ip traffic patterns view ames internet exchange itc specialist seminar ip traffic modeling measurement management sept 
mogul deering rfc path mtu discovery nov 
postel rfc internet protocol sept 
cert advisory ca ip denial service attacks www cert org advisories ca 
html 
jason anderson analysis fragmentation attacks mar www sans org threats frag attacks htm 
applied telecom product overview pci optical interface network transceiver www com pdf ov point pdf 
mccanne leres jacobson libpcap lawrence berkeley laboratory berkeley ca available anonymous ftp ftp ee lbl gov nics www com html solutions htm 
waikato applied network dynamics group dag project dag cs waikato ac nz 
ken keys david moore ryan koga edouard michael claffy architecture coralreef internet traffic monitoring software suite pam workshop passive active measurements 
caida apr ripe ncc www caida org tools measurement coralreef 
iana port assignments ftp ftp isi edu notes iana assignments port numbers 
david moore geoffrey voelker stefan savage inferring internet denial service activity usenix security symposium 
yin zhang vern paxson scott shenker stationarity internet path properties routing loss throughput aciri report may 
ping death www insecure 
org ping death html 
postel reynolds rfc standard transmission ip datagrams ieee networks feb 
postel rfc tcp maximum segment size related topics nov 
deering rfc internet protocol version ipv specification dec 
atkinson rfc default ip mtu atm aal may 
laubach halpern rfc classical ip arp atm apr 
perkins rfc ip encapsulation ip oct 
deering rfc internet control mes sage protocol internet protocol version ipv specification dec 
