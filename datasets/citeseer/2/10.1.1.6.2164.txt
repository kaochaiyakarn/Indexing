automatic generation benchmark problems automated theorem proving systems simon colton division informatics university edinburgh uk email dai ed ac uk geo department computer science university miami usa email geoff cs miami edu automated theorem proving atp researchers problems testing systems run risk producing systems solve problems weak new problems applications 
furthermore state art atp progresses existing test problems easy testing provides little useful information 
important regularly nd new harder problems testing atp systems 
hr program performs automated theory formation mathematical domains group theory quasigroup theory ring theory 
axioms domain hr invents concepts nds examples model generator conjectures empirically concepts 
hr discover new group theory theorems sucient diculty included tptp standard library test problems rst order atp systems 
hr produces tens thousands distinct theorems opportunity determine characteristics identify hard problems 
automated theorem proving atp concerned development systems automate sound reasoning derivation follow inevitably facts 
capability lies heart important computational tasks 
key concern atp research development powerful systems capable solving dicult problems resource limits 
order build powerful systems important understand systems techniques understanding system understood collection combination techniques types problems 
knowledge key development precedes investigation techniques systems badly 
knowledge crucial users speci problem user know systems solve 
classical rst order atp empirical evaluation necessary tool obtaining knowledge 
currently real applications rst order atp corpus application problems basis empirical atp system evaluation current applications atp software hardware veri cation largely propositional techniques 
rst release tptp problem library ss researchers tptp appropriate convenient basis testing atp systems 
test problems exist tptp de facto standard testing rst order atp systems 
tptp best available collection representing general purpose applications atp best source problems evaluation general purpose atp systems 
concerns developers continual tptp 
signi cant concern atp researchers tptp testing systems run risk producing systems solve tptp problems weak new problems applications 
counter concern important regularly add new types problems tptp including problems emerging applications sources 
lesser concern state art atp progresses sfs existing problems easy testing provides little useful information 
problems tptp diculty rating dropped dicult solvable state art atp systems easy solvable state art atp systems added tptp see ss details tptp problems rated 
necessary add progressively harder problems tptp avoid adding easy problems 
new version tptp released year 
releases new problems collected atp users developers encoded inclusion tptp 
contributions valuable tptp useful larger number problems added year 
prospect mechanical source problems described sections highly attractive 
hr program hr program named mathematicians hardy ramanujan developed perform automated theory formation 
applied di erent domains far form theories primarily areas pure mathematics number theory graph theory nite algebras group theory ring theory initial information domain supplied hr includes initial concepts multiplication addition number theory examples concepts triples integers related multiplication 
nite algebraic domains hr start just axioms theory extracts initial concepts identity axiom group theory hr extracts concept identity elements 
hr operates performing theory formation step attempts invent new concept old ones 
concept formation facilitated set general production rules generate de nition set examples new concept de nition examples old concept 
production rules described detail col 
concern compose rule uses conjunction join de nitions previous concepts exists rule introduces existential witness variables match rule equates variables concept de nition theory formation step lead concept examples concept exactly examples previous concept concept non trivial examples di er previously existing concepts 
rst case may examples concept lack data hr may de nition concept inconsistent axioms domain 
hr conjecture examples concept exist 
second case hr conjecture stating de nitions new concept previously existing concept equivalent 
nal case concept simply added theory 
hr conjectures nite algebraic domains invoke otter theorem prover mcc attempt prove conjecture 
otter fails hr invokes mace model generator mcc attempt nd counterexample 
otter mace successful conjecture remains open 
case otter proves equivalence theorem hr breaks set implication theorems set premise predicates imply single goal predicate 
furthermore hr extracts prime implicates implication theorem 
takes larger subsets premises implication theorem tests otter prove imply goal 
instance hr produced theorem group theory xy inv id inv id break implication theorems xy inv id inv implication hr attempts nd smallest set premises predicates left hand side implication imply goal otter prove prime implicate xy inv inv way hr builds set prime implicates embody fundamental facts domain 
hr generate problems tptp attempts rst unsuccessful second successful hr generate problems tptp library 
aim generate theorems sucient diculty provide challenge state art atp systems 
rst attempt hr functionality 
produced conjectures various nite algebraic domains including ring theory group theory 
conjectures proved theorems otter hr extracted prime implicates additional theorems 
exception hundreds theorems produced way suciently dicult inclusion tptp 
reasons prime implicates produced user understand fundamental facts domain group theory id 
comprise simplest theorems domain general easy prove 
appears extracting prime implicates hr otter reduced diculty 
second hr produces conjectures quickly otter quick proving collaboration hr otter relatively slow involving writing les invoking programs possible produce theorems reasonable time 
meant hr explored part domain form concepts sucient complexity conjectures involving dicult prove 
third conjectures produced sucient complexity challenge otter requiring cases seconds prove turned provers little diculty 
second attempt concentrated group theory aimed quantity hoping fraction conjectures produced turn theorems sucient diculty 
hr set generate equivalence conjectures non existence conjectures usually easy prove 
hr ability extract prime implicates easy prove 
increase complexity conjectures random search 
breadth rst searches produce conjectures simple depth rst searches specialize theory particular depth rst search group theory conjectures generated involved concept inverse elements 
contrast random searches tend produce fairly complicated conjectures specializing theory 
increase yield conjectures new functionality added hr 
stage hr stated equivalence conjecture old concept new concept examples 
hr extended store conjectured equivalent de nitions concept concept conjectured equivalent conjectured equivalent conjectured equivalent hr groups order examples previous usage hr majority hr conjectures true groups order true general case 
conjectures generated resorting otter test theoremhood removing step process 
decrease number repeated conjectures just match exists compose rules 
problem hr produce concept di erent paths instance concept produced forall production rule described produced negate step followed exists step followed negate step 
restricting production rules repeated conjectures reduced 
axiomatization group theory minimal containing just left inverse axiom inv id left identity axiom id associativity axiom xyz axioms encoded rst order logic equal predicate resulting pure equality problems 
axioms hr generated conjectures rst order logic 
eciency gains yield increases just theory formation steps minutes pentium mhz processor hr produced syntactically unique equivalence conjectures 
due optimized generation conjectures assurance theorems cases measure diculty atp systems 
issues checked problems considered inclusion tptp 
methodologies evaluating atp systems problems ss 
roughly problem evaluated testing state art atp systems assigning diculty rating fraction systems fail solve problem realistic resource limits 
systems testing selected performance problems syntactic characteristics 
group theory problems generated hr pure equality problems horn non horn systems selected testing sch gandalf tam otter mcc wei rv 
results testing section identify problems suciently dicult inclusion tptp 
testing results atp systems tested problems sun ultra mhz cpu cpu time limit seconds 
systems prove theorems nding refutation clause normal form cnf axioms negated conjecture 
testing otter mcc conversion cnf tptp utility distributed tptp prepare problems submission systems 
table summarizes results testing number rank theorems proved prover 
problem rating range fraction systems failed solve 
problems easy rating solved systems omitted table 
clearly better problems gandalf otter problems rated solved systems 
problems rated acceptably dicult suitable inclusion tptp 
required characteristic dicult provide challenge atp systems 
realistic resource limit linear increase resources result solution signi cantly problems 
contribute ranking atp systems solved systems 
table results summary total rated rated rated rated problems gandalf otter analysis results shows strong correlations ratings number clauses cnf problem ratings number non horn clauses cnf problem 
correlations may reasonably expected atp perspective necessary correlations 
con rmation provides fact way roughly evaluating diculty theorems generated hr having test atp systems 
analysis results shows correlation problem ratings numbers universally existentially quanti ed variables conjecture 
tables show average cpu times taken problems solved strong atp systems average ratings problems conjectures indicated number universally existentially quanti ed variables 
table shows increase average cpu time rating universally quanti ed variables marked decrease 
unexpected result diculty theorems expected increase linearly number universally quanti ed variables 
phenomenon examined suggest hr interesting theorems domain relatively easy state dicult prove important theorems pure mathematics qualities instance color theorem fermat theorem 
table shows large number problems universally quanti ed variables increase average cpu time rating number existentially quanti ed variables increases correlation smaller numbers problems universally quanti ed variables 
note number existentially quanti ed variables counted left hand right hand concepts larger value taken measures number existentially quanti ed variables conjecture complicated concept 
correlations provide guidelines generating dicult problems setting hr produce conjectures variables universally existentially quanti ed produce dicult problems 
addition looking statistics theorems worth examining individual theorems 
example th theorem xy inv inv table correlation number variables problems average cpu times average variables rating table correlation number variables variables problems average cpu times average variables variables rating inv inv prove second time limit proved seconds 
prove theorem sides need simpli ed removing existential variables known results group theory 
firstly known inverse element unique inv inv inv replaced just inv technique repeatedly theorem simpli es xy inv inv inv inv de nition inv id id simpli es theorem xy inv inv id multiplying sides equality inv gives theorem statement xy id idempotent element groups identity element left hand side re written id matches right hand side 
qed 
re ection evident hr disguised concept pair elements identity element 
disguise left right conjecture equivalence sucient diculty beat attempts 
theorem took longest time solve seconds worth examining xyz inv inv inv inv inv left hand side evident hr disguised identity element identity element 
need commute 
hr successfully generate group theory problems suciently dicult challenge state art atp systems suciently dicult inclusion tptp problem library 
success came optimizations hr allowing produce conjectures quickly subsequently selection atp systems verify theoremhood diculty 
analysis data suggested problem characteristics help ensure conjectures generated suciently dicult 
having shown hr capable producing theorems suciently dicult goal increase yield theorems 
preliminary analysis possible reasonably prune hr conjectures testing atp systems 
particular theorems universally existentially quanti ed variables rejected 
hr generate theorems di erent domains including domains non pure equality axiomatizations produce types theorems equivalence theorems 
hr measures interestingness drive best rst search 
particular novelty measure produce complicated concepts conjectures specializing theory 
noted conjectures produced hr turned theorems 
due fact hr conjectures relative mainstream group theory fairly simple conjectures true groups order 
desirable generate hard demonstrate non theorems tptp 
runs hr generating conjectures millions tens thousands protocol followed system nds proof conjecture theorem rating determine suitable inclusion tptp 
atp systems try show conjecture non theorem 
done easily conjecture discarded 
hard theorem non theorem suitable inclusion tptp 
results group theory problems show system suited problems axiomatization group theory 
project interest invention new axiomatizations domains dicult contemporary atp systems 
hr start core algebraic domain axioms invent operators axioms operators 
hr determine domain invented models interesting concepts conjectures 
hopefully hr invent domain containing theorems suciently dicult atp systems 
practical goal project embed hr architecture mathematical services fk 
hr ered new service software bus user ask hr number theorems particular diculty particular atp system systems 
hr access number atp systems including service sut check quality theorems 
way atp developers able generate new problems dicult system solve 
tptp library valuable service atp system developers 
acknowledgments simon colton department computer science university york 
supported epsrc gr european union project www de 
colton bundy walsh 
automatic concept formation pure mathematics 
dean editor proceedings th international joint conference arti cial intelligence pages 
morgan kaufmann 
colton bundy walsh 
automatic identi cation mathematical concepts 
proceedings th international conference machine learning 
colton bundy walsh 
notion interestingness automated mathematical discovery 
international journal human computer studies 
col colton 
automated theory formation pure mathematics 
phd thesis university edinburgh edinburgh scotland 
fk franke 
system description agent communication layer distributed automated theorem proving 
ganzinger editor proceedings th international conference automated deduction number lecture notes arti cial intelligence pages 
springer verlag 
mcc mccune 
mace models counterexamples 

mcs anl gov ar mace 
mcc mccune 
otter automated deduction system 

mcs anl gov ar otter 
rv voronkov 

ganzinger editor proceedings th international conference automated deduction number lecture notes arti cial intelligence pages 
springer verlag 
sch schulz 
system 
gore nipkow editors proceedings international joint conference automated reasoning number lecture notes arti cial intelligence pages 
springer verlag 
sfs fuchs 
progress automated theorem proving 
hoos st utzle editors proceedings ijcai workshop empirical methods arti cial intelligence pages 
ss 
tptp problem library cnf release 
journal automated reasoning 
ss 
evaluating general purpose automated theorem proving systems 
arti cial intelligence 
sut 
mcallester editor proceedings th international conference automated deduction number lecture notes arti cial intelligence pages 
springer verlag 
tam 
gandalf 
journal automated reasoning 
wei 
combining superposition sorts splitting 
robinson voronkov editors handbook automated reasoning 
elsevier science 

