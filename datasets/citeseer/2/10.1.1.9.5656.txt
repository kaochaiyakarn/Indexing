similarity clustering versus galois lattice building strengths weaknesses valtchev missaoui epartement informatique succ 
centre ville montr eal qu ebec canada mail valtchev info ca missaoui ca real world applications designers tend building classes objects concepts chunks clusters similarity criteria 
compare approaches clustering galois lattice approach similarity clustering approach 
sketch possible ways approach benefit refining process building hierarchy classes set instances 
building class hierarchies sought common task computer science areas software engineering including object oriented models systems data management knowledge representation 
mainly data process modeling system design performance optimization purposes 
instance successfully applied software reuse code reuse class reorganization reverse engineering model refactoring databases knowledge bases physical clustering objects name 
short position compare strengths limitations distinct clustering techniques galois lattice gl similarity clustering sbc described 
allow construction hierarchy classes extension intension presents peculiar features better fit particular applications 
organized follows 
section gives background conceptual clustering techniques 
section put contrast gl sbc 
section describes possible combinations techniques 
provided section 
background clustering techniques take input set individuals objects set attributes divide set sub sets classes highly similar objects 
clustering technique considers different sorts attributes uses similarity criterion organizes classes distinct hierarchical structure form tree lattice 
illustrating example consider set objects representing people hypothetical database 
objects described attributes see table age integer type range salary float indicating person monthly income thousands euros 
table set objects representing human beings attribute age salary galois concept lattices paradigm occurred lattice theory 
originally binary attributes considered possible values absent 
objects seen binary vectors dataset binary table incidence relation means object attribute 
basic method table called formal context simply context may processed extract inherent lattice structure defining natural groupings relationships objects attributes 
structure known formal concept lattice 
concept lattice derived context couple composed object set attribute set 
concepts complete couples respect means conditions satisfied ffl fa aj ffl fo oj functions constitute galois connection 
concept lattice complete couples partial order join meet concept lattice ffl ffi ffl ffi original settings galois lattice gl approach handles numerical data previous section preliminary encoding called scaling 
scaling results binary context called derived numerical attribute replaced set binary ones 
derived attribute represents predicate corresponding suitable part original attribute range 
instance context left side extracted data table section splitting attribute domains assigning binary attributes 
age split attributes age age salary sliced distinct parts binary relation expressed formal context galois lattice developments diday symbolic data analysis significant enlargement gl scope reached fact galois connection may directly established arbitrary set attributes necessary binary provided value domain structured lattice sub domains 
particular allows numeric data dealt direct way fixing intervals scaling step determined dynamically lattice formation 
resulting lattice may grow exponentially size dataset 
example set complete couples set fo dataset corresponds power set developments concerned relaxation crisp concept definitions original settings fuzzy probabilistic rough formal concepts investigated 
different research stream looked overcome inherent limits pure attribute value description formalisms gl methods defined structured terms function free predicate logic languages datalog object oriented formalisms 
efficiency requirements motivated research suitable scalings structured formalisms conceptual graphs composite objects 
similarity clustering similarity paradigm occurred statistical data analysis 
framework attributes take exclusively real values represent maps ir 
objects seen real vectors equivalently points ir size sequel classical object notation stand value basic method proximity measure defined couple sets order quantify object likeness 
maps object pairs non negative real numbers theta ir consider distance proximity measures called dissimilarities dual similarity notion ignored 
share common metaphor euclidean distance ir similar way value measure elementary distances dimension object attribute 
fortunately case entire set fo 
popular dissimilarity functions consider minkowski family jo gamma different values formula lead distinct functions result called manhattan euclidean distance respectively 
furthermore contribution different attributes global value may fine tuned attribute weights jo gamma usually sum weights set global normalization remains possible 
normalized functions ones values zero insures sensible comparison objects having quite diverging characteristics 
normalization achieved steps subtract attribute mean attribute value ii divide result standard deviation attribute 
alternatively may simply divide attribute contribution formula attribute maximal range 
specific constraints lay way measures behave provide sensible clusterings 
objects symmetry implies definiteness triangular inequality functions satisfy properties called dissimilarity indexes satisfying semi metrics metrics 
intuition metric objects similar third dissimilar 
exemplify computation dissimilarity take manhattan distance object set table equal weights attributes original ranges 
settings dissimilarity couple objects say gamma gamma gamma gamma similar computations help transform entire object attribute table square matrix object dissimilarities see left part 
matrix fed clustering procedure output set classes possibly organized hierarchy 
instance common family clustering methods algorithms produce dendrogram binary tree nodes classes objects indexed dissimilarity values 
generic process starts set singleton classes proceeds successive merges unique class reached 
step similar classes merged concrete algorithm applies class similarity criterion 
example single linkage method result shown right merges classes having minimal distance member objects 
developments galois connections gl approach definitions sensible dis similarities key topic sbc 
appropriate transformation dataset distance matrix devised stands sequential hierarchical non overlapping dissimilarity matrix initial dataset single linkage dendrogram classes produced clustering technique 
similarity models non numerical homogeneous data descriptions inclusive binary categorical features developed simultaneously primary numerical current 
mixed attribute sets types largely studied data analysis machine learning fields :10.1.1.48.9623
works similarity richer description languages include conjunctions function free predicates conceptual graphs object oriented formalisms 
basic version hierarchical clustering provide intensional description discovered classes 
characterization class easily obtained member objects 
purpose generalization performed yield value restriction attributes shared class members 
example classes member sets extensions fo fo respectively 
respective sets age values class generalize intervals 
similar generalizations may carried entire set common attributes data type require generalization operator set value restrictions produced way constitute description class sense member object satisfies restrictions 
descriptions classes fo fo age salary class descriptions similar concept intents gl framework seen conjunctions predicates constrain initial attribute values 
important distinctions exist 
description class discovered clustering provide necessary condition class membership concept intent gl approach provides necessary sufficient conditions 
value restrictions concept intents fixed priori scaling step determine shape concept lattice class descriptions depend clustering results 
characterization task carried simultaneously clustering separate post processing step 
comparison approaches approaches compared variety aspects related input output clustering specific steps process 
selected limited set criteria suitable operators frequent data types numbers symbols may 
discriminate best way 
kind similarity classes concepts express output uniqueness structure clustering partitioning versus overlapping specialization classes concepts attribute weights ability handle different kinds data 
notion similarity sbc precise gl 
fact objects gl similar share identical properties sbc alike degree quantified proximity measure entire attribute set 
measure quantifies dissimilarity objects mechanism missing gl 
frameworks similar objects tend grouped concepts classes specific lay low classification structure 
dataset various ways transform working table matrix context gl sbc 
gl turns context unique complete lattice concepts 
contrast sbc produces tree structure recursive partitioning small subset possible classes 
tree depends exact clustering algorithm 
classes level tree disjoint concepts lattice may overlap 
furthermore generalization relation structures distinct scopes 
hand concept lattice generalization implies attribute set inclusion concepts fq sg fsg 
hand clustering tree classes share attributes refine respective value restrictions classes sec 

gl deals attributes uniform manner prevalence sbc allows assignment weights attributes 
different sets weights lead distinct dissimilarity matrices turn may give rise quite diverging class hierarchies 
noteworthy discretization continuous attribute scaling represents particular kind weighting values attribute domain couples different values considered identical couples remain distinct 
valuable feature sbc ability handle direct uniform way different kinds data qualitative sex continuous salary discrete number owned cars data 
contrast gl needs preprocessing conceptual scaling input keep lattice reasonable size step introduces bias 
sbc techniques easily adapted structured relational data gl especially case cyclic data spouse relationship 
table summarizes main features 
criteria galois lattice similarity clustering similarity equality proximity uniqueness result completeness final structure specialization attribute set inclusion attribute range restriction attribute weight continuous value management hard integration approaches strengths limitations approach discussed earlier hint complementarity 
joint application may foreseen helps refine clustering process large sets objects rich collection attribute types numerical relational 
suggest plausible scenarios possible 
preliminary sbc step may help successful processing continuous data gl 
clustering tree may different ways reduce size gl context lattice produce 
hand processing entire object set direct manner may extract set highly cohesive classes tree act generalized individuals gl step 
example lattice right obtained set clusters dissimilarity level dendrogram 
cluster characterized way described section gives rise generalized individuals concepts table left 
galois connection set clusters set possible intents couples intervals compute formal concepts 
left intents extents terms initial objects 
concept extent intent age salary 
:10.1.1.10.9845




set concepts obtained fca straight galois correspondence individuals descriptions 
individuals gl construction intensionally described object groups obtained preliminary conceptual clustering 
resulting lattice shown right 
concepts lattice built top selected class set intents value restrictions attribute set initial class descriptions 
new lattice represents classification initial objects members selected classes 
noteworthy specific nature galois connection concept intents fit perfectly extents 
seen sets value restrictions sense section resulting description specific covers exactly extent 
contrast descriptions provided classical concept intents specific ones 
illustrate phenomenon take concepts extent lattices compare intents 
fact intent indicates member objects share property salary second adds restrictions salary age 
observe new sub concept relation attribute set inclusion intents involve set attributes 
relation value restrictions precisely inclusion set admissible values attribute 
intent bottom concept attribute set intersection intents object concepts usually void 
hand clustering tree may establishing appropriate thresholds scaling 
example thresholds may drawn classes 
age salary conversely sbc may applied available concept lattice order obtain simplified structure concepts group similar objects appear :10.1.1.48.9623
purpose may imagine metrics concepts helps group general concepts 
procedure identical hierarchical clustering addition merge operation concept extents generalization concept intents performed 
case binary object descriptions classical gl approach generalization simply set common attributes simplification procedure necessary yield tree concepts problems may arise completeness sense galois connection obtained object clusters existence additional inclusion links clusters follow lattice structure algorithm completes clusters full concepts adds missing links described 
suggested approach interesting remains limited classical contexts binary descriptions objects concepts similarity measure relies heavily 
numerical function suggested greater part initial object resemblance may caught 
example small size conceptual structure drawn lattice sbc procedure shown left 
proximity values group individual concepts 
merge closure performed cluster intent led additional merges fo fo 
left simplified concept hierarchy drawn concept lattice hierarchical clustering 
underlying proximity measure computed individual objects see table 
right single linkage dendrogram extent concept fpg proximity matrix 
sbc may performed extent single concept lattice 
fact concepts stem derived context may provide quite rough estimation actual inter object similarities 
catch similarities perform sbc original object descriptions 
example dendrogram right shows result clustering extent concept fpg see measure measure 
discovered classes refine initial concept necessarily correspond sub concepts lattice 
case result local clustering diverges complete clustering tree generalization corresponds lattice join operator 
due sufficient condition membership concept intents 
sense represent sub tree 

research particular traits approaches suitable different kinds applications 
object oriented paradigm assist design class hierarchies 
instance gl proved right tool designing entire hierarchy leaf classes features methods variables 
binary framework completeness lattice help insure properties maximal factorization minimal size entire class set 
large parts lattice contribute effectively object features may ignored 
substantial simplification procedures lattices done 
particular hierarchical clustering concepts binary similarity measures investigated 
alternative problems settings gl class design include optimization existing hierarchies documented uses 
sbc shows flexibility simplicity final hierarchy better suited domain model design classes built clusters domain entities 
sbc essentially formalisms allow loose class instance relation mainly object knowledge representations 
cases sbc class design reported simple class trees insured intelligible domain models better reuse entire hierarchy 
current concern carefully study deepen alternatives integration approaches analyze potential software engineering fields refactoring 
believe scenarios suggested fit particular situation 
example object set described rich set data types convenient start sbc try gl clustering sbc driven clustering 
conversely case large object set binary attributes may relevant start building lattice sbc procedure prune gl driven clustering 
anderberg 
cluster analysis applications 
academic press 

extracting hierarchical graphs concepts object set comparison methods 
knowledge acquisition workshop iccs 

maximizing object reuse biological metaphor 
theory practice object systems 
birkhoff 
lattice theory volume 
american mathematical society colloquium publ providence revised edition 
bisson 
conceptual clustering order logic representation 
proceedings th european conference artificial intelligence vienna austria pages 
bisson 
define similarity measure object representation systems 
mars editor large knowledge bases pages amsterdam 
ios press 
brito 
analyse de donn ees 

th ese de doctorat universit paris ix dauphine 

order logic formal concept analysis logic programming theory 
computer information science 

daniel 
les termes un mod ele de repr esentation structuration de donn ees 
th ese de doctorat universit montpellier ii 
dony 
automatic class insertion overloading 
proceedings pages 
diday 
treillis de galois es de choquet 
acad 
sci 
paris 
missaoui godin 
knowledge discovery complex objects 
computational intelligence 
ganter wille 
applications combinatorics graph theory biological social sciences volume ima volumes mathematics applications chapter conceptual scaling pages 
springer verlag new york 
ganter wille 
formal concept analysis mathematical foundations 
springer verlag 
girard 
classification sur des donn ees impr 
th ese de doctorat universit de la 
godin 
utilisation de treillis pour acc es aux syst emes information 
phd thesis universit de montr eal 
godin mili 
building maintaining analysis level class hierarchies galois lattices 
proceedings oopsla washington dc usa special issue acm sigplan notices pages 
godin mineau missaoui st 
applying concept formation methods software reuse 
journal knowledge engineering software engineering 
jain dubes 
algorithms clustering data 
prentice hall 
kent 
rough concept analysis synthesis rough sets formal concept analysis 
informaticae 
maher 
similarity measure conceptual graphs 
journal intelligent systems 
michalski 
theory methodology inductive learning 
michalski carbonell mitchell editors machine learning artificial intelligence approach volume pages palo alto ca 
tioga 
mineau stumme wille 
conceptual structures represented conceptual graphs formal concept analysis 
editors conceptual structures standards practices volume lecture notes computer science pages 
springer verlag berlin 

probabilit es analyse des donn ees statistique 

simon napoli 
building viewpoints object representation system knowledge discovery databases 
st international conference information reuse integration iri 
snelting tip 
reengineering class hierarchies concept analysis 
proceedings acm sigplan sigsoft symposium foundations software engineering pages orlando fl 
valtchev 
construction automatique de taxonomies pour aide la repr esentation de par objets 
th ese de doctorat universit joseph fourier grenoble 
wille 
restructuring lattice theory approach hierarchies concepts 
rival editor ordered sets pages dordrecht boston 
reidel 
wilson martinez :10.1.1.48.9623
improved heterogeneous distance functions 
journal artificial intelligence research 

