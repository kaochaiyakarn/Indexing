cartesian closed category approximable concept structures pascal hitzler guo qiang zhang artificial intelligence institute department computer science dresden university technology dresden germany inf tu dresden de www wv inf tu dresden de pascal department electrical engineering computer science case western reserve university cleveland ohio gqz eecs case edu newton case edu 
infinite contexts corresponding lattices theoretical practical interest may offer connections insights mathematical structures normally restricted finite cases 
establish systematic connection formal concept analysis domain theory categorical equivalence enriching link areas outlined 
domain theory subject extensive study theoretical computer science programming languages 
basic idea partial information successive approximation suggests infinite structures computationally feasible items knowledge information finitely representable approximable finitely representable items 
idea motivated new notion zhang shen separate called approximable concept 
approximable concept lattices derived notion exactly complete algebraic ones classical formal concept approximable 
furthermore cases formal contexts finite approximable concepts formal concepts coincide 
categorical viewpoint establishes relation object level part functor main contribution appropriate notion morphisms formal contexts proof resulting category equivalent category complete algebraic lattices scott continuous functions category information systems approximable mappings 
categories cartesian closed obtain cartesian closed category formal contexts respects context structures intrinsic notion approximable concepts time 
rich collection constructions including product function space immediately possible 
contrast related areas chu spaces information flow traditionally focused formal contexts achieves integration concept lattices framework 
author supported fellowship german academic exchange service daad carried author visiting second author department eecs case western reserve university corresponding author 
formal concept fca powerful lattice tool symbolic data analysis 
essence extraction lattice called formal concept lattice binary relation called formal context consisting set objects set attributes incidence relation 
transformation dimensional incidence table lattice structure crucial paradigm shift fca derives power versatility modeling tool 
concept lattices obtained way turn exactly complete lattices particular way structure represent knowledge appealing natural perspective scientific disciplines 
successful applications fca mainly restricted finite contexts finite concept lattices neglecting full power theory 
infinite contexts corresponding lattices theoretical practical interest may offer connections insights mathematical structures normally restricted finite cases 
establish systematic connection formal concept analysis domain theory categorical equivalence enriching link areas outlined 
domain theory subject extensive study theoretical computer science programming languages 
basic idea partial information successive approximation suggests infinite structures computationally feasible items knowledge information finitely representable approximable finitely representable items 
idea motivated new notion called approximable concept reported zhang shen separate 
approximable concept lattices derived new notion exactly complete algebraic ones classical formal concept approximable 
furthermore cases formal contexts finite approximable concepts formal concepts coincide 
categorical viewpoint establishes relation object level part functor main contribution appropriate notion morphisms formal contexts proof categories equivalent categorical sense 
category formal contexts context morphisms cxt introduced time 
category complete algebraic lattices scott continuous functions 
category information systems approximable mappings isys 
implies category formal contexts context morphisms cartesian closed result rich collection constructions including product function space immediately possible 
viewed part unique research program exploiting synergies recurring themes independently developing somewhat related areas functional dependency databases association rules data mining consequence relation logic entailment relation information systems domains intention extension duality formal concept analysis 
note logic domain theory restricted finite sets databases data mining restricted finite cases due pragmatic motivations areas 
classical formal concept analysis size constraint formal contexts infinite 
potential mismatches alignment turn important consequences seen rest 
rest structured follows 
section introduce basic notions formal concept analysis domain theory category theory 
section results approximable concepts provided 
section introduce appropriate notion called context morphism formal contexts show formal contexts context morphisms constitute category cxt 
section recall category isys scott information systems trivial consistency predicate 
category known equivalent category complete algebraic lattices scott continuous functions 
introduce functors equivalence proof carried section 
categorical constructions section complete technical contributions 
section gives concluding remarks 
background review necessary background fca domain theory category theory order fix notations 
formal contexts concepts main formal concept analysis fca 
places follow notation convenient purposes 
definition 
formal context triple po pa po set objects pa set attributes binary satisfaction relation po pa define mappings 
po pa pa po subset pa called intent concept readers traditional fca community helpful note po corresponds pa corresponds standard notation context 
note standard notation ignores types operators 
regard informally infix notation prefix ones 
central result fca proof 
recall complete lattice partial order possibly infinite suprema join infima meet exist 
theorem wille 
set intent concepts formal context ordered subset inclusion complete lattice called concept lattice furthermore complete lattice isomorphic concept lattice formal context isomorphism 
domain theory domain theory introduced scott late denotational semantics programming languages 
provides theoretically elegant practically useful mathematical foundation design definition implementation programming languages systems specification verification programs 
basic idea domain theory partial information successive approximation captured complete partial orders cpos 
functions acting cpos preserve limits directed sets called continuity property 
thinks directed sets approximating schema infinite objects members directed set thought finite approximations 
continuity sure infinite objects approximated finite computations 
important property continuous functions ordered appropriate ways form complete partial order 
continuous function object complete partial order 
seamless uniform treatment higher order object just ordinary object hallmark domain theory 
partial order 
subset directed non empty pair elements upper bound 
complete partial order cpo partial order element directed subset upper bound join complete lattice partial order subset join implies subset meet greatest lower bound 
compact elements cpo inaccessible directed sets compact directed set implies exists cpo algebraic element join directed set compact elements 
set bounded upper bound 
cpo bounded complete bounded set join 
scott domains definition bounded complete algebraic cpos 
category theory category theory provides unified language managing conceptual complexity mathematics 
importance category theory computer science manifested ability guiding research discovery categorically natural non obvious missing entities conceptual picture 
category theoretical terminology follows 
category consists class objects category ii set morphisms iii composition operation iv identity morphism ida associativity axiom identity axioms idb idb satisfied 
usual write morphisms 
functor category category consists mapping objects image object fa ii mapping fa fa image morphism denoted ff ff fg 
approximable concepts defining property formal concept equality computationally feasible finite contexts lends alternative formulation infinite case 
domain theoretic perspective computationally accessible infinite object approximated partial finitary objects 
replace object formal concept finitary objects finitely generated concepts finite obtain definition introduced 
definition 
set fin denote set finite subsets notation fixed definition subset pa called approximable intent concept fin consequence approximable concept limit upper bound directed set finitely generated concepts fin 
notion approximable concept natural logical point view approximable concepts correspond theories 
informally logical theory set formulas closed predefined notion entailment 
basic notion entailment extracted context letting just 
observed researchers investigated systematic level relating information systems 
relation corresponds association rule data mining instance functional dependence databases 
build theories attributes atomic propositional formulas corresponding entailment relation theories coincide approximable concepts 
distinction classical formal concept analysis infinite set allowed entailment approximable concept analysis finite xs allowed 
known logic infinite conjunction antecedent entailment destroys compactness 
readers interested discussions line refer general intuitive examples related theory 
summarize relevant results 
recall complete lattice called algebraic element supremum directed set compact elements 
complete algebraic lattice denote set compact elements theorem zhang shen 
formal context set approximable intent concepts ap set inclusion forms complete algebraic lattice 
conversely complete algebraic lattice ap 
isomorphism case sup approximable concept supremum just mentioned exists approximable concepts case exactly ideals downward closed directed subsets easy see respect finite contexts approximable concepts just standard ones 
infinite case standard concept approximable approximable concepts concepts standard sense 
gives impression approximable concepts general interestingly general terms lattices represent collectively corresponding lattices built approximable concepts restricted kind algebraic complete lattices complete lattices general 
fits domain theoretic paradigm general approximating scheme part computable mathematical structure 
refer example necessarily infinite illustrate differences 
cxt category formal contexts introduce new notion morphism formal contexts 
definition context morphism 
formal contexts po pa qo qa context morphism pq relation fin pa fin qa conditions satisfied fin pa fin qa cm cm imply cm imply give intuition notion morphism 
think sets attributes carrying knowledge information morphisms relate knowledge sense knowledge implies knowledge read known known conditions cm cm easily understood perspective 
condition cm uses idea closure fca formation understood logical consequence means carries knowledge remarked condition cm 
allows left hand side relation weaken right hand side 
show obtain category 
proposition identity context morphism 
notation definition relation defined py iff defines context morphism call identity context morphism 
proof 
conditions cm cm obviously satisfied 
condition cm follows monotonicity fact idempotent 
composition context morphisms composition relations show respect 
theorem 
formal contexts context morphisms constitute category cxt 
proof 
show composition context morphisms context morphism 
pq qr context morphisms 
condition cm easily verified qr pq 
concerning cm assume qr pq qr pq 
exist fin qa pq pq pq zi yi 
zi yi yi conclude cm qr yi cm qr suffices 
cm assume qr pq 
exists fin qa pq qr conclude cm pq qr qr pq definition composition desired 
remaining conditions easily verified associativity morphisms follows fact composition morphisms composition relations 
identity axiom follows cm 
information systems show category cxt equivalent cartesian closed category complete algebraic lattices scott continuous functions 
proof utilizes fact category category scott information systems trivial consistency predicate approximable mappings morphisms 
corresponding definitions follows 
information system trivial consistency predicate pair token set fin fin entailment relation furthermore conditions implies imply satisfied fin 
information state information system set fin 
information states characterized images operator state defined state fin 
set information states information system denoted states 
information systems 
approximable mapping ab relation fin fin conditions satisfied fin fin 
am am imply am imply information systems trivial consistency predicate approximable mappings morphisms constitute cartesian closed category denote isys 
identity morphisms case ay iff information system composition morphisms composition relations 
definition theorem taken 
definition 
formal context po pa define system pa setting iff 
theorem 
formal context po pa information system 
furthermore subset pa approximable concept state derived information system 
mapping turn object part functor 
object part corresponding left adjoint ct defined 
definition 
information system ct formal context states states states stands set compact elements states 
taken 
theorem 
approximable concepts ct coincide directed sets compact elements complete algebraic lattice states 
ideal completion ct isomorphic states isomorphism sup defined theorem 
describe action ct morphisms order obtain functors respective categories 
po pa qo qa formal contexts context morphism 
pa qa 
define pq fin pa fin qa setting iff theorem 
relation approximable mapping functor cxt isys 
proof 
straightforward inspecting defining properties functor 
concerning ct information systems ct states states ct states states corresponding formal contexts defined definition 
furthermore approximable mapping define ct fin states fin states setting iff fin exists fin lemma 
relation context morphism 
proof 
cm note fin 
cm fin exists fin fin exists fin fin 
exist fin fin fin fin 
fin obtain am fin conclude 
cm note fin state assume 
fin exists fin particular fin exists fin theorem 
ct functor isys cxt 
proof 
concerning identity condition ct ida iff fin exists fin words ct ida iff fin state state exists fin state state state 
finitely generated states compact complete algebraic lattice states equivalent statement state state words 
remains show ct bc ab ct bc ct ab 
ct bc ct ab ct bc ct ab means fin exists fin bc fin exists fin ab consequently fin fin bc ab ct bc ab conversely ct bc ab fin exists fin bc ab fin exist fin fin qa ab bc yn 
yi compact state fin state state yi 
state state 
fin obtain am am bc am obtain bc fin obtain ct bc kind argument ab yields ct bc completes proof 
exist fin qa fin ab bc categorical equivalence cartesian closedness section establish fact ct provide equivalences categories 
recall morphism called isomorphism necessarily unique morphism ida idb 
identity functor category maps objects morphisms denoted idc 
natural transformation functors class morphisms fa ga ff gf natural transformation called natural isomorphism morphisms isomorphisms 
functor called equivalence categories iff functor natural isomorphisms idb fg gf ida equivalence categories left adjoint lemma 
exists natural transformation ct class context morphism ct ranges formal contexts context morphism formal contexts ct furthermore natural isomorphism isomorphisms words exists context morphism ct ct 
proof 
po pa formal context 
define setting px fin states fin pa fin 
easily verified context morphism 
ct equivalent saying exists fin states fin fin exists fin implies fin turn equivalent conversely equivalent saying fin state fin states implies fin cm fin exists fin turn equivalent ct noted earlier paragraph 
show isomorphisms context morphism ct defined fin pa fin states 
easily verified context morphism 
iff exists py iff exists fin 
turn equivalent fin py desired 
likewise fin state 
iff exists py iff fin 
sets compact states turn equivalent ct lemma 
exists natural transformation ct class approximable mappings ct ranges information systems trivial consistency predicate approximable mapping information systems ct furthermore natural isomorphism isomorphisms words exists context morphism ct ct 
proof 
information system 
define setting fin fin states fin 
easily verified approximable mapping 
iff exists fin fin equivalent statement fin hand ct exists fin states fin fin exists fin statement implies state 
statement implies fin exists fin am implies 
show isomorphisms approximable mapping ct defined fin states fin fin 
easily verified approximable mapping 
exists fin states fin fin 
turn equivalent ay desired 
likewise exists fin 
turn equivalent saying exists fin fin 
sets compact states equivalent statement ct theorem 
ct equivalences categories categories cxt isys equivalent cxt cartesian closed 
proof 
suffices show natural isomorphisms ct ct provided lemmata 
statement follows known fact isys cartesian closed 
constructions established main result theorem shown cxt cartesian closed 
study corresponding categorical constructions product function space look 
existence constructions justified previous sections carrying actual constructions full detail engineering endeavor 
terminal object unit terminal object cxt context context po pa unique context morphism fin pa 
product formal context po pa po pa elements po respectively pa coincides pa po pa po 
informally obtained adding full row full column 
po pa qo qa formal contexts 
define product setting iff 
obviously formal context 
theorem 
po pa qo qa formal contexts 
exist context morphisms context morphisms exists exactly context morphism proof 
define setting mi nj iff nj mi 
equivalent saying pn iff pa pn denotes projection set pairs set components elements 
context morphism defined analogously 
define iff pa qa corresponding projection second component 
show denoting obtain iff exists fin py case iff exists pa qa pa turn implies fin qa 
trivially exists satisfies condition 
condition reduces required 
conversely assume qa 
implies condition shown equivalent equation shown similarly 
uniqueness assume satisfies obtain iff pa pa qa qa iff pa qa iff pa qa iff pa qa shows function space formal contexts po pa qo qa define function space follows 
consider set fin pa fin qa 
define scott information system collections ui fin fin ui vj iff ui vj easily verified scott information system order show condition assume yi xj yi yi xj yi xj yi yi xj yi xj xj required 
function space defined context ct states states 
theorem 
po pa qo qa formal contexts 
context morphisms exactly approximable concepts proof 
approximable concept states theorem show context morphism 
conditions cm cm easily verified 
condition cm follows monotonicity conversely context morphism theorem show states 
xi fin xi 
show xi obtain xi setting xi xi xi obtain 
cm cm cm concluding remarks proposed notion morphism formal contexts results cartesian closed category 
spirit formal concept analysis domain theory way cross transfer methods results areas 
builds domain theoretic perspective formal concepts results complete algebraic lattices complete lattices corresponding concept hierarchies 
technically contribution uses scott information systems order capture logical content formal contexts 
general connection information systems formal contexts explicitly outlined 
connection breaks classical formal concepts certain discontinuous class infinite contexts 
lead reported notion approximable concept introduced connection information systems formal contexts established full generality corresponding structure complete algebraic lattices 
similar line finite case spelled different guise logic rz due 
led proposal non monotonic reasoning paradigm possibly infinite formal contexts spirit evolving answer set programming paradigm 
worth noting potential connections lamarche plotkin 
reported viewed part unique research program exploiting synergies recurring themes independently developing somewhat related areas databases data mining domain theory logic formal concept analysis 
additional interesting connections profitably explored ontological engineering semantic web 
example formal concept analysis applied formal method automated web menu design top layers concept lattice naturally provide menu hierarchy navigation website 
ontological engineering lattices proposed mathematical structures representing ontology fca provides scientific algorithmic basis understanding lattice structures necessary sufficient expressing ontological hierarchies 
acknowledgment 
author markus kr tzsch aid category theory 
anonymous referees valuable feedback 

ganter wille formal concept analysis mathematical foundations 
springer berlin 

barr autonomous categories linear logic 
mathematical structures computer science 

barwise seligman information flow logic distributed systems 
cambridge university press 

birkhoff lattice theory 
ams colloquium publications vol 


borceux handbook categorical algebra basic category theory 
volume encyclopedia mathematics 
cambridge university press 

eiter leone pfeifer scarcello deductive system nonmonotonic reasoning 
dix furbach nerode eds proceedings th international conference logic programming nonmonotonic reasoning lpnmr 
volume lecture notes artificial intelligence springer berlin 

guarino poli 
eds formal ontology conceptual analysis knowledge representation 
kluwer academic publishers 

hitzler wendt formal concept analysis resolution algebraic domains 
de moor ganter eds conceptual structures contributions iccs shaker verlag aachen 

hitzler default reasoning domains concept hierarchies 
technical report wv knowledge representation reasoning group department computer science dresden university technology 

johnstone stone spaces cambridge university press 

lamarche chu spaces cpos 
theory formal methods computing imperial college press 

larsen winskel information systems solve recursive domain equations 
information computation vol 


maclane categories working mathematician springer verlag 

plotkin notes chu construction recursion manuscript 

pratt chu spaces representational viewpoint 
ann 
pure appl 
logic 

rounds zhang clausal logic logic programming algebraic domains 
information computation 

saraswat category constraint systems cartesian closed 
proceedings seventh annual ieee symposium logic computer science santa cruz california june ieee computer society press 

scott domains denotational semantics 
nielsen schmidt eds automata languages programming th colloquium july aarhus denmark proceedings 
volume lecture notes computer science springer berlin 

shen ye sun zhang concept lattices clustering visualization atex manuscript 

simons niemel soininen extending implementing stable model semantics 
artificial intelligence appear 

sowa knowledge representation logical philosophical computational foundations brooks cole publishing 

note strongly finite sequent structures 
zhang lawson liu luo eds domain theory logic computation semantic structures computation vol 
kluwer academic publishers dordrecht 

vickers topology logic cambridge university press 

wille restructuring lattice theory approach hierarchies concepts 
ivan rival editor ordered sets reidel dordrecht boston 

zhang chu spaces formal concepts domains 
proceedings th conference mathematical foundations programming semantics montreal canada march electronic notes computer science vol 
pages 

zhang shen approximable concepts chu spaces information systems 
de paiva pratt guest editors special issue chu spaces applications theory applications categories accepted 

zhang shen staiger troy sun concept analysis formal method automated web menu design 
submitted 

zhang logic domains birkhauser boston 
