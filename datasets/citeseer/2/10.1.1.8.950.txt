tool verifying timed automata estelle speci cations piotr nski wojciech penczek bo wo andrzej institute computer science pas warsaw poland penczek pl institute informatics warsaw university warsaw poland edu pl faculty mathematics university poland math uni pl institute mathematics computer science pedagogical university cz cz poland fb wsp pl 
presents new tool automated veri cation timed automata protocols written speci cation language estelle 
current version ers automatic translation estelle speci cations timed automata complementary methods reachability analysis rst bounded model checking bmc second veri cation model system 
new tool automated veri cation timed automata protocols written speci cation language estelle 
main novelty tool consists combining translation subset estelle timed automata translation reachability problem timed automata satis ability problem propositional formulas sat problem 
problem eciently solved sat solver exploited tool 
approach mainly applicable nding errors disproving safety properties extend tool module correctness proved 
module original method building pseudo bisimulating model timed automaton preserves reachability properties 
reachability pseudo bisimulating model checked building model 
architecture composed modules see fig 
language translator fragment estelle intermediate language partly supported state committee scienti research ta translator intermediate language timed automata reachability analyser veri es reachability properties timed automata splitter generates pseudo bisimulating model timed automata veri er veri es properties pseudo bisimulating models 
related tools high level modelling languages estelle sdl lotos promela belong widely created describe logical circuits distributed systems communication protocols 
tools design languages produced usually lacked support formal veri cation 
hand long time model checking tools designed testing new scienti ideas paying attention applicability veri cation real world complex concurrent systems 
rst kind model checking tools explicit state space checkers suffering state explosion problem 
model checkers explicit state space representation developed spin kronos uppaal various methods overcoming drawback 
methodology symbolic model checking explicit representation states replaced symbolic usually form decision diagram 
approach exploited packages rabbit smv 
branch tools represented nusmv mathsat bounded model checking 
veri cation problems transformed checking satis ability boolean formulas solved sat prover 
solutions connecting languages tools proposed 
uses intermediate language higher level speci cations translated enabling veri cation tools 
example development environment cadp allows transform lotos system description formats accepted model checkers 
theory theoretical background implementation papers :10.1.1.7.8904
section sketch main ideas 
tool accepts kinds input speci cations written subset estelle intermediate language timed automata 
estelle iso standard speci cation language designed describing communication protocols distributed systems 
intermediate language il allows describing system set processes exchange information message passing bounded unbounded channels memory sharing global variables 
process described terms states transitions similarly estelle 
translation subset estelle intermediate language quite straightforward execution models syntax formalisms similar estelle language constructions require special careful treatment 
details translation 
system described intermediate language translated set timed automata represents component system global product timed automaton description see 
automata obtained passed components aimed performing reachability model checking 
property reachability model checking consists exploration state space system testing exists reachable state holds 
tool ers complementary methods reachability analysis rst bounded model checking bmc second veri cation model system 
bmc method combines know forward reachability analysis bounded model checking method timed automata 
forward reachability algorithm searches state space moving state successors breadth rst mode bmc performs veri cation part model exploiting sat solver 
detailed description method 
case state satisfying tested property reachable sat method ine ective 
parallel bmc reachability analysis ers veri cation method consisting generating nite models timed automata pseudo bisimulating ones partitioning algorithm performing reachability veri cation 
detailed description algorithm 
tool overview stated allows input estelle 
system veri ed intermediate language form timed automata kronos format 
short description case estelle speci cation input 
language translator estelle specification splitter verifier ta translator fly global ta local ta timed automata external il specification external property answer answer fig 

modules estelle speci cation automatically translated description intermediate language language translator 
obtained speci cation usually requires additional manual modi cations aimed adding properties states bounds sizes bu ers features handled estelle standard 
enriched speci cation passed ta translator generates set timed automata corresponding components system global timed automaton 
automata returned kronos format 
passed component aimed reachability model checking splitter 
connection modules fig 

case studies provide experimental results known examples alternating bit protocol fisher mutual exclusion protocol railroad crossing system rcs 
input rst example estelle speci cation 
properties tested sender receives bit set receiver bit set false sender receives bit set receiver managed change bit receiver bit set true 
start enter setx setx idle trying waiting critical start enter setx setx idle trying waiting critical start enter setx setx start setx enter setx setx setx setx setx process process variable fig 

fischer mutual exclusion protocol processes case mutual exclusion protocol input intermediate language 
timed automata returned translation speci cation fig 

tested various values parameters 
mutual exclusion property ensured 
case system rcs system automata train gate controller automaton property see fig 
input 
property automaton describes gate moved back seconds satis ed 
experimental results fig 

examples reachability analyser show state satisfying tested property reachable splitter module applied generate model system show state satisfying property approach exit lower raise lower raise approach exit train gate controller err specification fig 

automata railroad crossing system speci cation alternating bit mutex rcs arg arg arg min mb min mb np 
min mb min mb min mb min mb states edges np 
states edges states edges splitter fig 

experimental results reached 
provide times amounts memory needed reachability analyser prove reachability state sizes pseudo bisimulating models generated splitter 
mutual exclusion protocol np denotes number processes tested 
examples considered mutual exclusion protocol widely covered literature 
unfortunately able compare results ones sat model checkers due lack experiments literature property tested 
protocol property obtained better results ones processes 
allows expect better results cases 
hand pseudo bisimulating models usually smaller forward reachability bisimulating models generated kronos 
web page tool available www pl penczek 

alur dill 
automata modelling real time systems 
proc 
international colloquium automata languages programming icalp volume lncs pages 
springer verlag 

cimatti sebastiani 
bounded model checking timed systems 
proc 
nd int 
conf 
formal techniques networked distributed systems forte volume lncs pages 
springer verlag 

bengtsson larsen larsson pettersson yi weise 
new generation uppaal 
proc 
int 
workshop software tools technology transfer 

beyer 
rabbit veri cation real time systems 
proc 
workshop real time tools rt tools pages 


fernandez graf sifakis 
intermediate representation sdl applications 
proc 
sdl forum pages 

cimatti clarke giunchiglia giunchiglia pistore roveri sebastiani 
nusmv open source tool symbolic model checking 
proc 
cav volume lncs pages 
springer verlag 


speci cation languages timed automata 
proc 
int 
workshop concurrency speci cation programming cs volume informatik berichte pages 
humboldt university 

lang 
overview cadp 
technical report rt inria rh alpes avenue de europe martin december 

holzmann 
model checker spin 
ieee trans 
software eng 

iso information processing systems open system interconnection 
lotos formal description technique temporal ordering observational behaviour 

iso iec estelle formal description technique extended state transition model 
international standards organization 

languages telecommunication applications speci cation description language 

mcmillan 
smv system 
technical report cmu cs university february 

moskewicz madigan zhao zhang malik 
cha engineering ecient sat solver 
proc 
th design automation conference dac pages june 

penczek wo 
sat bounded model checking universal fragment tctl 
technical report ics pas warsaw august 

penczek wo 
bounded model checking universal fragment tctl 
proc 
th int 
symp 
formal techniques real time fault tolerant systems volume lncs pages 
springer verlag 

penczek 
reachability analysis timed automata partitioning 
technical report ics pas warsaw 
appear 

sebastiani 
integrating sat solvers math reasoners foundations basic algorithms 
technical report itc irst sommarive povo trento italy november 

wo penczek 
checking reachability properties timed automata sat 
technical report ics pas warsaw october 

wo penczek 
reachability timed systems sat solvers 
proc 
int 
workshop concurrency speci cation programming cs volume informatik berichte pages 
humboldt university 

yovine 
kronos veri cation tool real time systems 
springer international journal software tools technology transfer 

