propagation completeness reactive constraints michael maher school computing information technology griffith university brisbane australia department mathematical computing sciences university chicago cs luc edu 
develop framework addressing correctness timeliness propagation issues reactive constraints global constraints user defined constraints implemented constraint propagation 
notion propagation completeness introduced capture timeliness constraint propagation 
generalized form arc consistency formulated unifies local consistency conditions literature 
show propagation complete implementations reactive constraints achieve arc consistency propagation 
framework state prove impossibility result chr implement common relation desirable degree timely constraint propagation 
key design point constraint programming languages clean interface constraint solver function programming language features control flow data structures enables semantics languages defined independent parts essentially constraint solver parameter language :10.1.1.25.8566
need system developers users define implement new constraints 
generally new constraints built constraint solver interface appearing constraints programming language 
global constraints chip demons eclipse chip hard constraints clp 
user defined constraints definable indexicals clp fd constraint handling rules chr general programming features akl oz 
constraints constraint programming languages relations built behavior provided constraint solver 
discussing implementation new constraints terms constraints underlying constraint domain ambiguity word constraint 
reason refer constraint wish implement property 
definition 
property relation set values constraint domain 
property may implemented different ways different languages 
propose details characterize implementation purely terms effect constraint store 
assume implementations simply transducers propagators constraints may react strengthening constraint store adding constraints 
preserves important property monotonicity constraint solver 
resulting behavior called constraint propagation 
call implementation reactive constraint 
definition 
reactive constraint object reacts environment constraints adding constraints environment 
implementations global user defined constraints am aware satisfy definition conceivable implementation 
general want consider non determinate reactive constraints 
purposes sufficient consider determinate reactive constraints 
consequently sufficient represent reactive constraint function mapping initial constraint store augmented constraint store 
proposes framework analyze issues correctness timely propagation constraints reactive constraints global constraints user defined 
framework follows philosophy clp scheme making constraint domain parameter framework 
applies widely simply finite domains 
framework adapts ideas theory concurrent constraint programming ccp 
particular resting point quiescence semantics determinate ccp programs basis treatment reactive constraints 
key element framework declarative specification timely propagation constraints reactive constraint 
refined specialized versions concept 
provide way document degree timely propagation achieved implementation revealing implementation 
basis comparing different implementations property providing standards amount propagation achieved 
furthermore standards document degree programmer reason declaratively execution reactive constraints 
example goal jx gamma yj jx gamma yj implemented reactive constraint able conclude execution produce jcj declarative meaning constraints 
possible certain performance guarantees provided reactive constraint 
suitable standard case eqn propagation completeness see section 
section briefly introduce constraints chr elements theory ccp provide technical background remainder 
section formulates soundness weak completeness reactive constraints implementing properties 
defines refines notion propagation completeness specifies timely propagation constraints 
timely refers question reactive constraint reacts new state constraint store theory reaction possible delays reaction constraint store stronger 
key concept remainder 
natural expect close relationship local consistency conditions constraint propagation 
section formulate generalized form arc consistency appropriate framework parameterized underlying constraint domain subclass constraints 
unifies wide range consistency conditions literature including interval consistency fd solvers hull consistency nonlinear real constraints rule consistency 
consistency conditions variable oriented set values variable take 
generalized arcconsistency broadens notion consistency variety new consistency conditions 
show timely constraint propagation achieves generalized arc consistency propagation 
concurrent languages history implementing reactive constraints 
naish coroutining logic language saraswat concurrent logic language implement value propagation 
concurrent constraint language motivated idea programming reactive constraints phrased terms 
akl oz developed complete programming paradigm constraint handling rules chr designed specifically user definition reactive constraints 
languages appear natural choices defining reactive constraints section perform case study chr implementation simple useful property argument minimum relation 
surprisingly show chr implementation relation able achieve desirable level timely propagation constraints important constraint domains 
demonstrates limitation chr appears inherent difficulty achieving timely propagation constraints minimum language ccp tradition 
constraints concurrent constraint programming class constraints constraint programming language intended meaning defined constraint domain pair 
sigma signature set symbols meanings predefined language assume includes equality symbol 
sigma structure interpreted identity class order sigma formulas closed variable renaming conjunction existential quantification 
formulas called constraints 
constraints composed constraints conjunction quantification called primitive constraints 
assume contains constraint false true 
general sigma sorted simplicity consider constraint domains single sort 
focus constraints occurring part conjunction constraints 
consider complete constraint solvers 
alternative presentation meaning constraints constraint system widely theory concurrent constraint programming 
formalization purposes 
obscures declarative meaning constraints 
meaning center approach reactive constraints constraint systems suitable 
particular unable express interaction properties constraints express variable determined constraint 
constraint trivial equivalent true 
gamma oe denotes existential quantification variables oe oe denotes existential quantification variables oe 
constraint determines variable occurs free exactly value satisfiable 
case determines refer value atom form terms sigma languages investigate concurrent constraint programming ccp languages 
constraint handling rules chr extends usual ccp languages allowing atoms head rules 
chr rules form 
atoms head rule constraint conjunction atoms constraints 
program executes rewriting goal hs ci conjunction atoms constraint store rules program 
rule fire rewrite goal hs ci contains atoms case atoms replaced goal ccp rules considered special case chr rules atom rule head 
chr designed defining reactive constraints intended extend conventional constraint logic programming systems eclipse sicstus prolog constraints provided underlying constraint solver 
simplify exposition line assumption determinate reactive constraints address confluent ccp chr programs 
possible add extra structure constraint systems reflect needed properties 
ultimately produce general theory expense difficult exposition 
fact kinds rules chr behavior simulated kind 
programs state modulo irrelevant internal details 
formally concurrency setting classes programs restricted expressiveness clear restriction ability express reactive constraints satisfying completeness properties 
result simplification elegant closure semantics ccp programs extension chr programs 
semantics conjunction atoms function maps initial constraint store constraint store results execution program affect variables atoms 
confluence function welldefined denote refers atom associated program 
semantics compositional confluent ccp confluent chr 
clearly semantics close behavior reactive constraints languages successfully define reactive constraints 
theory ccp process quiescent reaches state computation impose constraints original variables 
quiescence includes termination failure suspension active execution affects process internal state 
process reaches quiescence affect environment environment changes 
definition quiescence reactive constraints notion refined permit execution add constraints may modify environment affect constraints class definition 
execution goal free variables environment quiescent wrt class constraints constraints goal imposes constraint gamma gamma 
execution reaches quiescence wrt may contribute constraint store contribute constraints viewed adding non trivial constraint consequence definition quiescent environment wrt exactly gamma gamma gamma constraint propagation implemented reactive constraint consider simply behavior constraint propagator 
propagation behavior reactive constraint function pbr maps constraint stores possibly infinite constraint stores begins executing environment execution environment pbr 
clear context omit subscript 
simplest case propagation behavior primitive constraint clp system defined pb admit infinite constraint store outcome propagation behavior model iterative approximation methods propagation methods may terminate example interval propagation non linear functions infinite precision arithmetic 
infinite conjunction constraints denote finite subset clarify definitions examine constraint propagation context known constraint solvers 
clp 
constraint solver complete equations inequalities linear terms real numbers delays handling arithmetic constraints 
finite domains fd solver complete constraints integers contain variable bounds bindings employs interval reasoning incompletely handle constraints 
solver chip oz ilog solver 
example 
propagation behavior property implemented clp 
defined pb determined pb determined pb 
recall value determined 
example 
property implemented fd systems propagation behavior constraint store smallest ranges implies pb cx gamma gamma note resulting constraint equivalent added bounds stronger ranges equivalent false added lower bound greater corresponding upper bound vice versa 
examples involve relatively simple reactive constraints 
consequently properties implement self evident propagation behavior easy grasp formalization 
propagation behavior global constraints complex 
define terms operational behavior pbr constraint store restricted vars resulting execution environment 
confluent chr ccp programs specify reactive constraints similarly define propagation behavior directly operational semantics program pbr 
property defined reactive constraints specified separately model declarative semantics 
unsatisfiability constraint store central constraint programming distinguish finite behaviors reactive constraints 
reactive constraint finitely fails context pbr false 
reactive constraint succeeds context pbr false pbr finite 
consider notions correctness reactive constraints 
definition 
reactive constraint propagation behavior pbr property 
sound implementation constraint store constraint pbr words sound inference constraint solver context valid intended meaning straightforward see implementations clp 
fd languages sound 
appropriate notion completeness easy find 
discuss definitions 
weak form completeness require values variables propagation behavior produces true false accordance need consider values expressed constraint language 
definition 
free variables weakly complete implementation constraint store determines succeeds context finitely fails context weak completeness address question timely propagation constraints propagation constraints soon logically implied conjunction property constraint store 
addresses correctness implementation test 
definition addresses timeliness 
definition 
propagation complete implementation constraint store constraint pbr constraint false definitions cover generation unsatisfiable constraint store inconsistency definition completeness proposed similar definition case false addresses timeliness detecting unsatisfiability constraint propagation 
call failure completeness 
detecting unsatisfiability central control flow constraint programming propagation constraints important additional ways example limit branching factor searches occur constraint programming trigger user defined constraints 
furthermore failure completeness support compositional reasoning reactive constraints 
fails failure completeness give information behavior able infer propagation behavior conjunction reactive constraints constraint store knowledge propagation behavior individual reactive constraints constraint store 
propagation completeness provide compositional reasoning example 
consider propagation behavior property implemented clp 
values determined propagation completeness compositional sense propagation completeness necessarily conclude execution result constraint store implies example fd implementation gamma executed constraint store gamma gamma generate gamma consequence properties 
clauses definition pb applies pb say case symmetrical 
clp 
solver simplify constraint propagation behavior constraint clp 
weakly complete 
consider constraint store fy zg 
implementation property clp 
propagation complete 
finite domain constraint solvers provide interesting demonstration effect language constraints propagation completeness 
example 
consider fd implementation property difficult see implementation weakly complete values added constraints true values iff true values 
takes little recognize fd implementation propagation complete 
hand suppose language constraints fd solvers extended contain equations variables suppose constraint store yx 
pc fd solvers produce ensure interval 
solvers propagation complete wrt larger language constraints 
implementation implements equation applying corresponding substitution properties propagation complete wrt larger language 
constraint store arise considering smaller language constraints considered reactive constraint 
common reactive constraint propagation complete examples demonstrate introduce class weaker completeness properties parameterized classes constraints 
definition 
propagation complete implementation wrt class constraints constraint store constraint pbr say propagation complete 
propagation complete implementation respect classes constraints pc implies pbr say propagation complete 
definitions provide coarse gauge measure degree timeliness constraint propagation implementation 
compositionality properties limited realistic goals practical implementations 
consider classes constraints classes identified primitive constraints assume closed conjunction existential quantification 
write notice fd solvers complete constraint domain 
denote class constraints containing closed conjunction existential quantification 
bind equations variable variable free term bindings bindings equations variables eqn equations terms bound bindings inequalities variable variable free term bound inequalities variables constraints form finite set values fint constraints form finite interval integers classes constraints interest depend constraint domain applications reactive constraints 
arithmetic constraints classes constraints consider example classes 
discussed previous example fd implementations fint propagation complete fint propagation complete exception 
note elements described ground terms completeness implies weak completeness 
unpublished wallace employed notion approximation constraint system induced notion approximate constraint propagation way control non terminating propagation 
corresponds roughly converse propagation completeness propagated constraints constraints note full propagation completeness completely satisfactory considers reactive constraint context reactive constraints 
ideally powerful property appears property rarely achieved constraint propagation 
arc consistency formulate extension idea arc consistency accommodate underlying constraint domain parameterize notion subclass constraints 
idea property arc consistent constraint store strong add extra information expressed constraint 
definition 
property constraint domain property implemented 
constraint class constraints 
say arc consistent environment wrt entire language constraints simply say arc consistent conjunction properties arc consistent environment property arc consistent environment 
definition implicitly parameterized constraint domain 
constraint domain affect kind environments considered definition kinds classes permitted 
cases take introduce parameter order state result 
conventional setting csps arc consistency developed constraint domain set values constraints membership variable finite set values constraints 
setting definition reduces conventional arc consistency 
domain integers constraints membership variable finite interval values fint constraints definition reduces interval consistency provided fd solvers 
similarly take constraint domain real numbers constraints inequalities variable floating point value definition reduces hull consistency solving nonlinear real constraints 
constraints finite disjunctions floating point bounded intervals form consistency echidna obtained 
contrast box consistency directly form arcconsistency hull consistency applied approximation admit bindings constraints definition gives rule consistency 
forms consistency understood approximation arc consistency considered 
formulation shows approximations box consistency purely due selection underlying constraint domain 
formulation approximations approximation spaces represented language unary constraints corresponding selected subsets approximation space 
may consider classes constraints 
example constraints linear inequalities real numbers arc consistent exactly describes convex hull similarly constraints linear equations real numbers arc consistent exactly describes affine hull notice may possible find finite arc consistent environment property 
example circle arc consistent environment language linear inequalities contain inequality tangent circle 
valuable property generalized form arc consistency primitive constraints involved required unary 
forms consistency inspired original arc consistency formulated restricting range values variable may take unary constraints 
comparison definition permits formulation consistency example constraints unit variable inequality constraints 
natural look relationship consistency conditions constraint propagation 
theorem demonstrates relationship arc consistency 
theorem 
reactive constraints implementing properties satisfiable constraint suppose sound propagation complete 
quiescent wrt environment delta delta delta arc consistent quiescent wrt environment result exhibits close relationship arc consistency generalized propagation completeness 
says arc consistency achieved constraint propagation provided implementation propagation complete 
example implementation achieves arcconsistency wrt fint 
cases strengthen second part result 
quiescence reactive constraints compositional quiescent iff individual quiescent 
property holds ccp programs global constraints true chr programs 
corollary 
conditions previous theorem extra assumption quiescence reactive constraints compositional arc consistent quiescent wrt environment algorithms maintaining arc consistency generalized form viewed performing propagation complete constraint propagation 
notice arc consistent state wrt computed propagation complete implementation necessarily weakest arc consistent state consistent original environment 
implementation infer constraints outside tighter arc consistent state computed 
example suppose take bind 
property arc consistent environment true wrt propagation complete implementation propagate constraint leaves environment restrictive state arc consistent wrt 
constraint propagation limited generating constraints computation weakest arc consistent state 
minimum consider problem defining reactive constraint expressing minimum values implementing property min holds iff minimum ordering 
assume treatments finding weakest arc consistent state implicitly part correctness criterion algorithms maintaining arc consistency 
valid contains constraints constraint domain contains linear ordering expressed define property follows min easily list sound inferences property min min min inference straightforward implement second consequence assuming constraint solver incorporates transitivity reasoning certainly true complete solver 
third difficult 
necessary achieve appropriate propagation goals min 
example define min 
min min compute minimum values goal min return form third inference rule available 
program propagation complete implementation property 
min 
min 
min 
min 
min 
true 
min 
true 
min 
min 
unfortunately chr ccp program capable defining propagation complete implementation min clp show 
result proved induction rewrite rules operational semantics chr ccp 
shows execution process free variables generate constraints variables 
consequently relation variable execution process expressed conjunction constraints generated process original constraint store proposition 
reactive constraint defined chr ccp 
goal reduced answer constraint gamma 
state theorem need definition 
describes situation strength constraint lies formulas constraint equivalent weaker formula 
definition 
constraint domain say constraint formulas note formulas need constraints need 
state limitation ccp chr languages defining reactive constraints specifically min 
certain constraint domains possible implement particular valid inference concerning min 
theorem 
constraint domain containing constraint sound implementation min defined ccp chr express inference min arbitrary variable constraint domain purely conjunctive linear arithmetic constraints disjunctive constraints real rational number constraint sound propagation complete implementation min ccp chr constraint domain clp example sound ccp chr implementation min achieves arc consistency wrt 
similarly simpler constraint domains provide total ordering constraints fewer arithmetic expressions support complete implementation min chr 
hand constraint domains non linear constraints may constraint example constraint gamma gamma 
consequently propagation complete implementation min chr domain 
comment applies generally constraint domain capable expressing single active constraint constraint added immediately constraint store implementation min representing key inference 
ways partially overcoming limitation chr space discuss 
introduced framework expressing requirements reactive constraints timely propagation defined related generalized notion arcconsistency 
framework showed impossibility implementing desirable inference rule large class languages 
statements degree propagation completeness implementation provide way implementers unambiguous claims timeliness propagation may help users choose different implementations 
statements provide clearly defined standard perform complexity analyses hope prove hardness optimality impossibility results 
issues left unresolved concerning approach reactive constraints 
indeterminate non confluent implementations expressive terms timeliness constraint propagation appear remains proved 
forms consistency path consistency generalized fruitfully address non compositional elements chr 
level propagation completeness existing implementations global constraints achieve 
workshops seminars benefited comments people 
especially want fruhwirth wallace anonymous referees comments 
topic initiated author employed ibm watson research center 
research supported australian research council 

operational semantics confluence constraint propagation rules proc 
int 
conf 
principles practice constraint programming lncs 

apt constraint programming viewed rule programming theory practice logic programming 

introducing global constraints chip mathematical computer modelling 

benhamou 
puget revising hull box consistency international conference logic programming 

benhamou mcallester van hentenryck clp intervals revisited international symposium logic programming 

benhamou older applying interval arithmetic real integer boolean constraints 
journal logic programming 

de boer marchiori palamidessi proving concurrent constraint programs correct acm transactions programming languages systems 

de boer palamidessi concurrent logic programming concurrent constraint programming advances logic programming theory oxford university press 

carlson carlsson janson implementation akl fd international symposium logic programming 

diaz compiling constraints clp fd logic programming 

colmerauer solving multiplication constraint approximation spaces international conference logic programming 

dincbas van hentenryck simonis constraint logic programming language chip proceedings nd 
international conference fifth generation computer systems 

fruhwirth theory practice constraint handling rules journal logic programming 

fruhwirth personal communication 

harvey stuckey constraint representation propagation proc 
conf 
principles practice constraint programming 

jaffar 
lassez constraint logic programming proc 
th acm symposium principles programming languages 

jaffar maher constraint logic programming survey journal logic programming 

jaffar maher marriott stuckey semantics constraint logic programs journal logic programming 
jaffar maher stuckey yap finite domains proc 
principles practice constraint programming lncs 

jaffar michaylov stuckey yap clp 
language system acm transactions programming languages 

jaffar michaylov yap methodology managing hard constraints clp systems proc 
acm sigplan conference programming language design implementation 

mackworth consistency networks relations artificial intelligence 

maher logic semantics class committed choice programs proc 
th international conference logic programming 

marriott stuckey programming constraints mit press 

naish negation control prolog lncs springer 

saraswat cp general purpose constraint language proc 
aaai 

saraswat concurrent constraint programming mit press 

saraswat rinard concurrent constraint programming proc 
th acm symp 
principles programming languages 

saraswat rinard panangaden semantic foundation concurrent constraint programming proc 
th acm symp 
principles programming languages 

hierarchical arc consistency applied numeric processing constraint logic programming comp 
intelligence 

van hentenryck constraint satisfaction logic programming mit press 

van roy brand haridi schulte logic programming context multiparadigm programming oz experience theory practice logic programming appear 

wallace separating logic control constraint programming 

wurtz verification concurrent constraint programs field finite domain reasoning proc 
workshop verification analysis logic languages 
