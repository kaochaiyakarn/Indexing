comparison recommendation lorraine mc barry smyth smart media institute university college dublin dublin ireland 
ucd south county business park dublin ireland 
smyth 
recommender systems combine user pro ling ltering techniques provide pro active personal information retrieval systems gaining popularity way overcoming ubiquitous information overload problem 
recommender systems operate interactive systems seek feedback user part recommendation process revise user query 
examine di erent forms feedback past focus low cost preference feedback model date utilised 
particular describe evaluate novel comparison recommendation framework designed utilise preference feedback 
speci cally results highlight bene ts number new query revision strategies evidence suggest popular strategy may awed 
recommender systems represent integration technologies information ltering predominantly collaborative case user pro ling machine learning adaptive user interfaces ort better help users nd information looking example 
instance typical recommender system pc domain interacts user retrieving pc descriptions product catalogue line target pc description query speci ed user 
traditionally similarity retrieval strategy adopted sophisticated approaches proposed see example 
ideally accuracy recommendations produced improve user interaction system time user nds exact pc looking 
key feature separates recommender systems conventional information retrieval technologies search engines conversational character 
search engines typically focus single shot retrieval user provides query search engine responds list results 
contrast support informatics research initiative enterprise ireland gratefully acknowledged recommender systems elicit feedback user recommendation process presentation initial partial recommendations 
feedback elaborate user query guide recommendation cycle 
researchers explored di erent ways capturing feedback users asking users specify individual feature values search criteria navigation asking inviting rate grade recommendations relevant relevant navigation proposing 
feedback strategies di er terms level ort required user 
example requesting user provide feature value requires high degree user ort user consider feature value provide understanding recommendation space value space feature question 
contrast asking user rate grade recommendation demands signi cantly ort 
interested di erent ways feedback captured user interaction recommender system part recommendation process 
describe evaluate novel comparison recommendation framework uses preference feedback 
speci cally highlight bene ts number new query revision strategies propose popular strategy may awed 
background feedback strategies classi ed terms type feedback aim capture feature level vs case level feedback terms cost user low cost vs high cost 
di erent feedback strategies incorporated recommender systems lesser greater extent see 
value elicitation tweaking feature level techniques sense user asked provide information features recommended case provide speci value speci feature 
show pcs type laptop requests simply express directional preference particular feature value 
show pcs cheaper current recommendation pcs increased memory 
contrast ratings preference feedback methods operate case level 
user asked rate grade recommended cases suitability user simply asked select current set recommendations closest requirements farthest requirements 
value elicitation probably direct approach eliciting user feedback recommendation process simply ask user provide speci feature value see example 
example pc domain user may requested user effort cost value elicitation tweaking ratings preference low cost high cost entre ptv google navigation asking navigation amazon com fab user effort cost value elicitation tweaking ratings preference low cost high cost entre ptv google navigation asking navigation amazon com fab fig 

comparison feedback strategies recommender systems 
indicate price pc looking preferred manufacturer looking laptop desktop model 
form feedback provides recommender signi cant degree new information new feature value allows recommender eliminate potentially large number irrelevant cases share feature value feature value similar example recognising user interested buying laptop eliminates desktop models consideration 
value technique brings balanced cost 
research indicates users asked direct specialised questions recommendation process 
furthermore user understanding recommendation domain may position answer direct feature question reliably 
example ordinary users able indicate memory preferences buying new pc 
forcing users answer speci questions early recommendation process may result unreliable answers ultimately eliminate relevant cases recommendation 
key challenge approach recognising feature queried features di erent discriminating power di erent times recommendation process 
problems notwithstanding direct feature elicitation probably common type feedback recommender systems today variety strategies forwarded control elicitation order 
example cunningham smyth describe information theoretic approach identify discriminating feature 
show incremental cbr approach performs traditional pure inductive learning approach number problem domains 
similarly calculates information gain asking possible questions algorithm similar id features promise maximal information gain 
tweaking find group recommender systems interesting main reasons 
firstly advance navigation browsing navigation proposing mode operation user group cases recommendation cycle cycle feedback provided 
secondly importantly user asked express feedback form tweak set 
short user implicitly selects cases expresses directional preferences certain features 
instance entree restaurant recommender see user single best case recommendation cycle introduce features price nd cheaper expensive restaurants style nd casual casual restaurant example 
sense tweaking combination navigation asking navigation proposing sequences cases proposed user asked speci information particular features 
cost user lower value elicitation user expected provide speci feature values may little knowledge 
strategy combines elements preference feedback see user explicitly identify preferred case applied 
ratings ratings feedback popular form feedback recommender systems 
basic idea ask user rate individual recommendation proposals user providing case level feedback 
example ptv recommender system operating tv listings domain compiles personalized tv guides users learned tv preferences involved recommending tv programmes users 
ptv encourages users rate programme recommendations point scale strong negative strong positive means ne tuning subsequent recommendation cycles 
generally speaking ratings feedback relatively low cost form feedback user need express qualitative quantitative indication interest level individual case 
having said level ort naturally increases user needs rate recommended items systems ptv user chose rate items desires 
preference lowest cost form feedback user express simple positive negative preference recommended cases 
strangely strategy relatively utilized recommender systems date 
information content associated simple form feedback assumed low expected provide little advantage subsequent recommendation cycles 
popular form feedback search engines 
google example allows users request pages similar speci search result essence user expressing preference speci page requesting recommendation cycle 
similarly amazon com provides feature search results equivalent functionality 
mentioned form feedback viewed subset tweaking sense user just asked express individual positive negative preference needing indicate speci feature 
similarly lower cost ratings feedback user expected distinguish di erent levels preference 
form feedback core focus current 
interested primarily reasons 
low cost particularly suited recommender systems 
secondly propose assumption provides recommender little information add value current recommender systems awed 
section introduce comparison recommendation approach designed better exploit preference feedback transforming user preference explicit query adaptations 
comparison recommendation comparison recommendation navigation proposing type recommendation process 
basic algorithm fully described consists main steps new items recommended user current query user reviews recommendations selects preference case positive negative feedback information di erence selected item remaining alternatives revise query cycle 
recommendation process terminates user suitable item give 
item recommendation traditional recommender systems goal recommendation step select set items closely match current user query 
key features comparison technique ability query elaborations basis di erences recommended items 
important ensure possible recommendations user diverse addition similar target query 
comparison recommendation technique traditional similarity recommendation process items selected similar current query diversity preserving technique 
reasons clarity assume standard similarity recommendation process 

define comparison recommend cb 


cb 
cb 



define cb 

cb 



define cb 


cb cb 
return 
define 



update 
endfor 


define comparison recommend cb 


cb 
cb 



define cb 

cb 



define cb 


cb cb 
return 
define 



update 
endfor 

fig 

outline comparison recommendation algorithm 
user feedback review process conceptually simple 
user asked select case recommended items best matches needs user form positive feedback 
alternatively user provide negative feedback form case best corresponds items user interested 
power comparison recommendation ability predict feedback elaborate current query order better re ect user implicit needs 
sake clarity focus positive feedback 
query revision key success comparison recommendation way current query modi ed re ect user preference feedback 
step aim update current query learned user feedback 
case positive feedback user selects preferred case ultimate objective update query features features preferred case best re ect user implicit preferences 
paragraphs outline update strategies interest associated update rules 
mlt simplest form query revision take feature preferred case new query feature see mlt rule 
corresponds strategy search engines 
advantage partial user query instantly extended include additional features preferred case hope focusing ectively right set cases recommendation cycle 
potential danger feature preferred case may actively preferred user instance user may preferred pc low price low processor speed 
expect mlt update strategy su er form tting user feedback result may nd user guided irrelevant parts recommendation space early preferences 
result long recommendation cycles need user examine cases necessary 
strategy useful benchmark judge principled alternatives 
mlt rule update partial consider scenario shown 
preferred case laptop inch display 
mlt strategy means user interested pcs inch displays feature value added query 
situation notice user rejected case inch display suggesting display size reason user preference 
strategy captures idea transferring feature value preference case rejected cases feature value 
example transfer preference new query rejected cases 
similarly query updated preference gb hard disk see rule 
rule update wmlt weighted reliable decision include compaq new query 
preference inch displays ignored completely simply exists rejected cases 
user preference compaq relate preference 
wmlt strategy attempts weight new query features degree con dence attribute preferences user 
basic idea alternatives user con dent learning preference 
example con dent compaq preference wide range alternatives manufacturer feature 
compare processor type feature alternatives celeron pentium sure user genuinely interested simply interested 
features manufacturer dell sony compaq fujitsu memory monitor type laptop laptop laptop laptop processor celeron pentium pentium celeron speed disk price features manufacturer dell sony compaq fujitsu memory monitor type laptop laptop laptop laptop processor celeron pentium pentium celeron speed disk price fig 

typical recommendation scenario user number alternatives pc descriptions asked choose 
wmlt strategy transfers preferred features new query weights formula shown equation gives preference diverse features recommended set see wmlt rule 
example preference gets weighting rejected cases unique manufacturer values di erent compaq 
contrast preference gets weight rejected cases account alternative 
wmlt rule update weight weight alternatives jrj llt addition learning features user prefer may possible learn features user tends dislike 
llt strategy attempts treating query set negative preferences ordering cases cycles dissimilarity negative query 
llt strategy simple rejected cases feature value combination di erent preferred case combination added negative query see llt rule 
example rejected cases gb disks preferred case gb disk 
llt strategy assumes user looking gb disk updates negative query accordingly 
llt rule update neg mlt llt nal strategy combines mlt llt strategies learn positive negative preferences single cycle mlt llt rules 
practical terms means query components positive part negative part 
compute degree relevance query case simply compute similarity positive query component case subtract similarity negative query component case see mlt llt rule 
approaches reasons simplicity clarity chosen 
mlt llt rule update pos neg experimental evaluation far novel recommendation framework called recommendation attempts optimise preference feedback means revising user query navigation proposing recommendation approach 
furthermore variety possible strategies revising query 
section evaluate recommendation technique individual revision strategies respect benchmark recommendation system 
setup experiments carried case base pc domain 
case base contains unique cases describing unique pc terms features manufacturer pc type processor type processor speed memory disk size display size price 
cases available download url www cs ucd students zip 
total evaluate di erent versions recommendation technique employing di erent revision strategy labeled strategy mlt wmlt llt mlt llt 
addition chose implement simple similarity recommender sim benchmark judge performance comparison techniques 
experiments leave evaluation methodology varying values number cases returned recommendation cycle number initial features query 
brief case case base temporarily removed ways 
case serves basis set random queries varying sizes ranging features query 
second select case case base similar current target case 
best cases serve recommendation targets experiments 
words original target case taken ideal query user generated query serves initial query user provides recommender best case best available case user ideal query 
total set separate queries generated reported results averaged appropriate 
recommendation eciency ultimately key success criterion navigation proposing recommender number individual cases user expected examine settle best case 
metric direct analogy case similarity benchmark 
sim mlt wmlt mlt llt llt cases examined benefit relative sim mlt wmlt mlt llt llt wins sim number cases mlt wmlt mlt llt llt sim number cases mlt wmlt mlt llt llt sim wins sim mlt wmlt mlt llt llt wins sim mlt wmlt mlt llt llt fig 

summary evaluation results looking recommendation eciency winners losers 
method experiment run leave trials combination total separate trials queries note average number cases user view best case located 
case similarity benchmark average position best case similarity ordered list produced initial queries 
case comparison recommenders total number cases recommendation cycle prior nal cycle plus position best case nal cycle 
example trial recommendation cycles needed best case second case nal cycle user needed look total cases 
results results shown 
rst graph plots average number cases examined technique trials bar chart plots relative bene associated technique compared benchmark sim line graph 
figures show breakdown results averaged di erent values respectively 
summary analysis indicates comparison recommenders working relation benchmark operate basis minimal feedback user recommendation cycle 
best case query positioned average sim benchmark compared wmlt method 
words wmlt method requires user look fewer cases sim average 
similar albeit quite pronounced bene ts available mlt llt methods reductions approximately respectively 
mlt llt methods perform require user examine average cases session bene ts respectively 
varying indicates increases average number cases examined user decreases course sim plot remains depend 
see mlt mlt llt techniques outperform sim average lose sim mlt mlt llt rack scores respectively compared sim score 
low values recommendation window large mlt generate sensible revisions query 
note llt method performs level indicating poor performance mlt llt largely due mlt llt component 
general results suggest simple mlt strategy ective revision strategy techniques bar llt perform better values interestingly combination mlt llt performs better higher values eventually win outright 
wmlt techniques perform best di erent values sophisticated wmlt method performing slightly better 
suggests weighting scheme employed wmlt positive ect 
varying shows average results di erent values di erent values initial query size 
time sim method ected signi cant reductions number cases examined increases expected 
mlt method mlt llt methods perform poorly losing sim values case mlt case mlt llt interesting mlt llt outright winner 
best performers wmlt perform beaten mlt llt winning outright 
notably wmlt outperforms indicating additional value conferred weighting technique 
discussion results far indicate simple naive mlt technique perform compared simple sim benchmark 
predicted mlt tends current preference case serves steer recommender parts case base contain target case 
sophisticated wmlt methods er signi cant improvements recommendation trials successfully select features preference case transfer new query 
uence negative preference features clear bene ts available lower values higher values particular interaction mlt llt inconsistent warrants analysis 
winners losers previous experiment examined average case results terms numbers cases need examined user recommendation technique 
important understand average case results tell technique consistently performing better especially benchmark 
fact low average result single small number trials poorly performing method 
reason experiment look number trials individual technique wins compared benchmark outright 
method trial results processed compute number times recommendation technique wins benchmark number trials technique results fewer cases examined sim benchmark 
results results shown summary trials individual break downs di ering values figures respectively 
summary analysis indicates wmlt method best performer beating sim time trials trial wmlt looses sim di erence 
ranks second win rate trials 
nd mlt performs poorly beats sim terms average number cases examined vs wins sim trails trials words improved average derived results trials 
nd llt method promise beating sim time 
interestingly combination mlt llt performs marginally better llt indicating mlt technique having minor positive impact mlt llt performed average terms number cases examined user average result derived trials masking poor individual performances compared sim 
varying results varied summarised 
nd wmlt performing best beating sim time 
similar albeit impressive performance seen beats sim trials trials trials 
interestingly performance llt seen degrade re ecting average increase number cases examined llt witnessed previous experiment 
mlt worst performer beating sim improving beat sim extra trial increment wins come low values 
varying results varied shown 
general performance comparison techniques relative sim degrades increasing values expected sim technique perform queries complete 
worth pointing wmlt technique maintains win rate values looses indicated 
wmlt technique beat sim level fact wins trials value impressive comparison 
mlt mlt llt techniques degrade rapidly increasing values shown performs better superiority sim 
llt strategy somewhat erratic analysis general performing poorly beating sim trials 
discussion results section add detail average case analysis previous experiment indicate performances result small number trials indicative performance compared benchmark 
especially true mlt llt mlt llt techniques 
nd average case performances wmlt represent genuine improvements sim board 
performance indicates ability select features new query works winning performance wmlt indicates weighting techniques adds considerable value 
fact success wmlt highlighted charts percentage trials wmlt beats individual technique percentage trials wmlt wins outright 
shows wmlt displays impressive performance compared update strategies compared sim see consistently beating llt mlt beating mlt llt trials 
impressively highlights wmlt wins outright beating technique trials trials 
sim mlt wmlt mlt llt llt sim mlt mlt llt llt wins wmlt fig 

comparison performance win rate feedback strategies examined compared wmlt relative 
focus various feedback methods employed recommender systems means incrementally re ning recommendation process 
attempted classify di erent types feedback explored date granularity cost dimensions 
highlighted apparent lack interest low cost preference feedback method suggesting rooted assumption technique gather sucient information ectively guide recommendation process 
response outlined comparison recommendation framework designed fully exploit preference feedback 
family preference guided query revision strategies fully described evaluated 
promising results wmlt methods principled ways selecting weighting features revised query result preference feedback 
furthermore provided evidence simplest form preference feedback mlt widely adopted search engine community perform poorly recommender systems 
focus extending evaluation additional recommendation domains looking new revision strategies alternative weighting models 

aha avila 
conversational case reasoning 
applied intelligence 

balabanovic shoham 
fab content collaborative recommender 
communications acm 

bradley smyth 
improving recommendation diversity 
donoghue editor proceedings twelfth national conference arti cial intelligence cognitive science pages 
ireland 

bridge 
product recommendation systems new direction 
aha watson editors workshop cbr electronic commerce international conference case reasoning iccbr 
vancouver canada 

burke hammond young 
findme approach assisted browsing 
journal ieee expert 

doyle cunningham 
dynamic approach reducing dialog online decision guides 
editors proceedings fifth european workshop case reasoning ewcbr pages 
springer 
trento italy 

thompson 
personalized conversational case recommendation 
editors advances case reasoning proceedings fifth european workshop case reasoning pages 
springer verlag 

schmitt bergmann 
evaluation similarity approach customer adaptive electronic sales dialogs 
chin weber editors empirical evaluation adaptive systems 
proceedings workshop held th international conference user modelling pages 
germany 

smyth 
collaborative case reasoning applications personalised route planning 
aha watson editors proceedings international conference case reasoning iccbr pages 
springer verlag 
vancouver canada 

quinlan 
induction decision trees 
journal machine learning 


navigating shoppers buying process combination asking proposing 
bernhard nebel editor proceedings seventeenth international joint conference arti cial intelligence ijcai pages volume pages 
morgan kaufmann 
seattle washington 

smyth 
personalized tv listings service digital tv age 
journal knowledge systems 

smyth cunningham 
comparison incremental case reasoning inductive learning 
proceedings second european workshop case reasoning ewcbr 
springer 
france 

smyth 
similarity diversity 
aha watson editors proceedings international conference case reasoning pages 
springer 
