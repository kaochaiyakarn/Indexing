characterization data provenance peter buneman sanjeev khanna 
wang tan university department computer information science south rd street philadelphia pa usa sanjeev saul cis upenn edu 
proliferation database views curated databases issue data provenance piece data came process arrived database increasingly important especially scienti databases understanding provenance crucial accuracy currency data 
describe approach computing provenance data interest created database query 
adopt syntactic approach results general data model applies relational databases hierarchical data xml 
novel aspect distinction provenance refers source data uence existence data provenance refers location source databases data extracted 
data provenance called lineage pedigree description origins piece data process arrived database 
eld molecular biology example supports public databases handful source data sense receive experimental data 
databases sense views source data views 
fact views sounds nonsensical understands individual databases simply computed queries added value form corrections annotations experts curated 
serious problem confronting user databases knowing provenance piece data 
information essential interested accuracy timeliness data 
understanding provenance process records complex issue 
address important part general problem 
suppose database view constructed partly supported digital libraries dl iis 
supported part alfred sloan research fellowship 
peter buneman sanjeev khanna wang tan ask provenance piece parts contributed tod 
problem addressed relational databases :10.1.1.54.5459
particular considers question tuple inq tuples 
crucial question meant contributed 
examining provenance general setting draw distinction provenance piece data come provenance database 
consider example select name telephone employee salary select average salary employee sees tuple john doe output argue tuple contributed modifying tuple employee relation ect presence john doe result 
studied set contributing tuples :10.1.1.54.5459
hand suppose asks telephone number tuple john doe comes answer apparently simpler telephone eld john doe tuple input 
statement presupposes name key employee relation need means identifying tuple source sql eliminate duplicates 
select unique answer set locations 
point provenance requires identify locations source data 
provenance important understanding source errors data source data john doe investigate discovers telephone number incorrect view 
important carrying annotations database queries 
basis describing provenance data model proposed explicit notion location 
model advantage allows study provenance general context relational model 
existing provenance considers relational model 
outline 
section describe deterministic model 
characterization provenance show invariant query rewriting 
section describe natural normal form queries give strong normalization result query rewriting 
normal form useful gives reasonable basis de ning provenance turns problematic general expected invariant query rewriting 
discuss possible restriction provenance satisfactory characterization 
related 
provenance studied relations 
knowledge studied provenance 
de nition provenance relational views shows compute queries relational algebra 
semantic characterization provenance restricted expected properties query rewriting 
fact syntactic techniques developed restricted natural interpretation relational model yield identical results 
know characterization data provenance semantic characterization provenance know semantic characterization provenance behaved queries 
expressing provenance query loosely related view maintenance problem 
apparently simpler provenance interested view view maintenance needs account additions database asking reconstruct view change source 
conversely loose connection provenance view update problem 
want update data element output elements input need changed 
proposed deterministic model described view maintenance scienti databases 
deterministic model describe data model location piece data uniquely described apath 
model uses variation existing tree models semistructured data :10.1.1.32.3916
restrictive edges distinct labels restrictive labels may pieces semistructured data shows certain common data structures expressed deterministic model semistructured data 
node deterministic tree uniquely determined path edge labels root node node 
paths analogous tol values programming language terminology describe shortly relations cast model keys edge labels 
object oriented semistructured database persistent object identi ers structures expressed 
variety hierarchical data formats implicitly conform model 
notably acedb lightweight dbms originally developed database genetic data conforms closely model supports certain operations deep union essential techniques developed 
syntax operations values 
denote pair label value think edge label subtree 
notation fx xn denote set pairs 
edge labels xn distinct notation describes nite partial function values values 
set values fs sng described model mapping element set standard constant 
example shows edge labels pieces semi structured data 
value equality computed inductively 
purposes normal forms pieces semistructured data required linear 
peter buneman sanjeev khanna wang tan name bruce record name bruce height height array set id name rate kim id name rate bob relation id name kim rate id name bob rate fig 

examples data structures represented syntax 
paths 
xn paths 
example path fid identi es value fname kim rate path fid rate identi es value 
abbreviation 
en en shorthand fe fe fen eng ggg think ofe en path leading value en example fid name kim abbreviation fname 
traversal 
denote subtree identi ed 
occur inv unde ned 
example fa unde ned ffc fc 
path representation 
observe value model described specifying set paths constants terminal nodes 
call path representation ofv 
example path representation fa dgg de nition 
substructure wis substructure ofv denoted path representation ofw subset path representation ofv 
ut example 
dg dg vb dg 
easy see model deterministic occurs part ofv unique way 
de nition 
deep union deep union ofv written asv tv value path representation union path representations ofv andv 
note result may partial function case deep union unde ned 
ut example 
deep union fa fb fa fc deep union fa fb unde ned 
encoding relations encode relations follows 
relation name forms label outgoing edge root node turn mapped set keys relation 
key relation mapped corresponding tuple identi es relation 
key tuples modeled id wherep pn en condition characterization data provenance spn dn condition composers born collect ug fig 

general form normal form query fragment 
example 
set entire tuple edge label 
example suppose relations composers works shown 
key composers name works compound key name opus 
gure shows encoding relations model 
see keys tuple placed edge model 
tuple contains compound key model entire compound key linear piece semistructured data edge 
key placed edge 
matter order serialize keys long done consistent manner 
composers name born period composers bach baroque handel baroque mozart classical works name opus title bach 
bach null handel art thou troubled 
xml name bach born period baroque name handel born period baroque name mozart born period classical works name bach opus title 
name bach opus title name handel opus title art thou troubled 
rst sight xml conform deterministic model 
insofar formal model xml developed document object model dom node labeled graph child labels may repeated 
fact node labeled minor 
uniqueness serious 
absence system keys see fall back property speci ed dom child nodes uniquely identi ed positions attribute nodes names 
defer details translation xml query language xml ql deterministic model query language full version 
query language query languages semistructured data general syntactic form shown 
patterns syntax follows syntax data de ned previous section augmented variables en essentially patterns may contain 
semistructured query languages patterns include regular expressions edge labels 
deal patterns 
peter buneman sanjeev khanna wang tan collect expressions nested queries 
condition simply boolean predicate variables query 
interpretation collect expression follows consider assignment ofthe variables expression substructure corresponding 
assignment evaluate condition 
true add instantiated value output 
union output values 
interpretation quite general precise de ne mean union say values variable bind constant arbitrary value 
languages see vary choice union operation 
case deep union operation 
output query value emitted twice 
consequence result query unde ned 
add deep union operation language general syntax summarized grammar wherep condition je te jc jx constants variables patterns condition conditions 
note fe en ng fact shorthand fe gt refer query language want better term deterministic ql 
syntax query language quite general interpretation limited model 
order set machinery analyze provenance restrictions syntax interpretation queries soundness rewrite rules 
impose syntactic restrictions 
de nition 
formed query said formed single variable nested query expression involve query comparison variables variables constants 
ut conditions required soundness rewrite rules 
condition restricts queries conjunctive fragment containment queries easily determined 
addition formedness say query de ned unde ned input 
rest consider queries formed de ned 
restriction place interpretation query 
need notion singular expression consists single path terminated constant 
de nition 
singular expression singular ife te non empty distinct ande 
ut restriction interpretation variables may bind singular values 
rst sight restrictive interpretation query unusual 
consider query 
binds singular values toy output bach born fname handel born 
probably expected output characterization data provenance composers born composers born composers fig 

example queries 
denotes constant 
familiar say xml ql variables bind complete subtrees 
easy translation illustrated query xml ql interpretation 
note deep union reconstructs subtree 
restrictive may capture positive relational queries positive nested relational algebra 
expressive xml ql express path patterns involving kleene star works hierarchical structures forms skolem function nested query forms xml ql simulated limited 
omit details 
de nition 
normal form said normal form shown spi se singular pattern singular expression respectively di database constant condition boolean predicate variables query 
ut main result section formed query equivalent normal form determined rewrite system omit details state strong normalization result says starting formed query sequence application rewrite rules leads normal form nite number steps 
theorem 
strong normalization rewrite system strongly normalizing 
meanings provenance equipped data model query language position formulate meanings provenance compute provenance query source data 
formulate provenance completely determined 
composers fname xg period vg works xg opus wg collect fname xg wg yg name bach born opus title opus title name handel born opus title art thou troubled assume xml ql interpretation contains skolem function groups composer names 
peter buneman sanjeev khanna wang tan query expresses join components database described section 
consider value referenced fname handel born 
value generated instance collect expression bound handel 
patterns clause nd simultaneous matches patterns caused bindings 
case match consisting patterns instantiating variables composers fname handel period baroque works handel opus title art thou troubled 
database contains structures obtain output contains fname handel born 
rationale calling structures provenance value referenced fname handel born 
interested provenance fname handel born need look pattern bind determine came path composers fname handel born 
example suggests natural approach compute provenance syntactic analysis query approach take 
provenance model theoretic approach datalog programs described programs viewed set rst order sentences describing desired answer 
example datalog ruler rn un associate logical sentence ui wherex xm variables occuring rule 
query fe jp pn viewed logical sentence xm pi eis output xm variables occurs query 
provable exists valuation premise true output 
discussed earlier structures provenance example correspond proof fname handel born 
call collection values taken proves output witness output 
speci cally witness respect 
value shown witness fname handel born 
composers name handel born period baroque works name handel opus title art thou troubled 
witness basis re ne notion witness introduced explicitly tied structure query input database 
speci cally singular consider witnesses correspond deep union values taken leaves proof tree fort respect characterization data provenance 
output fname handel born witness corresponds values leaves proof tree taken 
witness value result deep union values proof tree value 
composers name handel born period baroque name mozart born period classical works name handel opus title art thou troubled 
describe notion witness basis captures set witnesses type 
de nition closely follows syntax query 
de nition 
witness basis consider normal form 
witness basis singular respect denoted wq 
form fe jp pn en set valuations variables clause valuation wq pn note database constant normal form 
wq fg 
generally formed de ne witness basis extending follows 
partition set ei clause parts fpi database pi ei pattern matched 
denote members ofs denote members 
set valuations variables valuation clause 
fp tp compound witness basis product individual witness basis singular values making 
singular 
fw wq ti ut general de nition looks patterns matched database patterns match queries 
collected part witness generator nested query inductively look witness basis patterns valuation combine results product 
show witness basis formed query fact witness basis normal form 
lemma 
rewrite system output ofq wq wq 
computing witness basis 
show procedure singular value query normal form 
fei 
look members witness basis oft need search valuations variables peter buneman sanjeev khanna wang tan 
valuations deep union valuation returned result 
evaluated generate witness basis 
clause ofq searching witness basis directly produce collect clause contains output expression deep union patterns clause placed edge 
prevent inter mixing members witness basis 
algorithm described 
simply qn 
ei technique sound complete sense set witnesses isthe set witnesses returned 
algorithm qi denote clause 
denote deep union patterns valuation return query collect simplicity serialize output expression edge 
query returned theorem 
soundness completeness query normal form singular value output ofq 

comparison 
point notion witness basis coincides derivation tuple queries general case theta join considered 
details deferred full version 
minimal witness basis observe witness value invariant equivalent queries witness basis 
show subset witness basis called minimal witness basis fact invariant queries equalities 
de nition 
minimal witness minimal witness basis minimal witness respect st vq 
minimal witness basis respect denoted maximal subset mq wq ut example introduced earlier witness shown section minimal witness name handel born witness shown section 
theorem 
invariance minimal witness basis equivalent queries equivalent formed queries equality conditions contained inq andq mq 
characterization data provenance proof theorem homomorphism theorem shows class formed de ned queries equality conditions query containment equivalent existence homomorphism queries 
ideas extend theorem certain subclasses queries inequalities 
invariance property minimal witness basis fact holds larger class queries 
cascaded witnesses query composition suppose data sources mixture materialized views actual databases query written sources 
nd witness basis value respect sources witnesses consist values andd subsequently nding witness basis components taken views eventually witnesses witness basis consist values 
show witness basis obtained manner rst composing views query composition rule rewrite system obtaining witness basis rewritten query 
fact result important special case lemma views nested queries sharing variables outer query block 
theorem 
unnesting witnesses set databases query written query written andv wq fw tw tv fd value taken wv rewritten query rewrite system composed 
provenance far explored issue pieces input data validate existence output value query 
focus identifying pieces input data helped create various values appear output 
provenance speci value output closely connected witnesses output parts witness construct speci output value 
instance example described section output value fname handel born depends composers fname handel born input 
refer path composers fname handel born input provenance output value 
informal description suggests intuitive procedure determining provenance speci value output determine output variable bound speci value identify pieces input data bound output variable 
intuition fragile di culties involved formalizing intuition illustrated sequence examples 
consider equivalent queries look employees salary peter buneman sanjeev khanna wang tan emps fid xg salary collect fid xg salary emps fid xg salary collect fid xg salary suppose wish determine provenance output tuple 
case variable collect clause value identi ed 
provenance value inq query value hard wired query output 
output associated value identify contributed value 
convention consider provenance speci value output de ned associated variables output expression query 
ascribe provenance value query 
example illustrates notion provenance hard keep invariant equivalent queries general 
example shows multiple pieces data may simultaneously contribute speci value output may di cult identify pieces 
emps fid xg salary emps fid xg bonus collect fid xg new salary emps fid xg salary emps fid xg salary emps fid xg bonus collect fid xg new salary case ofq value associated new salary component output originated salary bonus components corresponding employee 
easily identi ed tracking output query 
inq equivalent input data salary bonus atomic values needs recognize forced agree provenance determined 
suggests general syntactic structure query may su ce identifying provenance 
cases syntactic analysis may issue di cult handle consider nested queries 
consider equivalent queries collect fx ug applied input database fr queries produce output 
provenance value output fr case 
contrast provenance value respect requires identify toy nested query 
provenance fr case 
syntactic approach 
examples highlight general queries provenance invariant space equivalent queries characterization data provenance purely syntactic characterization provenance yield complete description provenance 
syntactic approach identify restricted class queries referred traceable queries provenance preserved rewriting 
approach formalizing initial intuition variables output expression query means identifying provenance value 
speci cally successful valuation query systematically explore pieces input data contributing identi ed output variable refer derivation basis output value 
determine provenance value resulting traceable query su ces normal form query 
query normal form straightforward procedure compute derivation basis value 
paths 
identify provenance value tree values need extend notion paths 
augment syntax paths 
example refer value fname bach edge composers relation path composers fname bach 
refer value bach path composers 
fname bach name 
show de nition derivation basis provenance queries normal form 
informally derivation basis nds output expression 
done partially matching output 
paths toxin patterns determined 
valuation satis es clause valuation patterns clause form witness valuation paths point tox provenance ofl respect witness 
altogether form derivation basis ofl refer procedure computes derivation basis ofl 
similar generate query applied produce derivation basis 
clause generated query clause collect clause generated query emits things patterns paths pointing toxin clause ofq 
de nition 
derivation basis consider normal form 
derivation basis atomic value denoted respect de ned qn 
form fe jp pn en set valuations variables clause valuation denote path points andp thatl px pn jp 
fg 
path points generally derivation basis ofl compound value de ned derivation basis possible path value peter buneman sanjeev khanna wang tan points value inv 
derivation basis multiple path value pairs de ned product derivation basis individual path value pairs 
tw ut omit de nition queries general form main di erence looks basis inductively patterns matched nested queries 
show dealing derivation basis class traceable queries restrict attention derivation basis corresponding normal forms 
de nition 
traceable queries awell de ned traceable pattern query matches database constant subquery subquery view share variables outer scope singular pattern allowed match subquery pattern output expression subquery consist sequence distinct variables variables repeat length 
ut example rst query traceable inner query violates condition 
second query traceable expression fy wg pattern sequence violates condition expression sequence variable 
wherex wherex fy wg proposition 
traceable query andq rewrite system traceable query 
proposition 
class traceable queries rewrite system output ofq 
described framework describing understanding provenance data context queries views 
data provenance examined perspectives piece data output piece data come 
taken syntactic approach understanding notions provenance described system rewrite rules provenance preserved class de ned queries provenance preserved class traceable queries 
interesting direction identify necessary su cient conditions class de ned queries 
interesting direction characterization data provenance study additional constraints input instances functional dependencies help obtain complete description piece data 

victor vianu susan davidson val tannen penn database group students useful exchanges reviewers useful comments 


public catalog databases 
www fr services cited june 

stonebraker 
supporting ne grained data lineage database visualization environment 
icde pages 

abiteboul buneman suciu 
data web 
relations semistructured data xml 
morgan kaufman 

abiteboul hull vianu 
foundations databases 
addison wesley publishing 

abiteboul quass mchugh widom wiener 
lorel query language semistructured data 
journal digital libraries 

buneman deutsch tan 
deterministic model semistructured data 
proc 
workshop query processing semistructured data non standard data formats pages 

cui widom 
practical lineage tracing data warehouses 
icde pages 

deutsch fernandez florescu levy suciu 
xml ql query language xml 
www org tr note xml ql 

durbin 
acedb elegans database syntactic de nitions acedb data base manager 
probe gov syntax html 

davidson 
cient view maintenance xml data warehouses 
technical report ms cis university 

klug 
queries containing inequalities 
journal acm 

wong 
normal forms conservative properties query languages collection types 
pods washington may 

buneman davidson hillebrand suciu 
query language optimization techniques unstructured data 
sigmod pages 

papakonstantinou garcia molina widom 
object exchange heterogeneous information sources 
icde 

world wide web consortium 
document object model dom level speci cation 
www org tr rec dom level 

world wide web consortium 
xml schema part primer 
www org tr xmlschema 

zhuge garcia molina hammer widom 
view maintenance warehousing environment 
sigmod pages 
