analysis internet chat systems christian arne anja feldmann universit des saarlandes tu unchen tu unchen net uni sb de aw net tum de anja net tum de quest better understand network tra dynamics examine internet chat systems 
chat application contribute huge amounts tra chat systems known habit forming 
implies catering users promising way attracting especially low bandwidth environments wireless networks 
unfortunately common protocol base chat systems 
multitude protocol variants specifications exceptions irc icq unavailable ill defined 
addition chat systems layered top application protocols 
simple way identifying chat tra show separate chat tra internet tra results extensive validation methodology 
methodology gather week long trace chat tra crosses mbit link saarland university internet initial characterization 
categories subject descriptors computer communication networks network operations general terms measurement experimentation keywords chat irc network measurements 
chat systems especially web chats sizable number people world exchanging ideas discussions 
considering spectrum internet applications chat systems occupy extreme digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
imc october miami beach florida usa copyright acm 
lived interactive stable non interactive applications web occupy 
chat application generate lot tra surprising chat systems contribute large fraction tra internet 
may ask chat worthwhile target tra characterization 
primary motivation chat offers computer mediated communication 
means measured behavior expected mainly depend human behavior influenced ways packet delays 
furthermore chat large number users 
potential habit forming 
chat systems need little bandwidth interesting attractive wireless application 
wireless application gained extreme popularity asia europe sms short message service users manner similar chat 
today internet various chat systems di er number aspects 
internet relay chat irc oldest systems 
high level perspective irc system consists network servers form spanning tree backbone network 
client irc system connects servers messages travel backbone connected servers 
irc protocol regulates message exchange defined easy understand 
accordingly chose irc starting point analysis 
irc widely protocol significant share today users appear web chat systems 
main motivations ease ease access 
familiar user interface web browser portals ering web chat systems 
unfortunately systems vary widely terms visual appearance technical realization terms protocol 
identified number common characteristics webbased systems separate tra generated tra result analyze web chat systems compare characteristics irc systems 
popular chat systems include icq aim aol instant messenger 
di er systems udp transport protocol main goal exchange short messages exchange opinions longer discussions 
chat systems open systems 
contrast gale fairly new system encrypts messages ically supports decentralization server functions irc 
main problem analyzing chat tra multitude diversity systems protocols 
addition irc di ers significantly web chat unique web chat system 
web chat protocols di er widely usually documented 
systems web browser user interface realize protocol top 
implies di cult consistently separate web chat tra regular web tra tcp tra address challenge capturing chat tra results analysis 
approach separating web chat tra network tra collect tra generously identify candidate chat tra disregard known tra start collecting network tra satisfies general criteria 
keep connections match number criteria derived analysis irc basic understanding web chat systems 
close inspection resulting tra shown protocols may similar behavior 
easy identify excluded analysis 
order show validity approach results extensive validation statistical characterization collected chat tra problem approach imposed resource limitations 
amount tra process exceeded disk cpu memory resources server machine 
accordingly subdivided filter steps checks inexpensively computable criteria second performs computational expensive ones 
pipelining enables cope amount data 
remainder structured follows section review details irc webchat systems 
methodology collecting chat traces section 
section followed account experiences realizing ideas 
propose quite complex heuristic section discusses approach validating appropriateness 
section results analyzing properties irc web chat usage 
section summarize experience suggest research directions 

background irc internet relay chat irc widely chat protocol years 
big irc networks probably biggest users average 
irc network consists set connected servers typically listening client connection requests port 
active client usually connected server uses specific nickname identify irc network 
user may change nickname nicknames unique network 
number commands client irc network 
common sending message specific user channel 
typical form command nick nick hi server client simple irc network nick nickname sending client nick nickname receiving client 
details regarding irc protocol specified irc rfc 
discussion channels core life irc provide abstraction meeting users available huge range topics 
irc users participate channel 
channel information needs kept consistent irc network includes user server information 
addition contains list optional channel attributes list channel operators may remove people channel change channel attributes private attribute ensures channel listed channel list 
irc medium share data 
facilitate contains separate sub protocol data transfer 
data transfers involve irc servers 
happen directly clients tcp ports negotiated special irc protocol messages 
server irc network list servers may connect 
servers identify spanning tree order reduce complexity message routing 
shows example simple irc network 
server list servers list patterns explicit list clients servers allowed connect maintained irc operator 
irc operators responsible administration irc network 
furthermore operator override actions channel operators say remove certain user network 
web chat main drawbacks widespread irc general population main user interface tty lack understanding operation irc system 
overcome known user interface 
second tackled reducing complexity 
concepts reason web chats popular 
simpler relying web browser user interface simpler structure irc usually consist single server 
implies clients want participate specific channel connect server conceptually simpler 
sharp contrast irc large number disparate web chat systems di erent protocols wide range port numbers 
systems protocols vary widely usually documented 
distinguish classes chat systems html web chat systems browser user interface underlying application protocol applet webchat systems applet window user interface downloaded client custom application protocol applet irc chat systems java javascript applet front known application protocol irc 
gain insights typical web chat system operates sketch simple example user output chat room channel displayed html web page called chat window 
html page ends user leaves chat system logging requesting web page 
chat session user fill login form access chat page 
usually fields login form contains nickname user plans session 
order ensure user receive chat output desires systems session ids 
session id number string derived login process usually transmitted request response cookies url 
users usually enter input web forms relying session id line input transmitted users chat room channel respective chat window 
apart basic functionality usually number functional elements invoked buttons similar functional elements 
varied changing text color changing chat rooms sending private messages users articulating various emotions 
usually functional elements realized forms session id main chat room 
html web page systems applet window typically implemented java similar programming language 
shows example chat system 
clearly recognize functional elements window displaying chat messages place entering messages buttons sending messages leaving chat room additional features user room lists 
applet irc chat systems alter user interface continue irc underlying application protocol 
functionality appearance systems comparable web chat systems discussed 
main di erence client converts message user enters applet window irc message irc message receives form corresponding applet window 
ect systems supply graphical user interface irc 
networking perspective applet irc chat systems irc systems 
application perspective applet chats 
user perspective web chat di er substantially irc client web interface 
main di erence irc web chat appears social experience suggests average irc networks usually technically experienced audience web chats technically experienced 
suspect irc users usually older tend irc parallel activities 
technical side observe irc networks impose lesser load single server due spanning tree protocol 
example big irc networks average usage simultaneous users period starting 
surprised find web server system typical hardware able handle load 
chat systems number services enable interactive communication 
popular ones instant messenger applications icq aol microsoft instant messenger services aim mim yahoo messenger service messenger yahoo com 
systems stand client applications explicitly downloaded installed corresponding hardware 
general instant messenger services resemble applet web chat systems purpose send receive messages little delay 
di erences support channels 
hand add certain functionality user specify list friends buddy list server system notified friends logs system 
expect communication behavior networks comparable chat systems long support channels 
information icq 

methodology goal section identify components chat tra help separate chat tra internet tra identifying chat traffic discussed section important di erences chat systems applications chat uses defined port defined protocol 
exists wide spectrum protocols irc protocol irc networks applet user interface equivalents custom application protocols html web chat systems running top custom application protocols chat systems 
note html chat systems typically port reserved port di cult di erentiate web chat tra web tra application properties characterization chat tra akin search needle haystack 
accordingly approach capturing chat tra collect internet tra possibly correspond chat tra split tra chat tra non chat tra attentive reader may find parallels separating attack tra benign tra intrusion detection systems 
separate chat tra tra take advantage fact irc specified usually uses known port 
irc tra easy capture 
relying characterization irc identify basic properties chat tra combining properties general understanding web chat systems enables define set filter heuristics 
irc derived chat properties experience irc systems confirms common assigned known port control applet web chat com chat messages 
furthermore arbitrary client system uses port source port systems start boot port port numbers incrementally 
sizable subset irc tra captured help packet monitor simply capturing tcp tra involving port 
file transfers irc software rely separate tcp connections participating clients capture irc messages irc control messages 
striking di erences irc tra say general tcp tra irc packet size distribution dominated small packets 
illustration section shows packet size distribution datasets irc tcp 
details regarding datasets see section 
course imply chat systems exactly packet size distribution irc 
expect di erences systems build top transmit meta information display properties fonts colors html tags 
expect small packets dominate packet size distributions chat systems people seldom type bytes time sending message channel 
furthermore chat captures human interaction form conversation expect irc sessions minutes 
significant di erence irc application protocols irc sends keep alive messages pings regular intervals minutes limits maximum packet interarrival time packets associated tcp connection 
keep alive messages partly fully responsible dominance small packet sizes 
keep alive mechanisms popular provide straightforward error recovery mechanism broken tcp connections 
chat systems keep 
web systems relying purely timeout system 
subsequently systems tolerate long user idle times 
receiver chat message identified ways 
example messages may transmitted single tcp connection server turn associated recipient 
alternatively message may explicitly list recipients private message channel name done irc 
alternative uses concept session id 
session associated certain chat room recipient message includes session id note di erent users channel di erent session id 
main features irc distributed infrastructure servers 
users participating channel connected di erent servers 
chat systems gale distributed infrastructure observe web chat system distributed infrastructure manner similar irc 
characteristic properties web chat systems section distinguish kinds web chat systems html web chat applet web chat applet 
tra distinguished irc tra 
discuss specific properties 
html web chat transport protocol imposes problems chat system designer web pages cached design stateless 
order ensure stale chat messages distributed appropriate cache control headers 
observed chat systems pragma cache cache control store cache control cache 
chat systems need state information session channel identification 
adding state accomplished ways cookies appending id url 
header contains relevant information server 
header 
identify popular types chat systems server jh chat 
far discussed criteria increase likelihood certain request response pair belongs chat session 
going identify criteria indicate request response pair belongs chat session 
cases transaction important cached data revalidation 
corresponding header cache control revalidate 
header ensures cached data valid 
assumption chat systems chat room conversation active new information sensible prohibit caching enforce revalidation 
seen header chat systems 
commonly cache control header cache control private increase privacy data 
criterion appropriate simple html web chat systems seen 
criteria discussed arise transport protocol 
html ers additional capabilities chat systems scripting languages javascript implement various auxiliary functions self refreshing user lists changing text attributes size color 
systems provide addition main html page window applet windows facilitating private conversations displaying user lists 
applet windows realized programming language java 
ering private conversations desirable feature realized creating socalled private chat rooms realized instance javascript separate applet window 
users invited discussion 
applet web chat popular programming language programming applet windows java 
accordingly useful criterion applet web chat systems java file accessed user 
user chat system chosen channel name user wants private conversation new java applet window opened existing reused client side 
case private conversation separate window opened ends communication partner may exchange messages private environment 
fact user downloading java applet meaningless 
needs context 
take advantage human nature 
natural call file script page associated chat tra xxx yyy arbitrary strings 
furthermore word chat contained name path 
people descriptive names 
criterion word chat packets 
note criterion context applet chats additional criterion 
properties chat systems discussion identified various criteria summarized table identifying chat tra criteria irc instant messenger described refer respective property collection validation packet size cache control headers java scripting languages session id applet window irc instant messenger table properties chat systems types applications 
easy imagine packet size property filter hard see automatically recognize 
accordingly partition properties groups suited automatic filtering chat tra tra may help human separate chat tra tra properties basis validation 
strategy extracting chat traffic properties listed table devise heuristic starting broad criterion include chat tra contains large amount tra identifies tra chat tra weeds iterates process times 
number iterations tra remain 
tra satisfies number properties typical chat tra final step explicitly remove tra belonging applications properties similar chat tra tra remains assumed chat tra naturally steps ability eliminate lot non chat tra implemented ciently applied early filtering process 
filters need processing power preprocessing may eliminate tra applied process 
step identify appropriate packet filter allows capture chat tra step preprocesses data associate packets flows necessary criteria apply streams packets individual packets 
filters decides packets flow correspond chat session 
involves series filters gradually remove flows correspond chat tra suggest packet filter accepts broad spectrum packets 
ports eliminate surely assume contain chat tra privileged ports ports port port ports gnutella port 
specifically choose eliminate gnutella tra reduce amount data needs inspected 
ect chat tra known chat system uses gnutella port 
rest unprivileged ports excluded contribute excessive amount tra step groups packets flows similar way done cla feldmann :10.1.1.39.8051
method di ers ones cited consider bidirectional unidirectional flows 
furthermore suggest di erent timeout values packets tcp flags syn fin rst 
flags usually indicate start flows er additional information start connection 
contrast intrusion detection systems full protocol analyzer reconstruct tcp data stream 
filter packet packet basis 
motivation twofold side content considering header line word chat url get request split tcp packets hand ort processing power necessary extracting payload reordering packets content flow quite significant 
acknowledge drawbacks simplifications realize general quality resulting data may su ce 
chat tra su ces 
packets grouped flows mark filter criteria 
filter potential discarding largest number flows applied 
case checks packet sizes 
shows packet size distribution irc web chat tra see small packets dominate irc web chat tra large packets occur 
accordingly filter absolute 
consider distribution 
interpret dominating mean packets size threshold bytes 
stated access packets connection order apply criterion 
implies keep statistics active connections 
high speed links exceeds available computational capabilities memory 
decided focus start flow 
analysis web chat tra shows percentage packets trace environment bytes 
consider packets rate respectively indicating larger packets frequent connection connection 
need transfer meta information causes bigger packets sent start connection 
meta information includes formatting instructions web page user lists 
experiments show somewhat arbitrary value packets result appropriate tradeo accuracy performance 
flows satisfy filter marked candidates chat tra candidates removal 
removing flows need consider criteria identifying applet web chat systems existence flow dominated small packets require download java applet word chat connection long ago 
decided interpret long ago meaning minutes 
criteria need checked flows 
applets typically implemented java corresponding criterion download files jar called jar files server 
accordingly mark flow packet contains get request jar file applet flow 
similar fashion mark flows packet contains word chat chat word flow 
note imply traces described section analysis discussed section 
web chat tra kind flow prerequisite identifying flow chat tra applet flows chat word flows eliminated needed cross 
flow dominated small packets applet flow chat word flow eliminated 
expected filter su cient identifying chat tra quite number applications news streaming audio sessions online games ftp control connections peer peer tra generate small packets 
need apply specific filters class chat system 
order identify html web chat systems take advantage presence absence headers 
set criteria presence suitable cache control header known system identification header 
time verify unsuitable cache control header 
furthermore check requested object html page image 
images recognized header content type image name requested object ends gif jpg jpeg png 
result filter list candidate html web chat flows 
order identify applet web chat tra look correlations flows 
order flow candidate dominated small packets preceded applet flow chat word flow 
furthermore impose restriction flows involve client server pair 
restriction somewhat stringent unrealistic 
relaxed flows client related servers 
hard define harder identify related servers proceed restrictive approach 
chat word flow criterion weak general criterion require time di erence word chat start new connection big minutes 
methodology see section able capture web chat tra reduce trace size drastically 
flows classified web chat number non web chat flows 
assigned number known applications similar characteristics web chat eliminated specific rules respective application 
list applications table 
flows removed additional structural filters 
applications listed table known port numbers 
edonkey ip telephony napster https 
port gnutella filtered list gnutella table contain significant amount small packets 
applications mms rpm identify frequently corresponding abbreviations protocol 
connections contain small number abbreviations eliminated 
class applications contain keywords rtsp contains content type field typically contains word video 
smtp ssh ftp servers listen high port numbers protocols easy identify keywords helo subject flow ssh ftp server connection 
smtp https edonkey ip telephony rtsp rpm mms napster ftp gnutella table protocols small packet sizes applying filters left clean set web chat traces 
remaining problematic connections filtered structural rules 
filter checks data rate connection 
web chat systems fairly low data rate connections short packets non bu ered 
filter checks connection lasts seconds 
assumption short connections provide time conversation chat connections 
assumption chat contains interactions 
direction connection transmit minimum data 
case check direction transmits bytes 
marked flows eliminated chat tra candidates 

trace collection datasets methodology described collect chat tra university saarland 
section discuss resolve hardware resource problems details captured traces 
partitioning resources hardware terms memory cpu resources bottleneck realizing methodology discussed 
just consider wants collect week worth chat data able study daily weekday weekend profiles 
methodology implies internet tra captured filtered criteria raw data quite sizable 
time trace collection week tra amounted gb raw data 
data captured tcpdump dual processor pc running freebsd mhz amd processors gb hard disk capacity 
machine called capture machine 
addition access compute server mhz intel iii processors gb hard disk capacity 
amount captured data clearly larger available disk capacity resource consumption users taken consideration necessary process data parallel capturing data 
initially capturing machine capturing processing 
unfortunately load due filtering causes cpu overloaded 
cpu overloaded unable service interrupts packet capture required frequency 
unacceptable loose significant number packets approach successful 
decided transfer collected traces trace collection capture machine compute server 
enable parallel processing recording machine split traces slices mb 
note takes seconds fill mb slice typical day time hours 
various filters section implemented perl compute server 
perl spite performance problems perl quite cient string oriented tasks code easily revisable 
software fast process incoming data single step real time resort step approach trace collection line cleaning step 
step uses simplified versions simplest filters mark flows packet size filter checks applet flows chat word flows 
choose include expensive pattern matches 
unmarked flows removed second step eliminating packets non marked flows 
third step marks flows full versions criteria remaining criteria 
step eliminates non marked flows 
set filters applied line comprises structural filters ect lot tra need care terms choosing appropriate parameters application specific filters 
applying filters line ers possibilities experimentation 
traces fashion captured web chat traces starting met met internet connection saarland university help monitoring port duplicates packets packet monitor 
initial amount data captured gb 
filtering 
interim results amount gb packet data final trace reduced mb 
raw trace consists packets 
tcpdump dropped packet filter 
results drop rate 
refer dataset webchat 
methodology identifies web chat connections 
trace irc captured extracting irc tra port interim result lead webchat 
size mb consists slightly packets connections 
trace drop rate webchat 
collected second web chat trace called webchat starting 
trace reduced size mb 
drop rate similar webchat 
time separate tcpdump process monitor tra specific set servers see section 
resulting trace called data initially amounted packets lost packets tcpdump 
subset corresponds successful connections longer seconds refered 
able compare packet size distributions chat tra tcp tra trace called tcp start ends 
trace consists gb packets 
packets lost results drop rate 

validation aspects validating approach respect goal identifying chat tra question methodology identify chat tra second question methodology classify tra chat tra tackle problems common evaluation measures information retrieval recall measures ability system relevant items precision measures ability system relevant items details see 
identifying chat traffic recall start adapting definition recall context relevant item web chat connection item corresponds locating web chat tra accordingly define recall manner rel rel rel stands number web chat flows trace stands set web chat flows methodology finds 
problem definition trace know number relevant webchat flows 
going bound recall 
consider alternative definition recall missed rel rel stands number web chat flows trace missed counts number web chat flows located methodology missed rel 
lower bound rel upper bound missed yields lower bound recall 
proceed considering traces collected independently time period trace captures tra web chat tra second trace webchat uses methodology separating web chat tra tra proceed finding lower bound rel concentrating web chat sessions performing conservative estimate number web chat sessions 
estimate verified manually checking connections 
find upper bound missed needs keep mind acceptable flows web chat 
point addressed precision metric recall metric 
start applying methodology webchat 
need identify flows labeled web chat deriving labeling webchat 
flows examined manually verify classification 
number web chat flows set provide upper bound missed 
yields lower bound recall 
bounding number web chat sessions solve problem identifying source web chat tra identify number hosts known host di erent kinds web chat systems 
web site webchat de rates web chat systems channels number users 
choose top web chat systems servers host top channels 
addition include hosts identified operating web chat systems classification 
collect tra university hosts forming trace 
trace contains quite bit non chat tra monitored hosts provide web chat services 
accordingly traffic due retrieval images html files 
addition connection attempts servers succeed 
order increase likelihood including webchat tra trace consider tra successful connections longer seconds 
seconds reasonable lower bound related human behavior 
humans hardly able complete human human interactions small time span 
trace known web chat servers sample connections duration seconds correspond web chat connections 
hand connections duration greater seconds correspond web chat connections 
keep mind typical times downloading web object short seconds 
speculate reasonable short connections shorter connection lasts chat connection 
trace consists connections 
connections unsuccessful leaves 
duration greater seconds leaving slightly connections 
derive lower bound number web chat sessions consider connections classified chat methodology 
checked manually web chat connections encouraging 
verified additional connections 
say contains web chat connections 
bounding number misses trace webchat captured time trace contains web chat connections 
correlating connections identified web chat webchat connections chat servers left significant number connections trace identified webchat trace 
hand connections successfully identified 
remaining connections web chat systems 
large number unidentified connection definitely warrants closer inspection 
manual inspection connections showed active chat sessions 
chat session involve di erent servers connections servers 
twelve connections applet web chat server encrypts chat data 
data contain word chat name protocol parts 
furthermore jar file downloaded server 
twelve connections applet web chat server encrypting data downloads time server 
current methodology 
third server involves connections uses applet irc chat system 
unfortunately frequently splits irc messages packet boundaries causes packet heuristics fail 
furthermore undetected connections contain small number messages 
applet transmits additional data methodology able identify connections chat connections 
packet size criterion main cause missing remaining shorter html web chat connections 
chat connection client server exchange meta information 
implies start chat connection number larger packets transferred 
chat connection long initial packets dominate packet size distribution 
artifacts observed lost syn packet webchat causes correlation fail repeated transmission commercial advertisement web chat page 
conclude number actual webchat connections missed small stem applets applet irc html chat 
missed relevant web chat connections calculate lower bound recall missed rel 
intuitively recall tells probability chat connection method 
decide count encrypted applet chat recall improves 
identifying non chat traffic precision start adapting definition precision context relevant item web chat connection item corresponds locating web chat tra accordingly define recall manner rel ound rel stands number web chat flows trace stands set web chat flows methodology identifies face problem independent way manual testing separating relevant non relevant flows 
due number flows traces webchat performing manual checks awkward 
approach problem probabilistically ask expected precision rel ound wrong ound wrong stand set flows classified web chat flows 
just choose number flows random test determine precision tests justice variety di erent kinds web chat systems 
stratified sampling 
divide population categories criteria discussed sections summarized table estimate precision category independently wrong ound ound ound ound ound precision class stands set identified web chat flows category partitioning flows integrated webchat software 
connections classified randomly pick subset class testing 
order limit number tests achieve reasonable coverage class picked flows 
ensure reasonable number checked connections added tests number 
significant failure rate tested connections understand error rate due systematic problem approach due strange flows 
partitioning categories occurs phases phase distinguish html web chat chat systems 
divide html web chat systems properties follows split chats group rest features feature classes chats session ids id chats scripting languages sl chats characteristic headers 
feature class combination features group id split time depending flow contains word script sc 
feature sl dominates feature id combine groups sl id sl back single group sl 
results shown table 
classified html web chat connections tested 
small number failed 
yields estimated precision html web chat systems 
applet chat systems partitioned similar fashion irc front ends irc instant messenger front ends im jar files located server half packets shorter bytes connections jar files server jar jar file get request includes word chat half packets shorter bytes jar file get request includes word chat chat chats 
results summarized table 
applet web chat connections tested 
failed tests derive estimated precision metric 
weighted average calculation estimated precisions yields precision 
separating chat non chat traffic section analyzed locate chat tra additional connections classify chat tra combining results find approach expect locate real chat connections expect connections identify chat connections 

results contrary applications including web telnet ftp statistical properties chat tra best knowledge examined :10.1.1.24.8244
chat systems known habit forming fairly limited bandwidth requirements id id sl id id sc sl sl total measured tested failed precision table precision html web chat systems 
irc jar im chat total measured tested failed precision table precision applet web chat systems 
statistical properties may relevant sizing wireless networks 
furthermore interest understand properties application di er 
metrics interest basic properties chat session duration interarrival times activity chat connections 
discussing results analysis want explicitly list caveats underlying data analysis 
capture data single location exit point university campus network 
generalizing results necessary verify results traces locations internet di erent kinds locations internet service provider isp entry point 
second number observed web chat connections week limited 
traced hour observe small number connections 
third methodology separating web chat tra non chat accurate see section 
connections missing analysis additional ones included 
reduce uncertainty regarding connection chat connection focus analysis connections seconds results represent initial step needed understanding web chat properties 
order compare characteristics web chat irc ensure similar abstractions 
irc uses single tcp connection duration chat session user switches multiple channels 
necessarily case webchat 
introduce concept chat session capture user chatting server host 
irc chat session just corresponds duration irc connection equals duration tcp connection server 
case web chat 
example html web chat user changes channel old web page closed new opened session id changed 
implies tcp connections 
accordingly merge connections client server sessions way usually merges packets flows 
main di erence large timeout hour order account see section detailed discussion regarding choice seconds 
users silent extended time periods lunch 
advantage chat sessions results irc web chat sessions comparable 
analysis collected week long trace webchat contains connections classified web chat 
summarized web chat sessions 
corresponding irc connections subset irc raw data webchat corresponds irc tra contains irc connections 
terms metrics interest analyze basic properties chat session considered relevant tra modeling session duration interarrival times 
examine dynamics chat connections 
consider interarrival times packets chat connections packet size distributions 
examine ratio send vs received bytes order understand data flowing participants 
history traffic characteristics traditionally tra modeling starting point telephony markovian assumptions tra arrivals exponential assumptions holding times 
emergence high speed packet networks heterogeneous mix services applications necessarily hold longer 
events recurring random points time lifetime distribution current expect observe exponential distribution 
furthermore large number independent tra streams suitable regularity conditions multiplexed resulting stream approaches poisson process 
assumed human behavior large leads poisson processes 
data consistent exponential tail expect see straight line tail complementary cumulative distribution function ccdf log linear plot 
hand heavy tailed behavior commonly observed kinds aspects internet tra 
data consistent heavy tailed distribution expect see straight line tail ccdf log log plot 
furthermore shown superposition sources converges self similar process 
alternative way providing structural explanation generating asymptotically self similar tra session duration irc sessions webchat sessions webchat sessions timeout ccdf session durations log log scale 
construction due cox known immigration death process queueing model 
assumes sessions arrive poisson process distribution session lengths sizes heavy tailed packets bytes transmitted constant rate 
behavior observed pre web days ftp telnet 
web approach su ce durations heavy tailed interarrival times web connections consistent exponential distribution 
hand applicable modem calls arrival process consistent exponential distribution web connections modem calls 
general approach web tra kurtz construction 
chat tra session interarrival times consistent exponential distribution session durations consistent heavy tailed distribution happening session 
questions examine 
session durations plots ccdf duration web chat irc sessions respectively log log scale 
plot immediately demonstrates chat sessions tend significant amount time 
median irc web chat sessions roughly half hour 
irc sessions longer web chat sessions 
artifact timeout hour session definition think 
relatively small di erence ccdf web chat sessions hour timeout vs hour timeout strongly supports 
note web chat connections hours 
contrast irc sessions longer hours longer seconds day 
suggests significant population irc users continue irc session just day night 
sessions active trace collection period 
explanation web chat irc users log system sleeping 
irc web chat tra include long lasting sessions 
furthermore irc session durations heavier tail web chat ones 
consider current evidence su cient claim session durations consistent heavy tails exponential tails 
irc am pm web chat am pm ccdf session interarrival times log linear scale day morning am noon afternoon pm pm evening pm pm ccdf web chat session interarrival times log linear scale morning afternoon evening log log plot log linear plot curves straight su cient range time scales 
connections especially long ones may idle time distribution infer durations actual chatting looks upper bound 
interarrival times sessions section explore frequencies users connect chat servers 
accordingly identify starting time chat session time user connects chat server derive interarrival time consecutive logins 
order eliminate significant activity shifts day night disregard chat sessions started pm am 
note session interarrival times day significantly shorter night 
shows plot ccdf session interarrival times log linear scale 
lines feature straight line 
indication interarrival times consistent exponential distribution 
disregard impact time day ects consider smaller subsets web chat sessions morning contains interarrival times sessions started am noon afternoon consists started pm pm evening gathers started pm pm 
time gap irc interarrival times webchat interarrival times ccdf packet interarrival times irc pings web chat 
ccdf subset session interarrival times see show straight line log linear scale 
similar observations hold irc sessions 
just checking interarrival times consistency exponentially distributed interarrivals su ce poisson model 
furthermore check data consistent independent arrivals checking correlations data 
plots auto correlation function acf subsets interarrival times 
correlation hardly exceeds approximate confidence limit lines added plot 
observe similar behavior irc sessions 
interarrival times chat messages observation regards consistency interarrival times exponential distribution hold interarrival times client server communication 
order investigate aspect inspect interarrival times packets session network 
calculation ignore packets contain data pure packets 
case packet interarrival times correspond message interarrival times assumption messages fit single packet 
extensive manual inspection web chat connections validation phase see section strengthens belief case messages fit single packet 
special consideration taken chat systems keep check clients active 
keep dominate interarrival time distributions 
example terms irc see shows ccdf packet interarrival times irc ping messages 
eliminating keep curves start deviate interarrival times greater seconds observe interarrival times span huge range values 
unfortunately quite simple remove keep alive messages web chat 
influence visible seconds strong irc eliminate 
implies observe smaller number larger interarrival times 
removing keep alive messages irc periodic components remain seconds 
possible explanations automatic bots ison feature generate messages regular intervals 
ison command allows client query server list day hour ccdf packet interarrival times pm pm th 
people currently line 
note chat systems keep interarrival times greater observable 
typical interarrival times web chat messages see seconds typical interarrival times irc messages significantly higher 
imply number messages web chat channel higher number messages irc channel 
keep mind irc sessions usually longer web chat sessions 
hand note larger gaps packets happen time time correspond user idle times example away lunch 
interarrival times hours web chats hours irc 
interarrival time distribution messages means consistent exponential distribution 
possible explanations superposition various time varying exponential distributions create distribution consistent distribution 
accordingly partition time hour time periods investigate interarrival distributions hour separately 
shows example web chat 
note interarrival time distributions consistent exponential distribution 
consistent heavy tailed distribution 
hand impact keep periods dominant 
note results indicate interarrival times chat messages consistent exponential distribution line results paxson floyd telnet 
packet sizes shows cdf packet size distribution tcp web chat irc tra tcp shows typical behavior packets pure fully utilize available mtu sizes 
plot shows typical tcp connection median packet size bytes 
considering packet size distributions web chat irc tra notice typical packet size appears smaller 
hardly full packets 
order distinguish contribution vs partially filled packets small packets lag acf mornings am noon lag pm pm lag acf pm pm acf session interarrival times subsets morning afternoon evening pr size bytes tcp packet sizes webchat packet sizes irc packet sizes size bytes tcp packet sizes webchat packet sizes irc packet sizes packet size distributions including excluding bytes sent ll plot ll plot sent received bytes web chat recomputed packet size distribution tcp webchat irc eliminating packets contain data 
resulting distributions shown 
apparent irc web chat distributions dominated small packets 
chat packets packet sizes bytes 
size bytes 
hand tcp packets contain bytes 
specifics packet size distribution motivates approach separating chat tra tra starting packet size criterion 
transmitted received bytes session examine relation sent received packets chat irc sessions 
plot number bytes sent vs number received bytes chat session irc session respectively 
axes scaled logarithmically 
note typical session client receives times data bytes sent ll plot sent received bytes irc sends 
added functions order help gauge spread values 
outliers web chat connections user receives times sends 
connections games chat 
web chat connections user sends receives 
surprising usually server echoes user sends 
consider sending html web chat data may include new web connection line user typing impossible especially user active people channel 
irc observe cases user sends receives 
strange irc server usually communications private messages 
ison feature 
ison command client sends list people server server replies subset currently line 
cases caused combination users sending receiving ison command sizable list people 
hand sessions user receives times sends 
notable wide range di erent values 

summary develop methodology separating chat tra internet tra show successful 
find approach expected existing chat connections correctly classify 
wide range chat systems consider ective 
analysis collected traces shows session interarrival times consistent exponential distributions packet interarrival times surprising reflect human behavior 
acknowledgments numerous colleagues helping access understand network measurement configuration data valuable suggestions improve presentation material 

young internet addictive potential explanations pathological internet th annual conference american psychological association 
reed internet relay chat protocol rfc 
icq icq 
www icq com products ger html 
aol aol instant messenger 
www aim com index adp 
gale home 
www gale org 
charts irc networks 
web page 
irc de networks list uma html copy available www net tum de aw list uma html 
zhang paxson detecting backdoors proc 
th usenix security symposium 
paxson bro system detecting network intruders real time computer networks 
snort lightweight intrusion detection networks usenix lisa berkeley ca 
cla :10.1.1.39.8051
braun polyzos parameterizable methodology internet tra flow profiling ieee selected areas communications 
feldmann rexford caceres cient policies carrying web tra flow switched networks ieee acm trans 
networking 
feldmann blt bi layer tracing tcp ip proc 
www 
jacobson leres mccanne 
tcpdump ftp ftp ee lbl gov june 
common evaluation measures 
tenth text retrieval conference trec appendices 
webchat das chats 
web page 
www webchat de 
krishnamurthy rexford web protocols practice 
addison wesley 
danzig caceres mitzel estrin empirical workload model driving wide area tcp ip network simulations ieee acm trans 
networking 
danzig jamin tcplib library tcp internetwork tra characteristics tech 
rep usc 
paxson floyd wide failure modeling ieee acm trans 
networking 
frost melamed tra modeling telecommunications networks ieee communication magazine 
melamed willinger stochastic modeling tra processes frontiers queueing models methods problems ed ccr press 
jain packet trains measurements new model computer network tra ieee selected areas communications september 
du mcintosh rosenstein willinger statistical analysis ss tra data working ccs subnetworks ieee selected areas communications 
leland taqqu willinger wilson self similar nature ethernet tra extended version ieee acm trans 
networking 
modeling call holding time distributions ccs network design performance analysis ieee selected areas communications 
willinger taqqu erramilli bibliographical guide self similar tra performance modeling modern high speed networks stochastic networks theory applications kelly eds oxford oxford university press 
willinger taqqu sherman wilson self similarity high variability statistical analysis ethernet lan tra source level ieee acm trans 
networking 
crovella bestavros self similarity world wide web tra evidence possible causes proceedings acm sigmetrics conference 
resnick heavy tail modeling data statistics 
feldmann characteristics tcp connection arrivals self similar network tra performance evaluation park willinger eds wiley sons 
johnson kotz continuous univariate distributions volume 
wiley 
barford bestavros bradley crovella changes web client access patterns characteristics caching implications world wide web special issue characterization performance evaluation 
downey evidence long tailed distributions internet internet measurement workshop 
cox long range dependence review statistics appraisal david david eds ames iowa iowa state press 
willinger paxson taqqu self similarity heavy tails structural modeling network tra practical guide heavy tails statistical techniques analyzing heavy tailed distributions adler feldmann taqqu eds boston birkhauser verlag 
feldmann gilbert willinger kurtz changing nature network tra scaling phenomena acm computer communication review 
kurtz limit theorems workload input models stochastic networks theory applications kelly eds oxford oxford university press 
feldmann whitt fitting mixtures exponentials long tail distributions analyze network performance models performance evaluation 
paxson floyd wide area tra failure poisson modeling ieee acm trans 
networking 
