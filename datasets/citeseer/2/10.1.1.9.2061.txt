simplified approach threshold proactive rsa tal rabin ibm watson research center po box yorktown heights new york watson ibm com 
solution robust threshold rsa proactive rsa problems 
solutions conceptually simple allow easy design system 
signing key solution shared times additive form allows simple signing particularly efficient straightforward refreshing process 
key size small constant size rsa modulus protocol runs constant time faults occur previous protocols size key linear blow best number players run time protocol linear number faults 
protocol optimal resilience tolerate minority faulty players 
furthermore previous solutions existence availability key lifetime system guaranteed probability error 
results derived new general technique transforming distributed computations known solution threshold robust computations 
keywords rsa threshold signatures proactive signatures threshold proactive rsa distributed computation model problems simplest solution achieved requiring players participate computation 
clearly requirement mandates give desirable properties enabling threshold players carry computation withstand faulty behavior players 
question arises things contradictory utilize simple protocol preserve properties threshold robustness 
general paradigm transforming player protocol threshold robust protocol maintaining original simplicity protocol 
apply paradigm specific problem threshold proactive rsa 
issue maintaining secret signing keys distributed fashion long periods time enabling uninterrupted signing capabilities addressed threshold signatures proactive security 
threshold signature schemes allow group players hold key enable group produce signatures 
shall refer scheme threshold signature scheme players message subset players size generate signature scheme secure subset players compute signature message previously signed 
player considered corrupted follow intended protocol 
scheme robust correctly compute signatures presence corrupted players 
basic assumption threshold schemes faults lifetime system 
proactive signature schemes threshold signature schemes basis drastically reduce assumption concerning failures 
lifetime system split time periods time period assumed players corrupted 
shall say scheme proactive secure robust presence corrupted players time period set corrupted players change arbitrarily time period 
main idea preserve value key change representation period representations independent 
attacker wishing compromise system need corrupt players short period time 
threshold signatures part general approach known threshold cryptography introduced works desmedt des boyd boy croft harris ch desmedt frankel df secure robust threshold schemes discrete log systems el gamal cmi har dss 
solutions rsa elusive need protect secrecy factors composite things disabled direct adaptation techniques discrete log cases rsa 
independent works boy fra gave simple elegant solution distributed rsa maintain signing key rsa exponent additive form players pn player hold value dn allows straight forward signing scheme delta delta dn player gives value called partial signature partial signatures combined form complete signature major drawback additive solution provide threshold robustness shares held different player players crashes lost secret key 
desmedt frankel df initiated study threshold rsa gave heuristic solution problem followed provably secure threshold schemes fd 
schemes survey refer des 
provided step forward order overcome problems generated structure rsa key cumbersome mathematical structures introduced 
results followed structures added robustness 
proactive signatures part general approach known proactive security introduced works ostrovsky yung oy canetti herzberg ch notion proactive signatures framework discrete log proactive signatures particular incorporating threshold dss framework achieves proactive dss 
solution proactive rsa jakobsson solution exponential size threshold 
frankel probabilistic construction enable solution 
quite efficient small instances solution scale gracefully 
furthermore solution optimal resilience tolerate maximal possible number corrupted players 
frankel realistic general solution proactive rsa 
introducing new techniques modified proved protocol df extended solve problem utilizing new paradigm solution robust threshold rsa proactive rsa problems 
main advantage solutions previous ones conceptually simple allow easy design system 
return construction sharing key times additive form allows simple signing particularly efficient straightforward refreshing process 
key size small constant size rsa modulus protocol runs constant time faults occur previous protocols size key linear blow best number players run time protocol linear number faults 
protocol optimal resilience tolerate minority faulty players 
furthermore existence availability key lifetime system guaranteed probability error 
overview achieving threshold 
stated key shared additive sharing results player holding additive share key 
threshold achieved notion share back 
share shared secret sharing scheme 
survey refer 
related results appear dj 
assume trusted dealer constructions substituted results bf generating rsa key distributed manner 
description protocol starts key distributed players 
point player crashes able retrieve player additive share activating back reconstruction process 
shall show ways avoid exposure additive share 
threshold property scheme inherited threshold property secret sharing scheme 
achieve robustness simple threshold secret sharing scheme substituted verifiable secret sharing scheme vss tolerate malicious faults 
achieved goal maintaining sharing additive form providing threshold 
proactive refreshing shares 
additive scheme lends nicely requires maintain key value change representation 
new set additive shares new new generated having additive share sub divided recombining values new additive shares summing new new new representation measures need taken ensure executed properly done comparison publicly known values 
share back refreshing 
say share back player valid value represented vss share held player 
clearly requirement idea back 
initial dealer trusted assume back valid 
player new additive share share back needs refreshed longer valid back new share 
achieved having player share new share vss protocol 
verification share back valid carried comparison values 
important point note verifications performed process computed publicly known information zeroknowledge proofs possession discrete log characterize solution 
discarding zero knowledge proofs process issue efficiency computation communication allows simpler design 
achieving robustness 
decision activate back complex 
activated cases crashes occur know share reconstruct 
case players acting malicious manner determine reconstructing share back 
done employing robustness techniques enable verify partial signature generated correctly 
avoiding share exposure 
noted exposure player share fails compromise security system long shares exposed secrecy key maintained 
assumption model threshold cryptography time servers crashed compromised security maintained 
undesirable applications parallel signing situations simple crash expose player share avoided 
back value single vss value split parts assigned player part shared vss player provide needed partial signature part privately reconstructed player assigned 
parts assigned faulty players reconstructed publicly 
original share player exposed 
time player recovers crash share privately reconstructed required refresh back valid resume proper operation 
extension enable parallel signatures 
practical efficiency 
signature generation faults occur player needs compute single exponentiation small key times length rsa modulus 
optimized eliminate zeroknowledge proofs checking generated signature valid 
faults occur need check players faulty recover additive share players back 
recovery operation execution vss reconstruction phase efficient protocol 
signature generation protocols constant round protocols faults occur 
process require zero knowledge proofs case 
general paradigm described solution fact general paradigm transforming distributed computations threshold robust computations 
distributed computation player holds inputs need computation inputs need shared vss scheme back 
computation carried players event players fails cooperate faulty information reconstructed back copy incorporated computation 
simplicity protocol maintained adding properties threshold robustness 
model description taken part 
communication model 
assume computation model composed set players fp png modeled polynomial time randomized turing machines 
connected complete network private point point channels 
addition players access dedicated broadcast channel dedicated mean player broadcasts message recognized players coming assumptions privacy communication channels dedication broadcast channel allow focus high level description protocols 
worth noting abstractions substituted related techniques see standard cryptographic techniques privacy commitment authentication 
proactive case substitutions care needs refreshing communication keys 
time 
time divided time periods determined common global clock 
time period consists short refresh period players engage interactive refreshing protocol 
refresh signature generation period players generate signatures messages 
adversary 
assume adversary corrupt players network time period 
player considered corrupted time period corrupted time period corrupted preceeding refresh period 
furthermore malicious adversary learns information held corrupted players may cause divert specified protocol possible malicious way 
assume adversary computationally bounded implying forge rsa signatures 
furthermore assume adversary static robust threshold rsa method set forth shall share rsa secret key sum shares refer shares additive shares 
achieve robustness generating share back additive share shared robust threshold verifiable secret sharing vss scheme 
guaranteed lose additive shares 
request generate signature player produce partial signature additive share 
partial signatures combined generate signature 
order optimize protocol verify combined signature valid proceed detect players incorrect partial signatures 
shall method enables player prove partial signature correct 
player fails provide system correct partial signature additive share reconstructed back 
order composition additive shares shares back properly underlying assumption back value specific player fact additive share held 
ease exposition assume original dealer sharing secret honest property satisfied move full proactive solution longer valid assumption 
bear mind point return section 
shall start directly describing robust threshold rsa assuming black box vss protocol 
vss protocol enables share secret full shall give proof static adversary time period 
proof adaptive adversary cost computations zero knowledge proofs 
sharing phase reconstruct secret reconstruction phase 
denote protocol feldman zn vss see section 
robust threshold rsa comprised protocols initial key distribution carried onset system 
second protocol generating signatures 
protocols described detail sections 
distributing secret key distributing secret key assume set process carried rsa key generation took place rsa key pair computed denote public key pq primes form primes 
private key ed mod oe 
furthermore parameters system set number players threshold 
element high order chosen 
order enable proof security high order element computed setting mod element high order 
set process dealer proceeds share key generating shares sum private key backing shares vss protocol 
furthermore discussed need able verify partial signatures generated additive key dealer lays ability generating witness signature additive key form mod witness utilized signature generation protocol order verify partial signatures 
order unify description players added public share public public steps carried dealer described 
size key signature generation protocol comparable log nn smaller log log 
memory requirements comparable log nn larger factor 
signature generation message signature public key mod setting signature needs generated players distributed manner individual player uses partial key 
secret key shared sum public distributed key generation process see boneh franklin bf special form primes required enable efficient protocol proving partial signature correct 
need carry distributed key generation requirement format primes dropped techniques employed verifying partial signature 
input secret key oe composite element high order number players threshold 
choose hand value nn set gamma 
compute broadcast witness mod 
share value feldman zn vss sharing phase input value high order element composite number players threshold fig 

secret key distribution public mod player correct value mod refer partial signature signature directly computed partial signatures 
fact signature generated verified proceeding verify partial signature 
error detected require player prove generated partial signature properly 
share public witness mod viewed commitment value player required prove correctness partial signature oe prove respect witness discrete log partial signature equivalent discrete log witness 
player fails proof generate proper partial signature share retrieved back vss 
results constant round protocol presence faults 
protocol signature generation described 
public information high order element composite mod witness partial key input message 
player publishes partial signature oe mod 
proves protocol see footnote dlm oe 
proof fails player players reconstruct feldman zn vss reconstruction phase compute oe mod 
set sig public oe mod fig 

signature generation verifiable secret sharing vss zn protocol need share value nn verifiable method 
explained effect storing value vss protocol back case players fails 
motivation sharing back vss protocol computed prime field prime larger possible range theory true example vss protocol bgw information theoretically secure 
alluded previously need check value shared player vss corresponds actual additive share held player 
general zero knowledge proofs done 
provide efficient methods achieving goals depart carrying vss prime field modify protocol integers 
solutions df solutions need satisfy additional properties require solutions slightly complex protocol similar described satisfies needs 
protocol feldman vss fel shall refer feldman zn vss 
theorem 
protocol described verifiable secret sharing scheme satisfying properties unanimity acceptance secrets verifiability unpredictability shall prove unpredictability property lemma proof properties follow directly feldman proof fel 
defer simulation protocol section prove robust threshold rsa 
lemma 
adversary corrupt players view adversary secret shares generated protocol feldman zn vss secret polynomial sharing random secret polynomial coefficients taken appropriate range statistically indistinguishable 
proof appears appendix may possible feldman vss prime field enables efficient proofs mentioned property sharing reveal mod additional information may weaken system way prove security 
need groups polynomial interpolation satisfy lagrangian coefficient component easily computed protocol decide vss back directly reconstruct expose shares option carry interpolation prime field prime chosen certain size 
definition vss see fm 
sharing phase input secret value nn composite element high order number players threshold value dealer carries steps 
choose nl define sl 
compute sl mod 
hand player value broadcast verification steps 
player verifies equation satisfied requests dealer public 

dealer broadcasts shares requested previous step fails 

player carries verification step public shares 
verification fails dealer 
reconstruction phase input high order element composite number players threshold values mod 
player broadcasts 
finds set size indices holds 
chooses prime nn computes secret gammaj gammaj mod fig 

feldman zn vss lemma 
assume elements 
maximal order values ff ff additional value mod possible compute values mod polynomial sl satisfies ff proof 
define polynomial ff gammaj gamma ff sl 
polynomial satisfies property ff remains shown compute raised coefficients polynomial 
rearranging terms coefficient ff gammaj computable known constants 
problem may arise need deal fractions extract roots infeasible solved choice element ak effectively computed follows ak ff gammaj ff gammaj ff 
ff gammaj 
ff gammaj proof robust threshold rsa protocol theorem 
assumption factoring intractable protocol described figures constant round secure robust threshold rsa scheme presence malicious faults total number players 
order prove security scheme simulation argument view adversary 
intuitively means adversary sees information corrupted players signature generate public information produced protocol 
simulator key distribution signature generation shown 
runs input elements value mod commitment key message signature 
proof theorem appears appendix proactive rsa previous section described robust threshold rsa property add proactive 
achieved changing representation key value 
current representation key dn change new new changed representation key need change representation back reasons contains current representation removed second need valid back new representation back worthless 
essence protocol player takes additive share key splits sub shares sum gives player sub share 
player adds subshares received order attain new share new time period 
players act properly clear see new sharing sharing key sharing totally independent previous sharing 
player share new additive share vss protocol generate share back 
assume players act properly add steps ensure correctness 
issues verification input elements commitment signing key mod number players threshold message signature mod step simulator corresponds numbered step appropriate protocol 
note information held solely players exposed simulate 
sim computation secret key distribution 
choose shares dn gamma nn gamman 
compute wn gamma gamma mod set wn dn public gamma mod 
feldman zn vss steps share value gamma results polynomials public information mod generate polynomial coefficients nl constant term 
set lemma input compute values mod signature generation 
compute oe mod gamma set oe oe public gamma oe mod 
execute simulation zero knowledge proof fig 

simulator key distribution signature generation 
sum sub shares generated value share verification easily achieved generating witness commitments new additive sub shares checking exponent distribution done properly 

second verification relates need ensure back generated vss fact new additive share held player 
note mentioned verification witness new additive share computation witness form new new mod furthermore vss protocol carried sharing secret product computation value sl mod order verify player shared correct value needs checked sl new mod share refreshing protocol update period 
public information element composite mod input player secret share mod 
player randomly chooses values gamman sets public gamma computes broadcasts mod 
player sends player value 
verification distribution proper share size public commitments verifies gamman mod requests public set raised public value 

cooperate step value reconstructed reconstruction phase 

verification sub shares fact sum previous share verifies public mod player share reconstructed reconstruction phase 

computes new share new note value new mod mod public shares feldman zn vss sharing phase 
results value sl mod secret shared 

fails share secret new sl mod player exposes fails expose reconstructed players 
fig 

share refreshing protocol theorem 
assumption factoring intractable protocol described figures constant round secure robust threshold proactive rsa scheme presence malicious faults total number players 
omit simulator lemmas related size shares fact repeated distribution signing key additive shares reveal statistically significant information 
proofs similar flavor ones appearing appear full 
acknowledgments special go rosario gennaro hugo krawczyk endless conversations topic 
jessica staddon comments earlier version 
bf boneh franklin 
efficient generation shared rsa keys 
crypto pages 
springer verlag 
lncs 
bgw ben goldwasser wigderson 
completeness theorems fault tolerant distributed computations 
proc 
th annual symp 
theory computing pages 
acm 
boy boyd 
digital multisignatures 
baker piper editors cryptography coding pages 
press 
canetti gennaro herzberg naor 
proactive security long term break ins 
cryptobytes 
ch croft harris 
public key cryptography re usable shared secrets 
baker piper editors cryptography coding pages 
press 
ch canetti amir herzberg 
maintaining security presence transient faults 
crypto pages 
springer verlag 
lncs 
cmi matsumoto imai 
efficient secure multiparty generation digital signatures discrete logarithms 
ieice trans 
fundamentals 
alfredo de santis desmedt yair frankel moti yung 
share function securely 
proc 
th annual symp 
theory computing pages 
acm 
des desmedt 
society group oriented cryptography new concept 
crypto pages berlin 
springer verlag 
lncs 
des desmedt 
threshold cryptography 
european transactions telecommunications july 
df desmedt yair frankel 
threshold cryptosystems 
brassard editor advances cryptology crypto pages berlin 
springer verlag 
lncs 
df desmedt frankel 
shared generation authenticators signatures 
feigenbaum editor advances cryptology crypto pages berlin 
springer verlag 
lncs 
dj desmedt jajodia 
redistributing secret shares new access structures applications 
tech 
report tr george mason university july 
ftp gmu edu pub jajodia ps gz 
fd yair frankel desmedt 
parallel reliable threshold multisignature 
tr april dept ee cs wisconsin 
fel feldman 
practical scheme non interactive verifiable secret sharing 
proc 
th annual focs pages 
ieee 
yair frankel gemmell mackenzie yung 
proactive rsa 
crypto pages 
springer verlag 
lncs 
frankel gemmell mackenzie yung 
optimal resilience proactive public key cryptosystems 
proc 
th focs pages 
ieee 
frankel gemmell yung 
witness cryptographic program checking robust function sharing 
proc 
th stoc pages 
acm 
fm feldman micali 
optimal algorithm synchronous byzantine agreement 
proc 
th stoc pages 
acm 
fra frankel 
practical protocol large group oriented networks 
eurocrypt pages 
springer verlag 
lncs 
galil haber yung 
cryptographic computation secure protocols public key model 
crypto pages 
springer verlag 
lncs 
gennaro jarecki krawczyk rabin 
robust threshold dss signatures 
eurocrypt pages 
springer verlag 
lncs 
gennaro jarecki krawczyk rabin 
robust efficient sharing rsa functions 
crypto pages 
springerverlag 
lncs 
har 
group oriented digital signature scheme 
iee proc comput digit tech sept 
amir herzberg jakobsson jarecki hugo krawczyk moti yung 
proactive public key signature systems 
acm conference computers communication security 
jakobsson jarecki krawczyk yung 
proactive rsa constant size thresholds 
manuscript 
oy ostrovsky yung 
withstand mobile virus attacks 
proc 
th podc pages 
acm 
proofs theorem lemmas section proof 
lemma denote set players adversary corrupted bad set maximal size jp bad prove high probability exists sharing polynomial satisfies player bad share received sharing equal share received sharing 
furthermore coefficients taken appropriate range 
define polynomial gamma bad holds 
defined polynomial points interpolate compute coefficients 
remains shown coefficients integers compute range 
gamma gamma non zero value evaluation point 
equal gamma gammaj gammaj coefficient jbj gamma gammaj pj gammaj value gammaj integer note 
coefficient integer 
furthermore coefficient bounded absolute value jbj gamma gamma gamma lt gamma 
gamma lt nl desired polynomial gamma coefficients integers range gamma nl nl nl nl 
probability coefficients right range nl nl nl ut proof 
theorem correctness robustness 
assume dealer carries protocol properly public mod vss corresponding player fact shares value easy see signature generation protocol computes correct value 
security 
give proof providing simulator protocol denoted sim simulates key distribution protocol signature generation protocol 
fixing adversary view adversary execution protocol view execution simulator indistinguishable 
assume adversary corrupts players analyze information viewed adversary generated execution protocol simulator 
secret key distribution 
random value nn value public random value gamman public gamman distributions statistically indistinguishable details clear 

values generated manner distribution gamma distribution public indistinguishable public distribution mod mod 
easily argued distribution mod ord distribution mod nn statistically indistinguishable dn indistinguishable dn resp 

simulator carries exactly protocol true execution input values distribution inputs protocol resulting information vss protocol distribution 
argument step follows lemma 
signature generation 
follows argument distribution 
argument step 
follows simulation proof ut relax assumption introducing verification steps key distribution phase 
players 
