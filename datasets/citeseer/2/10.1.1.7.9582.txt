searching random partially ordered sets extended carmo 


departamento de inform atica universidade federal centro polit da pr brazil www inf br renato inf br instituto de matem atica universidade de ao paulo rua mat ao ao paulo sp brazil www ime usp br mac jair ime usp br departamento de inform atica cia universidade cat rio de janeiro es de ao vicente rio de janeiro rj brazil www inf puc rio br info puc rio br 
consider problem searching element partially ordered set 
precisely address problem computing eciently near optimal search strategies typical partial orders 
consider classical models random partial orders random graph model uniform model 
shall show certain simple fast algorithms able produce nearly optimal search strategies typical partial orders models random partial orders consider 
instance algorithm random graph model produces linear time search strategy log log log queries optimal strategy partial orders elements 
need lg log queries element partial order result tells may eciently devise near optimal search strategies partial orders model problem determining optimal strategy np hard proved 
partially supported capes 
supported cnpq doctorate studentship proc 

partially supported mct cnpq programme proc 
cnpq cnpq proc 

fundamental problem data structures problem representing dynamic set way may eciently search arbitrary elements common assumption elements belong totally ordered set interested examining certain variant problem universe elements drawn partially ordered set 
fact address basic problem ciently computing near optimal search strategies typical partial orders classical models random partial orders random graph model uniform model 
problem consider intuitively speaking follows suppose partial order partial order wish construct search strategy arbitrary determines suppose access oracle replies case tells measure eciency number queries needs send oracle worst case maximize 
problem may summarized follows 
instance partial order size size directed acyclic graph representing hasse diagram 
solution search strategy 
aim minimize number queries worst case performance 
number steps needed compute kept low possible 
shall show certain simple fast algorithms able produce search strategies typical instances models random partial orders 

random graph model 
random graph model randomly select graph vertex set ng say partial order may reach increasing path graph 
fact consider random graphs density constant 
algorithm time linear size instance produces search strategy lg log log log queries worst case element partial orders model probability tending 

uniform model 
uniform model simply consider partial orders equiprobable 
situation somewhat di erent easy show element partial orders search strategy queries worst case 
consider slightly generous oracle partial orders admit search strategies require log queries 
search strategy may computed time 
result suppose query oracle replies case tells comparable generous oracle tells exactly possibilities holds previous oracle told holds 
need lg queries element partial order result tells may eciently devise near optimal search strategies partial orders rst model may devise search strategies partial orders second model worse optimal constant factor 
constants hidden big notation discussion large 
summarizing may compute essentially best possible search strategy random graph orders ii may compute constant factor approximation partial orders 
pleasant constrast fact determining optimal strategy np hard proved 
reader see quite surprisingly simple prove results 
de nitions notation partial order pair set binary relation anti symmetric transitive irre exive 
stands 
elements said comparable said incomparable chain set pairwise comparable elements antichain set pairwise incomparable elements height size maximum chain width size maximum antichain 
element maximal ideal set lter set denote resp 
minimal ideal resp 
lter resp 

text denote set integers fz yg de ne integer 
denote function satisfying lim 
problem searching partially ordered set stated follows 
partially ordered set nite set partial order induced 
goal determine element allowed pose queries elements query possible outcomes hit smaller meaning respectively 
search sequence queries allowing decide 
goal devise strategy querying elements way longest search poses smallest number queries 
strategy conveniently thought binary decision tree internal nodes labelled elements external nodes labelled pairs min max edges labelled 
path decision tree root internal node labelled represents successful search outcome path root external node labelled min max represents unsuccessful search outcome additional information min max de ne height binary decision tree length longest path root external node 
restate problem follows partial order compute binary decision tree minimum height denote number elements assume partial order directed acyclic graph edges vertices representing hasse diagram 
algorithm computing decision tree focus height ha tree construct number steps ta required construct tree 
note total order optimum decision tree usual binary search tree case dlg ne best possible values extreme antichain 
organization extended organized follows 
section mention relevant results context searching partially ordered sets 
section linear time algorithm building decision tree height surely bounded lg log log log random graph model element partial orders 
section log time algorithm building decision tree height surely bounded log uniform model element partial orders assuming search model generous oracle 
section general brie discuss connections results related problem proposed 
related shown problem searching partially ordered set np hard restricted case maximum element 
restricted case partial order maximum element tree called rooted tree variant solved polynomial time shown algorithm computing minimum height decision tree log 
algorithm yield easy way estimate cases instance complete binary tree decision tree built algorithm lg lg 
presents simpler algorithm case rooted tree computes time log decision tree height lg greater height optimum decision tree 
optimum decision tree height lg algorithm constitutes approximation algorithm problem 
case maximum element maximum degree studied shown log upper bound height optimum decision tree improves best possible previous bound 
lipman optimized exponential time algorithms building decision trees searching general partially ordered sets 
considered minimization expected path length decision tree 
linial saks consider di erent related problem motivated setting suppose real matrix say distinct entries known increasing rows columns suppose wish decide real number occurs goal devise search strategy minimizes number inspections entries worst case 
looks matrix product chains length problem may thought problem searching partially ordered set 
underlying assumption entries come totally ordered set turns di erent problem discuss section 
linial saks see determined bounds arbitrary orders studied detail case product chains case rooted tree 
random graph model partial order denote max set maximal elements consider recursive decomposition antichains max max 
height max jl call set layer possible adaptation usual binary search strategy case partial orders may described follows 
algorithm 
index layer divides parts jsj elements jsj jsj 
denote halves respectively 

perform query lm outcome queries hit search outcome queries smaller restart search restricted outcome queries restart search restricted call strategy extended binary search denote algorithm computes respective decision tree 
clearly hb dlg layering produced time building tree takes step element tb 
turn attention strategy suppose fd fd case de ne segments fd formulate algorithm takes advantage structure 
algorithm 
perform usual binary search fd minimum index index 

perform extended binary search segment ha dlg ke max hb js lg lg max js tree built tb steps 
sections introduce random graph order model partial orders show model surely ha lg log log log random graph model random graph order probability space denoted probability space partial orders obtained independently choosing pair jg probability transitive closure resulting relation 
denote generic partial order say dominating call dominating element dominating 
conditional probability dominating dominating leads dominating dominating induction dominating 
note strictly decreasing function de ne lim lemma 
probability dominating 
consequence note expected number dominating elements greater 
setting fd dominating elements meet necessary conditions applying algorithm follows show decision tree built surely small height showing size segment size layer suitably small 
show size segment large show large intervals free dominating elements show size layer large large antichains size segments 
consider case dominating 
case minimum dominating dominating 
call barrier domination barrier dominating dominating dominating probability dominating dominating barrier barrier barrier mg events dominating mutually independent convenience denote set dominating dominating elements jmj jmj jm put lg lg theorem 
lg probability set dominating element 
proof 
lg jm probability dominating element lg probability dominating elements set fx idg satisfying dm lg lg lg lg lg lg lg ut corollary 
probability segment size lg 
proof 
fs segments js lg js lg ut size layers 
consider layer antichain direct result barak erd os 
theorem barak erd os 
probability antichain size larger kn lg tends zero 
decision tree tall 
position prove main result section 
theorem 
decision tree built algorithm height surely bounded lg log log log 
proof 
random variable value height decision tree built algorithm input noted lg lg max js size greatest layer segments height 
corollary tells max js lg theorem gives lg function satisfying lim 
max js lg lg max js lg lg conclude lim lg lg lg lg ut uniform model section study problem searching typical partial order uniform model 
start stating de nitions key auxiliary result 
denote set partial orders 
uniform distribution making partial order equally uniform model random partial orders random element model denoted un known un strong structural property describe 
fx partition set partial orders satisfying conditions partial orders said layered 
answering question typical partial order look kleitman rothschild proved surprisingly partially ordered sets layered 
theorem kleitman rothschild 
suppose 
partial order lies partition fx jx jx theorem problem searching typical partial orders posed section uninteresting search model unavoidable query maximal elements order 
theorem tells orders elements 
problem interesting consider variation search model query possible outcomes smaller greater hit meaning respectively comparable strategy accordingly rede ned decision tree described previously di erence internal node children 
section shall prove possible uniform model construct ternary decision tree height log time log 
rst de nition disjoint sets set layered orders set partial orders partition fx natural correspondence devise search strategy layered order composition search strategies layered orders applying induced strategy searching simple start making assumption verify means series queries elements way know case restart algorithm oles exchanged done conclude algorithm search layer say starts setting proceeds phases 
algorithm querying phase step 
choose js js minimal 

query answer hit search answer smaller replace js restart answer replace js restart 
procedure repeated reach point point go phase 
sweeping phase 
query answer hit search proceed 
search conclude call size set ith step querying phase size set sweeping phase number queries querying phase 
clear height decision tree corresponding procedure bounded note choice step querying phase accomplished jx steps 
discussion conclude possible construct decision tree height done time jx point de ne binomial probability model layered orders independently choosing probability 
shall show model 
jx 
log jx 
sizes theorem show log natural correspondence product space uniform probability space 
hand theorem standard argument give event certain space xed partition theorem event certain event un details nal version extended 
remaining section concentrate proving relevant results kleitman rothschild theorem 
follows assume ds ji sj number elements smaller reader may notice easy prove analogous versions proposition corollary interchanged 
proposition corollary obviously remain true consider proposition 
surely xed jsj probability vertex jsj ds jsj exp 
jx proof 
fix cherno inequality jd jsj exp jsj expected value ds 
jsj ds jsj exp 
jx required 
ut corollary 
de ned preceding discussion surely holds 

jx 
log jx proof 
prove observe probability jsj ds jsj jsj jsj ds jsj jsj jx jx exp ln jx jg jx exp ln jx ln jx jg prove suces notice 
probability point step querying phase choose jsj js jsj log jx ds jsj jsj jx cases step algorithm reduced search space factor 
log jx ut theorem 
un admits ternary search tree height log constructed time 
concluding remarks observe may study uniform model conditioning having sparser partial orders 
carry investigation results crucial 
shall come back 
arguments proofs corollary preceding lemmas theorems adapted rewritings arguments lemma theorems 
results structure random graph orders rst suggested authors idea algorithm 
consider case depend noted results imply remain valid case decreasing function long lg 
worth noting theorem part deeper investigation width random graph orders stronger result proven width random graph order determined random variable value surprisingly surely kn 
mentioned section linial saks consider di erent related problem set assumed totally ordered relation partial order compatible total order query respect total order induced respect relation case 
see turns de ne di erent problem consider information gained search query outcome smaller problem outcome con ne remaining search problem case query respect underlying total order outcome smaller leaves elements valid candidates 
presenting explicitly algorithm compute optimal decision tree problem consequence results height optimal decision tree problem satis es lg lg number ideals lg lg 
note fact lead similar results section consider problem random graph order model 
brie discuss 
rede ne element dominating comparable element segment interval free dominating elements 
possible search strategy isolating segment means binary search restricted dominant elements order searching segment 
ideal partial order uniquely determined antichain maximal elements 
number ideals segment bounded number antichains contains width order jrj jrj bounds theorem allows conclude decision tree height lg kw lg jrj conclude partial order decision tree height lg lg size largest segment order 
argument leading theorem proves result dominating elements de ned value course say theorem gives lim lg lg lg lg 
binary searching posets 
submitted publication 
linial saks searching ordered structures 
journal algorithms 
ben asher newman optimal search trees 
siam journal computing 
ben asher cost searching general trees versus complete binary trees 
technical report technical report research center 
lipman minimum average cost testing partially order 
ieee transactions information theory 
linial saks poset central element 
journal combinatorial theory series 
barak erd os maximal number strongly independent vertices random acyclic directed graph 
siam journal algebraic discrete methods 
kleitman rothschild asymptotic enumeration partial orders nite set 
trans 
amer 
math 
soc 

carmo searching random partially ordered sets 
preparation 
pr steger counting partial orders xed number comparable pairs 
combin 
probab 
comput 

pr steger phase transitions evolution partial orders 
combin 
theory ser 

bollob structure random graph orders 
siam journal discrete mathematics 
