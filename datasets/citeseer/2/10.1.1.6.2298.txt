hr program theorem generation simon colton division informatics university edinburgh uk 
dai ed ac uk automated theory formation involves production objects interest concepts objects conjectures relating concepts proofs conjectures 
group theory example objects interest groups concepts include element types subgroup types conjectures include implication conjectures theorems proved non theorems disproved 
similar zhang mcs program hr system named mathematicians hardy ramanujan performs theory formation mathematical domains 
works mace model generator generate objects interest axiom sets ii performing concept formation conjecture making iii otter theorem prover prove conjectures 
domains otter mace ective hr produce large numbers theorems testing automated theorem provers smaller numbers prime implicates represent fundamental facts domain 
explain hr operates give details representative session 
discussed applications hr automated reasoning include generation constraints constraint satisfaction problems generation lemmas automated theorem proving production benchmark theorems tptp library test problems atp systems 
hr java program available download www dai ed ac uk research hr 
automated theorem generation initialising axioms hr background information number di erent formats 
particular form theory bare minimum domain axiom set supplied mace input syntax 
hr calls mace order produce single model satisfying axioms rst object interest theory 
ags hr asks mace look model size nds single stopping size 
mace presents model terms concepts embedded axioms ring theory mace produces single ring size described concepts addition multiplication operations additive inverse elements additive identity 
initialise theory hr takes concepts mace output initial concepts domain uses model mace output calculate rst examples concepts 
concepts conjectures built initial concepts 
supported epsrc gr 
inventing concepts hr invents concepts passing old concepts production rules prs 
mechanism described detail give brief overview prs 
match pr equates variables de nitions start multiplication operation group theory equate invent concept idempotent elements 
compose pr uses conjugation compose old concepts new describes objects satisfying de nitions 
example starts concept self inverse elements group theory composes squaring operation produce square self inverse elements elements square give self inverse element 
negate pr negates certain clauses de nition produces concept non self inverse elements 
exists production rule introduces existential quanti cation de nition 
example pr invents concept elements appearing diagonal group multiplication table 
production rules count set sizes introduce constants produce concepts easily expressible rst order provers omit details 
intend enable hr extract concepts proofs 
theory formation driven heuristic search interesting concepts build new concepts interesting ones 
heuristic measures include properties concepts complexity de nition properties conjectures concepts details 
previous versions hr order avoid repetitions speci ed forbidden paths routes hr allowed take certain concepts produced way 
interfered heuristic search hindering development interesting concepts 
removed forbidden paths enabled hr eciently prune concepts de nition stage 
invents concept de nition previous new concept discarded 
hr invents concept negation con ict function con ict concept discarded concepts trivially examples 
empirical conjecture making new concept passes pruning stage hr calculates examples situations occur 
rst case example set empty hr non existence conjecture stating concept de nition inconsistent axioms 
example hr invents concept non identity idempotent elements nd conjecture 
id 
proved non existence theorems prune concepts de nition stage show concept examples examples calculated 
second case example set exactly concept theory hr equivalence conjecture new old concepts logically equivalent de nitions 
example group theory hr invents concept idempotent elements notices groups idempotent elements identity elements conjecture identity 
third case example set non empty di erent previous concepts hr adds concept theory 
endeavours nd conjectures new concept 
hr looks subsumption conjectures nding old concepts examples subset examples new concept 
nds implication conjecture de nition old concept implies de nition new concept 
accordingly hr appropriate implication conjecture old concept examples superset examples new concept 
extracting prime implicates implication conjecture form hr extracts implicates 
left hand right hand implication conjectures equivalence conjecture dealt similarly 
non existence conjecture form hr extracts implicates form 
hr discards implicate proved stronger conjecture goal subset premises 
implicate survives hr employs otter try prove time limit set user usually seconds 
implicate true hr tries extract prime implicates implicate theorems subset premises implies goal 
sophisticated methods nding prime implicates hr employs naive search prime implicates otter try prove larger subsets premises imply goal stopping subset subset entire set premises 
introducing counterexamples hr employs mace nd counterexample implicate extracted empirical conjectures otter fails prove 
counterexample added theory examples concepts re calculated similar non theorems avoided 
prime implicates extracted implicates assumed false otter prove mace nd counterexample 
extracted prime implicates supported empirical evidence practice simply stated otter prove quickly false vast majority cases see exception rule 
representative session ran hr rng ring theory axioms tptp library theory formation steps took seconds pentium ghz processor 
compose match exists negate prs breadth rst search interested nding prime implicates interesting concepts 
steps resulted concepts discarded due de nitions resulted new concepts resulted equivalence conjectures resulted non existence conjectures 
highlights fair amount redundancy theory formation steps resulted discarded concepts 
fortunately steps carried quickly 
high number equivalence conjectures indicative algebras constrained axioms concepts proved equivalent 
low number non existence conjectures rings additive identity rare concept satis ed identity element derivative 
non existence equivalence conjectures hr extracted proved prime implicates proof length indicating complexity theorem 
prime implicates easy otter prove managed tax 
theorem proof length longest dicult prove conjectures involved addition multiplication operations 
mace introduced counterexamples non theorems models size size models size model size conjecture disproved 
id inv applications automated theory formation potential automated reasoning 
firstly hr improve eciency solving constraint satisfaction problems csps 
hr extracts concepts axioms basic csp speci cation forms theory 
various measures interestingness hr identify concepts theorems additional constraints csp 
interpreted constraints theorems added implied constraints loss generality 
contrast concepts suggest induced constraints act case splits problem 
adding implied induced constraints dramatic ect time taken solve csp 
example qg quasigroups element appears row column additionally hr identi ed erent constraint diagonal multiplication table ii symmetry constraint diagonal iii qg quasigroups anti abelian additional constraints greatly improved eciency producing times speedup solution sizes 
hr generate benchmark problems tptp library theorems atp systems de facto standard assessing atp systems 
challenge hr nd theorems state art provers able prove 
working group theory rst attempt involved brute force search theorems 
gave hr non isomorphic groups order turned theorem proving counterexample nding abilities 
discussed hr produced distinct equivalence conjectures minute session 
passed geo maintains tptp library tested gandalf otter provers 
able prove rated rated provable provers respectively accepted tptp library 
challenge nd theorems prove 
working group theory added hr software bus gave hr direct access loop 
allowed provers seconds prove theorems ran hr produced equivalence conjectures 
managed produce just theorems proved prove seconds including id id third application automated theorem proving 
axioms theorem hr form theory containing prime implicates theory described 
proof lengths select certain prime implicates added original problem lemmas 
aim show time hr compensated decrease time taken prove theorem sets theorems lemmas added 
positive results group theory tptp theorems supplied hr initial application tptp ring theorems supplied hr successful 
working atp designers hope hr generate choose lemmas intelligently improve results 

colton 
automated theory formation pure mathematics 
phd thesis department arti cial intelligence university edinburgh 

colton bundy walsh 
automatic identi cation mathematical concepts 
machine learning proceedings th international conference 

colton bundy walsh 
notion interestingness automated mathematical discovery 


colton miguel 
constraint generation automated theory formation 
proceedings cp 

colton automatic generation benchmark problems atp systems 
proceedings th symposium ai mathematics 

andreas franke michael 
agent communication layer distributed automated theorem proving 
cade 

jackson 
computing prime implicates incrementally 
cade 

mccune 
otter user guide 
technical report anl argonne national laboratories 

mccune 
davis putnam program application nite rst order model search 
technical report anl mcs tm argonne national laboratories 


tptp problem library cnf release 
journal automated reasoning 
www cs miami edu tptp 

zhang 
mcs model conjecture searching 
cade 
