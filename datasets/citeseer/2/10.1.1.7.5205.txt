network traffic anomaly detection packet bytes hostile network traffic different benign traffic ways distinguished knowing nature attack 
describe stage anomaly detection system identifying suspicious traffic 
filter traffic pass packets interest packets incoming server requests 
second model common protocols ip tcp telnet ftp smtp packet byte level flag events byte values observed long time 
simple system detects attacks darpa ids evaluation data set false alarms training week attack free traffic 

network intrusion detection systems classified signature anomaly 
signature detector snort bro examines traffic known attacks rules written security experts 
new type attack discovered new rules written distributed 
anomaly detection system spade adam nides models normal traffic usually distribution ip addresses ports 
hostile traffic falls outside distribution 
anomaly detection advantage rules need written detect novel attacks 
disadvantages say nature attack novel normal traffic may deviate model generating false alarms 
anomaly detector bring suspicious traffic attention network security expert needs done 
mahoney chan identify types anomalies hostile traffic 
user behavior 
hostile traffic may novel source address comes unauthorized user restricted password protected service 
probes may attempt access nonexistent hosts services generating anomalies destination addresses port numbers 
bug exploits 
attacks exploit errors target software example buffer overflow vulnerability 
errors features permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sac melbourne florida usa acm matthew mahoney florida institute technology melbourne florida cs fit edu program error discovered normal fixed version 
remaining errors invoked unusual inputs long argument seldom command occur normal 
response anomalies 
target generate anomalous outgoing traffic response successful attack example mail server passing root shell command responses back attacker 
analogous forrest host detection method server compromise detected unusual sequences system calls 
bugs attack 
attackers typically implement client protocols fail duplicate target environment necessary 
example text protocols ftp smtp allow uppercase lowercase commands 
attacker may lowercase convenience normal clients uppercase 
evasion 
attackers may deliberately manipulate network protocols hide attack improperly coded intrusion detection system ids monitoring application layer 
methods include ip fragmentation overlapping tcp segments match deliberate bad checksums short ttl values 
events rare normal traffic ids written handle properly 
variety anomalies sense examine attributes possible just packet ports addresses systems 
rates types network events vary unpredictably wide range time scales time dependent model probability event depends time occurred average rate 
idea attribute takes novel value seen data suspicious 
rest organized follows 
section describe related network anomaly detection 
section describe network traffic anomaly detector netad flags suspicious packets unusual byte values network packets 
section evaluate netad darpa evaluation data set 
section summarize 

related network intrusion detection systems snort bro hand written rules detect signatures known attacks specific string application payload suspicious behavior server requests unused ports 
anomaly detection systems spade adam nides learn statistical model normal network traffic flag deviations model 
models usually distribution source destination addresses ports transaction tcp connections udp icmp packets 
example spade offers probability models estimated average frequency incoming tcp connections destination address destination port source address destination address destination port source address source port destination address destination port bayes network approximation 
lower probabilities result higher anomaly scores presumably hostile 
adam classifier trained known attacks presumably attack free traffic 
patterns match learned category flagged anomalous 
adam models address subnets prefixes addition ports individual addresses 
nides spade adam models ports addresses flagging differences short long term behavior 
spade adam nides frequency models probability event estimated average frequency training 
time models probability event depends time occurred 
attribute collect set allowed values observed training flag novel values anomalous 
specifically assign score tn novel valued attribute time attribute anomalous training testing number training observations size set allowed values 
note average rate anomalies training attributes high generate anomalies testing ought score high 
factor model timedependent yielding higher scores attributes anomalies long time 
differ attributes monitor 
packet header anomaly detector attributes corresponding ethernet ip tcp udp icmp packet header fields 
builds single model network traffic incoming outgoing 
application layer anomaly detector models incoming server tcp requests source destination addresses ports opening closing tcp flags list commands word line application payload 
depending attribute builds separate models target host port number service host port combination 
learning rules anomaly detection models tcp connections samples training data suggest large subsets model 
example samples port requests host suggest rule requests host builds port model host 
tested darpa line intrusion detection evaluation data set training week attack free traffic inside sniffer week testing weeks traffic weeks containing detectable instances attacks 
darpa data set uses variations exploits taken public sources attack systems running sunos solaris linux windows nt cisco router ethernet network simulated internet connection background traffic 
threshold allowing false alarms detects attack instances detects results merged detects 
table shows results top systems submitted organizations participated original evaluation 
systems variety techniques host network signature anomaly detection 
number detections shown total number instances system designed detect 
counts attacks visible examined data types specified developer probe denial service dos remote local user root 
evaluated similar criteria authors evaluations blind independent 
developers able tune systems test data 
system detections expert expert forensics table 
top percentage attacks detected darpa ids evaluation false alarms total number attacks designed detect table 

netad model netad network traffic anomaly detector detects anomalies network packets 
differs follows 
traffic filtered start incoming server requests examined 

starting ip header treat bytes attribute models parse packet fields 

separate models corresponding common protocols ip tcp 

anomaly score tn modified things score rare necessarily novel events 

traffic filtering stage netad filter uninteresting traffic 
attacks initiated target server operating system usually sufficient examine packets incoming server requests 
filters traffic generate false alarms speeds processing 
netad removes data 
non ip packets arp hub test 
outgoing traffic means response anomalies detected 
tcp connections starting syn ack packet indicating connection initiated local client 
normally attacks initiated remotely server 
ack scans missed 
udp high numbered ports 
normally client dns resolver 
tcp starting bytes determined sequence number 
hash table store starting tcp syn sequence number source destination address port combination 
small amount packet loss due hash collisions 
packets address port protocol combination tcp udp icmp received seconds 
hash table collision detection index queue packet times 
limits packet floods 
packets truncated bytes netad uses bytes 

netad attributes netad models attributes consisting bytes packet starting ip header 
byte treated nominal attribute possible values 
tcp packet attributes usually bytes ip header bytes tcp header bytes application payload 
tcp syn request open packet usually contains tcp options bytes application data go 
packet bytes long extra attributes set 

netad models netad separately models subsets filtered traffic corresponding common packet types follows 
ip packets including tcp udp icmp 
tcp packets 
tcp syn packets flags set normally packet usually containing tcp options payload 
tcp ack packets normally second subsequent packets contain payload 
tcp ack packets ports 
tcp ack port ftp 
tcp ack port telnet 
tcp ack port smtp mail 
tcp ack port 
packet may belong subset 
instance data packet tcp ports tcp ack tcp ip 
model anomaly score computed sum assigned packet 
reason modeling ports ease implementation 
packet type distinguished examining attribute byte 
instance ports distinguished tcp ack packets examining upper byte destination port number 

netad anomaly score recall anomaly score tn summed attributes time attribute anomalous training testing number training instances number allowed values netad 
improvements tn anomaly score 
reset number training examples back anomaly occurs training 
training data contains attacks know anomaly false alarm 
effect reduce weight attribute 
call new score tn number training packets anomaly training period 
note different continues change test period 
netad uses packet count real time compute 
second improvement decrease weight rules number allowed values near maximum 
large suggests nearly uniform distribution anomalies little value 
anomaly score tn small approximately tn 
third criticism ignore frequency events 
value occurs training anomaly score 
correct add second model time packet count modeled subset value observed training testing frequency training number times observed training packets 
score highest values seen long time large occur rarely small 
term prevents division novel values 
preferred simple count offset novel events reduces value large small netad anomaly score packet tn summation subset attribute combinations 

experimental results netad tested evaluated conditions identical 
trained inside week darpa ids evaluation data set containing attacks tested weeks containing detectable attacks 
labeled attacks inside traffic missing day week day containing attacks leaving 
unlabeled attack apache examining test data external attacks router visible inside local network 
leaves detectable attacks 
attack counted detected ids identifies target address target address multiple targets time seconds portion attack 
criteria original darpa evaluation 
alarm identifying target second period highest scoring alarm evaluated discarded 
technique reduce false alarm rate ids multiple detections attack counted false alarm counted separately 
experiments darpa data set simulation artifact ttl field ip header attacks easy detect field set evaluations 

effects filtering traffic filtering traffic described section reduces darpa training data inside week gb mb test data inside weeks gb mb 
total number packets reduced 
reduced data detects attacks runs times faster seconds mhz pc 
table shows number attack instances detected netad various models section threshold varied allow false alarms 
model number packets training plus test shown run time filtering 
filtering bound step dominates total run time similar run time unfiltered data seconds 
run times seconds implementation line program running mhz windows 
filtering program lines 
rows show number attacks detected equation evaluated entire set packets just subsets described section 
set increasingly restricted number false alarms drops increasing number detections fixed false alarm rate 
line shows results netad scores subsets added 
false alarms netad detects attacks 
model packets sec 
unfiltered ip tcp models table 
packets run time number attacks detected threshold varied produce false alarm rates various models 

effects scoring function table shows effects changes anomaly score progressing tn equation 
shows modeling novel events tn low frequency events effective improvements described section improves score 
low frequency model effective false alarms darpa data combining models effective false alarms 
scoring function tn tn tn netad tn table 
number attacks detected false alarms various anomaly scoring functions 

effects attacks training real setting explicit training test data available 
just network traffic contain unknown attacks time 
approach problem assume rate attacks low relative volume normal traffic leave netad training mode times 
equation applicable mode 
unfortunately fail identify anomalous data hostile anomalies added model instances similar attacks missed 
table shows effects leaving netad training mode attack period weeks 
results bad expect 
types attacks darpa data set identical signatures expect detect instance 
differences instances detect instances false alarms netad left training mode weeks instances realistic case attacks immediately start training 
week weeks train test train train train table 
number attacks detected false alarms netad left training mode 

analysis detected attacks table lists number detections false alarms category attack 
value shown fraction detectable attacks 
netad network intrusion detection systems performs poorly attacks attacker shell access gains access user usually root admin 
detecting attacks requires ids interpret user commands entered locally hidden secure shell 
netad detects attacks anomalous source addresses attacker logs uploads exploit code ftp server normally downloads 
data attack authorized user copies transmits secret data violation security policy 
category poorly detected includes detectable instances attack types original evaluated systems able detect half instances 
netad detects rate attacks indicating lot overlap attacks detected netad techniques signature host 
suggests integrating netad existing systems improve detection rate 
attack category detected false alarms probe denial service dos remote local user root data total poorly detected table 
attacks detected category 
table shows type anomaly number attack types instance detected contributing anomaly score packet 
example source ip detects types 
type number detected means shown total number detectable attacks 
attacks detected attribute case numbers shown 
example netad detects instances record detections packet sizes detections detected unusual tcp flags 
source address far frequent contributor detection 
followed tcp window size field number unrelated attacks 
looked simulation artifact ttl reran netad field zeroed decreased number detections false alarms 
attribute attack types detected total number types category detected detectable source ip probe ls satan dos address apache smurf dict guest imap eject perl ps xterm data secret tcp window probe ls dos apache neptune phf packet size probe dos back land neptune pod smurf named payload dos back neptune named sendmail destination dict perl xterm fragmented dos pod teardrop tcp flags probe urgent data dos tos coincidental probe detected dos table 
number attack types partially detected attribute false alarms 
attack types detected 
delivers exploit email html 
backdoor communication attacker web client requests 
netad misses monitor outgoing traffic incoming client responses 
generate traffic directly theoretically detected reboot target interrupting tcp connections 
external router attack visible inside sniffer 
hard detect 

concluding remarks netad network anomaly detector describe nature attack indicate event hostile 
just finds unusual interesting events vast amount data brings attention network security expert analysis 
meant supplement replace existing security tools methods code reviews encryption firewalls virus detectors 
security tools requires investment time effort 
challenge filtering minimize effort 
netad reasonably simple fast filter locates hostile events darpa ids evaluation data set 
caution data synthetic 
privacy concerns real traffic generally available study 
great care taken darpa background traffic realistic discovery simulation artifacts ttl window size attacks easier detect disturbing 
furthermore traffic characteristics probably changed somewhat example increased encrypted protocols inaccessible ids 
currently collecting analyzing real traffic study effects 
acknowledgments research partially supported darpa 
wish philip chan collaboration research helpful comments 
anderson detecting unusual program behavior statistical component generation intrusion detection expert system nides computer science laboratory sri csl may 
www sdl sri com papers sri sri pdf forrest hofmeyr somayaji longstaff sense self unix processes proceedings ieee symposium computer security privacy 
ftp ftp cs unm edu pub forrest ieee sp unix pdf handley paxson network intrusion detection evasion traffic normalization protocol semantics proc 
usenix security symposium 
kendall database computer attacks evaluation intrusion detection systems masters thesis mit 
lippmann darpa line intrusion detection evaluation computer networks 
mahoney chan packet header anomaly detection identifying hostile network traffic florida tech 
technical report cs fit edu tr mahoney chan learning models network traffic detecting novel attacks florida tech 
technical report cs fit edu tr mahoney chan learning nonstationary models normal network traffic detecting novel attacks edmonton alberta proc 
sigkdd 
paxson vern bro system detecting network intruders real time lawrence berkeley national laboratory proceedings th usenix security symposium jan san antonio tx paxson vern sally floyd failure poisson modeling ieee acm transactions networking 
thomas timothy insertion evasion denial service network intrusion detection january www com mirror evasion html martin snort lightweight intrusion detection networks proc 
usenix lisa seattle nov 
sekar fast automaton method detecting anomalous program behaviors 
proceedings ieee symposium security privacy 
spade silicon defense www com software spice 
