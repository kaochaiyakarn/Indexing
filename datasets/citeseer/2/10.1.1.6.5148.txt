ieee journal selected areas communications vol 
august evaluation characterization available bandwidth probing techniques hu student member ieee peter steenkiste senior member ieee packet pair mechanism shown reliable method measure bottleneck link capacity network path measuring available bandwidth challenging 
modeling measurements simulations better characterize interaction probing packets competing network traffic 
construct simple model understand competing traffic changes probing packet gap single hop network 
gap model shows initial probing gap critical parameter packet pairs estimate available bandwidth 
insight available bandwidth measurement techniques initial gap increasing igi method packet transmission rate ptr method 
extensive internet measurements show techniques estimate available bandwidth faster existing techniques pathload comparable accuracy 
internet measurements ns simulations explore measurement accuracy active probing affected factors probing packet size length probing packet train competing traffic links tight link 
index terms active probing available bandwidth internet network measurement 
characterizing network available bandwidth problem intellectually intriguing practical importance 
scale internet traffic volume diversity network technologies challenging task 
furthermore regular internet users access network internals adding complexity understanding characterizing modeling performance internet 
problems characterizing latency bottleneck link capacity received lot attention question interest applications bandwidth available internet path 
techniques estimating available bandwidth factors affect measurement accuracy open questions 
questions focus 
network measurement techniques classified categories passive measurement active probing manuscript received august revised 
supported part defense advanced research project agency contract monitored afrl rome ny contract monitored rome laboratory air force materiel command usaf 
hu computer science department carnegie mellon university pittsburgh pa usa mail cs cmu edu 
steenkiste school computer science department electrical computer engineering carnegie mellon university pittsburgh pa usa 
digital object identifier jsac ieee 
passive measurement tools trace history existing data transmission 
potentially efficient accurate scope limited network paths carried user traffic 
active probing hand explore entire network 
packet pair technique popular active probing techniques 
basic idea packet pairs sender sends pair packets echoed back destination 
measuring changes packet spacing sender estimate bandwidth properties network path 
packet pair mechanism reliable method measuring bottleneck link capacity network path measure available bandwidth mixed results :10.1.1.17.2405
define terms available bandwidth bottleneck link tight link precisely 
consider path includes links capacities traffic loads links define bottleneck link tight link defined part assume tight link bottleneck link consider case different section viii 
unused bandwidth tight link called available bandwidth path 
available bandwidth defined generally equal achievable bandwidth application 
applications fully utilize unused bandwidth due factors small receive socket buffer packet reordering may limit transmission control protocol tcp throughput 
contributions 
develop single hop gap model captures relationship competing traffic throughput change packet pair gap single hop network 
gap model help understand interaction probing packets competing traffic identify conditions packet pair gap accurately characterize competing traffic 
second insights gained gap model develop packet pair techniques initial gap increasing igi packet transmission rate ptr characterize available bandwidth network path 
techniques experimentally determine initial packet pair gap yield high correlation competing traffic throughput bottleneck link packet gap destination 
ieee journal selected areas communications vol 
august comparing available bandwidth tcp throughput show relative measurement error terms tcp performance generally 
show measurement techniques discussed faster existing methods pathload comparable measurement accuracy :10.1.1.168.4807
third explore packet train parameters affect measurement accuracy 
internet measurements show probing packet size byte results best accuracy 
show length probing packet train adjusted burstiness competing traffic 
furthermore study potential igi ptr detect relative burstiness internet background traffic important metric may interest applications 
simulations quantify various factors impact accuracy algorithms multihop networks 
specifically look network paths tight link bottleneck link paths links tight link carry significant amount traffic 
show effects reduce accuracy algorithms impact minimal current internet 
organized follows 
discuss related section ii 
section iii introduce gap model 
igi ptr algorithms introduced section iv 
performance evaluation methodology section evaluation includes parts section vi studies performance properties igi ptr include comparison tcp throughput pathload measurement 
section vii studies impact igi ptr parameters probing packet size probing packet train length accuracy algorithms 
section viii uses simulation quantify possible sources error igi ptr multihop network 
conclude section ix 
ii 
related problem estimating bottleneck link bandwidth active probing studied 
classifies tools single packet methods packet pair methods 
single packet methods estimate link capacity measuring time difference round trip time rtt individual link link 
requires large numbers probing packets filter effect factors queueing delay 
single packet tools include pathchar clink pchar 
packet pair methods send groups back back packets packet pairs server back sender 
pointed earlier study tcp dynamics spacing packet pairs determined bottleneck link preserved links higher bandwidth 
example tools include probes packet pairs bprobe nettimer :10.1.1.17.2405
tools statistical methods estimate bandwidth assumption common value packet pair gap captures bottleneck link transmission delay 
practice interpreting packet pair measurements difficult 
pathrate addresses challenges fig 

interleaving competing traffic probing packets 
initial gap 
probing packet length output link 
gap interleaving competing traffic 
competing traffic throughput 
refer fig 
symbols definition 
explicitly analyzing multimodal nature packet gap distribution 
characterizing available bandwidth difficult dynamic property depends factors 
dynamic nature available bandwidth averaged time interval 
active measurement techniques packet trains longer sequences packets 
typical example packet bunch mode pbm method 
extends packet pair technique different sized groups back back packets 
routers network implement fair queueing bandwidth indicated back back packet probes accurate estimate fair share bottleneck link bandwidth 
example cprobe sends short sequence echo packets hosts :10.1.1.17.2405
assuming fair queueing occurs short packet sequence cprobe provides estimate available bandwidth path hosts 
treno uses tcp flow control congestion control algorithms estimate available bandwidth 
mentions technique estimating available bandwidth asymptotic dispersion rate adr method 
part related adr share view adr reflects effect competing sources transmission path 
identify initial probing packet gap critical parameter selected dynamically order achieve accuracy 
pathload characterizes relationship probing rate available bandwidth measuring way delay probing packets :10.1.1.168.4807
trying different probing rates reasonable estimate available bandwidth 
closest topp method 
method provides theoretical model relationship available bandwidth probing packet spacing points 
simulations validate method 
methods analyze relationship probing trains available bandwidth analysis capture fine grain interactions probes competing traffic 
useful example understand limitations techniques 
iii 
single hop gap model idea packet pairs measure available bandwidth probing host send pair packets quick succession measure packet pair gap changed fig 

probing packets travel network packets belonging competing traffic may inserted increasing gap 
result gap value destination may function competing traffic rate making possible estimate amount competing traffic 
hu steenkiste evaluation characterization available bandwidth probing techniques fig 

single hop gap model 
output gap affected dqr proportional 
transmission delay defined time packet placed link sender 
practice way competing traffic affects packet pair gap complex suggested 
section describe evaluate simple model captures accurately relationship gap value competing traffic load single hop network 
single hop gap model dimensional graph fig 
shows output gap value function queue size competing traffic throughput model assumes routers fifo queueing probing packets size 
assumes competing traffic constant interval arrival packet interval order ms reasonable assumption 
model regions 
described key difference regions packets fall queueing period 
queueing period defined time segment queue empty consecutive queueing periods separated time segment queue empty 
reason call regions model disjoint queuing region dqr joint queuing region 
queue empty leaves router arrives assuming constant short interval find empty queue 
means output gap initial gap minus queueing delay conditions queue empty arrives 
arrives router needs finish tasks processing queue processing processing competing traffic arrives probing packets 
router time complete operations condition corresponds triangular dqr fig 

region output gap independent competing traffic throughput refer dqr equation 
conditions arrives router queue empty 
assume constant means queueing period 
output gap consists time segments time process time process competing traffic arrives probing packets 
region output gap region output gap increases linearly competing traffic throughput equation referred equation 
model clearly identifies challenge packet pairs estimating competing traffic throughput 
packet pair happens operate dqr bottleneck router output gap bear relationship competing traffic equation user know region applies yield incorrect result 
furthermore estimate obtained single packet pair provide average competing traffic short period 
competing traffic fluctuate general want average results multiple samples corresponding independent packet pairs 
course increases chance samples fall dqr 
probing packet trains equation shows estimate competing traffic throughput initial gap output gap bottleneck gap single hop gap model assumes competing traffic smooth packet stream 
practice competing traffic flow bursty single pair probing packets capture average throughput competing traffic 
deal problem people packet train longer sequence evenly spaced packets 
single hop gap model directly apply packet train 
main problem pairs packet train independent 
example packet pair train captures burst packets ieee journal selected areas communications vol 
august competing flow highly adjacent pairs see competing traffic see decrease packet gap 
intuitively want estimate amount competing traffic focus increased gaps probing packet train capture competing traffic decreased gaps saw little competing traffic 
note observation applies probing packet train operates 
precisely assume probing train probing gaps increased unchanged decreased 
apply increased gaps get estimate competing traffic load gap values denote gaps increased unchanged decreased respectively 
formula amount competing traffic arrive router probing period 
ideally total probing time 
practice exclude gap values involve lost reordered packets cases denominator may smaller total probing time 
method calculating competing traffic load igi algorithm section iv call igi formula 
number groups proposed methods estimate available bandwidth network path :10.1.1.168.4807:10.1.1.17.2405
notation equation probing packet size :10.1.1.17.2405
formula represents average transmission rate packet train measured destination 
formula ptr algorithm described section iv call ptr formula 
contrast pathload uses rate packet trains sent source :10.1.1.168.4807
gap model shows igi formula applies show ptr formula valid similar conditions 
note main parameter control single hop gap model large impact size dqr region packet train operates 
key accurate available bandwidth measurement algorithm find value probing packet train operates 
discussing details algorithms achieve simple testbed experiments illustrate intuition single hop gap model show affect estimates igi ptr formulas 
fig 

testbed configuration 
fig 

effect 
initial output gap routers top bottom 
testbed illustration run experiments isolated testbed 
topology shown fig 

ps pd probing source destination cs cd generate competing traffic 
freebsd routers run tcpdump relevant interfaces record packet timestamp information 
ps sends series evenly spaced packets consecutive pair serve probing pair 
competing traffic generated iperf allows simulate typical tcp traffic ftp traffic 
control competing traffic throughput adjusting tcp window size 
effect capturing competing traffic experiment probing packets size byte bottleneck gap ms initial gap set ms competing traffic load mb typical set experimental results shown fig 
top graph shows initial output gaps measured bottom graph shows corresponding gaps 
increase gap values caused competing traffic bottleneck link 
increased gap values top graph fig 
fall clusters transmission delay byte competing packet mb link ms clusters correspond probing pairs separated exactly competing packets 
fact packets inserted probing gap surprise large number order get large probing period 
testbed cause packet drops significantly affect competing flow throughput 
hu steenkiste evaluation characterization available bandwidth probing techniques fig 

bursts competing packets input output interface 
transmission delay competing packets input link transmission delay output link interval time packets finish transmission time second packets arrive 
initial gap ms transmission time competing packets input link ms note input links times faster bottleneck link 
increased gap values gap values decreased ms transmission delay probing packets mb bottleneck link 
bottom graph shows increased gap values maintained router higher output rate input rate 
changes gap values direct result bursty competing traffic 
tcpdump trace router shows cases source cs sends byte packets back back period fig 

builds queue router queue drain period period competing traffic arrives 
packet pair overlaps period see increased gap gap value depends competing packets inserted packet pair 
packet pair falls period see gap reduced ms experiment input link capacity times output link capacity longer packet pair gaps reduced increased 
packet pairs straddle periods 
case gap reduced value ms 
effect corresponds dqr example significant 
igi formula obtain estimated competing traffic throughput mb ptr formula estimates available bandwidth mb estimates match iperf reports average throughput mb effect dqr losing competing traffic reduce competing traffic setting source tcp socket buffer size bytes destination tcp socket buffer size bytes 
forces competing traffic source send roughly byte packet rtt 
parameters probing packet train kept 
fig 
shows increased gap values longer clustered small set discrete values 
apply igi formula experiment obtain competing traffic throughput mb ptr estimates available bandwidth mb corresponding mb competing traffic throughput 
higher real competing traffic throughput mb explain result fig 
shows detailed snapshot starting time competing packets probing packets input output interfaces router 
lines show transmission delays fig 

effect dqr 
changes gap values random 
fig 

snapshot interleaving competing packets probing packets 
packets 
nature competing traffic probing packets encounter empty short queue 
result consecutive probing packets fall different queueing periods changes gap values fairly random strongly correlated competing traffic load 
cases see gap increase delayed pair gap increased ms cases delayed region dqr example pair 
discussion single hop gap model experiments show challenges associated packet pairs packet trains estimate competing traffic bottleneck link 
degree measured gap destination reflects competing traffic load depends region bottleneck router operating 
news operating time stamp recorded tcpdump time bit packet passes network interface 
means segments fig 
right points measured trace data 
left points calculated packet length corresponding interface transmission rate 
small overlaps possible probably due timing error tcpdump 
ieee journal selected areas communications vol 
august fig 

impact initial gap available bandwidth measurements 
arrows point measurements turning point smallest initial gap average output gap equals average initial gap 
proportional relationship output gap competing traffic 
starting point algorithms introduced section 
iv 
igi ptr algorithms section describe igi ptr formulas basis available bandwidth estimation algorithms 
measurements previous section clearly show initial gap large impact usefulness igi ptr formulas study role initial gap carefully 
impact input gap single hop gap model output gap packet pair train give estimate competing traffic bottleneck link 
dqr output gap independent competing traffic 
see increasing initial gap increase dqr area 
argues small initial gaps 
fact initial gap smaller probing packet transmission delay bottleneck link dqr area exist 
small initial gaps flooding bottleneck link may cause packet losses disrupt traffic 
order better understand impact initial probing gap accuracy igi ptr formulas design experiment 
send iperf tcp competing traffic flow mb mb bottleneck link 
probe network set packet trains packet train length probing packet size byte 
start initial probing gap ms smallest gap get testbed gradually increase initial gap 
fig 
shows average gap difference averaged output gap minus averaged initial gap competing traffic throughput estimated igi formula available bandwidth estimated ptr formula 
see small initial gaps smaller transmission time bottleneck link flooding network measurements underestimate competing traffic throughput 
note minimal initial gaps ptr formula similar formula estimate bottleneck link capacity tools bprobe fact ptr estimate small initial gaps close mb bottleneck link capacity :10.1.1.17.2405
initial gap reaches dqr effect starts appear 
note network idle flooding bottleneck link 
far average output gap destination larger initial gap 
increase initial probing gap point ms output gap equals initial gap call turning point 
point probing packets interleave nicely competing traffic average rate packet train equals available bandwidth bottleneck link 
experiment igi estimate competing traffic turning point mb ptr estimate available bandwidth mb match actual competing traffic mb quite 
continue increase initial probing gap output gap remains equal initial gap packets average experience delay 
believe point average output gap equals initial gap turning point shown fig 
correct point measure available bandwidth 
turning point corresponds smallest initial gap value flooding bottleneck link 
respect single hop gap model fig 
igi formula initial gap result packet train keeps queue full possible overflowing model shows puts 
respect ptr formula initial gap turning point corresponds packet transmission rate packet trains consume available bandwidth significant interference competing traffic 
words packet train behaves aggressive behaved congestion controlled application flow rate estimate available bandwidth 
igi ptr algorithms discussed packet trains operate turning point 
igi ptr algorithms igi ptr algorithms send sequence packet trains increasing initial gap source destination host 
monitor difference average source initial destination output gap terminate zero 
point packet train operating turning point 
igi ptr formulas compute final measurement 
pseudocode igi algorithm shown fig 

available bandwidth obtained subtracting estimated competing traffic throughput estimate bottleneck link capacity 
bottleneck link capacity measured example bprobe nettimer pathrate :10.1.1.17.2405
note errors bottleneck link capacity measurement affect accuracy available bandwidth estimate bottleneck link capacity calculation bottleneck gap competing traffic throughput hu steenkiste evaluation characterization available bandwidth probing techniques fig 

algorithm igi 
send probing packets sends probe num packet size probing packets initial gap set init gap get dst gaps gets destination output gap values adds get increased gaps returns sum initial gaps larger bottleneck gap bw bw bw denote competing traffic throughput bottleneck link capacity available bandwidth respectively 
available bandwidth analysis mentioned tools experience show bottleneck link capacity measurement fairly accurate consider factor 
ptr algorithm identical igi algorithm 
difference need replace lines fig 
formulas assume packet loss packet reordering 
algorithms try minimize number probing phases carefully selecting step get gb probe small possible 
allows estimate bottleneck link capacity set key step algorithms automatic discovery turning point 
done procedure gap equal 
tests source destination gaps equal defined experiments set 
steps key difference ptr algorithm techniques allow quickly find initial gap 
evaluate fast algorithm converges sections vi vii 
initial gap parameters affect accuracy igi ptr algorithms 
probing packet size 
measurements small probing packets sensitive interference 
points significant post bottleneck effects small packets 
argues sending larger probing packets 
number probing packets 
known internet traffic bursty short snapshot capture average traffic load 
argues sending fairly large number probing packets 
sending packets cause queue overflow packet losses increase load network lengthen time takes get estimate 
experiments show quality estimates sensitive probing packet size number packets fairly large range values parameters 
example byte packet size packets train internet 
discuss sensitivity parameters detail section vii 
evaluation methodology evaluation includes parts section vi compare performance igi ptr pathload focusing measurement accuracy convergence time 
section vii analyze probing packet size number probing packets packet train length affect measurement accuracy igi ptr 
section viii study performance igi ptr network path tight link bottleneck link 
look related issue impact gap timing errors 
parts internet measurements 
part ns simulations need carefully control competing traffic load network 
evaluate accuracy different probing algorithms internet interleave probing experiments large application data transfers show bandwidth available usable network path 
hard determine actual available bandwidth internet path 
principle data transfers tcp applications especially bulk data transfer applications tcp 
unfortunately high bandwidth paths find tcp able fully utilize available bandwidth 
cases reason simply tcp flow control limiting throughput guest accounts allow increase socket buffers large sizes 
paths observe significant amount packet reordering unexplained ieee journal selected areas communications vol 
august fig 

throughput parallel tcp flows path eth nwu 
packet losses significant impact tcp performance 
reasons mixture techniques measure true available bandwidth 
possible single tcp flow 
small window sizes prevent filling pipe number parallel tcp flows 
number flows selected path basis 
typical example throughput increases number flows shown fig 

throughput increases initially flattens 
typically flows sufficient fill available bandwidth pipe 
note approach provides rough idea accuracy probing techniques 
problem probing data transfers run time see different traffic conditions expect slightly different results 
bandwidth sharing characteristics tcp single tcp flow multiple parallel tcp flows equivalent 
hand approach model way applications typically probing tools approach captures accuracy applications perceive 
experience tools remos shows applications general require rough estimates path properties 
implementation igi ptr algorithms needs accurate timestamp measurement 
result expect best results kernel support libpcap 
hosts experiments guest accounts internet measurements collected user level implementation 
probing packets user defined protocol udp packets timestamps measured client server applications sends receives udp packets 
pathload implementation taken www cis 
udel edu dovrolis pathload tar gz 
pathload returns measurement interval contain actual available bandwidth 
analysis center interval returned pathload 
vi 
comparative evaluation section analyze performance igi ptr algorithms experiments internet 
compare performance pathload 
table internet paths network paths data section collected series experiments experiment measures available bandwidth methods igi ptr igi ptr algorithms estimate available bandwidth 
probing packet size set byte probing packet number 
discuss choose values section vii 
pathload resolution parameter set mb bulk data transfer iperf tcp flows probe actual available bandwidth 
transmission time seconds tcp window size ends set kb supported machines access 
separate measurements seconds sleep period avoid interference measurements 
separate experiments minutes idle time 
measurements run hours 
collect measurements internet paths listed table path site sender second site receiver 
capacities third column denote bottleneck link capacities refer path capacity 
path capacities measured bprobe rtts measured ping :10.1.1.17.2405
path capacities shown table obtained rounding measured values nearest known physical link capacity 
measurement accuracy fig 
shows relative measurement error igi ptr pathload 
define relative measurement error available bandwidth estimates generated different cornell cmu nyu eth machines cornell university carnegie mellon university new york university eth zurich switzerland national tung university taiwan respectively 
ma slc sv fc sweden nl machines commercial networks located massachusetts silicon valley foster city sweden netherlands respectively 
pathload code apply paths available bandwidth mb returns interval link capacity pathload measurements path 
hu steenkiste evaluation characterization available bandwidth probing techniques fig 

available bandwidth measurement error igi ptr pathload 
bar shows median value line bar shows percentile values 
techniques bulk data transmission rate bottleneck link capacity 
paths observe measurement error cases error 
estimates produced igi ptr pathload algorithms match tcp performance fairly 
paths relative measurement error higher 
information service providers hard tell causes higher errors 
methods low accuracy hypothesize tcp difficulty available bandwidth due bad path properties 
example table shows rtt variances paths large compared paths 
may caused route flaps may negatively influence tcps performance 
fig 
show detailed comparison bandwidth estimates paths 
pick paths different path properties paths see table bad paths path 
paths graphs confirm techniques provide estimates available bandwidth measured iperf 
technique accurate depends path 
example igi accurate pathload 
notable exception period hour hour igi ptr appear underestimate available bandwidth 
path bottleneck link digital subscriber line dsl general idle shown high available bandwidth 
hour interval dsl 
tcp connections active consume part available bandwidth 
bulk data transfer uses parallel iperf flows appears grabbing bandwidth flows 
illustrates available bandwidth necessarily defined depends aggressive sender note somewhat atypical path internet paths individual senders able affect bandwidth sharing easily 
paths relative measurement error high see available bandwidth estimates produced methods higher bandwidth measured iperf 
suggested probably means tcp iperf able function problems window size loss rate variable rtt 
note bandwidth estimation techniques provide fairly similar results path pathload estimates extremely high 
paths igi ptr estimates 
exception path fig 
igi estimates change wider range provided ptr method 
believe caused traffic links bottleneck link 
discuss section viii igi method sensitive competing traffic links ptr method 
convergence times far measurements shown algorithms similar accuracy terms predicting available bandwidth 
igi ptr methods measurement time faster pathload shown table ii 
table show percentile values measurement times median path igi ptr pathload techniques 
see igi ptr methods typically take pathload takes :10.1.1.168.4807
compute ratio pathload igi ptr round measurements median values listed column table 
geometric mean ratios shows igi ptr method average times faster pathload paths study 
long measurement time pathload due convergence algorithm 
pathload monitors changes way delay probing packets order determine relationship probing speed available bandwidth 
difficult probing packets experience different levels congestion 
slow convergence process result long probing times shown table ii 
contrast convergence igi ptr determined directly packet train dispersion source destination 
igi ptr algorithms bottleneck link capacity estimated probing procedure adjust init gap gap step optimize convergence 
vii 
igi ptr algorithm properties igi ptr algorithms select appropriate initial gap probing trains searching turning point described section iv 
section internet experiments study impact packet train ieee journal selected areas communications vol 
august cornell ma fc cmu slc fc nwu cmu cmu fig 

available bandwidth measurements corresponding tcp performance 
number brackets iperf number iperf tcp flows 
axis clock time value number larger time day 
table ii measurement time parameters probing packet size number probing packets packet train length 
probing packet size study impact probing packet size measurement accuracy igi ptr algorithms conduct experiments internet paths probing packet sizes ranging byte 
repeat individual measurement times 
entire experiment takes assumption internet path properties change scale hours expect measurements similar result 
internet path nwu cmu 
path capacity mb measurement results shown fig 
shows available bandwidth measurements change probing packet size 
available hu steenkiste evaluation characterization available bandwidth probing techniques fig 

igi ptr measurements different probing packet sizes internet paths 
graphs show final available bandwidth estimates 
graphs show gap convergence individual measurements 
axis initial source gap axis gap difference destination output gap value minus source input gap value 
points marked circles turning points final estimates computed 
bandwidth measured tcp bulk data transfer method discussed section vi mb packet sizes result closest estimates byte 
smaller packet sizes methods underestimate available bandwidth significant margin 
larger probing packet sizes methods overestimate available bandwidth smaller amount 
reasons small probing packet sizes result high errors available bandwidth estimation 
illustrated fig 
turning point gap value proportional packet size 
means small packet sizes small gaps especially available bandwidth high case nwu cmu path 
resulting probing train sensitive burstiness competing traffic 
graph byte probing packets fig 
confirms gap difference converge nicely larger probing packets 
second reason small gap values occur small probing packets harder measure accurately measurement errors affect result significantly 
gap values order hard generate measure accurately especially user level applications 
clear larger probing packets available bandwidth estimates increase fact exceed mea bulk throughput 
conjecture result aggressiveness probing packet train flow 
probing flows larger packets aggressive probing flows smaller packets observe higher available bandwidth 
packet size distribution internet clusters byte flow byte packets example aggressive average 
tcp bulk data transfer maximum sized packets case dynamic congestion control behavior reduces bandwidth 
second experiment path cornell cmu 
results summarized fig 

link capacity bottleneck link mb opposed mb nwu cmu path 
result available bandwidth significantly lower 
results confirm main results measurements nwu cmu path 
available bandwidth estimates increase packet size 
second available bandwidth lower seeing fairly smooth convergence gap difference small probing packet sizes fig 

observe nice convergence burstiness competing traffic affect probes small packets probes larger packets 
igi algorithm results byte probing packet ieee journal selected areas communications vol 
august fig 

performance packet trains different lengths 
suspicious large variance 
igi algorithm uses changes individual gap values average packet train rate ptr sensitive small changes gap values example result bursty traffic traffic links 
discuss point detail section viii 
general average sized probing packets byte yield representative available bandwidth estimate 
smaller packet sizes may underestimate available rate may sensitive measurement errors larger probing packet sizes available bandwidth 
packet train length number probing phases packet train length large impact cost ptr igi algorithms affects number packets sent load placed network probing time latency associated probing operation 
important parameter number phases needed converge best initial gap value turning point tied closely packet train length 
intuitively shorter packet trains provide accurate information phases may needed converge turning point 
reason study packet train length number phases igi ptr algorithm 
section iv mentioned trains packets 
section experimentally evaluate reduce number significant loss accuracy 
conduct experiments internet paths previous section nwu cmu cornell cmu 
path packet trains different lengths estimate available bandwidth 
measurements take hours 
available bandwidth internet fairly stable expect available bandwidth change significantly period 
measurements different train lengths interleaved reduce possible bias specific train length 
fig 
shows cumulative distribution function cdf estimated available bandwidth igi top number probing phases needed converge turning point bottom 
distributions ptr measurement similar included 
graph curves corresponding different packet train lengths 
observe shorter packet trains need phases converge conjectured earlier 
measurements show surprisingly shorter packet trains result wider range available bandwidth estimates shown cdf spread 
reason competing traffic available bandwidth bursty shorter packet train corresponds shorter sampling interval seeing wider range estimates 
note packet train length increases impact packet train length distribution bandwidth estimates smaller estimates converge specific value 
interesting compare results paths 
nwu cmu path changing packet train length fairly significant impact distributions available bandwidth phase count 
words increasing packet train length helps providing predictable available bandwidth estimate 
longer trains rewarded reduction number probing phases 
contrast cornell cmu path cdf functions available bandwidth phase count fairly similar train lengths packets 
reason competing traffic path bursty nwu cmu path 
difference paths raises question packet train length available bandwidth estimation 
clearly appropriate train length depends path 
nwu cmu path probably want fairly large value packets cornell cmu path train length packets sufficient 
difference paths appears caused burstiness traffic decide changes packet gaps characterize burstiness hu steenkiste evaluation characterization available bandwidth probing techniques fig 

relative burstiness measurements gap values probing train 
bar shows median value lines bar show values 
competing traffic 
specifically define relative burstiness gap measurements probing train 
fig 
shows relative burstiness igi measurements turning point paths different packet train lengths 
record detailed gap values turning point measurements measurements collected 
relative burstiness path nwu cmu significantly higher path cor cmu 
interesting results packet probing trains follow trend 
suspect packets simply long get reliable measurement note wide spread 
results suggest reduce cost probing dynamically adjusting length packet train 
example packet train packets phases burstiness results phases adjust length packet trains 
decide results table ii show igi ptr algorithm quite fast 
distribution probing phase counts shows measurements need phases converge turning point corresponding probing time rtts 
dynamically adjusting packet train length large impact probing time 
course burstiness information available users know variable available bandwidth short data transfers 
viii 
multihop effects igi ptr algorithms gap model section iii 
derived simple single hop network generally network bottleneck link tight link effect links ignored 
section simulations study general multihop networks 
specifically address questions 
interpret model tight link fig 

simulation configuration 
ps pd probing 
competing traffic generation 
fig 

link effect 
bottleneck link capacity tight link capacity 
bottleneck link implications igi ptr method 
second competing traffic links tight link affect accuracy algorithms 
tight link bottleneck link tight link bottleneck link different gap model shows igi algorithm values tight link estimating available bandwidth 
unfortunately tools bprobe estimate capacity bottleneck link 
impact accuracy method 
note ptr values explicitly affected tight link issue 
remainder section ns simulation evaluate accuracy algorithms scenario 
simulation drawback leaves real world effects advantage study topologies difficult impossible build 
simulation topology shown fig 
mb link capacities respectively 
changing competing loads change tight link path change level traffic links tight link 
probing packet size simulation byte probing packet train length 
competing traffic consists cbr udp traffic 
note picking link capacities fairly close available bandwidths different links close challenging case 
set simulations set mb change mb range mb bottleneck link tight link falls mb tight link fig 
presents simulation results 
see bottleneck link equal tight link mb igi method accurately predicts available bandwidth expected 
tight link show igi estimates ieee journal selected areas communications vol 
august fig 

link effect 
bottleneck link capacity tight link capacity 
values tight points bottleneck links points 
see results tight link values closer 
error result interference competing traffic link discuss detail subsection 
run similar set simulations keep fixed mb change competing traffic mb tight link switches goes mb fig 
shows results similar fig 
tight link bottleneck link mb values tight link gives accurate prediction available bandwidth path 
results mb clear link case fig 
explain section 
figs 
plot corresponding ptr values 
ptr estimates identical igi estimates values tight link 
reason ptr formula explicitly information tight link capacity 
fact igi algorithm uses capacity tight link explicitly problem techniques identifying link capacity bottleneck link tight link 
practice problem expect paths access link client network isp bottleneck tight link 
internet measurements section vi confirm 
interference traffic links multihop network link potentially affect gap value packet pair packet train effectively concatenate multiple instances single hop gap model 
multihop gap model hard interpret 
fairly easy see link lowest unused bandwidth tight link largest impact gap destination 
intuition follows 
links lot unused bandwidth packets probing flow encounter empty queue links limited impact gap value 
course links may effect gap values analyze section simulation results previous section 
results fig 
mb show igi ptr accurate significant competing traffic link preceding tight link 
interesting second set simulations show different result 
fig 

combined link effects mb link capacities 
results fig 
mb correspond case significant competing traffic link tight link 
observe ptr accurate igi accuracy suffers 
different impact igi competing traffic links upstream downstream tight link explained follows 
changes gap values tight link reshaped router tight link connects competing traffic tight link ends having dominating impact 
contrast changes gap values caused traffic links tight link directly affect available bandwidth estimates larger impact 
igi fine grain information ptr sensitive effect 
fig 
show available bandwidth estimated igi significant competing traffic links tight link 
actual available bandwidth mb data points 
determined link mb capacity mb competing traffic 
results confirm observation 
significant competing traffic tight link impact accuracy curve basically flat axis 
competing traffic tight link effect surprisingly impact increases level competing traffic 
note simulations results designed highlight particularly challenging case 
practice common links capacities available bandwidths similar 
cases effect competing traffic links minimal 
example run set simulations similar described set mb mb capacity competing traffic throughput keep mb respectively available bandwidth mb results shown fig 

see igi method gives accurate results mean value data points mb standard deviation mb fact igi ptr typically produce similar estimates internet hu steenkiste evaluation characterization available bandwidth probing techniques fig 

combined link effects mb link capacities 
fig 

impact initial gap error 
experiments shows results fig 
typical worst case results figs 

timing errors factor reduce accuracy igi ptr algorithms measurement errors gap values 
types gap measurement errors errors initial gap value generated source host measurement errors final gap value measured destination host 
illustrate effect source gap generation error topology shown fig 
set mb respectively 
flow competing flow change throughput range mb experiment initial gap incremented random value uniformly distributed run simulations ranging ms value collect results changes mb fig 
shows average absolute error igi estimate function see error small 
note turning gap value simulation ms errors inflicted initial gap quite large 
believe reason high error tolerance reason low sensitivity igi link traffic 
specifically tight link ends reshaping gaps competing traffic effect hiding initial gap errors 
clearly measurement errors destination side significant impact directly change gap values igi ptr formulas 
ix 
simple gap model captures competing traffic network link affects gap value packet pairs packet trains 
gap model helps identify conditions packet pairs probing yields useful information available bandwidth path 
shows key get useful measurements control initial gap packet train 
accurate results obtained average output gap destination equals average initial gap source 
design techniques estimating available bandwidth gap model 
igi algorithm uses information changes gap values packet train estimate competing bandwidth tight link path 
ptr method uses average rate packet train estimate available bandwidth 
compare estimates igi ptr algorithms pathload estimates measured tcp throughput internet 
results show methods igi ptr pathload similar measurement error cases error 
igi ptr typically finish pathload takes lot longer 
analysis algorithm properties provides suggestions choose probing packet size probing packet train length order achieve best measurement accuracy overhead 
part simulations study dynamics methods networks significant traffic multiple links path 
show igi method loses accuracy tight link bottleneck link significant competing traffic links tight link 
competing traffic tight link little impact accuracy 
ptr method detailed changes gap values probing packet train sensitive presence traffic links tight link 
results suggest ptr method preferred method estimating available bandwidth 
acknowledgment authors andersen 
chu dinda allowing resources internet experiments 
agrawal 
chu gao 
huang lopez rao useful comments 
lai baker nettimer tool measuring bottleneck link bandwidth proc 
usenix symp 
internet technologies systems mar pp 

dovrolis ramanathan moore packet dispersion techniques measure proc 
conf 
computer communication apr pp 

downey 
clink tool estimating internet characteristics 
online 
available rocky wellesley edu downey clink ieee journal selected areas communications vol 
august jacobson pathchar tool infer characteristics internet paths mathematical sciences research institute apr online 
available ftp ftp ee lbl gov pathchar msri talk pdf 
carter crovella measuring bottleneck link speed packet switched networks boston univ boston ma comput :10.1.1.17.2405
sci 
dept tech 
rep mar 
mah 
pchar tool measuring internet path characteristics 
online 
available www employees org software pchar seshan stemm katz spand shared passive network performance discovery proc 
st usenix symp 
internet technologies systems monterey ca dec pp 

stemm seshan katz network measurement architecture adaptive applications proc 
conf 
computer communication mar pp 

jain dovrolis available bandwidth measurement methodology dynamics relation tcp throughput proc :10.1.1.168.4807
acm sigcomm symp 
communications architectures protocols pittsburgh pa aug pp 

pathload measurement tool available bandwidth proc 
passive active measurements fort collins mar 
curtis mcgregor review bandwidth estimation techniques proc 
new zealand computer science research students conf vol 
new zealand apr 
jacobson congestion avoidance control proc 
acm sig comm symp 
communications architectures protocols aug pp 


bolot packet delay loss behavior internet proc 
acm sigcomm symp 
communications architectures protocols san francisco ca sept pp 

keshav 
packet pair flow control 
online 
available www cs cornell edu doc ps carter crovella dynamic server selection bandwidth probing wide area networks boston univ boston ma comput 
sci 
dept tech 
rep mar 
paxson measurements analysis internet dynamics ph dissertation comput 
sci 
div berkeley berkeley ca may 
mathis mahdavi diagnosing internet congestion transport layer performance tool inet conf montreal qc canada june 
new probing analysis method estimating bandwidth bottlenecks proc 
ieee globecom global internet symp san francisco ca nov pp 

ferguson 
iperf 
online 
available dast nlanr 
net projects iperf dinda gross lowekamp miller steenkiste sutherland architecture remos system proc 
th ieee int 
symp 
high performance distributed computing aug pp 

libpcap online 
available ftp ftp ee lbl gov libpcap tar semke mahdavi mathis automatic tcp buffer tuning proc 
acm sigcomm symp 
communications architectures protocols vancouver bc canada sept pp 

padhye firoiu towsley kurose modeling tcp throughput simple model empirical validation proc 
acm sigcomm symp 
communications architectures protocols vancouver bc canada sept pp 

jain art computer systems performance analysis 
new york wiley 
zhang duffield paxson shenker constancy internet path properties proc 
acm sigcomm internet measurement workshop san francisco ca nov pp 

claffy miller thompson nature beast traffic measurements internet backbone isoc inet conf july 
ns online 
available www isi edu nsnam ns hu received degree computer science university china working ph degree computer science department carnegie mellon university pittsburg pa research interests network measurement networking protocols active network services 
peter steenkiste sm received degree electrical engineering university ghent belgium ph degrees electrical engineering stanford university stanford ca respectively 
professor department computer science department electrical computer engineering carnegie mellon university pittsburg pa research interests areas networking distributed system 
