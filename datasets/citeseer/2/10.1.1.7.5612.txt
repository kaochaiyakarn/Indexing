comparing coevolutionary genetic algorithm multiobjective optimization jason william kraus computational sciences division ms qss group ms nasa ames research center moffett field ca usa golden usa email arc nasa gov org results study comparing developed coevolutionary genetic algorithm cga set evolutionary algorithms suite multiobjective optimization benchmarks 
cga embodies competitive coevolution employs simple straightforward target population representation fitness calculation developmental theory learning 
properties setting additional population trivial making implementation difficult standard ga empirical results suite objective test functions indicate cga performs finding solutions convex nonconvex discrete deceptive pareto optimal fronts giving respectable results nonuniform optimization 
multimodal pareto front cga yields poor coverage pareto front finds solution dominates solutions produced algorithms 
cooperation competition populations organisms nature inspired researchers incorporate coevolutionary dynamics genetic algorithms 
common element approaches inclusion additional populations 
growing body research explores coevolutionary approaches capitalize dynamic quality review see 
coevolutionary largely concentrated competitive interactions 
interactions individuals compete symmetric game context populations different types individuals compete predator prey type relationships 
cases individuals rewarded defeat individuals compete 
interactions support arms races individuals force increasingly competent 
studies investigated role cooperation help solve problems endemic evolutionary methods difficulty choosing appropriate encoding individuals difficulty decomposing composite problems 
studies balance cooperation competition necessary prevent evolutionary algorithms getting trapped local minima mediocre stable states 
describe coevolutionary genetic algorithm cga fitness calculations inspired de ieee theory 
fundamental idea coevolutionary dynamics automatically regulate level difficulty easy hard posed population tests 
describe multiobjective optimization problems suite test functions judge performance cga 
empirical results cga runs compared previously published results 
ii 
coevolutionary ga coevolutionary algorithm algorithm previous evolvable hardware applications competition populations 
population candidate solutions trial population represented manipulated main population standard genetic algorithm 
second population target population consists target objective vectors vectors containing targets individual objectives optimized 
overview algorithm 
population encapsulate level difficulty trial population faces 
control genetic algorithm evolve easy difficult level proficiency trial population 
algorithm designer need specify easy tov difficult tov ultimate goal run analogous stopping criteria standard evolutionary algorithms 
generation randomly initialized tov values fall easy difficult bounds 
cga seeds easy early generations run guarantee coevolutionary dynamic shall see difficult generation zero individuals competitive mechanism fitness feedback populations 
tov consists set target objectives act thresholds thresholds met exceeded order tov solved gain fitness property relaxed accommodate partial solutions version algorithm reported 
trial population candidate solutions target population target objective vectors fig 

overview coevolutionary genetic algorithm 
example assume objective tov desires maximize objective minimize remaining objectives 
tov solves 
general form fitness calculations follows 
trial individuals rewarded solving difficult 
difficult tov generation defined trial individual solve 
tov highest fitness score 
unsolvable easy solve current trial population low fitness scores 
fitness individual trial population computed follows 
individual plays tov second population score si si trial individuals solve set tov indexes individual solves 
note denominator fraction guaranteed greater equal due restriction normalized linearly upper lower bounds isthe best score worst trial si size tov population 
effect reward trial individuals solve difficult 
tov greatest difficulty level exactly trial individual solve 
trial individuals solve particular tov fitness contribution shared trial individuals 
fitness individual tov computed follows 
xj denote number trial individuals solve andm trial population size 
fitness ieee essentially xj scaled normalized tractability constraint xj xj xj tractability constraint gives target vector score worst score trial individuals solve 
puts pressure tov population pose difficult solvable problems trial population 
target population manipulated single population typical genetic algorithm 
explicit niching operators enhance diversity 
constrained mutation ensure remained valid mutation 
point crossover implemented choosing cut points individual objective values 
typical real world applications running time evaluation function running time underlying evolutionary algorithm 
comparison multiobjective eas compute time complexity cga follows 
populations size number objectives 
evaluation trial population runs nm 
fully crossed pairwise comparisons determine trial individuals solve target populations required running nm 
time complexity nm core cga 
comparison spea nsga ii run nm identical cga 
iii 
multiobjective optimization notion weighing tradeoffs common problems everyday life science engineering 
buying expensive product tradeoff product quality ability buy 
adding additional science instrument spacecraft trades increased costs increased science return 
hard optimization problems typically require decisions input side objectives optimize output side 
set objectives forms space points space represent individual solutions 
goal course find best optimal solutions optimization problem hand 
pareto optimality defines determine set optimal solutions 
solution pareto optimal solution improve objective function simultaneous deterioration objectives 
set solutions called pareto optimal front 
example pareto front seen 
evolutionary algorithms eas attracted attention exploration pareto optimal fronts 
claimed eas search algorithms tasks :10.1.1.30.5848:10.1.1.30.5848
overview eas multiobjective eas 
briefly touch relevant terminology definitions regarding multiobjective optimization problems fig 

example pareto front minimizing objectives 
nondominated solutions represented hollow circles dominated solutions filled circles 
:10.1.1.30.5848
set input parameters decision variable called decision vector 
set objective functions measure performance system called objective vector 
evolutionary algorithm framework decision vector naturally corresponds candidate solution functions comprising objective vector typically incorporated various techniques fitness function 
dominance test way measure relative performance decision vectors 
decision vectors dominates ties exceeds performance objective exists objective performance strictly exceeds test pare set decision vectors find set nondominated decision vectors 
set said form nondominated front 
nondominated set resulted testing possible decision vector nondominated set pareto optimal front 
coverage test adds test equality dominance test 
decision vectors covers dominates objective vector identical coverage test compare algorithms follows 
function computes percentage algorithm solutions covered solutions produced tests see formal definitions assess ability algorithms optimize set decision vectors :10.1.1.30.5848:10.1.1.30.5848
dominance test cull dominated solutions produced algorithm 
coverage test compare solutions produced algorithms head head 
iv 
experimental setup follow suite multiobjective test functions empirical results :10.1.1.30.5848:10.1.1.30.5848
briefly multiobjective evolutionary algorithms random search algorithm executed test func ieee number generations trial population size target objective vector population size crossover rate populations mutation rate populations table coevolutionary ga parameters 
tions 
algorithms compared random search rand fonseca fleming multiobjective ga ffga niched pareto ga npga hajela lin weighted sum approach hlga vector evaluated ga vega nondominated sorting ga nsga single objective ea weighted sum aggregation strength pareto ga spea :10.1.1.30.5848:10.1.1.30.5848
cga described denoted 
test functions chosen provide range difficulties multiobjective optimization multimodality deception isolated optima 
optimization desired minimize objective vector finding pareto optimal front 
allow direct comparison results followed run setup closely possible cga runs executed test function parameters shown table compute nondominated front cga :10.1.1.30.5848
cga run collected output objective vectors corresponding individuals evaluated run 
test function output objective vectors randomly selected runs combined domination test removed dominated solutions 
algorithm algorithm coverage test function described results runs follows 
nondominated set run computed 
domination test performed nondominated set algorithm nondominated set algorithm run statistics form boxplots described computed resulting values 
andc computed may different 
results noted literature comparing multiobjective optimization algorithms difficult 
algorithm minimize distance pareto optimal front provide uniform coverage pareto optimal front wide range values 
comparisons multiobjective optimization problems algorithm finds handful pareto optimal solutions better algorithm finds wide uniform distribution near pareto optimal solutions 
mind experimental results 
figures show results test functions 
graph optimal pareto front drawn curve data points comparison algorithms data points cga runs shown black circles 
general results show cga relatively strong performer exceeds random search qualitatively performance strong algorithms spea nsga 
test functions cga qualitatively best distribution alignment pareto optimal curve 
third test function performs par spea 
fourth test function multimodal surface cga poor coverage find solution dominates nearly 
deceptive test function cga provides relatively excellent coverage low values doing better 
nonuniform test function spea algorithm find pareto optimal solutions able span width front 
cga provides near optimal solutions coverage high values 
head head algorithm comparisons metric shown boxplots 
boxplot contains results test functions dark dash median top box upper quartile bottom box lower quartile 
seen test functions solutions cga statistically cover solutions rand ffga npga hlga vega 
cga weakest results nsga spea 
vi 
multiobjective optimization clearly important class problems science engineering 
solution techniques effective searching typically vast search spaces finding selection pareto optimal solutions desirable 
coevolutionary genetic algorithm inspired development learning theory compared empirically evolutionary search techniques multiobjective optimization 
terms algorithm design cga difficult design implement typical genetic algorithm 
fact fitness functions identical application domains implementation may viewed easier 
results show cga performed compared evolutionary algorithms random search 
functions argued cga qualitatively performed par outperformed algorithms 
missing study comparison traditional optimization algorithms data plot curves non coevolutionary runs obtained authors :10.1.1.30.5848:10.1.1.30.5848
differences curves seen data sampled randomly :10.1.1.30.5848
ieee leave 
vii 
acknowledgments research sponsored nasa intelligent systems program 
dejong potter evolving complex structures cooperative coevolution 
proc 
fourth annual conf 
evolutionary programming mit press pp 

ficici challenges coevolutionary learning arms race dynamics open mediocre stable states 
coevolution problem simplification proc 
genetic evolutionary computation conference 
hillis evolving parasites improve simulated evolution optimization procedure 
pages langton taylor farmer rasmussen 
eds artificial life vol 
redwood city ca addisonwesley 
pollack coevolving ideal trainer application discovery cellular automata rules proc third annual genetic programming conf 
comparison dynamic fitness schedules evolutionary design amplifiers proc 
nasa dod workshop evolvable hardware pasadena ca ieee computer society press pp 

kraus linden evolutionary optimization antennas proc 
fourth international conference evolvable systems liu tanaka iwata higuchi eds tokyo october springer verlag pp 

paredis coevolutionary constraint satisfaction 
pages proceedings third international conference parallel problem solving nature vol 

springer verlag 
paredis steps evolutionary classification neural networks 
pages brooks maes 
eds artificial life iv 
cambridge ma mit press 
paredis symbiotic evolution solutions representations 
pages eshelman 
ed proceedings sixth international conference genetic algorithms 
san mateo ca morgan kaufmann 
paredis handbook evolutionary computation 
oxford university press 
chap 
coevolutionary algorithms 
pollack blair land coevolution backgammon player proc 
artificial life langton 
ed mit press 
rosin belew new methods competitive coevolution tech 
rept 
cs department computer science engineering university california san diego 
rosin coevolutionary search adversaries ph thesis university california san diego 
van veldhuizen multiobjective evolutionary algorithms classifications analyses new innovations ph thesis air force institute technology 
zitzler thiele multiobjective optimization evolutionary algorithms comparitive case study parallel problem solving nature pp 
springer 
zitzler deb thiele comparison multiobjective evolutionary algorithms empirical results evolutionary computation pp :10.1.1.30.5848
summer 
test function convex test function nonconvex test function discrete fig 

test functions 
ieee ffga hlga npga nsga vega rand spea ffga hlga npga nsga vega rand spea ffga hlga npga nsga vega rand spea test function multimodal test function deceptive test function nonuniform fig 

test functions 
ffga hlga npga nsga vega rand spea ffga hlga npga nsga vega rand spea ffga hlga npga nsga vega rand spea alg alg alg rand ffga npga hlga vega nsga spea fig 

boxplots showing statistics samples function comparing cga algorithms 
boxplot contains results test functions dark dash median top box upper quartile bottom box lower quartile 
ieee 
