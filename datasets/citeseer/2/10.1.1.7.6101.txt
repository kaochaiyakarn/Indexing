experiences architecture intelligent reactive agents peter bonasso james firby erann gat david kortenkamp david miller marc slack incorporated robotics automation group nasa johnson space center er houston tx nasa gov computer science department university chicago east th street chicago il propulsion laboratory oak grove dr pasadena ca mitre dr mclean va describes implementation robot architecture development years 
architec ture uses levels abstraction description languages compatible levels 
makeup architecture helps coor activities real time behaviors dealing dynamic environments 
years architectures created similar attributes features distinguish architecture variety useful software tools created help implement architecture multiple real robots architecture parts implemented variety di erent robot systems di erent processors operating systems ectors sensor suites 
late eighties investigating ways combine deliberation reactivity architectures programming robots carry tasks robustly eld environments miller firby gat bonasso kortenkamp miller 
believe integration crucial 
agent dynamic situation able synthesize plans complexities real world plans situation impractical 
arrived architecture outgrowth lines situated reasoning research brooks firby gat connell slack 
architecture allows robot example plan series activities various locations move locations carrying activities simultaneously avoid danger maintain nominal resource levels accept guidance human supervisor 
architecture program mobile manipulator robots real world environments believe ers unifying paradigm control intelligent systems 
architecture separates general robot intelligence problem interacting layers tiers known 
particular implementation described consists dynamically reprogrammable set reactive skills coordinated skill manager yu 
sequencer activates deactivates sets skills create networks change state world accomplish speci tasks 
reactive action packages raps system firby 
deliberative planner reasons depth goals resources timing constraints 
system known adversarial planner ap slack 
shows software tiers interact 
imagine repair robot charging docking bay space station 
typical day routine maintenance tasks perform outside station retrieving broken items inspecting power levels 
addition supervisor assigns robot set inspection repair tasks number sites station 
planner deliberative tier synthesizes goals plan listing tasks robot perform 
tasks call robot move site site conducting appropriate repair inspection sensor readings deliberation sequencing reactive skills world environment partial task ordering instantiated tasks actuator commands intelligent control architecture site 
example examine subset tasks apply site navigate camera site site attach camera site unload repaired camera detach camera site 
tasks corresponds sets sequenced actions raps firby 
planner begins executing plan monitoring results 
matching uni cation task propositional ects clauses succeed clauses raps rap library planner selects navigate rap execute rst task 
rap interpreter sequencing tier decomposes selected rap raps nally activates speci set skills skill level reactive tier 
activated set event monitors noti es sequencing tier occurrence certain world conditions 
example events monitored location docking arm speci ed tolerance camera site 
event occurs fact robot camera site posted rap memory 
activated skills reactive tier move state world direction cause desired events 
sequencing tier terminate actions replace new actions monitoring events triggered timeout occurs new message received deliberative tier indicating change plan 
example navigate rap succeed clause robot camera site true terminating rap causing planner label task complete move execute task 
software tools architecture implementation support architectural ideas developed number tools systems integrating tiers providing user paradigm developing robotic applications 
agiven rap represent complex routine procedure accomplishing task 
instance manipulator projects unloading item involves bolts tool changes redundant joint capability 
skills situated skills represent architecture connection world 
term situated skill slack intended denote con guration robot control system placed proper context achieve particular state world 
practice control system con gurations created enabling set skills context 
example develop situated skill grasping handle uses skill visually track handle skill move hand target skill close gripper contact 
collection skills useful robot currently located front handle fail situations 
skills form robot speci interface world handling real time transformation desired state continuous control motors interpretation sensors 
robots systems vary greatly physical characteristics sensor capabilities skills robot interface world vary greatly robots environments 
keep control architecture robot independent developed set tools constructing situated skills yu 
canonical approach skill development forces standard interface skills standard interface sequencer independent physical characteristics robot sensors connected 
representation includes 
skill input output speci cation 
skill provide description inputs expects listing outputs generates 
allows skills networked having outputs skill automatically routed inputs skill 

computational transform 
skill 
skill enabled uses transform continually recompute outputs current inputs 

initialization routine 
skill opportunity initialize system started setup communications ports 

enable function 
sequencer enable disable skills 
depending context skill opportunity perform special start procedures time enabled 

disable function 
skill longer needed sequencer disable disable function performs necessary cleanup actions 
sequencer perspective skills capable enabled disabled combination depending situation 
common input output data structures skill totally independent 
time reactive tier architecture characterized currently enabled network skills 
provide sequencer uniform interface allow skills communicate skill development environment encapsulates skills inside skill manager 
skill manager handles interface sequencing system providing communications asynchronous events sequencer needs order stay coordinated skills 
ability recon gure system various aspects task hand allows developer focus ort important facets particular tasks having overly concerned way inwhich skills interact generate coherent task directed behavior 
determination best con gure skills situation hand task sequencing tier 
sequencing accomplish tasks robot routinely perform architecture sequencing system 
case sequencer raps interpreter 
simplest form rap simply description accomplish task world variety circumstances discrete steps 
example rap docking hull spaceship form define rap attach site succeed method context hull task net sequence approach site attach wait method context hull task net sequence approach site grip attach wait notice way task accomplished dependent robot knowledge situation 
example robot accomplishes task attach site di erently depending spaceship hull 
distinctions depending size craft task relevant feature 
sequencer contains library raps keyed speci situations activating di erent set skills order accomplish particular task 
example wait statements cause rap interpreter block branch task execution reply received skill manager 
replies produced special skills called events 
events take inputs skills notify sequencer desired state detected 
sequencer uses events determine particular set skills completed particular states world changed 
sequencing married reaction yields signi cantly better task coverage provide 
combination sequencing reactive tiers structured perform complicated resource allocation reasoning 
tiers cient reasoning failure requirements consequences task 
sequencer ability handle routine situations unload camera move site lacks foresight organize novel sequences routine tasks manifest required global behavior 
ability consider global implications actions task deliberative planners designed 
planning view role state planning robotic intelligence deal tasks routinely speci ed sequences common robotic skills 
planning necessary planner operates highest level abstraction possible problem space small possible 
role reaction control real time behavior 
role sequencing generate known series real time behaviors 
process sequencing tier raise level abstraction activities planner concern 
simpli es planning problem lets operators stand large families similar execution time actions 
ability rap system deal iterative behavior greatly simpli es planner representation allowing propositional state representation common classical planning su ce common situations 
importantly tiers operate concurrently asynchronously 
accomplishing key making planning useful robot 
planner experiments ap macmillan number features compelling robot planning 
aspect intelligent planning robot control communities robots normally fully autonomous working conjunction agents human giving orders minimum 
multiagent control necessary robot employed carry tasks single robot coordinate resources arms grippers multiple robots operating independently multiple tasks shared environment 
ap designed deal multiagent coordination extending statebased planning reason conditions hold actions 
capability allows ap plan activities robots carrying bulky object 
operator example test domain 
note planner instantiate variables arm robot arm robot agent meets constraints 
armed robot single armed robots 
temporal relation simultaneous imposes non codesignation constraint agents strong armed robot qualify 
operator grasp bulky object purpose holding planner large thing arguments size thing get value large thing size preconditions top large thing clear large thing constraints lift arm robot size thing lift arm robot size thing plot simultaneous grip arm robot large thing grip arm robot large thing effects holding planner large thing top clear large thing attractive feature ap reason uncontrolled agents result original development adversarial planning 
uncontrolled agent operating environment robot nature 
ap uses mode reason preconditions plan negated uncontrolled agent plan 
problems addressed augmenting plan operations prevent negative ects uncontrolled action 
amounts reasoning situation speci preconditions way ap addressees qualification problem shoham 
ap adversarial reasoning capabilities risk assessment mechanism consider probability dangerous interactions agents 
applications architecture applied architecture robotic non robotic tasks 
discuss applications section 
applications skill sequencing tiers 
applications tiers 
application describe task robot skills raps applicable plans 
give results lessons learned application architecture 
mobile robot recognizes people nasa johnson space center robotic architecture laboratory architecture control robot nds recognizes people 
robot task locate approach person wearing speci cally colored shirt crop face feed pixels cropped image neural network identify person 
robot base johnson space center robot programmed nd recognize people 
color vision system mounted top robot sonar sensors just 
get face vfh map vfh vfh move crop done id ready color color color lost color goal person angle skill blocks skill events raps skill network nding recognizing people 
ring sonar sensors color vision system mounted top see 
describe task implemented bottom tiers architecture starting robot skills 
details color vision system neural network wong 
shows skill network robot 
skills implemented executed entirely board robot 
skills include visual skills searching tracking colors skill cropping face skill recognizing chip color vision system manipulator face 
skills moving robot obstacle avoidance vfh obstacle avoidance method borenstein koren approaching person sonar turning robot 
skill events report changes robot state state world rap system 
include signals state color searching tracking state face recognition state robot motions 
recognition task consists subtasks accomplished activating sets skills waiting event events trigger 
application consists raps responsible enabling disabling skill sets order accomplish task recover errors 
application extensive rap context method structures 
search raps cause robot move laboratory searching color 
history search maintained rap memory robot avoids looking places searched 
application planning tier architecture 
show bottom tiers perform sophisticated task long period time robot searched colors minutes 
multitude things go wrong losing color recognizing person inability attain goal location demonstrated recovery mechanisms built raps 
trick robot color itwas searching hiding watching robot investigate color continue search locate color 
similar application robot equipped black white stereo vision system bottom tiers architecture nd pursue agents huber kortenkamp 
trash collecting mobile robot part animate agent project university chicago department computer science robot chip programmed clean trash oor 
chip rwi robot sonar sensors color vision system manipulator see 
color vision system nd identify trash trash bins 
manipulator pick deposit trash 
task implemented bottom layers architecture 
details implementation firby firby 
chip uses network skills include routines moving direction avoiding obstacles turning face particular direction nding object visually tracking object reaching object 
skills general nature combined various contexts perform simple actions nd piece trash track piece trash move align piece trash pick piece trash 
tracking trash approaching aligning system compensate errors robot motion errors initial estimates trash item location 
skill events report changes robot state state world rap system 
skills written lisp sets skills enabled middle tier architecture 
combination skill sets perform tasks location tracking object aligning object picking object dropping object 
raps low level tasks combined higher level raps describe cleaning methods various levels abstraction methods moving robot place searching object picking object putting object trash 
raps consult spatial planning module keeps track oor area cleaned far locations pieces trash seen dealt 
planner application skills raps implemented chip robot 
previous example application uses bottom tiers architecture perform complex task long period time 
trials chip picked hundreds pieces trash run hours di culty 
mobile robot navigates ce buildings mitre autonomous system laboratory architecture program robot navigate hallways elevators ce building 
robot denning ring sonar sensors re ective barcode reader 
robot uses sonar data obstacle avoidance laser scanner bar coded tags landmark recognition 
laser landmarks consist coded tags 
laser scanning system returns angle tags robot coordinate system 
angles combination rough estimate distance tags allows robot roughly determine distance direction landmark tags visible 
depicts domain 
details implementation firby slack 
space space portal sonars config sonars config spaces asl space space space space space portal charger space locations charger asl dor elevator dor asl door asl portal waypoints portal portal portal portal portal portal portal portal space mitre navigation task domain detect obstacles track hallway sonars config sonars config follow trajectory hall hall blocked drive steer cmds portal signal event rap system signal event rap system elevator door space sensors world actuators partial skill network mitre navigation task shows couple skills navigation task 
additional skills included watching landmarks moving landmark moving doorways 
primary navigation skills navigation template nat slack processes sonar information avoid obstacles moving coordinate moving particular direction 
constructed properly skill networks allow robot follow halls enter doors independent speci hallway door robot encounters 
skill events hall blocked report changes robot state state world rap system 
skills raps built tasks landmark simulated space station maintenance robot moving neighboring space moving set connecting spaces 
addition application planning tier architecture construct plan nd location plan path elevator navigate room door hall elevator 
planner enables system replan robot path hallway evaluate revised plan sure deadlines violated 
path elevator blocked resulting go lengthy robot immediately abandon goal return report failure 
space station robots architecture framework ground control armed manipulator robot maintaining space station orbit 
idea intelligent ground control station supervise routine maintenance activities robot allow orbit personnel concentrate scienti missions 
application robot kinematic simulation armed eva helper retriever robot see carrying maintenance tasks space station described 
list sites inspected repaired planning tier ground control supervisor maintenance plan consisting repairs inspections generated day 
planner installs raps agenda recommendation agent step arms cameras 
simulation plan underway users interactively introduce failed grapple failed arm joints gripper malfunctions 
simple failures failure arm grapple handled rap level 
delays recoveries cause planner adjust schedule tasks prototype space station maintenance robot sites 
example concerns power data attach points 
move attach point ord robot cient mechanical access item repaired 
attach point malfunctions robot doesn discover tries attach 
controlling rap consults list alternative attach points selects moves 
cases planner notices new point access point item task 
omit move operator plan command load unload inspect operator item 
arm fail rap level able substitute alternative agent left arm recommended right arm cause planner adjust agent assignments tasks 
drastic failures cause planner abandon tasks site 
malfunctions planner abandons entire plan directs robot back docking station 
implementation simulator planner raps system ported hardware manifestation service robot dual armed facility known automatic robotic maintenance space station 
consists primarily degree freedom robotic research manipulators mounted moveable vertical towers horizontally oor gantry see 
arms reach portion space station truss mounted variety components inspected repaired 
camera views available ector towers oor 
interest project construction reactive architecture existing suite software emulated actual armed robot planned space station alpha 
existing modules included inverse kinematic trajectory generation velocity position sensing control force torque sensing control ratchet gripper control 
software modules accessed ethernet graves communications protocols 
skill system simply functions called received signals modules 
rap primitives encoded enable disable skills raps simulation command system space station items 
manner able command arms raps weeks time 
month people previously teleoperated facility autonomously executing item commanded ap tier 
general di erence running simulator actual robot hardware primarily interfaces level autonomy 
planner raps essentially unchanged 
allocating knowledge architecture core software tools raps ap operators easily transportable projects 
individual skills events easily transportable di erent projects platform tend hardware speci important research issue decide certain aspect task belongs skill level sequencer level planning level 
applying architecture wide variety projects described led preliminary set dimensions divide tasks levels 
rst dimension dividing task time 
skill level cycle time order milliseconds sequencer level tenths seconds planning level seconds tens seconds 
imposes constraints 
run tight loop obstacle avoidance skill 
second runs slowly path planning skill skills depending answer slowed unduly 
similar constraints hold deciding sequencer level planner level 
second dimension dividing task bandwidth 
data connection di erent skills skill manager fast carries lot data images sonar values real time tracked target position updates 
hand interface skill system rap system consists primarily commands enable disable skills signals certain skill events occurred 
restricted bandwidth interface modular connection easy distribution various tiers architecture di erent machines connection skills raps implemented tcp ip 
skills generally written perceptual information small amounts data actual described applications skills executed hz hz depending implementation 
speeds su cient described tasks 
passed raps 
rap requires large image written skill 
third dimension dividing task task requirements 
level architecture built functionality certain operations easier 
example raps mechanisms skill selection skill contains methods handling di erent contingencies useful break skill smaller skills contingency rap choose 
similarly rap starts doing look ahead search resource allocation agent selection may better set ap operators take advantage ap built support functions 
nal dimension dividing task modi ability desire 
nature reactive skills requires possible connections skills speci ed advance 
furthermore skills run quickly typically compiled run time networks 
contrast rap system planner interpreters behavior easily changed adding modifying rap descriptions planning operators 
certain routine require line modi cation operator put sequencer planner level skill level 
comparison autonomous agent architectures fall broad categories designed outset control physically embedded agents initially designed explore issues general intelligence adapted controlling physical agents 
examples sort include subsumption brooks tca simmons arkin 
examples include soar laird architecture guardian program hayes roth 
consider example sort architecture designed outset control physical agents mobile robots particular 
despite large overlap areas research believe certain issues unique physical agents 
example mobile robots expected stricter limitations amount computing power disposal 
mobile agents may face serious consequences certain deadlines imposed environment met applications guardian monitors patients intensive care face issues similar gravity 
robotic architectures subsumption arguably best known departure traditional sense plan act paradigm 
subsumption architecture idea decomposing problem robot control task function 
architectures including extent decompose problem functional modules planning sensor processing execution monitoring contingency response 
brooks argues designs inherently ine cient force functional module powerful support task robot may called perform 
develop general functional modules subsumption architecture advocates development narrowly focused mechanisms called behaviors 
behavior designed control single task allowing computation behavior optimized task 
behavior coupled directly robot sensors actuators 
con icts behaviors resolved arbitration mechanism 
subsumption numerous variations theme payton homogeneous architectures 
structure behaviors way behaviors interact architecture 
architectural support abstraction planning resource management 
fact design philosophy underlying subsumption speci cally calls features avoided 
believe subsumption position plans abstraction extreme 
agree motivating premise serious shortcomings traditional sense plan act approach applied embodied agents believe problems best solved changing way inwhich plans represented discarding entirely 
tiered derivative subsumption sss developed connell connell 
subsumption middle tier sss suppose bottom tier collection traditional servo control loops 
ability sss respond contingencies limited subsumption nite state machine model 
sss adds contingency table representation making programming somewhat cumbersome constructing fsa directly quite restrictive 
sss demonstrated tasks involving pure navigation performs task impressive speed 
simmons task control architecture tca simmons successfully number real world robots di erent 
essentially tiers tca 
task net constructed robot similar task net raps 
node task tree decomposed primitive robot nodes sophisticated message passing algorithm 
messages processed central router tca robot operating system 
explicit representations expressing relationships tasks 
tca task trees manipulated directly function calls 
incumbent programmer mentally compile desired control constructs appropriate calls 
furthermore tca lacks representation task trees cumbersome employ general planner output planner translated code compiled interpreter translates output planner tca calls written 
may di cult task depending planner generalized procedure planner 
view cognizant failure quite di erent tca 
place put knowledge failure task nets tca builds exception subnets add ons normal task trees 
hand deals failure levels environmental variation skills variation routine activity raps variation time resources planner 
robot architectures strongest gat 
atlantis grew similarity 
chief di erences atlantis leaves control sequencing tier 
atlantis deliberative speci cally called sequencing tier 
noreils noreils chatila describes architecture integrates planning reactivity 
noreils architecture levels called planning control functional correspond roughly main components 
control level formalism similar raps 
principal di erence noreils formalism raps noreils formalism distinguishes failures non failures raps ontology simply considers multiple outcomes requiring categorized 
believe important distinction tasks robot performs complex division failure fuzzy requiring user distinction burdensome 
noreils architecture implemented robots computation done board 
numerous architectures speci mobile robot navigation 
aura arkin super cially similar 
fundamental building block vector eld associated goal obstacle 
motor schemas combined vector addition produce resultant drives robot 
second tier enables combinations vector elds run concurrently produce desired ect 
second level lacks context reordering capabilities raps 
aura concerned generating world model second level connected directly low level motor schemas 
sensing control tier uses explicit task context determine meaning rest architecture 
control community noteworthy multi tiered architectures 
albus early model telerobotic control 
essence tiered model provision increasing abstraction increasing cycle time moved servo level reasoning levels 
exception maintaining global world model original inception provided data control paths 
model implementation 
subsequent implementations followed primarily traditional sense plan act approach mainly applied telerobotic applications opposed autonomous robots 
notable exception early chappell 
intelligent control architecture having layers fundamentally di erent philosophy implementation 
architecture begins servo systems available robot augments integrate execution algorithms level vxworks vme bus 
level consists set coordinating routines subsystem vision arm motion navigation 
net transducers pnts kind scheduling mechanism activated dispatcher connected organizational level 
organizational level planner implemented neural network boltzmann variety 
essentially neural network nds sequence actions match required command received text input dispatcher executes steps network pnt coordinators 
emphasis architecture increasing precision decreasing intelligence 
sounds vaguely abstraction hierarchy 
intelligence system stems probability models task decomposition execution functions minimize measure entropy 
result sequences actions neural network coordinators executed highest probability success 
architecture implemented puma manipulator robot apparently partially 
di cult judge relative merits neural network planner versus symbolic planner raps system versus dispatcher petri net coordinators detailed analysis scope 
appears contains little provision dynamically recon gurable skill network cognizant failure recovery failures level 
appears currently applicable robots vxworks vme bus 
non robotic agent architectures architectures proposed controlling intelligent agents 
focus applied controlling physical robots 
guardian architecture hayes roth blackboard architecture designed controlling embedded necessarily embodied agents 
architecture divided cognitive component perception action component 
perception action component cognitive component 
guardian architecture similar sequencing deliberation performed mechanism 
deliberative modulate performance perception action component performance current situation world 
guardian representation commit particular representation describing interrelationships tasks 
major capability architecture ability migrate decisionmaking slow deliberative component faster perception action component reasoning current situation 
example guardian reason types sampling rates perceptual tasks need performed support goal 
contrast takes position reason control mode appropriate task environment modes operating constantly matter environment 
appropriate adaption arises automatically sequencer activates deactivates skill sets current situation planner reasons goal projecting alternative futures 
explicitly distinguish perceptual tasks non perceptual tasks perceptual tasks treated task 
perceptual tasks produce results information preconditions tasks handled unifying mechanism 
nd complex cases appropriate behavior arises naturally encoding tasks rap representation 
soar laird production system ability switch deliberative reactive modes reasoning learning mechanism caches deliberative results 
soar augmented interface constructed basic computational mechanism rest system 
soar collapses capabilities single mechanism 
guardian soar embraces concept representation commit particular task representation 
shares aspects wilkins 
ap planner similar expressive power level sipe raps compares favorably prs 
raps designed allow integration conventional ai planners write interlingua achieve 
additionally specify canonical interface control tier 
circa musliner simulations strong claim meeting hard real time constraints 
ability architecture request speci skills run certain frequency wehave enforcing request interruption skills 
robots take complex tasks need address hard real time issues record tasks described previous section required capability 
described robot control architecture integrates deliberative situated reasoning representational framework ows seamlessly plan operators continuous control loops 
architecture demonstrated successfully wide range mobile manipulator robot projects real simulated 
division labor tiers architecture permits generalization knowledge multiple projects 
software tools allow rapid implementation complex control systems 
believe ease development software control code notoriously complex wide variety robot systems 
especially true case multiple robotic subsystems 
reasons believe true 
skill manager framework abstracts away need programmer explicitly connect data coming skill 
especially evident mobile robot tracking project skills movement obstacle avoidance separate vision system skills tracking moving objects 
integrated systems straightforward feed output vision tracking skill input obstacle avoidance skill robot follow people avoiding obstacles 
similarly added color tracking system robot code integration greatly simpli ed structure skill manager 
second decoupling real time execution skills sequencing planning skills allow modi cations sequences plans having reinitialize robot controllers 
approach lends naturally bottom approach programming robots lower level skills written debugged separately integrated accomplish task 
wehave begun investigate non robotic control systems 
example modi ed acts world wide web www robot 
accomplished augmenting skill tier architecture set primitives retrieving manipulating universal resource links urls 
task description language ap rap systems lends kinds activities taken users respond environmental disasters 
example response forest re www robots search retrieve maps location maps create logistics plan ghting re 
just task planning languages embodied architecture lend neatly creation interactive decision aids require sensing action 
exploring managing closed ecological life support systems 
previous experiments conducted russia shown crew time spent crop management monitoring environmental control systems 
ort automate processes developed skill sequencing tiers architecture control simulation gas exchange system crew crop wheat 
skills consist setting valve openings plant lighting levels suggesting crew activity monitoring gas ows storage levels 
developing ap plan operators determine cycles various crops support gas exchange requirements crew 
having achieved framework begun investigate integration ai disciplines 
natural language researched raps level martin firby 
machine learning techniques investigated case reasoning planning tier reinforcement learning skill tier bonasso kortenkamp 
architecture bene combining concurrent perception architectures support mapping kuipers byun kortenkamp weymouth 
albus albus mccain 
nasa nbs standard model control system architecture 
technical report tech note nasa ss national bureau standards 
arkin ron arkin 
motor schema mobile robot navigation 
international journal robotics research 
chappell chappell 
guidance control architecture vehicle 
ieee journal ocean engineering oe 
bonasso kortenkamp peter bonasso david kortenkamp 
pursue robot learning 
proceedings mlc colt robot learning workshop 
bonasso peter bonasso marc slack 
reactive robot system nd fetch tasks outdoor environment 
proceedings tenth national conference onarti cial intelligence 
borenstein koren johann borenstein yoram koren 
vector field histogram fast obstacle avoidance mobile robots 
ieee journal robotics automation 
brooks rodney brooks 
control system mobile robot 
ieee journal robotics automation 
connell jonathon connell 
sss hybrid architecture applied robot navigation 
proceedings ieee international conference automation 
macmillan chris richard macmillan 
representation algorithms multiagent adversarial planning 
technical report mtr mitre 
slack chris marc slack 
integrating deliberative planning robot architecture 
proceedings aiaa nasa conference intelligent robots field factory service space 
firby slack james firby marc slack 
task execution interfacing reactive skill networks 
working notes aaai spring symposium lessons learned implemented architecture physical agents 
firby james firby roger kahn peter michael swain 
architecture vision action 
international joint conference onarti cial intelligence appear montreal canada august 
ijcai 
firby james firby 
reactive planning complex domains 
proceedings national conference onarti cial intelligence aaai 
firby james firby 
adaptive execution complex dynamic worlds 
phd thesis yale university 
firby james firby 
lessons learned animate agent project 
working notes aaai spring symposium lessons learned implemented architecture physical agents 
gat erann gat james firby miller 
planning execution monitoring planetary rover 
proceedings space operations automation robotics workshop 
gat erann gat 
integrating planning reacting heterogeneous asynchronous architecture controlling real world mobile robots 
proceedings national conference onarti cial intelligence aaai 
graves sean graves larry wise 
telerobotic interface protocol 
proceedings ieee international robotics automation 
hayes roth barbara hayes roth 
architecture systems 
arti cial intelligence 
huber kortenkamp eric huber david kortenkamp 
stereo vision pursue moving agents mobile robot 
ieee international conference automation 
kortenkamp weymouth david kortenkamp terry weymouth 
topological mapping mobile robots combination sonar vision sensing 
proceedings twelfth national conference onarti cial intelligence aaai 
kortenkamp david kortenkamp marcus huber charles cohen ulrich clint clare bates frank terry weymouth 
integrated mobile robot design winning aaai robot competition 
ieee expert august 
kuipers byun benjamin kuipers yung tai byun 
exploration mapping strategy semantic hierarchy spatial representations 
robotics autonomous systems 
laird john laird allen newell paul rosenbloom 
soar architecture general intelligence 
arti cial intelligence 
martin firby charles martin james firby 
generating natural language expectations reactive execution system 
proceedings th cognitive science conference chicago il 
miller david miller marc slack chris 
implemented intelligent agent architecture autonomous 
intelligent ships symposium proceedings intelligent ship technologies st century 
miller david miller 
plan language dealing physical world 
proceedings third annual computer science symposium knowledge systems columbia sc 
musliner david musliner ed durfee kang shin 
circa cooperative intelligent real time control architecture 
ieee transactions systems man cybernetics 
noreils chatila fabric noreils raja chatila 
plan execution monitoring control architecture mobile robots 
ieee transactions robotics automation 
payton david payton 
exploiting plans resources action 
workshop innovative approaches planning scheduling control san diego ca november 
darpa 

architectures intelligent controls 
gupta editors intelligent control systems theory applications 
ieee press 
shoham shoham 
reasoning change 
mit press cambridge ma 
simmons reid simmons 
architecture coordinating planning sensing action 
proceedings workshop innovative approaches planning scheduling control 
slack marc slack 
computation limited sonar local navigation 
proceedings aaai spring symposium selective perception 
slack marc slack 
sequencing formally de ned reactions robotic activity integrating raps 
proceedings spie conference sensor fusion 
slack marc slack 
navigation templates mediating qualitative guidance quantitative control mobile robots 
ieee transactions systems man cybernetics 
mark 
new improved soar technical report university 
wilkins david wilkins karen myers john leonard wesley 
planning reacting uncertain dynamic environments 
journal experimental theoretical ai 
wong carol wong david kortenkamp mark 
mobile robot recognizes people 
proceedings ieee international conference arti cial intelligence 
yu sophia yu marc slack david miller 
streamlined software environment situated skills 
proceedings aiaa nasa conference intelligent robots field factory service space 

