computing simplicial homology ecient smith normal form algorithms jean guillaume dumas frank david saunders laboratoire de mod calcul imag 
grenoble france universit erlangen institut 
erlangen germany university delaware department computer information sciences newark de usa universit marburg fachbereich mathematik und informatik marburg germany 
recall calculation homology integer coecients simplicial complex reduces calculation smith normal form boundary matrices general sparse 
provide review algorithms calculation smith normal form sparse matrices compare running times actual boundary matrices 
describe alternative approaches calculation simplicial homology 
section describes motivating examples actual experiments gap package implemented authors 
examples include example homology theories calculations lie algebra homology 
geometric properties topological spaces conveniently expressed algebraic invariants space 
notably fundamental group higher homotopy groups homology groups cohomology algebra play prominent role respect 
focuses methods computer calculation homology nite simplicial complexes applications see comments invariants section 
assume topological space homology want calculate simplicial complex 
recall basic notions refer reader books details 
nite simplicial complex 
non empty ground set non empty subset power set 
implies 
loss generality assume ng 
element 
called face 
maximal element 
called facet 
dimension dim face 

dimension dim 

maximal dimension faces 
de nitions imply simplicial complex contains empty set unique face dimension 

denote number dimensional faces 
call dim 
vector 
jean guillaume dumas ith chain group 

coecients ring free module rank basis indexed dimensional faces 
ith di erential 

module homomorphism de ned fa 
easily checked im ker leads de nition ith reduced homology group 
module ker im concerned case eld ring integers 
de nition reduced homology group clearly implies computation reduces linear algebra eld case eld dimension 
vectorspace easily calculated dim ker dim im rank rank convenient identify linear map matrix mat respect canonical bases denote rank rank matrix 
de nitions imply depends characteristic constant elds characteristic lies nite set primes course depend 

quotient subgroups free modules nite rank 

nitely generated abelian group note consider nite simplicial complexes 
order compute structure invariants 
calculate smith normal form matrix mat 
recall smith normal form integer matrix diagonal matrix size equivalent technical details see de nition 
assume 













smith normal form matrix mat natural numbers jb jb 
basis 
corresponds smith normal form basis im linear follows ker possible renumbering choose basis rank basis ker 

write abelian group lz residues modulo computation homology groups simplicial complexes boils fundamental problems exact linear algebra computing simplicial homology calculate rank matrix nite eld 
ii calculate smith normal form matrix focus ii integer coecients 
methods relevant useful context 
clearly rst problem gauss algorithm gives polynomial time algorithm 
size matrix grows ecient methods demand 
ii 
shows problem ecient solution 
matrices arise context request algorithms take advantage special structure order smith normal form algorithm terminates lifetime 
general information complexity problem calculating homology related problems see 
implemented software package computer algebra system gap 
downloaded www cis udel edu dumas homology package split parts part consists external binary implements algorithms calculating smith normal form part implements algorithms create manipulate simplicial complexes gap language 
report key features design implementation simplicial homology package gap system 
basic de nitions relationships involved simplicial complexes homology smith normal forms 
discuss projects geometric combinatorics led design package 
secondly describe detail methods package 
includes information boundary matrices built properties algorithms computing smith normal forms 
addition mention possible new methods possible new connections package mathematical software 
illustrate usefulness approach software addressing couple topics concerning simplicial homology lie algebra homology 
concluding section comment invariants simplicial complexes 
generating boundary matrices purposes simplicial complex conveniently described set facets 
clearly know facets know faces simplicial complex set face facet containing 
list facets gives succinct presentation simplicial complex linear algebra approach simplicial homology requires jean guillaume dumas expensive task generate faces simplicial complex matrices boundary maps set 
hand interesting theoretical question necessary go time consuming computations order calculate homology 
section summarize algorithms implemented package generate set faces set facets boundary matrices set faces 
simplicial complex 
read input data stored array facets 
facets simplices steps stored arrays points contain points indexed integers 
order generate boundary matrix mat rst generate lists simplices dimension le simplicial pas 
course computing homology consecutive dimensions reuse list simplices generation generate new simplex list new dimension 
generating faces basically amounts generating element subsets facet 
main problem simplices especially low middle dimensions subsets facets generated times processing facets 
storing copies memory rst removing duplicates require memory needed store distinct simplices 
cases feasible computation fail point keeping duplicates 
sorting simplices lexicographic order ordered set point indices natural choice allow fast binary searching steps 
merge sort algorithm implemented sort simplices remove duplicates early 
precisely array lists simplices restriction ith list contain entries 
newly generated simplices inserted rst list 
list grows big merged list elements exist lists copy removed merge 
process repeated subsequent lists size list limit 
facets processed lists merged 
lists simplices generated straightforward generate boundary matrices iterating simplices corresponding rows matrix 
technical reasons consider transposed boundary matrix 
clearly transposition change smith normal form 
way obtain matrix row row column column 
elimination algorithm take advantage procedure 
generating matrix row time process row generated 
computing simplicial homology possible matrices total size exceed memory limits 
row generated obtained deleting point simplex looking binary search list simplices get column index alternating matrix entries 
processing natural lexicographic order automatically get row correctly ordered index value format steps storing matrix rows sparse vectors 
elimination algorithm algorithms computing smith normal form gaussian elimination speci modi cations described section 
algorithm implemented variants machine word size integers integers unlimited size provided gmp library 
rst version checks ows aborts detects 
second version initially uses machine integers 
detects ow switches gmp integers ected values 
experience situations machine integers sucient values really ow majority small integers computing machine integers faster gmp integers 
apart implementations algorithm identical 
elimination started attempt avoid entirely 
computed mat know upper bound rank mat dim 
quick pass matrix trying nd linearly independent rows easily possible quickcheck le arith pas 
worth noting due lexicographic ordering simplices column index rst non zero entry denoted row index monotonic rows 
easy count number rows distinct clearly linearly independent 
number big known bound done matrix contains entries point know smith normal form entries 
short cut typically works smaller matrices largest dicult matrices homology group fact take time worth trying anyway 
actual elimination processes matrix row row rst trying nd rows possible distinct denotes matrix entries 
row modi ed row additions situations occurs jean guillaume dumas row vector removed 
clearly case size matrix deal reduced fully generated noted description generation boundary matrix 
distinct previously considered rows 
row kept form 
distinct previously considered rows ja 
rows deferred pass avoid having deal non pivots subsequent row operations hope row modi ed rows considered total number problematic rows small compared size matrix 
con rmed observations 
rows processed rows deferred processed way deferring 
necessary complicated row operations point gcd step dealing rows ja ja divisible vice versa 
second pass matrix echelon form pivots 
frequent case fact pivots count remaining rows done 
remove rows pivots counting vastly reduce size matrix 
empirical observation algorithm cases hundreds thousands rows number remaining rows rarely 
pivots generally leftmost ones requires row additions 
remaining matrix transformed smith normal form standard algorithm described involving row column operations 
expensive sparse vector representation avoided far possible general necessary step 
result allows step modulo determinant nonsingular maximal rank minor 
helpful avoid coecient explosion observed step modulo reduction 
remaining matrix full row rank choose minor leftmost submatrix matrix size smallest matrix containing pivots 
matrix echelon form point determinant just product pivots 
valence algorithm section describe second algorithm computation smith normal form integer matrix 
algorithm proven computing simplicial homology ective boundary matrices discussed worst case asymptotic complexity better best currently known 
practically important aspect method avoid preconditioners introduce log factor running time 
matrix size near factor near hard bear applies computation requires hours days 
er brief overview method 
detail valence algorithm reader refer 
method particularly ective degree minimal polynomial aa small 
kinds problems arising computing smith normal form elimination integers ll sparse matrices coecient growth intermediate values 
lead memory thrashing killing computation see attempts avoid phenomena section 
want bypass problems 
ll ideas reordering reduce ll iterative methods maintain constant level memory usa 
coecient growth modulo primes small powers primes reconstruct integers results intermediate values 
de nitions 
valence polynomial trailing nonzero coecient 
characteristic valence matrix valence characteristic polynomial 
minimal valence simply valence matrix valence minimal polynomial 
valuation matrix degree trailing term minimal polynomial 
characteristic minimal valuations matrix similarly de ned 
min th divisor matrix denoted greatest common divisor minors de ne 
min th invariant factor 

smith normal form diagonal matrix diag min shape known min jd js equivalent smith normal form 
positive integer de ne rank greatest divide th invariant factor denote rank rank 
algorithm statement overview valence method 
individual steps done ways 
discuss implementation details 
order prove correctness method need theorem 
jean guillaume dumas algorithm valence smith form data matrix may black box meaning requirement left right matrix vector products may computed ax ya result diag min integer smith normal form valence computation aa min compute minimal valence see section integer factorization factor valence list primes divide 
rank rst estimate smith normal form 
choose prime divide 
compute 
integer rank 
rst invariant factors nonzero 
set diag sn 
nontrivial invariant factors foreach prime compute sp diag sp smith normal form localization prime ideal 
see section set ssp set nontrivial powers return invariants return diag sn theorem matrix nonzero invariant factors 
prime divides nonzero divides characteristic valence aa divides minimal valence aa 
true corollary algorithm valence smith form correctly computes smith normal form 
proof 
theorem shows consider relevant primes 
evident integer smith normal form may composed relevant computing simplicial homology local smith normal forms integer smith normal form local smith normal form multiples units mod minimal valence computation rst steps valence algorithm purpose determining small rate nite set primes includes primes occurring smith normal form 
choice algorithm aa easily view 
lemma matrix minimal polynomials aa equal di er factor di erence degree negligible ect run time algorithm 
advantageous choose smaller aa algorithm reduce cost inner products involved 
bound coecients applied aa vice versa 
chinese compute integer minimal valence matrix valence minimal polynomial integers chinese minimal polynomials mod various primes algorithm steps 
compute degree minimal polynomial doing trials modulo primes 
compute sharp bound size valence degree 
chinese modulo primes 
rst question primes chinese 
hadamard inequality theorem induce primes 
hadamard bound may pessimistic estimate sparse matrices 
bound determined consideration disks ovals cassini 
bound form bound eigenvalues degree minimal polynomial 
th disk centered radius sum absolute values entries th row 
theorem eigenvalues contained union disks 
go consider ovals cassini may produce sharper bounds 
purposes suces note cassini oval subset circles eigenvalues contained union ovals 
proposition bound coecients minimal polynomial 
proposition spectral radius bounded valence absolute value jm maxf jean guillaume dumas matrices constant size entries 
small relative especially may striking improvement hadamard bound length order log log 
experiments suggest case homology matrices 
aa small minimal polynomial degree useful properties 
instance diagonally dominant 
think facts true homology matrices 
hand proof assertion converse 
remains compute bound spectral radius 
expensive compute bounds mentioned staying strictly black box model 
require matrix vector products extract row column access elements bound spectral radius easily obtained arbitrary precision operations diagonal values computed rst simple dot product ij serve centers disks ovals 
radii compute absolute value set jq minimal polynomial integers bad primes question compute minimal polynomial matrix modulo primes 
perform probabilistic algorithm 
probabilistic sense returns polynomial deterministically factor minimum polynomial minimal polynomial 
know degree minimal polynomial just degree check sure computed polynomial correct 
order complete valence computation sure degree polynomial integers 
compute degree choose primes random 
degree integer minimal polynomial maximal degree minimal polynomials mod high probability 
primes may give lower degree minimal polynomial 
call bad primes 
bound probability choosing bad prime random bounding size minor matrix prime divide 
degree integer minimal polynomial upper bound number bad primes 
proved value jm suppose choose primes random set primes greater lower bound log primes greater dividing suces pick adequately large set reduce probability choosing bad primes 
distribution primes assures computing simplicial homology adequately large constructed containing primes excessively large 
give complete algorithm computation valence 
algorithm involves computation minimal polynomials fast probabilistic computation method probability estimates early termination 
construct integer minimal polynomial chinese 
denote lower bound number distinct primes bound easily computed direct bounds number primes lower theorem 
binary cost multiplication integers length denoted classical multiplication uses bit operations karatsuba method uses sch strassen method uses log log log 
convenience soft oh notation cost functions write log constant 
matrix number nonzero entries 

theorem algorithm integer minimal polynomial correct 
log bounds lengths minimal polynomial coecients 
algorithm uses expected time sde log constant size entries 
uses log ds memory coecient minimal polynomial computed log valence computed 

practice actual number distinct primes greater dividing homology matrices small say picked primes primes 
giving bad primes 
polynomials reduces probability failure ranks computation valence computed know primes involved smith normal form 
factor valence perform rank computations modulo primes 
problems arise 
need compute rank modulo power prime deal elimination method 
second valence hard factor case consider big composite factor prime 
problems arise elimination iterative resolution fact factorization number achieved 
pay high cost explicit factorization large numbers large prime factors 

jean guillaume dumas algorithm imp integer minimal polynomial data matrix error tolerance upper bound primes computations fast result integer minimal polynomial correct probability 
initialization rst set primes set set set set ovals cassini bound set computations fast compute polynomials mod repeat choose prime compute polynomial wa method 
wa probability correct probability deg wa set deg wa set fp set set nd set bad log bad primes set bad primes set upper bound primes set computations slower degree correct probability deg fp maxf bad chinese remainders return built computing simplicial homology consider question computing local smith normal form equivalent computation rank mod suciently recall de ne rank mod number nonzero invariant factors mod number cases success elimination approach despite ll problem 
rst elimination method iterative method lower space requirements 
elimination method due intermediate expression swell ective compute directly localization prime ideal perform computation mod determines ranks mod powers smith normal form suppose means nd zero mod previously determined integer rank determined smith normal form locally rank mod repeat lre computation larger exponent nonzero mod theorem positive integer algorithm local ranks elimination mod correct runs rmn arithmetic operations mod rank mod memory 
algorithm diagonal scaling matrices elimination approach just described fails due excessive memory demand disk thrashing 
desirable memory ecient method cases 
iterative methods proposed 
rst shelf 
algorithm diagonal scaling compute rank mod scaling ensures high probability minimal polynomial shift characteristic polynomial fact form xf characteristic polynomial form follows rank degree probability correctness greater requires computation eld size 
large extension eld may 
avoid large eld requirement may technique heuristic computing polynomial smaller eld 
resulting polynomial guaranteed factor true minimal polynomial suces verify 
may probabilistically done choosing vector random computing probability zero nonzero repetition process log times ensures rank computed correctly probability 
algorithm lower memory requirements elimination requiring eld elements number nonzero jean guillaume dumas algorithm lre local ranks elimination mod data matrix elements ij prime positive integer result ranks initializations set set successive gauss steps exponent ja st st pivot swap rows columns foreach fr mg fr ng elimination division mod set ar ar mod set set invariant factors foreach fr mg fr ng set ij ij return local ranks return entries 
algorithm better asymptotic time complexity de log eld operations ective practice large sparse matrices large elds 
give complete local smith normal form propose adic way compute invariant factor local smith normal form may infer complete structure local smith normal form cases 
experiments homology matrices section talk mainly homology matrix classes 
matrices denoted naming patterns bj denotes boundary matrix matching complex see vertices 
computing simplicial homology chi bj denotes boundary matrix chessboard complex see 
nick bj denotes boundary matrix connected graph see vertices 
boundary matrices sparse matrices xed number nonzero elements row column 
boundary map dimensions simplicial complex 
entries 
laplacians entries diagonal respectively expected laplacians twice nonzero elements perform matrix multiplications compute performed matrix vector products 
laplacians low degree minimal polynomial say matching chessboard matrices close fact chief motivation develop valence method 
experiments realized cluster sun microsystem ultra enterprise mhz ultra ii processor mb mb memory 
computed ranks matrices nite elds gf half word size 
chosen arithmetic discrete logarithms precomputed tables 
algorithms implemented library computer algebra athapascan environment parallelism 
table report comparisons algorithm elimination reordering computing rank 
just want emphasize fact matrices homology long memory available elimination ecient 
larger matrices algorithm competitive solution 
table compare timings algorithm implementations methods 
compare results obtained version valence smith form algorithm algorithm compute valence elimination modulo small powers primes compute invariant factors locally simplicial homology proposed gap share package 
computes homology groups simplicial complexes smith normal form boundary maps 
features version valence algorithm classical elimination method homology groups 
entry hom elim gmp table refers symbolic linear algebra library www org parallel execution support apache project 
imag fr software jean guillaume dumas table 
rank mod elimination vs matrix elimination mk mk mt hours ch ch ch ch hours hours ch mt hours elimination method gnu multi precision integers 
fermat computer algebra system macs windows 
smith normal form routine implementation 
table 
fermat vs hom elim gmp vs matrix fermat hom elim gmp valence eliminations ch mk mk mk mk mk mt mt hom elim gmp valence ran mhz sparc ultra processor mb fermat available mac windows 
report experiments fermat mhz intel processor mb 
see fermat compete hom elim gmp case 
main explanation pivot strategy hom elim gmp suited homology matrices 
see long coecient growth involved hom better valence 
hom elim gmp performs integer elimination valence performs elimination prime involved number eliminations shown parenthesis column valence eliminations table course parallel di erence weaken 
soon coecient growth important valence winning 
valence memory ef cient iterative methods give partial results memory exhaustion due ll prevents eliminations running completion 
table see ects partial computing simplicial homology results table 
ffor matrices able compute ranks modulo primes occurrence primes smith normal form actual powers primes 
currently known results matrices 
table 
valence smith normal form black box techniques matrix time results mk hours partial ones powers ch hours partial ones powers powers ch hours complete ones valence approach able compute rank modulo primes matrices rows columns elimination failing matrices sizes larger 
remains open eciently determine ranks modulo powers primes memory ecient iterative methods 
methods algebraic shifting desirable able read homology simplicial complex directly list maximal faces 
complexes example shelling order maximal faces allow determine homology 
calculating shelling order probably hard knows priori complex see 
particular class complexes simple procedure determining homology known 
simplicial complex 
ground set called shifted 
number fjg fig 
lemma 
shifted complex 
ith homology group 
free rank maximal faces 
cardinality contain element 
clearly simple algorithm allows linear time determination homology groups maximal faces 
admit shifted complexes small subclass class complexes 
algorithmic procedure determines shifted complex 
simplicial complex 
procedure called algebraic shifting discovered gil kalai see original details 

simplicial complex 
exterior algebra freely generated write 
js ordered subsets fj 


denote ideal generated jean guillaume dumas monomials 
ideal 
called stanley reisner ideal 
clearly virtue exterior algebra monomials form 
order specify linear order monomials suces order subsets linearly 
lexicographic order minimum lies perform generic linear transformation generators obtain new generators ij consider set system shifted fa span ffb jb ag 
proposition kalai see set system 
shifted shifted simplicial complex 
state theorem allows algebraic shifting homology calculations 
theorem kalai see 
simplicial complex 
shifted result algebraically shifting 
eld 

shifted recall question kalai 
polynomial time algorithm computing algebraic shifted complex simplicial complex 
maximal faces minimal free resolutions stanley reisner ideals 
simplicial complex ground set 
xn polynomial ring variables stanley reisner ideal 
analogous situation exterior algebra ideal 
generated monomials xa 
module module allows vectorspace direct sum decomposition 

clearly 

consider free resolutions 
module polynomial ring 


homogeneous map modules ker im module xn obtain complex 
computing simplicial homology homogeneous di erential 
homology groups known tor 

di induces decomposition tor 
special case result says theorem 
simplicial complex 
tor 
hn 
di erential yields di erential general di erent simplicial di erential 
computes homology groups eld coecients 
goal construct economic nd free resolution 
small strand 
clearly economic resolution respects minimal free resolution 
di erential assumes simplest form computer algebra packages macaulay cocoa compute minimal free resolution involves computing gr bases feasibility approach low performed comparative experiments 
free resolutions simpler construct monomial generators 
example mention taylor resolution 
consider interesting challenging problem analyze free resolution 
respect ectiveness calculating homology 
strand 
deducing homology simplicial complex dual algebraic methods described ideals description minimal simplicial complex 
fundamentally di ers description simplicial complex facets 
discuss ects homology computations 

simplicial complex ground set denote 
fa 
dual simplicial complex 
minimal non face 
maximal face 
homology eld coecients 

related alexander duality cor 
isomorphism homology cohomology eld coecients cor 

hn 
particular shows calculating homology irrelevant simplicial complex maximal faces minimal non faces general dicult problem pass representation grateful marc pointing jean guillaume dumas 
particular complexity algebraic methods algebraic shifting nite free resolutions described depend simplicial complex maximal faces minimal non faces 
deducing integer homology eld coecient homology method algebraic shifting method free resolutions calculate simplicial homology coecients eld clearly nitely primes call critical primes simplicial complex torsion 
universal coecient theorem thm 
sizes torsion parts various primes torsion occurs deduced homology computations primes elds critical primes characteristic 
set critical primes deduced done valence algorithm see section 
problem arises distinguish torsion 
nd challenging problem nd eciently computable invariants help distinguish torsion sample applications complexes graphs complexes graphs motivating source development gap package 
graph vertex set edge set assume assume contains loops multiple edges 
considered subset fa 
conversely subset considered edge set graph 
distinguish graphs subsets call simplicial complex 
ground set complex graphs 
concept general usually interested graph complexes high symmetry respect set vertices 
complexes connected graphs graph called connected sequence edges connects usually call connected graph 
graph called connected connected vertices adjacent edges deleted graph remains connected 
clearly removal edges preserves property connected 
set 
connected graphs simplicial complex 
case primary motivation starting point development gap package 
calculations early versions predecessors package led conjecture turned theorem 
theorem 

computing simplicial homology matrices coming example timing examples previous parts manuscript 
demonstrate sample session functions homology package 
start gap load package 
gap information www gap dcs st ac uk gap help 
copyright authors list copyright authors loading library 
please patient may take 
gap version fix aug sparc sun solaris gcc components small small small id id trans prim tbl tom installed 
gap homology true calculate homology complex connected graphs vertices 
theorem know homology concentrated dimension 
free dimension 

recon rm homology dimension 
gap simplicial complex dimension facets homology computing homology groups faces finding faces dimension faces faces dimension faces finding faces dimension faces faces dimension homology finding rank boundary map jean guillaume dumas elimination triangulating matrix modified gauss elimination elimination current torsion free rank current rank max 
rank elimination current torsion free rank current rank max 
rank line tells rows matrix th di erential processed far span rank 
general implications fact sequence di erential complex maximal possible rank matrix 
look output minutes 
elimination current torsion free rank current rank max 
rank elimination current torsion free rank current rank max 
rank elimination matrix triangulated homology rank faces finding faces dimension faces faces dimension homology finding rank boundary map elimination triangulating matrix modified gauss elimination elimination current torsion free rank current rank max 
rank th di erential brought smith normal form 
calculation homology group homological dimension program started analyze matrix th di erential 
minutes waiting bring elimination current torsion free rank current rank max 
rank elimination current torsion free rank current rank max 
rank elimination matrix triangulated homology rank homology 
homology homology groups computed smith normal forms th th di erential calculated program determines homology group asked expected 
note process calculating group brought roughly minutes linux pc mhz matrices smith normal form row column sizes digit numbers 
computing simplicial homology homology 
determined rst examples homology computations combinatorics see 
conjecture computer calculations veri ed jakob jonsson 
problem wide open 
simple alexander duality argument reduces problem calculating homology matching complexes 
matching complexes graph vertex set partial matching subset edges share vertex 
clearly set 
partial matchings simplicial complex 
complete graph vertices simply call 

matching complex complete bipartite complex vertices vertices partition call 

chessboard complex name derived fact complex de ned set non rook positions chessboard 


ubiquitous mathematics see excellent survey 
complexes raised interest computational point view 
contrast complexes 
complexes exhibit torsion 
strikingly torsion torsion 
see con rmed proof computer calculations package 
regard prototype application package run examples get conjecture prove conjecture 
case computer calculations picture 
going philosophy poses problem eliminate computer calculations proof 
lie algebra homology section show computational tools implemented restricted calculating homology simplicial complexes applied computation homology general algebraic complexes 
example consider homology nite dimensional lie algebras 
lie algebra nite dimension eld consider map de ned 



im ker de ne homology group ker jean guillaume dumas de nition sense arbitrary lie algebras eld nite dimensional vector space vectorspace computation reduces computation ranks matrices 
section report experiments run lie algebras associated nite partially ordered sets 
consider fp png nite partially ordered set order relation eld 
denote set matrices ij ij implies strict inequality 
assume implies set lower triangular nilpotent matrices places order relation easy see ab ba lie algebra 
dimension dim number strict order relations example chain fp 
pn set lower triangular nilpotent matrices dim char known result gives complete information homology groups 
denote inv set inversions permutation set pairs 
theorem eld characteristic 
dim sn inv ig known number permutations sn inversions inversions 
incarnation poincar duality lie algebra homology see ch 
vii 
theorem nite dimensional lie algebra dimension dim dim dim oder calculate homology nite dimensional lie algebra suces calculate homology groups half dimension 
challenging problems arise lie algebras express dimension dim terms eld characteristic 
express dependency dim characteristic eld question integer coecients interest 
consider di erential coecients integers calculating homology amounts computing smith normal form matrices di 
observe picture ranks free parts obey poincare duality usual integer coecients torsion groups obey poincare duality homological dimension shifted 
computing simplicial homology table 
lie algebra homology inn 




jean guillaume dumas know interpretation torsion think interesting question construct combinatorial model determining torsion coecients 
result dwyer says torsion occurs homology nz 
torsion nz 
questions raised analogs integers variant software help calculate examples infer conjectures 
example values case bn boolean algebra subsets 
table 
lie algebra homology bn inn invariants simplicial complexes algebraic topology developed invariants topological spaces looked case simplicial complexes 
just want comment consider prominent 
cohomology calculation cohomology 
simplicial complex 
reduces problems homology 
note boundary computing simplicial homology matrices cohomology choosing canonical bases transpose boundary matrices homology 
explicit cycles cycles challenging problem calculating explicit generators homology cohomology groups 
goal nd set elements 
representatives minimal generating set 
resp 


representatives elements 
resp 

called cycles resp 
cycles 
analyze algorithms see elimination principle achieve goal enormous extra amount memory consumption store transformations applied order get smith normal form see worst case considerations integer linear algebra problems involved solution problem 
note valence algorithm able give explicit generators 
cohomology algebra impose direct sum abelian groups 

naturally structure algebra note non reduced cohomology di ers reduced cohomology copy dimension 
explicit known presentation algebra linear algebra 
applying gr base techniques allows standardized presentations calculations algebra invariants 
problem theory explicit calculations feasible small examples 
hand importance cohomology algebra challenging goal nd ecient algorithms computation 
fundamental group assume simplicial complex 
connected 
fundamental group 
nitely group 
conversely easily seen nitely group occur fundamental group simplicial complex 
see exercise 
simplicial complex presentation fundamental group eciently constructed 
results show word problem groups decidable 
fundamental group invariant easily give presentation properties general computable 
results show algorithms give results nice cases 
rees fundamental group give algorithm calculating rst homology group coecients eld characteristic 
know fact 
isomorphic 


eric anders bj john complexes connected graphs 
topology 
jean guillaume dumas 
achim ravindran kannan 
polynomial algorithms computing smith hermite normal forms integer matrix 
siam journal computing 

william 
certain simple unsolvable problems group theory 

math 


alfred brauer 
limits characteristic roots matrix 
duke mathematical journal 

alfred brauer 
limits characteristic roots matrix 
ii 
duke mathematical journal 

richard stephen 
regions complex plane containing eigenvalues matrix 
american mathematical monthly 

antonio lorenzo cocoa system doing computations commutative algebra 
available anonymous ftp cocoa dima unige 
david 
commutative algebra view algebraic geometry springer 

jean guillaume dumas frank david saunders 
simplicial homology proposed share package gap march 
manual www cis udel edu dumas homology 

jean guillaume dumas david saunders gilles 
ecient sparse integer matrix smith normal form computations 
journal symbolic computations 

pierre 
de la fonction qui le nombre de nombres 
phd thesis universit de 

william dwyer homology integral upper triangular matrices 
proc 
amer 
math 
soc 


wayne eberly erich 
randomized lanczos algorithms 
wolfgang editor proceedings international symposium symbolic algebraic computation maui hawaii pages 
acm press new york july 

michael fredman leonid khachiyan 
complexity dualization monotone disjunctive normal forms algorithms 

gap group gap groups algorithms programming version 
www gap system org 
joachim von zur gathen urgen gerhard 
modern computer algebra 
cambridge university press new york ny usa 

mark 
probabilistic computation smith normal form sparse integer matrix 
lecture notes comp 
sci 

springer 

gene golub charles van loan 
matrix computations 
johns hopkins studies mathematical sciences 
johns hopkins university press baltimore md usa third edition 

daniel grayson michael stillman macaulay software system research algebraic geometry available www math uiuc edu macaulay 
melvin 
cohen macaulay rings combinatorics simplicial complexes 
ring theory ii proc 
nd conf 

lecture notes pure applied mathematics 
vol 

new york 
marcel dekker 

computing simplicial homology 
phil 
survey combinatorial problems lie algebra homology 
louis 
ed 
formal power series algebraic combinatorics 
providence ri american mathematical society 
dimacs ser 
discrete math 
theor 
comput 
sci 


inclusion poset homology lie algebra homology 
pure appl 
algebra 


worst case bounds algorithms computing canonical structure nite abelian groups hermite smith normal forms integer matrix 
siam comput 



worst case bounds algorithms computing canonical structure nite abelian groups solving systems linear diophantine equations 
siam comput 


gil kalai 
algebraic sh ting 
computational commutative algebra combinatorics advanced studies pure math vol 

tokyo 
math 
soc 
japan 


erich wen shin lee austin lobo 
early termination ben tiwari sparse interpolation hybrid algorithm 
carlo traverso editor proceedings international symposium symbolic algebraic computation saint andrews scotland pages 
acm press new york 

volker kaibel marc 
algorithmic problems polytope theory preprint 
dimitris elias 
evaluation algorithm transversal hypergraph problem 
proc 
rd workshop algorithm engineering lecture notes comp 
sci 
springer 

anthony knapp 
lie groups lie algebras cohomology mathematical notes princeton university press 

bertram 
lie algebra cohomology generalized borel weil theorem ann 
math 


robert lewis 
fermat computer algebra system polynomial matrix computations 
www net lewis 

james elements algebraic topology addison wesley menlo park 

james topology nd edition prentice hall 

sergey 
algorithmic unsolvability word problem group theory mat 
inst 


sarah rees leonard algorithmic approach fundamental groups covers combinatorial cell complexes symb 
comp 


ernest sibert harold mattson paul jackson 
finite field arithmetic connection machine 
richard editor proceedings second international workshop parallel algebraic computation ithaca usa volume lecture notes computer science 
springer 

arne near optimal algorithms computing smith normal forms integer matrices lakshman 
ed proceedings international symposium symbolic algebraic computation issac new york ny acm press 


olga 
bounds characteristic roots matrices 
duke mathematical journal 
jean guillaume dumas 
vladimir 
homologies complexes doubly connected graphs 
russian math 
surveys 

richard varga 
matrix iterative analysis 
number springer series computational mathematics 
springer second edition 

michelle 
topology matching chessboard general bounded degree graph complexes 
preprint 

douglas 
solving sparse linear equations nite elds 
ieee transactions information theory 
