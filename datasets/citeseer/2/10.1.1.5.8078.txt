diligent fine grained methodology distributed loosely controlled evolving engineering ontologies sofia pinto steffen staab christoph tempich 
ontology engineering processes truly distributed settings semantic web global peer peer systems may adequately supported conventional centralized ontology engineering methodologies 
gent methodology intended support domain experts distributed setting engineer evolve ontologies help fine grained methodological approach rhetorical structure theory viz 
diligent model ontology engineering argumentation 
motivation widespread conviction knowledge engineering methodologies building knowledge systems help knowledge engineering projects successfully reach goals time cf 
widely deployed methodologies 
arrival ontologies knowledge systems kind methodological achievement structuring process pursued approaches application proposed areas semantic web :10.1.1.55.5357
point mismatches proposals including requirements meet semantic web 
classical development knowledge systems corresponding ontologies centralized targeted knowledge system 
contrast consider general tendency support distributed information processing ontologies semantic web agents web services ontology peer peer 
stakeholders ontologies developed cases hardly gather place 
interest fruitfully contribute ongoing development ontologies 

existing methodologies support knowledge engineering ke check lists guide engineering process 
check lists shaped needs knowledge engineers comprehensively cope nearly arbitrarily complex processes 
contrast distributed cases consider participation knowledge engineer restricted possibly complex core ontology 
core cases involve extensive participation comparatively simple concept formation domain experts 
instituto superior universidade de lisboa portugal email sofia pinto dei ist utl pt aifb university karlsruhe germany email staab tempich aifb de 
ke focused running system moderate effort maintenance 
contrast ontologies distributed information processing permanently evolve order reflect widely diverging needs users 

ke methodologies remain coarse gap description concrete actions taken filled ke 
contrast semantic web ontologies comparable cases ask question provide domain experts fine grained guidance order improve effectiveness efficiency ontology engineering 
account differences classical knowledge engineering ontology engineering methodologies derived started develop methodology distributed cf 
item loosely controlled cf 
item evolving cf 
item engineering ontologies validity partially checked checked experiences case studies cf 

focus consideration cf 
item ontology engineering benefit fine grained methodological support 
answer question develop methodological hypothesis retrospective analysis historical ontology engineering task viz 
engineering evolution classification life forms biology 
specifically investigate argumentation structures dominate progress ontology engineering task accounted finegrained methodology 
test methodological hypothesis vivo experiment collaborative ontology engineering fine grained methodological guidance 
remainder start explaining methodological framework diligent section 
rhetorical structure theory rst constitutes theoretical underpinning fine grained methodology section 
section go different cases experiments help shape test diligent 
concluding compare related contrasted 
diligent process order provide background knowledge gent argumentation model sketch framework embedded diligent process cf 

scenario distributed development experts different complementary skills involved collaboratively building ontology 
instance virtual organizations open source standardization efforts experts belong different competing organizations geographically dispersed 
cases builders typically users users directly involved changing ontology take part process ontology 
process describe general process roles functions diligent process 
comprises main activities build local adaptation analysis revision local update cf 

process starts having domain experts users knowledge engineers ontology engineers building initial ontology 
contrast known ontology engineering methodologies available literature focus distributed ontology development involving different stakeholders different purposes needs usually location 
require online ontology engineering support 
team involved building initial ontology relatively small order easily find small consensual version shared ontology 
require completeness initial shared ontology respect domain 
product available users start locally adapting purposes 
typically due new business requirements user organization changes local ontologies evolve similar way folder hierarchies file system 
local environment free change reused shared ontology 
allowed directly change ontology shared users 
furthermore control board collects change requests shared ontology 
ontology user domain expert ontology engineer knowledge engineer ontology user ontology user control board editors 
roles functions distributed ontology engineering board analyzes local ontologies requests tries identify similarities users ontologies 
changes introduced requested users introduced crucial activity board deciding changes going introduced version shared ontology 
input users provides necessary arguments underline change requests 
balanced decision takes account different needs users meets user evolving requirements 
board regularly revise shared ontology local ontologies diverge far shared ontology 
board balanced representative participation different kinds participants involved process 
new version shared ontology released users update local ontologies better knowledge represented new version 
differences small users idea kind development merge user ontologies 
trends modern software engineering methodologies see rational unified process 
may reuse new concepts previously locally defined concepts correspond new concepts represented new version 
applied process model case folder sharing peer peer setting centralized core folder structures individual specific folder structures 
experiences substantiated validity diligent cf 

threads arguments central issue diligent process keeping track threads exchanged arguments 
identify stages arguments play essential part ontology defined shared specification conceptualization 
shared essential feature neglected 
diligent experts exchange arguments building initial shared ontology order reach consensus users comments suggestions control board local adaptations requested provide arguments supporting control board analyzes changes introduced requested users balances different possibilities arguments exchanged balanced decide shared ontology change 
evidence distributed ontology development time consuming complex difficult particular getting agreement domain experts 
needs appropriate framework assure easier way 
order provide better support needs identify kind arguments relevant effective reach consensus 
rhetorical structure theory classify kinds arguments identify effective ones 
rhetorical structure theory aim rhetorical structure theory rst offer explanation coherence texts 
assumed part coherent text function 
rst focuses showing evident role part text 
text usually divided structures building blocks 
blocks levels nuclearity relations 
frequent structure spans text virtually adjacent 
usually related specific role relative span making claim nucleus span evidence satellite 
relations spans text identified loosely defined 
examples provided case study section highlight different elements way 
span nucleus 
relation indicator 
span satellite relation hand presentational relations background increases ability reader comprehend element evidence reader comprehension increases belief justify restatement summary hand subject matter relations elaboration presents additional detail instance set member abstraction instance part object attribute evaluation purpose relations carry definite selection nucleus contrast reader recognizes comparability differences situations described analysis process intended give structured definite way person understand text state part understanding includes 
may find structural role element text 
text may analysis observer finds ambiguity finds combination analyzes best represents author intent 
analysis gives account textual coherence independent lexical grammatical forms text 
available tools tables explain relations spans text 
analysis process manual intensive requires full nl understanding 
case studies section report diligent argumentation model developed 
biology area taxonomy evolving years approach 
rst analysis real arguments exchanged support changes taxonomy formulated hypothesis subset arguments focus speed ease kind ontology engineering 
order prove hypothesis performed vivo experiment rounds 
participants constrained 
second participants requested subset arguments effective round 
show improvements achieved restricted set arguments proposed fine grained diligent model ontology engineering argumentation 
case study biology domain taxonomy living things essential studying classifying understanding life 
analyse evolution notes completely follows step diligent process 
initially proposed build observable features 
branch tree levels depending rich taxa terms number beings sharing classifying feature 
initial proposal taxonomy changed lot 
take highest level kingdom 
initially taxa identified animals plants 
discovered moving ones classified animals kingdom colored non moving ones plants kingdom 
classified 
users locally adapting taxonomy purposes 
easily identify organisms classes proposed new kingdom easily identify kingdom 
exists today regarded junk basket category 
issue naming 
binomial system genus species identify taxonomy 
difficulty similarity names evolving new knowledge growing number life forms difficulty making available date knowledge stakeholders life forms problems designing managing complex live dynamic taxonomy arose 
time names plants animals controlled different boards 
receive requests changes analyse balance pros cons decide adequate changes introduce revise taxonomy accordingly 
new version available users locally update 
provide examples due lack space reuse names different 
summarize major force reorganization taxonomy time identification important classifying features gathering beings sharing value feature class 
instance classical version whittaker recognizes fungi 
regarding eukaryotic organisms fungi classify multicellular organisms respectively 
fungi promoted subclass taxa kingdom kingdom 
classes promoted moved folded deleted merged renamed known life earth 
currently advances molecular biology tendency approach taxonomy organized evolutionary relationships live forms derived similarity 
split ideally binary twoway organisms contained share unique ancestor 
entails major reorganization tree life 
reason design decisions radically different previous approach 
example analyzing arguments exchanged taxonomists change names organization taxonomy perceive vast array complexity 

including genera 
elaboration group forms supported molecular trees data 
evidence far trees nuclear ribosomal data reveal supported group antithesis contradictory recognition 
concession 
discussion analysis arguments driving evolution taxonomy life earth led assumption rst useful analyze arguments exchanged ontology building process distributed environments 
arguments point view focus see elaborated arguments biology case study play major role examples evidence counter examples elaboration alternatives comparisons convey certain decision 
case study computer science department order substantiate hypothesis appropriate argumentation framework facilitate ontology engineering process pursued experiment computer science department 
arguments collaborative distributed settings take place social environment 
organizational issues non negligible taken account 
performed experiments participants constrained way second participants asked subset arguments stricter rules conduct discussions 
task sessions build ontology represents knowledge available research group internal knowledge management research area comprehensible outsiders 
experiments lasted hour half 
eleven participants computer science department domain example www ncbi nlm nih gov taxonomy html index cgi chapter experts ontology engineering 
active discussions 
concepts added argumentation consensus achieved 
experiment goal experiment identify dominant arguments push forward ontology development 
setting participants met virtual chat room 
moderator responsible remind people stay subject include modelling decisions formal ontology visualized web page 
stage procedural methodological restrictions priori imposed 
example excerpt real dialogues place 
sa dont care plays baseball am modelling research domain 
evaluation cs sa just example 
circumstance ct purpose website people get informed purpose cs person restatement jt find bit interesting conference problem motivation 
result participants brought forward different kinds arguments background knowledge examples elaboration 
led different argumentation threads participants discussing different topics time 
points threads time time including procedural noise 
discussion tangled points difficult follow 
topics discussed included appropriate formalism model ontology detailed elaboration leaf concepts top level concepts philosophical modelling decisions roles vs multi inheritance main modules topic lists time time participants called vote 
seldom decision reached 
moderator interacted rarely discussion 
result core ontology concepts role topic agreed 
analyzed discussion help rst 
table lists frequency different arguments exchanged experiment 
identify arguments influence creation ontology viz 
elaboration evaluation justification examples counter examples alternatives 
respect experimental setup identified problems participants started discussion threads lost overview discussion proceeded fast everybody follow argumentation moderator reluctant intervene explicit possibility vote decisions 
setting participants shared similar background knowledge creation shared conceptualization guidance impossible time consuming 
concluded controlled approach needed respect process moderation 
second experiment goals second experiment underline appropriate argumentation framework ontology creation proceeds faster effectively resulting ontology represents shared view 
changed transcripts bit sake readability 
arguments round second round elaboration eval 
just 
contrast alternative example counter example background knowledge motivation summary restatement purpose condition preparation circumstance result enablement list concepts agreed relations agreed table 
arguments outcome setting second experiment participants asked extend ontology built round 
phase formalism represent ontology fixed 
general concepts initially proposed avoid philosophical discussions 
initial ontology defined modelling primitives topics different roles people involved 
second round arguments elaboration examples counter examples alternatives evaluation justification allowed 
participants second case study joined virtual chat rooms 
providing topics discussion hand raising voting 
served exchange arguments 
participants experiment wanted discuss certain topic new concept introduce chat room 
topics discuss published web site processed sequentially 
topic allowed arguments 
participants provide arguments hand raising waiting turn 
participants decided autonomously topic sufficiently discussed called vote decided model certain aspect domain 
evolving ontology published web site 
moderator tasks experiment restrictive 
needed moderator called example argument enforce participants express wishes clearly 
example example arguments window 
cs done quite bit research distributed knowledge management dkm lately 
suggest dkm topic plus subtopic peer peer elaboration ah suggest knowledge management km super concept dkm dkm kind km elaboration justification jt am wondering dkm file exchange km 
counterexample ph suggest distributed comp 
dc grid subtopics dkm subtopic dc km elaboration pro ph approach separates km justification evaluation cs agree ph suggestion 
result expected discussion focused due stricter procedural rules 
agreement reached quicker 
total new concepts agreed 
stack topics discussed due time constraints focus group kept 
relations proposed agreed 
methodological point view classify ontology engineering approach followed middle 
restricted set arguments easy classify ontology engineer able build ontology straightforward way 
possible explain new attendees certain concept introduced modelled way 
possible state argumentation line justify 
participants truly shared conceptualization understand 
particular conflict situations opinions diverged restriction arguments helpful 
way participants prove view convinced 
lessons learned experiments provide strong indication full fledged evidence restriction possible arguments enhance ontology engineering effort distributed environment 
addition second experiment underlines fact appropriate social management procedures tool support help reach consensus smoother way 
process certainly enhanced better tool support 
argumentation stack alternatives stack helpful 
arguments particular elaboration evaluation justification alternatives discussed heavily 
lack appropriate evaluation measures difficult times contradicting opinions achieve agreement 
argumentation focused evaluation criteria 
rst analyze real dialogues carefully written texts mention particular round discussion tangled difficult classify parts 
restricted set easy identify conjecture provision template arguments ease task 
related collaborative ontology engineering examined years different perspectives 
see research areas related 
deals ontology engineering general second done methodologies collaborative ontology engineering third deals remote collaboration 
outlined differences general ontology engineering methodologies approach sections refer 
methodology collaborative ontology engineering proposed 
aim support creation static ontology 
knowledge engineer defines initial ontology extended changed feedback panel domain experts contrast support online discussion distributed group participants interact 
process deals evolving ontologies static ones 
describes system collect feedback different ontological 
feedback analysed structured way 
number technical solutions tackle problems remote collaboration ontology editing mutual exclusion inconsistency detection voting mechanism evolution ontologies different means 
solutions address issue keeping ontology consistent 
obviously supports intend process ontology engineers way methodology 
process benefit incorporation appropriate argument visualization cf 

widely agreed ontologies core enabler semantic web 
development ontologies centralized settings studied established methodologies exist 
current experiences projects analysis evolution classification life forms biology suggest ontology engineering subject continuous improvement time action 
methodology distributed evolving ontology engineering settings needed 
process model fine grained methodological approach driven argumentation evolving distributed environments 
rst analyze arguments exchanged consensus sought evolving distributed ontology engineering processes 
strong evidence vivo experiment argumentation framework decisively contributed speeding process finding truly shared ontology 
particularly important development shared ontologies distributed settings semantic web 
arguments identified useful ontology building process elaboration evaluation justification alternatives examples counter examples 
having provided evidence applicability methodology interesting assess distributed ontology engineering efforts ieee suo benefit findings 

research reported partially financed eu ist project swap ist funda 
particular want participants experiments fruitful discussions 
referees comments helped improve 
farquhar ontolingua server tool collaborative ontology construction technical report ksl stanford 
gangemi ontology integration experiences medical terminologies formal ontology information systems ed nicola guarino pp 
amsterdam 
ios press 
mez rez ontological engineering advanced information processing springer 
gruber principles design ontologies knowledge sharing formal 
conc 
analysis knowl 
rep eds guarino poli 
kluwer acad 
pub 
joshi collaborative approach ontology design commun 
acm 
visualizing argumentation software tools collaborative educational sense making eds springer 
maedche managing multiple distributed ontologies semantic web vldb journal nov 
mann thompson rhetorical structure theory theory text organization structure discourse ed polanyi ablex pub 
norwood 
pease li agent mediated knowledge engineering collaboration agent mediated knowledge management international symposium eds van springer 
pinto martins methodology ontology integration cap pp 
new york 
acm press 
pinto ontoedit empowering swap case study supporting distributed loosely controlled evolving engineering ontologies diligent st 
springer 
schreiber knowledge engineering management commonkads methodology mit press cambridge massachusetts london england 
staab knowledge processes ontologies ieee intelligent systems 
shadbolt tool support living ontologies th kaw eds br gaines ma musen 
uschold king methodology building ontologies proc 
ijcai ws montreal canada 
