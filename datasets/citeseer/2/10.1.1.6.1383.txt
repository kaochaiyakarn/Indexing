generic constraints content publish subscribe gero hl darmstadt university technology 
darmstadt germany tu darmstadt de 
publish subscribe interaction enables loosely coupled exchange asynchronous notifications 
matching notifications subscriptions routing notifications producers interested consumers main problems large scale publish subscribe systems 
content selection provides great flexibility allows categorize notifications respect multiple dimensions requires complex routing strategies 
previous tightly coupled content routing matching algorithms constraints select notifications interest 
introduces idea generic constraints content selection separated underlying matching routing algorithms 
new constraints added easily 
introduces idea filter merging improve scalability notification service 
novel algorithms matching covering merging 
today web dominated client initiated request reply 
protocol solely model 
interaction scheme appropriate spontaneous catalog browsing similar applications hand seriously limits type applications realized efficiently 
applications need consistent date view continuously changing information published web spend inordinate amount time polling known sites updates 
approach leads chained inaccuracies seriously limits scalability 
asynchronous notifications needed additional mechanism enable proactive delivery information updates 
request reply tightly couples information consumers information providers 
decoupling information producers consumers removes explicit dependencies facilitates extensibility flexibility 
publish subscribe offers loosely coupled exchange asynchronous notifications 
publish subscribe messaging request reply mainly interested supporting event applications 
event system consists producers consumers 
producers publish events consumers subscribe set author supported deutsche forschungsgemeinschaft dfg part phd program enabling technology electronic commerce batini 
eds coopis lncs pp 

springer verlag berlin heidelberg gero hl events interested 
underlying event notification service responsible delivering published event interested consumers 
publish subscribe messaging middleware necessarily imply event style event style additionally assumes publisher direct expectation receivers notification 
broad range applications benefit eventbased realization 
example electronic trading auction platforms inherently event 
expressiveness subscription model crucial flexibility scalability notification service 
insufficient expressiveness lead unnecessary broad subscriptions saturating network raising need additional clientside filtering 
worst case interests mapped selection mechanisms events delivered 
hand scalable implementations expressive subscription models require complex delivery strategies 
generation publish subscribe systems channels 
notification published specific channel specified publisher delivered consumers subscribed channel 
channels allow efficient delivery expressiveness limited leading inflexible applications 
subject publish subscribe systems associate notification single subject usually specified string 
subjects arranged tree dot notation enable complex matching channels 
subjects inflexible changes subject tree require major application fixes 
case question arises defines subject tree 
subjects suitable divide notification space respect dimension 
dimensions leads explosion tree size subtree repetition 
content approach mentioned allows content notification filtering 
clearly flexible mechanism hand requires complex infrastructure 
content mechanisms set notification services including elvin gryphon siena le subscribe jedi corba notification service :10.1.1.34.4359:10.1.1.22.8918:10.1.1.123.2362
proposed inter agent communication defining continual queries 
main problems large scale content publish subscribe systems matching notifications subscriptions routing notifications producers interested consumers 
clearly centralized solution relying single notification broker scalable fault tolerant 
alternative set distributed brokers broker set local clients additionally communicating brokers 
case notifications propagated producers consumers path interconnected brokers 
floods notifications broker network filtering performed intermediate brokers assumed broker global knowledge active subscriptions 
knowledge constructed flooding subscriptions network 
enables broker decide brokers forward incoming notifications 
subscriptions forwarded ensure delivery matching notifications 
generic constraints content publish subscribe alternative rosenblum carzaniga wolf content routing algorithms siena 
reduce amount knowledge needed broker notification forwarding decisions applying selective filter forwarding subscription advertisement forwarding 
routing algorithms covering relations filters 
example subscription need forwarded broker broker forwarded subscription covers case matching notifications delivered 
unfortunately algorithm determine covering relations authors 
siena notifications consist set attributes name value pairs values instances predefined primitive types integers 
new types introduced application programmer 
concept generic content constraints clearly separated matching routing algorithms 
consequence new constraints value types easily integrated 
examples described cover wide range practically important constraints illustrate feasibility approach 
introduce mechanism merge filters improves filter forwarding scalability notification service 
set algorithms matching covering merging incorporate concepts 
describe implementation notification service 
uses routing algorithms similar siena extended support merging 
due space limitations discuss details routing algorithms 
remainder organized follows section describes detail content data model underlies 
third section approach supporting generic constraints types 
section introduces concept filter merging section algorithms matching covering merging support concept generic constraints 
section discusses related section outlines implementation 
content data model notifications notification message contains information event occurred 
formally notification set attributes ai name value pair ni vi name ni value vi assume names unique ni nj exists function uniquely maps ni type tj type corresponding value vi distinguish simple values single element domain tj vi dom tj multi values finite subset domain vi dom tj example simple notification type name price 
filters filter stateless boolean function applied notification fn true false notification matches fn evaluates true 
consequently set matching notifications nf defined true gero hl filters identical written nf nf overlapping nf nf disjoint 
filters define subscriptions advertisements see sect 

note contrast filters boolean functions known pattern recognizer 
outside scope 
filter usually boolean expression consists predicates combined boolean operators 
call filter consisting single atomic predicate simple filter constraint 
filters derived simple filters combining boolean operators compound filters 
compound filter conjunction simple filters called conjunctive filter 
sufficient consider conjunctive filters compound filter broken set conjunctive filters interpreted disjunctively handled independently 
attribute filters restrict filter conjunctive filter predicates attribute filters af attribute filter depends single attribute value 
defined tuple afi ni op ni tribute name opi test operator ci ci cil set constants 
name ni determines attribute constraint applies 
notification contain attribute name ni afi evaluates false 
operator opi evaluated value vj addressed attribute specified set constants ci outcome afi defined result opi evaluates true false 
notification matches satisfies attribute filters 
example conjunctive filter consisting attribute filters type name price 
enable efficient evaluation covering merging allow attribute filter attribute 
space limitations prevent discussing reason restriction detail enables reduce covering merging filters respective attribute filters see sect 

contrast siena support constraints depend constant 
enables operators enhances expressiveness filtering model 
done affecting scalability see sections 
subscriptions advertisement subscription filter issued consumer indicate interest receive notifications 
subscription indicates exclusively notifications matched delivered consumer 
consumer receive notification matched active subscriptions 
advertisements filters issued producers indicate intention publish notifications 
notifications published particular producer matched advertisements issued 
details semantics subscriptions advertisements essential particular achieving optimization 
notification service route notifications publishers subscribers 
covering relations similar siena introduce covering relation filters covers written nf nf covering relation transitive induces partial order set filters 
easy see implies implies equivalent case conjunctive filters attribute filter imposed single attribute covering problem filters reduced covering problem attribute filters 
filter covers filter attribute filter af attribute filter exists covered generic constraints content publish subscribe af af af covering relations filters exploited routing algorithm reduce number subscriptions forwarded 
eq 
directly transformed algorithm detects covering identity filters 
section algorithm efficient naive algorithm 
discuss generic approach introduce filter merging 
generic constraints types dealing content notification selection mechanisms tightly integrated constraints put values types values supported matching routing algorithms :10.1.1.22.8918
exception siena matching routing algorithms separated constraints 
support fixed set constraints predefined primitive types 
propose collection attribute filter classes 
classes offers generic implementation methods needed matching routing algorithms covering matching test imposes certain type constraint attribute values types implement operators needed 
appropriate implementation operators called constraint class runtime polymorphism 
enables define support new constraints types requiring changes routing matching algorithms 
note propose object oriented approach mandatory 
example implemented constraint class implements comparison constraints totally ordered sets see sec 

class impose comparison constraints kinds ordered values integer numbers 
consider type person consists second name date birth place birth 
type easily supported providing implementations comparison operators called constraint class provide covering matching methods polymorphism 
subsections generic attribute constraints cover wide range practically relevant constraints importantly illustrate feasibility approach 
course collection exhaustive constraints integrated easily 
example intervals values 
gero hl case operators defined sect 
intervals essentially sets 
view investigation subset regular expressions promising 
meaning single row tables subsections af af specified column af af condition column satisfied 
order test filter covers covering hold attributes 
general constraints consider general constraints imposed attributes regardless type value exists tests attribute name contained notification ai ni constraint negation exists constraint 
exists constraint covers constraints imposed attribute constraint 
constraint hand covers 
constraints type notifications notification services notion types classes notifications 
usually type notification specified textual string tested equality prefix 
dot notation enables support type hierarchy single inheritance 
multiple inheritance supported way 
argue direct support notification types order enable multiple inheritance automatic propagation interest sub classes achieve better programming language integration 
type inclusion tests evaluated efficiently corresponding string operation string starts prefix 
naturally assume set attributes contained notification type superset union attribute names supertypes consequently introduce separate constraint evaluates true instance type false written instanceof constraint instanceof covers constraint instanceof type supertype equality inequality constraints simple values simplest constraints imposed value tests equality inequality 
covering implications tests reduced simple comparison respective constants see table 
table 
covering implications equality inequality constraints simple values af af af af iff generic constraints content publish subscribe comparison constraints simple values common class constraints comparisons values domain comparison operators define totally ordered set integers usual comparison operators 
covering tests reduced simple comparison respective constants 
table depicts covering implications inequality greater brevity comparison operators left 
table 
covering implications comparison constraint simple values af af af af interval constraints simple values interval constraints allow test value interval respectively closed interval computing coverages involves comparisons see table 
table 
covering implication interval constraints simple values constraints strings addition comparison operators lexical order define prefix substring postfix operator 
constraints strings realize subjects 
computing coverages requires single test see table 
table 
covering implication constraints strings af af af af iff prefix prefix prefix postfix postfix postfix substring substring substring iff af af af af iff gero hl set constraints simple values set constraints simple values test value member set 
order compute coverage constraints single set inclusion test sufficient see table 
complexity depends characteristics underlying set 
set constraints combined comparison constraints domain value totally ordered set 
covering implication left space limitations 
table 
covering implications set constraints simple values set constraints multi values idea multi values allow value set elements 
enables operators defined multi value common operators defined vn example subset superset contains disjunct overlaps 
determine covering respect constraints evaluation set inclusion test set membership test needed see table 
table 
covering implications set constraints multi values af af af af iff subset subset superset contains superset superset superset subset disjunct disjunct disjunct subset overlaps overlaps superset merging filters af af af af section introduce mechanism merge filters 
merging addition covering minimize knowledge necessary notification forwarding decisions 
example single subscription substitute set subscriptions covers 
iff order define merging filters generalize covering relation introduced 
filter covers set filters fn nf nf nf covering said perfect equality holds called imperfect 
case nf real superset nf nf nf imperfect merger fn nf implies perfect merger implication strengthened equivalence 
aim merging determine filter perfect merger set filters 
merging filters drastically reduce amount subscriptions advertisements stored routing algorithm 
perfect merging clearly preferable achieved 
case filter conjunction attribute filters attribute filter attribute merging problem reduced merging attribute filters 
set filters fn merged perfectly single filter constraints impose attribute identical attribute filters distinctive attribute filter merged 
example set attribute filters imposed attribute name merged exists test values satisfied 
perfect merging merging implemented generic attribute filter class 
table presents versatile perfect merging rules 
meaning single row af perfectly merged af merging condition holds 
af table 
versatile perfect merging rules attribute filters af af merging condition af af af overlaps overlaps overlaps disjunct disjunct disjunct generic constraints content publish subscribe rules applied equality inequality tests gero hl matching algorithm input notification set filters output set filters match filter counter initialized zero contained filter constraint satisfied value corresponding attribute increment counter contained contained filter constraints increment counter filters counter equal number attribute filters fig 

matching algorithm counting satisfied attribute filters imperfect merging glance imperfect merging promising situation perfect merging complex computable compromise 
clearly exists trade filtering overhead network resource consumption 
imperfect merging may result notifications forwarded match original subscriptions hand reduces amount subscriptions advertisement dealt 
example filters differ attribute filters merged imperfectly imposing attribute constraint covers original constraints 
statistical online evaluation filter selectivity basis merging decisions order enable adaptive filtering strategies 
imperfect merging requires investigation 
algorithms matching covering merging section algorithms matching covering superior naive algorithms 
describe algorithm merging filters 
algorithms exploit generic approach generic constraint class constraints ordered values offers specialized indexing data structures manage constraints attributes 
example hashing equality tests 
matching algorithms require costly compilation step suitable dynamically changing systems 
contrast algorithms allow add remove filters time course insertion deletion filter causes overhead 
generic constraints content publish subscribe covering algorithm input filter set filters output set filters cover filter counter initialized zero contained filter constraint covers increment counter filters counter equal number attribute filters fig 

covering algorithm counting covering attribute filters matching algorithm naive algorithm separately matches notification filters determine set matching filters 
advanced algorithms see sect 
detailed overview try exploit similarities subscriptions 
investigating algorithms 
matching algorithm incorporates generic concept idea predicate counting 
evaluate constraints names attributes contained notification type known 
algorithm depicted fig 
determines filters match notification include investigations algorithms key method tree method 
covering algorithm naive algorithm tests filter sequentially see sect 

algorithm efficient derived matching algorithm 
algorithm depicted fig 
determines filters cover filter covering algorithm routing algorithm determine set neighbor brokers filter forwarded 
example incoming subscription forwarded neighbors subscription forwarded covers incoming subscription 
merging algorithm algorithm avoids test filters 
counts number identi cal attribute filters find merging candidates 
fig 
shows algorithm deter mines filters merged filter handling set merging candidates depends constraints involved 
constraints discussed section set constraints simple values exists efficient algorithm outputs single merged filter set filters included merger 
constraints optimal algorithm requires exponential time complexity 
case greedy algorithms heuristics predicate proximity graph promising 
gero hl merging algorithm input filter set filters output set filters merged filter counter initialized zero contained filter constraint increment counter filters counter smaller equal number attribute filters related fig 

merging algorithm counting attribute filters siena notification service scalable wide area networks 
treats problem reducing number filters forwarded exploiting covering 
siena notifications name value pairs values instances predefined primitive types integers 
filters conjunctions attribute filters constraints comparisons predefined simple values constraints textual strings 
algorithms determine coverage filters 
gryphon developed ibm watson research center uses contentbased matching algorithm aguilera 
algorithm traverses parallel search tree non leaf nodes correspond simple tests edges non leaf nodes represent results 
leaf nodes associated matched subscriptions 
multicast routing algorithm executes matching algorithm broker 
broker copy complete parallel search tree annotates determine set neighbor brokers notification forwarded 
algorithm limited equality tests 
various multicast notification dissemination strategies compared 
yan garcia molina describe predicate counting key tree algorithms context matching text documents keyword profiles 
performance results obtained simulation 
fabre pereira matching algorithms exploit similarities predicates 
step satisfied predicates computed number predicates satisfied subscription counted association table 
variants algorithm described incorporate special treatment equality tests constraints having inequality tests 
predicate matching algorithm database rule systems hanson indexes selective predicate determined query optimizer 
special indexing data structure called interval binary search tree support efficient evaluation interval tests 
gough smith matching algorithm automata theory 
show set conjunctions predicates dependent exactly attribute transformed deterministic finite state automaton 
different types test predicates considered complexity results obtained 
algorithm efficient worse case space complexity exponential 
proposed solution suited dynamic environments automaton newly constructed scratch subscriptions change 
indexing strategies continual queries trigger patterns 
particular strategy uses index selective predicate described 
complex indexing strategies exploit similarities trigger patterns reduce processing costs 
restrict optimizations constraints place constraint single attribute involving constant 
implementation context research project investigate event architectures electronic commerce applications trading platforms 
realized prototype event middleware incorporates content filtering concepts 
implemented complete stock trading application real time quotes investigate system observable load 
moment developing application dealing meta auctions generalization normal internet auctions 
simple demo shows realize web pages middleware project homepage 
generic constraints content publish subscribe generic approach content publish subscribe systems 
particular described generic constraint classes support various value types 
mechanisms introduced separated routing matching algorithms 
new constraints types added easily 
demonstrated approach feasible set important constraints types cover large amount constraints practical relevance 
introduced mechanism merge filters described important rules applied 
novel matching covering merging algorithms support generic approach 
currently investigating extend concepts covering merging complex content data models including semistructured data objects 
planning carry detailed performance analysis various filtering strategies 
gratefully acknowledge fruitful discussions alejandro buchmann felix rtner christoph 
gero hl aguilera strom sturman chandra 
matching events content subscription system 
podc th acm sigact sigops symposium principles distributed computing 
banavar chandra mukherjee strom sturman 
efficient multicast protocol content publish subscribe systems 
proceedings th ieee international conference distributed computing systems 
bates bacon moody 
events scalable federation heterogeneous components 
eighth acm sigops european workshop support composing distributed applications sintra portugal september 
vd buchmann 
infrastructure meta auctions 
second international workshop advance issues commerce webbased information systems san jose california june 
carriero gelernter 
linda context 
cacm apr 
carzaniga rosenblum wolf 
content addressing routing general model application 
technical report cu cs department computer science university colorado usa 
carzaniga 
architectures event notification service scalable wide area networks 
phd thesis politecnico di milano milano italy december 
crespo garcia molina 
efficient query subscription processing multicast environment 
proceedings th international conference data engineering icde page 
cugola di fuggetta 
exploiting event infrastructure develop complex distributed systems 
proceedings international conference software engineering pages 
ieee computer society press acm press 
eugster guerraoui 
type publish subscribe 
technical report dsc id epfl lausanne 
fabret llirbat pereira shasha 
efficient matching content publish subscribe systems 
technical report inria 
hl 
event electronic commerce architecture 
www informatik tu darmstadt de 
franklin zdonik 
data face push technology perspective 
laura haas editors sigmod proceedings acm sig mod international conference management data june seattle washington usa pages 
acm press 
gough smith 
efficient recognition events distributed systems 
proceedings th australasian computer science conference february 
hanson 
kim 
wang 
predicate matching algorithm database rule systems 
acm sigmod conf 
management data atlantic city pages may 
liu pu tang 
continual queries internet scale event driven information delivery 
ieee knowledge data engineering august 
liu pu tang han 
conquer continual query system update monitoring wwww 
international journal computer systems science engineering special issue web semantics 
generic constraints content publish subscribe omg 
corba event service specification 
omg document formal 
omg 
corba notification service 
omg document telecom 
oki siegel skeen 
information bus architecture extensible distributed systems 
barbara liskov editor proc 
th symposium operating systems principles pages usa december 
acm press 
auerbach banavar strom sturman 
exploiting ip multicast content publish subscribe systems 
coulson editors middleware volume lncs pages 
springer 
pereira fabret llirbat shasha 
efficient matching web publish subscribe systems 
peter scheuermann editors proc 
int 
conf 
cooperative information systems coopis volume lncs 
springer 
segall arnold boot henderson phelps 
content routing elvin 
proceedings auug canberra australia june 
clark 
content routing basis intra agent communication 
proc 
th intern 
workshop intelligent agents agent theories architectures languages atal volume lnai pp 

springer 
sun 
event specification 
sun 
java message service specification 
tang 
scalable trigger processing change notification continual query system 
oregon graduate institute 
tibco tib rendezvous 
white 
www rv tibco com 
vitek horspool krall 
efficient type inclusion tests 
acm sigplan notices vol 
pp 
oct 
wray hawkes 
distributed virtual environments vrml event architecture 
proc 
th intern 
www conference brisbane australia 
yan garcia molina 
index structures selective dissemination information boolean model 
acm trans 
database systems 

