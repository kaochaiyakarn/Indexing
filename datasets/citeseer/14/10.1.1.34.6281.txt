concrete final coalgebra theorem zf set theory lawrence paulson lcp cl cam ac uk computer laboratory university cambridge england 
special final coalgebra theorem style aczel proved standard zermelo fraenkel set theory 
aczel axiom replaced variant definition function admits non founded constructions 
variant ordered pairs tuples possibly infinite length special cases variant functions 
analogues aczel solution substitution lemmas proved style rutten turi 
approach general aczel treatment non founded objects simple concrete 
final coalgebra functor greatest fixedpoint 
theory intended machine implementation simple case implemented theorem prover isabelle 
thomas forster alerted quine 
peter aczel andrew pitts offered considerable advice help 
daniele turi gave advice electronic mail 
paul taylor macros commuting diagrams 
commented text 
research funded esprit basic research action types 
table contents alternative definition pairs functions quine ordered pairs basic definitions properties basic properties cumulative hierarchy final coalgebra functor set final coalgebra solutions equations preliminaries binary sum functor expanded version embedding substitution solution substitution lemmas special final coalgebra theorem functors uniform maps constant functor binary product binary sum sum family sets product family sets identity functor proof prop recurring issue theoretical computer science treatment infinite computations 
important approach final coalgebra 
category theoretic notion relates methods bisimulation coinduction heavily concurrency theory functional programming operational semantics 
aczel mendler barr proved final coalgebras exist set theory large classes naturally occurring functors 
supposed satisfy people requirements 
aczel argued case non standard set theory infinite computations non founded phenomena modelled directly 
proposes replace set theory foundation axiom fa anti foundation axiom afa guarantees existence solutions fxg generally systems equations form fx general final coalgebra theorem serves model construction justify afa 
afa suitable functor merely final coalgebra 
final coalgebra equals greatest fixedpoint 
natural dual theorem functor initial algebra fixedpoint 
exact isomorphism 
elements final coalgebra easily visualised 
instance functor theta gamma functor theta objects yields set streams final coalgebra greatest solution theta ha ha ha infinite stream ha ha ha iii 
standard set theory foundation axiom fa infinite membership relation 
standard definition ordered pair fa bg ha bi 
infinitely nested pairs create infinite exist 
words greatest fixedpoint theta gamma empty set 
final coalgebra exist 
approach proposed change axiom system adopt new definitions ordered pairs functions derived concepts cartesian products 
new definitions stream functor final coalgebra exact greatest fixedpoint stream infinite nest pairs 
recursion equations solved equality 
approach handles non founded tuples generally ordered structures 
model true non founded sets solutions fxg 
powerset functor cardinality restrictions 
know express nondeterminism way handling sets outcomes may order axiom choice 
aczel book puts case non founded sets clarity simplicity 
especially attractive presentation anti foundation axioms uniform framework 
axiom creates new sets gives criteria set equality 
axioms turn pairwise incomparable various logicians devised axioms conceived distinct notions non wellfounded set 
really fundamental notion 
devoted considerable effort machine assisted proof zf set theory theorem prover isabelle 
easy separate fa zf axioms move formalisation resulting theory zf gamma isabelle support parallel developments zf zf gamma afa 
mechanisation afa requires formalisation axiom main consequences solution lemma form suitable working particular final coalgebras 
partial implementation approach final coalgebras exists 
outline 
strategy construct final coalgebra replace afa re play rutten turi categorical proofs 
section presents basic motivation quine ordered pairs generalisation functions proves lemmas cumulative hierarchy ff section defines functor greatest fixedpoint proves final coalgebra 
section proves solution substitution lemmas set equations special final coalgebra theorem 
section discusses functors 
uniform maps 
section presents 
alternative definition pairs functions informal motivation quine 
section formal definitions 
quine ordered pairs standard zf set theory ordered pair ha bi defined ffag fa 
rank ha bi levels solutions ha bi 
quine proposed definition ordered pair need entail increase rank 
quine definition complicated things avoids standard ordered pairs 
regard standard pairs indispensable define quine ordered pairs easily 
ha bi denote standard ordered pair tuples length consist ordered pairs nested right ha abbreviates ha ha gamma ii 
theta denote standard cartesian product fha bi bg 
define variant ordered pair ha bi ha bi theta theta note ha bi just disjoint sum set theory set 
new pairing operator obviously injective key requirement 
admits non founded constructions start 
set equation ha zi unique solution consisting standard 
tuple form xi infinite stream ha set standard tuples form xi 
ha bi continuous sense preserves arbitrary unions fixedpoint methods solve recursion equations involving variant tupling 
shall see equations possess unique 
variant pairs generalised variant notion function fxg theta note just sigma disjoint sum family sets 
note hb special case 
replacing larger ordinals gives means representing infinite sequences 
generally non standard functions represent infinite collections non founded elements 
merely replacing hx hx usual definition function obtaining fhx ag admit non founded constructions 
rank set exceeds rank example fh big theta violating fa fh big solution 
application variant functions expressed image operator 
easy check fag relation domain fxg standard relation variant function 
set ff theta fxg bg consists variant functions serve definition variant function space function graph determine function domain 
instance theta 
clearly contain total partial functions applying variant function argument outside domain yields 
usual set theory number zero empty set 
basic definitions properties defined variant pairs functions substitute standard definitions cartesian product disjoint sum function space 
resulting variant operators decorated tilde theta having standard variant operators simplest way developing theory 
standard operators relate new concepts standard set theory remain useful defining founded constructions 
duplication operators may inelegant certainly requires extra care avoid confusing 
definition 
variant ordered pair ha bi defined ha bi theta theta fb indexed family sets variant function defined fxg theta variant cartesian product disjoint sum partial function space sets defined theta fhx yi bg theta theta ff theta fxg bg operators theta generalised family sets usual 
definition 
fb indexed family sets variant sum product defined fhx yi ff theta fxg attempt exploiting definitions fix index set solve equation solution 
build variant tuples starting construct distinct sets gg variant tuple components empty set empty set 
possible solution 

happens greatest solution 
proposition 

proof 
suppose contradiction 
contains non empty element exist definition follows hi repeating argument yields infinite descent hi hi hi contradicting fa 
ut tuples get built start atoms 
keep atoms distinct variant tuples atom contain element standard pair 
atom sufficient 
may definition empty set pair 
final coalgebra theorem greatest solution background lemmas needed 
basic properties cumulative hierarchy results help prove closure uniqueness properties 
ff fi range ordinals range limit ordinals 
cumulative hierarchy sets traditionally defined cases ff ff ff 
ff convenient equivalent definition ff fi ff fi kunen pp 
discusses cumulative hierarchy notation ff ff note elementary consequences definitions lemma 
ff ordinal limit ordinal ff ff ff theta ff ff theta turns closed formation variant tuples functions 
lemma 
proof 
follows definition monotonicity facts noted fxg theta fxg theta theta ut closure properties variant products sums analogous standard products sums 
closed variant function space 
lemma 
limit ordinal 

theta 
proof 
obvious definitions previous lemma 
ut results allow application knaster tarski fixedpoint theorem construct final coalgebra 
group results uniqueness proof 
lemma 
ff ordinal ff proof 
foundation axiom ff ff universal class 
ff ff 
ff ff ff ff result follows 
lemma requires facts concerning intersection ff definition 
set transitive 
lemma 
ff transitive ordinal ff 
proof 
see kunen 
ut go cumulative hierarchy 
lemma 
ha bi ff ff ff proof 
suppose ha bi ff equivalent ffag fa ff ffag fa ff fa bg ff ff transitive fa bg ff ut lemma 
fb indexed family sets ff ff ff fi ff fi proof 
previous lemma ff fhx yi ff fhx yi ff ff definition ff properties unions ff fi ff fi fi ff fi fi ff fi step 
ut final coalgebra rutten turi excellent survey final semantics includes categorical presentation aczel main results 
working category classes maps classes note fa equivalent initial algebra afa equivalent final coalgebra 
put way afa certainly looks attractive anti foundation axioms 
treatment final semantics follows development closely 
assuming final coalgebra shall define functor arbitrary index set construct final coalgebra called solution substitution lemmas special final coalgebra theorem carry directly 
category classes usual category set sets standard functions maps 
category allows certain statements expressed succinctly requires numerous technical lemmas concerning set maps standpoint mechanised proof bear mind classes formal existence zf axioms class maps removes existence 
functor set index set remain fixed 
typical choice limit ordinal 
note contains sequences shall find contains sequences 
finite sequences represented sequences containing infinitely see lemma 
definition 
functor set set defined objects maps follows 
satisfies reasons definition prop 

easy check functor preserves identity map composition 
step define set greatest solution prove final coalgebra 
may regard elements nested indexed tuples built atom 
application requires larger set atoms modifications theory obvious 
solve may apply knaster tarski fixedpoint theorem 
gives explicit definition 
definition 
limit ordinal henceforth regard fixed drop superscripts 
results indicate really fixedpoint fact greatest 
justifies proof coinduction second result confirms choice ordinal matter provided proposition 

proof 
knaster tarski theorem apply monotone operator powerset clearly monotone lemma ut proposition 
proof 
result follows definition establish lemma suffices prove ff ff 
proceed transfinite induction ordinal ff 

case trivial 
may assume case ff fi ff fi fi ff lemma induction hypothesis lemma 
ff ff establishes ut final coalgebra prove final coalgebra requires showing map exists unique map ffi remainder section set map fixed 
lemma 
exists proof 
function defined 

follows suppose prove cases 
equation reduces 
simple continuity reasoning establishes equation 



show coinduction prop 

ag prove 
cases usual 

greatest post fixedpoint establishes range establishes ut lemma 
ffi ffi proof 
lemma transfinite induction ordinal prove 


hypothesis lemma induction hypothesis monotonicity ordinal 
symmetry ut theorem 
final coalgebra 
proof 
immediate previous lemmas 
ut solutions equations development set theory afa aczel defines systems proves solution lemma system unique solution 
aczel introduces class variables class vx sets built variables variables 
substitution lemma says assignment sets variables extended substitution function aczel uses lemmas exhibit unique morphism special final coalgebra theorem 
aczel proves solution substitution lemmas concrete set theory rutten turi categorical presentation proofs shorter 
key fact development assuming afa final coalgebra 
presentation similar replacing afa theorem 
replace category classes category sets think matter taste 
preliminaries binary sum functor recall variant form disjoint sum defined theta theta 
coproduct category set means pair maps exists unique map making diagram commute inl oe inr psi gamma gamma gamma gamma gamma gamma injections inl inr case analysis operator defined obvious way 
functor define action maps 
defined usual inl ffi inr ffi obvious properties listed 
lemma 
maps 
ffi inl ffi inr ffi ffi ffi inl inr id ffi ffi ffi ffi inl inl ffi ffi inr inr ffi expanded version set variables indeterminates equations 
set constructed way level contains copy element just element may contain elements stage construction 
formalizing equations sets left hand side consist variable right hand side drawn definition closely resembles definition 
limit ordinal drop superscript proof result omitted similarity proof proposition 
ux defined 
ux ux 
ux 
ux final coalgebra functor gamma 
proof 
see appendix embedding obvious embedding oe ux copies element ux introduces element oe oe inr oe equations summarised neatly oe inr ffi oe 
embedding useful creating equations constant right hand sides 
embedding obvious existence deserves proved 
aczel derives analogous embedding vx direct recourse afa 
rutten turi omit step categorical style done showing vx final coalgebra functor gamma 
lemma 
exists unique map oe ux oe inr ffi oe proof 
recalling equation ux ux consider diagram oe ux inr idx oe ux inr coalgebra gamma ux final coalgebra exists unique map oe diagram commutes 
oe idx oe ffi inr idx oe ffi inr inr ffi oe lemma 
ut substitution function 
substitution function ux essentially copies argument replacing form inl case analysis expressed help notation equations expressed succinctly 
clearly substitution term containing variables effect 
formal statement fact justifies calling oe embedding 
lemma embedding 
ux functions 
ffi oe id proof 
lemma lemma ffi oe ffi inr ffi oe ffi inr ffi oe ffi oe diagram commutes ffi oe ffi oe final coalgebra homomorphism identity 
yields ffi oe id ut solution substitution lemmas set variables function ux defines system equations form system unique solution concisely solution satisfies ffi lemma solution 
ux function 
exist unique functions ux ffi proof 
recalling equation ux consider diagram ux id ux ux ux id ux coalgebra final coalgebra exists unique map diagram commutes 
lemma ffi id ux ffi id ux ffi ffi id ux ffi putting ffi yields desired functions 
uniqueness ffi finality ut proof note id ux substitutes depth 
lemma justifies notation substitution idea convert trivial system equations solve 
lemma substitution 
function 
exists unique function ux 
proof 
consider composed map oe ffi ux apply solution lemma oe ffi obtaining maps ux ffi 
ffi oe ffi lemma 
putting obtain 
uniqueness follows uniqueness property solution lemma 
ut prefer prove substitution lemma earlier simplest proof rely solution lemma 
turi pointed electronic mail substitution lemma trivial proof ux defined initial algebra final coalgebra 
ux contain finite constructions embedding oe ux exist founded objects obtained solution lemma participate set equations 
special final coalgebra theorem main theorem applies functors uniform maps 
notion due aczel follow rutten turi formulation 
shall longer category set sets full subcategory setu objects subsets recall turn depends choice index set large necessary 
definition 
functor setu setu uniform maps exists mapping oe ua ffi oe mapping oe called ua translation 
consider functors preserve inclusion maps 
natural restriction functors preserve identity maps inclusion maps identity maps regarded sets 
functors setu 
lemma 
functor setu setu preserves inclusions exists object jf setu jf greatest fixedpoint greatest post fixedpoint proof 
apply knaster tarski fixedpoint theorem lattice subsets functor necessarily monotone preserves inclusions 
ut theorem special final coalgebra 
functor setu setu preserves inclusions uniform maps jf final coalgebra 
proof 
coalgebra 
exhibit unique map jf ffi jf uniform maps ffi equivalent ffi oe ffi map precisely solution system equations oe applying solution lemma oe ffi obtain unique map ffi standard coinduction argument proves jf writing image ffi 
range post fixedpoint contained greatest post fixedpoint jf ut functors uniform maps uniform maps essence effect map expressed substitution pattern derived argument oe 
natural functors uniform maps glaring exception 
examine typical cases starting easy 
constant functor kc constant functor kc setu kc id maps proposition 
setu constant functor kc setu setu uniform maps 
proof 
set setu define oe ua oe oe kc ffi oe ffi oe lemma 
ut binary product set satisfies inclusion theta easy see theta setu theta setu setu functor extended maps standard way 
maps theta theta theta map takes ha bi hf proposition 
setu setu uniform maps functor gamma theta gamma setu setu uniform maps 
proof 
set setu equivalently clearly theta setu uniform maps exist ua translations oe ua ffi oe ua ffi define ua translation gamma theta gamma 
oe theta hb ci hoe 
gamma theta gamma theta ffi oe theta ffi theta ffi oe theta ffi oe theta ffi desired ua translation 
replacing theta valid theta applied variant pairs context 
ut binary sum proposition resembles theta show closed 
lemma 
proof 
theta thetau closed theta suffices show coinduction prop 
suffices show 
holds 
ut recall functor set effect maps described sect 

know functor full subcategory setu proposition 
setu setu uniform maps functor gamma gamma setu setu uniform maps 
proof 
set setu setu exist ua translations oe ua ffi oe ua ffi oe gamma gamma ffi oe ffi ffi oe ffi oe ffi desired ua translation 
ut sum family sets fb indexed family sets 
note usual generalisation theta allow depend functors effect maps 
proposition differs key respect theta index set functor constant 
proposition 
setu ff setu setu indexed family functors uniform maps functor gamma setu setu uniform maps 
proof 
set setu setu exists ua translation oe ua ffi oe ua translation gamma called defined hx yi hoe oe 
recall oe inclusion map ua lemma hx yi hoe oe oe oe hx hx yi proves ffi gamma 
ut product family sets fb indexed family sets 

set setu functor effect maps follows 
ff indexed family maps usual pointwise map takes 
proposition 
ff setu setu indexed family functors uniform maps functor gamma setu setu uniform maps 
proof 
set setu setu exists ua translation oe ua ffi oe oe gamma ffi oe ffi oe ffi oe ffi desired ua translation 
ut identity functor results suggest functor operates constructions pointwise fashion probably uniform maps 
glaring exception 
proposition 
identity functor id setu setu uniform maps 
proof 
suppose id setu setu uniform maps 
mapping oe ua ffi oe define 
oe definition substitution implies oe 
oe definition substitution implies oe ha bi ua ha bi absurd 
ut alternative proof uses special final coalgebra theorem 
id uniform maps id final id coalgebra 
final id coalgebra singleton set id contains elements 
circumstance awkward 
natural way constructing suitable functors combine constant identity functors products sums identity functor uniform maps approach fails 
various similar functors uniform maps gamma theta gamma theta gamma singleton set greatest fixedpoint 
assuming afa help identity functor uniform maps aczel system 
semantics customary worry construction particular object provided desired properties 
point view general theorems aczel mendler barr yield final coalgebras great functors 
interest aczel weaker final coalgebra theorem proved anti foundation axiom afa 
appeal concreteness 
set streams simply greatest fixedpoint functor theta gamma functor final coalgebra 
elements easily visualised objects form ha original motivation treat streams infinite data structures 
wished standard zf axiom system automated isabelle 
thomas forster suggested quine treatment ordered pairs help 
generalizing treatment led new definition functions infinite streams order compare approach afa 
part closely follows aczel rutten turi substitution lemma onwards 
special final coalgebra theorem general aczel especially regards concurrency 
typical example 
finite powerset operator returns set finite subsets argument 
consider set processes defined final coalgebra theta gamma 
afa final coalgebra greatest solution theta fha ha pn ig pn approach handle general set constructions variant tuples functions know model respecting set equalities fx yg fy xg fx xg 
approach works best original application infinite data structures 
model main constructions infinite data structure subset 
set hereditarily finite sets 
section discussed infinite streams 
set streams greatest solution theta final coalgebra functor theta gamma 
account non founded phenomena concrete understood directly 
argue constructive validity cumulative hierarchy 
uncontroversial intuitionistic viewpoint 
contrast general final coalgebra theorems quotient sum constructions concrete 
aczel shown adopting afa obtain final coalgebras greatest standard result initial algebras 
approach way doing thing fewer functors 
choose adopt afa hinges number issues philosophical theoretical practical 
variant tuples functions simple alternative 

abramsky lazy lambda calculus topics functional programming turner ed 
addison wesley pp 

aczel non founded sets csli 
aczel mendler final coalgebra theorem category theory computer science pitt rydeheard dybjer pitts poign eds springer pp 
lncs 
barr terminal coalgebras founded set theory theoretical comput 
sci 

kunen set theory independence proofs north holland 
milner communication concurrency prentice hall 
milner tofte induction relational semantics theoretical comput 
sci 

paulson set theory verification foundations functions auto 


paulson set theory verification ii 
induction recursion tech 
rep comp 
lab univ cambridge appear auto 


paulson fixedpoint approach implementing inductive definitions th conf 
auto 

bundy ed springer pp 
lnai hereditarily finite set built finitely stages empty set 

quine ordered pairs relations selected logic papers 
random house ch 
viii pp 
published 
rutten turi foundations final semantics non standard sets metric spaces partial orders semantics foundations applications de bakker 
de roever rozenberg eds springer pp 
lncs proof prop 
abbreviate functor gamma qx simplifies statement proposition proposition 
ux qx 
ux qx ux 
qx ux 
ux final qx coalgebra 
proof 
apply knaster tarski theorem 
clearly qx monotone lemma qx ut continuing need elementary facts cumulative hierarchy 
lemma 
ff ordinal theta ff implies ff ff implies ff theta ff implies ff ff implies ff proof 
part holds lemma transitivity ff parts hold similar tedious reasoning definitions 
ut tackle part prop 

proof 
definition ux establishing previous lemma suffices prove lemma suffices prove ff ff 
proceed transfinite induction ordinal ff 
cases 
case xi clearly second case zi show lemma suffices show qx 
case trivial 
may assume case ff fi ff fi fi ff lemma induction hypothesis lemma 
ff ff establishes required 
ut final part prop 
ux final qx coalgebra 
requires showing map qx exists unique map ux qx ffi ux qx qx qx ux set map qx fixed consider property separately 
note functor qx operates maps follows qx id lemma 
exists ux qx proof 
function defined 

follows qx suppose prove cases 
equation reduces 
possibility continuity reasoning previous lemma establishes equation 


qx 
id 
id id qx qx note 
id id holds case analysis continuity variant injections 
show ux coinduction 
ag prove qx 
cases usual 
qx 
qx id qx ux greatest post fixedpoint qx establishes ux range establishes ux ut lemma 
qx ffi qx ffi proof 
lemma transfinite induction ordinal prove 
id 
id id hypothesis lemma monotonicity reasoning uses id id holds case analysis application lemma induction hypothesis 
ordinal 
symmetry ut theorem 
ux final qx coalgebra 
proof 
immediate previous lemmas 
ut article processed macro package llncs style 
