lightweight agents intrusion detection guy johnny wong honavar les miller department computer science iowa state university wong honavar cs iastate edu november designed implemented intrusion detection system prototype mobile agents 
agents travel monitored systems network distributed systems obtain information data cleaning agents classify correlate information report information user interface database mediators 
agent systems lightweight agent support allow runtime addition new capabilities agents 
describe design multi agent intrusion detection system show lightweight agent capabilities allowed add communication collaboration capabilities mobile agents intrusion detection system 
secure computer system provides guarantees regarding con dentiality integrity availability objects data processes services 
systems generally contain design implementation aws result security vulnerabilities 
intrusion takes place attacker group attackers exploit security vulnerabilities violate con dentiality integrity availability guarantees system 
intrusion detection systems idss detect set intrusions execute predetermined action intrusion detected 
detecting intrusions distributed system di cult problem 
intrusion detection systems analyze large volumes data placing signi cant added load monitored systems networks 
data obtained sources distributed computing system 
intrusions take place levels distributed system physical components applications level may require monitoring 
data various sources aggregated correlated determine intrusion place 
intrusions detected soon possible allow immediate ective countermeasures executed 
research group applying distributed knowledge networks data warehouse techniques intrusion detection systems 
distributed knowledge networks agents information retrieval extraction data transformation knowledge discovery 
data warehouse technologies data knowledge organization assimilation heterogeneous physically distributed data knowledge sources 
software agents consist program code state exist perform tasks behalf user degree autonomy 
software agent goal may require degree intelligence allowing react funded part department defense 
environment plans achieve goal maximize utility modify behavior time 
software agents may mobility travel sources data remotely execute tasks resulting natural distribution reduced communication overhead 
lightweight agents agents accomplish essential tasks minimal code 
dynamically updatable smaller simpler faster transport due smaller size 
lightweight agents allowed quickly add features intrusion detection system 
distributed mobile autonomous agents solve critical problems intrusion detection provide general architecture adding integrating components system 
monolithic centralized systems faults may overcome distributed architecture 
network intrusion detectors typically single sensors attached network segments 
local area networks moved switched architectures broadcast unicast frames network segments 
centralized sensors tra segments sensor attached switched environment 
distributed agents solve problem monitoring network activity host 
network intrusion detectors problems high data rates 
centralized systems may packets heavy load situations fast gigabit ethernet networks 
distributed agents distribute processing ort networked systems improve chances intrusions detected missed centralized ids 
modular architecture agent intrusion detection system allows integration intrusion detection components projects 
example snort network intrusion detection system small fast low overhead sensor watches network packets match signatures 
agent intrusion detection system incorporate snort provide network misuse detection host 
likewise various small programs detect speci intrusions port scanning broadcast pings logins unusual times changes les 
included distributed intrusion detection system wrapper agents 
centralized centrally governed intrusion detection system provides single point failure single target attack 
distributed agent architecture avoids central point failure 
autonomous agents may continue operating despite failure agent servers failures system avoids compromise entire ids component fails attacked :10.1.1.26.6055
mobile agents may capable evading attackers resurrecting killed 
distributed agent intrusion detection system helps solve spatial problems intrusion detection host involved intrusion 
example ftp bounce attack attacker may anonymous ftp server host spoof command remote shell target host 
agents anonymous ftp server target host detect spatially separate events attack correlate events near real time 
kumar lists shortcomings intrusion detection systems :10.1.1.26.6055
viewed di erent way shortcomings provide list desirable features intrusion detection system 
generic architecture 
common intrusion detection framework cidf speci es generic architecture intrusion detection system classi es components intrusion detection system :10.1.1.26.6055
system distributed mobile agents implements intrusion detection system exible way compatible cidf architecture 
ciency 
distributed multi agent system obtains audit data appropriate levels distributed system distributes information processing intrusion detection ort 
portability 
intrusion detection systems tended developed orientation organization security policy 
di erences security policies organizations result lack portability intrusion detection system 
di erent sense portability intrusion detection system respect operating systems computer architecture issue 
perl java interpreted languages provide portability intrusion detection systems 
aafid project ids :10.1.1.26.6055

intrusion detection system component architecture available agent system satis es enhancement concern 
new features easily added system 
maintenance 
maintaining updating learned knowledge components intrusion detection system depend architecture components 
performance benchmarks 
exhaustive quantitative performance evaluations current intrusion detection systems real world environments exist 
vulnerability coverage addressed vendors assistance vulnerability assessment projects including common vulnerability enumeration :10.1.1.26.6055
testing 
kumar says easy way test intrusion detection systems page mit lincoln labs intrusion detection evaluation rst major tests research intrusion detection systems :10.1.1.26.6055
attacks remain di cult simulate ectiveness systems di cult evaluate operating real world loads signi cant tuning expertise tends necessary operate systems 
multi agent intrusion detection system similar intrusion detection systems ectiveness need demonstrated real world settings 
modular extensible approach building system helps solve complex problems intrusion detection system 
divides problem aspects information retrieval classi cation collaboration compilation 
agents developed system retrieve information distributed systems classi es data embedded expert rules machine learning techniques stores data database 
brie examine design distributed intrusion detection system explain addition agent collaboration system dynamic aggregation 
show dynamic aggregation provides convenient mechanism extending existing objects allows quickly add new features system 
initial design ids agent communication vertical information traveled data gathering agent associated mobile agent user interface 
design agents able communicate horizontally cooperatively detect intrusions 
horizontal communication added concept agent sensitivity agent sensitive unusual events intrusive events noticed agents 
example sensitivity consider failed logins 
login failures single host may normal user forgets password 
attacker identi ed target host considered intrusive system may connect target host try typical passwords 
case loose temporal relation exists rst event second event failed login attempts 
agent sensitivity levels provide real time correlation related intrusions allowing normal individual events pass triggering alarms 
dynamic aggregation add sensitivity horizontal communication agents 
implementation system currently includes static data cleaning agents obtain information system logs audit data operational statistics render information common format low level agents monitor classify ongoing activities classify events pass information mediators low level agent system calls data cleaner system calls high level agents data mining low level agent logins low level agent failed logins low level agent functions low level agent tcp connections mobile agents travel monitored component stationary agents monitored component data cleaner tcp connections data cleaner functions data cleaner failed logins data cleaner logins router network events high level agents data fusion high level agents mediators user high level agents functions select system data router log messages data sources system error messages data sources authentication messages data sources application messages data sources messages interface agent database architecture mobile agents intrusion detection system facets low level agents add cooperation agents data mining agents machine learning acquire predictive rules intrusion detection system logs audit data 
multi agents intrusion detection model idea distributed knowledge networks 
architecture illustrated layers user interface user interface allows control agents management list monitored systems reports intrusions 
database database stores data training line intrusion detection 
data fusion data mining agents level fuse information lower agents mine knowledge database 
mediators low level agents managed mediators control systems visited agents obtain classi ed data agents route data local database user interface 
system developed mediators apply data mining algorithms data database connect individual events cohesive view elements involved attack 
tcp warehouse data events network router functions data cleaner functions agent low level connections data cleaner failed logins data cleaner logins data cleaner connections tcp agent low level failed logins agent low level logins agent low level user interface mediators database system calls system logs router data cleaner system calls agent low level events network router functions data cleaner functions agent low level connections tcp data cleaner failed logins data cleaner logins data cleaner connections tcp agent low level failed logins agent low level logins agent low level user interface mediators database system logs router system calls low level agent system calls data cleaner low level agent system calls data cleaner system calls router system logs database mediators user interface low level agent logins low level agent failed logins low level agent tcp connections data cleaner logins data cleaner failed logins data cleaner tcp connections low level agent functions data cleaner functions router network events events network router functions data cleaner functions agent low level connections tcp data cleaner failed logins data cleaner logins data cleaner connections tcp agent low level failed logins agent low level logins agent low level user interface mediators database system logs router system calls data cleaner system calls agent low level failed logins events network router functions data cleaner functions agent low level connections tcp data cleaner data cleaner logins data cleaner connections tcp agent low level failed logins agent low level logins agent low level user interface mediators database system logs router system calls data cleaner system calls agent low level enterprise data warehouse intrusion detection data gathering base classi cation basic data mining middle architecture low level mobile agents form rst line intrusion detection 
periodically travel associated data cleaning agents obtain gleaned information classify data determine singular intrusions occurred 
data cleaning formatting bottom tiered architecture system log routers system activity agents read log les monitor operation systems 
routers feed data distributed data cleaning agents previously registered interest particular events 
targeted data cleaning agents process data obtained routers activity agents 
render data common data formats 
develop system multiple departmental level systems monitored 
data warehousing combine knowledge data individual departments organization wide view attacks 
agent system targeted run departmental level organization 
provide enterprise wide information intrusions data departmental agent system feed data warehouse shown 
data warehouse provide global view intrusion detection systems supports identi cation attacks helps administrators discover new attacks trains system administrators attacks mounted systems identi es weak points enterprise information systems 
number agent infrastructures exist support agent systems 
generally agents infrastructures provide agent servers agent interfaces agent brokers 
agents servers may provide mobility authentication 
agent interfaces application programs create communicate agents 
agent brokers provide naming location services 
prototype mobile agent intrusion detection system built java language voyager object request broker :10.1.1.26.6055
voyager provides mobility interfacing naming services needed implement agents ids 
related distributed intrusion detection systems distributed intrusion detection system dids university california davis combination host lan monitors observe system network activity :10.1.1.26.6055
centralized director obtained information monitors detect intrusions 
dids similar system multiple distributed monitors akin agents arti cial intelligence algorithms discover anomalous events 
dids di ers system intelligence purely centralized dids agent technology 
common intrusion detection framework cidf resembles project general architecture :10.1.1.26.6055
cidf proposed standard developed group composed information technology ce defense advanced projects agency university california davis information sciences institute research 
cidf nomenclature di ers including reconnaissance agents correspond data gathering agents analysis agents correspond low level agents facets decision response agents correspond high level agents 
general cidf provides model compare system specially related agents 
agents intrusion detection systems projects investigated agents intrusion detection systems 
computer immunology project java agents meta learning jam autonomous agents intrusion detection aafid projects examined problem di erent ways 
computer immunology project university new mexico explored designs intrusion detection systems ideas gleaned examining animal immune systems 
small individual agents roam distributed system identify intrusions resolve intrusions 
portion project developed sense self security related computer programs observing normal sets system calls executed programs 
sense self detect intrusions discovering program executes unusual set system calls 
computer immunology project di ers project focus individual agents integrated system cooperating multi agents 
jam project columbia university uses intelligent distributed java agents data mining learn models fraud intrusive behavior shared organizations :10.1.1.26.6055
project di ers concentration intrusion detection single organization data warehousing aggregate department data provide organization wide views security information 
aafid project purdue coast project developed intrusion detection system perl agents fast prototyping cross platform compatibility :10.1.1.26.6055
project analyzed agent approach intrusion detection 
approach di ers emphasis learning algorithms data warehousing mobile agents 
system implemented java 
lightweight agents dynamic aggregation allows runtime addition new capabilities agents 
section explains addition agent collaboration system dynamic aggregation 
call small minimal agents lightweight agents implement minimum functionality opposed heavyweight agents include functions may needed 
compared heavyweight agents lightweight agents smaller simpler faster transport due smaller size dynamically updatable 
dynamic aggregation allowed add collaboration capabilities lightweight mobile agents quickly add new features system 
particular dynamic aggregation allows agents intrusion detection system inform intrusive activity 
agent uses dynamic aggregation manage sensitivity level 
sensitivity level determines sensitive agent events may considered intrusive normal circumstances intrusive presence related intrusions 
example sensitivity issue problem failed login attempts 
login failures single host may normal user forgets password 
attacker identi ed target host considered intrusive system may connect target host try typical passwords 
case loose temporal relation exists rst event second event failed login attempts 
agent sensitivity levels provide real time correlation related intrusions allowing normal individual events pass triggering alarms 
adding agent capabilities dynamic aggregation dynamic aggregation objects ers bene ts :10.1.1.26.6055
behavior binary object may extended 
object may customized speci ways 
object behavior may extended runtime ways need speci ed compile time 
list bene ts add object small new functionality needed 
voyager terminology objects dynamic aggregation facets 
voyager de nes primary object facets aggregate managed single unit 
voyager facet selection rules conveniently select facet implementation tailored particular object 
allows speci customization object 
voyager selects implementation facet name facet class name primary object 
facet particular class requested voyager searches facet implements interface facet class name pre xed 
example facet name requested voyager search class implements interface 
voyager searches objects implementations facet interface name primary object su xed name facet 
matching implementation voyager searches primary object superclasses 
example primary object class extends java lang object facet requested voyager rst look facet named nally 
voyager looks implementation facet searches primary object package facet package 
low level intelligent agent intrusion reporting facet mediator data gathering agent cleaned data adjustment facets interested results itinerary facet adjustment interesting intrusions facets low level agents dynamic aggregation intelligent agents multi agents intrusion detection system lightweight oriented gathering classifying data 
low level agents communicate directly related data gathering agents mediators 
adding low level agent communication ids allows agents fuse related data real time take advantage knowledge security status related components system 
dynamic aggregation provides convenient way adding communication low level agents adding excess baggage agents 
inter agent communication implemented sensitivity facets aggregate low level agents 
sensitivity facets family objects communicate intrusion information information related intrusions ect decisions intrusions 
issue failed attempts login provides example sensitivity facets 
failed logins distributed system expected users tend forget passwords try wrong passwords wrong systems try login 
face attack failed logins may signal step intrusion attacker tries commonly default passwords having identi ed systems allow virtual terminal le transfer connections network 
failed logins sensitivity facets listen network connection events unusual sources occur attacker identi es targets remember events increase sensitivity failed logins period time 
agent collaboration ids developed agents designed developed tested 
dynamic aggregation provided way agents extended having overload agent new features 
agents needed bit redesign accommodate sensitivity facets 
adjustment facet integrate primary agent ect decisions events intrusive 
agents modi ed provide newly obtained events listener adjustment facet adjustment event intrusion classi cation 
agents modi ed notify listener reporting facet event determined intrusive 
adjustment agent architecture agents exible open enhancement aggregation 
reporting facets designed broadcast intrusion messages primary agent interested facets 
adjustment facets listen intrusion messages reporting facets 
illustrates ow information agents facets 
communication ids auditing information exchanged agents subclasses audit class 
audit class provides methods serializing audit object table keys values audit object storing audit object database obtaining audit object database 
subclasses audit class fully describe events logins changes important les network connections processes executed 
low level agents obtain audit objects data gathering agents apply rst level intrusion detection arti cial intelligence expert rules 
audit objects passed vertically ids see 
intrusion information exchanged facets descriptive strings asn syntax 
style advocated tim bass small management information base mib designed encapsulate information intrusions 
mib allows low level agents communicate intrusion information higher level describe knowledge intrusion 
sample asn hierarchy intrusions follows 
host intrusions identi ed host computer host priv prog intrusions privileged program host auth intrusions related authentication net intrusions related network services net ip intrusions ip network protocol net ip icmp intrusions icmp protocol net ip udp intrusions udp protocol net ip udp service nfs intrusions nfs net ip tcp intrusions tcp protocol net ip tcp service login intrusions rlogin protocol listeners register interest portion hierarchy specifying pre example listener register pre net ip tcp listen tcp related intrusions 
communicating facets intrusions detected agent ids examined related intrusions 
examples relations shown table 
reporting facets constructed encode intrusion information mib described previously send reports interested facets 
adjusting facets encode relationships intrusions registering interest related intrusions 
adjustment facets interpret received intrusion messages ect sensitivity level sensitivity level adjust intrusion classi cations events related low level agent 
implementation section implementation prototype ids discussed 
implementation dynamic aggregation add communications agents 
table agents related intrusions agent related intrusion rationale untrusted connections attack network daemon changed con guration le attacker attempt login network attacking network daemon changing con guration le critical files attack network daemon nfs attacker may change critical le enable attacks failed logins port scanning attacker may scan available network ports nd machines try login ids implementation prototype ids implemented sun java development kit jdk version objectspace voyager object request broker version :10.1.1.26.6055
java chosen development language platform independence security speed development 
java platform independence allowed compile execute completely shared code platforms including silicon graphic irix hewlett packard hp ux commercial operating systems free operating systems including freebsd linux 
java security features include executing untrusted code strict typing bounds checking byte code veri cation code signing 
java strict typing object orientation assisted development enforcing structure allowing addition functionality extending existing objects reducing time needed debugging compared projects similar complexity implemented language 
runtime performance java code concern obstacle ids project 
performance su cient demonstrate operation prototype ids 
additional performance required just time jit compilers compile java byte code native machine code satis ed requirements 
voyager object request broker chosen prototype ids availability development java native language support mobile agents 
voyager provides mobility message passing independent target object location naming services java objects necessary prototype ids 
voyager supports extending lightweight agents dynamic aggregation facets 
facets allow add capabilities ids agents including agent communication collaboration 
dynamically add countermeasures capabilities agents 
allow running ids system adapt new attacks implementing new countermeasures 
bottom tier agents ids set stationary data cleaning agents 
stationary agents obtain information sources including system logs audit data operational statistics 
stationary agents convert information common format higher levels agents 
example stationary agent reads system logs reports failed logins 
parses failed login messages system log login objects describe failed login took place user account computers involved failed login 
middle tier agents ids set low level agents 
low level agents mobile agents gather information stationary agents 
low level agents process gathered information monitor classify events 
low level agents pass information mediator 
example low level agent visits host retrieve list failed logins 
number failed logins entire distributed system exceeds threshold short period time failed logins agged attempted intrusion 
prototype detects intrusions including attempts trying multiple passwords multiple machines unusual tcp network connections changes critical les assistance tripwire attacks sendmail mail transfer agent refused connections unsafe network services :10.1.1.26.6055
note ow information design purely vertical terms agents level cooperating coordinating 
existing low level agents considered lightweight view capability communicate directly 
adding cooperation agents sensitivity facets created add communications capabilities low level agents 
sensitivity facets implement adjustment intrusion reporting functions shown 
mediators construct agents attach sensitivity facets agents 
sensitivity facets implement reporting adjusting functions described section 
agents gather information information passed sensitivity facets reporting adjusting 
interface de ned methods register subscribe events associated agent subscribe interesting intrusions agents obtain current sensitivity level publish messages intrusions intrusion messages received facet 
default implementation interface sensitivity created 
register method implementation subscribes events seen attached agent 
method implementation de nes intrusions interesting facet 
method implementation returns indicator sensitive facet suspicious events 
method implementation publishes information intrusive event listening sensitivity facets 
method implementation receives messages intrusive events sensitivity facets adjusts facet sensitivity level signi cance event 
shows slice intrusion detection system sensitivity facets included 
speci sensitivity facet extends basic sensitivity facet listen intrusive activity including changes les bu er ow attacks 
agents report intrusive activities sensitivity raised target may receive anomalous tcp connections near may part intrusion 
voyager rules attaching facets agent sensitivity facet added facet added 
facet listens intrusive activity reports 
sense activity scanning available telnet ports facet raise level suspicion 
intruder may scan available telnet ports connect discovered telnet ports try login known accounts typically passwords 
happen facet help detect attack lowering threshold acceptable failed logins 
results intrusion events infrequent intrusion detection system rarely require sensitivity capability 
adding sensitivity capability required load network speed transmission agents better normal case 
data cleaner low level agent data cleaner low level agent select system data router log messages data sources authentication messages mediator user data sources tcp connections interface agent mediator facet facet portion intrusion detection system facets particular java byte compiled code class total bytes 
byte compiled code class total bytes 
permanently adding sensitivity capability increase size agent 
considering size code roughly half size sensitivity facet sensitivity facet 
constant transmission rate time transmit lightweight agent half time required transmit agent facet 
savings dramatic 
java byte compiled code class total bytes 
byte compiled code class total bytes 
permanently adding sensitivity capability increase size 
extending lightweight agents provides convenient mechanism implementing new form communication intrusion detection system 
developing facets implemented listening reporting functions signi cant new feature added ids negatively ecting existing agent design operation operation system improved normal case load system due size agents reduced intrusions 
extension agents ers possibilities extending intrusion detection system 
potential lightweight agent capabilities add data mining capabilities mediators intrusion detection system 
group facets constructed implement various data mining algorithms 
mediators dynamically add data mining algorithms higher level intrusion detection adding appropriate facets 
prototype mib intrusions formalized taxonomy intrusions 
asn syntax describing intrusions hold promise integration intrusion detection systems communication intrusion detection agents 
relationships intrusions formally identi ed encoded facets 
prototype table intrusion relationships rst step developing sensitivity facets 
previous intrusion detection systems encoded relationships rules expert system :10.1.1.26.6055
agents facets er dynamic malleable way deal relationships encoding rules expert system 
extension ids system may possible facets implement data fusion identify source intrusion real time 
attacks identify source ip address attacker times information may gathered source help determine identity attacker 
possible extension facets implement countermeasures respond intrusions 
facets designed fuse intrusion information real time 
fused information meets certain criteria facets direct monitored system take corrective defensive action deter intrusion 
source intrusion known identi cation facets previously mentioned countermeasures may possible prevent attacks 
facets aggregated agents countermeasures facets operating system actions need executed 
additional communications overhead required send commands target system counter attack 
jai jose omar garcia fernandez david spa ord diego zamboni :10.1.1.26.6055
architecture intrusion detection autonomous agents 
technical report coast tr purdue university department computer sciences 
tim bass 
multisensor data fusion generation distributed intrusion detection systems 
proceedings iris national symposium sensor data fusion may 
dorothy denning 
intrusion detection model 
ieee transactions software engineering se february 
stephanie forrest steven hofmeyr anil somayaji 
computer immunology 
communications acm october 
stephanie forrest steven hofmeyr anil somayaji thomas 
sense self unix processes 
proceedings ieee symposium security privacy pages los alamitos ca usa 
ieee computer society press 
honavar 
encyclopedia information technology chapter intelligent agents 
marcel dekker new york usa 
williams eds 
honavar les miller johnny wong 
distributed knowledge networks 
proceedings ieee information technology conference pages syracuse ny usa september 
wayne jansen peter mell tom don marks 
applying mobile agents intrusion detection response 
technical report interim report national institute standards technology october 
wayne jansen peter mell tom don marks 
mobile agents intrusion detection response 
proceedings th annual canadian information technology security symposium ottawa canada june 
gene kim eugene spa ord :10.1.1.26.6055
experiences tripwire integrity checkers intrusion detection 
usenix association editor proceedings third annual system administration networking security conference sans iii pages berkeley ca usa april 
usenix 
sandeep kumar :10.1.1.26.6055
classi cation detection computer intrusions 
phd thesis purdue university west lafayette usa august 
wenke lee salvatore stolfo :10.1.1.26.6055
data mining approaches intrusion detection 
proceedings th usenix security symposium 
usenix 
lippmann cunningham fried gar graf kendall weber webster :10.1.1.26.6055
darpa afrl line intrusion detection evaluation 
proceedings international workshop advances intrusion detection raid louvain la neuve belgium 
david mann steven :10.1.1.26.6055
common enumeration vulnerabilities 
nd workshop research security vulnerability databases west lafayette usa january 
purdue university 
peter mell mark :10.1.1.26.6055
mobile agent attack resistant distributed hierarchical intrusion detection systems 
proceedings second international workshop advances intrusion detection raid purdue usa september 
mukherjee todd heberlein karl levitt :10.1.1.26.6055
network intrusion detection 
ieee network may june 
objectspace dallas tx :10.1.1.26.6055
objectspace voyager core technology user guide 
version 
phil porras dan stuart staniford chen maureen stillman felix wu :10.1.1.26.6055
common intrusion detection framework architecture 
online 
www org drafts architecture txt 
mark reilly maureen stillman :10.1.1.26.6055
open infrastructure scalable intrusion detection 
proceedings ieee information technology conference pages syracuse ny usa 
ieee press 
martin 
snort lightweight intrusion detection networks 
proceedings thirteenth systems administration conference lisa seattle wa usa november 
usenix 
salvatore stolfo prodromidis lee fan chan 
jam java agents meta learning distributed databases 
proceedings rd international conference knowledge discovery data mining pages newport beach ca usa august 
sun microsystems 
java development kit version online may 
java sun com products jdk 
christina stephanie forrest barak 
detecting intrusions system calls alternative data models 
proceedings ieee symposium security privacy pages 
ieee press 

