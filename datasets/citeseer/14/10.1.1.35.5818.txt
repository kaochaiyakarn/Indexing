expressiveness links hypertext systems luc moreau wendy hall department electronics computer science university southampton southampton bj uk email moreau wh ecs soton ac uk study linking mechanisms contribute expressiveness hypertext systems 
purpose formalise hypertext systems machines 
primary benefit hypertext systems able read documents non linearly expressiveness defined terms ability follow links 
classify hypertext systems power underlying automaton 
model allow compare embedded vs separate links simple vs generic links 
investigate history mechanisms adaptive hypertexts functional links 
simple links separate generic links adaptive links give hypertext systems power finite state automata 
history mechanism confers power pushdown automata general functional links give turing completeness 
keywords links generic simple embedded separate functional expressiveness received month date year revised month date year 
hypertext system software system creating editing browsing hyperdocuments 
links represent logical structural associations documents allow non linear reading documents user needs wishes 
authors argued cross referencing linking essential technique facilitate access information 
hypertext research community defined kinds links proposed ways implementing 
particular debated issue links part documents html kept separate intermedia 
summary issue brown brown embedded separate hypertext mark issue 

practical considerations discuss benefits adopting approach implementation able combine 
formal framework systems judged basis established criteria 
article gave initial impetus research described formal comparison power expressiveness hypertext systems 
literature abounds formal models hypertexts quite different motivations 
mention 
dexter model attempts define common vocabulary associated meaning order talk hypertext systems 
hypertext machine ham architectural description general purpose multi user server hypertext storage system 
trellis model formal semantic specification hypertext petri nets 
authors regarded hypertexts automata model checking prove properties hypertext 
hypertexts formalised graphs 
best knowledge model compare expressive power hypertext systems 
physics programming language communities black box approach compare systems set observable events compare systems independently internal behaviour 
adopt similar approach model hyperdocuments hypertext systems machines kinds automata compare set observable events 
study dynamic properties hypertexts terms reader experience 
point just state adopt capability links observable event hypertext 
having developed formal way compare hypertext systems answer brown brown question embedded separate links expected differ theirs 
investigation computer journal vol 
luc moreau wendy hall issue model compare forms linking study may change expressiveness hypertext systems 
study microcosm generic links generally regarded powerful way author hypertexts see power described formally 
introduce navigation history semantics show contribute expressiveness 
discuss adaptive hypertexts availability link may vary time navigation history 
discuss general class linking mechanism called functional link 
organised follows 
section define hypertext machine able perform transitions way user navigate hyperdocument 
initial model separate links 
define set observable events expressiveness hypertext systems compared 
section formal account brown brown discussion embedded separate links 
successively investigate mechanisms generic links section history mechanism section adaptive linking section 
section integrate notion functional link model define expressiveness shown general form linking able emulate turing machine result allows claim linking powerful computing 
hypertext machine bieber define hypertext system software creating editing browsing hyperdocuments 
section introduce hypertext machine formalisation hypertext system hyperdocuments shall refer semantics hypertext 
semantics hypertext expressed terms reader experience terms navigation capability allowed hypertext system hyperdocument 
note semantics formalise authoring editing activities 

definition physics order compare properties different systems common practice adopt set observables observable events systems may compared 
approach followed compare expressiveness programming languages 
set observables systems distinguished observer said observationally equivalent example order compare programming languages set observables may defined set final results returned programs 
follow similar approach hypertext systems 
key characteristic hypertexts existence links documents result ability provide non linear reading documents 
far users concerned valuable set hypertext observables various links may traverse 
shall say user distinguish hypertext systems sequences links may traversed may traversed vice versa give access information 
indistinguishable hypertext systems said expressiveness ability link documents way 
presenting formal framework define mathematical symbols dom domain function set finite function domain range set finite subsets purpose choose representation documents 
regard document finite function mapping offsets tokens cf 

tokens may understood characters words atomic objects containing information 
tokens appear offset document 
tokens offsets specified definition remains valid type media 
instance images tokens pixels finite function dimensional array 
document representations tree organisation instance structured text formats image formats offsets access paths tree subcomponents 
assume documents named naming function able map names documents 
names belong unspecified set names 
context www urls equivalent names naming function implemented servers return document file system generated computation response url 
object oriented description hypermedia components trigg ids identify nodes similar mechanism dexter model 
link pair composed anchors respectively called source destination 
definition anchor mechanism referring part document 
model anchor defined pair composed document name offset intuitively anchor refers token document 
adopted unidirectional notion link source anchor designates location link departs destination anchor points location link arrives 
linkbase defined set links 
time consider unidirectional links assume links point point investigate variants links contribute computer journal vol 
expressiveness links hypertext systems offset fm offset token ft token name fn document name doc offset token document ae env name doc naming function lb link linkbase doc set documents link source theta dest link source name theta offset source anchor dest name theta offset destination anchor state doc theta theta env theta state notation hs di link hn oi source anchor hn oi destination anchor hd lb ae state link traversal relation 
state theta state theta link hd lb ae 
hd lb ae hhn hn ii lb valid ae ae ae 
state space transition relation hypertext machine separate links expressiveness hypertext systems 
notation notations 
instance link represented pair hs di source destination anchors represented pair hn oi 
instance hypertext separate links noted quadruple hd lb ae tag indicates hypertext separate links 
order specify operational semantics hypertext machine need define notion link validity intuitively link valid dangling source destination anchors point existing documents offsets 
definition 
link hhn hn ii valid respect naming function ae set documents written valid ae conditions hold assuming ae ae 



dom 
dom 
linkbase valid respect naming function ae set documents links valid respect ae 
purpose conciseness say links linkbases valid specifying naming function set documents relate 
having specified various entities hypertext machine state space define transitions machine able perform 
transitions allow machine evolve state mimic traversal process 
states defined triples composed document current focus document user currently reading ii current linkbase iii set documents 
transition relation states called link traversal relation written appears 
transition state state valid link current linkbase documents focus states 
reflexive transitive closure 
written 
machine specify links displayed user take account superficial interface characteristics 
active links document may highlighted system user select word order follow potential link 
purpose expressiveness comparison really matters user ability follow link modelled link traversal relation 
initial state hd lb ae set computer journal vol 
luc moreau wendy hall reachable documents reachable fd 
hd lb ae ig essential feature hypertexts ability offer links parts documents henceforth allow users read documents non linearly 
hypertext machine hyperconnectivity degree defined set length sequences links user follow 
hyper 


sn traditional document hyperdocument links degree hyperconnectivity empty 
section show notion hyperconnectivity allows compare different hypertext machines 
hyperconnectivity hypertext machine set finite sequences links user traverse hyper hyper note links regarded primordial hypertexts documents neglected contain information 
unrealistic consider hypertext systems equivalent contain documents 
notion hyperconnectivity takes documents account link specifies names source destination document 

properties hypertext machine hd lb ae described fact regular automaton composed states initial state transitions states defined links lb 
states defined accepting states hyperconnectivity set words language accepted automaton 
sequel shall study forms hypertext machines constitute types automata pushdown automata turing machines 
shall qualify hypertext machine associated automaton call class definition 
hypertext machine said regular non deterministic finite state automaton 
hypertext machine defined regular hyperconnectivity regular hypertext defined regular expression thm 
park proved hyperconnectivity hypertext machine regular 
furuta stotts show hypertext systems expressed petri nets described trellis model 
hyperconnectivity hypertext machine fact language accepted machine regarded automaton equality hypertext machines derived equality automata 
hyperconnectivity property hypertext system exhibits links documents call expressiveness say hypertext machines expressiveness degree hyperconnectivity definition expressiveness 
hypertext machines expressive hyper hyper 
proposition valid linkbases increase hyperconnectivity hypertext machines size increases 
proposition 
valid linkbase increasing hyperconnectivity 
proof 
set documents lb lb valid linkbases lb lb states hd lb ae hd lb ae respectively derive hyper hyper link transition proposition formally states links may increase possibility navigating hyperspace 
consequence adding link hypertext system strictly increases hyperconnectivity strict inclusion ae resulting hypertext different expressiveness stage wonder adding link increases expressiveness hypertext system 
doubt link offers new navigation possibilities user author issue determine link useful adds meaning 
conclude expressiveness changes shall come back issue 

kinds anchors regard anchors mechanism referring part document unidirectional links defined source anchor destination anchor 
section anchors defined pairs composed document name offset result links said point point point document links links destination anchor specify document offset 
point document link traversed document specified destination anchor current focus 
implementations hypertext systems typically display destination document 
symmetrically document point link link source anchor specifies document computer journal vol 
expressiveness links hypertext systems document offset 
document point link traversed document focus document specified source anchor 
document document link specify offset source destination anchors 
order take account new kinds anchors extend hypertext machine follows source name theta offset name source anchor dest name theta offset name destination anchor anchors specify document name free specify offset 
link traversal relation supports kinds links 

state theta state theta link hd lb ae 
hd lb ae hhn hn ii hn hn ii hhn hn lb ae ae dom dom practice hypertext systems point point links able conveniently position cursor documents feature facilitates accelerates access information 
modelling hypertext systems consider current focus document independently current subpart displayed 
result accessing document point document link point point link change set links available destination document 
show hyperconnectivity generated point document links equal generated point point links translation entails contribute hypertext expressiveness 
property holds document topoint document document links 
proposition 
point document links point point links generate equal translation 
proof 
translate hypertext point topoint links hypertext point document links translating point point link hhn hn ii point document link hhn base point point links lb translated base point document links lb result transition point point links hd lb ae 
hd lb ae hhn hn ii lb mapped transition point document links hd lb ae 
hd lb ae hhn lb destination offset specified 
available links dependent document focus current cursor position 
vice versa transition 
lb pointto point link lb translation consider hypertext point point links translation hypertext point systems bisimilar exists transition 
exists 
bisimilar 
equal translation links 
point point point document links generate equal translation say contribute expressiveness henceforth hypertext class 
note proposition holds hypertext machines described 
sgml hytime introduce ideas 
tokens may interpreted approach constant 
second presentation layer may process tokens 
systems retrieving document may different semantics retrieving document offset 
far considered unidirectional links composed source anchor destination anchor indicate direction link traversed 
bidirectional links defined anchors specify direction words bidirectional links may traversed directions 
hypertext system bidirectional link defined terms unidirectional links swapped anchors 
definition contrasted users experience authors see bidirectional link single entity traversed created edited deleted appropriate actions role hypertext system map semantic definition single physical reality 
kinds links considered 
example systems hytime xlink support ary links involve anchors 

embedded links separate links hypertext machine section uses notion point point link call simple link far considered links stored linkbases entities distinct documents 
words links kept separate documents 
section study approach computer journal vol 
luc moreau wendy hall offset fm offset token ft token name fn document name offset annotated document ae env name doc naming function set annotated documents dest set destination anchors token theta annotated token dest name theta offset destination anchor state theta env theta state notation ht annotated token ha ae state link traversal relation 
state theta state theta link ha ae 
ha ae hhn hn ii valid ae ae ae 
state space transition relation hypertext machine embedded links simple links stored linkbases embedded explicitly documents 
approach links said embedded documents 
redefine hypertext machine deal embedded links 
introduce new category annotated documents map offsets tokens finite set destination anchors possibly empty 
destination anchors meant destination part link implicit source anchor formed current document name current offset 
state pair composed document focus set annotated documents containing 
link traversal relation adapted accordingly transition allowed states hypertext machine embedded links offset document focus contains anchor pointing document focus definition hyperconnectivity previous section 
approach embedded links instance html markup language adopted world wide web www 
html links appear markups document html allows user create link offset document 
question expressiveness hypertext machines separate embedded links solved proposed framework 
define compilation function generates set annotated documents set documents linkbase 
proposition 
set documents simple links hypertext machine separate links expressive hypertext system machine links 
proof 
compilation function prove hyperconnectivity hypertext separate links equal hyperconnectivity derived hypertext embedded links 
shall assume deal valid links 
define embedding function transforming hypertext separate links hypertext embedded links 
uses auxiliary function translating documents annotated version embedded links 
hd lb ae ha ae ae lb fa ae lb ae iff ae dom ae ae lb ht computer journal vol 
expressiveness links hypertext systems fhn hhn hn ii lb ae dg easily derive hd lb ae 
hd lb ae ha ae 
ha ae hhn hn ii 
second step proof establish decompilation function gamma inverse generate document linkbase annotated document 
auxiliary function gamma generate document annotated document 
gamma ha ae hd lb ae ae iff ae dom ae gamma exists ho ht ii lb hhn hn ae ht hn easily derive ha ae 
ha ae gamma hd lb ae 
gamma hd lb ae hhn hn ii 
furthermore composition translations gamma gamma identity function 
result equal 
compilation function inverse gamma fact formalisation brown brown joiner splitter software components respectively 
conceived converters practical reasons joiner splitter practical means offer best approaches embedded vs separate links 
hand derived compilation functions gamma order prove types hypertext systems 
expressiveness embedded links separate links offer flexibility 
linkbases extensible recompilation 
ii linkbases set documents user needs 
hand separate links disadvantages particular editing problem concerned maintaining integrity links editing document separate links 

generic links consider hypertext systems separate links 
section stated simple links associate source destination anchor 
hypertext systems allow source anchor dynamic source anchor specified authoring time manifested navigation time 
particular microcosm introduces notion generic link able connect occurrence keyword document particular destination anchor 
benefit generic links require lower authoring effort shall explain 
extend state space generic links 
linkbases contain simple links generic links 
generic link pair formed token destination anchor 
generic link means token appearing set documents conceptual link destination anchor traversed 
link traversal relation changed accordingly users may traverse simple generic links 
set documents generic links may compiled linkbase simple links 
proposition 
fixed hypertext generic links set documents exists hypertext simple links expressive 
proof 
define compilation function generates base simple links set generic links set documents 
compilation function recursive 
base case deal empty set generic links 
inductive case deal non empty set fgg generic links containing generic link rest set denoted ae fgg ae ae lb lb fl hhn hn ii ht hn ii ae valid ae result hd lb ae 
hd lb ae hd ae 
hd ae lb ae 
observe transition arrow 
annotated concrete source destinations anchors simple link generic link followed 
derive hyper hd lb ae equal hyper hd ae lb ae 
reader viewpoint generic links change expressiveness hypertext systems simple links set documents base simple links provide hyperconnectivity provide reader navigation ability 
computer journal vol 
luc moreau wendy hall offset fm offset token ft token name fn document name doc offset token document ae env name doc naming function lb link linkbase doc set documents link source theta dest link source name theta offset source anchor dest name theta offset destination anchor token theta dest generic link state doc theta theta env theta state notation ht di generic link hd lb ae state link traversal relation 
state theta state theta link hd lb ae 
hd lb ae hhn hn ii ae ae valid ae ae lb ht hn ii lb 
state space transition relation hypertext machine simple generic links generic links useful require effort author hypertext system 
intuitively author needs generic links simple links order achieve hyperconnectivity 
note measure benefit authors comparing effect links hyperconnectivity seen reader proposition requires notions valid generic link simple link instance 
context validity generic link means exists document generic link applicable destination dangling 
definition 
generic link ht hn ii valid respect naming function ae set documents written valid ae conditions hold assuming ae 

exists ae 
exists dom 


dom 
definition 
linkbase lb composed simple links simple link instance valid set generic links respect naming function ae set documents lb set relation ht hn ii lb hhn hn ii ae proposition states base generic links creates greater equal hyperconnectivity simple link instances 
proposition 
lb instance set valid generic links respect set documents hyper hd ae hyper hd lb ae proof 
hyper hd ae hyper hd lb ae ht hd ii exists document offset lb ae 
hyper hd ae hyper hd lb ae proposition hyper hd lb ae hyper hd lb ae lb lb proposition 
generic links flexible set documents hypertext systems may extended generic links applicable new documents 
computer journal vol 
expressiveness links hypertext systems argue generic links powerful specifying generic link equivalent blindly creating links occurrence token set documents independently context actual meaning offset 
point debate generic links increase expressiveness hypertext systems 
discussion introduces notion semantic validity link 
intuitively say link semantically valid presence sense 
notion semantic validity probably computable algorithmic methods approximate criterion 
microcosm introduces local links kind generic link restricted scope defined set documents local links defined straightforwardly model adding set documents restricting scope generic link 
section shall mechanism provides automated dynamic linking mechanism generalises generic links allowing computation specify semantically correct networks links 

history mechanism numerous hypertext systems www browsers intermedia microcosm maintain history followed links accessed documents 
addition provide user ability step backwards navigation 
typically offer back button restores latest navigation state history latest document offset 
extend hypertext machine history mechanism 
history defined list links 
empty list noted non empty list composed head tail history added new explicit component machine state 
simple link contains source destination anchor history contains links followed names documents accessed 
link traversal relation adapted accordingly 
forward navigation noted 
defined action link results adding history state 
backward navigation ability follow latest link appears history reverse direction hypertext system back state existed link followed forward 
backward navigation noted 
symbol indicates reversing link traversed 
transition permitted history list empty implies users go backwards go forward 
bieber wan study problem backtracking multiple window environment having single document focus window contains document focus 
distinguish chronological task backtracking discuss issue previous states deleted history list backtracking 
note history mechanism described formalisation notion trails 
history mechanism differs bidirectional links 
hypertext systems form pushdown automaton similar expressiveness context free grammars 
hand hypertext systems bidirectional links regular bidirectionality property links linkbase 
proposition 
hypertext system history mechanism back button different expressiveness hypertext system bidirectional links 
proof 
consider hypertext machine single document represented node picture 
add hypertext system bidirectional link document forward direction represented simple link backward direction simple link hypertext bidirectional links represented circle represents document focus arrows links followed sign initial state system 
user possibility follow links degree hyperconnectivity described word length generated regular expression fa bg consider hypertext system document unidirectional link history mechanism back button transitions represented hypertext system generates link sequences type ji ji expression ensures user follow forward link inequality ensures total number backward transitions bounded total number forward transitions 
order prove hypertext hyperconnectivity observe length history list ji gamma ji computer journal vol 
luc moreau wendy hall offset fm offset token ft token name fn document name doc offset token document ae env name doc naming function lb link linkbase doc set documents link source theta dest link source name theta offset source anchor dest name theta offset destination anchor hist link theta hist history state doc theta theta env theta hist state notation history hd lb ae hi state 
state theta state theta link fbg hd lb ae hi 
hd lb ae hhn hn ii valid ae hd lb ae 
hd lb ae hi hhn hn ii valid ae ae ae 
state space transition relation hypertext machine history language regular recognised pushdown automaton 
proposition introduces new kind hypertext systems call pushdown 
definition 
pushdown hypertext machine machine behaves pushdown automaton 
practical terms proposition states history mechanism back button introduce new class hypertext systems navigation space hyperconnectivity provided powerful class hypertext systems 
observed hyperconnectivity generated links fact specified authors author documents 
hyperconnectivity derived back buttons offers new navigation capabilities user provided hypertext system 
sections mechanisms linking allow authors specify hyperconnectivity wish 

adaptive linking consider hypertext system composed documents root document definition document properties document accessible graphical representation system states sr sd sp focus respectively 
sign sr indicates initial state 
goto goto sr sd goto goto 
regular hypertext imagine want build hypertext system properties document accessed definition document browsed 
models system graph node represents document currently displayed associated state 
instance sr computer journal vol 
expressiveness links hypertext systems sd sr goto goto goto goto goto 
adaptive linking root document focus carries additional knowledge definition document accessed 
hypertext systems said adaptive links links available document dependent navigation history 
matter fact hypertext modelled extending hypertext machine linkbases adaptive linking special case adaptive hypertexts links document contents may dependent navigation history user model 
section shall focus specific facet adaptive hypertexts describe mechanism links may adapted navigation 
state space distinguish types links simple links form hs gammai specify source destination anchors linkbase changing links hs lb specify name linkbase active followed 
linkbase changing link similar content changing links 
link traversal relation distinguishes kinds links 
previously simple link changes document focus leaves current linkbase untouched 
novelty traversing link sets new linkbase machine state subsequent navigation 
hypertext machines figures different expressiveness different 
transitions allowed sr legal sr 
show hypertext systems adaptive linking described regular 
proposition 
hypertext systems adaptive linking regular 
proof 
number linkbases lb number documents consider names fn nm define regular automaton composed theta nodes enumerated follows fn link link hn gammai lb link link hn lb lb ae lb lb straightforward prove derived automaton regular ii hyperconnectivity equal hyperconnectivity initial automaton translation links 
adaptive behaviours hypertexts defined 
stotts furuta describe dynamic adaptations hypertext structure time 
approach supports help menus appear relative amount time 
able links invisible delaying usability indefinitely 
adaptive hypertext describe partly simulate functionalities offered stotts furuta time adaption powerful especially including notion time absent model 
link popularity counts introduced help user navigate hypertexts counts determine links active 
far survey linking mechanisms shown linking mechanisms generate regular 
back button combined history list changes navigation space hypertext system behaves pushdown automaton 
section introduce powerful linking mechanism 

computed anchors microcosm generic links associate destination anchor source anchors designate token 
generalise generic links accepting source anchor computed arbitrary function 
generalise approach allowing destination anchor computed function 
obtain general notion link called functional link 
functional link powerful concept source destination anchors computed arbitrary functions navigation time functions take decision navigation history 
variant functional link adapted hypertext machine 
see link defined pair functions respectively called functional source anchor functional destination anchor predicate document name document offset history list indicates anchor formed document offset source link 
relation document name doc computer journal vol 
luc moreau wendy hall offset fm offset token ft token name fn document name lb fn lb lb lb link base name gammag link base spec doc offset token document ae env name doc naming function lb link linkbase doc set documents lb link set linkbases link source theta dest theta link source name theta offset source anchor dest name theta offset destination anchor state doc theta theta env theta theta state notation hs gammai hs lb link hd lb ae lb state link traversal relation 
state theta state theta link hd lb ae lb 
hd lb ae lb hhn hn gammai ae ae lb valid hhn hn ii ae hd lb ae lb 
hd lb ae lb hhn hn lb lb ae ae lb ae lb lb lb lb valid hhn hn ii ae 
state space transition relation adaptive hypertext machine ument offset history list returns set destination anchors 
link traversal relation defined terms functional anchors 
proposition establishes functional links generalise kinds links previously studied 
proposition 
functional links express simple generic adaptive microcosm local links 
proof 

hs di simple link 
corresponding functional link hf defined hn oi fdg 
ht di generic link 
corresponding functional link hf defined fdg 
proposition hypertext adaptive links may represented regular automaton 
adopt representation simple links 

microcosm local link kind generic link ht di scope restricted set documents corresponding functional link hf defined fdg strengthen result expressiveness functional links 
proposition show hypertext machine functional links emulate finite computation turing machine 
result effectively proves functional links introduce new class hypertext systems 
note restrict finite behaviours turing machines definition hypertext system essentially finite documents finite number finite size linkbases finite size 
computer journal vol 
expressiveness links hypertext systems offset fm offset token ft token name fn document name bool ftrue falseg boolean doc offset token document ae env name doc naming function fsa name theta doc theta offset theta hist bool functional source anchor fda name theta doc theta offset theta hist aset functional destination anchor lb link linkbase doc set documents aset anchor set anchors link fsa theta fda functional link anchor name theta offset anchor anchor theta anchor link instance hist link theta hist history state doc theta theta env theta theta hist state notation hf functional link hs di link instance history hd lb ae hi state link traversal relation 
state theta state theta hd lb ae hi 
hd lb ae hhn hn ii valid ae hf lb ae ae hn 
state space transition relation hypertext machine computed anchors proposition 
hypertext system functional links emulate finite computation turing machine 
proof 
consider turing machine 
order prove proposition construct hypertext machine emulate turing machine 
hypertext machine composed single document 
content irrelevant proof size domain defined biggest value necessary encode value stored ribbon turing machine head position 
emulate turing machine hypertext system follows 
step navigation single link accessible offset source anchor value encoded ribbon turing machine 
initially link accessible offset document specify initial value ribbon 
computation ends link activated final value computation offset followed link 
assume function turing encoding ribbon value head position input gives encoding ribbon value head position transition turing machine 
define functional link hf hhn di turing fhn functional anchors specify link available steps offset computer journal vol 
luc moreau wendy hall defined ribbon turing machine 
initially links position may followed specify input computation 
note proof proposition involves somewhat tricky encoding state turing machine offset available links 
reason set observables current definition hypertext machine links uniquely 
imagine functional links modify dynamic environment observable proof proposition straightforward able consider infinite computations 
authors investigated direction links may regarded arbitrary functions processes scripts called agents initiated links 
instance microcosm filters perform processing links followed 
observe restriction finiteness computations proposition due fact documents finite size due restriction functional links 
functional links may define various kinds links 
browsers usually indicate links followed user instance changing attribute colour 
regard attribute computed functional link 
consider simple link hs di 
define functional link associates source destination anchors followed 
hn oi hs di fdg typed links regarded key elements hypertext systems enforce regularity structure help user navigating types represent link meaning 
argue functional links encode types links type represented single functional link 
hypertext machine history mechanism section 
fact accumulate dynamic information navigation proceeds 
instance current active context attributes links followed collected environment functional anchors take environment argument provide refined form linking depending user navigation history 
section shown functional links hyperconnectivity longer regular contextfree language generated turing complete process 
practical terms allows authors specify links manifested navigation time depending reader traversal history 

discussion related goal study linking mechanisms expressiveness 
numerous hypertext concepts formalise 
believe hypertext machine approach extended support 
machine designed cope parallelism distribution similar formalisms author model parallel distributed programming languages 
hypertext systems multiple windows modelled allowing documents focus 
multiple users user models brought framework 
described brown brown article gave initial impetus 
goal formalise hypertext systems order compare expressiveness 
dexter model generally regarded document hypertext community 
dexter model attempt cover details user interaction hypertext 
approach different focus possible type interaction follow link operation 
course aspects user interaction useful modelled 
generally speaking dexter model far detailed machines 
regarded requirements satisfied implementations ordered considered hypertexts 
approach dexter model provide formal criterion compare hypertext systems 
dexter model links anchors parts anchor id anchor value design provides fixed point storage layer combined variable field layer 
practical organisation provides document editing issue tackled 
tompa formalises hypertexts graphs 
presents data model define runtime behaviour 
model functional links 
gives formal definition user views far links concerned implemented functional links 
presents prolog specification language hyperdocuments execution yields directed graph 
focuses compilation aspect focus runtime interpretation graph 
bieber bridge laws designed generalise hypertexts provide mechanism automatic linking automatic creation components nodes buttons 
regard link traversal complex inferencing process may application level procedures 
bridge laws logic model 
stotts furuta ruiz browsing semantics hypertext documents examining links computer journal vol 
expressiveness links hypertext systems 
consider links form automaton static directed graph 
branching time logics perform model checking browsing traces order derive temporal properties hypertext systems 
model checking proceeds exhaustive exploration state space requires finite state space state space suitable finite representation 
open question decide model checking technique applied automata particular functional links may potentially generate infinite link instances 
park studied dynamic properties hypertext terms readers experience 
proved set link followings hypertext hyperconnectivity regular 
investigate powerful classes automata 
garg richard models able describe hypertext systems 
garg focuses abstractions hypertexts richard highlight relationship objects containing information 
furuta stotts formalize hypertext systems trellis model model complete includes windows 
parunak describes hypertext systems terms topologies 
investigates different representations links relations 
representations discussed terms questions related existence identification source destination anchors 
technique similar functional link possible link representation 
mendes hall goal complementary approach 
perform empirical analysis power usefulness hypertext features viewed authoring process 
advantage approach allows isolate feature linking paradigm investigate expressiveness independently component 
empirical approach complete hypertext system difficulty determine contribution component 

survey linking mechanisms defined classes hypertext systems 
identified class regular hypertext systems powerful power equivalent nondeterministic finite state automata 
history mechanisms give hypertext systems power pushdown automata 
functional links hypertext systems powerful turing machines 
continued directions 
number hypertext notions incorporated machines set observables link attributes types 
multi windowing systems extend notion navigation allow multiple documents focus 
relationship link general computation investigated 
multiple users included model issues cooperative addressed 

wish helen leslie carr mendes peter anonymous referees useful comments 
dan jean editors 
proceedings hypertext standardization workshop nist special publication 
national institute standards technology january 
michael bieber steven 
logic generalized hypertext 
decision support systems 
holm nelson 
literary machines 
project xanadu 
vannevar bush 
may think 
atlantic monthly 
douglas engelbart 
conceptual framework augmenting man intellect 
information handling 
tim berners lee connolly 
hypertext markup language specification 
technical report rfc mit lcs 
nicole yankelovich haan norman meyrowitz drucker 
intermedia concept construction seamless information environment 
ieee computer pages 
peter brown heather brown 
embedded separate hypertext mark issue 
electronic publishing 
frank halasz mayer schwartz 
dexter hypertext 
communications acm 
brad campbell joseph goodman 
ham general purpose hypertext machine 
communications acm 
richard furuta david stotts 
programmable browsing semantics trellis 
proceedings hypertext pages 
david stotts richard furuta 
dynamic adaptation hypertext structure 
proceedings hypertext 
frank wm 
tompa 
data model hypertext database systems 
acm information systems 
park 
structural properties hypertext 
proceedings hypertext pages pittsburgh usa 
andrew fountain wendy hall ian heath hugh davis 
microcosm open model hypermedia dynamic linking 
streitz andr editors hypertext concepts systems applications proceedings echt pages 
computer journal vol 
luc moreau wendy hall hugh davis wendy hall ian heath gary hill rob wilkins 
integrated environment open hypermedia system 
proceeding second european conference hypertext echt pages 
wendy hall hugh davis gerard hutchings 
rethinking hypermedia microcosm approach 
kluwer academic publishers boston 
helen janet 
functional model link poster presentation 
proceedings hypertext 
helen janet 
dynamic link management functional model link 
proceedings basque international workshop information technology france 
matthias felleisen 
expressive power programming languages 
proc 
european symposium programming number lecture notes computer science pages 
springer verlag 
gordon plotkin 
lcf considered programming language 
theoretical computer science 
international organization standardization geneva switzerland 
information processing text office systems standard generalized markup language sgml edition 
international standard iso 
federal information processing standard fips pub 
hanan samet 
quadtree related hierarchical data structures 
acm computing surveys 
randall trigg 
dexter model open hypermedia unifying embedded link objects 
seventh acm conference hypertext ht pages washington dc 
harry lewis christos papadimitriou 
elements theory computation 
prentice hall 
steven newcomb neill victoria newcomb 
hytime hypermedia document structuring language 
communications acm 
tim bray de rose 
extensible markup language xml part 
linking 
technical report www consortium 
available www org tr wd xml link 
danny lange 
formal model hypertext 
dan jean editors proceedings hypertext standardization workshop pages 
national institute standards technology 
kasper kock 
flag taxonomy open hypermedia systems 
proceeding seventh acm conference hypertext ht washington 
tim berners lee robert cailliau luotonen henrik frystyk nielsen secret 
world wide web 
communications acm 
hugh davis 
data integrity problems open hypermedia link service 
phd thesis university southampton 
paul thistlewaite 
automatic construction management large open webs 
information processing management 
michael bieber wan 
backtracking multiple window hypertext environment 
acm european conference hypermedia technology echt pages edinburgh uk 
mike dave wendy hall reich gary hill mark 
memoir software agents finding similar users trails 
third international conference exhibition practical application intelligent agents multi agents paam london uk 
renaud 
bases de en ees une approche fond ee sur un mod ele expert 
phd thesis universit paul sabatier de toulouse 
pausch 
node popularity hypertext browsing aid 
electronic publishing 
janet helen 
hypermedia interface functional model link 
hypermedia 
thomas 
functional object model hypertext providing definitional transparency navigation functions 
technical report computer graphics center 
nanard marc nanard 
hypertext design environments hypertext design process 
communications acm 
manfred jorg jorg haake 
hypermedia cognition designing comprehension 
communications acm 
luc moreau 
correctness model scheme 
second international europar conference euro par number lecture notes computer science pages lyon france 
springer verlag 
ernst erich 
language specifying hyperdocuments 
software tools 
david stotts richard furuta ruiz 
hyperdocuments automata trace browsing property verification 
proceeding te acm conference hypertext pages 
pankaj garg 
abstraction mechanisms hypertext 
communications acm 
gilles richard antoine 
quelques id ees pour une mod des syst emes 
technique science 
richard furuta david stotts 
functional meta structure hypertext models systems 
electronic publishing 
van dyke parunak 
hypermedia topologies user navigation 
proceedings hypertext pages 
computer journal vol 
expressiveness links hypertext systems helen 
relations modelling sets hypermedia links navigation 
submitted computer journal 
michael bieber tomas 
text editing study logic modeling 
decision support systems 
mendes wendy hall 
shape hypermedia authoring education 
proceedings ed media ed telecom pages calgary canada 
computer journal vol 

