src technical note december tla leslie lamport systems research center lytton avenue palo alto california www research digital com src copyright equipment 
rights reserved simple example specifying system starts equal keeps incrementing forever 
conventional programming language written initially loop forever loop tla specification formula pi defined follows meaning conjunct indicated comments 
pi delta initially equals 
value state equals value current state plus 
ignore subscript 
wf ignore 
specifications get complicated need better methods writing formulas 
lists formulas denote conjunctions disjunctions indentation eliminate parentheses 
definition pi written pi delta wf formula means tla formula true false behavior sequence states state assignment values variables 
formula pi true behavior th state assigns value gamma systems real behaviors mathematical objects 
decide system satisfies formula pi way representing execution behavior sequence states 
representation say system satisfies formula pi implements specification pi iff pi true behavior corresponding possible execution example specify system starts equal repeatedly increments 
step increments 
variables incremented arbitrary order incremented infinitely 
system represented conventional programming language initially cobegin loop forever loop loop forever loop coend tla specification formula phi defined follows 
convenience define formulas define phi terms delta step increments leaves unchanged 
delta step increments leaves unchanged 
phi delta initially equal 
hx yi step step step 
wf hx yi wf hx yi explained asserts infinitely steps occur 
formulas called actions 
action true false step pair states old state described unprimed variables new state described primed variables 
implementation stuttering say specification tla formula implements specification iff system satisfies satisfies true behavior satisfies satisfies means behaviors satisfy formula formula said valid iff satisfied behaviors 
behaviors means sequences states just ones represent execution particular system 
implements formula valid 
implementation implication 
system repeatedly increments repeatedly increments specification phi implement specification pi 
means behavior satisfying phi satisfy pi 
behaviors satisfy phi allow steps increment leave unchanged 
pi allow steps leave unchanged 
subscript comes 
action boolean formula containing constants variables primed variables state function expression containing constants unprimed variables define delta expression obtained priming variables step satisfies iff satisfies leaves unchanged 
formula asserts step step satisfies leaves unchanged 
conjunct pi allow steps leave unchanged 
steps called stuttering steps 
mathematics formula assertion universe just containing assertion universe containing possible variables including formula simply doesn say similarly formula pi assertion sequences states state assignment values variables just formula pi specifies system execution described changes behavior represents history entire universe containing system 
sensible specification pi allow stuttering steps parts universe change remains unchanged 
similarly phi allows steps leave pair hx yi unchanged leave unchanged 
just observing way tell step occurred 
stuttering steps unnecessary consider finite behaviors 
execution system halts represented infinite behavior variables describing system changing finite number steps 
system halts doesn mean entire universe comes 
behavior mean infinite sequence states 
fairness formula allows arbitrarily steps leave unchanged 
fact satisfied behavior changes 
want require incremented infinitely times specification rule behaviors incremented finite number times 
accomplished wf formula explain 
action said enabled state iff exists state pair states hold state new state ti satisfies formula wf asserts behavior action enabled remains enabled forever infinitely steps occur 
words possible remains forever possible execute step changes infinitely steps occur 
integer incremented produce different integer 
action enabled state integer 
formula asserts initially step incremented left unchanged implies integer 
formula implies enabled 
conjunct wf pi asserts infinitely steps occur 
pi asserts incremented infinitely desired 
similarly hx yi implies integer hx yi hx yi enabled 
phi implies incremented infinitely 
behavior satisfying phi satisfy pi phi pi valid 
wf stands weak fairness 
tla specifications strong fairness formulas form sf state function action 
formula asserts enabled infinitely infinitely states behavior infinitely steps occur 
action enabled forever enabled infinitely 
sf implies wf strong fairness implies weak fairness 
subscripts wf sf formulas formula syntactically impossible write formula distinguish stuttering steps occurred 
practice write formula form wf sf action imply step changes hiding formula phi satisfied behavior iff sequence values assigned produce behavior satisfying phi 
definition approximately correct see precise definition 
temporal existential quantifier formal expression means hide variable specification 
hide specification asserting repeatedly incremented get specification asserting repeatedly incremented 
specification obtained hiding phi equivalent pi 
formula phi equivalent pi 
words formula phi pi valid 
composition actions defined pi delta wf hx yi pi delta wf hx yi simple calculation shows integers equivalent hx yi follows laws temporal logic pi pi equivalent phi 
interpret pi pi specifications processes repeatedly incrementing repeatedly incrementing program variables composing processes yields program variables repeatedly increments program specified phi 
general specification system describes behaviors representing histories universe operates correctly 
specification system describes behaviors universe operates correctly 
composing means ensuring operate correctly universe 
behaviors universe systems operate correctly described formula composition conjunction 
assumption guarantee specifications assumption guarantee specification asserts system operates correctly environment 
formula asserting sys tem want formula asserting environment supposed 
expect assumption guarantee specification formula asserting satisfied system behaved desired satisfied environment behave correctly 
write stronger specification gamma 
asserts implies step false false 
precise meaning formula gamma 

tla tla built logic actions language writing predicates state functions actions logic reasoning 
predicate boolean expression containing constants variables state function expression containing constants variables action boolean expression containing constants variables primed variables 
complete specification language tla described includes language 
syntactically tla formula forms wf sf gamma 
predicate state function action variable tla formulas 
row formulas expressed terms course boolean operators defined 
boolean operators usual meanings meanings operators described 
satisfied behavior iff true values assigned variables initial state 
satisfied behavior iff step satisfies leaves unchanged 
true 
satisfied behavior iff true suffixes behavior 
satisfied behavior iff values assigned produce behavior satisfying 
see precise definition 
wf weak fairness satisfied behavior iff infinitely enabled infinitely steps occur 
sf strong fairness satisfied behavior iff finitely enabled infinitely steps occur 
gamma 
true behavior iff true long 
see precise definition 
eventually true defined true eventually true defined 
mart abadi leslie lamport 
conjoining specifications 
acm transactions programming languages systems may 
leslie lamport 
temporal logic actions 
acm transactions programming languages systems may 

