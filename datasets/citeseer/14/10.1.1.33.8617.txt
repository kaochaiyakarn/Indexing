cordic parallel pipelined architecture hough transform lang zapata dept de university malaga plaza el 

spain dept 
facultad de univ santiago de santiago de 
spain dept elect compt 
eng 
university california irvine ca 
mailing address zapata dept de university plaza el spain supported education science cicyt spain tic 
cordic parallel pipelined architecture hough transform design parallel architectures computation hough transform application specific cordic processors 
design circular cordic rotation mode simplified priori knowledge angles participating transform high throughput obtained pipelined design combined redundant arithmetic carry save adders 
saving area essential design pipelined cordic achieved reduction number microrotations size coefficient rom 
reduce number microrotations incorporate radix possible mixed radix radix radix design processor achieving reduction half microrotations respectively respect totally radix implementation 
furthermore allocate circular cordic processors size shared coefficient rom rom design separated 
incorporated additional microrotations order reduce scale factor 
result pipelined architecture easily integrated vlsi technology due regularity modularity 
hough transform powerful technique detection patterns images 
hough transform image space mapped parameter space detection specific pattern image space detection peaks parameter space 
transform different variants wide scope applications straight line recognition extraction straight line segments object recognition extraction planar figures vectorization aerial photographs high computational cost hough transform induced considerable research effort order reduce calculation time 
identify directions acceleration execution hough transform design fast hough transform algorithms parallel architectures design specific architectures hough transform 
object fast hough transform algorithms reduce calculation time memory requirements 
examples approach piecewise linear combinatorial cht binary bht randomized fast fht hough transforms 
important problem fast algorithms low regularity parallelism traditional algorithm strong implicit parallelism conveniently shared memory distributed memory multiprocessors linear array mesh hypercube binary tree 
algorithm associated hough transform presents high level regularity locality 
properties appropriate vlsi design specific purpose architecture permits high speed computation 
systolic solutions line designs chuang li li sandler 
main problems hough transform evaluation implicit trigonometric functions algorithm sines cosines difficult implement conventional arithmetic units 
authors proposed tables formulation addition shift operations loss precision results 
proposed architecture general cordic processors 
alternative propose consists formulation hough transform terms rotations permits design specific purpose cordic coordinate rotation digital computer processor 
cordic algorithm developed calculation rotations conversion rectangular polar coordinates 
operations necessary implementation algorithm additions subtractions shifts 
walther generalized algorithm operation coordinate systems linear circular hyperbolic making applications extend solution problems trigonometric hyperbolic arithmetic functions 
vlsi designs cordic algorithm developed applications linear algebra matrix algebra digital signal processing image processing 
application requires high computation speeds necessary incorporate pipelining redundant arithmetic design 
article design specific purpose processor cordic algorithm calculation hough transform 
cordic processor includes features pipelined design redundant arithmetic increase speed mixed radix reduce number microrotations additional reduce scale factor 
way output cordic give directly memory address vote angle analyzed located 
structured follows 
section formulate hough transform means cordic rotations 
design application specific processor computation transform section 
analyze implementation radix radix microrotations cordic algorithm determine size rom memory coefficients generalize design arbitrarily sized images 
section parallel implementation hough transform starting partition angle space subspaces simultaneously processed 
section summarize main features processor compare designs cordic algorithm literature 
hough transform processor differentiate stages process detecting lines means hough transform creation contour image border detector sobel operator instance application hough transform point image voting parameter space order extract lines 
additionally include fourth stage edge linking 
concentrate second phase highest algorithmic complexity 
losing generality consider image space dimension nxn 
normal equation line crosses point perpendicular distance form line coordinate origin angle defined abscissa axis normal line 
hough transform line produces set lines parameter space cross point coordinates 
equation represents set values possible straight lines crossing point space 
digital image processing discretized image space image array parameter space hough array 
illuminated point image space votes set points parameter space collinear points vote common point parameter space 
detection crossing point curves produced point straight line translates finding peaks parameter space hough space 
hough transform algorithm 
initialize hough array zero 
pixel gray level equal compute pj 
increment hough array denotes nearest integer value argument 

look peaks hough array number angles hough space divided depends desired precision slope straight lines image space 
dimension image space usually taken number angles parameter space 
shows image space hough transformed space 
cordic hough transform order obtain cordic formulation hough transform algorithm rewrite equation follows applied symmetry properties angles differ 
represents set values angles represents set values angles differ respect previous ones 
gives rise division hough space independent subspaces 
expression directly implemented circular cordic module rotation mode 
module performs iterations form tg tg 
know angles advance initial conditions values chosen equation eliminated 
cosq cosq 
convergence precision cordic algorithm widely verified literature 
compare equations cordic equations see difference scale factor consequently scan angle cordic algorithm corresponds scan hough transform 
cordic processor performs scan equation scan equation transform parallel 
consequently hough transform processor cordic corrected scaling factor equal 
alternative cordic formulation proposed see section 
implementation cordic operation done sequential manner iterations share adders unfolded manner adders replicated 
second form possible pipeline implementation high throughput 
variable reduced hardwired connections 
pipelined implementations reported 
pipelined approach 
techniques perform correction scale factor purpose incorporate additional iterations repetition cordic iterations scaling iterations 
cordic scheme described uses standard cordic module circular mode 
particular application consider simplifications introduced rotation angles jp know priori possible precompute terms store rom 
recurrence required 
sign detection needed force possible redundant adders simple manner 
utilization adders reduces significantly stage delay 
adders cordic modules proposed significant complications exist sign detection required 
lack sign detection simple radix stages reduce total number stage 
radix stages presents important drawback respect radix radix scaling factor constant angles facilitating correction radix scaling factor varies 
maintain constant scaling factor approach possible radix stages restricted second half iterations coefficients affect scale factor see equation 
approach svd hartley transforms 
approach hough transform section 
ii classify set angles groups scale factor design specific radix cordic processor group see section 
mixed radix cordic processor hough transform describe pipelined mixed radix cordic processor hough transform 
represent general structure radix radix carry save adders 
radix microrotations coefficients take values coded bits 
bit acts sign bit controlling addition subtraction operations 
carry save representation coordinate represented words sum word carry word 
block carry wired shift operands blocks perform shift left carry words inherent addition 
blocks bit input lsb 
radix coefficients coded bit selects inputs 
bits constants eliminate multiplexors control bits signals radix microrotations 
scaling microrotations required correction scale factor structure radix 
image dimensions nxn range values pixel units take log need bits coding different values hough subspaces 
design cordic processor bit precision generating parallel 
pure radix cordic processor need microrotations 
mixed radix cordic processor total microrotations microrotations radix radix 
global diagram unit calculation transformation pixel coordinates 
cordic processor generates values values corresponding independent subspaces hough space 
coefficients decomposition angle extracted coefficient rom 
address generation module calculates absolute address subspace performed see equation 
number rotation angles depends size image 
nxn images angles qp necessary store rom memory decomposition angles qp see equation 
principle need bits encode angles bit radix coefficients bits radix coefficients 
making suitable selection decomposition angles transform restrict values radix coefficients components 
way need bits coding chosen case microrotations cordic algorithm necessary introduce additional microrotations scaling positive negative repetitions reduction scale factor cordic algorithm 
table show additional microrotations images bit precision 
table show possibilities specify final scale factor value maximum angle possible 
case maximum error respectively 
hand introducing repetition possible eliminate affecting precision convergence cordic algorithm 
number radix microrotations reduced shifts observe cases options table range angles interest cordic formulation hough transform covered 
option table requires fewer additional microrotations compensation scale factor impossible reach angles required 
summarizing structure cordic processor images size nxn consists thirteen microrotations radix microrotations radix microrotations incorporated additional microrotations specified row table repetitions microrotations negative scaling 
shift associated th radix radix 
associated different stage pipeline fixed shift assigned constant wired eliminating way main difficulties non pipelined cordic implementations 
coefficients angles decomposed hough space stored rom memory 
memory word contains coefficients microrotations radix radix additional applied input pixel 
coefficient act appropriate cycle memory word propagate pipeline accompanying pixel 
necessary add hardware dedicated propagation decomposition angle pipeline 
hardware set latches number decreases pipeline illustrated 
example table ii show decomposition rotation angles hough space angles bit precision 
considerations account rest design conditions elimination zero selection radix coefficients image necessary word coefficient rom memory word width bits bits necessary coding microrotations radix included repetition stages bits needed coding radix microrotations 
necessary introduce stage conversion redundant representation conventional representation order obtain values output cordic see 
stage consists adder carry propagation performs addition sum carry cx cy order obtain non redundant representation 
adder pipelined affect global performance processor 
architecture developed processing nxn images applicable images smaller sizes mxm due fact angles process mxm image subset angles necessary nxn image precision required parameter lower 
consequently necessary include stepwise addressing mechanism rom memory 
parallel hough transform computation hough transform nxn image single cordic processor requires cycles pixels image necessary implement equations sequentially angles 
evaluation equations values parameter obtained produce hough space divided subspaces 
take place independent spaces 
votes hough subspace subspace conflict exist 
computation time transform reduced means parallelism 
possible approaches obtain parallelism exist parallelize pixels image angle pixels angle simultaneously 
requires cordic processors processor pixel angle 
evaluation transform takes time cordic operation cycles radix cycles mixed radix radix necessary hardware considerably increased 
conflicts occur process results obtained processors angle vote element hough space common hough space 
parallelism pixels requires processors pixel 
number cordic operations latency latency depending radix see previous paragraph 
case conflicts processors share common hough space 
cases pixels image pixels gray level equal processed unbalanced workload processors may occur 
solution produce voting conflicts parallelization angles 
case need cordic processor angle pixels image processed sequentially 
total number processors number cycles evaluation transform latency pixel processed cycle 
implementation processor simplified factors cordic processor compensate scale factor implement full radix cordic reduces required number microrotations 
ii angle processed processor decomposition wired eliminating need decomposition table multiplexers 
order reduce number processors required solution possible group angles manner angles producing scale factor assigned processor 
way processors implemented fully radix small rom memory needed store decomposition assigned angles 
number processors number different scale factors 
develop scheme 
complement design double cordic processor values corresponding angles simultaneously evaluated 
consider set angles parameter space divided subsets apply equations obtain relations 
case represents set values taken angles values equations implemented means circular rotation mode 
furthermore implies reduction size rom half angles scanned go sets equations share rom 
angle parallelization radix cordic possibility design angle parallelization scheme radix processors processors scaling factors assign processor angles produce particular scale factor 
precision bits number scale factors large requires processors 
number scale factors number scaling stages needed compensation reduced combination approaches perform compensation individual stages scaling stage 
consists approximating contribution scale factor linear function compensate single scaling 
contribution scaling factor linear function 
worst case obtained example precision bits compensation individual stages scaling log may introduced microrotations 
remaining compensation determined number scale factors reduced 
scheme divides space subspaces described expression 
corresponding iterations division space angles subspaces eqs 
limits range angles subset 
seen facilitates selection reduced number scale factors 
division space subspaces facilitates elementary angles tan tan 
advantageous modifies angles iteration produces better utilization range angles 
stage influence scaling factor need compensation 
approach possible angles transform range angles range range covered new elementary angles 
iterations elementary angles equation modified 
compensation individual stages may introduced angles possible decomposition choose decompositions minimize log number scale factors 
describe example approaches reduce number scale factors number scaling stages compensation 
precision bits initial number scale factors 
elementary angles tan compensation individual stages scaling may introduced see eq 

precision elementary angles stages influence scaling factor stage need compensated stage influence scaling factor due new elementary angles 
compensation stage performed remaining compensation corresponds scale factors 
table iii displays scaling stages necessary scaling factors 
specify values determine scale factor type scaling applied resulting scale factor 
included repetitions reduce resulting number stages 
hand order maintain full radix cordic design reduce number processors parallel implementation group angles subset decompositions producing scale factor 
way choose angle decompositions generate smaller number scale factors 
table iv displays angular coverings obtained scale factor 
analyzing table iv scaling factors table iii choose factors lead minimum number scaling stages factors characterized 
consequence possible select just scaling factors angles 
scale factors cover entire range angles 
observe reality factors different unity due fact unity 
implementation hough transform angle parallelization scheme needs cordic processors 
processor assigned angles producing scale factor 
full radix design number microrotations plus microrotations scaling stages needed compensate assigned scale factor 
kind solution presents problems 
parallel system processors different scale factors generates significant unbalanced workload processors processors assigned different number angles 
examining angular coverings scale factors table iv easy verify angle subsets associated scale factor 
hand total number stages standard radix microrotations scaling stages different processor 
processors number radix microrotations number scaling stages scale factor compensation different see table iii 
number scaling stages ranges 
way processor different operation time 
difficult synchronization processors 
solution flexible 
modification number processor direct 
order increase parallelism incorporating processors needed angles generating scale factor assigned processors 
way new processors scaling stages compensate determined scale factor 
implement hough transform processors requires processors perform compensation scale factors 
solution resulting parallel system non homogeneous processors having different latencies hardware structures flexible 
splitting angle space solution consider adequate consists equal radix cordic processors 
processors incorporate scaling stages necessary compensate different scale factors 
way parallel system processors set angles hough transform split disjoint subsets angles processor associated different subset 
case computation hough transform nxn image requires latency cycles pixel image equations implemented sequentially angles 
voting conflict exists processors assigned different angles voting performed different elements hough space 
increase parallelism system requires incorporate processors 
difference processors rom memory coefficients stored 
processors differences previous solution assign angles generating scale factor processor case processors number stages larger number stages processors previous solution 
hand problems unbalanced workload different operation times avoided 
flexibility high regularity solution easy vlsi implementation 
considering bit precision resulting radix cordic processor stages standard radix iteration stages compensation scaling factor stage performing scaling 
standard radix iteration stages follow equations needing bits order code implies bits rom angle 
compensation scale factor stage appearance scaling stage performing multiplication coordinate times see equation 
compensation add bits rom uses coefficient stage 
scaling needed order compensate scaling factors selected appear table iii 
scaling stages characterized just bits see right side table iii 
adds bits resulting total bits angle 
display general design radix stage scaling stage respectively 
specified control signals 
table establishes equivalence control signals coding coefficients carried stage 
shows shifts figures stages 
determines type operation addition subtraction 
select shift applied 
scaling negative stages identified table 
code fact setting subtraction operation 
scaling stage control signals value order obtain positive scaling 
right size table iii reflects possible coding coefficients ij 
possible save hardware multiplex inputs processor high level symmetry independence 
obviously number angles processed unit time halved 

comparison design parallel architectures computation hough transform application specific cordic processors 
transform significant natural parallelism parallel architectures maintain independent hough subspaces interest voting process free conflicts 
parallel architecture propose division hough space independent angles subspaces provided subspace assigned different processor 
way obtain parallel system conflicts voting process highly regular cordic maintaining duda hart parametrization equations 
regularity simplifies design facilitates vlsi integration 
application specific cordic processors characteristics pipelining redundant arithmetic compensation scale factor decomposition angles full radix mixed radix 
concentrate evaluation parallel system propose solutions appeared literature 
li systolic architecture processes row column pixels concurrently 
means reformulation equation parameter depends cosq 
table store cosine angles 
way value computed simple addition 
basic systolic architecture consists linear array compute cells obtained routing network linear array accumulator cells 
routing network composed nxn array routing cells sends pixels corresponding accumulator 
systolic array processor computes hough transform particular value hardware complexity systolic array processor grows linearly size image 
way large complexity systolic array high 
case necessary partition image blocks block processed different array 
computation hough transform systolic array requires processing pixels image solution proposed pixels gray level equal processed 
propose cordic processor design 
solution equation reformulated sin tan amplitude sinusoidal curves phase shifts tan define center coordinate system middle image space subdivide facilitating simultaneous evaluation points hough space pixel image space 
reformulation equation propose architecture general radix cordic processors 
computes tan computes equation 
significant features extra adders architecture evaluates simultaneously different angles pixel suitable line cordic implementation parallel system equation maintain independent hough subspaces 
full radix implementation design proposed angles interval number iterations 
mixed radix full radix reduces number iterations 
architecture proposed consider advantages design application specific pipelined cordic processors possible eliminate equation see equation angle decomposition known priori 
elimination equation combined radix mixed radix design reduces area significantly 
full radix mixed radix radix cordic permits reduction total hardware cost pipelined cordic processor means reduction total number microrotations 
amount reduction number stages mixed radix directly depends number precision bits required values table vi show reduction obtained design mixed radix cordic processor respect radix implementations image sizes nxn log 
order obtain constant scale factor necessary number radix stages greater equal half number precision bits way insure radix coefficients participate final value scale factor 
radix stage provides precision final result radix stage convenient implies lower hardware cost 
observed table images percentage reduction number stages larger number precision bits required multiple 
permits maximum radix stages 
priori knowledge angles going processed cordic mixed radix radix allows know decomposition terms elementary angles 
allows eliminate recurrence associated coordinate simplifies design control section processor 
section rom memory storing decomposition coefficients angles necessary hardware addressing memory 
hand facilitates incorporation redundant arithmetic csa signed digit microrotations necessary check sign operands order determine coefficients 
substitution ripple carry look ahead carry adders redundant adders csa accelerates operation stages pipeline 
parallel architecture full radix cordic processors 
radix cordic processor reduces half number microrotations radix cordic design 
order simplify compensation scale factor number radix scale factors reduced 
reduction obtained reducing range transform angles modifying elementary angles performing compensation individual microrotations selecting transform angle decompositions 
way processor compensate radix scale factors additional hardware 
additional reduction area parallelism obtained combine circular radix cordic processor see equation share rom 
size half rom single cordic processor 
ahmed 
efficient elementary function generation multipliers 
th ieee int symp 
computer arithmetic pp 

ahmed signal processing algorithms architectures 
ph 
dissertation dept electrical engineering stanford university stanford 

time complexity evaluation algorithms hough transform mesh connected computers 
ieee int conf 
pp 

lang zapata 
cordic application specific processor orthogonal transforms 
submitted ben sandler 
synchronous multiprocessor implementation hough transform 
computer vision graphics image processing vol 
pp 

ben sandler 
combinatorial hough transform 
pattern recognition letters vol 
pp 

bowyer 
computing hough transform mimd hypercube 
th scandinavian conf 
image analysis vol 
pp 

zapata 
design pipelined radix cordic processor 
parallel computing vol 
pp 

cao 
parallel implementation tuned generalized hough transform transputer networks 
application transputers ios press london pp 

luk cordic arithmetic svd processor 
parallel distributed computing vol 
pp 

choudhary 
implementation evaluation hough transform algorithms shared memory multiprocessor 
parallel distributed computing vol 
pp 

chuang li 
systolic processor straight line detection modified hough transform 
ieee conf 
computer architecture pattern analysis image database management pp 

cypher sanz snyder 
hough transform complexity nxn mesh connected computers 
siam journal computing vol 
pp 

vlsi implementation rotations pseudo euclidean spaces 
ieee int conf 
acoustics speech signal processing pp 

despain 
fourier transform computers cordic iterations 
ieee trans 
computers vol 
pp 

duda hart 
hough transform detect lines curves pictures 
communications acm vol 
pp 

muller 
cordic algorithm new results fast vlsi implementation 
report ecole normale superieure de lyon france 
lang 
redundant line cordic application matrix svd 
ieee trans 
computers vol 
pp 


mapping generalized hough transform mesh connected computer 
ieee int conf 
pp 

fisher 
computing hough transform scan line array processor 
ieee workshop computer architecture pattern analysis machine intelligence pp 

da sandler 
binary hough transform efficient implementation systolic array architecture 
pattern recognition letters vol 
pp 

zapata 
fast hough transform segment detection 
submitted 
harding lang lee 
redundant cordic engines 
ieee int conf 
computer design pp 

maruyama 
real time processor hough transform 
ieee trans 
pattern analysis machine intelligence vol 
pp 


object recognition fast adaptative hough transform 
ieee computer pacific conf 
communication computer signal pp 


cordic arithmetic processor chip 
ieee trans 
computers vol 
pp 

hough 
method means recognizing complex patterns 
patent 
hu bass 
expanding range convergence cordic algorithm 
ieee trans 
computers vol 
pp 

hu 
quantization effects cordic algorithm 
ieee trans 
signal processing vol 
pp 

hu 
cordic vlsi architectures digital signal processing 
ieee signal processing magazine vol 
pp 

kang park lee 
extraction straight line segments rotation transformation generalized hough transformation 
pattern recognition vol 
pp 


optimizing cordic algorithm processors pipeline architecture 
signal processing theories applications elsevier science publishers pp 


fast hough transform method hough function 
system computer japan vol 
pp 

noll 
cordic processor carry save architecture 
th european solid state conference pp 

de lange 
design implementation floating point general purpose cordic high rate parallel data signal processing 
ieee th int symp 
computer arithmetic pp 

lee lang 
svd constant factor redundant cordic 
ieee th int symp 
computer arithmetic pp 

lee lang 
constant factor redundant cordic angle calculation rotation 
ieee trans 
computers vol 
pp 

li le master 
fast hough transform hierachical approach 
computer vision graphics processing vol 
pp 


li pao 
improvements systolic implementation hough transformation straight line detection 
pattern recognition vol 
pp 

histogram hough transform processor hhp 
lsi logic 

dsp processor set elementary arithmetic operations cordic ccm algorithms 
microprogramming vol 
pp 

nixon 
hough transform multiple ellipse extraction 
iee proc 
part computer digital techniques vol 

kobayashi 
extraction planar surfaces set line segments dimensional hough transform 
system computer japan vol 
pp 

rosenfeld hung 
hough transform algorithms mesh connected simd parallel processor 
computer vision graphics processing vol 
pp 

shankar asokan 
parallel implementation hough transform method detect lines curves pictures 
ieee th midwest symp 
circuits systems pp 

da silva 
vectorization aerial photographs applying hough transform method 
proc 
spie vol 
pt pp 

takagi asada 
redundant cordic methods constant scale factor sine cosine computation 
ieee trans 
computers vol 
pp 

hahn 
hough transform cordic method 
electronics letters vol 
pp 

hahn schmidt 
programmable cordic chip digital signal processing applications 
ieee journal solid state circuits col pp 

hahn 
low latency time cordic algorithms 
ieee trans 
computers vol 
pp 


cordic trigonometric computing technique 
ire transactions electronic computers vol 
ec pp 

walther 
unified algorithm elementary 
proc 
spring joint computers conference pp 

xu oja 
new curve detection method randomized hough transform 
pattern recognition letters vol 
pp 

captions tables figures table scale factor correction stages final scale factor maximum angle achieved 
table ii mixed radix decomposition angles 
table iii coefficients scaling stages associated 
table iv angular covering scale factor 
table equivalence control signals coding coefficients 
table vi number stages radix mixed radix cordic processors different sizes image space 
column represents reduction factor achieved mixed radix design 
image space hough space 
radix 
cordic hough transform processor nxn images 
standard radix scaling 
