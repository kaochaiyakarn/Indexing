copyright ieee 
published international workshop program comprehension iwpc may pittsburgh pa usa 
personal material permitted 
permission reprint republish material advertising promotional creating new collective works resale redistribution servers lists reuse copyrighted component works obtained ieee 
contact manager copyrights permissions ieee service center lane po box piscataway nj usa 
telephone intl 

comprehension virtual environment visualisations claire knight malcolm munro visualisation research group centre software maintenance 
department computer science university durham durham dh le uk 
knight malcolm munro durham ac uk years basic visualisation simple boxes lines done attempt able ease cognitive overload caused program comprehension 
problems visualisations easily incomprehensible trying force large amounts information small space relying solely dimensions representations 
dimensional visualisations approach considered combat problems different issues considered sorts visualisations 
especially visualisations intangible software systems 
solution virtual environments base threedimensional visualisations allows sense context maintained promotes collaboration people trying comprehend code 

software visualisation important weapon program comprehension 
technique designed effectively aid understanding existing program code 
achieve displaying information new different forms may obvious missed reading code 
aspects data 
effort spent visualising programs dimensions graph structures prominent 
acknowledged forms visualisation suffer number relationships information complex 
representations complicated code 
move away structures attempt solve inherent layout problems remains done area alternatives problems 
dimensions visualise programs years attracted attention promising results published example young 
different ideas strategies programmers comprehending code 
overview difference strategies interrelationships storey 
useful distinction authors mental model representation programmer mind cognitive model processes structures help programmer form mental model 
presents software visualisation virtual environments metaphors visualisation developed attempt visualise useful way complex rapidly changing code 

software visualisation 
simple answer question 
ways defining software visualisation tailored type visualisation intended support 
range visualisations covered definitions large 
important visualisations tool kept mind 
write new discipline visualization realize full potential borrow areas traditionally concerned imagery art history perceptual cognitive psychology 
field visualization absorbed technical basis ignores larger interest way images enhance power thinking 
intelligence amplification importance software visualisation form visualisation representing large complex data sets graphically aim help user get better understanding content data sets 
aiding user way visualisation tools acting intelligence amplification tools frederick brooks believes documented rheingold powerful computers artificial intelligence techniques 
reading thousands pieces information summarising finite graphical space immense complex possibly tedious task 
computer right instructions simple data processing exercise 
connection field virtual reality vr visualisations virtual reality enabling technology 
identify pattern recognition contextual abilities humans 
everyday existence cope filter tremendous amounts information effortlessly little conscious thought 
information detail form think consciously overwhelmed quite easily 
spatial awareness pattern recognition information filtering coordination multiple information streams things take granted 
look solution ai part vr thesis information suitable way processed far effectively directly people 
important considering dimensional visualisations generally form vr technology 
general software visualisation definition encompasses ideas traced fully written software visualisation discipline various forms imagery provide insight understanding reduce complexity existing software system consideration 
existing forms visualisation call graph shown adhere facets definition imagery provide insights reduce perceived complexity software consideration 
research tried move traditional dimensional representations dimensions generally success representations transfer 
visualisation done date programs nature geometrical shapes possibly differing colours represent elements program code 
real world visualisations tend visualise data elements everyday human world 
whilst approaches differ representations complimentary final solutions visualisation encompass elements 
important consider force data exerts visualisation style 
program code style acceptable software intangible data sets data may drive style 
goal software visualisation included definition 
create visualisation real purpose pointless exercise 
long known understanding software complex hard task complexity software 
techniques aid programmer traditional call graph comprehension existing software system deserve research focus 
software visualisation aims aid programmer providing insight understanding graphical displays views reduce perceived complexity suitable abstractions metaphors 

virtual environments collaborative virtual environments research area primarily concerned construction multi user virtual worlds processes interaction takes place worlds 
research covers facets virtual world creation underlying graphics engines varying algorithms creating best perceptual experience worlds 
churchill provide description virtual environments cves provide potentially infinite graphically realised digital landscape multiple users interact simple complex data representations 
virtual environments science fiction fantasy literature general line worlds described purpose case current virtual environment systems 
examples worlds neal stephenson william gibson cyberspace matrix 
virtual environments provide basis threedimensional visualisations enable aspects definition software visualisation previous section exploited 
require visualisation designed virtual environment mind appropriate metaphors thought 
virtual environment necessarily recipe usable useful visualisation 
metaphors metaphor word phrase terms visualisation graphical representation word phrase place 
tends suggest form analogy concepts may higher level abstraction individual words phrases 
visualisation perspective metaphors act mapping concepts required virtual world graphical representation 
need identified levialdi construction database visualisation system 
vr visualization techniques represent results queries implies definition mapping metaphor objects database objects virtual world 
important note virtual environments implemented form virtual reality system 
means discussions benefits virtual reality applicable considering virtual environments 
benford natural metaphors aid usability virtual environments 
attempt exploit people natural understanding physical world including spatial factors perception navigation general familiarity common spatial environments 
west suggest potential power virtual reality comes strength metaphor fact closer natural interaction forms computer system 
identify benefits natural metaphors making perceptual spatial skills learnt real world virtual environment 
dimensional world metaphor scope direct human computer interaction dimensional desktop engages perceptual spatial faculties allow comprehend surroundings process effortlessly vast amounts information senses second second 
potential directly engage faculties defining characteristic virtual reality 
immersive environment far richer desktop metaphors interaction assume far greater significance 
role management metaphors virtual environment assumes key significance 
obvious design metaphor virtual environment play large part usability system terms human computer interaction terms enabling user carry required tasks 
benefit dimensional environments cognitive processing needed navigation visual interpretation shifted subconscious activities carried daily real thought 
metaphors provide basis environment mapping data visualisation 
similar principles apply visualising metaphors consistency interaction usability 
reasons virtual environments dimensions visualisation adds element familiarity realism systems 
world dimensional experience making visualisation world means cognitive strain user 
turn system easier comfortable experience knowledge user built 
dimensions depth cues world visualisation appear part visualisation 
means aim visualisation aid comprehension complex phenomena achieved adding unnecessary complications visualisation 
stasko writing information visualizer system xerox parc writes designers noted dimensional displays help shift viewing process cognitive task perception task 
transfer helps enable humans pattern matching skills 
true designed displays supports views images known user aid understanding images 
chalmers writes designing information display support movement exploration space people build models information 
moving searching complex environment looking detail parts overview sense decisions 
note information space people move 
give thought people see different positions angles 
whilst containing basic information ignored implemented properly 
forces user patterns working familiar decrease effectiveness 
chalmers written uses information space naturalistic view powerful familiar way controlling information detail 
perspective lets gain overview distant regions detail close 
simple scale information provided chalmers appropriate choose interactive virtual environments way visualising software programs 

software world hardest problem visualising theoretically visualisation able deal range items infinity 
massive range means automation layout algorithms dimensional visualisations hard problems 
means visualisations need defined mind provide way dealing large numbers indicating fact user 
benefit virtual environments possible cause generation new environment accessed user demand number data items exceeds certain threshold 
disadvantage decisions divisions environments visualisation able cope example evolution way user understand 
program code software systems evolution visualisations important system faces maintenance change description life 
important consider size data sets visualised level design visualisations accordingly try display items expected inner realistic number range 
solution problem visualising program code dimensions virtual environments software world 
visualisation developed try achieve aims software visualisation identified definition section 
software world real world metaphors example cities 
user populated virtual environments driving force choice real world metaphor basis visualisation 
creating virtual environment widely differ world experienced daily basis perceptual abilities users freed concentrate data investigation 
code visualisation mapping software world visualisation encompasses real world items city urban developments cartography attempt deal visualising software systems differing sizes coherent manner 
detailed levels code shown buildings districts city environment whilst higher level detail shown map style overview amalgamation techniques fit possibly large amount information finite space 
nesting graphical objects user distant way deal large varying amounts information 
urban environment allows natural perception users harnessed 
world different levels briefly described world flattened overview picture atlas style necessarily countries known standard geography shows different elements visualisation high level relationships elements 
country element shown world view country 
provides way splitting items world level detail provided level 
city shown countries level granularity 
cities composed sub areas try ease navigation burden standard urban navigational aids 
districts city number depending information represented visualisation 
group related aspects software provide groupings moving higher level abstraction detailed level 
streets buildings gardens monuments show detail visualisation provide level abstraction districts 
act legibility features landmarks city 
inside buildings gardens finest level detail detailed direct mappings code visualisation 
walls example provides way displaying extra information user text 
text needs sort context dimensional space understandable visible directions 
software world targeted visualisation java code 
items visualised files packages classes methods variables various attributes elements constitute full code 
information essentially cross database elements provide easier navigation information retrieval ultimately understanding relations may shown visualisation form hypertext style link 
java language elements mapped different visualisation levels shown table 
java file object class district object 
objects containing objects files containing objects district sub districts object 
language definition java allows certain assumptions auxiliary classes file public code main class 
allowing classes scope level sub districts reasonable mapping decision 
level attributes class district urban items gardens parks monuments represent file class attributes methods 
items serve navigational aids urban planning documented lynch 
table actual mappings java code graphics visualisation level code element world software system 
country directory structure maps packages java 
city file software system 
district class contained specific file city visualisation 
building methods 
districts methods buildings laid block grid 
reason means assumptions relationships methods 
allows easier sensible evolution visualisations easily shown user changes occurred underlying code 
district city districts gets dense visualisation represent 
visual indication restructuring code beneficial 
user visualisation crowded areas 
example street scene represents part district string shows buildings substring 
size buildings represent number lines code normalised number doors represents number parameters number windows shows number variables declared method 
colour building shows method private public 
name method door buildings doors parameters placed building information 
code visualisation distribution java programming language sun taken string class 
method signatures illustrated methods seen code snippet public int string 
public char 
public string substring int int 
exploration query main general activities involved program comprehension 
overview browsing exploration code scanned items may interest 
second directed form exploration start point item interest known moving point code detailed browsing exploration take place 
summary activities known exploration query respectively 
map top bottom strategies program comprehension 
software world visualisation able support forms user enquiry program code 
exploration level done visualisation metaphor example street software world locating place overview map travelling place exploring foot buildings environment represents program code point 
example exploration led street part district string shows buildings methods part district class 
queries supported query system providing leap visualisation system bookmarking facilities user visualisation 
enable user jump visualisation point having explore higher levels 
example query methods class string generate visualisation shown 
results directions shown possible move away dimensional visualisations 
way forward dimensional real world metaphor 
real world metaphor supports natural perceptive abilities programmers maintainers 
problems defining real world metaphors java programming language 
metaphor decided problem mapping language element metaphor 
table showed simple mappings whilst detailed mappings seen illustrated 
detailed mappings software world visualisation consider attributes simply mapped elements 
methods string class shown buildings show simple mapping 
height building number doors windows provide detail lines code method number parameters number local variables name method 
visualisation shown facilitate exploration query 
supporting activities software world visualisation able sustain top bottom comprehension strategies 
comprehension chan munro shows benefit supporting comprehension strategy 
aim develop visualisation support user communication collaboration 
intended development notice boards buildings methods terms java functionality programmer understanding notes attached users read 
electronic sticky notes update improve knowledge method displays eventual conversion sheets notice board permanent form documentation information value 
workspaces users visualisation planned 
workspace software world intended office visualisation system allows users define hyperlinks bookmarks keep notes 
features identified facets program comprehension systems 
aim develop analysis mappings deal evolution underlying code 
evolution considered date insertion deletion classes methods currently low level changes code 
software world insertion shown scaffolding new buildings districts signs fences deleted buildings districts 
prototype tools developed implement ideas software world 
parser java constructed provide information set mapping tools generate input virtual reality software 
virtual worlds created manually automation process progress 
visualisation software world shown way dimensions virtual environments trying create program comprehension support techniques overcome limitations traditional techniques 
background information examples intended directions 
important research effort directed new useful visualisations support mechanisms program comprehension improved refined especially complexity change program code subjected 
partly financed epsrc studentship 
benford brown reynard 
shared spaces transportation 
proceedings acm conference cscw boston usa november 
isbn 
pp 
chalmers 
design perspectives visualising complex information 
proceedings ifip rd visual databases conference lausanne march 
www ubs com info print versions ps cha ps gz 
chan munro 
pui tool support program understanding proceedings ieee th international workshop program comprehension michigan may pp 
churchill 
collaborative virtual environments introductory review issues systems 
virtual reality vol 
pp 

visualization second computer revolution 
freeman 
isbn 
published gibson 
paperback edition voyager imprint harpercollins publishers 
isbn west howard 
design issues virtual reality systems 
eurographics workshop virtual environments barcelona th september 
knight 
visualisation program comprehension information issues 
university durham computer science technical report 
www dur ac uk dcs documents survey tech reports tech report ps gz levialdi 
visual metaphors database exploration 
position relating system available line www darmstadt gmd de activities vir publications ps 
lynch 
image city 
press harvard university press cambridge massachusetts 
west 
coherent operating environment large scale vr applications 
virtual reality universe conference santa clara california april 
stasko 
dimensional computation visualization 
georgia institute technology technical report git gvu 
stephenson 
snow crash paperback edition published roc penguin group 
isbn 

storey fracchia mller 
cognitive design elements support construction mental model software visualization 
proceedings ieee th international workshop program comprehension michigan may pp 
young munro 
visualising software virtual reality 
proceedings ieee th international workshop program comprehension italy june pp 
rheingold 
virtual reality mandarin science isbn 
