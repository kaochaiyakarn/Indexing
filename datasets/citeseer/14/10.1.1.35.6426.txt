automatic mesh generation objects ferdinand institut fur mathematik johannes kepler universitat linz automatic mesh generator dimensional objects 
mesh generator produces uniform meshes locally fitted interfaces 
meshes called locally irregular 
computational complexity mesh generator order denotes number mesh points 
algorithm suited generating fine grids quite efficiently 
aspects priori posteriori mesh refinements discussed 
keywords automatic mesh generator locally irregular meshes priori aposteriori adaptive mesh refinement 
ams mos subject classification 
devoted description automatic mesh generator 
look mesh generators find lot dimensions running 
algorithms parallel generations meshes produce graded grids 
dimensions situation different 
hardware development dimensional mesh generators started years 
dimensions subdivide semi automatic mesh full automatic strategies 
semi automatic mesh generators typically require topological information geometry background produce mesh correctly 
transfinite mapping simple geometry known mesh origin geometry part part wanted mesh appears geometry 
disadvantage methods obviously lot making mappings putting parts 
full automatic situation 
put geometry different data models get quite mesh 
problem appearing point putting geometry mesh generator coupling cad cam systems need doing calculations complicated real world problems 
strategy doing mesh generation dimensions moving front technique 
start surface mesh boundary interfaces geometry 
cut layer layer tetrahedrons left geometry 
disadvantage algorithms search actual front front 
search front raises complexity theoretical complexity log denotes number 
result depends search algorithm 
practical problems get real complexity log real number shortly bigger see 
approach producing meshes locally fitted boundary 
allows optimal complexity algorithm 
part part build meshes objects complicated 
complicated context means boundary 
give algorithm creates meshes objects sufficient smooth boundary 
generalize algorithm acting called critical points 
points surface differentiable 
catch critical lines subsets boundary surface differentiable 
method useable objects coming real world problems 
start construction optimal mesh generator generation tetrahedron meshes dimensions 
special case obtain generator dimensions producing meshes triangles 
definitions preliminary results main idea constructing generator cutting tetrahedrons edge length results node structure written follows definition theta theta arbitary point corresponding point delta delta obvious vertices build tetrahedron structure 
definition points forming tetrahedron corresponding fulfil kq gamma points forming corresponding fulfil kq gamma delta points forming pyramid corresponding fulfil kq gamma delta elements tetrahedrons pyramids 
metric definition distance dd distance dd near gamma gamma gamma gamma gamma gamma distance dd far gamma gamma gamma gamma gamma gamma distance 
pic dat tetrahedron pyramid easy show metric 
definition theorem gives condition tetrahedron 
theorem points dd corresponding points distance points dd corresponding points distance points dd corresponding points distance points dd corresponding points distance points forming tetrahedron dd points forming dd points forming pyramid dd proof trivial 
able start generating surface meshes sufficient smooth surfaces 
surface mesh generation sufficiently smooth surfaces phi surface space explicit implicit representation 
care details just request smoothness projector puts point close phi phi point minimal distance phi 
define surface case elements 
aim find surface close phi 
similar tetrahedron define elements definition points forming triangle corresponding fulfil kq gamma definition points forming quadrilateral corresponding fulfil kq gamma corresponding point distance distance definition order point elements distance dd definition order point elements distance dd definition point closed points points definition list points called surface elements point closed 
theorem algorithm calculates surface closest phi definitions compute implement algorithm calculating surface meshes closed surfaces 
closest context means distance surfaces space phi second induced surface linear boundary triangles bilinear boundary quadrilaterals 
algorithm surface meshing 
start take arbitary point surface phi 
search point corresponding point closest 
search point closest phi 
take starting value part 

recursive part starting value call take corresponding project phi add new point 
closed ffl search point minimal distance phi elements build prior points 
ffl call recursive part starting value algorithm calculate example surface mesh sphere torus shown 
point problems meshed surface phi real world objects piecewise lines points called critical lines critical points 
surface meshes critical points typical problem case building surface mesh cone problems occurs peak 
give solution problems explain points mean 
definition points dd definition corresponding points means example point corresponding point get change structure 
picture shows happens case 
points changed 
new union modification definitions hold definition elements closed 
clear critical points algorithm critical point meshing ffl search point corresponding point closest ffl project point ffl collab points points mean need catch geometry 
able build mesh infinite cone shown 
pic dat points surface mesh critical line part generating mesh dimensional objects difficult 
principal approach similar critical points 
go critical line collab points near line groups 
critical line representation curve space oe 
algorithm explain roughly deal problem 
algorithm critical line meshing 
start ffl search point corresponding point closest oe 
ffl search point closest phi 
ffl take starting value part 

recursive part starting value call gamma oe delta param visited point ffl near group points collab ffl build new group ffl call recursive part starting value 
oe means projection oe param stands parameter depends angle ore surfaces critical line 
angel small parameter small angel big parameter big max 
combining algorithms generate surface meshes objects 
building mesh create surface mesh object consisting triangles quadrilaterals 
mesh border algorithm puts nodes mesh vertex list 
material apply algorithm material 
algorithm mesh 
start search point corresponding point material 

recursive part starting value call visited point surface mesh generation ffl call recursive part starting value 
computational time write steps generating mesh object 
ffl put critical points mesh ffl put critical lines mesh ffl generate surface mesh pieces ffl building elements ffl smoothing elements ffl building interior mesh ffl building elements ffl smoothing elements gives approximately complexity algorithm 
delta delta gamma delta delta gamma delta delta gamma constants bounded independent means length critical lines surface object volume object note take dimensional array integers 
array put visited number mesh point list 
results optimal complexity order 
need check surrounding moving front algorithms 
disadvantages produce fine grids areas need 
solution priori posteriori mesh adaption 
pic dat elements mesh adaption look elements refine 
suppose discrete function gives order refining order refining means discretisation parameter delta gamman 
quadrilaterals see 
case maximal refinement parameter shows different cases case 
concentrate rule edge refine ends refinement parameter go wrong dealing quadrilaterals note edge refined add centerpoint 
case similar see 
case maximal refinement parameter shows different cases dimensions 
rule holds 
dealing pyramids note edge refined add centerpoint 
case similar see 
call case edge halved total refinement 
able increase maximum discretisation parameter 
recursive cases rewrite form algorithm 
note case maximum discretisation parameter values surrounded value 
refinement function fulfil condition step smoothing replacing surrounding values 
algorithm refinement ffl parameters refinement parameter node ffl element refine ffl refinement information included cases apply case ffl total refinement element recursive call procedure new element resulting refining 
refinement parameter nodes take pic dat tetrahedrons refinement parameter node non refined element refinement parameters nodes non refined grid new node created refinement parameter 
different take minimum old parameters 
refining quadrilaterals pyramids center point gets refinement parameter minimum old parameters 
see examples refinements case 
able discuss posteriori refinement strategies mesh generator 
priori case add node dimensional array modelling refinement information 
means substitute array integers array arrays integers allocated 
means geometry object requires smaller discretisation parameter refine need 
note change algorithms 
definitions hold adapted mesh structure 
posteriori refining easier care get refining information 
guess knowledge go element list refine element element 
code fem numerical tests mesh generating algorithms described sections implemented 
developed finite element code algebraic multigrid solver see 
resulting code called fem standing finite element package symmetric problems standing numerical optimal meshing instrument 
package able generate meshes combination cones planes 
meshing build finite element equations tetrahedrons pyramids triangles quadrilaterals see 
algebraic multigrid solver package 
detailed description programs 
generate meshes different objects increasing complexity boundary structure 
meshes solve dirichlet problem poisson equation gamma omega gamma omega numerical experiments tested pentium mhz mbyte ram 
tables time values seconds 
example sphere test sphere radius 
objekt mesh 
sphere elements elements time mesh time matrix time solver example torus test example torus outer radius inner radius 
torus mesh 
torus elements elements time mesh time matrix time solver example cone third test example cone radius height 
cone mesh 
cone elements elements time mesh time matrix time solver example torus test example surface edges 
geometry mesh drawn 

elements elements time mesh time matrix time solver example torus test example consists cylinder intersected torus 
geometry mesh 

elements elements time mesh time matrix time solver applied mesh generator sophisticated object called motor block 
geometry mesh 
places mesh inconsistent see 
comes projecting tree nodes quadrilateral edge 
complexity estimate previous section mesh generator confirmed numerical results tables 
fine grids observe nh different mesh parameter true matrix generation algebraic multigrid solver 
components package show optimal behaviour respect cpu time practice 
goals automatic mesh generation usage splines geometrical modelling automatic mesh generator tree dimensions implemented program produces quite meshes 
restriction possible geometries sphere cone cylinder plane 
leads coupling cad cam systems 
see require projector puts point near surface curve surface curve 
splines geometrical modelling thing interest 
implementation priori posteriori mesh adaption want calculate electrical machines implement priori posteriori mesh adaption 
special case mesh generator dimensions appear 
case implemented strategies 
results see appendix 
parallelization mesh generator doing serious calculations dimensions think parallelization get satisfying results deal computer calculate complex dimensional geometry 

lions mathematical analysis numerical methods science technology vol 
springer verlag berlin 
girault 
finite element approximation navier stokes equations springer verlag berlin 
rossi domain 
university 
multigrid method incomplete gaussian elimination 
eindhoven university technology department mathematics computer science rana 
bramble xu parallel multilevel preconditioners 
mathematic computation 
mixed hybrid finite elements 
springer verlag 
algebraic multigrid amg 
multigrid methods st mc ed frontiers applied mathematics vol siam philadelphia 
de matrix dependent prolongations restrictions black box multigrid 
comp 
appl 
mathematics 
miranker acceleration aggregation successive approximation methods 

iterative loser teubner mathematik 
ch 

roos teubner mathematik 
optimal algebraic multilevel preconditioning local refinement line 
numerical linear algebra application 
parallel solvers linear nonlinear exterior magnetic field problems fe formulations 
nr 
universitat linz institut fur mathematik 
comparison parallel solvers nonlinear problems domain decomposition ideas 
nr 
universitat linz institut fur mathematik 
mixed variational formulation finite element discretisation 
report universitat linz institut fur mathematik numerische mathematik und optimierung 
xu auxiliary space method optimal multigrid preconditioning techniques unstructured grids 
computing appear 
level method unstructured meshes convergence rate independent coarse space size 
report university denver center computational mathematics 
mandel algebraic multigrid smoothed aggregation second fourth order elliptic problems computing 
algebraic multigrid unstructured meshes 
report university denver center computational mathematics 
schneider grid editing package 
report universitat bonn institut fur mathematik 
algebraic multigrid elliptic problems second order 
report universitat linz institut fur mathematik mathematik und optimierung 
jin tanner generation unstructured tetrahedral advancing front 
international journal numerical methods vol 
automatic dimensional finite element mesh generation modified ray casting 
international journal numerical methods vol 
jin tanner unstructured tetrahedral mesh generation threedimensional viscous flow 
international journal numerical methods vol 
sauter adaptive composite finite elements solution pdes containing non uniformly distributed micro scales 
bericht des mathematischen seminar kiel universitat kiel 
smoothing property non symmetric case 
nr 
universitat linz institut fur mathematik 
automatic mesh generation objects 
report universitat linz institut fur mathematik numerische mathematik und optimierung 
algebraic multigrid discrete elliptic second order problems program description 
report universitat linz institut fur mathematik numerische mathematik und optimierung 
rand txt numerical optimal meshing instrument meshes ffl delta delta delta sphere ffl delta delta delta torus ffl delta delta delta cone ffl delta delta delta torus ffl delta delta delta cylinder torus ffl delta delta delta ffl delta delta delta local refinement case meshes generated sphere torus cone local refinement case 
