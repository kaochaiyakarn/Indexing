higher order logic daniel leivant contents expressive power second order logic language second order logic expressing size defining data types describing processes expressing convergence second order validity truth definitions analytical hierarchy inductive definitions canonical semantics higher order logic tarskian semantics second order logic function relation formulations normal forms finite order logic functional types formulas higher order functions truth definitions revisited proof theory basic formalisms additional set existence principles constructive finite order logics normalization subformula property ontology gulf order second order logic lindstrom quine tests slipping second order logic higher order logic mathematics henkin semantics henkin completeness full finite order logic finite order logic second order theory restricted higher order logic restricted expressiveness monadic second order logic daniel leivant restricted expressiveness fixpoint logics restricted semantics weak second order logic predicative logic restricted comprehension mathematical practice second order axioms vs order schemas higher order aspects set theory higher order order back analysis reductive proof theory speed higher order logic relation computing programming higher order data types computational nature higher order natural deduction higher order logic meta theory formal systems higher order logic computational complexity higher order logics long considered esoteric subject increasingly recognized foundational importance practical usefulness notably theoretical computer science 
chapter try survey issues results completeness 
choice topics driven attempt cover foundational aspects higher order logic briefly point areas current potential applications 
chapter falls parts 
part consisting sections designed bring forth essential issues facts topic 
section intended motivate interest higher order logic presenting selected examples expressive power second order logic contrasting limitations order logic 
section define precisely canonical intended semantics second higher order logics 
leads section proof theory second order logics considered 
section discusses issues touching question second higher order logics genuine logics 
starting sample major differences order higher order logic consider foundational merits second order logic discuss view higher order logic mathematical theories genuine logics 
second part chapter surveys slightly technical concepts issues 
describe issues broad lines pointers literature occasionally explaining concept providing proof outline important result 
section presents useful options restricting second order logic restrictions language monadic second order logic fixpoint logics semantics weak second order higher order logic logic proof theory predicative higher order logic ramified theory types 
section discusses role higher order logic mathematical practice survey relations higher order logic branches mathematics set theory mathematical analysis 
discuss general issues related higher order formalization mathematics second order axioms versus order schemas effect higher order reasoning shortening proofs 
seventh section briefly describe relations higher order logic programming computing higher order data programming computational nature natural deduction proofs role higher order logic meta theory formal systems higher order logic provide machine independent characterizations computational complexity classes 
space subject constraints handbook chapter important aspects higher order logic receive scant treatment omitted altogether notably uses higher order constructs mathematical practice recursion theory computer science 
choices topics independent author interests background 
hope chapter touches central issues field offers useful organizing principles broad diffuse subject 
interested reader find large growing number textbooks monographs surveys higher order logic related issues pointed text 
expressive power second order logic language second order logic language full second order logic simply language order logic augmented second order variables variables ranging relations functions arities 
vocabulary terms atomic formulas defined order logic equality function variables relation variables complete analogy function constants relation constants 
compound formulas generated atomic formulas usual propositional connectives quantifiers variables including function variables relation variables 
formula free variable closed formula sentence 
notion vocabulary signature symbol set order logic vocabulary consists disjoint sets identifiers element constants function constants relation constants function arity assigns nonnegative integer function constant relation constant 
follow traditional lower case letters roman alphabet element variables function variables upper case roman letters relation variables 
convenient superscript identifiers arity 
daniel leivant standard semantics second order formulas defined respect usual structures order logic 
truth formulas structure straightforward function variables arity range total functions arguments structure universe arity range ary relations 
example equivalence true structures may definition equality predicate 
quantification relations functions greatly enhances expressive power order formulas 
subsections consider significant examples extended expressiveness 
agree phrase theory set formulas theory set formulas 
order theory simply set order formulas second order theory set second order formulas 
structure model theory gamma formula gamma true collection structures defined theory gamma consists exactly models gamma 
collection structures defined order resp 
second order theory order resp 
second order definable 
limitations order logic follow easily fundamental properties compactness theorem theorem 
compactness suppose gamma order theory finite subtheory gamma model 
gamma model countable countable 
expressing size consider topic comes exercises logic textbooks stating size structure subsets universe 
theorem 
collection finite structures order definable definable single second order sentence 
proof 

assume gamma order theory defines finite structures gamma gamma augmented sentences oe oe oe states exist pairwise distinct elements 
finite subtheory gamma model gamma model compactness theorem 
model oe infinite 
gamma gamma infinite model gamma contradicting assumption 
formal definition section 
oe df xn delta delta delta xn gamma xn gamma conjuncts 
higher order logic 
statement holds exactly finite structures injection surjection oe df inj surj inj df surj df formula oe modified state set extension unary relation finite oe df 
second order formulas express great deal cardinalities 
df holds exactly map iff 
define recurrence natural numbers oe df oe oe true exactly kak 
oe oe true exactly kak similarly state universe hand size oe df oe df binary relation xry abbreviation xry 
xry xry 
write 
ks denotes cardinality set progression cardinals power set operation readily expressed 
df theta df theta states mapping fu injection states surjection 
formulas easy build formulas capture sequence 
daniel leivant defining data types vocabulary consisting single element constant single unary function constant structure consisting natural numbers zero successor interpretations skolem lowenheim theorem order logic order theory characterizes isomorphism theory non countable models 
characterizing countable structures 
theorem 
order theory countable model isomorphism 
second order sentence model cardinality proof 

suppose gamma theory 
gamma gamma augmented formulas form th numeral fresh element constant 
finite subtheory gamma model gamma countable model compactness theorem 
universe element interpretation obtained finite applications 
isomorphic model gamma contradiction 

df suc suc df df suc state denotations numerals distinct xn states elements denotations numerals 
second order characterization follows second order interpretation true formulas peano arithmetic pa theorem shows particular countable structure natural numbers characterized isomorphism second order theory 
natural question countable structure characterized 
ajtai reported shapiro section attributes result magidor shows structures defined godel constructible universe assuming general claim independent zfc 
df delta delta delta delta delta delta applications 
second order characterization natural numbers goes back dedekind 
higher order logic theta conjunction closures defining equations addition multiplication 
formula language pa true standard model iff second order formula theta valid 
holds second order formula language pa theorem 
truth standard model second order formulas language pa effectively reducible validity second order formulas 
just natural numbers second order definable free algebra inductive data type algebra generated finite set constant identifiers function identifiers characterized conjunction 
statement denotations distinct terms distinct universal closure inequalities equalities distinct function constants distinct 
second order sentence stating elements interpretations terms df cla cla conjunction formulas universal closures formulas delta delta delta function identifier arity 
free algebra particularly relevant computing algebra generated element constant say ffl successor functions unary function constants say 
terms identified words ffl identified 
set terms characterized formula theta sy theta theta customary unary relation denote result quantifiers formula df df 
customary abbreviation uses chain 
daniel leivant df ffl ffl xx ffl describing processes vg fa aeg vocabulary digraphs source target element constants ae binary relation constant 
theorem 
collection digraphs path source target order definable definable single second order vg sentence 
proof 
non existence order theory defining digraphs simple application compactness theorem 
hand sentence ae true digraph iff ae path existence paths binary relations transitive closure operation related operational semantics computation processes computation defined transition chain configurations 
contrast order second order formulas defining transitive closure relation symptomatic broader contrast possibility defining program semantics order vs second order logic 
vocabulary includes unary function constant structure computable partial function fix df iterate argument similar proof theorem shows theorem 
graph fix defined uniformly structures second order formula order theory 
slightly general example loop 
input output relation determined defined uniformly structures formula ml prog theory gamma variables holds structure interpretation fix arising interpretation elements universe iff gamma 
higher order logic prog df changes value single variable formula ml argument input output 
loop input output semantics program variables defined formula mp relation determined defined mq prog prog df mp easy exhibit similar definitions basic programming constructs including recursive procedures modules leivant expressing convergence second order validity definability free algebras second order formulas extended characterization total computable functions 
summarize argument leivant leivant computation calculi generate total recursive functions lends naturally model theoretic setting equational programs rudimentary form programs serve best 
fix free algebra posit unlimited supply ary program functions arity identifiers distinct constructors terms generated constructors free variables 
statement equation terms 
set statements program body 
program pair program body program function program principal identifier 
program body write equationally derivable reflexivity substitution terms variables substitution equals equals 
ary program function induces relation df partial function algebra computed example herbrand godel programs variant equational programs natural numbers defined kleene term variable denotes operation substituting free occurrences 
note yields transitivity yields symmetry 
daniel leivant program computes addition function ffl phi cv phi phi phi computes concatenation function 
say program body coherent distinct coherent computes partial function model containing program functions interpreted total functions 
convergence equational programs expressed coding second order validity statement follows 
free algebra second order definition membership section 
program body stand conjunction universal closures statements program theorem 
coherent equational program algebra computes unary total function iff theorem contrasted impossibility capturing program convergence order logic theorem 
infinite free algebra 
effective procedure assigns program order formula total iff proof 
suppose procedure existed 
set programs effectively enumerable completeness theorem order logic 
easy see recursive set programs partial recursive function computed program computed effectively enumerable consists total computable functions contradicting elementary result computation theory 
truth definitions analytical hierarchy arithmetical analytical hierarchies known classifications sets natural numbers 
give self contained outline relations interest hierarchies second order formulas truth definitions 
example ff coherent fg 
arity arity abbreviates delta delta delta 
see kleene numeric programs leivant programs follow tradition referring modern viewpoint richer free algebras appropriate 
higher order logic set arithmetical order definable standard structure natural numbers total computable functions 
set analytical second order definable structure 
fundamental result kleene analytical sets arithmetical 
useful discuss fact viewpoint truth definitions brings interplay increased expressive power formalization meta reasoning 
countable vocabulary 
code terms formulas unambiguously strings ascii characters example writing st variable th binary function constant forall universal quantifier 
substituting octal ascii codes ascii characters syntactic expression ff unambiguously represented string str ff ff ff ff ff digits turn unambiguously represented number ff ff ff delta ff octal numeral followed str ff 
clearly primitive recursive functions neg disj univ eq sbst formulas variables terms numbers neg disj eq univ sbst fixed variable identifier expansion finitely functions including primitive recursive functions 
set formulas vocabulary truth definition formula single free variable order formulas vocabulary theorem 
tarski 
suppose language functions neg sbst graphs definable formulas truth definition proof 
suppose truth definition abbreviate neg sbst df neg sbst 
godel proof incompleteness theorem suffices consider formulas theta 
ascii acronym common coding characters special symbols bits 
write result simultaneously substituting term free occurrences renaming bound variables needed 
write unambiguous 
daniel leivant neg sbst neg sbst definition neg definition sbst definition neg truth definition contradiction 
theorem 

second order order truth definition order sentences codes order sentences true form set analytical arithmetical 
proof 
non existence order truth definition special case theorem 
prove existence second order truth definition start observing truth formulas defined recurrence syntax finite valuations free variables 
finite valuation represented number usual sequence coding methods 
methods primitive recursive functions proj inst proj th entry sequence coded inst valuation differs assigning variable preliminary semantic evaluation assigns values terms easy define primitive recursion function val val value term assignment coded val proj variables val val val function state set contains pair iff true valuation coded logical constants suffices put eq val val neg disj univ nt inst formula true iff ht true definition uses primitive recursive functions neg sbst 
gm list functions functions value domain recall finitely functions 
function val course function treatment adapted primitive recursive functions troelstra function val primitive recursive 
higher order logic primitive recursive definitions 
conjunction universal closure primitive recursive definitions order sentence df gm inductive definitions inductive definitions played central role foundations mathematics century 
appear broad spectrum topics algebra subalgebra generated set elements proof theory theorems theory ordinal notations descriptive set theory borel sets computation theory collection functions generated certain schemas structural style operational semantics programs 
particular backbone major generalizations recursive functions theory barwise moschovakis years ties inductive definitions particular finite structures database theory descriptive computational complexity logics programs developed 
return inductive definitions sections 
operator collection ary relations set inductive closure obtained union increasing ordinal chain ff df ff 
ff fi ff fi ff sufficiently large ff 
ff closure ordinal definition cardinality ff ff fixpoint operator suppose universe structure defined second order formula vocabulary expanded ary predicate letter tuple distinct free variables denote operator 
example reflexive transitive closure binary relation ae df rx ae 
example truth order short informative survey aczel comprehensive monograph moschovakis exponent needed may finite 
structure expanded interpretation daniel leivant arithmetic formulas equations inequalities df rz eq val val neg eq val val disj univ nr inst fixpoint second order definable operator second order definable wf second order formula stating ordering universe hand formula defined easily ideas similar section 
df wf ff ff ff ff ff ff result replacing subformula ff 
classical theory inductive definability traditionally focused monotone operators 
operator monotone ae ae implies ae ae 
inductive closure monotone operator fixpoint ae ae ae ff ordinals ff ordinal induction ae intersection sets closed permits simpler second order definition inductive closure definable monotone operator df easy see occurrences positive monotone writes danger ambiguity simply minimal fixpoint 
operators defined order formulas converse holds monotone structures order formula logically equivalent occurrences positive lyndon theorem see chang keisler hodges 
restrictions motivated expository removed 
greek letters ordinary order variables expression abbreviates arity arity 
occurrence scope negations negative scope implications positive 
order operator may monotone finite structures failing positive ajtai gurevich restriction positive operators natural context computer science gurevich higher order logic canonical semantics higher order logic tarskian semantics second order logic consider semantics second order formulas formally 
vocabulary order logic structure 
order formulas truth second order formulas defined modulo valuation variables objects 
second order variables assigns appropriate kind objects 
valuation assigns structure elements free object variables ary relations free ary relation variables ary functions free ary function variables 
terms values defined recurrence val object constants val object variables val val unary function identifier similarly higher arities val val unary function variable similarly higher arities 
truth atomic formulas defined iff val val iff val unary relation identifier similarly higher arities iff val unary relation variable similarly higher arities truth compound formulas defined recurrence formulas order formulas 
function relation formulations usual classical extensional reading functions relations concepts course reducible ary functions viewed special kind ary relations ary relations interpreted ary characteristic functions 
instance formula delta delta delta delta delta delta interpreted yf delta delta delta delta delta delta fresh 
conversely formula delta delta delta delta delta delta interpreted delta delta delta delta delta delta fixed constant identifier fresh 
suffices assume structure hand elements 
daniel leivant formulate second order logic relation variables function variables 
closer examination relational formulation second order logic permits finer distinctions 
interesting case contrast formulas form quantifier free form standard structure natural numbers additional multiplication 
pi set analytical hierarchy definable formula form sets defined formulas second form recursively enumerable kreisel formulas dubbed strict pi barwise barwise computational leivant term computational motivated fact formula defines uniformly structures operational semantics certain finite state machine 
respects appropriate sigma formulas generalization arbitrary structures semi recursiveness descriptive power sigma formulas natural numbers derived possibility numeric coding computations computational formulas describe computational processes depending coding 
normal forms known procedure transforming order formula logically equivalent prenex formula quantifier scope propositional connective transforms second order formula equivalent prenex form 
second order prenex formula transformed increasing number quantifiers kind equivalent formula second order quantifier falls scope order quantifier 
transformation consists recursively replacing subformulas form df similarly quantifiers relation variables 
formulas equivalent weak form axiom choice follows duality 
furthermore order formula converted equivalent formula form replacing subformulas form significance computational formulas discussed leivant higher order logic similarly relational quantifiers 
combining transformations second order formula converted equivalent formula forms ff ff delta delta delta ff ff ff delta delta delta ff dual ff vector second order variables vector element variables quantifier free function quantifier 
formulas forms said normal 
formula pi form sigma second form 
known result kleene set sm natural numbers defined pi formula sigma formula pi gamma formula 
set gamma sm defined sigma formula pi formula 
fact easy see take sm set codes pi sentences true finite order logic finite order logic called type theory order logic extension second order logic quantification higher order relations functions 
basically due church church outline relational variant finite order logic similar account schutte chapter iv 
types precisely relational types syntactic expressions inductively generated type types type 
type denoted delta delta delta delta delta delta denoted language finite order logic type variables type quantifiers 
intend denote type set individuals structure elements set ary relations objects types respectively 
set set objects type defined df vocabulary element constant order quantifiers replaced function quantifiers 
order formula equivalent formulas forms quantifier free 
structure definable pairing function structure elements case theta expansions vector ff replaced single variable appropriate changes quantifier free matrix 
see kleene detailed textbook exposition andrews daniel leivant df theta delta delta delta theta type singleton element set elements identified boolean truth values false true 
finite order logic terms type follows 

variable type term type 
ary function constant vocabulary terms type term type 
ary relation constant term type 
term type terms types respectively term type note defined abstraction terms 
example formula single free variable type set fx accepted term type 
state property denoted variable type hold set fx may write 
terms type atomic formulas compound formulas generated order second order logic 
semantics formulas finite order logic defined formally second order logic assignment structure universe maps variables type objects types naturally fall orders defined inductively order df order df max order order 
fragment finite order logic types variables order dubbed th order logic 
recapture order order logic get relational variant second order logic 
construction types extended allow types orders transfinite ordinals 
example consist objects finite type 
type binary relations objects finite types 
formalism transfinite types developed discussed andrews see montague 
functional types alternative relational types kind discussed functional types 
functional types syntactic expressions inductively generated types oe types oe 
intent equality elements may included relations type higher order logic oe type functions objects type oe objects type function arguments type returning value type oe represented function type 
oe defined 
mapping called currying honour haskell curry discovered 
generally function arguments types value type oe represented function type 
delta delta delta 
oe delta delta delta 
type abbreviated oe 
known duality functions relations basic objects extends entire type hierarchy 
relation thought function returns boolean values represented function type defined true false conversely function type oe represented graph type oe 
higher type calculus interaction expressions denoting objects different types governed operations application abstraction 
denote objects types oe respectively applicative expression denotes object type oe result applying object denoted denote expression denoting object type oe possibly parametrized variable ranging objects type abstraction expression denotes object type oe function object type assigns value variable evaluated formulas higher order functions propositional logic construed boolean algebra objects truth values type algebra functions propositional connectives negation function type binary connectives type propositional formulas simply algebraic expressions define functions truth values instance formula 
function boolean arguments return boolean value church showed simple functional interpretation propositional logic extended order logic higher order functions 
propositional identifiers denote truth values relational alternative notation oe common works type theory oe church daniel leivant identifier denote boolean valued functions type individual objects 
example formula represented function type function arguments fp fq returns value fp fp 
order arguments arbitrary 
alternatively may think template functions defined explicit abstraction 
denotes function type parametrized identifiers appropriate choice values identifiers denotes function objects truth values 
reading quantifiers higher order functions 
function type identically true true false 
true iff true value usual order notation viewed abbreviation functional 
existential quantifiers quantifiers special logics infinitely similarly interpreted functions type higher order quantifiers fall 
consider universal quantification unary relations formula 
viewed abbreviation functional expression 
type type operator generally universal quantification objects type operator type define generic universal quantifier types needs enrich type structure discussing cf 
girard coquand huet 
girard system 
generic universal quantifier operator forall type deltat forall functionally equivalent church interpretation formulas higher type functions extensively computer science formal calculi calculus constructions coquand huet programming systems edinburgh lego paulson isabelle paulson paulson andrews tps andrews miller prolog nadathur miller nadathur miller miller truth definitions revisited rewarding relate finite order logic issue truth definitions mentioned section 
proof theorem easily adapted higher order formulas forall reduces type fi reduction 
note generic forall global quantifier ranges simultaneously objects types 
higher order logic theorem 
expansion functions neg sbst injective pairing function inverse projections definable 

second order truth definition second order sentences third order truth definition 
proof 
absence second order truth definition analogous theorem 
define third order truth definition assume second order variables set variables unary relation variables 
loss generality presence pairing function inverse projections permits replacement relations higher arities sets 
code set natural numbers assignment sets finite number variables 
assignment domain fv coded set theta fng theta df fp xg 
modify functions definition proof theorem apply formulas second order quantification valuations second order logic 
clearly primitive recursive functions type apply variable type number variable term set variable apply 
emulating definition proof theorem write formula follows states set contains triplet iff true valuation part coded number valued part coded df eq val val type 
apply val neg disj type 
univ nt inst type 
univ mod mod abbreviates daniel leivant 
theta ae theta ae second order sentence true iff third order sentence true 
note third order variable 
keep definition relational variant finite order logic need reformulate fairly straightforward 
proof concluded theorem 
generally theorem 


order truth definition order sentences 
finite order truth definition finite order sentences 
order truth definition order sentences similar method show order formula order sentence valid iff valid 
construction truth definitions higher types continued types andrews shows give truth definition finite order formulas quantification objects type 
proof theory basic formalisms godel completeness theorem provability order logic captures precisely validity 
success contrasts second higher order logic theorem 
set valid second order formulas definable canonical numeric coding second order formula language arithmetic 
recursively enumerable particular effective formalism theorems precisely valid second order formulas 
proof 
conjunction theta see section 
models natural numbers domain standard interpretation theta 
formula language peano arithmetic note formula falls theorem order logic follows 
pr existential formula arithmetic formalizes provability order formula pr iff provable 
valid iff provable iff pr true standard model iff theta pr valid 
stronger result theorem 
vocabulary thetag higher order logic true standard model iff formula valid 
theorem set true second order formulas arithmetic second order definable 
set valid formulas form second order definable second order arithmetic formula 
formulas form effectively recognizable follows set valid second order formulas definable arithmetic second order formula 
second order logic complete deductive calculus sound deductive calculi logically natural powerful metamathematical interest suitable formalization mathematics computer science cognitive science 
formalisms satisfy important syntactic properties permit natural adaptation formalisms methods automated theorem proving andrews expressive power second order logic stems standard interpretation second order quantifiers ranging relations functions structure hand 
surprising range enforced deductive formalism formalism countable distinguish implicitly explicitly countable number functions relations recall downward theorem 
natural formalism relational variant second order logic uses usual axioms order logic quantifier rules applying relational variables individual variables give precise formulation momentarily stipulation range includes relations definable formulas language 
stipulation form comprehension principle set theory formally rendered schema ary relation variable second order formula occur free 
spelled familiar proof styles order logic 
hilbert style calculus obtained augmenting inference rules axiom schemas order logic normalization natural deductions cut elimination sequential proofs certain forms subformula property see section plausibility argument proof course 
related phenomenon trakhtenbrot theorem collection order formulas true finite structures re trakhtenbrot ebbinghaus note may free variables need free 
allowing free strong form circular definition leads contradictions take daniel leivant comprehension schema quantification rules axiom schema universal instantiation arity arity inference rule universal generalization free natural deduction calculus obtained supplementing inference rules order logic quantification rules 
writing gamma derived assumptions gamma rules second order elimination gamma gamma free gamma gamma gamma arity arity arity free result replacing subformula 
note conveys comprehension principle 
sequential style calculus defined similarly 
moving second order finite order logic obvious lift comprehension principle types higher order 
variables types respectively variable type comprehension type schema free denote ln formalism order logic comprehension types order 
finite order logic comprehension types 
additional set existence principles comprehension purely logical syntax driven set existence principle 
encompasses elementary set existence axioms set theory extent pertain second order logic empty set union separation axioms instances comprehension form formalism detailed example church section note axiom schema rules including ones order logic apply formulas language 
analogous axiom schema inference rule added viewed abbreviation 
element relation variables usual sense see example takeuti miller resolution style calculus higher order horn clauses miller higher order logic pairing syntax relation variables finite arity 
power set axiom outside scope second order logic collapses entire type hierarchy order theory 
finite order logic weak form power set principle set order power set legitimate set order comprehension axiom infinity orthogonal finite order logic formalism structures including finite ones 
set existence principle interest choice formulated single axiom choice lifted arbitrary types choice types oe reads oe oe oe oe types oe oe oe oe reformulate axiom principle collection hilbert ackermann section iv oe oe oe oe df oe oe oe axiom gives rise collection schema lower orders 
particular oe get schema choice objects sets second order third order logic subformula replaced 
interest variants choice principles schema dependent choice generalized dependent choice see kreisel feferman 

abbreviates unique df 
alternative formulations equivalent weak forms comprehension 
hilbert ackermann gives schema states binary relation function acts choice partial function domain form states appropriate binary contains choice function 
equality type spelling defined recurrence equality type 
daniel leivant set existence principle fraenkel schema replacement states image set class function set 
context second finite order logic class functions admitted relations comprehension replacement deducible 
set existence principles set theory high cardinal axioms gch existence measurable cardinals diamond principle axiom determinacy formulated second order logic statements sufficiently large structures principles increasingly alien spirit finite order logic 
constructive finite order logics blush constructive intuitionistic finite order logic look dubious hybrid hand weakens propositional rules meet demands constructive ontology hand brings higher order quantification ontology problematic classically 
combination constructive logic higher order quantification conceptually natural higher order quantification depend legitimacy full power set construction compare section 
constructive finite order logic fact highly formalism strong useful ties computing programming 
powerful ingredient connection close resemblance discovered howard howard typed lambda calculi natural deduction calculi see section 
known constructive order logic formalism rich classical order logic interpretable 
instance order formula arises double negating atomic disjunctive existential subformula provable classical logic provable classical logic iff provable constructive logic 
constructive intuitionistic variants iln formalisms ln obtained corresponding classical proof calculi order logic 
instance sequential style calculus il calculus restricted formula 
obtain interpretation il formula defined relational existential quantifiers double negated 
provable provable iff provable il richness constructive formalisms compared classical counterparts numerous manifestation 
striking example higher kolmogorov godel see friedman leivant textbook expositions kleene section troelstra atomic higher order logic order logic discovered lob classical second order propositional logic fragment relations ary 
known truth formula holds iff provable decidable ana uses fairly manageable computational resources il ary fragment il provability il undecidable altogether reduction provability classical order logic provability il interesting property order constructive logic independence usual logical constants 
constants defined terms remaining ones contrast classical order logic 
longer case second order logic prawitz observed logical constants definable constructive second order logic terms false 


furthermore definability implies constructive second order logic interpretable minimal second order logic constructive rule negation schema 
absent 
normalization subformula property central topic proof theory normalization natural deductions cut elimination sequential proofs 
normalization transformation natural deduction derivation equivalent derivation normal detour detour formula derived rule principal premise elimination rule 
example deduction form proof formalism boolean quantified formulas 
stockmeyer see hopcroft ullman decidability quantified boolean formulas canonical example poly space complete problem 
complexity il related facts truth table semantics intuitionistic propositional logic sound complete semantics countable set truth values 
boolean quantification il may seen ranging infinite countable set 
called positive second order logic derivations equivalent prove formula open assumptions 
definition normal derivation suffices absence 
daniel leivant pi sigma displayed formula detour 
eliminated transforming proof direct proof sigma pi indicated occurrences formula may new detour formulas shorter detour formula eliminated 
analogously detour may involve second order generalization followed instantiation pi eliminated relational substitution derivation pi pi transformation replace detour larger ones formula detour pi potentially larger formula detour pi 
powerful combinatorial method due girard prawitz proved spite difficulty natural deduction derivation transformed effectively normal derivation martin lof showed hold full finite order logic 
true pi normal danger exists potential blow ups complexity detours syntactic size detour formulas yardstick progress eliminating detours eliminating implicational detour detour form elimination result detours syntactic complexity greater original detour 
see gallier survey 
earlier proofs somewhat weaker higher order logic fact derivation order logic normalized far reaching applications related subformula property normal proof pi formula formula subformula 
notion subformula modulo term substitution instance subformulas include formulas term free 
consequently formulas normal proof logical complexity bounded complexity derived formula useful fact structural analyses proofs metamathematical applications 
normal derivations subformula property notion subformula modulo substitutions time applies second order quantifiers subformulas include formulas form free 
logical complexity formulas normal proof longer bounded complexity derived formula subformula property second order logic limited metamathematical applications 
ontology gulf order second order logic order logic important properties lacking second order logic 
enumerate section considering foundational consequences differences 

set valid order sentences recursively enumerable set valid second order sentences definable second order arithmetic theorem finite order arithmetic theorem 

logic compact set gamma formulas model finite subset gamma model 
order logic compact second order logic gamma consist xn formulas 
finite gamma ae gamma true structure expanded interpretation sufficiently large natural number 
gamma model 

logic downward skolem lowenheim property countable set formulas infinite model countable model 
order logic property second order logic normal form theorem states provable formula normal proof 
tait proved property second order logic tait takahashi prawitz independently proved full finite order logic 
proofs model theoretic method partial valuation due schutte true certain fragments second order logic complexity substituted formulas effectively controlled nadathur miller miller daniel leivant sentence oe see section model countable model 

logic upward skolem lowenheim property countable set formulas infinite countable model arbitrarily large models 
order logic property second order logic sentence oe infinite countable model uncountable model 

generalized form downward skolem lowenheim applies logic follows function cardinals model size model size 
proof downward skolem lowenheim property order logic gives second order logic function df th inaccessible cardinal th measurable cardinal assuming cardinals exist barwise theorem 
order logic satisfies beth definability property second higher order logic 
logic definability property implicitly definable relation explicitly definable sense 
suppose vocabulary frg fresh relational identifier 
suppose gamma theory structure expanded model gamma way formula fl structure 
failure definability property second order logic consequence second order characterization natural numbers formula section sg choose ae second order definable explicit definitions gamma consist formulas formulas structure expanded model gamma standard 
unification problem decidable order logic robinson second order logic 
important theorem model theory order logic directly related order expressiveness fraiss theorem 
see chang keisler hodges ebbinghaus 
put differently models gamma universe interpretation constants interpretation argument part folklore shapiro section shapiro observes definability property hold second order logic gamma finite conjunction formulas gamma replaced variable arity fl df 
result undecidability second order term problem proved goldfarb higher order logic states roughly property models definable order formula iff recognized computation finite number alternations existential nondeterministic universal nondeterministic guesses 
related theorem keisler states property models definable order formula iff negation preserved isomorphisms formation 
second order formula exceeds expressive power order logic defines property models recognized computations preserved 

order logic satisfies law vocabulary individual constants nv number non isomorphic structures order number non isomorphic structures true 
df lim nv nv exists equal 
clearly second order logic property second order formula true finite structure iff number elements 
lindstrom quine tests second order logic truly logic 
technical level answer trivially positive 
philosophical ontological angle answer clear 
model theoretic viewpoint second order logic merely possible logics 
syntax logic logical non logical constants 
semantics logic collection possible interpretations models structures includes interpretation dependent assignment meaning non logical constants invariant assignment meaning logical constants 
example order logic logical constants interpreted uniformly structures vocabulary identifiers get specific interpretations structure 
similarly logic quantifier exist uncountably interpreted intended structures 
second order logic see chang keisler hodges detailed proofs fraiss keisler theorems van benthem doets benthem doets pleasant simplified presentation 
original forms common expositions model theory theorems stated characterizations elementary equivalence 
theorem discovered independently fagin fagin fails presence constants binary relation constant survey laws various logics compton results spencer shelah kolaitis vardi kolaitis vardi kolaitis vardi spencer see kolaitis vardi cases second order formulas law hold 
daniel leivant plethora logics logical constants order logic augmented quantification relations 
philosophical viewpoint wish reserve term logic priori concepts truths ones depend experience observation 
quine suggested demarcation logic mathematics determined ontological neutrality assuming existence certain objects structures 
particular notion infinity delineated formalism formalism mathematical logical 
quine concludes second order logic mathematical theory logic 
landmark theorem lindstrom states roughly logics order logic characterized maximal logic compact satisfies downward skolem lowenheim property 
quine viewpoint characteristics order logic litmus tests logic compactness failure distinguish finite infinite downwards skolem lowenheim failure distinguish different 
quine argument corroborated success second order logic capture directly mathematical practice 
critical view really afterthought 
sight mere quantification relations ontological commitment 
notion arbitrary sets relations underlies model theory order logic 
advocate quantification sets unary relations ontologically prudent quantification relations arbitrary arities restricted variant second order logic seen characterization david lewis quoted hazen argued monadic third order logic ontologically neutral hazen showed formalism suffices interpret second order logic 
girard suggested technical proof theoretic criterion logic true logic amenable cut free sequential calculus axioms satisfies subformula property strict sense see section 
underlying intuition axioms rules allow communication formulas rules explicate logical constants isolation 
criterion clearly related quine ontological neutrality 
relatively weak fragments second order logic fail girard criterion 
quine disagrees 
om see ebbinghaus textbook exposition 
personal communication 
possibly recover textual subformula property fragments logically weak computationally interesting see nadathur miller miller higher order logic slipping second order logic fact notion arbitrary relation implicit order logic order languages describe prove properties particular order structures 
say formula valid say true interpretations statement involving universal quantification universes relations interpreting predicate letters 
point hilbert ackermann formalism order calculus clearly closed system 
words basic notions metamathematics order logic second order 
logical construct ontologically benign relational quantification yields full expressive power second order logic partially order quantifiers 
henkin noted quantifiers order formulas prevents expressing forms dependence occur naturally mathematics natural language discourse barwise instance formula way state depends henkin proposed extension order language partially order quantifier combinations example oe states true suitably choosing depending value choosing depending generally may define partially ordered quantifier triple fi tuples variables distinct fi function assigning variable sublist formula semantics defined semantics find values variable depending values variables fi invariant respect changes values remaining true 
sight obvious partially ordered quantifiers ontologically neutral usual nesting order quantifiers 
simple partially ordered quantifiers suffice characterize infinite structures contrast theorem 
df formula semantically equivalent daniel leivant conjunct equivalent inj second conjunct equivalent surj follows true exactly infinite structures 
higher order logic mathematics henkin semantics quine position second order logic mathematical logical formalism justifies model theory quantification relations functions mathematical logical operation 
interpretation higher order quantification put equal footing vocabulary constants part specification model invariant models 
semantics describe detail due henkin 
vocabulary 
henkin finite order logic consists ffl non empty universe ffl interpretation constants ffl type collection theta delta delta delta theta 
assignments defined tarskian semantics section variable type require semantic satisfaction formulas defined inductively usual 
tarskian models finite order logic may regarded special henkin interpretations canonical interpretations types henkin structure finite order logic henkin closed definability formula assignment type formula due ehrenfeucht reported henkin 
enderton independently showed sigma formula semantically equivalent formula language order logic partially ordered quantifiers 
enderton showed formula semantically equivalent delta formula 
harel showed natural modification semantics partially order quantifiers expressively equivalent full second order logic showed expressive equivalence full second order logic obtained alternatively closing collection partially ordered quantifiers duality operation 
detailed surveys partially ordered quantifiers see mostowski see henkin correction henkin treatment andrews assignment differs assigning respectively 
higher order logic henkin type oe henkin subtypes oe including oe 
henkin structures type oe defined analogously 
squarely mathematical interpretation higher order quantification arises viewing finite order logic syntactic variant order theory types tt 
theory monadic second order formulas formulas unary relations 
vocabulary extension arities respectively 
intended state individual set element 
henkin determines unique structure follows 
ffl universe universes types ffl interpretations constants interpretation functions defined extended arguments arbitrarily ffl interpreted 
monadic formula rephrased order formula obtained replacing atom variable quantifiers individuals quantifiers sets variables understood object variables 
easy prove lemma 
formula true iff true 
valid true henkin 
converse generally true example xx true universe structure non empty valid 
generally structure structures properties compare benthem doets defined recurrence formulas follows 
set variable ff ff atomic formulas binary connectives 

daniel leivant 
correctness object constants ary relation constants ary function constants 
non emptiness 
disjointness 
inclusion 

extensionality lemma 
properties henkin type 
proof 
universe jsj df universe individuals interpretation constants functions restricted universe sets consist sets fa correctness non emptiness properties henkin 
claim isomorphic function jsj js defined ae fa defined disjointness inclusion conditions surjective definition injective extensionality condition 
preserves constants definition condition 
theta set formulas listed conditions 
lemma 
monadic formula true henkin iff theta proof 
suppose true henkin 
showing theta assume theta lemma henkin assumption lemma conversely suppose theta henkin 
theta lemma 
similar duality exists provability lemma 
monadic formula provable iff provable order logic formulas form free 
higher order logic proof straightforward induction length derivations 
combining lemmas completeness theorem order logic obtain theorem 
henkin 
monadic second order formula true henkin iff provable order logic theta 
true henkin structures iff provable order logic theta formulas form 
generalization theorem monadic full second order logic straightforward 
henkin completeness full finite order logic outline general duality full finite order logic order theory 
vocabulary vocabulary constants type unary relation type ary relation finite order formula correspond order formula follows 
replace atomic formula variable type type relativize quantifiers monadic second order formulas full henkin structure determines unique structure 
structure satisfies set theta formulas analogous theta inclusion condition stated infinitely types correctness non emptiness disjointness oe distinct oe delta delta delta extensionality henkin structure defined analogously definition case 
analogously lemma 
lemma 
formula provable 
iff provable order logic formulas form free variable type ff ff atomic formulas binary connectives 

daniel leivant theorem 
henkin 
finite order formula true henkin iff provable order logic theta 

consequently finite order formula true henkin structures iff provable order logic theta formulas form 
proof 
prove 
suppose theta henkin 
theta lemma implies 
conversely suppose true henkin 
showing theta model theta substructure generated elements analogously lemma isomorphic henkin assumed true follows lemma true quantifier relativized true shown theta completeness theorem theta soundness henkin semantics establish independence results 
instance theorem 
principle choice provable proof 
choice theorem henkin structure satisfy choice 
consider henkin structure empty vocabulary element universe fa cg relations exactly definable ones 
call valuations isomorphic individual variables iff ary relation variable individual variables hj iff hj 
easy see induction isomorphic iff 
choice implies choice provable definition implies formula 
particular valuation assigns individual variables relation variables 
say observation contradicting 
definable second order formulas equality 
interesting counter example consider henkin consists standard model peano arithmetic order definable relations 
higher order logic finite order logic second order theory construction reduces finite order logic order theory allowing non canonical semantic interpretations 
reduce finite order logic second order theory allowing non canonical interpretations 
type consider formula expressing representability relation object rep df 
canonical henkin corresponds structure satisfies rep type theta 
conversely structure satisfies theta rep type substructure defined isomorphic canonical obtain theorem 
formula finite order logic valid standard sense iff second order formula true model theta type formula proof theorem uses formulas theta involve types 
conjunction formulas 
note pi formula 
obtained theorem 
formula finite order logic valid iff sigma formula valid 
van benthem doets section refine result show replaced monadic pi formula 
montague pointed theorem extended transfinite order logic orders ordinals describable finite order logic 
note theorem refers validity structures 
particular structure considered example shows choice arithmetic relations defines non arithmetical relations see rogers choice fails henkin structure 
andrews shows choice type theorem full finite order logic augmented axiom schema description 
axiom description type ff states functional singleton set ff input returns sole element preliminary form theorem due hintikka montague generalized shapiro cites montague independent source stating montague attributes result david kaplan 
expositions kreisel krivine benthem doets shapiro daniel leivant validity pi formulas reduced validity sigma formulas 
theorem states truth finite type formula validity formula theta see section reducible validity structures sigma formula totally different nature refers explicitly coding type structure 
striking consequence theorem theorem 
set numeric codes valid second order formulas definable finite order logic 
proof 
suppose oe finite order formula vocabulary arithmetic oe true standard model iff codes valid second order formula 
primitive recursive function maps numeric code formula finite order logic code formula finite order logic valid iff valid iff oe true standard model 
particular finite order formula vocabulary arithmetic true standard model iff valid iff true standard model 
finite order formula df oe impl primitive recursive definition impl truth definition finite order formulas contradicting tarski theorem 
set valid second order formulas definable validity suitable third order formula section definable relation variables restricted numeric relations 
contrast surprising second order formulas go long way defining higher cardinals 
restricted higher order logic higher order logics useful expressive power price technical difficulties problematic ontology 
motivated restrictions higher order logic restriction attempts preserve montague observation mentioned set definable transfinite order number theory long order ordinals definable finite order logic 
easy see second order truth definable set theory pi formula renders structures see 
definition set quantifiers range arbitrary sets intended hierarchy sets levy montague reflection principle levy ordinal ff statements countably second order formulas true exactly true ff second order truth definable nin ff order logic 
higher order logic certain forms expressiveness eliminating reducing technical ontological problems 
restrictions classified restrictions expressiveness semantics proof theory aspects intertwined 
restricted expressiveness monadic second order logic natural language restrictions monadic second order logic fixpoint logic 
driven syntactic form semantics 
monadic second order logic higher order variables ones ranging monadic relations sets 
monadic order logic decidable lowenheim absence functions monadic second order logic skolem functions monadic second order logic quite complex definition monadic section 
pairing projection functions axiomatized recursion equations follows truth second order formula standard structure natural numbers expressed monadic second order formula 
monadic second order logic compact possesses upward skolem lowenheim property beth definability property set monadic second order formulas valid structure analytical effectively enumerable 
monadic second order logic fails satisfy downward skolem lowenheim property 
proof downward skolem lowenheim satisfied full second order logic relies quantified define uncountable structures 
easy define monadic second order logic particular classes uncountable structures dense linear orderings endpoints contain dedekind cuts 
failure downward skolem lowenheim property example formula binary order expressed arises replacing subformula identifier primitive recursive pairing function 
truth natural numbers expressed monadic second order formula 
primitive recursive definition functions relativized monadic second order logic craig interpolation property mostowski order full second order logic 
logic interpolation property valid sentence sentence uses non logical constants occur valid 
proof interpolation property order logic logic textbooks see ebbinghaus second order logic property trivial see shapiro delta delta delta vocabulary relation identifiers occur delta delta delta 
order formula linear orderings daniel leivant follows 
view similarities monadic full second order logics wonder point restricting predicates monadic ones 
turns theories restriction crucial leads interesting results 
notably full second order theory zero successor function additional function symbols essentially second order arithmetic graphs primitive recursive functions definable monadic second order theory successors monadic second order theory binary trees decidable rabin discussion compendium monadic second order theories gurevich restricted expressiveness fixpoint logics inductive definitions play particularly important roles various applications higher order logic natural isolate consider extensions order logic fixpoint constructs 
study proof calculi order logic extended fixpoints implicit development theory inductive definitions arbitrary structures moschovakis syntactic logical formalisms incorporate explicitly fixpoint operator originated independently areas theoretical computer science logics programs database theory 
syntactic logical formalisms explicitly incorporate fixpoint operator introduced relation programming language semantics scott de bakker park hitchcock park consequently fruitful investigations propositional modal formalisms reasoning programs led df df df df infinite models standard order 
countable model countable model isomorphic rationals endpoints cantor countable order theorem see ebbinghaus false structures 
adding fixpoint constructs logic somewhat different formal theories inductive definitions iterated inductive definitions usually formulated arithmetic analysis 
theories initiated kreisel studied extensively see buchholz natural number collection idn sets definable fold iterated inductive definitions defined id df idn df collection fixpoints operators order formula sets idn parameters positive 
generally oe fixed founded ordering element collections id ff ff represented oe defined uniform form definition iterated transfinite recourse infinitely operators way 
order formula language arithmetic extended unary predicates positive free variables generates transfinite sequence field oe sets follows 
df df oea oea df successor oe oea df theta limit point oe 
higher order logic study propositional calculus propositional logic enriched fixpoint construct kozen database theory interest extending order logic fixpoint operator chandra harel evolved expressive limitations order logic impossibility define uniformly structures transitive closure binary relation finite structures aho ullman fixpoint operators possible important fixpoint monotone order operators considers extension fo language order logic vocabulary clause formula occurrences ary relational identifier positive tuple terms formula intended denote fixpoint monotone operator 
see section 
note may formula fo necessarily order formula 
noted section positive formulas yield natural syntactically recognized collection monotone operators guaranteed fixed point 
careful specifying formulas applied 
weak reading said positive negative scope implication negation 
stronger reading positive negative scope negation implication number times 
order readings equivalent readings identical formulas form 
uses negative positive interaction fixpoints may get complex rendered weaker reading 
easy see truth number theoretic formulas reducible finite model theorem decision procedure propositional calculus proved kozen kozen parikh law blass study scope expressiveness calculus fixpoint operators include inflationary fixpoint gurevich shelah leivant existential fixpoints blass gurevich additional variants mentioned section relation computational complexity 
dual notions induction largest fixpoints emerged programming language theory important dealing infinite objects streams aczel mendler milner tofte pitts negative scope odd number implications negations readings equivalent finite structures proved immerman leading normal form theorem formula equivalent single occurrence version studied moschovakis attractive related language lower predicate calculus reflection moschovakis completeness theorem interesting fragment language barwise moschovakis result improved katherine st john preparation 
daniel leivant validity fo formulas 
defined section replaced df rx sy formula language peano arithmetic true iff formula theta valid 
immediately follows set valid fo formulas arithmetical canonical coding 
consequently formal system generates exactly valid fo formulas 
standard model arithmetic definable fo follows fo fails compact upward skolem lowenheim property 
downwards skolem lowenheim property 
complete deductive system fixpoint logic impossible natural formalisms exist 
salient properties incorporated formal calculus 
closure 
inference rule 
minimality property relation proper arity rendered order logic schema allowing substitution order definable relation restricted semantics weak second order logic important semantically restricted higher order logic weak second order logic relation variables ranging finite relations function variables 
formula relational variant second order logic true structure notation true relation variables ranging finite relations 
second order definition natural numbers amended weak second order logic follows 
gamma df define fact set valid fo formulas complete pi shown privately communicated draft proofs moschovakis doets 
privately communicated draft proofs moschovakis doets 
higher order logic df models gamma property ranging finite sets true element iff denotation numeral 
formula df suc defines natural numbers isomorphism model gamma primitive recursive functions referred defined second order definitions graphs 
follows number theoretic formula corresponds second order interpretation true iff gamma weak second order logic 
decision problem validity arithmetical hierarchy recursively enumerable 
weak second order logic defines natural numbers isomorphism upwards skolem lowenheim property 
weak second order logic downwards property contrary monadic full second order logic 
second order formula valid iff true countable structures 
consequence full second order logic interpreted weak second order logic 
downwards skolem lowenheim property weak second order logic implies validity second order formula reducible truth second order formula form ranging sets order number theoretic formula 
idea interpreting relational variable ranging numeric codes finite relations set valid second order formulas pi contrast set valid second order formulas definable type theory theorem 
weak second order theories natural related applications logic theory computing artificial intelligence proved 
examples weak second order theory linear ordering decidable weak second order theory function decidable rabin recall suc df 
example plus su sv times su plus 
proof sketched monk pp 
result attributed tarski see ebbinghaus exercise ix 
weak second order logic trivially interpretable standard second logic notion finiteness second order definable section 
daniel leivant predicative logic restricted comprehension main forces shaped development twentieth century mathematical logic crisis foundations caused discovered turn century 
leading mathematicians time hilbert brouwer poincar called careful reconstruction mathematics safer grounds 
approach attempted design formal calculi powerful capture mathematical practice possible time clearly avoiding led formalisms ramified type theory whitehead russell formal set theory zermelo fraenkel 
radical reaction crisis foundations argued reconstruction mathematics foundations accepted basis critical examination conceptually merely avoiding 
strain radical program brouwer intuitionism rooted general critique notion existence mathematical objects classical rules logic govern reasoning existence 
soon intuitionistic logic formalized heyting appeared classical logic interpreted see section implying intuitionism play central role foundational aspect program notwithstanding importance respects 
led focus major strain program program proposes examine critically logical rules governing reasoning existence general existence particular mathematical constructions notably basic existence axioms instances comprehension schema section instances axiom choice say numeric form choice numbers sets 
referring choice formulas mention set quantifiers principles circular existence set see mendelson fraenkel ch 
concise informative surveys crisis 
fraenkel bar hillel section contains detailed bibliography 
whitehead russell zermelo zermelo fraenkel notion existence understood encompasses disjunction example equivalent 
form easily implies schema choice numbers numbers 
forms choice follow general axiom stated section comprehension useful consider particular instances choice weak forms comprehension 
numeric statement follows set theoretic axiom choice schema dependent choice zx zx 
schema choice numbers sets unary binary defined section 
higher order logic truth presumes meaningful quantification collection sets including definition collection said impredicative uses quantification range includes element assumed exist defined 
unrestricted impredicative definitions lead contradictions russell paradox 
generally accepted contradiction occurs definition carve subset set formalized schema separation zermelo fraenkel set theory free set fy legitimate 
restrictive comprehension justified conviction subset exists defined 
particular definitions real numbers legitimate quantification real numbers 
example definition upper bound set reals 
ontology course constructivist 
basic form circumventing impredicative definitions restrict comprehension order formulas 
restriction interested due theorem 
order theory theory second order logic comprehension order formulas axioms conservative order formulas order theorem theorem simple proof theorem runs lines 
theorem cut free sequential proof see section 
easy see pi cut free proof order formula pi results pi deleting second order formulas pi essentially proof extension discussed term impredicative due poincar suppose collection sets fail elements legitimate set defined terms quantification range include leading contradictory equivalence real identified dedekind cut defines 
bounded set reals defined fr uses comprehension 
depending exact formulation sequential calculus pi may need slightly repaired yield correct proof fraenkel fn 
attributes cut free proofs paul cohen 
proof theoretic proof depend cut elimination runs follows 
see troelstra details case order arithmetic schema induction 
suppose delta proof order formula 
delta finitely instances comprehension formulas say 
delta converted correct order proof delta interpreting second order quantifier ranging sets defined substitution instances formula delta converted order formula interpretation comprehension schema provable derived formula unchanged interpretation concluding proof 
model theoretic proof daniel leivant section theorem 
theorem 

theorem proved comprehension universal order formulas 
proof 
show induction formula instance comprehension order formulas provable comprehension universal formulas 
suffices treat formulas logical constants 
quantifier free special case universal formula theorem holds trivially 
form induction assumption relations extensional respectively 
applying schema formula obtain desired form proof similar 
suppose form induction assumption relation comprehension universal formula yr obtain desired relation comprehension reduced special cases refined section 
theorem 
finite vocabulary consist order formulas textual subformulas free variables 
finite number instances comprehension instances comprehension formulas derivable 
pairing projection functions available theory comprehension reducible finite number instances 
proof 
consider instances comprehension proof theorem permit derivation comprehension compound formula comprehension components 


ys remains list finitely instances comprehension imply possibly comprehension compound formulas atomic instance comprehension due case set theory novak wang mostowski runs follows 
theorem completeness theorem order logic model 
model extended henkin model theorem model theoretic proof disadvantage providing effective method converting proof proof theorem proof belong folklore subject second order arithmetic 
idea proof due von neumann see section application 
higher order logic 

relation constant 
function constant 
gamma 


injective pairing function delta deltai coding tuples arities available suffices instances provided add instance comprehension permits going back forth pairs coded pairs hx yi hx yi comprehension restricted order formulas conservative order logic theorem restriction extreme measure avoiding impredicativity 
underlying idea restriction iterated 
stipulate relations fall levels base level consisting relations definition involves relational quantification order definable relations 
level consists sets definition may quantification sets base level 
eliminates circularity set fn set variable ranges sets level range excludes level idea abstraction levels goes back ramified type theory russell whitehead russell purpose precisely circumvent naive set theory 
mathematical logical philosophical development notably predicative development analysis see set theory outline resulting formalisms 
simplest manifestation idea properties predicative variant second order logic finitely ramified second order logic church posits variables ary relations level 
intended semantics defined inductively intertwined syntax language 
structure universe consist relations definable formula variables level interpreted ranging say formula predicative second order logic see hazen survey ramified type theories 
see quine quine wang wang daniel leivant true structure true variables interpreted ranging defining ramified form finite order logic slightly delicate requires levels types 
types defined follows type level type individuals types levels respectively type level 
idea collective objects certain level level just case quantification collection 
leveled type posit unbounded supply variables intended range objects type level formula defined smallest number larger levels bound variables levels free variables 
construction levels extended transfinite ordinals limit ordinals union lower levels leveled type union 
predicative nature ordinals issue purely logical nature language intended interpretation increasingly question 
hand conceptual grounds hard defend stopping ramified type hierarchy particular level 
comment uneasy balance section 
interesting issue ontological status practical interest ramified higher order logics 
philosophers argued importance formalisms noted technical machinery ramified higher order logic stronger plain order logic differentiating structures structures satisfy order sentences vocabulary satisfy sentences ramified finite order logic 
notwithstanding similarity expressive power low levels ramified second order logic far greater order logic consequently ramified second order theories certain structures complex corresponding order theories 
important case hand systems predicative analysis section ramified second order theory natural numbers 
particular truth definition order arithmetic obtained quantification order definable relations lowest level particular propositional types 
promoters ramified higher order logic hacking hazen hacking hazen hazen observation due follows fact ramified higher order logic satisfies conditions om theorem section compactness downward skolem lowenheim leblanc equivalent sense considered order logic 
higher order logic ramified hierarchy relations 
interesting example expressive power ramified higher order logic particular structures interpretability robinson arithmetic undecidable theory level ramified second order theory dense linear orders hazen ought contrasted order theory dense linear orders decidable 
mathematical practice mathematics replete second order notions images 
order considerable costs conceptual technical 
jon barwise referred gulf order logic mathematical practice words logicians subject convincing logic order convincing concepts modern mathematics really captured order logic barwise detailed compendium important higher order constructions mathematical practice scope survey 
propose consider general issue second order axioms versus order schemas principles induction replacement 
briefly comment second order aspects set theory analysis describe speed proofs higher order means 
shall consider important uses higher order constructs various fields geometry algebra topology recursive function theory 
second order axioms vs order schemas central mathematical principles inherently second order commonly approximated order logic axiom schemas templates infinite collection formulas 
important examples analogous construction truth definitions section 
state set contains pair prenex disjunctive normal form true valuation coded eq val val eq val val disj conj univ nt inst nt inst conj additional primitive recursive functions code conjunction existential quantification operations 
prenex disjunctive normal formula true iff xt existential quantifier ranges arithmetic predicates 
daniel leivant induction schema order arithmetic replacement schema set theory 
schema induction implied comprehension second order formula xn 
order axiomatizations arithmetic peano arithmetic pa single second order axiom xn replaced order specializations 
clearly ideal rendition xn intended statement 
believes correctness instances induction believes second order axiom basis examination individual instances 
rendition induction schema sensitive variation language language expands collection instances induction 
related observations apply principle transfinite induction founded relations 
foundedness binary relation expressed wf df 
contrapositive scope comprehension obtain transfinite induction ti df order arithmetic wf ti expressed directly 
says pa proves transfinite induction numeric relation means specialization ti order formula ti df provable 
second example schema replacement 
common zermelo fraenkel axiomatization set theory finite number axioms plus replacement schema due fraenkel order formula language defines graph class restriction set mapping maps set abbreviates result simultaneously substituting free occurrences 
related issues discussed kreisel write distinct variables higher order logic practical interest theories peano arithmetic zfc axiomatizability finite number axioms schemas 
finitely axiomatizable soon second order quantification allowed theorem 
order theory axiomatized axioms ff ff order instances axiom schema oe 
theory second order logic comprehension order formulas finitely axioms ff ff roe 
conservative proof straightforward theorem 
special cases theorem second order arithmetic second order induction axiom order respectively recursive comprehension conservative order arithmetic respectively primitive recursive arithmetic 
similarly zf second order logic replacement formulated second order axiom comprehension order formulas conservative zf 
contrasted non finite axiomatizability corresponding order theories lemma 
kreisel kreisel levy order theory proves cut elimination order logic suitable coding syntax provable truth definition formulas complexity proves induction formulas language interpreted form 
finitely axiomatizable 
proof sketch 
ff ff formulas vocabulary hand 
formula complexity ff delta delta delta ff 
cut elimination provable coding proves ff delta delta delta ff provable proof pi formulas complexity 
formulas truth definition 
induction respect length pi truth definition proves formulas deduced ff ff true 
axiomatized ff ff proved reflection contradicting godel incompleteness theorem 
shown pa zf satisfy conditions lemma finitely axiomatizable order syntactic parameter substituted formula 
theorem generalizes trivially number schemas case schemas restricted particular class order formulas schemas existential formulas comprehension restricted daniel leivant 
proof shows takes second order arithmetic order comprehension induction schema formulas language resulting theory conservative order arithmetic 
similarly second order zf induction schema transfinite induction second order formulas conservative zf 
higher order aspects set theory higher order order back primacy order logic foundational studies justified central properties order logic completeness order axiomatizability classes algebraic structures 
qualities limited relevance mathematics canonical structures natural numbers 
hand complete axiomatization quantifier free number theoretic formulas true standard model 
hand mathematics natural numbers extensive uses higher order objects analytic number theory 
wonders widespread insistence avoiding direct higher order constructs justified 
source insistence paradoxically acceptance higher order constructs generic process iterated 
whitehead russell renowned principia mathematicae whitehead russell developed mathematics time basis variant finite order logic ramified type theory attempt reduce mathematics logic 
problem formalizing mathematics ramified type theory underlying concepts may viewed extension 
iterating power set construction transfinite levels gets cumulative universe sets basic universe basic uninterpreted objects ff df ff ordinal ff df limit ordinals itera non finite axiomatizability order arithmetic proved rabin argument somewhat analogous levy show schema replacement axiomatized finite number instances 
formula language zf zf proves suitable instance replacement large set true iff relativized true see levy follows zf proves consistency finitely axiomatizable subtheory zf 
see cohen section ii exposition 
discussion section follows methods analytic number theories re coded peano arithmetic methods amenable coding coding done considerable cost expository naturalness 
principia claim reduced mathematical axioms logical principles saying taken tacitly explicitly axioms unnecessary whitehead russell quoted andrews 
higher order logic tion tantamount viewing power set operation mathematical logical operation particular captured syntax 
natural technically attractive levels leading various order theories universe ff ordinal ff membership relation zf best known 
primacy order logic logical calculus adoption set theory universal formalization mathematics conceptually historically intertwined 
telling second order versions zf re emerged interest frameworks formalizing set theory parts mathematics relevant meta theory set theory 
motivation extensions fundamental conflict importance comprehension intuitive understanding concept set exclusion comprehension zf avoid set theoretic paradoxes 
compromise achieved zf weaken comprehension principle separation set formula language zf set fx 
main rationale second order set theories permit arbitrary collections unmanageable size 
intended order objects theories sets second order sets unary relations range broader collection classes 
set class comprehension 
classes fx xg sets dubbed proper classes 
order second order objects classes sets customary refer second order extensions zf related theories theories classes notation ambiguously order membership relation sets relational application viewed observed kreisel feferman see feferman transfinite iteration type hierarchy barely connection actual development mathematical analysis practice restricted small finite types 
exceptions transfinite types prove determinacy borel games see martin detailed survey issues section ii fraenkel famous quote informal definition set cantor creator set theory set collection definite distinct objects intuition thought cantor principle separation called subset axiom 
zermelo original phrase axiom der literally axiom 
weakening comprehension facet doctrine size paradoxes due presence sets unmanageable size 
radical critique comprehension underlies theory semi sets vop precisely extensional class 
daniel leivant class 
theories classes variants second order zf comprehension restricted order formulas variants full comprehension 
group belong formalisms von neumann bernays godel mostowski style godel second order character theory masked theory rephrased order theory classes notion set definable set iff class comprehension restricted formulas quantifiers bounded sets 
denote gbn theories group 
theorem theories gbn conservative zf 
theorems gbn finitely axiomatizable second order theories capturing schemas subset replacement single axioms order theories capturing comprehension finite number instances thereof 
similar statements apply analogous second order extensions order set theories zf replacement zfc zf plus axiom choice 
note gbn may state principle global choice asserting existence class acting global choice function sets universe yi 
main group theories classes consisting variants second order zf full comprehension includes theories wang quine tarski kelley morse denote km theories group 
km theories particularly attractive actual formalization branches mathematics strong set theoretic component notably point set topology kelley category theory 
relation km zf analogous relation full analysis order arithmetic km proves reflection zf conservative extension thereof 
argument similar proof lemma shows km finitely axiomatizable 
higher order logic impacted development set theory notably concerning status strong infinity axioms 
important results inspired montague evy reflection principle levy posits formula true universe sets true relativized universe cu exception bernays relation denoted xja 
axiom conservative gbn choice order formulas provable easton km theory axiomatized finite number theorems km km proves reflection km km finitely axiomatizable 
reflection km provable assuming existence cardinal levy consistency km reducible consistency zf exists inaccessible cardinal fraenkel higher order logic hierarchy ff true cardinal ff 
principle axiom schema powerful extension km due bernays various forms principle imply existence larger cardinals including measurable cardinals clear justification basis order closure conditions 
analysis reductive proof theory ubiquitous presence infinite constructions analysis early confusion inference rules governing main motivations efforts late th century formalize analysis leading adoption second order arithmetic canonical formalism influential monograph hilbert bernays formalization mathematics discussion set theory middle third century logicians notably kreisel feferman consistently argued direct formalization second order arithmetic 
logic interest second higher order arithmetic stimulated emergence recursion theory higher types closely related higher order arithmetic language methods results 
study higher order arithmetic stimulated continued interest predicative mathematics formulation fundamentally related second order arithmetic 
program aims examining development analysis predicative forms principles forms justified basis metamathematical analysis 
main issues addressed delineate formalisms predicative nature brought clearly see textbook development set theory bernays axioms 
applications form existence measurable cardinals provable bernays theory solovay provable natural extension theory allowing hyper classes marshall example linking second order logic higher cardinals number second order logic 
logic sentence largest cardinality model cardinality exist number supremum defined cardinals 
sentence model size models arbitrarily large size 
barwise barwise showed number second order logic proved exist replacement formula uses universal quantification sets universe 
poincar summarized achievement congress mathematicians today remain analysis integers finite infinite systems sets integers mathematics may say today absolute rigor achieved poincar quoted fraenkel 
see feferman broad informative survey development mathematical analysis finite order logic 
see moschovakis survey 
daniel leivant classify proof theoretic strength reduce seemingly impredicative methods predicative ones justify predicative means identify parts analysis formalized various predicative calculi 
formalisms predicative analysis defined organizing principles notably ramified analysis levels going fixed justified ordinal ramified analysis levels ordering justified theory analysis weak comprehension extended transfinite induction justified orderings weak set existence principles theories iterated comprehension theories iterated inductive definitions 
simple prove instructive classification results proof theoretic strength theories examples observations second order arithmetic comprehension induction order arithmetical formulas conservative peano arithmetic zermelo set theory power set axiom mutually interpretable peano arithmetic 
predicative acceptability ordering intertwined definition predicative formalism 
achieved feferman system ir alternating justification new orderings transfinite induction leading closure ordinal gamma identified schutte 
see feferman feferman schutte schutte oe binary relation natural numbers infinite descending chain oe order isomorphic countable ordinal transfinite induction oe schema field oe oe 
field 
see schutte schutte schwichtenberg theories 
predicative status set existence principles clear cut particular weak principles usually viewed obvious notably comprehension arithmetic order formulas level ramified hierarchy weak konig lemma states binary tree arbitrarily long branches infinite branch 
easily seen arithmetic comprehension equivalent axiom transfinite induction dubbed bar induction wf ti wf states founded binary relation ti transfinite induction unary predicate 
see feferman section proof 
example theory atr arithmetical transfinite recursion permits definition functions sets recursion arithmetic predicate 
see friedman simpson simpson detailed expositions 
note principle schema arithmetic instances principle implication form binary relation ordering transfinite recurrence respect arithmetic formula allowed 
see buchholz definitions paradigm predicative bottomup construction subsets intuitionistic theories iterated inductive definitions introduced kreisel detailed account theories buchholz predicative formalisms may proof theoretic power measured provable orderings differ substantially ability capture mathematical practice 
higher order logic second projects listed predicative justification seemingly impredicative methods 
early famous example failed attempt kind hilbert program called securing mathematics showing methods theorems analysis true 
godel incompleteness theorems imply goal far ambitious mathematics prove reflection provability mathematics 
extensive proof theoretic resulted reductions seemingly impredicative methods analysis constructive ones 
third project explicit development analysis predicative theories calibration constructivity level particular mathematical results 
early example development analysis arithmetic comprehension weyl notes virtually turn century analysis hilbert bernays formalized second order arithmetic pi comprehension induction pi formulas expect reductionist program outlined analysis carried formalisms weak conservative peano arithmetic see friedman friedman 
calibrate degree particular theorems shows theorem consequence principle predicative analysis fact equivalent principle 
project initiated friedman pursued technical terms formalize mathematics part mathematics deals concrete objects particular natural numbers 
related adage famous saying kronecker god created integers man imagination 
usually taken primitive recursive arithmetic 
prove mathematics reflection provability quantifier free formulas second order arithmetic 
important examples consistency proof full classical analysis higher order recursive functionals defined bar induction spector 
respect pi formulas choice sigma formulas conservative comprehension delta conservative theory iterated inductive pi definitions length ffl friedman buchholz 
respect pi formulas choice sigma formulas conservative comprehension delta conservative ramified analysis levels ffl friedman delta sets definable natural transfinite extension arithmetical hierarchy kleene providing constructive justification 
weak konig lemma conservative respect pi formulas second order arithmetic recursive comprehension sigma induction weaker alternative versions result proved friedman particular proof theoretic reduction weak konig lemma primitive recursive arithmetic general nature surveys related contained kreisel kreisel kreisel feferman buchholz simpson exposition modern parts analysis lines zahn daniel leivant simpson students known reverse mathematics 
turns great theorems analysis equivalent principles increasing proof theoretic strength weak konig lemma comprehension arithmetic formulas arithmetic transfinite recursion atr see comprehension pi formulas 
project dual delineating predicative nature theorems analysis consists identifying theorems natural numbers concrete nature essentially impredicative predicative proof 
speed speed formalisms discussions suggest higher order logic number set theories epistemologically honest methodologically cleaner restrictive order schemas 
natural question extensions logic result gain length proofs 
notion proof speed quite general depends yardstick measure proofs 
definition refers proof calculi theories set theorems formalism theorems axioms theorem line proof meaningful speedup impossible 
important restrict attention natural formalisms suitably simple set axiom 
equivalence theorems axioms noted old theme 
dedekind showed major theorems analysis equivalent topological completeness reals dedekind known compendium theorems mathematics equivalent axiom choice rubin rubin see simpson survey reverse mathematics project 
seminal papers project friedman friedman steel key papers friedman friedman simpson simpson brown simpson equivalences proved weak base theory comprehension induction allowed recursive predicates 
godel incompleteness theorem consistency second order arithmetic pi sentence proved second order arithmetic predicative methods 
consistency sentences coded metamathematical statements combinatorial concrete nature evident 
better examples atr kruskal theorem tree embeddings extended form kruskal theorem analysis comprehension induction pi formulas 
detailed survey results simpson seminal combinatorial statements independent peano arithmetic paris harrington kruskal theorem asserts infinite sequence finite trees occur tree previous tree list embedded 
friedman showed theorem pi finite form thereof provable atr results extended form kruskal theorem friedman usually requires set axioms finite generated finite number higher order logic measure proof definition speed counting number steps lines number symbols 
refer proof length size respectively 
essential difference proofs length size finitely proofs size infinitely length 
derivable denote respectively smallest proof length respectively size 
theorems formalism theorems formalism unary numeric function say proof length speed factor infinite set phi theorems phi 
definition proof size speed analogous 
infinite set phi theorems fixed phi values phi exceed bound say unbounded proof length speed speed resulting increasingly higher order constructs observed related somewhat different realms theories arithmetic generally theories particular structure syntactic machinery coded pure logics 
review results 
proof size speed higher order arithmetic simplest setting proof size speed order arithmetic order arithmetic respect order theorems 
pa order peano arithmetic pa order theory axiomatized peano axioms theta induction comprehension formulas language 
choice logical rules matters little customary hilbert style natural deduction sequential calculi 
theorem 
sound extensions pa proves reflection computable total function proof size speedup factor particular pa proof size speedup pa factor proof 
df delta 
total recursive function godel diagonalization method pi formula free variable schemas 
number formulas annotated formulas sequents depending formalism hand 
analogous definition proof size interest finitely formulas proofs size infinite phi phi 
see section daniel leivant equivalence suitably coded provable pa computes df proof size formula true false output proof size theorems true true contradiction 
reflection provable argument formalizable 
df 
derivable single step proof size constant uniform size proof 
theorem fact pa total calculation verified pa pa proved output 
reasoning fact proof size calculation verifiable pa pa proves equivalence defining 
equivalence proved pa conclude follows pa proves true formula proof size 
proved proof size provable proof size proof size proves theorem 
proofs theorem mostowski ehrenfeucht buss proof phi consists independently interesting formulas con con coded form statement pa proof size 
contrast theorem size speed second order arithmetic arithmetic comprehension order arithmetic polynomial 
note speed universal formulas 
existential theorems speedup order arithmetic order arithmetic somewhat tame theorem 
sound extensions pa proves reflection provably recursive function proof size speed factor sigma theorems 
follows proof troelstra arithmetic case theorem mentioned footnote 
proof sketch strictly increasing provably recursive function delta proof existential sentence size true 
exists proves reflection higher order logic theorem extend speed arbitrary recursive functions theorem 
sound extension pa prove reflection proof size speed pa factor sigma sentences provably recursive function proof 
function input returns longest quantifier free proof sigma sentence proof size provably total proof length speed higher order arithmetic earliest statement proof speed announced proof godel recursive function pa proof length speed pa factor substantially improved buss theorem 
pa unbounded speed pa speed pi formulas 
formulas speed obtained generated follows 
formula proof pa length provable pa considers formulas 
speed higher order logic speed results number theories translate analogous results logical formalisms speed ups refer formulas combinatorial complexity pa exceeds expressive capability pure order logic 
higher order logics witnesses true sigma sentences extracted effectively number proofs proofs size function provable pa provably recursive 
kleene computation predicate kleene primitive recursive result extracting function codes algorithms respectively 
say proof size formula df delta proof size constant 
represented formula pa coefficient note unique value matrix true 
delta derivation size definition 
strictly increasing implies sufficiently large assuming loss generality non decreasing 
buss theorem applies formalizations higher order arithmetic weakly schematic axiom tautology universal closures tautology instance finitely schemas 
parikh parikh parikh gave proof theorem speed pa pa extended speedup pa pa proofs refer formalizations addition multiplication ternary relations 
daniel leivant tame speed order logic higher order number theories order arithmetic 
natural deduction formalism order logic described section 
observe proof size speed factors fast growing theorem 
provably recursive function third order arithmetic 
proof sketch 
third order arithmetic proves theorem second order logic valid structures 
completeness theorem order logic provable second order arithmetic follows third order arithmetic proves order theorem second order logic provable algorithm provable third order arithmetic input enumerate proofs size search order proof theorem encountered take maximum size proofs 
consequently case proof size speed factor analogous result proof length due statman theorem 
provably recursive function third order arithmetic order formulas 
consequently proof length speed factor contrast situation higher order number theories higher order logic second order logic negligible effect proof length speed order theorems 
proof easy application theorem proof theorem 
linear functions order 

second order theorems converse true order arithmetic formulas expressible second order formulas follows theorems second order formulas speed recursive factor unbounded speedup 
extension equality rules atomic formulas 
speed results stated logics hold equally logics theorem proved statman sections proof yields provably recursive function third order arithmetic proof formalizable third order arithmetic 
higher order logic theorems indicate limits possible speedup higher order logic second order logic formidable speed order logic theorem 
provably recursive function second order arithmetic proof size speed factor proof similar proof theorem 
higher order logic relation computing programming propose briefly comment higher order logic fundamental relations computing programming higher order data computational nature natural deduction higher order logic higher order logic meta theory formal systems relations second higher order logic computational complexity 
selection intended give idea kinds interactions higher order logic computer science suggest topics lesser importance interest 
notable omission legion uses higher order computer science relation logic direct 
higher order data types higher order functions form procedures core higher level programming language applicative 
assembly languages computation data input output restricted finite stored information modern high level languages assigned inception increasing role programming constructs manipulate conceptual entities modules procedures types 
landmark advance procedure definition facility algol descendents ada entire type structure finite order logic reynolds reynolds captured example simply typed lambda calculus 
explicit infinitely types syntax language appeared absence induction inconsequential second order arithmetic interpretable considers 
proof proceeds proving second order formula 
functional languages lisp scheme ml lambda notation integrated syntax programming language type hierarchy implicit programming style lisp scheme explicit language ml 
extensions logic programming higher order abstraction developed implemented 
see mycroft nadathur miller nadathur miller miller lakshman reddy particular nadathur miller topics covered miller handbook 
daniel leivant algol 
complex programming concepts related type hierarchy abstraction types include inheritance related constructs coercion subtyping type intersection developed notably relation object oriented programming languages 
types explicitly integrated syntax programming languages clear applying various forms abstraction types natural useful 
types notations functional behaviour data objects enforcing compiletime type checking data 
interplay roles involved computationally semantically 
guise abstraction types depend objects type numeric arrays length 
kind abstraction underlies type martin lof automath family languages bruijn form abstraction types polymorphism underlies weak form programming language ml 
just functional type hierarchy captured mathematically simply typed lambda calculus polymorphism captured second order lambda calculus invented independently girard reynolds girard reynolds interest discussion outline essentials second order lambda calculus 
simply typed calculus single term representing constructions basic identity function type distinct identity function parametrize terms respect types variable ranging types term template identity functions 
abstracted syntax term definite meaning passed argument terms 
achieve introduces type abstraction construct polymorphic identity function defined collection types enriched accordingly construct declared type term type form oe applied type john reynolds personal communication writes faults algol represents realization computer scientist typed higher order programming language infinite number types type structure part syntax language described schematically 
instance type intersection discipline coppo dezani ciancaglini incorporated programming language forsythe reynolds inheritance cardelli cardelli cardelli longo see scedrov survey 
model theory second order lambda calculus fascinating albeit complex story 
see scedrov gunter chapter general expositions pointers technical literature 
optional type indicate type associated variable 
higher order logic yield term type oe 
example term type uses form fi reduction types reduces example reduces polymorphic identity function specific identities recovered type application fi reduction types 
forms abstraction types respect objects respect types merged calculus construction coquand coquand huet coquand huet construct involving type abstraction recursion operator types permits user defined types 
definable construct theory construction just fixpoint operator definable second order logic 
interested reader find thorough survey types programming languages mitchell typed lambda calculi barendregt development higher order data confined programming languages 
database theory growing realization database applications functions relations simple objects describe order languages mild extensions thereof complex hierarchical objects formalization natural finite order logic 
familiar example hierarchical structure files directories unix operating system 
objects referred complex resulting databases complex object databases 
database calculi refer definition queries objects algebraic logical operations 
algebraic development complex object databases uses basic operations sets 
assumes collection primitive sets defines new sets operations intersection power set union elements projection 
alternative development uses simply sets defined explicitly formulas suitable variant finite order logic vocabulary extended additional primitives desired 
approaches suitably developed turn equivalent 
free oe usual sense 
idea programming higher order relations new 
rich theory recursion higher types aside higher order objects database theory probably due related uses higher order relations general purpose programming language setl types dubbed sorts complex object database taken simple higher order relational types built cartesian products attributes labels 
assumes collection basic types collection attributes 
type type types distinct attributes type 
type collection objects type defined induction ud assumed consists finite subsets tuples pairs abiteboul beeri kuper vardi result essentially daniel leivant computational nature higher order natural deduction launching combinatory logic discovered basic inferences logic fact simple functional nature analogy elaborated curry curry feys rediscovered howard form natural deduction proofs howard duality reveals fundamental unity operational aspects logic functional programming particularly extended higher order forms abstractions dependent types martin lof type theory martin lof martin lof finite order quantification girard system 
girard 
notably implementation underlies sofware systems constructing typed functional programs specifications higher order logic proofs specifications solutions 
systems include prl project constable martin lof calculus constructions mentioned paulin mohring paulin mohring importance describe simplest non trivial case duality minimal second order propositional logic girard reynolds second order lambda calculus described 
consider minimal second order propositional logic ml compare section implication universal quantification propositions logical constants 
natural deduction calculus ml inference rules delta delta delta occurrences closed free assumptions define mapping derivations calculus terms second order lambda calculus follows 
identifiers extension finite order logic algebraic development order logic due tarski henkin survey related advances abiteboul kanellakis seminal computability higher order objects dahlhaus details applications mapping see example girard leivant higher order logic relational variables second order propositional logic type variables second order lambda calculus 
convention results complete syntactic identity formulas logic types lambda calculus 
maps derivation pi formula open assumption expression pi type free variables types pi pi df open assumption labelled variable type pi delta pi df delta pi delta theta pi df delta theta pi delta pi df delta pi delta pi df delta clearly pi derives pi type free variables types respectively 
mapping reveals reading derivations terms shows computational behavior derivations canonical detour elimination transformations section identical computational behavior corresponding terms fi reductions objects types daniel leivant reduction delta theta theta delta mapped fi reduction delta theta theta delta reduction delta delta mapped fi reduction types delta delta 
higher order logic meta theory formal systems proponents order formalization mathematics address plain fact mathematical constructions deductions higher order 
common response full formalization mathematics event mere idealization carried practice full detail 
argument shattered presence computers 
possible store organize verify retrieve fully formalized mathematical texts 
possible store manipulate completely formalized proofs automatically generate proofs 
initially research automated theorem proving enforced primacy order logic methods resolution paramodulation complete 
andrews students shown automated theorem proving naturally extended higher order logic andrews miller extension linked generalization order higher order major syntactic theorems order logic cut elimination normalization takahashi girard prawitz resolution andrews skolemization miller unification huet herbrand theorem miller natural description mathematics higher order logic higher order theorem proving led quite ground breaking automath family languages bruijn designed medium computerized compendium mathematics higher order logic 
see gould jensen petersson early higher order theorem proving robinson higher order logic rapid advances development user friendly interactive software environments higher order logic fully formalized development mathematics constable felty miller felty dowek dowek challenging extension user friendly automated manipulation mathematical manipulation programming field dubbed meta programming 
denotational semantics basic constructs iteration recursion higher order constructs 
formalisms referred logical frameworks proposed represent formally syntax semantics programs formal rules manipulating verifying programs 
higher order constructs extensively 
higher order logic computational complexity machine independent characterizations computational complexity classes lend credence importance provide insight nature relate issues relevant programming methodology program verification suggest new tools separating complexity classes offer concepts methods generalizing computational complexity computing arbitrary structures higher type functionals 
types characterizations relate computational complexity abstraction level higher order higher order database queries global methods finite model theory function provability higher order logics 
query global relation collection structures vocabulary ary query map structure assigns ary relation universe jsj example vg consists binary relation constant ae transitive closure query assigns vg structure transitive closure ae formula list variables denotational semantics grown course broad central field theoretical computer science 
seminal scott strachey expositions include survey mosses textbooks tennent gunter key papers felty miller harper huet lang hannan miller hannan miller howe harper huet knoblock constable lee paulson pfenning pfenning weber notion formula determines process uniformly delineates subsets structures implicit early formalizations set theory instance frege comprehension principle particular fraenkel skolem axiom replacement 
relation collections order structures notion tarski tarski definition barwise moschovakis phrase data base queries chandra harel terms include global relation gurevich generalized relations referring barwise moschovakis global predicates blass gurevich uniformly defined relations predicate leivant predicate oracles cai furst daniel leivant include variables free defines query assigns structure extension collection jsj 
similarly computation device structures uninterpreted program scheme defines query acceptor 
compare expressive power descriptive computational means class phi formulas characterizes computational complexity class queries computable finite structures algorithms exactly ones definable formulas phi 
framework drawn immediately higher order formulas simple queries transitive closure order definable aho ullman higher order constructs yields surprising array descriptive characterizations computational complexity particular structures order 
results fall organizing principles syntactic classes higher order formulas variants fixpoint constructs 
seminal result fagin jones selman proved query ordered finite structures defined program running nondeterministic polynomial time np iff defined purely existential second order formula 
immediately follows problem definable second order formula iff polynomial time hierarchy 
characterizations complexity classes np deterministic polynomial time non deterministic log space nl obtained terms universal second order formulas natural restrictions matrix 
dually classes broader np characterized terms higher order formulas yield characterizations poly space exponential time third order logic 
limit queries definable full finite order logic precisely ones computable elementary resources time space fold exponential size input leivant seminal result characterization complexity classes terms fixpoint queries states query ordered finite structures iff definable logic fo order logic monotone fixpoint operation see section immerman vardi natural fixpoint construct finite structure non inflationary fixpoint abiteboul showed section somewhat easier theorem transitive closure order definable considering structures finite ones 
preparatory coding turing machine input enable machine recognize properties structure parity size recognized descriptively 
role played order finite structures greatly clarified see abiteboul theorem stated fagin 
jones selman proved similar closely related result order spectra precisely sets computable cn input binary 
proof methods fagin jones selman similar 
higher order logic vianu phi operator ary relations phi phi smallest number phi phi 
queries definable order logic extended exactly ones computable polynomial space abiteboul vianu nondeterministic variants fixpoints yield characterization queries computable exponential time additional characterization poly space np abiteboul method logical characterization computational complexity classes uses proof theory deductive machinery logic descriptive machinery outlined 
proof theoretic characterization particular conceptual interest proof principles codify directly conceptual abstraction natural medium exploring articulating foundational justification linking complexity classes specific forms conceptual abstraction 
proof theoretic characterizations classes computable functions follow pattern 
formalism language provides natural rendition statements form program converges input associates class computable functions exists program proves converge input 
second order logic special interest comprehension natural yardstick calibrating degrees abstraction theorem function convergence stated second order logics functions predicates 
formalism second order logic say notations basic facts sections function free algebra provable iff computed coherent equational program class phi formulas phi second order logic comprehension formulas phi 
definition obtains spectrum characterization results complexity classes calibrate computational complexity classes terms abstraction levels measured comprehension 
interpretation second order arithmetic second order logic section implies provable functions second order formulas precisely provably recursive functions second order arithmetic 
characterizations fall spectra include characterizations nondeterministic log space immerman blass gurevich poly time immerman exponential time immerman recall reverse mathematics program described section 
simple method dealing peano third fourth axioms leivant daniel leivant comprehension computational strict pi see section formulas obtains exactly functions defined recurrence finite type leivant leivant comprehension order formulas yields exactly elementary functions 
characterization comprehension complexity classes practical interest possible 
functions computable deterministic polynomial time exactly functions provable comprehension positive existential formulas 
significance characterizations discussed leivant leivant acknowledgments am greatly indebted detailed feedback early drafts chapter sam buss kees doets jean yves marion dale miller moschovakis alan mycroft frank pfenning john reynolds stewart shapiro 
sincere gratitude goes jon barwise andr david harel marcin mostowski larry moss steve simpson takeuti jeff zucker useful comments advice 
shortcomings chapter surely legion course entirely responsibility 
abiteboul beeri abiteboul beeri 
power languages manipulating complex objects 
research report inria 
abiteboul kanellakis abiteboul kanellakis 
database theory column query languages complex object databases 
sigact news 
abiteboul vianu abiteboul vianu 
fixpoint extensions order logic datalog languages 
proceedings fourth annual symposium logic computer science pages washington 
ieee computer society press 
provably recursive functions peano arithmetic 
precisely free algebra function computable resources exactly ones provable second order logic order comprehension 
contrasted order definable queries class strictly contained nl immerman comprehension positive quantifier free formulas yields class 
formula positive contains negation implication 
notion provability slight variant defined comprehension drastically limited different second order renditions difference equivalence longer proved 
higher order logic abiteboul abiteboul vardi vianu 
fixpoint logics relational machines computational complexity 
proceedings seventh ieee conference structure computational complexity 
aczel mendler aczel mendler 
final coalgebra theorem 
pitt rydeheard pitts poign editors proceedings conference category theory computer science volume lncs pages 
springer verlag berlin 
aczel aczel 
inductive definitions 
barwise editor handbook mathematical logic pages 
northholland amsterdam 
aho ullman aho ullman 
universality data retrieval languages 
sixth symposium principles programming languages pages 
ajtai gurevich ajtai gurevich 
monotone versus positive 
journal acm 
ajtai ajtai 
isomorphism second order equivalence 
annals mathematical logic 

undecidability second order predicate unification problem 
archive mathematical logic 
andrews andrews miller cohen pfenning 
automating higher order logic 
contemporary mathematics 
andrews andrews 
transfinite type theory type variables 
north holland amsterdam 
andrews andrews 
resolution type theory 
journal symbolic logic 
andrews andrews 
general models extensionality 
journal symbolic logic 
andrews andrews 
general models descriptions choice type theory 
journal symbolic logic 
andrews andrews 
mathematical logic type theory truth proof 
academic press new york 
barendregt barendregt 
lambda calculi types 
gabbay maibaum editors handbook logic computer science volume 
oxford university press 
barwise moschovakis barwise moschovakis 
global inductive definability 
journal symbolic logic 
barwise barwise 
applications strict predicates infinitary logic 
journal symbolic logic 
daniel leivant barwise barwise 
number second order logic 
journal symbolic logic 
barwise barwise 
admissible sets structures 
springerverlag berlin new york 
barwise barwise editor 
handbook mathematical logic 
north holland amsterdam 
barwise barwise 
branching quantifiers english 
phil 
logic 
barwise barwise 
model theoretic logics background aims 
barwise feferman editors model theoretic logics 
springerverlag new york 

zur algebra der logic und zum entscheidungsproblem 
math 
ann 
benthem doets van benthem doets 
higher order logic 
gabbay guenthner editors handbook philosophical logic volume pages 
reidel dordrecht 
bernays bernays 
system axiomatic set theory 
journal symbolic logic 
bernays bernays 
axiomatic set theory 
north holland amsterdam 
bernays bernays 
problem schemata infinity axiomatic set theory 
muller editor sets classes pages 
north holland amsterdam 
blass gurevich blass gurevich 
henkin quantifiers complete problems 
theoretical computer science 
blass gurevich blass gurevich 
existential fixedpoint logic 
borger editor logic complexity volume lncs pages 
springer verlag berlin 
blass blass gurevich kozen 
zero law logic fixpoint operator 
information control 

second order logic 
philosophy 
brown simpson brown simpson 
set existence theorems needed prove hahn banach theorem separable banach spaces 
annals pure applied logic 
bruijn de bruijn 
survey project automath 
seldin hindley editors curry essays combinatory logic lambda calculus formalism pages 
academic press london 
buchholz buchholz feferman 
iterated inductive definitions subsystems analysis higher order logic proof studies 
volume lnm 
springer verlag berlin 
buss buss 
godel theorems lengths proofs number lines speedup arithmetics 
preprint 
cai furst 
cai furst 
pspace survives bit bottlenecks 
proceedings second annual conference structure complexity pages los angeles 
ieee computer society press 
cantor cantor 
zur der math 
annalen 
cardelli longo cardelli longo 
semantic basis quest 
journal functional programming 
cardelli cardelli 
typeful programming 
park editors formal description programming languages pages 
springer verlag berlin 
chandra harel chandra harel 
computable queries relational data bases 
journal computer system sciences 
chandra harel chandra harel 
structure complexity relational queries 
journal computer system sciences 
preliminary version symposium foundations computer science 
chang keisler chang keisler 
model theory 
north holland amsterdam 

und klassen funktionen 
ph thesis eth zurich 

axiomatic set theory impredicative theories classes 
north holland amsterdam 
church church 
formulation simple theory types 
journal symbolic logic 
church church 
mathematical logic 
princeton university press princeton 
cohen cohen 
set theory continuum hypothesis 
benjamin new york 
compton compton 
laws logic combinatorics 
rival editor nato advanced study inst 
algorithms order pages 
reidel dordrecht 
constable constable implementing mathematics nuprl proof development system 
prentice hall englewood cliffs new jersey 
coppo dezani ciancaglini coppo dezani ciancaglini 
extension basic functionality theory calculus 
notre daniel leivant dame journal formal logic 
coquand huet coquand huet 
constructions higher order proof system mechanizing mathematics 
volume lncs berlin 
springer verlag 
coquand huet coquand huet 
calculus constructions 
information computation 
coquand coquand 
une th eorie des constructions 
ph thesis universit paris vii january 
curry feys curry feys 
combinatory logic 
north holland amsterdam 
dahlhaus dahlhaus 
computable directory queries 
logic computer science new trends applications rend 
sem 
mat 
univ pol 
torino pages turin 
davis davis editor 
undecidable 
raven press new york 
dedekind dedekind 
und zahlen 
braunschweig vieweg 
english translation richard dedekind essays theory numbers continuity irrational numbers 
open court chicago 
dowek dowek felty herbelin huet werner 
coq proof assistant user guide 
technical report inria 
dowek dowek 
automatique dans le calcul des constructions 
ph thesis universit paris vii 

new kinds realizability 
sixth international congress logic methodology philosophy science 

easton easton 
powers regular cardinals 
ph thesis princeton 
revised version annals math 
logic 
ebbinghaus 
ebbinghaus flum thomas 
mathematical logic 
springer verlag berlin 
ehrenfeucht ehrenfeucht 
abbreviating proofs adding new axioms 
bull 
amer 
math 
soc 
enderton enderton 
finite partially ordered quantifiers 

fur math 
logik grundlagen der mathematik 
fagin fagin 
generalized order spectra polynomial time recognizable sets 
karp editor complexity computation pages 
siam ams 
higher order logic fagin fagin 
probability finite models 
journal symbolic logic 
feferman feferman 
systems predicative analysis 
journal symbolic logic 
feferman feferman 
systems predicative analysis ii 
journal symbolic logic 
feferman feferman 
theories finite type related mathematical practice 
barwise pages 

comparison axioms local universal choice 
fundamenta math 
felty miller felty miller 
specifying theorem provers higher order logic programming language 
lusk overbeek editors ninth international conference automated deduction volume lncs pages 
springer verlag berlin 
felty felty 
implementing tactics tacticals higher order programming language 
journal automated reasoning 
fraenkel bar hillel fraenkel bar hillel 
foundations set theory second edition 
north holland amsterdam 
fraenkel fraenkel bar hillel levy 
foundations set theory 
north holland amsterdam second edition 
fraenkel fraenkel 
uber der und die des 

berlin pages 
english translation heijenoort 
friedman friedman mcaloon simpson 
finite combinatorial principles equivalent predicative analysis 
editor logic symposium patras pages 
north holland amsterdam 
friedman friedman simpson smith 
countable algebra set existence axioms 
annals pure applied logic 
friedman friedman 
subsystems set theory analysis 
ph thesis mit 
friedman friedman 
konig lemma weak 
note stanford university 
friedman friedman 
iterated inductive definitions sigma ac 
myhill editor intuitionism proof theory pages 
north holland amsterdam 
friedman friedman 
systems second order arithmetic 
proceedings international congress mathematicians vancouver volume pages 
canadian mathematical congress 
daniel leivant friedman friedman 
systems second order arithmetic restricted induction ii abstracts 
journal symbolic logic 
friedman friedman 
set theoretic foundations constructive analysis 
annals mathematics 
friedman friedman 
classically intuitionistically provable recursive functions 
muller scott editors higher set theory pages 
north holland amsterdam 
friedman friedman 
strong conservative extension peano arithmetic 
kleene symposium pages 
north holland 
friedman friedman 
independence results finite graph theory 
unpublished notes 
friedman friedman 
kruskal theorem 
unpublished notes 
gallier gallier 
girard de 
odifreddi editor logic computer science pages 
academic press london 
girard 
girard lafont taylor 
proofs types 
cambridge university press cambridge 
girard 
girard 
interpr etation fonctionelle elimination des coupures dans arithm etique ordre 
th ese de doctorat etat 
kogan 
range degree realizability formulas restricted predicate calculus 
cybernetics 

reflection principles 
muller editor sets classes pages 
north holland amsterdam 
godel godel 
zur und 
ergebnisse eines mathematischen 
english translation davis pages 
godel godel 
consistency axiom choice general continuum hypothesis volume annals mathematical studies 
princeton university press princeton nj 
goldfarb goldfarb 
undecidability second order unification problem 
theoretical computer science 
gould gould 
matching procedure order logic 
scientific report 
gunter gunter 
semantics programming languages 
mit press cambridge ma 
higher order logic gurevich shelah gurevich shelah 
fixed point extensions order logic 
annals pure applied logic 
gurevich gurevich 
logic tailored computational complexity 
richter editor computation proof theory volume lnm pages 
springer verlag berlin 
gurevich gurevich 
monadic second order theories 
barwise feferman editors model theoretical logics pages 
springer verlag berlin 
gurevich gurevich 
logic challenge computer science 
borger editor current trends theoretical computer science 
computer science press 
guttag guttag 
notes type abstraction 
ieee trans 
software engineering se 
hacking hacking 
logic 
journal philosophy 
hannan miller hannan miller 
enriching metalanguage higher order features 
lloyd editor proceedings workshop meta programming logic programming bristol 
university bristol 
hannan miller hannan miller 
uses higher order unification implementing program transformers 
logic programming proceedings fifth international conference symposium volume pages 
mit press cambridge ma 
harel david harel 
characterizing second order logic order quantifiers 

fur math 
logik grundlagen der mathematik 
harper harper honsell plotkin 
framework defining logics 
symposium logic computer science pages 
ieee computer society press washington 
harper harper sannella tarlecki 
logic representation 
proceedings workshop category theory computer science 
springer verlag berlin 
hazen hazen 
ramified type theories 
gabbay guenthner editors handbook philosophical logic volume reidel dordrecht 
hazen hazen 
entities 
analysis 
hazen hazen 
logical reductions 
preprint october 
department philosophy university melbourne 
hazen hazen 
interpretability robinson arithmetic daniel leivant ramified second order theory dense linear order 
notre dame journal formal logic 
heijenoort van heijenoort 
frege godel source book mathematical logic 
harvard university press cambridge ma 
henkin henkin monk tarski 
cylindric algebras north holland amsterdam 
henkin leon henkin 
completeness theory types 
journal symbolic logic 
henkin henkin 
remarks infinitely long formulas 
methods pages warsaw 
hilbert ackermann hilbert ackermann 
der logik 
springer verlag berlin 
english translation principles mathematical logic 
chelsea new york 
hilbert bernays hilbert bernays 
grundlagen der mathematik ii 
springer verlag berlin 
second edition springerverlag 
hintikka hintikka 
reductions theory types 
acta philosophica 
hitchcock park hitchcock park 
induction rules termination proofs 
proceedings international colloquium automata languages programming pages 
north holland amsterdam 
hodges hodges 
model theory 
cambridge university press 
hopcroft ullman hopcroft ullman 
automata theory languages computation 
addison wesley reading ma 
howard howard 
formulae types notion construction 
seldin hindley editors curry essays combinatory logic lambda calculus formalism pages 
academic press new york 
preliminary manuscript 
howe howe 
computational metatheory nuprl 
lusk overbeek editors ninth international conference automated deduction volume lncs pages 
springer verlag berlin 
huet lang huet lang 
proving applying program transformations expressed second order patterns 
acta informatica 
huet huet 
unification algorithm typed calculus 
theoretical computer science 
higher order logic huet huet 
formal structures computation deduction 
lecture notes carnegie mellon university 
immerman immerman 
relational queries computable polynomial time 
information control 
preliminary report fourteenth acm symposium theory computing pp 

immerman immerman 
languages capture complexity classes 
siam journal computing 
jensen jensen 
mechanizing order type theory unification 
theoretical computer science 
jones selman jones selman 
turing machines spectra order formulas 
journal symbolic logic 
moschovakis moschovakis 
recursion higher types 
barwise 
kelley kelley 
general topology 
van nostrand new york 
kleene kleene 
metamathematics 
groningen 
kleene kleene 
forms predicates theory constructive ordinals second 
amer 
journal math 
knoblock constable knoblock constable 
formalized metareasoning type theory 
annual symposium logic computer science pages cambridge ma 
ieee computer society press 
kolaitis vardi kolaitis vardi 
decision problem probabilities higher order properties 
proceedings nineteenth acm symp 
theory computing pages 
acm new york 
kolaitis vardi kolaitis vardi 
laws infinitary logics 
proceedings fifth ieee symp 
logic computer science pages los alamitos 
ieee computer science press 
kolaitis vardi kolaitis vardi 
laws fragments second order logic overview 
moschovakis editor logic computer science pages 
springer verlag new york 
kolmogorov kolmogorov 
sur le principe de non 
math 
de la soc 
math 
de 
english translation heijenoort 
kozen parikh kozen parikh 
decision procedure daniel leivant propositional calculus 
proc 
workshop logics programs volume lncs pages berlin 
springerverlag 
kozen kozen 
results propositional calculus 
theoretical computer science 
preliminary version proceedings ninth international colloquium automata languages programming july 
kozen kozen 
finite model theorem propositional calculus 
studia logica 
preliminary version technical report ibm rc january 

number steps proofs 
annals pure applied logic 
kreisel krivine kreisel 
krivine 
elements de logique math ematique 
paris 
english translation elements mathematical logic 
north holland amsterdam 
kreisel levy kreisel levy 
reflection principles establishing complexity axiomatic systems 

fur math 
logik grundlagen der mathematik 
kreisel kreisel 
lectures proof theory 
notes stanford university 
kreisel kreisel 
mathematical logic 
editor lectures modern mathematics volume iii pages 
john wiley new york 
kreisel kreisel 
informal rigor completeness proofs 
lakatos editor problems philosophy mathematics pages 
north holland amsterdam 
kreisel kreisel 
survey proof theory 
journal symbolic logic 
kreisel kreisel 
survey proof theory ii 
fenstad editor proceedings second scandinavian logic symposium pages 
north holland amsterdam 
mostowski mostowski 
henkin quantifiers 
editor quantifiers 
kluwer 
kuper vardi kuper vardi 
new approach database logic 
proceedings third acm conference principles database systems pages providence ri 
acm press 
lakshman reddy lakshman reddy 
typed prolog semantic reconstruction mycroft keefe true system 
saraswat editors logic programming proceedings international symposium pages cambridge ma 
mit press 
higher order logic 
decision procedure weak second order theory linear order 
contributions mathematical logic 
northholland amsterdam 
leblanc leblanc 
truth value semantics 
north holland amsterdam 
lee lee 
realistic compiler generator high level semantics 
proceedings fourteenth annual acm symposium principles programming languages pages 
acm press new york 
leivant leivant 
reasoning functional programs complexity classes associated type disciplines 
fourth annual symposium foundations computer science pages 
leivant leivant 
syntactic translations provably recursive functions 
journal symbolic logic 
leivant leivant 
descriptive characterizations computational complexity 
second annual conference structure complexity theory pages washington 
ieee computer society press 
revised journal computer system sciences 
leivant leivant 
computationally set existence principles 
editor logic computation volume contemporary mathematics pages 
american mathematical society providence ri 
leivant leivant 
contracting proofs programs 
odifreddi editor logic computer science pages 
academic press london 
leivant leivant 
inductive definitions finite structures 
information computation 
leivant leivant 
foundational delineation computational 
proceedings sixth ieee conference logic computer science amsterdam washington 
ieee computer society press 
leivant leivant 
semantic characterization number theories 
moschovakis editor logic computer science pages 
springer verlag new york 
leivant leivant 
foundational delineation poly time 
appear information computation 
levy levy 
principles reflection axiomatic set theory 
fundamenta math 
lindstrom lindstrom 
extensions elementary logic 
theoria 
daniel leivant 
relational model process control 
automatic documentation mathematical linguistics 
lob lob 
embedding order predicate logic fragments intuitionistic logic 
journal symbolic logic 
lowenheim lowenheim 
uber im 
math 
ann 

definable sets integers 
journal symbolic logic 

consideration normal form necessarily normalized relation relational data model 
proc 
third symp 
vldb pages 
marshall victoria marshall 
higher order reflection principles 
journal symbolic logic 
martin lof martin lof 
intuitionistic simple type theory 
suppes henkin editors logic methodology philosophy science iv pages amsterdam 
north holland 
martin lof martin lof 
intuitionistic theory types predicative part 
rose shepherdson editors logic colloquium pages amsterdam 
north holland 
martin lof martin lof 
constructive mathematics computer programming 
logic methodology philosophy science vi pages 
north holland amsterdam 
martin martin 
borel determinacy 
annals math 
mendelson mendelson 
mathematical logic 
van nostrand princeton 
miller nadathur miller nadathur 
higher order logic programming 
proceedings third international conference logic programming 
springer verlag berlin 
miller miller nadathur pfenning scedrov 
uniform proofs foundation logic programming 
annals pure applied logic 
miller miller 
proofs higher order logic 
ph thesis carnegie mellon university 
miller miller 
compact representation proofs 
studia logica pages 
miller miller 
logic programming higher order hereditary harrop formulas 
technical report published 
miller miller 
abstractions logic programming 
odifreddi editor logic computer science 
academic press new york 
higher order logic miller miller 
higher order logic programming 
gabbay hogger robinson editors handbook logic artificial intelligence logic programming volume 
oxford university press oxford 
milner tofte milner tofte 
induction relational semantics 
theoretical computer science 
mitchell mitchell 
types systems programming languages 
van leeuwen editor handbook theoretical computer science pages 
north holland amsterdam 
monk monk 
mathematical logic 
springer verlag new york 
montague montague 
reductions higher order logic 
addison henkin tarski editors theory models pages 
north holland amsterdam 
montague montague 
set theory higher order logic 
crossley dummett editors formal systems recursive functions pages 
north holland amsterdam 
morse morse 
theory sets 
academic press new york 
moschovakis moschovakis 
elementary induction structures 
north holland amsterdam 
moschovakis moschovakis 
sense denotation algorithm value 
proceedings asl summer meeting helsinki lecture notes logic 
springer verlag 
appear 
mosses mosses 
denotational semantics 
van leeuwen editor handbook theoretical computer science pages 
north holland amsterdam 
mostowski mostowski 
uber die des vom 
fund 
math 
mostowski mostowski 
impredicative definitions axiomatic set theory 
fundamenta math 
mostowski mostowski 
sentences undecidable formalized arithmetic exposition theory kurt godel 
north holland amsterdam 
mostowski mostowski 
craig interpolation theorem extended systems logic 
van editors proceedings third international conference logic methodology philosophy science pages 
north holland amsterdam 

quantifiers overview 
barwise feferman editors model theoretic logic pages 
northholland amsterdam 
daniel leivant mycroft mycroft 
polymorphic type system prolog 
artificial intelligence pages 
nadathur miller nadathur miller 
overview prolog 
bowen kowalski editors fifth international logic programming conference pages 
mit press cambridge ma 
nadathur miller nadathur miller 
higher order horn clauses 
journal acm 
nadathur nadathur 
higher order logic basis logic programming 
ph thesis university pennsylvania 
neumann von neumann 
eine der 
math 
corrections math 
english translation heijenoort 
novak novak 
construction models consistent systems 
fundamenta math 
parikh parikh 
results length proofs 
trans 
amer 
math 
soc 
parikh parikh 
introductory note 
kurt godel collected works volume pages 
oxford university press oxford 
paris harrington paris harrington 
mathematical incompleteness peano arithmetic 
barwise pp 
park park 
fixpoint induction proof program semantics 
meltzer michie editors machine intelligence pages 
edinburgh university press edinburgh 
paulin mohring paulin mohring 
extracting 
programs proofs calculus constructions 
sixteenth annual symposium principles programming languages pages 
acm press new york 
paulin mohring paulin mohring 
extraction de programmes dans le calcul des constructions 
ph thesis th ese universit de paris vii 
paulson paulson 
logic computation interactive proof cambridge lcf 
cambridge university press 
paulson paulson 
foundation generic theorem prover 
journal automated reasoning 
paulson paulson 
isabelle theorem provers 
odifreddi editor logic computer science pages 
academic press new york 
petersson petersson 
programming system type theory 
technical report department computer science chalmers uni higher order logic versity goteborg 
pfenning pfenning 
implementing meta theory deductive systems 
preprint 
pfenning pfenning 
elf language logic definition verified meta programming 
fourth annual symposium logic computer science pages washington 
ieee computer society press 
pitts pitts 
induction principle recursively defined domains 
theoretical computer science 
appear 
poincar poincar 
du role de intuition de la logique en math ematiques 
du eme congr es int 
des math paris pages 
poincar poincar 
uber transfinite zahlen 
uber aus der reiner mathematik und mathematischen physik pages leipzig 
prawitz prawitz 
natural deduction 
almqvist wiksell uppsala 
prawitz prawitz 
higher order logic 
journal symbolic logic 
prawitz prawitz 
ideas results proof theory 
fenstad editor proceedings second scandinavian logic symposium pages 
north holland amsterdam 
quine quine 
new foundations mathematical logic 
amer 
math 
monthly 
quine quine 
mathematical logic revised edition 
mit press cambridge ma 
edition 
quine quine 
philosophy logic 
prentice hall englewood cliffs nj 
rabin rabin 
non standard models independence induction axiom 
essays foundations mathematics pages 
press jerusalem 
rabin rabin 
decidability second order theories automata infinite trees 
trans 
amer 
math 
soc 
reynolds reynolds 
definitional interpreters higher order programming languages 
proceedings th acm national conference pages new york 
acm press 
reynolds reynolds 
theory type structure 
proc 
colloque sur la programmation volume lncs pages 
springer verlag berlin 
reynolds reynolds 
essence algol 
de bakker van vliet editors algorithmic languages pages 
north holland amsterdam 
daniel leivant reynolds reynolds 
preliminary design programming language forsythe 
technical report cmu cs carnegie mellon university 
robinson robinson 
machine oriented logic resolution principle 
journal acm 
robinson robinson 
mechanizing higher order logic 
machine intelligence 
rogers rogers 
theory recursive functions effective computability 
mcgraw hill new york 
wang wang 
nonstandard models formal logic 
journal symbolic logic 
de 
second order inductive definability finite structures 

math 
logik und grundlagen math 
rubin rubin rubin rubin 
equivalents axiom choice 
north holland amsterdam 
russell russell 
mathematical logic theory types 
amer 
math 

role axiom induction elementary arithmetic 
fundamenta mathematicae 
scedrov scedrov 
guide polymorphic types 
odifreddi editor logic computer science pages 
academic press london 

uber die der mathematischen logik 
mathematische annalen 
english translation building blocks mathematical logic heijenoort 
schutte schutte 
der der 
math 
annalen 
schutte schutte 
der analysis 
math 
annalen 
schutte schutte 

volume grundlagen der mathematischen wissenschaften 
springer verlag berlin 
english translation proof theory springer verlag berlin 
schutte schutte 
syntactic semantic properties simple type theory 
journal symbolic logic 
schutte schutte 
eine fur die der der 
archiv fur math 
logik und 
higher order logic schutte schutte 
predicative orderings 
crossley dummett editors formal systems recursive functions pages 
north holland amsterdam 
schonberg 
programming sets setl 
springer verlag new york 
schwichtenberg schwichtenberg 
proof theory applications cut elimination 
barwise pages 
scott de bakker scott de bakker 
theory programs 
unpublished manuscript 
ibm vienna 
scott strachey scott strachey 
mathematical semantics computer languages 
fox editor computers automata pages 
brooklyn polytechnic institute press 
shapiro shapiro 
foundation case second order logic 
oxford university press oxford 

fragments arithmetic 
annals pure applied logic 

provably recursive functionals theories konig lemma 
rend 
sem 
mat 
univers 

torino 
logic computer science pages 

review simpson journal symbolic logic 
simpson simpson 
sigma pi transfinite induction 
van dalen editor logic colloquium pages 
north holland 
simpson simpson 
set theoretic aspects atr van dalen als editor logic colloquium pages 
north holland 
simpson simpson 
set existence axioms needed prove cauchy peano theorem ordinary differential equations 
journal symbolic logic 
simpson simpson 
friedman research subsystems second order arithmetic 
harrington editor harvey friedman research foundations mathematics pages 
northholland amsterdam 
simpson simpson 
certain combinatorial properties finite trees 
harrington editor harvey friedman research foundations mathematics pages 
north holland amsterdam 
simpson simpson 
subsystems reverse mathematics 
appendix takeuti proof theory pages 
second edition 
north holland amsterdam 
daniel leivant skolem skolem 
uber die des uls und uber und 
vid 
mat nat 
klasse 

incompleteness theorems 
barwise 
solovay solovay reinhardt kanamori 
strong axioms infinity elementary embeddings 
annals math 
logic 
spector spector 
provable recursive functions analysis 
dekker editor recursive function theory volume proceedings symposia pure mathematics pages providence 
american mathematical society 
spencer shelah spencer shelah 
threshold spectra random graphs 
proceedings nineteenth acm symp 
theory computing pages new york 
acm 
spencer spencer 
zero laws variable probability 
journal symbolic logic 
statman statman 
bounds proof search speed predicate calculus 
annals mathematical logic 
steel steel 
subsystems analysis 
ph thesis university california berkeley 
stockmeyer stockmeyer 
complexity decision problems automata theory logic 
technical report mac tr mit cambridge ma 

hacking logic 
journal philosophy 
tait tait 
non constructive proof gentzen second order predicate logic 
bull 
amer 
math 
soc 
takahashi takahashi 
proof cut elimination theorem simple type theory 
journal math 
soc 
japan 
takeuti takeuti 
proof theory 
north holland amsterdam 
tarski tarski 
notions methods borderline algebra metamathematics 
proceedings international congress mathematicians volume pages providence 
american mathematical society 
tennent tennent 
semantics programming languages 
prentice hall englewood cliffs nj 

logic right logic 
synthese 
higher order logic trakhtenbrot trakhtenbrot 
impossibility algorithm decision problem finite domains 
doklady nauk sssr 
russian 
troelstra troelstra 
metamathematical investigation intuitionistic arithmetic analysis 
volume lnm 
springer verlag berlin 
vardi vardi 
complexity relational query languages 
fourteenth symposium theory computing pages 
acm new york 
vop vop 
theory 
north holland amsterdam 

finite partially ordered quantification 
journal symbolic logic 
wang wang 
von neumann axioms set theory 
proc 
academy sciences 
wang wang 
formalization mathematics 
journal symbolic logic 
wang wang 
formal details predicative set theories chapter 
science press 
republished north holland amsterdam 
republished title logic computers sets chelsea new york 
weber weber 
meta calculus formal system development 
oldenbourg verlag munchen 
weyl weyl 
das uber die grundlagen der analysis 
leipzig 
reprinted weyl landau riemann das und andere chelsea new york 
whitehead russell whitehead russell 
principia mathematicae 
cambridge university press second edition 
shapiro 
polymorphically typed logic programs 
pfenning editor types logic programming 
mit press cambridge ma 
zahn zahn 
ein weg zur und 

zermelo zermelo 
untersuchungen uber die grundlagen der math 
annalen 
english translation heijenoort 
zermelo zermelo 
uber und 
fund 
math 
daniel leivant barwise davis heijenoort 
