data mining cidf approach detecting novel distributed intrusions wenke lee rahul kam yee patil desai tran salvatore stolfo department computer science north carolina state university raleigh nc usa wenke csc ncsu edu www csc ncsu edu faculty lee department computer science columbia university new york ny usa sal cs columbia edu 
distributed denial service ddos attacks major internet sites shown open computer network immune intrusions 
furthermore intrusion detection systems idss need updated timely novel intrusion surfaces geographically distributed idss need cooperate detect distributed coordinated intrusions 
describe experimental system common intrusion detection framework cidf multiple idss exchange attack information detect distributed intrusions 
system includes id model builder data mining engine receive audit data novel attack ids compute new detection model distribute idss 
describe experiences implementing system preliminary results deploying system experimental network 
network computer systems play increasingly vital roles modern society targets enemies criminals 
security computer system compromised intrusion takes place 
intrusion defined set actions attempt compromise integrity confidentiality availability resource 
intrusion prevention techniques encryption authentication passwords biometrics defensive programming protect computer systems line defense 
intrusion prevention sufficient systems complex security thought exploitable weakness systems due design programming errors various socially engineered penetration techniques 
example reported years ago exploitable buffer overflow security holes lead unauthorized root shell exist system software 
furthermore illustrated distributed denial service ddos attacks launched major internet sites security measures place protocols systems designed provide services public inherently vulnerable attacks dos 
intrusion detection wall protect network systems intrusion detected early stage dos attack response put place minimize damages gather evidence launch counter attacks 
intrusion detection techniques categorized misuse detection anomaly detection 
misuse detection systems idiot stat patterns known attacks weak spots system match identify known intrusions 
example signature rule guessing password attack failed login attempts minutes 
main advantage misuse detection accurately efficiently detect instances known attacks 
main disadvantage lacks ability detect truly innovative newly invented attacks 
anomaly detection systems ides flag observed activities deviate significantly established normal usage profiles anomalies possible intrusions 
example normal profile user may contain averaged frequencies system commands login sessions 
session monitored frequencies significantly lower higher anomaly alarm raised 
main advantage anomaly detection require prior knowledge intrusion detect new intrusions 
main disadvantage may able describe attack may high false positive rate 
defense advanced research project agency darpa sponsored intrusion detection evaluation survey state art research intrusion detection 
results indicated research systems effective leading commercial systems 
best research systems failed detect large number new attacks including lead unauthorized user root access 
obvious enemies knowing intrusion prevention detection systems installed networks attempt develop launch new attacks 
definition misuse detection techniques ineffective new intrusions 
critical develop effective anomaly detection algorithms detect novel attacks important develop mechanism novel attack detected necessarily anomaly behavior analyzed specific detection model built widely distributed 
need turn novel attack known quickly possible appropriate detection response mechanisms place timely manner 
ddos attacks pose serious challenge current de facto practice ids concerned local network environment communication idss internet 
described dittrich ddos attack normally accomplished breaking hundreds thousands poorly secured machines internet installing packet generation slave programs compromised systems 
remote master programs attacker control slave programs send packets various types target host network 
slave just send malicious packets amount small considered acceptable resulting flood due huge number slaves getting involved simultaneously effectively shut target system normal operation periods ranging hours 
ids target system may detect dos determine compromised systems internet launch attack 
words localized approach detect small part large scale distributed attack suggest limited useless response 
hand idss internet communication framework exchange attack information detecting dos ids broadcast attack instance idss turn activate specific modules running look kill slave programs local environments responsible ddos attack 
research aims develop techniques detecting novel distributed intrusions 
describe experimental system common intrusion detection framework cidf geographically distributed idss communicate protocols defined cidf 
example idss exchange attack information includes attack source method behavior response detecting novel attack ids send relevant audit data model builder turn automatically analyzes data computes new detection model specifically attack distributes model idss local customization translation installation 
rest organized follows 
briefly describe data mining technologies enable model builder 
give overview specifications cidf 
describe design implementation experimental system 
describe experiments system detect new ddos attacks 
compare research related conclude discussion research directions 
madam id data mining approach building id models currently building ids labor intensive knowledge engineering task expert knowledge codified detection models misuse detection rules measures system features normal profiles 
complexities today network systems expert knowledge incomplete imprecise result idss limited effectiveness accuracy 
development process purely manual updates idss due new attacks changed network configurations slow expensive 
researching developing systematic automated approach building idss 
developed set tools applied variety audit data sources generate intrusion detection models 
call collection tools madam id mining audit data automated models intrusion detection :10.1.1.26.714
central theme approach apply data mining programs extensively gathered audit data compute models accurately capture actual behavior patterns intrusions normal activities 
approach significantly reduces need manually analyze encode intrusion patterns guesswork selecting statistical measures normal usage profiles 
resultant models effective computed validated large amount audit data 
results darpa intrusion detection evaluation showed detection models produced madam id best performances highest true positive rates keeping false alarm rates tolerable ranges participating systems knowledge engineered 
main elements madam id include programs computing activity patterns audit data constructing features patterns learning classifiers intrusion detection audit records processed feature definitions 
process madam id shown 
fig 

data mining process building id models 
product madam id set classification rules intrusion detection models 
consider intrusion detection classification problem ideally want classify audit record discrete set possible categories normal particular kind intrusion anomaly 
set records features class label concept classification algorithms compute model uses discriminating feature values describe concept 
example rule output ripper classification rule learner pod icmp 
ping death rule uses conjunction conditional tests checks value feature wrong fragment 
apply classification algorithms need select construct right set system features may contain evidence indicators normal intrusions 
fact feature selection construction challenging problem building idss regardless development approach 
exploit temporal statistical nature network traffic apply data mining programs compute patterns feature constructions 
shown raw audit data tcpdump data network traffic processed packet event level ascii data summarized connection session level records 
record defined set basic general purpose features start time duration source destination hosts ports number bytes transferred flag indicates behavior connection sf normal syn fin data mining algorithms optimized audit data applied compute various activity patterns audit records forms host service frequent sequential patterns 
set extensively gathered normal audit data audit data set includes intrusion instance compare patterns normal data intrusion data identify intrusion patterns exhibit intrusion data 
patterns parsed construct appropriate features predictive intrusion 
example pattern syn flood shown table 
accordingly features constructed syn flood count connections destination host past seconds connections percentage service percentage flag 
prior showed constructed features high information gain improve accuracy classification rules 
process applying madam id build intrusion models shown involves multiple steps iterations 
example poor performance model suggests additional features need constructed additional kinds patterns need computed developed process centered approach automate process completion step automatically triggers step process heuristics automatically tune programs step parameter selection achieve performance improvement previous iteration 
resulting system service real time model building request accepting table 
example intrusion patterns frequent episode meaning flag service dst host victim flag service dst host victim 
flag service dst host victim time connections flag syn packet sent host victim seconds third similar connection pattern occurs data audit data ids iterating process compute desired detection model 
overview cidf group research projects funded darpa began collaborative effort called common intrusion detection framework cidf 
motivation cidf provide infrastructure allows intrusion detection analysis response systems components share information distributed coordinated attacks 
major design goal cidf systems treated black boxes produce consume intrusion related information 
roles components play cidf categorized event generators boxes analysis engine boxes response engines databases boxes 
kinds cidf components exchange data form generalized intrusion detection objects represented standard common format defined common intrusion specification language 
encodes fact particular events happened particular time analytical set events instruction carry action 
wide variety intrusion related information needs flexible extensible 
main language construct general purpose expression 
expressions simply recursive groupings tags data 
example expression filename passwd expression simply groups terms filename passwd 
advantage expressions provide explicit association terms limiting terms groupings express 
intrusion related data expressed sequence elements 
element indicates interpret data follows tag provides semantic clue interpretation rest expression 
reason tags called semantic identifiers sids short 
example report event user joe deleted passwd expressed delete initiator username joe filename passwd set cidf apis provided encoding decoding 
encoding involves translating expression corresponding tree structure encode structure sequence bytes 
decoding byte sequence back tree structure simply reverses procedure 
sid code indicates bit byte type argument sid takes elementary data array sequence expressions 
parser interprets succeeding bytes accordingly 
tree printed expression format processing extracting intrusion related data cidf component 
cidf provides matchmaking service matchmaker cidf components known components locate communication partners share information request provide services 
matchmaker supports feature lookup grouping cidf components capabilities 
communications cidf need secured possible intrusion related data transmitted obviously critical beings systems 
matchmaker provides authenticated secured communications cidf components acting certificate authority ca 
cidf messages packets include authentication headers encrypted 
madam id modeling engine cidf researchers laid lot groundwork defining encoding decoding apis communication protocols including matchmaking authentication cidf components 
research projects experiments related cidf tend focus idss communicate exchanging attack response data 
addition studying idss cooperatively detect distributed attacks real time interested cidf facilitate distribution new intrusion detection models novel attacks short life span 
study model builder madam id receive attack data rapidly automatically produce appropriate models distribute idss installations 
design considerations ids detects attack broadcast instance report idss turn check attack launched local environments local suspicious activities may caused attack environment 
cooperation idss supported cidf 
challenge build maintain set sids dictionary possible values accurately describe attack scenarios 
introducing modeling service cidf straightforward may 
note analysis engine cidf limited capabilities draws event data kind intrusion occurred suggest response provide detection method 
modeling service available detecting new intrusion anomaly ids encodes relevant audit data network traffic time window transmits modeling engine process centered madam id system 
madam id performs pattern mining feature construction rule learning audit data extracted 
madam id keeps large store baseline normal patterns intrusion patterns easily identified reported attack anomaly 
keeps large amount historical attack data patterns reported attack old attack slight variant updated rule produced training combination historical new data 
see modeling engine includes functionalities analysis engine database 
fig 

cidf architecture 
challenging issue adding modeling engine cidf encoding features rules 
set sids need defined express computational instructions feature rule ids receiving id model automatically parse instructions generate local execution modules 
rule include accuracy confidence measurement ids decide accept reject rule 
updated rule special tag updated old rule replaced 
shows architecture cidf idss share attack information send attack data modeling engine turn computes distributes new detection models 
matchmaker responsible hooking idss modeling engine facilitating authenticated secured communications cidf components 
implementation experimental system implemented experimental system cidf madam id modeling engine bro nfr real time idss 
implemented system acts matchmaker ca 
described experiences 
modeling engine shown madam id normally starts model building process raw audit data directly processed connection session records 
case ids needs supply audit data madam id new sid encoding specifies local file contains audit data tag specifies size audit data 
encoding expression contains tags audit data size recorded object followed content audit data file receiving sufficient information accurately extract audit data 
encode features rules enumerated set essential boot trap features idss know compute 
features include source host source port destination host protocol type service duration flag assigned feature unique id introduced number new sids specifying features values 
example feature condition flag value represented expression flag cond equal madam id constructs new features functions operations computations existing feature conditions connections satisfy certain constraints 
feature construction operators include count percent average data constraints include destination host service different time window seconds number new sids define new features 
example syn flood features connections destination host past seconds percentage flag expressed expression rate constraint destination host constraint time seconds operation operator percent flag cond equal intrusion detection rule simply sequence conjuncts feature conditions specified form 

optional 
expression specifies type attack intrusion name detected rule 
describes definitions new features rule followed sequence feature conditions 
see long idss modeling engine understand vocabulary set sids specific values features operators constraints new intrusion detection models expressed parsed unambiguously 
ids rejoins cidf period absent vocabulary needs updated exchanging modeling engine 
experimental system madam id listens socket incoming audit data sends new intrusion detection models idss 
wrapper consists function calls cidf apis data dictionaries features operators constraints added madam id audit data extracted detection models encoded 
fig 

cidf interfaces ids 
idss bro nfr experimental system reasons 
programmable idss filter network traffic streams series events execute scripts bro policy scripts nfr contain site specific event handlers intrusion detection handling rules 
event handling scripts interpreted idss adding new detection rules require re building idss 
feature facilitates fast updates idss new detections models distributed 
second consideration practical realtime idss various experiments past couple years source codes systems 
illustrated ids implemented cidf daemon responsible receiving decoding cidf client responsible encoding sending 
execution cidf daemon creates shared message queue allows communicate ids new messages arrive 
queue constantly monitored ids details follow 
cidf daemon listening port cdf incoming 
connection client cidf client daemon verifies received message valid decodes expressions 
decoded data queued shared message queue signal ids processing 
packet filtering engine ids modified order support communication cidf daemon 
connection finished condition checked packet filtering engine probing shared message queue scheduled occur engine processes event 
receiving message expressions packet engine queues event expressions event queue shares script interpreter 
cidf related events interpreting expressions take appropriate actions handled cidf process script function 
model interpreter implemented separate process invoked cidf process function parse expressions describe new intrusion detection rule 
generated local intrusion handlers inspected human experts loaded ids 
note reason incoming data cidf components come packet engine reach event handlers idss supports functionality interpreted script load data local file system program space ids 
cidf client provides means ids encode send cidf components 
information audit data intrusion alerts sent request serviced cidf send script function 
cidf send construct expressions writes data local file 
invokes cidf client process passes filename 
cidf client parses expressions file encodes 
turn sent modeling engine idss 
example expression syn flood attack instance attack time message comment syn flood address tcp address tcp matchmaker ca cidf matchmaker components locate partners communicate 
implementation matchmaker integrated ca server process 
matchmaker maintains list cidf components roles modeling engine event engine 
new components roles added desired 
component needs communicate component ways 
knows ip address hostname component contact component directly communication 
case matchmaker play active role 
component knows wants communicate cidf component certain capability sends request matchmaker criteria 
matchmaker looks list idss satisfy criteria specified returns matched list component 
suitable match matchmaking failure message returned 
ca provides authentication components enable secured communications rsa public key encryption technology 
components need establish secured communication need authenticate uses private rsa key sign random nonce generated returns nonce random nonce verifies signature public rsa key signs nonce private rsa key sends signed nonce back verifies signature public rsa key 
components authenticate rsa keys establish session secret key 
des data encryption standard secret key algorithm encrypt data transmission components 
encrypting data sent peer component compresses lossless data compression algorithm 
similarly peer uncompress data decrypting 
compression reduces size data transmitted provides added layer data confidentiality 
certificates signed ca components exchange public rsa keys place 
certificate contains fields id cidf component ip host running component public rsa key current time stored timestamp 
certificate considered valid expired timestamp past minutes 
assume components know public rsa key ca advance 
needed authenticate ca verify signature certificates signed ca 
public rsa key distributed components means manual entry 
experiments deployed experimental system campus network bro nfr madam id separate subnets 
conducted series experiments test limits strength system 
describe findings 
set experiments designed test interoperability cidf components 
results fine tune implementation system 
example simulated syn flood attack subnet bro monitoring 
bro detected attack sent describing instance nfr 
compared expressions sending bro receiving nfr ends verify matched 
experiment took syn flood bro detect attack specific intrusion anomaly unusual traffic statistics caused attack 
bro sent tcpdump data madam id new intrusion detection model 
verified new rule computed distributed bro nfr 
idss able translate rule local script functions 
second set experiments designed test limit modeling engine 
set timing experiments measured long took madam id compute detection model received audit data 
results wide range mere seconds hours 
detailed analysis discovered automated iterative process mining data constructing features computing classifiers evaluating performances requires guidance heuristic settings parameters programs 
exhaustive search slow 
example detecting syn flood may require patterns destination host service computed compared normal patterns port scan requires destination host different service patterns 
studying feasible ids include high level description attack behavior modeling engine better chance setting correct parameters data mining algorithms 
set modeling experiments tried discover new models expressed expressions current assumptions ids understands boot trap set features new features expressed existing features 
intrusions require new pre processing raw audit data new boot trap features virtually impossible express complex delicate data pre processing logic expressions 
example teardrop attacks require special processing ip fragments expressed high level programming language 
fact human experts get involve modeling process new data pre processing required new features defined human experts automatic data mining process able produce model terminate uses allotted cpu time model building process 
studying distribute new data pre processing codes cidf 
third set experiments intended verify idss detect distributed attack 
flood network tfn ddos attack tool experiment 
bro monitored subnet target host detected attack launched slave programs running separate host subnet monitored nfr 
nfr received attack instance report bro parsed recognized syn flood originated subnet checking address sid 
activated code detects blocks control message icmp echo reply packets sent attack masters slaves 
launched search slave programs informing special daemon system subnet look kill running process name matches list known attack programs 
results showed seconds bro detected attack nfr able kill attacking programs 
related emerald provides architecture facilitate enterprise wide deployment configuration intrusion detectors 
resolver combine alarms distributed detectors determination state entire network 
certainly right direction detecting coordinated attack enterprise 
resolver technology utilized event analysis cidf environment 
scope system limited enterprise 
interested problem idss collaborate internet importantly automatically produce distribute new intrusion detection models novel attacks 
kephart outlined system architecture anti virus systems internet subscribe centralized virus modeling server receive fast updates new virus discovered new anti virus module produced 
similar idea adding modeling engine cidf 
system additional capability facilitating idss exchange attack information detect distributed intrusions 
discussed need new techniques detect novel intrusions distributed attacks 
proposed add modeling service cidf idss exchange attack data detect distributed intrusions receive detection models new attack method surfaces 
described underlining technologies approach madam id data mining framework automatically building intrusion detection models cidf framework components collaborate 
discussed design implementation experimental system uses madam id modeling engine bro nfr real time idss 
experiments preliminary promising results showed components interoperate detect distributed attacks produce distribute new intrusion detection models 
plan conduct extensive robust experiments 
install components experimental system separate domains internet new set timing experiments 
run extensive set attacks example generated darpa red team test system achieve better detection performance single system 
continue develop underlying technologies system 
particular investigate improve automated process building intrusion models encode distribute features rules require detailed system knowledge scope current 
acknowledgments research supported part darpa 
benefited depth discussions matt miller dave fan columbia university jim felix wu doug reeves north carolina state university 

cohen 
fast effective rule induction 
machine learning th international conference lake ca 
morgan kaufmann 

dittrich 
distributed denial service ddos attacks tools 
staff washington edu dittrich misc ddos 

maccabe 
architecture network level intrusion detection system 
technical report computer science department university new mexico august 

ilgun kemmerer porras 
state transition analysis rulebased intrusion detection approach 
ieee transactions software engineering march 

jacobson leres mccanne 
tcpdump 
available anonymous ftp ftp ee lbl gov june 

kephart sorkin white 
blueprint computer immune system 
technical report ibm watson research center yorktown heights new york 

kumar spafford 
software architecture support misuse intrusion detection 
proceedings th national information security conference pages 

lee 
data mining framework constructing features models intrusion detection systems 
phd thesis columbia university june 

lee stolfo mok 
mining audit data build intrusion detection models 
proceedings th international conference knowledge discovery data mining new york ny august 
aaai press 

lee stolfo mok 
data mining framework building intrusion detection models 
proceedings ieee symposium security privacy may 

lippmann fried graf haines kendall weber webster 
evaluating intrusion detection systems darpa line intrusion detection evaluation 
proceedings darpa information survivability conference exposition january 

lunt jagannathan neumann javitz valdes garvey 
real time intrusion detection expert system ides final technical report 
technical report computer science laboratory sri international menlo park california february 

network flight recorder network flight recorder 
www nfr com 

paxson 
bro system detecting network intruders real time 
proceedings th usenix security symposium san antonio tx 

porras neumann 
emerald event monitoring enabling responses anomalous live disturbances 
national information systems security conference baltimore md october 

rivest 
expressions 
internet draft draft rivest sexp txt expired 

chen 
common intrusion detection framework 
cs ucdavis edu cidf 

tung 
common intrusion specification language retrospective 
proceedings darpa information survivability conference exposition january 
