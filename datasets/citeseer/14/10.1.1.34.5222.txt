january 
revision prepared requirements engineering volume number 
dealing change approach non functional requirements lawrence chung brian nixon eric yu computer science program department computer science faculty information studies university texas dallas university toronto university toronto box richardson tx toronto ontario toronto ontario canada canada chung edu nixon ai utoronto ca eric yu utoronto ca facsimile facsimile extended revised version appearing proceedings second international symposium requirements engineering york england march 
draft prepared authors department computer science university toronto 
address correspondence author 
non functional requirements quality requirements nfrs confidentiality performance timeliness crucial software system 
concerns nfrs impetus change 
systematically support system evolution adapts nfr framework treats nfrs goals achieved development 
process consideration design alternatives analysis tradeoffs design decisions carried relation stated goals captured historical records 
show historical records treating nfrs goals systematically support system evolution 
approach illustrated study changes loan policies barclays bank 
study considered changes nfrs associated changes priorities workload functionality 
study historical records helped quickly determine impact changes 
guidelines consistently managing historical records address tool support change process 
keywords change non functional requirements software quality software evolution 
non functional requirements quality requirements nfrs confidentiality performance informativeness timeliness crucial software system banking information system medical government information systems 
concerns non functional requirements impetus justification evolution system 
furthermore continued success software system requires meeting changing organisational needs competitive marketplace 
fact changing conflicting requirements main problems software development identified problem driven empirical studies 
consequently developers continuously aim better software increased productivity lower cost presence changing environment 
dealing change difficult 

changes existing software requires dealing changes types changes 
banking system example include changes organisation reduction staff non functional requirements greater informativeness functional requirements system system print statements priorities confidentiality important speed organisational workload number bank clients target system techniques achieve response time 
involves identifying important changes determining potential impact quality issues incorporating impact process improvement 
effect changes include change target system selected change degree meeting requirements requirement changed 
dealing change decisions inter related options decision point criteria decision consequently developers need know decisions re consider 
alleviate difficulties dealing change need system quality looks goal oriented requirements engineering 
specifically adapts goal oriented framework nfr framework treats quality requirements goals achieved process system development traditional product oriented approach measures quality product :10.1.1.29.2587
process consideration design alternatives analysis design tradeoffs design decisions carried systematically relation stated goals 
process serves means quality focussed development results history record 
show historical record systematic treatment quality requirements development process serve support evolution system 
study 
process oriented incremental approach illustrated study changes bank loan policies barclays bank 
study consider impact changes primarily changes non functional requirements driven changes organisational policy 
scenario editions barclays code business banking real world setting general principles terms barclays bank business loan customers 
edition code common example workshop research issues intersection software engineering artificial intelligence sorrento italy may 
reviewing editions code see bank number quality concerns including security accuracy timeliness 
furthermore assume performance important quality concern 
edition identifies number changes implemented relate offering clients options informative reporting bank loan statements 
trend greater informativeness continued second edition quite similar edition 
considered approach help bankers deal changes 
study reviewed policy manuals bank loans reflected changes corporate requirements operations 
considered variety non functional requirements informativeness performance timeliness 
addressed changes nfrs associated changes priorities trend greater informativeness workload increases statements generated functionality sending additional detailed statements clients 
considered change techniques produce target system 
approach involving historical records able quickly represent deal changes determine impact changes including impact meeting nfrs changed system 
outline 
section presents overview process dealing change 
study scenario barclays code business banking section illustrates half change process generate initial design bank initial requirements 
gives brief tutorial nfr framework 
section continues study illustrating second half change process initial design changed deal changes requirements trends change barclays codes 
section offers guidance change process term guidelines consistently managing historical records presence changes world 
section discusses cataloguing domain nfr specific knowledge aid process dealing nfrs change 
section describes set features tool support change process 
section presents related section presents lessons learned study contributions open issues 
overview change process section describes process change exploits goal oriented requirements engineering paradigm consistent requirements engineering process 
process intended alleviate difficulties dealing change maintaining focus quality 
order deal change go back source changes originated previous requirements description compare new 
changes introduced deal current needs organisation 
involve changes non functional requirements associated changes priorities functionality workload 
may involve improving quality existing system helpful put quality concerns foremost minds system developers try address concerns appropriately 
adapting goal oriented nfr framework treat quality requirements goals achieved process system development subsequent system evolution :10.1.1.29.2587
process consideration design alternatives analysis design tradeoffs design decisions managed systematically relation stated goals 
process serves means quality focussed development results history record 
terms historical record changes quality requirements existing system incrementally parts existing system components need change 
process oriented incremental approach depicted pictorially 
approach change process starts development initial system available 
represent initial requirements map initial design 
history record resulting initial requirements engineering process sketched left hand side 
represent change requirements produce revised design determine results stem changes 
history record resulting change process shown right hand side 
note change process continue successively yield new systems 
case term initial replaced old previous currently existing 
initial requirements engineering 
go systematic process detail involves initial requirements engineering process followed change process 
early step initial process identify initial top level requirements 
consulting particular organisation high level requirements description policy documents memos employees similar systems identify initial top level requirements represent goals achieve history record 
needed prioritise goals needs particular organisation hand 
bank loan system business banking barclays bank dealing combination nfrs calculating loan interest printing statements providing infor initial design initial requirement greater informativeness performance informativeness result new design new requirement change process 
mation clients nfrs include informativeness loan information time performance accuracy time related matters providing information timely way nfrs interpreted differently different groups people may want clarify decompositions justify way clarified rationale 
initial top level requirements decompositions depicted top portion left hand side 
moving target system consider design techniques catalogue techniques achieve nfrs represented goals 
select technique alternatives carry tradeoff analysis considering impact goals help catalogue interrelationships describes contributions goals meeting top goals 
analysis may involve consideration domain knowledge priorities system workload choose target record rationale decision 
kind decision rationale facilitates review justification system evolution enhancing traceability 
resulting history record shown bottom portion left hand side 
evaluate impact decisions bottom historical record nfrs top record tracing upwards 
initial development process design alternatives tradeoffs decisions rationale considered relation nfrs stated goals managed systematically recorded history record 
dealing change 
turn dealing change 
consider sources change changes organisational policy effects change changes target system produced 
sources change manifold changes organisation reduction staff nfrs greater informativeness bank loan system bank wants serve customers better functional requirements system system print statements priorities informativeness important confidentiality workload number bank clients 
effects change include change target system selected change degree meeting requirements requirement changed 
result initial requirements engineering process history record goals design alternatives tradeoffs decisions rationale 
history record enables developers deal change incrementally revising parts need change regenerating rest determining effects revision 
importantly start scratch 
start initial requirements represented goals history record 
reflect changes history record examining differences initial requirements possibly tracing back sources ambiguities arise new requirements need extracted corresponding sources representing new requirements goals incrementally 
incremental change history record may involve new change finding relevant component components initial historical record making adjustments adding new component changing priority changing workload reflecting change organisational policy way able represent new set requirements associated changes quite concisely quickly 
addition new requirements goals leads new interrelationships new initial requirements decompositions new requirements initial ones 
changes turn may lead new interrelationships initial design components additions 
moving new target system reconsider target alternatives tradeoffs considered previously initial design 
may new target system alternatives new revised tradeoffs consider new context 
choose new target record rationale decision 
change process design alternatives tradeoffs decisions rationale considered relation stated goals managed systematically recorded history record structure initial development change 
comparing initial design clearly see impact changes new target system design degree meeting initial top level requirements reasons 
sections illustrate detail change process studying scenario barclays code business banking 
study generating initial design initial requirements section illustrate approach dealing change studying barclays code business banking described section 
section describes initial design bank loan information system generated initial quality requirements changes 
introduces nfr framework main components 
section continues study consideration changes bank requirements associated changes priorities workload functionality target system techniques 
initial top level requirements consider development process reflects situation prior changes barclays code 
time review main concepts nfr framework 
number quality requirements identified code including informativeness confidentiality security accuracy 
barclays increasing automation staff complement decreasing assume system performance important requirement 
type service barclays bank provides lending money 
clients want borrow money go negotiations bank concerning loan period interest rates method payment bank change conditions loan period wants keep clients informed timely manner 
bank wants keep clients financial affairs confidential 
interest rates loans components base rate prime rate set bank customers interest margin set individually customer risk involved 
bank gives advance written notice changes interest margins 
advance notice changes base rate take effect immediately clients advertised national press 
reviewing barclays policies supplemented intuition banking identified important nfr goals 
captured shown adapted 
legend goal graphs historical records shown 
loan info loan info confirmation accurate loan info attributes loan info accurate properties time change time change statements time produce statements time loan info timeliness loan info informativeness loan info accuracy loan info security time produce loan info initial top level goal graph loan information system 
neutral unspecified goal types node satisficing link correlation link legend unknown positive satisficed node values values argument satisficing goal nfr goal link types satisficed partially denied denied partially satisficed neutral link correlation positive negative negative legend graphical symbols goal graphs 
main goals shown top 
nodes represent goals stand requirements 
performance requirement example goal time loan info loan info means loan information processed system time performance rapidly 
timeliness loan info means clients quickly notified loan information 
similarly informativeness loan info means loan information informative security loan info means loan information maintained securely kept confidential 
accuracy loan info means loan information maintained accurately 
requirements shown top nfr goals 
nodes represent goals stand requirements 
goal sort security indicates kind requirement associated goal parameter 
loan info indicate subject goal 
decompositions type method goal generating offspring goals 
example parent goal timeliness loan info decomposed offspring goals timeliness change base rate timeliness produce statements connected link 
interpretation base rate changed timely manner statements produced timely manner confidence timeliness loan information satisficed 
goals representing nfrs rarely satisfied clear cut sense decisions contribute hinder particular goal goal satisficing suggest generated software expected satisfy nfrs acceptable limits absolutely 
links kinds link types available indicate different relationships example negative link shown figures indicates offspring goal satisficed parent goal denied 
goals decomposed variety methods 
method decomposed timeliness loan info goals operations loan information 
pre defined generic method decompose top level goal 
generic methods capture knowledge domain quality related field study performance security 
order support development process catalogued see section knowledge base expert knowledge sorts decompositions correlations satisficing goals specific nfrs 
study draws catalogues developed parts specialisations nfr framework deal accuracy security performance :10.1.1.29.2587
catalogues available developer development process 
addition developers define methods 
method security goal decomposed goals accuracy confidentiality availability major components security viewed security experts 
cataloguing expert knowledge considered section 
similarly accuracy decomposed goals accurate attributes accurate properties timely accuracy :10.1.1.29.2587
timely accuracy timely recording information items information system considered section 
satisficing goal intended nfr goal 
takes parent goal moves alternative target system shown dark circle 
barclays policies state loan information confirmed writing informativeness 
satisficing goal confirmation choice informativeness accuracy 
accordingly positive contribution confirmation accuracy established correlation link shown dotted line labelled :10.1.1.29.2587
goals associated label indicating satisficed denied intermediate unknown value 
labelling algorithm viewed starting leaf nodes propagating values upwards considering combination node label values link types 
satisficing confirmation gives positive contribution satisficing informativeness accuracy turn contributes satisficing security 
call kind historical record shown goal graph 
generating initial design generate initial design continue process dealing initial quality requirements focussing portion deals timeliness time performance 
mentioned changes base interest rates put effect immediately 
consider change base rate prior discussion applies see section interact changes requirements 
need identify focus priority goals critical goals goals involving dominant parts workload pointed performance goals particular quality goals general 
refine time performance goal changing base rate identifying critical support attach argument claim convention top level goals satisficing goals priority goals important goals shown bold face historical records 
note change interest rates treated change requirements 
change value clients change just central value claim fast produce stmts time done immediately claim timeliness loan info change timeliness time loan info timeliness time change produce stmts claim slow time change critical history record shows 
identification priority critical goal argument policy 
correlation time timeliness 
consideration target alternatives goal graph portion initial design loan information system 
base rate changes done immediately 
note design rationale case organisational policy 
changing base rate goal timeliness provision information timely way helped quickly changing base rate 
reason system change time performance able assist notifying customers change timely manner 
correlation link detected shown sign 
moving target system changing base rate consider satisficing goals 
alternative store new rate client 
base rate time may helpful replicate base rate client 
example helpful base rate kept place client specific information kept place 
ruled arguing slow shown base rate changed client record updated clients 
argument workload suggested statistics available 
alternative negative time performance change requirements section introduce tradeoff shows positive correlation quality requirement 
target alternative store base rate single value information system 
treats base rate attribute group loans taken 
value changed argued provides fast method shown bringing new base rate effect method chosen target system 
labelled leaf nodes satisficed denied 
determine impact higher level goal nodes labelling algorithm 
working bottom takes account labels offspring link type 
example storing base rate combined positive parent offspring link leads satisfaction critical time goal 
turn positive contribution timeliness goal changing base rate partial positive contribution goals time performance timeliness shown top 
note satisficed offspring combined negative link lead denied parent example chosen critical time goal denied 
process constructing goal graph facilitated framework methods capturing knowledge nfrs decomposing satisficing nfr goals knowledge justifying design decisions 
approach able draw catalogues nfr knowledge described section 
able represent domain knowledge including priorities workload information 
process number clients available average balance loans advances customers united kingdom offices pounds sterling worldwide staff numbered 
facilitated framework correlation rules capturing knowledge goal interactions positive negative 
framework offers evaluation procedure able see goal graph expansion process effect design decision framework evaluation procedure 
considered nfr framework dealing change requirements 
section consider impact changing requirements 
study ii changing design deal changed requirements continuing study consider deal change requirements associated changes priorities workload functionality 
consider addition target system technique 
changing design adding new requirement consider change requirements particular addition new requirement due change organisational policy 
consider transition offering loan clients reporting detail options statements 
provision enhanced statements started 
editions code reflect changes organisational policy trends greater informativeness provision detailed breakdown charges 
purposes study assume provision enhanced statement include detailed list base rate interest margin effect client period statement 
note details enhanced statements mentioned barclays codes 
consider addition requirement time performance producing enhanced statements 
provides legend changed goal graphs conjunction basic legend 
informativeness loan info produce enhanced statements change base rate produce statements time time time time include margin rates time include base rates time loan info history record shows 
new nfr goal due organisational policy change 
added offspring node 
added positive correlation informativeness 
assumed enhanced statements include adding info interest rates calculations goal graph new requirement 
legend changes new satisficing goal new correlation link new link new nfr goal new argument node new offspring link types goal types legend graphical symbols changed goal graphs 
time goal enhanced statements turn decomposed time goals including base rates margin rates statements 
legend shows new goals new links offspring 
note change requirements increased informativeness may reflect change priorities may lead change functionality providing detailed statements change workload increase system processing 
adding new target technique overhead time change critical claim done immediately time time loan info time produce statements time produce enhanced statements time include margin rates time include base rates change just central value claim fast claim fast change base rate informativeness loan info claim slow change value clients history record shows 
new target alternative added 
added relationship new alternative existing priority critical nfr goal goal graph new requirement target technique 
extend show addition new possible satisficing goal shown bottom centre 
represents new techniques target system discussed 
note new satisficing goal associated parent goal new link label value 
new argument claim associated link 
changing design meet new requirement history record shows results additional nfr goal time produce enhanced statements 
decompose time include base rates goal 
correlation time include base rates alternative satisficing goals 
decompose loan info 
correlations new goal produce enhanced statements 
add arguments 
argument added re workload 
result change satisficing goal chosen change target system new requirements result interaction existing requirements leading new tradeoffs accuracy performance new target system new arguments leading revised system 
particular interaction changing base rate producing statements assumed include base rates 
leads tradeoff time performance timely accuracy timely recording information items information system 
shows goal timely accuracy loan information 
decomposed prior goals accuracy changing base rate producing basic statements 
offspring accuracy producing enhanced statements added 
similar decomposition shown previously time performance goal producing enhanced statements decomposed time goals including various interest rates statements 
include time base rates claim claim claim informativeness loan info timeliness loan info immediately done claim timely accuracy change timely accuracy produce stmts 
stmts 
enhanced produce time time base rate change stmts 
produce time store accuracy timely stmts 
enhanced produce time change critical time loan info loan info time margin rates include ffl claim slow extra rate retrievals clients ffl claim fast overhead retrieving client record interest rate info correct right rate change ffl claim fast retrieving client record interest rate info incorrect right rate change new design resulting adding new requirement 
consider performance impact including base rates existing alternatives target system associated arguments 
example downward correlation correlation link established nfr satisficing technique :10.1.1.29.2587:10.1.1.29.2587
storing base rate client result fast time performance shown preparation statement involve retrieval client record record include base rates little additional needed obtain 
storing rates centrally result poor performance shown due extra rate retrievals required client argue organisation workload choice poor due large number bank clients 
choice target system design complete due impact target alternatives timely accuracy goal producing enhanced statements 
example upward correlation correlation link established satisficing technique nfr :10.1.1.29.2587:10.1.1.29.2587
accuracy issue stems including base rate statements 
suppose base rate changed just statements prepared 
base rate value changed entire system quickly changed preserving accuracy 
rate changed client take long period time complete possible statements incorrectly show old base rate 
introduce new alternative considered initial study 
third alternative hybrid satisficing methods involves changing centrally stored rate updating rates stored client records 
time performance including base rate shown methods 
little slower storing value client due overhead having decide rate changed hybrid method maintain accuracy checks base rate changed retrieving value change uses correct central value uses correct value client record 
arguments show producing enhanced statements tradeoffs time performance timely accuracy 
accuracy important corporate goal priority storing base rate client ruled gives incorrect results 
hand performance important storing rate centrally ruled generally slow accurate 
hybrid method chosen accurate offers reasonable performance 
recall prior requirements rate stored centrally 
hybrid method considered earlier ruled due performance overhead 
presence accuracy performance tradeoff new hybrid method considered reasonable offering timely accuracy reasonable time performance changing base rate including rate statements 
consideration organisational change resulted change target system 
choice target system wish see impact quality requirements 
framework partially automated labelling procedure takes account values satisficed denied lower nodes link relationships positive negative determine higher nodes satisficed 
example choice hybrid method positive impact timely accuracy producing enhanced statements time goals changing base rate including base rates statements 
improvements positive impact meeting ther time performance goal producing enhanced statements 
impact top goals shown 
simplify presentation note nodes changes decomposed satisficing goals labelled 
example consider new time performance goal including margin rates statements 
likewise consider initially subsequently time produce statements 
achieving time performance loan information quickly including mar enhanced statements time produce change time statements produce time accuracy loan info loan info security loan info informativeness loan info timeliness confirmation loan info properties accurate loan info attributes loan info accurate loan info loan info time impact top level requirements adding new requirement 
gin rate enhanced statements important quickly producing basic statements important 
satisficing offspring label top level parent loan info satisficed 
say unlabelled goals initial goals satisficed remained satisficed contribute satisficing parents 
likewise satisficing new offspring help parents 
impact change top level requirements impact change requirements 

goal graph includes history dealing change 
goals added producing enhanced statements offspring goals added including various interest rates statements 
addition graph contains interactions detected initial additional goals 
tradeoffs considered arguments revised 

considered changes priorities workload functionality associated change requirements 
led consideration new satisficing goal 

lead change target system 
driven changes requirements changes arguments 

changed extent satisficed top level require ments just lower level ones considered previous sub section 
effect meet new goals contributed positively top level goals 
example new goal produce enhanced statements satisficed positive contribution loan info 
part tradeoff time performance changing base rate went satisficed satisficed acceptable critical goal 
comparing figures seen impact increase informativeness timeliness time performance cost due extended processing needed producing enhanced statements 
guidelines change process dealing change difficult due changes types changes nonfunctional requirements functional requirements priorities workload 
furthermore dealing change decisions inter related options decision point criteria decision 
view need guidelines maintaining consistency history records presence changes 
incorporating changes initial design involves identifying changes requirements organisation workload associating appropriate components history record goal graph 
process identification association interleaved proceeds incrementally analysis change design tradeoffs evaluation change goal achievement change relation previous system trace sources 
important aspect knowledge approach helping developer capture re development knowledge 
fully realise benefits approach tools provide semi automated support developer dealing change 
developed tools dealing quality requirements nfr framework see section 
tools primarily help developer state refine goals 
dealing change may require operations removal goal may temporarily goal graph inconsistent 
cases help needed restore goal graph consistent state 
accordingly offer guidelines helping ensure syntactic semantic structural consistency criteria met 
help provide tool deal situations relating change illustrated section 
desirable properties goal graphs incorporation revisions goal graph includes process refining goals detecting interactions disambiguating terminology detecting conflicts omissions redundancies 
process facilitated number notions 
basic traceable goal graph 
notions apply goal graphs initial changed 
notion structurally traceable goal graph provides syntactic principles maintaining structure goal graph 
argument attached goal link 

link direction positive negative neutral strength strong weak specified contribution specified 
guidelines help labelling procedure determine goals satisficed 
knowledge process justifiable notion knowledge source traceable goal graph 
decomposition satisficing argumentation associated generic developer supplied method 

correlation link associated generic user supplied correlation rule 
guidelines help trace decisions identifiable sources knowledge including generic knowledge particular nfr security performance developer expertise 
goal graph completed respect incorporation changes notion goal decision traceable goal graph 
nfr goal target system design alternative selected forward traceable conversely design alternative needs traceable nfr goal backward traceable 

goal needs associated originator responsible person document 

priority criticality dominance goal needs associated originator 

link needs associated originator 
notion allows trace relationships design decisions corresponding goals properties goals people stated goals 
meaningfully changed goal graph 
process change incremental goal graph change changes reflected existing goal graph results new goal graph 
construction meaningfully changed goal graph may proceed intervals group changes introduced order allow consideration temporarily partially disconnected goal graph 
introduce notion value changed goal graph 
change process completed sink node outgoing link labelled satisficed denied labelling procedure invoked 

argument originator recorded change suggested second criterion goal decision traceable goal graphs 

addition omitted goals graph presentations times changes recorded see section 
notion helps ensure reasons changes documented results changes evaluated compared previous system 
order clearly recognise effects changes introduce notion goal graph impact addition deletion change importance requirements new interrelationships design techniques design rationale marked 
notion helps extract impact changes previous system 
guidelines different categories changes incorporating revisions goal graph facilitated scheme divides nfr related changes categories correspond types goals legend uses set guidelines propagating changes 
guidelines categories kinds operations quality requirements structure goal graph 
guidelines changes nfr goals 
change nfr goal usually proceeds downward direction linking expanding goal nfr satisficing argument goals addition quality requirement new goal generally linked existing goals nfr satisficing argumentation goals 
remain isolated nfr goals offspring see offspring created related existing goals 
involves iterative stage decomposing added goals considering design trade offs selecting satisficing goals providing arguments design decisions 
deletion quality requirement involve deleting possibly recursively links incoming outgoing associated requirement re associating links goal 
satisficing goal parent deleted linked nfr goal 
argument parent usually needs deleted 
changing priority criticality dominance quality requirement done changing priority attribute relevant goal 
affects way conflicts resolved number type methods selected associated arguments 
guidelines changes satisficing goals 
change satisficing goal proceeds upwards parents propagating satisficing nfr goals downwards offspring propagating satisficing goals argument goals addition establishes new correlation links affects goal achievement 
deletion results nfr goal having remaining satisficing goal nfr goal needs expansion 
correlation links may deleted affects goal achievement 
change priority affects goal achievement 
guidelines changes arguments 
addition argument supports goal effect strengthening importance goal argument denies goal opposite effect 
deletion argument support goal effect weakening importance goal opposite effect 
change priority argument support goal effect strengthening importance goal argument critical dominant weakens importance argument critical dominant 
argument denial goal effect weakening importance goal argument critical dominant strengthens importance argument critical dominant 
guidelines changes links 
impact addition deletion change priority link conjunctive disjunctive link structurally traceable value changed 
guidelines domain driven changes changes originate domain impact system 
briefly consider domain driven changes changes priorities workload functionality expressed developer terms changes historical records 
may turn lead changes historical records 
guidelines maintaining consistency domain driven change course expressed terms individual guidelines maintaining historical records 
guidelines changes priorities 
priorities associated goals indicating goal critical deals dominant part workload 
priority associated goal may changed 
may lead addition removal goals links contribute positively negatively goal changed priority 
addition link types may change show changes relationships priority goals 
goal priority changed developer may choose focus attention newer higher priority goals depth goal refinement may increased decreased addition change link type may result contribution needed goal 
furthermore developer may consider correlations tradeoffs new goals goals addition correlations involved removed goals may reviewed 
applicable guidelines applied addition removal goals links changed link types 
guidelines changes workload 
workload number bank clients recorded historical records arguments 
changes workload lead changes arguments applicable guidelines apply 
guidelines changes functionality 
consider case adding functionality 
developer consider nfrs apply new function 
example function may parameter nfr goal 
consider case adding new sub task existing task 
existing goals decompositions involving task reviewed see goal involving new sub task generated 
especially interest refinements decompose task components 
cases added functionality developer consider correlations tradeoffs existing goals goals involving new function 
arguments concerning new goals new decompositions recorded 
workload information related new function associated goals recorded arguments 
applicable guidelines applied dealing added goals links guidelines new target techniques 
course dealing change additional techniques producing target system may considered addressed initial historical record 
additional techniques may result new technologies may considered due changes tradeoffs costs techniques initially ruled may reconsidered considered detail 
changes necessarily strictly domain driven may external existing system 
new techniques may represented satisficing goals added historical record appropriate guidelines apply 
new satisficing goal added record associated goals record examined see meaningfully changed 
removal target techniques functionality considered fuller set guidelines 
approximate treatment removal greatly decreasing priority goals selecting 
cataloguing domain nfr specific knowledge change process introduced section illustrated sections facilitated knowledge various types nfrs application domain collected organised way available developer time initial development subsequent changes 
important role nfr framework help organising knowledge available developer needed 
studies cataloguing knowledge helpful typically performed early :10.1.1.30.833
nfr framework allows acquisition representation knowledge domain developed 
include representation functional requirements schema priorities workload 
memory main storage secondary nfr concepts time space throughput response time performance security completeness user friendliness accuracy integrity cost confidentiality availability catalogue nfr terminology 
nfr framework allows acquisition representation knowledge particular nfrs considered 
involves gathering cataloguing knowledge industry academia areas security performance 
part process involves statement terminology concepts particular nfrs shown 
concepts systematic cataloguing techniques methods decomposing nfrs 
methods available developers reuse check list 
organise methods 
goals sorts parameters priorities methods refine goals dimensions 
methods grouped decomposition satisficing argumentation methods grouped types parents offspring grouped predefined developer defined methods 
form broad groups methods axes 
smaller groups methods formed multiple inheritance somewhat orthogonal broad groups 
case performance additional broad groups include sources methods implementation techniques databases object oriented systems semantic data models issue layers reduce number issues addressed time layers data models source target languages workload principles achieving responsiveness ordering execution operations respond quickly users 
grouping organise methods performance requirements framework specialisation nfr framework dealing performance requirements 
broad groups shown starting left 
multiple inheritance arrangement help developer understanding representing fairly large number methods allows gradual step wise refinement 
groupings help developer focus attention combine groups understood methods 
prepared performance requirements assistant uses telos representation language associated translation graphical display software nfr assistant developed conceptbase knowledge base management system :10.1.1.29.2587
catalogues design techniques achieving nfrs general methods confidentiality starting top compiled available developers reuse 
techniques collected done researchers sm hierarchy performance satisficing methods sms 
biometrics authentication pin auditing password confidentiality assurance techniques encryption perturbation manual subsystem identification catalogue design satisficing techniques confidentiality 
practitioners particular areas security performance implementation information systems 
additionally shown catalogue techniques decisions compiled available developers reuse 
interestingly catalogues deal nfrs classes issues business process reengineering phases development software architecture 
knowledge refining nfrs design techniques rationale catalogued means methods knowledge inter relationships catalogued means correlation rules specify positive negative correlations nfrs design techniques rationale 
collected done researchers practitioners particular areas nfrs catalogue correlation rule help analyse trade offs decisions 
catalogues serve resource 
costs capturing organising knowledge 
include costs understanding particular non functional requirements accuracy performance security costs understanding domain system costs understanding recording changes 
catalogues developed speed process dealing change seen sections 
response time confidentiality technique rules accuracy catalogue correlations 
important payoff knowledge approach helps effectively information deal change 
tool support nfr assistant nfr assistant supports nfr framework systematically dealing nfrs process software development 
process nfr assistant helps developer browse query tailor extend various catalogues construct history record 
nfr assistant developer initiates process software development defining loading initial set domain knowledge including functional requirements non functional requirements particular application domain 
developer defines loads predefined nfr specific terminology catalogues method catalogues figures correlation catalogues deal particular nfrs accuracy performance security considered 
catalogue decomposition techniques nfr assistant displays developer iteratively refines top level nfrs represented goals specific ones establishing relationships nfrs nfrs links 
desired developer browses design techniques catalogues techniques correlations considers tradeoffs selects techniques records rationale decisions 
developers extend tailor predefined catalogues go adequate sufficient accommodating needs particular organisation hand 
repetitive refinements functional requirements serve parameters nfrs design techniques design rationale 
result developer elaborates functional requirements needed 
process nfrs design alternatives decisions rationale organised history record 
process developer full control selectively focusing attention determining part history record refine 
addition enabling developer browse query various catalogues nfr assistant helps developer constructing history record 
history record various catalogues represented conceptual modelling language telos supports abstraction principles including classification aggregation specialisation allows association various times changes creation time deletion time treating links objects attributes 
developer selects catalogue pre defined method refinement nfr assistant firstly generates appropriate subgoals corresponding link definition chosen method 
nfr assistant infers correlations positive negative definitions catalogue correlation rules 
nfr assistant helps developer evaluation goals 
developer simply assign label sink node outgoing link indicates sink satisficed denied 
change label assistant determines possibly input developer goals links affected change assigns new labels appropriately 
date nfr assistant implemented offering catalogues security accuracy partial assistant performance 
tools primarily help developer state refine goals 
dealing change may require operations removal goal may temporarily goal graph inconsistent 
section offered initial guidelines helping ensure syntactic semantic structural consistency criteria met 
section discuss extensions nfr assistant 
discussion related extends earlier described usage nfr framework deal change :10.1.1.29.2587
offered initial set guidelines formedness historical goal records presence change 
drawing previous studies attaining quality development banking systems presents initial study dealing change bank loan system offer initial evidence usefulness approach dealing change 
deals combination performance requirements accuracy timeliness informativeness detail 
extend describing process dealing change 
extend initial set guidelines formedness historical goal records presence change 
discussed provide tool support dealing change 
dealing change topic concern software engineering increasing interest requirements engineering community years 
related approach includes decision support systems influenced argumentation aspects nfr framework 
current adapts nfr framework ideas design rationale 
current distinct deals changes utilises semantic structures link types correlations method instances guidelines incorporating changes 
current demonstrates structures help annotation changes 
change process proposed viewed complementary comprehensive environment supports process execution formal process definition capture traces requirements sources process improvement relating traces process definitions 
change process benefit pohl environment features process execution improvement provide better support systematically dealing change nfrs 
conversely pohl environment benefit change process features organising managing nfrs design alternatives tradeoffs decisions rationale support change driven nfrs 
bridge formal definition change process needed 
change process nfrs focal point 
nfrs play role sutcliffe conceptual framework requirements engineering 
large empirical study requirements traceability reported involves developing life requirement origin phases development 
approach similar concerning defects ambiguities omissions conflicts 
looked traceability emphasis incorporating changes nfrs systematically detecting defects supporting process corresponding changes designs implementations 
improvement paradigm goal question metric tame project similar approach sense uses notion goals provides way argumentation questions 
tame viewed somewhat complementary goals general requirements uses collection metrics improvement approach uses nfrs goals systematically support improvement way decomposition correlation achievement integrated development history record serving basis change 
metrics play important role maintenance generally related maintenance software evolution traceability 
requirements analysis safety critical systems shares similar spirit concerned nfrs analysis starting organisational needs 
mcdermid taken causal reasoning approach complementary amalgamation qualitative reasoning truth maintenance systems dialectical reasoning design rationale 
complementary mcdermid focusses safety analysis approach directed systematically supporting changes nfrs 
requirements engineering research benefit study real world systems 
benefitted approach reviewing editions barclays code business banking 
grows earlier daida environment provides support phases information system engineering 
extends environment principles guidelines nfrs guide software evolution process tools daida knowledge base management facilities 
framework follows opposed activity product oriented approach managing software evolution provides additional representation support driven nfrs 
framework extensions 
interestingly study support extensions nfr framework particularly representing changes strengths goal achievement 
examples arisen increases decreases strength 
example organisational policy change resulted increase informativeness decrease performance albeit acceptable levels 
framework currently variety values goal achievement satisficed denied neutral study suggests adding additional existing values 
example degrees satisficed degrees denied 
help represent example situations requirement initially satisficed subsequently satisficed greater degree 
viewed adding features quantitative frameworks high level abstraction retaining features qualitative framework :10.1.1.29.2587
extensions nfr framework formalised lines 
allow precise terminology showing pp represent extensions label link types defined 
currently different strengths relationships goal achievement informally taken care developer uses interactive label propagation algorithm 
framework provide convenient notation reflecting changes time corresponding graphical notation helpful tools display purposes 
guidelines organised structure goal graph 
guidelines suitably formalised envisage demonstrations correctness structural induction goal graph formal verification labelling algorithm generates unique consistent assignment labels 
tool extensions 
extensions needed nfr assistant section tool intended help developers nfr framework 
tool provide support distinguish new goals links old ones goal graph extract differences old new goal graphs 
tool extended support guidelines detecting violations properties section informing developer goals links labels adjusted guidelines section 
support reflecting changes domain section considered 
section guidelines dealing individual operations goal graphs helpful determine commonly arising sequences operations offer sequences atomic operations tool 
nfr assistant semi automatic approach developers direct development process select focus choose supplement pre defined methods correlation rules provide rationale expertise domain nfrs 
feel need offer active guidance model process enactment example described 
considering vast amount informal descriptions loosely connected feel study suggests need structure argumentation way model organisation provides rich ontology example studies 
studies real systems order illustrate cases guidelines section 
studies help determine easily framework notation learned applied practitioners raised experts domains governmental medical computing reviewed previous studies dealing nfrs 
long term goals help developers deal change 
involves offering support dealing quality requirements decreasing developers effort decreasing development time cost offering schemes concise representation assistance reasoning 
approach take existing framework dealing quality requirements provide set guidelines stating mechanics incrementally dealing changes context framework :10.1.1.29.2587
study change banking environment shows framework historical records provide concise way dealing change considering quality requirements 
observations study 
dealing change study reviewed editions barclays codes business banking 
cases supplemented little creativity addition results study reviewed bank result particular study necessarily bank 
identified initial top level requirements variety nfrs including informativeness performance timeliness considered changes nfrs associated changes priorities workload functionality target system techniques 
approach involving historical records captured initial system 
considered changes bank policy manual 
reviewing revising historical records able quickly represent deal changes 
able record changes design rationale deal interactions changed tradeoffs arose changes 
prioritisation goals able focus priorities change helping deal effectively tradeoffs 
able determine impact changes including impact meeting nfrs changed system 
treatment initial revised requirements aided method catalogues 
study drew catalogues developed parts specialisations nfr framework deal particular nfrs accuracy security performance 
expressing change historical records 
considered sources change effects change 
historical record considered changes goals changes priority criticality dominance goals changes decisions changes rationale 
involved identifying important changes determining potential impact quality issues incorporating impact process improvement 
operations dealing change goal graphs going subsequent figures mainly involved see section ffl adding new goal due changes organisational policies ffl revising existing interaction correlations labelling ffl considering new interactions ffl re considering alternative target systems methods ffl providing arguments chosen system organisation workload number clients 
experience conducting study process quite rapid little additional material add graph new material bookkeeping correlation labelling handled automatically 
kind saving helps developer focus domain quality requirements 
feel main reason saving nfr framework captures underlying structure real world knowledge cf 
needed re 
contributions 
specifically approach leads benefits ffl changes nfrs representable knowledge approach enables capturing concepts central dealing nfrs initial subsequent ones ffl incorporating change conceptually simple structure developing recording initial goal graph subsequent revisions ffl incremental change dealt quickly nfr framework provisions encoding nfr specific information relate new requirements old ones find correlations new requirements 
ffl identifying needed change time consuming costly encoded goals interactions 
consulting initial goal graph developer dealing change detect patterns goal graphs reduce searches large volumes documentation quality captured initial goal graph 
nfr framework dealing change inherently deals alternatives goal oriented way 
change alternative appropriate new circumstances 
managing change terms means ends alternatives goals linkages important dimension underlying interactions captured 
change software evolution deals historical temporal dimension versioning configuration management 
explore interaction means ends reasoning dimension dimensions dealing change 
idea applying means ends reasoning deal change basis framework process reengineering combination functional non functional means ends reasoning support process re design 
needed extend notations change suitably formalise 
tool support change process aid developers 
avenue concerns change process 
studies real systems participation feedback practitioners order discover strengths weaknesses 
acknowledgments 
appreciation anthony finkelstein stephen fickas martin feather selecting providing copy barclays code business banking common example workshop research issues intersection software engineering artificial intelligence sorrento italy may 
sincere gratitude help tim baxter barclays bank london provided current edition code 
anonymous referees helpful comments 
gratitude journal editor peri loucopoulos assistant janet guiding publication process 
referees earlier conference helpful suggestions 
gratitude professor john mylopoulos ongoing help 
families constant source love support 
artificial intelligence journal special issue qualitative reasoning vol 
nos 
dec 
barclays bank plc barclays code business banking 
london england effective st jan 
barclays bank plc barclays code business banking 
london england may 
barclays bank plc annual review summary financial statement london england 
barclays bank plc report accounts london 
basili rombach tame project improvement oriented software environments ieee trans 
software eng vol 
june pp 
chung representation utilization non functional requirements information system design 
anderson bubenko jr eds advanced information systems eng proc rd int 
conf 
caise trondheim norway may 
berlin springer verlag pp 

chung mylopoulos vassiliou information system requirements designs mapping framework 
information systems vol 
september october pp 

chung representing non functional requirements process oriented approach :10.1.1.29.2587
ph thesis dept computer science univ toronto june 
technical report tr 
chung dealing security requirements development information systems 
rolland eds advanced information systems eng proc th int 
conf 
caise paris france june 
berlin springerverlag pp 

chung nixon yu quality requirements drive software development 
workshop research issues intersection software eng 
artificial intelligence sorrento italy may 
chung nixon yu quality requirements systematically develop quality software 
proc 
th int 
conf 
software quality mclean va october 
chung nixon yu non functional requirements systematically support change 
proc nd int 
symp 
requirements eng york england march pp 

chung nixon dealing non functional requirements experimental studies process oriented approach 
proc th icse seattle wa apr pp 

chung nixon yu non functional requirements systematically select alternatives architectural design 
proc 
st int 
workshop architectures software systems seattle washington apr pp 

chung nixon yu mylopoulos non functional requirements software engineering 
forthcoming monograph 
clark wilson comparison commercial military computer security policies proc 
ieee symp 
security privacy pp 

coleman ash oman metrics evaluate software system maintainability 
ieee computer vol 
aug 
mcdermid qualitative physics requirements specification safety critical systems potential ai user perspective 
workshop research issues intersection software eng 
artificial intelligence sorrento italy may 
curtis krasner field study software design process large systems 
comm 
acm vol 
nov pp 

fickas desert island column automated software eng vol 
mar pp 

finkelstein green goal oriented requirements engineering 
tech 
rept tr imperial college london univ forthcoming 
finkelstein analysis requirements traceability problem 
proc 
int 
conf 
requirements eng 
colorado springs 
greenspan mylopoulos borgida capturing world knowledge requirements specification 
proc 
th int 
conf 
software eng pp 

greenspan mylopoulos borgida formal requirements modeling languages rml revisited 
proc 
th icse sorrento italy may pp 

dobson change evolution requirements challenge practice software engineering 
proc 
ieee int 
symp 
requirements eng san diego ca jan 
los alamitos ca ieee computer society press pp 

william performance prediction relational database management systems 
ph thesis dept computer science univ toronto 
european communities information technology security evaluation criteria provisional criteria version june luxembourg 
jarke rose managing knowledge information system evolution 
proc 
sigmod chicago may pp 

jarke mylopoulos schmidt vassiliou daida environment evolving information systems acm trans 
information systems vol 
jan pp 

jarke ed conceptbase user manual 
univ passau 
jarke pohl requirements engineering year virtually managing changing reality workshop system requirements analysis management exploitation dagstuhl saarland germany october 
jr bingham jr 
eds quality control handbook rd ed new york mcgraw hill 
bryan kramer tool documentation dept computer science university toronto 
lee extending potts bruns model recording design rationale 
proc 
th int 
conf 
software eng austin texas may pp 

lehman belady 
program evolution processes software change 
london academic press 
loucopoulos system requirements engineering 
mcgraw hill 
panel impact environmental evolution requirements change 
proceedings third ieee international symposium requirements engineering annapolis md jan pp 

mccabe pareto principle applied software quality assurance eds 
handbook software quality assurance new york van nostrand reinhold pp 

mylopoulos borgida jarke koubarakis telos representing knowledge information systems acm trans 
information systems vol 
oct pp 

mylopoulos chung nixon representing non functional requirements process oriented approach 
ieee trans 
software eng special issue knowledge representation reasoning software development vol 
june pp 

mylopoulos chung yu nixon requirements engineering selected papers 
tech 
rept 
tr dept computer science univ toronto july 
mylopoulos borgida yu representing software engineering knowledge automated software engineering appear vol 
july 
nilsson problem solving methods artificial intelligence 
new york mcgraw hill 
nixon chung david alex borgida mylopoulos martin stanley design compiler semantic data model 
joachim schmidt editors foundations knowledge base management 
berlin springer verlag pp 

nixon implementation information system design specifications performance perspective 
kanellakis schmidt eds database programming languages bulk types persistent data rd int 
workshop 
aug greece 
san mateo ca morgan kaufmann pp 

nixon dealing performance requirements development information systems 
proc 
ieee int 
symp 
requirements eng san diego ca jan 
los alamitos ca ieee computer society press pp 

nixon representing performance requirements development information systems 
jarke bubenko jeffery eds advances database technology edbt proc 
th int 
conf 
extending database technology cambridge berlin springer verlag pp 

nixon dealing performance requirements information systems 
ph thesis draft dept computer science university toronto dec 
pohl process centered requirements engineering environment 
ph dissertation informatik rwth aachen germany feb 
klaus pohl process centered requirements engineering 
research studies press new york john wiley sons 
potts bruns recording reasons design decisions proc 
th icse pp 

rolland modeling evolution artifacts 
proc 
int 
conf 
requirements engineering colorado springs colorado apr 
simon sciences artificial nd edition 
cambridge ma mit press 
smith performance engineering software systems 
reading ma addisonwesley 
martin telos sh tool documentation dept computer science university toronto 
sutcliffe conceptual framework requirements engineering 
requirements engineering vol 
pp 

dept defense trusted computer systems evaluation criteria dod std dec 
yu modelling organizations information systems requirements engineering 
proc 
ieee int 
symp 
requirements eng san diego ca jan 
los alamitos ca ieee computer society press pp 

yu mylopoulos understanding software process modelling analysis design 
proc 
th int 
conf 
software engineering sorrento italy may pp 

yu mylopoulos modelling strategic actor relationships business process reengineering int 
journal intelligent cooperative information systems vol 
nos 
pp 

yu modelling strategic relationships process reengineering 
ph thesis dept computer science univ toronto 
technical report tr 
yu mylopoulos lesperance ai models business process reengineering ieee expert august pp 

yu reasoning support early phase requirements 
proceedings third ieee international symposium requirements engineering annapolis md jan pp 


