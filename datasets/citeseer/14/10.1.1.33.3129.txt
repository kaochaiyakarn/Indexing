replication experimental results software engineering andrew brooks john daly james miller marc roper murray wood dept computer science university strathclyde livingstone tower richmond street glasgow xh scotland email andy cs strath ac uk isern carrying empirical studies widely held importance 
view widely held experiments replicated externally verify validate original results 
serves main functions 
need external replications established 
role replication experimental software engineering discussed 
confirming power external replications results experimental software engineering provisionally accepted 
extension framework experimentation software engineering basili proposed differentiate various kinds internal external replication powers confirmation allow better appreciation context piece empirical 
second presents concrete example external replication experiment tested benefits maintenance modular code non modular monolithic code 
results original experiment korson showed modular program maintained significantly faster equivalent monolithic version program condition modularity implement information hiding localizes changes required modification 
results replication strikingly different original showed significant difference average times taken maintain modular monolithic code 
inductive analysis undertaken investigate reasons difference 
evidence uncovered suggesting ability effect observed original experiment lack realism context subjects asked perform tasks differing degrees subjects understanding programs different approaches taken subjects making required modifications possible deficiencies subject monitoring 
sources variability discussed 
concluded external replications combined inductive analysis techniques important vital part play realization generalizable results 
daly fraunhofer institut kaiserslautern germany carrying empirical understand problems software engineering widely held importance 
inherent problems drawing single studies especially human subjects 
intended primarily subject computational find relevant 
stage experiment background reading result interpretation writing report prone error 
problems background may properly researched empirical study may addressing unimportant issue 
ii inappropriate methods may 
example subject experiments strictly controlled laboratory experiments usually best supplemented qualitative ethnographic forms experimentation shall see 
insufficient sampling lead situation real quite sizeable effect little chance revealed significant 
iii errors commission omission may experimental variables may incorrectly classified 
iv statistical procedures may 
example parametric statistics may applied non normal data 
alternative interpretations may 
subject experimentation interpretation placed data 
agree collins regards experiment performed alternative explanation data overlooked 
failure discuss alternative interpretations data prevent reviewer performing meaningful meta analysis research area 
brooks example providing reader alternative interpretations 
vi missing details may prevent reader forming view worth data example error estimates may provided critical measures raw data may crudely summarised full 
vii experimental methods may poorly reported impossible perform external replication study 
example instructions task materials subjects may fully reported may unobtainable 
unfortunately numerous empirical studies software engineering literature lacking respect 
authors criticised poor reporting example basili 
may required quality completeness reporting subject experimentation theses higher degrees series highly detailed technical reports 
viii may justified analysis may simply incorrectly expressed terms null hypothesis 
ix problem confirmation bias experimenters reinterpret information contradicts hypothesis hold phenomenon appears complicated originally thought 
problems scientists demand experimental results externally independent group researchers repeat experiment obtain similar results 
external replication alleged cornerstone modern scientific disciplines 
generally speaking feel regarded research advocacy managed support idea tool lacks rigour characteristic empirical studies established areas modern engineering scientific social science disciplines 
system common 
empirical papers published respected journals proceedings escape criticism see example criticisms 
share glass view advocacy problem advocacy long just doesn occur component missing research 
doubt need software engineers principles guidelines professional community high confidence application safety critical 
doubt need solve problems software maintenance improve software economics 
doubt need solid empirical foundations claims software 
stated excerpts report computer science technology board called system maintenance may constitute percent system cost lifetime absence stronger scientific engineering foundation complex software systems produced brute force 
leveson stressed role experimentation building scientific foundation software engineering requires building mathematical models theories performing carefully design experiments 
generation software engineering research generation educating students foundation strong serious software problems persist 
view fundamental fully justified 
little real import learned original conference 
potts cast similar harsh doubts practical difference software engineering research years 
established principles guidelines regarding structured design written page jones textbook sold copies 
surprised order principles guidelines wanting 
gained critical examination previous empirical studies externally replicating experiments performing verifying validating new experiments modern software technologies 
general discussion role replication scientific ideology practice basis discussion role replication experimental computer science 
various kinds internal external replication differentiated 
internal replications undertaken original experimenters may published series external replications undertaken independent researchers seek check improve findings researchers 
noted article concerned notion replication applied individual experimental design 
example experiments built replication programming team tackling project scope examination increases teams convincing individual study 
notion different kinds replication carry different powers confirmation developed 
confirming power external replications argued principles guidelines software engineering arising experimental computer science treated caution provisionally accepted 
internal replications carry confirming power 
reader left doubt importance performing external replications 
extension framework experimentation software engineering basili proposed fully differentiate various kinds replication powers confirmation allow researchers referees alike better appreciate context piece empirical 
provide concrete example external replication presents results external replication experiment tested benefits maintenance modular code non modular monolithic code 
results original experiment korson showed modular program maintained significantly faster equivalent monolithic version program condition modularity implement information hiding localizes changes required modification 
interest performing external replication established spent weeks reviewing number doctoral dissertations computing field emphasis experimental investigations 
korson experiment chosen attempt performing external replication counts 
unsure empirical foundation guideline modular software better korson claimed show large positive effect modularity 
lord rutherford quoted saying experiment needs statistics ought done better experiment 
korson experiment better experiments raw data histogram plots convince reader result resorting inferential statistics 
unnecessary perform formal statistical power analysis check reasonable probability detecting significant finding replication 
fenton cites relatively early claims show strong evidence support widely held beliefs benefits modularity 

korson thesis appeared contain sufficiently detailed descriptions experimental materials procedures allow replication attempt 
appendices thesis contained complete code listings lists instructions subjects 
body thesis provided criteria subject participation description experimental design processes 

korson claimed succeeded providing internal replicability stating study demonstrated carefully designed empirical study programmers lead replicable unambiguous 
reading korson qualified performed empirical empirical software engineering dismissed reading 
find criticisms literature banker summarise korson findings criticism 

korson bears detailed scrutiny externally replicable increase confidence commonly accepted guideline modular programs easier faster maintain non modular ones condition modularity implement information hiding localizes changes required modification 
despite problems empirical noted earlier resulting devoting resources necessary performing external replication took view study externally replicated korson place start 
results external replication markedly different original 
results direction significant difference average times taken maintain modular monolithic code korson ae value 
caused inconsistency 
experiment performed 
break paradox experimenters regress see section inductive analysis undertaken investigate reasons difference 
evidence uncovered suggesting ability effect observed original experiment lack realism context subjects asked perform tasks differing degrees subjects understanding programs different approaches taken subjects making required modifications possible deficiencies subject monitoring 
sources variability discussed 
extends analysis initial report external replication daly 
drawing experience having performed external replication guidance scale recipe improving attempting replication level reported detail required list desiderata help perform meaningful replication 
usual arrive appreciation empirical reading published reports 
performing external replication provides deep appreciation strengths weaknesses piece 
concluded external replications combined inductive analysis techniques important vital part play realisation generalizable results software engineering 
replication ideology subjecting theory experimental test crucial scientific activity 
popper explains researchers sure results reporting stating take observations quite seriously accept scientific observation repeated tested 
coupled advice modern scientific ideology demands experimental results replicable external agency 
example lewis rightly claim precise repeatable experiments hallmark mature scientific engineering discipline 
goldstein goldstein take step stating take granted observation determination fact reputable competent scientist 
may necessary repeat observation confirm reject 
science limited call public facts 
anybody able check experimental observations repeatable 
researcher repeatable regard scientific community execute replications just verify experimental results 
example huxley stated scientific inquiry matter duty expose supposed law possible kind verification 
huxley notes science common life confidence law exact proportion absence variation result experimental verifications 
greater number experimental verifications better time additional verifications carry power confirmation 
agree curtis says results far impressive emerge program research shot studies 
curtis appears referring internal replications mention greater confirming power external replications 
broad wade description scientific ideology consider replication third check verifying scientific claims peer review system awards research journal takes place publication 
describe ideal reporting experiments follows scientist claims new discovery way verify claim 
describing experiment researcher list type equipment procedure followed chef recipe 
important new discovery sooner researchers try replicate laboratories 
replication concerned way original hypothesis expressed 
smith stated replication things tests linguistic formulation hypothesis second tests sufficiency explicit conditions occurrence phenomena 
need go far performing replication discover problems linguistic formulation hypothesis 
example henry humphrey state experiment supports hypothesis subjects produce maintainable code object oriented language procedure oriented language fact subjects asked modifications object oriented system functionally equivalent procedure oriented system originally developed single graduate student 
correct statement hypothesis earlier 
regarding sufficiency explicit conditions example criteria subject participation software engineering experiment may insufficiently specific result replication yields different results owing variability subjects 
concerning particular flawed study psychology accepted valid long time broad wade wrote helping raise generations undergraduates replicate study 
question equally addressed educators computer science students regarding numerous studies results communicated apparently quite students 
human component rich variety software hardware technologies surely community perform verifications 
said written quality control software development card 
ironic say quality control mechanism replication especially external replication little practised doing science engineering 
additional irony current state software development practice programming suggested fault detection recovery mechanism see example 
know little doing right replicating system functionality programs 
surely better tactic replication earlier 
stronger scientific engineering foundation come research community involved external replications 
presenting external replication discuss idea replication number viewpoints 
frequency actual replication studies schools colleges universities replication studies performed daily studies usually scaled versions performed students act learning confirming power 
collins notes known area confirmatory power experiments 
experiments performed day schools universities part scientific training students confirming power tests results supposed reveal 
employed research rarely perform replication studies 
collins notes vast majority science replicability axiom matter practice 
broad wade draw attention lack replication stating erroneous science turned replication regularly practiced self policing imaginary mechanism 
broad wade simpson traction replication probably occasions history science philosopher ideal replicability attained 
broad wade saga cold fusion 
laboratories world tried repeat cold fusion experiment see close amato 
ordinarily scientist trying replicate poorly reported experiment 
lure cheap relatively pollution free energy abundance exceptional motivation 
regarding frequency external replication software engineering experiments unable find examples 
works discuss external replication cite examples provides discussion independent verification validation software independent group different software development team 
reviews area software testing maintenance empirical relatively commonplace mention external replication roper selected annotated bibliography software testing investigation characteristics empirical software maintenance studies sharpe 
particular study externally replicated soon results published shneiderman experiments called question utility flowcharts 
scanlan shneiderman led decline flowcharts way represent algorithms 
scanlan identified fatal flaws methods shneiderman example time measurable dependent variable subjects time required 
scanlan designed new experiment time dependent measure claimed experiment shows significantly time required comprehend algorithms represented flowcharts 
flow charts typical software engineering research empirical poor done followed external replications confirm generalizations 
broad wade simpson traction watched traction unsuccessfully tried repeat biochemistry experiment concerned protein synthesis 
stated earlier article concerned notion replication applied individual experimental design 
internal replications carried part program research relatively commonplace 
basili provide details examples forms replication 
internal replications reported undertaken improve sensitivity results published report written just single experiment 
rarity external replication software engineering research major concern 
defining replication care taken clarify meant replication 
universe forever changing 
human observers subjects unique brooks curtis report empirically discovered programming ability differences ranging 
number measurements describe experimental setting 
art experimental science making errors commission omission 
accuracy observations improved uncertainty principle important 
strictly speaking correct talk partial replication goal performing near exact replication possible 
exact replication unattainable 
broad wade exact replication impractical undertaking recipe methods incompletely reported resource intensive credit science won performing original 
draw attention important activity improving experiments 
state scientists repeat experiments rivals colleagues large ambitious repeat recipes purpose improving 
adaptations improvements extensions 
recipe improvement process experiment corroborated 
baroudi orlikowski qualify note study fails reject null hypothesis due low power phenomenon possible 
replications study greater power may resolve indeterminacy 
authors provide useful guide issues surrounding statistical power inferential statistics 
experimenters regress noted collins paradox exists want replication test truth scientific claims problem experimentation matter practice clear second experiment done sufficiently count check results 
test needed test quality experiment forth 
failed replicate korson results show inductive analysis data established possible interpretations differences sets results 
inductive analysis yielding understanding processes involved resolved paradox experimenters regress need perform experiments resolve conflicting results 
framework stated earlier article concerned notion replication applied individual experimental design 
mean internal replication original experimenters carried series evolutionary experiments may published series 
basili cite examples internal replications 
internal replications confirmatory power achieved external replications 
external replication mean published experiments repeated experimenters independent originally carried empirical 
exact replication unattainable important consider categorize differences 
researchers consider experimental method 
similar alternative method 
basic finding replicated different methods carries greater weight 
brewer hunter stated employment multiple research methods adds strength evidence 
may important confirm original results 
method improved example debriefing subjects formal experiment 
shall see korson replication provide insights processes involved 
type improvement compromise integrity replication 
second researchers consider task 
similar alternative task 
basic finding replicated different tasks carries greater weight 
curtis stated basic finding replicated different tasks convincing 
may important confirm original results 
task improved example making realistic 
third researchers consider subjects 
similar alternative group subjects 
basic finding replicated different categories subjects carries greater weight 
may important confirm original results 
group subjects improved example subjects stringent criteria participation 
experimentation framework software engineering established basili framework explicitly extended incorporate external replication various forms method task subjects similar alternative improved 
believe unnecessary stage detailed categorizations 
method task subjects categories applied internal replications 
course alternatives scale recipe improving substantial debatable study counts replication 
initially power confirmation high external replication studies come point result established replication ceases research value experiment moved research laboratory teaching laboratory 
terms method task subjects categorize korson replication example improved similar similar 
method categorized improved subjects 
korson replication review korson korson designed series experiments testing aspect maintenance 
experiment greatest interest experiment designed test modular program implement information hiding localizes changes required modification faster modify non modular equivalent version program 
non modular monolithic program created replacing procedure function call modular version body procedure function 
programmers asked functionally equivalent changes inventory point sale program modular version approximately lines long monolithic version approximately lines long 
programs written turbo pascal 
changes required classified perfective maintenance defined swanson changes enhance performance cost effectiveness efficiency maintainability program 
korson reckoned time taken perfective maintenance changes significantly faster modular version 
experiment subject completed pretest 
simply way subjects experimental design computer hardware software environments 
modification process experiment proper contained phases phase think modifications coded noting deletions additions changes original source code 
phase edit computer original program edited reflect modifications 
phase syntax syntax errors interactively removed modifications 
phase logic logic errors interactively debugged program passes standard test 
participants ample time read instructions ask questions experimental process perfective maintenance tasks 
subjects satisfied understood nature required modifications participant appropriate program listing modular monolithic phase timings started 
phase began participant changes ready modify actual program 
phase started required changes entered syntax errors removed 
phase entered syntax errors removed 
times phases recorded basis statistical results see section note korson regarded phase simply exercise typing timing data phase involve phase analysis 
korson summarised results experiments follows study provides strong evidence modular program faster modify non modular equivalent version program conditions hold modularity implement information hiding changes required modification 
existing modules program perform useful generic operations implementing modification 
significant understanding changes existing code required performing modification 
contrast study provides evidence modifications fitting categories unaided presence modularity source code 
condition arising experiment condition interest 
korson result summary full draw attention claim modifications necessarily quickly modularised code 
conditions viewed attempt defining subset state space modular programs modularity allows program modifications faster 
critique reading korson classified performed empirical 
number criticisms arose attempted external replication necessitated close inspection reported 
modular program korson experiment global array variable having proper driver procedure local array variable formally passed parameter modules require access 
modular program implement true information hiding result biased full parameter passing implemented array variable modular subjects may taken longer perform maintenance tasks 
korson discusses common coupling allowed information cluster implementation allows program access array variable 
additional criticism arises global declaration array variable 
modular subjects specifically asked delete declaration declaration immediately succeeded helpful comment fall access inventory information act deleting global array variable declaration modular subjects reading line biased information need look modules conveniently placed top procedure section 
driver procedure local array variable modular subjects placed position monolithic subjects having take time locate relevant code 
criticism pertinent korson develops explanation linear searching monolithic code time consuming whilst modular code allows programmer tree search strategy 
korson incorrectly asserted comments variable held constant 
instruction delete global variable declaration questionable entirely different point view wary subject may suspect variable inadvertently program perform additional searches check 
major criticism piece experimental involving human subjects failure supplement traditional statistical approach qualitative ethnographic approach seeks provide alternative interpretations data level individual subject behaviour 
korson relies solely timing data developing interpretation data 
whilst product measures performance important understanding underlying processes dramatically change interpretation results 
alternative interpretations may realized notes subjects program listings analysed subjects cause difficulties resulted highly skewed timings analyses performed various saved versions modified program phases experiment analyses differences subjects professional programmers advanced computer science students 
major criticism piece experimental involving human subjects lack realism tasks context subjects asked tasks 
korson experiment regarded having imposed artificial ordering phases 
criticism natural ways programmer locate code change search facility text editor korson experiment subjects manually search write changes listing program phase 
external validity experiment questioned real programmers behave way 
sections evidence corroborates criticisms 
pilot study initial pilot study conducted members research group empirical foundations computer science ensure problems example experimental materials execution tasks computer environment 
problems discovered discussed 
comments pilot subjects informal debriefing session noted 
problems encountered pilot study pilot study session consisted performing required modifications pretest experiment programs 
problems encountered pretest pilot straightforward modification page turbo pascal code sorted words alphabetic order 
experiment pilot problems encountered 
alt function keys testing program worked modification failed performance changes taken consideration 
problem remedied experiment proper hot key customisation code 

spelling mistakes documentation noted remedied experiment proper 

subjects unfamiliar american specific terminology 

subjects asked name file modify despite mentioned instructions 

large sheet test results caused problems subjects checking output expected results 
solutions adopted problems discussed section experimental design differences section 
results pilot study debriefing subjects informally pilot study 
substantive comments paraphrased pretest experiment follows pretest unrealistic problem useful turbo pascal practice fixed array file processing unnatural experiment pretest taught semantics task pretest disk seek read write pairs replace array assignment statements whilst experiment array assignment statements replace disk seek read write pairs significant intellectual capacity needed perform changes monolithic modular programs modular program instruction delete global array variable happens variable declaration immediately followed comment procedures ones array consequence longer consider program just looking procedures monolithic program task turns global search replace operation unrealistic editing environment feel having manually search listing changes modular program unhappy arrays passed global structures passed parameters means task easier pass editing compiling wrapped logic phase suggest highlighting name file mistake try understand happening remember restore test data files properly testing reveals mistake time program layout commentary improved think written changes correctly incorrectly typed changes comments corroborate criticism section clearly viewed providing additional criticisms korson study 
discussion section section find similarity comments subjects experiment proper 
external replication study experimental design differences discussion general problem deciding changes experimental recipe section description suggestions improvement chose implement 
described changes experimental instructions attempt improve readability highlight particular points 
number actions performed documented korson described 
changes actions minor recipe improving ones impact reduce sources variability help understand processes products subjects behaviour felt justified making 
noted earlier problem encountered american specific terminology 
solution adopted create explanatory footnotes documentation experimental subjects 
avoid subjects experiencing problems locating name file modify name file highlighted bold documentation 
filename parentheses middle large paragraph deemed easily missed reading 
similarly testing phase instructions alt key numbers highlighted placing bold alt keys provided distinct ways carrying program test 
participants listing input data file listing modified output file program run test data comparison actual program output 
korson actual data changes looking output listings circled reduce possible variability testing times overlooked doing pilot study 
korson record number participants monitor comments differences 
study participants monitor 
korson provided turbo pascal manual participant 
hand manual participants noted unclear facsimile copy korson thesis done 
conflicts caused 
korson allowed subjects keep turbo pascal manuals payment participation 
hand gave undergraduate subjects credit costs lecture notes semester 
experiments run afternoon pm pm pm pm korson done 
pretest experiment run time unclear korson ran pretest occasion experiment 
pretest experiment provided subjects break light 
korson subjects experiment 
chose asking subjects complete debriefing questionnaire included asking brief personal details see appendix 
done help obtain understanding processes subjects behaviour 
subjects randomly assigned groups participated experiment single laboratory subjects monolithic programs sat subjects modular programs discourage plagiarism significant worry 
korson seat layout 
subjects told nature experiment verbally instructed different versions program existed subsequently certain subjects finish quicker intention reduce subjects concern performance 
korson verbal instructions subjects 
replication methodology replicated experiment required subjects number korson 
volunteers 
subjects members computer science department university strathclyde mixture nd year rd year final year students research students research assistants 
described heterogeneous group terms age qualifications experience ability subjects met criteria set korson fluency pascal knowledge ibm pc amount programming experience 
surprise especially comment pilot subjects felt experimental task required significant intellectual capacity subjects modular group monolithic group failed complete experiment 
failed start experiment proper having walked early 
progressed far logic phase 
korson subjects experiment finished sitting planned second sitting unexpectedly failed complete 
subjects group modular group monolithic think syntax logic total think syntax logic total subject subject subject subject subject subject subject subject subject subject subject subject subject subject subject subject subject mean mins 
korson result times experiment 
complete asked return complete experiment 
fortunately lost equal numbers subjects groups 
viewed symptomatic floor effect occurs experimental task difficult 
procedure subject followed 
pretest familiarize subjects environment example experimental procedure editor 
short break minutes allow subjects clear thoughts 
experiment 
noted subject asked complete debriefing questionnaire included asking brief personal details see appendix 
pretest experiment format korson reader directed thesis full details instructions documentation modification specifications full source code listings 
statistical results timing data collected experiment results parentheses korson mean times bar charts display mean modular times versus mean monolithic times korson 
size effect discovered believed results similar korson times modular subjects significantly faster monolithic subjects 
adopted bar charts displaying mean times 
null hypothesis form information hiding employed effect maintainability 
surprisingly reject null hypothesis mean syntax time took longer modular version 
difference modular monolithic mean total times relatively small minutes compared minutes 
contrast korson times minutes compared minutes see table 
average korson monolithic subjects took times long modular subjects monolithic subjects took times long modular subjects 
addition mean total time standard deviation calculated represent spread subjects times korson discuss thesis article say tested homogeneity variance bartlett test basis test failures experiments decided non parametric wilcoxon rank sum test 
calculation shows korson small standard deviation modular group exceptionally large monolithic group correct choosing non parametric test 
hand standard deviations groups similar distributions passed skewness kurtosis tests normality test justified see 
possible reason relatively poor performance modular subjects ability subjects relative korson 
subjects able korson slower results modular version surely reflected slower results monolithic version 
shown case 
opposite occurred phases monolithic times substantially quicker corresponding korson times leading faster mean time greater minutes 
possible reasons discussed section 
korson wilcoxon rank sum test attempt reject null hypothesis information hiding effect maintainability 
korson test yielded similar level statistical significance 
probability korson produced results chance ae consequently rejected 
direction result korson probability level calculated ae tailed independent test df 
level removed korson significance level minimal level usually required reject null hypothesis 
source inconsistency 
experiment performed 
try break paradox experimenters regress inductive analysis undertaken investigate reasons difference results discussed section 
null hypothesis rejected usually necessary perform statistical power calculation determine insignificant results due poor power levels phenomenon really insignificant 
analysis unnecessary inductive analysis yielded number interpretations subjects behaviour render meaningless interpretation solely null hypothesis 
korson version mean dev 
mean dev 
modular monolithic table statistical values total time inductive analysis traditional statistical approaches require identification independent dependent random variables errors omission commission single mistake entire experiment 
assumptions underlying parametric statistics tested example assumption normality single incorrect assumption entire experiment 
statistical approaches give reader real insights data disadvantageous trying understand subject behaviour 
correlation studies variables concern lead discovery significant correlations imply cause effect individual subject behaviour different datum points result entirely different processes 
overcome problems brooks argue experimental paradigm inductive analysis supplements statistical analysis 
paradigm data gathering remains unrestricted possible allow building database actual descriptions daly incorrectly quote korson ae value 
performance results 
techniques borrowed machine learning applied database generate rules decision trees 
inductive analysis help explain processes underlying individual results facts rules relate datum points averages 
inductive analysis wrongly similar shotgun approach correlation 
differences individual datum average trends explained requirement generalize results populations emphasis trying understand took place 
inductive analysis manipulate ordered unordered variables enables experimenter knowledge engineer full build database experimental results restriction 
rule induction system iris 
iris allows database variable turn dependent variable 
new variables noted experiment may introduced database long variable values obtainable 
usually induction data described different levels detail observing effect induction rules 
appendix gives level data logical groupings took place 
final phases induction process numeric variables assigned logical values attempt induce fragmented rules logical groupings crude 
strategies try induce fragmented rules included splitting induction database monolithic subjects modular subjects 
act constructing database brings experimenter closer data allows degree inductive analysis take place supplements achieved machine learning systematically search patterns 
parts induced rules induced rules may suggest patterns worthy closer examination 
discussing patterns revealed inductive analysis see section variables summarised table 
detailed description variables required provided final logical groupings 
analysis extends daly account monitors observations experiment impact analysis refinement reinforcement 
induction database variables representing timing data categorized logical groups plotting histogram data choosing best split points inspection 
subjects categorized position variable distinguish undergraduates ug research students rs research assistants ra 
variables concerned answers subject wrote questionnaire experiment 
graded logical groups similar meanings possible 
variable diff caused variable description logical values think time note changes program 
edit time edit changes think 
syntax time remove syntax errors 
logic time remove logical errors 
total total time complete task 
total total edit 
program type program subject mono mod number characters subject wrote think age age subject sex sex subject position university status subject ug rs ra easy mention task easy es editor mention making editor es diff caused difficulty 
code understanding code 
learn learned 
extra comments 
number changes unidentified think difference syntax working programs es table induction variables difficulty graded pretest finding correct places modify remaining mixture individual answers 
variable code understanding code graded understanding relevant parts fairly 
variable learn learned graded read instructions fully mixture individual answers modifications code understood 
variable extra comments graded comments code noticed extra comment comments code read help pascal syntax forgotten comments code helped 
subjects programs saved editing changes think phase ii removing syntax errors iii program logically correct 
saving programs allowed new variables 
number changes unidentified think phase variable divided groups change changes calculated comparison edited version completed working version 
saved programs examined determine changes syntax phase logic phase variable 
final database shown table 
separate induction database built pretest data meaningful patterns suggested 
induction variables subject mod rs mod ra mod ug mod ug mod ug mod rs mod ra mod rs mono ug mono ug mono ug mono ug mono ug mono rs mono ug mono ra mono ug table final data induction package induced rules interpretations rules produced variable attempt explain difference findings korson 
rules induced highly fragmented revealing patterns data indicative sources variability overlapping influence 
rule induction package produced rules drew attention interesting patterns described 
pattern discovered indirectly rule weakly suggested ability effect prompted investigation relationship pretest timings timings experiment proper 

suggested relationship total times taken experiment pretest 
monolithic subjects appeared top twelve places ranked pretest timings see data figures 

subjects missed high number changes think phase experiment highest syntax times 
pattern interpreted ability effect 
modular subject finished fastest pretest experiment known person high ability 
accept ability effect interpretation underlying problem replication revealed majority higher ability participants assigned monolithic task think syntax logic total think syntax logic total subject subject subject subject subject subject subject subject subject subject subject subject subject subject subject subject subject result times pretest 
remembering participant assignment random pretest timings 
korson hand claimed ability effect exception subject consistently finished korson series experiments 
suggested ability effect source variability experiments 
ability effect interpretation ete performance studies human subjects performance behaviour experimental outcomes wholly attributed ability subject interpretation fails reveal treatment effects influence 
subjects deviate ability interpretation sense performance mismatch pretest experiment 
comments debriefing helped explain mismatches 
subject longest pretest time second fastest modular time commented instructions long difficult read taken time read pretest instructions learned pretest 
subject mentioned comment preceding procedures required modifications concentrated big help 
subject took longest monolithic code despite second fastest pretest commented read instructions fully start missed important code outputting record 
subject accidentally deleted line experiment monitor advised problem 
monitor interviewed intervention 
doubt line accidentally deleted simply coincidence observed monitor 
accidental deletion corrected program passed test 
felt justified including datum analysis discarded meant discarding longest time monolithic subject 
considered applying correction factor recorded time monitor crudely estimate minutes elapsed accidental deletion notification subject crude estimate 
subject allowed continue recorded time little experimental hypothesis source difficulty program independent 
subject pretest performance relatively poor performance experiment proper commented difficulty having arisen experiment having read data wrong variable monolithic code 
subject written procedures action taken extra time 
second pattern concerns subjects missed high number changes think phase experiment 
subjects highest syntax times checking saved versions programs clear edits correcting semantics syntax phase specifically instructions 
monitor written note subject appeared edit phase thinking 
significantly subjects performed tasks modular code 
subjects minutes syntax main reason mean syntax time modular version greater mean syntax time monolithic version 
clearly indicates problem experiment 
phase appears overlapping creating inaccurate timings think syntax logic phases 
monitor written note subject realized making syntax errors simply typed written think phase subject interrupted edit phase ask monitor 
monitor advised required program 
possible reasons phase problem include experimental environment think edit syntax logic phases simply artificial monitors timed subjects monitor subjects strict controlling subject ready move phase 
analysis discussion korson required various versions subjects programs saved worked phases experiment results analysis important data 
carry analysis programs 
unix utility diff allowed comparison saved syntax program final working logic program gave indication caused subject extra time debug 
shown table subjects difference programs remaining subjects relatively low logic times doing running testing procedure 
reality 
logic times modular group difference syntax working programs variable ranges minutes equivalents monolithic version range minutes 
explanation unexpected variability procedure subjects followed test program 
korson experiment allow subjects target testing distinct ways carrying full test program single hot key ii series hot keys iii manually entering test data 
optimal timing results way follows ii iii 
addition subject reread instructions testing procedure minute may spent 
consequently time minutes may regarded explainable 
may better practice monitor test program subject attempt reduce significant variability appears arisen 
happen results subjects saved syntax program different saved logic program logic time minute logic times assuming performed testing procedure minimum time possible 
answer bring subjects logic times line korson modular subjects bar significant difference modular monolithic subjects ae tailed independent test df 
difference total time means widens little average monolithic subjects took times long modular subjects 
conservatively tailed significance levels tailed levels results remain outside nominal ae level usually required 
time stretch factor matches size stretch factor modular monolithic programs probably coincidental sources variability revealed inductive analysis 
remaining analysis discussion section draws individual comments subjects notes monitors follow inspections programs written discussion viewed inductive analysis arising cross referencing material goes achieved machine learning techniques 
source variability approach subjects took making modifications 
observed monitors experiment subjects appeared attempting follow execution flow program just concentrating finding modifications 
monitor written note modular subjects appeared doing searching 
differences approach may related subjects cognitive style field dependent style involves analytical global processing stimulus material 
mckenna argued measures field dependence meet criteria cognitive style conceptual level empirical level substantial correlations standard ability tests 
result different approaches taken subjects understanding code ranged performed person competent testing procedure working program 

subjects fastest monolithic version explained subsequent debriefing questionnaire understanding code subjects commented understanding code necessary modify 
comment agreement feelings pilot study subjects see section 
hand examination listings written modifications showed subjects attempted follow flow program control 
subjects took longest time finish tasks modular version 
subject specifically commented flow program control caused difficulty 
evidence slowest modular subjects tried understand code strictly necessary evidence fastest modular subjects noticed comment preceding procedures required modifications concentrated help 
modification variation fact subjects wrote procedures monolithic version action taken extra time 
monitor written note subject eraser correct pencil markings source variability timing data 
mentioned monitors may strict compared monitors korson experiment 
may reasons overlapped phases 
subjects complete actual experiment commented nature experiment take longer able implement modifications way accustomed example compiling running experiencing program making changes 
phased approach artificial 
subjects similar comments 
subjects commented instructions long difficult read 
unravelling processes revealed possible reasons variability subject behaviour broken paradox experimenters regress explain different results obtained replication study 
guidance guidelines reporting computational experiments mathematical software established 
see crowder jackson lee andrews 
hauck anderson little improvement reporting simulation experiments statisticians nearly decade recommendations andrews published hooker commented minimal standards reproducibility observed authors 
ironically bearing mind shneiderman utility flowcharts lee suggest flowcharts way describing detail algorithms computational experiments mathematical software 
general terms guidance provided papers carries reporting software engineering experiments 
give advice regarding scale recipe improving conducting external replication advice regarding reporting subject experiments 
scale recipe improving rare ideas experimental recipe improved 
stated earlier making major improvements experimental methods resisted main interest lay trying perform near exact external replication confirm original results minor recipe improving changes tolerated 
minor recipe improving changes implemented described section 
improvement debriefing subjects interfere application original method 
list suggestions improvement implemented highlight problem deciding scale recipe improving improve program layout commentary remove biased comment modular program replace global variable modular program fully implement information hiding reduce size experimental instructions subjects 
sure obtaining similar results improvements implemented 
recommendation conducting external replication carefully consider purity replication 
level report detail experiment performed analysed time comes writing findings researcher provide detail surrounding empirical possible allow perform external replications 
volume material dictates documented thesis higher degree aid series highly detailed technical reports laboratory kit available request 
aware laboratory kit software inspections external replication 
way forward 
korson reported doctoral thesis details absent reporting experiment introduced uncertainty external replication study disguise possible sources variability experiments 
details list desiderata 
korson information regarding number monitors ratio monitor subjects barely satisfactory known korson worked better monitor subject ratio taken steps provide additional monitors 
recommendation explicitly state monitor subject ratio 
second korson mention verbal instructions issued subjects 
additional information emphasising particular written instructions said 
issue gave information verbally students different versions program existed thinking 
recommendation clarify verbal instructions subjects 
third hindsight ensured subjects properly completed phase instructing monitors accordingly 
korson written instructions subjects allowed decide move may korson monitors applied additional control 
say genuinely surprised korson report problems subjects moving prematurely phases preliminary primary experiments conducted 
recommendation experiments involving subjects progressing various phases clarify subjects required genuinely complete phases controlled 
fourth korson gave subjects distinct ways testing program correctness publish timings different methods providing variability method testing may source variability results 
recommendation expert timings reported especially established variation way subjects may perform 
reporting expert timings acts check existence ceiling effects occur experimental task easy 
fifth usual address outliers data set korson additional information explain subjects took exceptionally long time complete monolithic version relies solely interpretation bound null hypothesis 
providing additional information benefited researchers interested performing external replication 
recommendation alternative explanations data especially outlier data sought reported 
sixth korson publish pretest results 
done allowed comparison subjects times provided measure ability subjects relative original subjects 
recommendation pretest data collected published assist attempting external replication 
seventh criticism criteria korson set subject selection retrospectively feel insufficiently specific suspect subjects experience ability required level may passed selection criteria replication study 
recall subjects failed complete 
whilst korson qualified professional programmer classification equivalent year programming experience full time programmer provide additional qualification advanced computer science students 
computing student completed pascal programming class passed criteria set korson fluency pascal knowledge ibm pc amount programming experience 
example poor linguistic formulation degree subjectivity determining meant words fluency knowledge amount 
recommendation objective subject selection criteria stated specifying parameters age qualifications position programming experience previous experience performing maintenance tasks experience software environments languages editors compilers interpreters experience platform employed experiment 
recency experience may important parameter 
danger criteria gathering participants study impossible time subject pool specialised external validity compromised real variability professional software engineers 
criticism fact korson subjects classified professional programmers distinction maintained design analysis interpretation results subjects randomly assigned 
professional programmers assigned modular group 
known 
recommendation recognizable differences exist subjects data allow analysis account differences 
overly critical korson 
benefit hindsight points easy analyse results full explain marked difference results korson 
korson went researchers reporting experimental procedures materials 
published code experiments pretest experimental code instructions pretest experiment 
published individual subject timings just averages statistical tests results 
unfortunately omitted details prevented fullest possible interpretations external replication 
major technical report thesis presenting empirical report seemingly minor details noted help attempt meaningful external replication 
researchers doubt wish add list desiderata external replications performed 
need external replication software engineering experiments justified results external replication study korson effects modularity program maintainability 
results markedly different korson findings direction korson find large highly significant effect korson replicate findings 
korson chose rely quantitative analysis timings solely outputs 
contrast approach combine traditional methods inductive analysis enabled understanding behaviour subjects processes involved yielded number interpretations explain results different 
inductive analysis broke paradox experimenters regress 
sense korson wrong korson analysis weak account processes number criticisms experiment 
conclude possible generalize scale benefits modularity independent verification validation new generation modularity experiments desirable 
evidence ability effect source variability 
influences subject timings 
subjects failed identify necessary changes think phase 
simple act deleting line caused problems subject 
subjects began monolithic code 
subjects commented experiment particular wanted prototyping approach unhappy having fall constraints experiment 
conclude preferable scenario naturalistic forms subject experimentation 
importance discovery fastest monolithic code mentioned understanding code genuine understanding necessary perform modifications 
contrast evidence slowest modular version taken trouble try understand program 
behaviour call pragmatic maintenance focussing bits code required 
conclude vital observe number maintenance activities understand role pragmatic maintenance determine bad thing 
getting away explaining human component software engineering experiments human subjects 
regard complementary hooker need empirical science algorithms basili experimentation software engineering extension framework 
recommend educational programmes place greater emphasis laboratory students designing executing analysing reporting experiments external replications classic identify discipline milestones 
conclude external replications combined inductive analysis techniques important vital part play realization generalizable results 
software engineering experiments externally replicated research centres world 
human factors literature similar replication way achieving generalizations 
acknowledgments authors took part external replication dave technical assistance 
amato 
redux 
science may 

iris integrated rule induction system 
dept computer science university strathclyde scotland 
banker datar kemerer zweig 
software complexity maintenance costs 
communications acm 
jack baroudi orlikowski 
problem statistical power mis research 
mis quarterly march 
basili selby 
experimentation software engineering 
ieee transactions software engineering 
brewer hunter 
multimethod research synthesis styles 
sage publications 
sage library social research 
william broad nicholas wade 
truth page 
oxford university press 
brooks 
inductive analysis applied evaluation cal tutorial 
interacting computers interdisciplinary journal human computer interaction pages 
brooks 
studying programmer behavior experimentally problems proper methodology 
communications acm april 
card 
software quality engineering 
information software technology 

generalisations generalisation 
human factors 
close 
hot handle story race cold fusion 
allen publishing 
collins 
changing order replication induction scientific practice pages 
sage publications 
crowder dembo mulvey 
reporting computational experiments mathematical software 
acm transactions mathematical software 
curtis 
measurement experimentation software engineering 
proceedings ieee 
daly brooks miller roper wood 
verification results software maintenance external replication 
proceedings ieee international conference software maintenance pages september 
fenton 
software measurement necessary scientific basis 
ieee transactions software engineering 
friedrich 
primary error detection minimization strategies social cognition reinterpretation confirmation bias phenomenon 
psychological review 
excerpts report computer science technology board 
scaling research agenda software engineering 
communications acm 
gibbs 
software chronic crisis 
scientific american september 
glass 
software conflict essays art science software engineering 
yourdon press 
martin goldstein goldstein 
know exploration scientific process page 
plenum press new york london 
hart 
experience inductive system knowledge engineering 
editor research development expert systems pages 
cambridge university press 
ww hauck anderson 
survey regarding reporting simulation studies 
american statistician 
henry matthew humphrey 
controlled experiment evaluate maintainability object oriented software 
proceedings ieee conference software maintenance pages 
andrews 
reporting computation results statistics 
american statistician 
hooker 
needed empirical science algorithms 
operations research 
huxley 
scientists 
shapley rapport wright editors new treasury science page 
collins london glasgow 
jackson boggs powell 
guidelines reporting results computational experiments 
report ad hoc committee 
mathematical programming 
kelly yamamoto 
implementing design diversity achieve fault tolerance 
ieee software 
law 
critical review quantitative assessment 
software engineering journal 
korson 
empirical study effects modularity program modifiability 
phd thesis college business administration georgia state university 
order number 
korson 
empirical study effects modularity program modifiability 
soloway iyengar editors empirical studies programmers workshop pages 
ablex publishing 
volume ablex human computer interaction series 
lee bard wilhelm 
guidelines reporting computational results iie transactions 
iie transactions 
leveson 
high pressure steam engines computer software 
computer 
john lewis henry dennis kafura robert schulman 
empirical study objectoriented paradigm software reuse 
oopsla pages 
swanson 
software maintenance management 
addison wesley st edition 

rigor software complexity measurement experimentation 
journal systems software 
mackay 
dictionary scientific quotations 

editor 
encyclopedia software engineering volume 
john wiley sons 
mcdermid editor 
software engineer book 
butterworth heinemann 
mckenna 
measures field dependence cognitive style cognitive ability 
journal personality social psychology 
naur randell editors 
software engineering report conference sponsored nato science committee 
nato 
held germany th th october 
page jones 
practical guide structured systems design 
prentice hall international second edition 
popper 
logic scientific discovery 
hutchinson london revised edition 
porter votta basili 
comparing detection methods software requirements inspections replicated experiment 
technical report department computer science university maryland 
induction variables subject mod rs mod ra mod cs mod cs mod cs mod rs mod ra mod rs mono cs mono cs mono cs mono cs mono cs mono rs mono cs mono ra mono cs table raw data induction package potts 
software engineering research 
ieee software 
quinlan 
induction decision trees 
machine learning 
marc roper 
software testing selected annotated bibliography 
software testing verification reliability 
david scanlan 
structured flowcharts outperform pseudocode experimental comparison 
ieee software september 
sharpe hale characteristics empirical software maintenance studies 
journal software maintenance research practice 
shneiderman mayer mckay heller 
experimental investigations utility detailed flowcharts programming 
communications acm 
smith 
problems reduction replication practice scientific method 
annals new york academy sciences 
raw data table displays data raw form manipulation logical groupings introduced 
answers questions questionnaire obviously logically grouped similar replies possible way represent data form iris may 
questionnaire responses sufficiently dissimilar categorized group individual answers 
responses dealt section 
debriefing questionnaire comments sheet participating 
leave please give personal details comments 
personal details name age sex position nd year cs qualifications graduate bsc comp sci comments 
find task easy 

editor 

caused difficulty 

understand code 

learned 

comments 

