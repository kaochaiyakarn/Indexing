evolutionary computation overview melanie mitchell charles taylor santa fe institute hyde park road santa fe nm mm santafe edu department organismic biology ecology evolution university california los angeles ca taylor biology ucla edu annual review ecology systematics 
evolutionary computation area computer science uses ideas biological evolution solve computational problems 
problems require searching huge space possibilities solutions vast number possible hardware circuit layouts con guration produces desired behavior set equations predict ups downs nancial market collection rules control robot navigates environment 
computational problems require system adaptive continue perform changing environment 
problems require complex solutions usually dicult program hand 
arti cial intelligence practitioners believed straightforward encode rules confer intelligence program expert systems result early optimism 
nowadays researchers believe rules underlying intelligence complex scientists encode hand top fashion 
believe best route arti cial intelligence dicult computational problems bottom paradigm humans write simple rules provide means system adapt 
complex behaviors intelligence emerge parallel application interaction rules 
neural networks example philosophy evolutionary computation 
biological evolution appealing source inspiration addressing dicult computational problems 
evolution ect method searching enormous number possibilities set possible gene sequences solutions allow organisms survive reproduce environments 
evolution seen method adapting changing environments 
viewed high level rules evolution remarkably simple species evolve means random variation mutation recombination operators followed natural selection ttest tend survive reproduce propagating genetic material generations 
simple rules thought responsible extraordinary variety complexity see biosphere 
approaches followed eld evolutionary computation 
general term approaches evolutionary algorithms 
widely form evolutionary algorithms genetic algorithms gas main focus review 
common forms evolutionary algorithms described section 
simple genetic algorithm simplest version genetic algorithm consists components population candidate solutions problem candidate circuit layouts encoded chosen representation scheme bit string encoding spatial ordering circuit components 
encoded candidate solutions population referred metaphorically chromosomes units encoding bits referred genes 
candidate solutions typically diploid 
tness function assigns numerical value chromosome population measuring quality candidate solution problem hand 
set genetic operators applied chromosomes create new population 
typically include selection ttest chromosomes chosen produce spring crossover parent chromosomes recombine genes produce spring chromosomes mutation genes spring modi ed random fashion 
typical ga carries steps 
start randomly generated population chromosomes 

calculate tness chromosome population 

repeat steps spring created select pair parent chromosomes current population probability selection increasing function tness 
probability crossover probability cross pair part chromosome parent part parent 
forms single spring 
mutate resulting spring locus probability mutation probability place resulting chromosome new population 
mutation typically replaces current value locus value 

replace current population new population 

go step 
iteration process called generation 
ga typically iterated generations 
entire set generations called run 
run typically highly chromosomes population 
randomness plays large role run runs di erent random number seeds generally produce di erent detailed behaviors 
simple procedure just described basis applications gas 
number details ll candidate solutions encoded size population details probabilities selection crossover mutation operators maximum number generations allowed 
success algorithm depends greatly details 
brief history evolutionary computation computer scientists independently invented di erent evolutionary computation methods 
rechenberg introduced evolution strategies method optimize real valued parameters devices 
population consisted individuals parent child mutated parent encoding set realvalued parameters optimized 
tter selected parent generation 
mutation consisted incrementing decrementing real value distribution 
parameters distribution encoded part individual parameters optimized 
idea developed schwefel theory application evolution strategies remained active area research see 
fogel owens walsh developed evolutionary programming technique candidate solutions tasks represented nite state machines evolved randomly mutating state transition diagrams selecting ttest 
evolution strategies random mutation source variation 
somewhat broader formulation evolutionary programming remains area active research see 
techniques called genetic algorithms gas rst invented holland 
gas population algorithms mutation crossover sources random variation 
gas typically worked strings bits real valued parameters 
simple ga close algorithm proposed holland 
holland original proposal included inversion operator reordering bits chromosome 
contrast evolution strategies evolutionary programming holland goal design algorithms solve speci problems formally study phenomenon adaptation occurs nature develop ways mechanisms natural adaptation imported computer systems 
people working developed evolution inspired algorithms optimization machine learning see discussions history 
years widespread interaction researchers studying various evolutionary computation methods boundaries evolution strategies evolutionary programming genetic algorithms evolutionary computation methods broken extent 
review examples involve researchers called genetic algorithms cases somewhat di erent form holland original proposal 
review rst survey applications evolutionary computation business science education conclude discussion evolutionary computation research relevant problems evolutionary biology 
due space limitations survey extensive done theoretical foundations evolutionary computation area various foundations genetic algorithms proceedings volumes reviews 
commercial applications evolutionary algorithms suggested evolution viewed method searching enormous numbers possibilities parallel order nd better solutions computational problems 
way nd solutions necessarily optimal simon termed satis cing 
problems sucient satis cing solutions arise frequently business engineering 
applications traditional methods search hill climbing conjugate gradient methods perform 
established single method optimization best applications depend problem computational devices hand 
aware theory generally predict method best particular problem 
observed evolutionary algorithms perform relatively large number parameters determined high degree epistasis adaptive surface solutions complex having intermediate optima 
stated evolutionary computation solved problems solved traditional means 
true know tests statement 
evolutionary computation nding variety commercial scienti applications number certainly growing 
examples include integrated circuit design factory scheduling robot sensor design image processing nancial market prediction drug design 
example common problem drug design learn arbitrary ligand bind enzyme 
problem known np complete 
particular problem great signi cance know inhibitors bind hiv enzymes 
hiv virus matures proteins manufactured viral genetic material individual proteins required hiv 
cleavage takes place active site 
inhibitors bind tightly active site disrupt life cycle virus 
inhibitors nding widespread treating aids 
market inhibitors huge 
companies screen candidate molecules determine active site bind 
natural selection provided software pharmaceuticals combines models ligand protein interactions molecular recognition evolutionary programming search space possible con gurations ligand protein complex 
candidate solution evolving population vector rigid body coordinates angles rotatable bonds 
individuals lowest calculated energies parents generation 
mutations occur random changes bond angles spring candidates 
practice useful magnitudes mutations evolve 
supply chain management provides examples di erent sort 
instance trucks built order dozens options tractor cab giving millions con gurations scheduled inventory checked tools time provided appropriate place plant oor delivered 
starting collection average quality schedules scheduling program provided technologies evolves satis cing schedule plant production week 
probably rst methods provided technologies making john employs assembly plants 
evolution cases optimizing scheduling procedure developed employed navy point naval 
chromosome evolving population encodes schedule permutation tasks performed tness cost schedule optimized additional scheduling program 
altogether di erent problem predict stock market prices 
large corporations including bank partner prediction evolving programs attempt predictions 
typically methods involve withdrawing data evaluators determining program population predicts data 
surprisingly details programs including performance trade secrets reasons discussed section programs contain sorts learning mechanisms addition evolution 
microsystems building evolvable hardware ehw chip part integrated circuit cellular telephones 
computer chips slight variation chip chip due di erences capacitance resistance percentage chips perform speci cation discarded 
general chips smaller perform speci cation 
case analog cellular telephones size major issue certain lters perform central frequencies 
laboratory higuchi tsukuba shown build chips tunable parameters come assembly line 
ehw microchip alter parameters evolutionary computation set appropriate switches eld programmable gate array fpga 
ehw chip leading improved yield rates lter chip lead smaller circuits power consumption 
chip appear time written target production chips month 
descriptions various commercial applications journals evolutionary computation ieee transactions evolutionary computing various conference proceedings 
scientific applications evolutionary algorithms addition commercial applications evolutionary algorithms extensively science search methods solving scienti problems scienti models evolutionary systems including population genetics clonal selection immune systems innovation evolution strategies economic systems evolution collective behavior social systems 
section review scienti applications ecology computer science 
genetic programming evolve optimal foraging strategies koza rice roughgarden type evolutionary algorithm called genetic programming investigate ecological questions optimal foraging strategy evolutionary process assemble strategies require complex calculations simple components 

addressed building roughgarden foraging strategies 
wait trees insects appear eld vision pursue eat insects deem desirable 
model strategies involved variables abundance insects probability insect appearing square meter second assumed uniform space time sprint velocity lizard assumed constant coordinates insect lizard view assumed case dimensional 
assumed insect time viewed insects identical chase consists lizard leaving returning new insect appears 
strategy function variables returns insect chased 
goal devise function maximizes food capture unit time 
clearly insect worth chasing insect small far away take time catch gone time lizard reaches 
koza rice roughgarden model single simulation lizard behavior consisted assigning values variables allowing simulated seconds insects appear di erent coordinates uniform probability lizard uses strategy decide ones chase 
koza rice roughgarden experiments lizard meter viewing area divided regions shown 
insects appearing region escaped chased appearing region escaped appearing region escaped probability zero axis linearly increasing angle maximum axis 
optimal strategy lizard ignore insects region chase lizard ii iii exp exp exp exp region suciently close chase region suciently close high probability escaping 
analytic form optimal strategy model known 
genetic programming algorithm type genetic algorithm devised koza individuals undergoing evolution computer programs encoded parse trees 
example koza rice roughgarden derived hand formula optimal strategy simpler version problem insects escape region sig sig returns positive 
gives strategy form parse tree similar formed compilers parsing computer programs nodes contain functions exponentiation termi functions performed 
exp exponentiation operator takes absolute value rst argument raises second argument te equal operator rst argument equal second argument returns third argument returns fourth argument 
objective discover structure encodes optimal strategy foraging task 
starts forming population randomly generated programs parse tree format 
tness population member calculated simulating behavior corresponding strategy values variables tness cases 
highest tness individuals reproduce direct copying crossover mutation produce new population evolutionary process iterated generations 
initial random programs generated prede ned set functions terminals 
arts genetic programming guring set 
koza rice roughgarden set terminals fa rg produces time appears initial program random oating point number 
set functions exp 
koza rice roughgarden presumably constructed set functions terminals intelligent guesswork 
details initial population generated see 
tness program population calculated simulating program di erent values measuring total number insects eaten di erent simulations 
tness individual program calculated fraction highest tness individuals form new population copying directly crossing create spring 
crossover programs illustrated 
parents selected cross random point chosen program subtrees point exchanged form spring added new population 
copying crossover procedures repeated new population individuals formed 
process repeated number generations 
koza rice roughgarden algorithm 
evolved strategies hard interpret runs exhibited sequence progressively improved strategies 
program behavior visualized number cases switching curves curves illustrate regions respectively lizard chase ignore insects 
figures give switching curves best individuals population generations 
seen genetic programming produced individuals increasingly behavior course evolution 
example best individual generation avoid insects area approximates region chase insects region approximates region region distance lizard willing travel greatest axis decreases angular distance axis 
short koza rice roughgarden showed genetic programming evolve increasingly foraging behavior particular simpli ed model 
evolved parents exp exp exp offspring exp exp exp strategies considered hypotheses real life foraging strategies possibly dicult humans devise experiments real world test validity 
hosts parasites gas evolve sorting networks second example scienti application hillis host parasite coevolution applied genetic algorithms 
hillis ga researchers genetic algorithms adaptation static environment results loss diversity population candidate solutions evolved solutions static environment solutions generalize placed new environments 
solution environment form parasites evolve increasingly challenging evolving candidate solutions 
problem hillis tackled evolving minimal sorting networks 
sorting studied problem computer science goal place elements data structure speci ed order numerical alphabetic minimal time 
particular approach sorting sorting network parallelizable device sorting lists xed number elements 
simpli ed form sorting network consists ordered list comparisons elements list compared elements swapped order 
example sorting network speci es second fth elements compared possibly swapped fourth second elements compared followed seventh fourteenth 
correct sorting network take list xed length performing speci ed comparisons swaps return list correctly sorted order 
researchers worked problem nding correct sorting networks minimal number comparisons 
rst believed minimum comparisons smaller smaller networks discovered culminating comparison sorter 
proof minimality smaller network discovered 
see discussion history 
hillis form genetic algorithm search minimal sorting networks 
criteria networks population correctness small size 
small size rewarded implicitly due diploid encoding scheme networks fewer comparisons encoded chromosomes sites smaller networks robust crossovers tended implicitly favored 
correctness rewarded explicitly tness function network tested sample tness cases lists sorted 
possible input cases test network exhaustively generation network tested set cases chosen random 
tness network equal percentage cases sorted correctly 
hillis ga considerably modi ed version simple ga described 
individuals population placed dimensional lattice simple ga notion spatial distance strings 
hillis hoped scheme foster speciation di erent types networks arise di erent spatial locations having population converge set similar networks 
ga got stuck local optima 
ga number moderately comparison solutions proceed correct smaller solutions 
reason early generations randomly generated test cases compute tness individual challenging 
ga evolved strategies worked test cases diculty test cases remained roughly 
early generations pressure evolving population change current suboptimal sorting strategies 
solve problem hillis form host parasite predator prey coevolution sorting networks viewed hosts test cases lists numbers parasites 
hillis modi ed system population networks grid population parasites parasite consisted set test cases 
populations evolved ga tness network determined parasite located network grid location 
network tness percentage test cases parasite sorted correctly 
tness parasite percentage test cases network sorted incorrectly 
evolving population test cases thought provided increasing challenges evolving population networks 
networks got better better sorting test cases test cases presumably got harder harder evolving speci cally target weaknesses networks 
forced population networks keep changing keep discovering new sorting strategies staying stuck suboptimal strategies 
coevolution ga discovered correct networks comparisons real improvement best networks discovered coevolution single comparison away rivaling smallest known network 
hillis important introduced new potentially useful ga technique inspired coevolution biology results convincing example potential power biological inspiration 
additional coevolution genetic algorithms done number people see 
educational applications evolutionary computation re ect polls show americans believe darwinian evolution true college educated americans 
factors contribute de ciency including religious lack understanding students teachers alike 
mode presentation important 
established students understand passively facts engaged experimentation construction 
educational computer programs evolutionary computation address challenge 
program blind watchmaker exemplary means teach students evolution works 
shows typical screen running program 
near middle individual chosen prior generation seed current generation 
surrounded variant generated mutations 
may involve mutations morphological features branch length symmetry gradients length number branches mutation rates size 
values parameters shown line gures just gallery 
gure illustrates sorts changes possible generation 
user chose variants shown clicking new generation generated variants displayed 
engaging challenge evolve forms exotic way doing user acquires real feeling mutation selection enormous variety phenotypes evolution produce 
program keyed dawkins popular book title uses program illustrate key features evolution 
blind watchmaker program seed interesting variants 
variant focus developing interesting pictures developed karl sims displayed centre georges paris 
additional variants evolution contributed videos liquid selves described 
programs described large variety popular software employs illustrates creativity evolution including creatures hope evolutionary computation provide useful teaching experience generation american students show better understanding evolution 
relevance problems evolutionary biology major intellectual divide eld evolutionary computation eld arti cial intelligence 
hand desire systems ecient possible solving engineering problems irrespective relevance biological world 
commercial applications discussed example frequently involve populations candidate solutions generation mutation rates order conditions rarely met biological world 
hand great deal directed understanding general features complex adaptive systems including organic cultural evolution learning immune reactions 
hope studying simple systems rerun possible identify rules governing adaptation dicult analyze 
pertains especially systems levels organization involve collective action giving rise emergent behavior 
research directed understanding tradeo modes adaptation learning versus evolution 
give sample biologically relevant problems addressed hope gives feel variety problems approaches ndings eld encompasses 
discussing evolution systems probably exist biological world right exhibit adaptation systems lamarckian evolution 
surprisingly ective 
discuss interaction modes adaptation development evolution variously described genetic assimilation baldwin ect 
baldwin ect thought important adaptation arti cial systems received scant attention biologists 
followed discussion cultural social evolution 
proven dicult study traditional means ndings evolutionary computation quite di erent traditional evolutionary biology 
address ndings attempts optimize response evolution optimizing mutation recombination rates typically fall heading evolution genetic systems 
lamarckian evolution lamarckian evolution refers evolution traits modi ed experience passed modi ed form genotype generation 
consistent certain pre theories inheritance including darwin recognized occur due lack mechanism accomplishing natural systems 
arti cial organisms course subject constraints study lamarckian evolution system sheds light issues general evolvability 
order lamarckian evolution occur means adapting generation development learning means passing gains genotype subsequent generation 
models learning studied context include neural networks hop eld networks production systems :10.1.1.56.1814
hop eld networks ability learn associations remarkably exhibit content addressable memory 
mere smell cookie example evoke sorts memories cookies sensing just properties object recover host properties 
starting random con gurations hop eld network number memories reliably learned stored approximately times number nodes completely connected system 
result depends starting conditions con gurations lead greater ability remember 
araki set inputs population hop eld networks capable learning connection weights encoded real valued vectors hebbian reinforcement learning perform pattern recognition task 
generation learning trials vectors evolving population modi ed supervised learning method 
learning trials weights modi ed learning replaced started generation 
evolution lamarkian 
possible inputs observed stable xed points memories reached system 
exactly states corresponding inputs obtained tness set maximum value 
di erent vectors vectors observed xed points diminished accordingly 
tness evaluation mutation recombination occurred generation formed followed round learning tness evaluation selection 
nearly twice memories reliable acquired lamarkian evolution acquired hebbian leaning phase 
larger number memories learned rapidly smaller number memories acquired networks evolving purely darwinian fashion 
clearly ability learn pass experience genotype accelerated evolution 
exploring depth tokoro coworkers adaptation lamarckian evolution faster neural networks darwinian evolution vectors learned generation generation environment constant :10.1.1.56.1814
environment changed randomly generation generation darwinian evolution superior 
modi er genes determined amount lamarckian abilities networks possess allowed evolve lamarckian abilities lost completely randomly changing environment 
apparently relative advantages lamarckian versus darwinian evolution depend degree correlation environment generation way modi ers recombination sexuality 
view large di erences adaptability observed expect di erences exploited practical applications evolutionary computation 
baldwin ect lamarckian evolution ective darwinian evolution space phenotypes searched extensively individual try just phenotype suite new possibilities serially lifetime guided learning 
example experiments evolution pattern recognition hop eld networks just described individual instantiated genotype generation 
darwinian evolution total number agents number generations networks explored maximum 
learning trial hebbian learning phase explore network maximum number agents number generations number trials potentially greater 
problem pass successful discoveries generation 
known lack suitable mechanism prevents biological organisms exploiting evolution 
reasonable alternative possible suited evolution 
genetic assimilation baldwin ect 
years ago waddington observed drosophila normally produce posterior cross wings 
exposed heat shock occasionally fail develop cross wings adults 
waddington started selection base population adults 
generation heat spring selected cross adults 
generations heat cross began cross shock 
subsequent selection obtained lines cross absence shock 
recognized lamarckian evolution resulted simply changing thresholds expression cross vein trait termed phenomenon genetic assimilation 
happened similar phenomenon described earlier baldwin called baldwin ect 
textbooks evolution phenomenon occasionally mentioned seldom receives brief note 
baldwin ect observed evolutionary computation studies see 
study problem select trait cross expressed 
importance evolutionary computation slightly di erent occurs trait enormously useful fully developed expressed 
problem hit right rare con guration alleles preserve selection elaboration 
asexual population right ensemble alleles arise 
sexual population arise tend broken immediately recombination 
learning forms adaptation individuals lifetime available desired con guration arise mechanisms trait passed spring genetic background producing favored 
baldwin learning forms lifetime adaptation lead increased survival eventually lead genetic variation produces trait genetically 
ect demonstrated simple evolutionary computation settings 
example hinton nowlan considered neural networks evolved gas 
generation individual population lifetime weights learned 
weight coded di erent locus network genome 
alleles locus signi ed value varied learning learning consisted series trials values guessed 
nal weight value came having allele genome having adopted guessing trial 
populations networks evolved tness function highly rewarded networks connections set network lifetime 
state adopted early network lifetime tness higher adopted 
combination evolution learning hinton nowlan observed correct settings loci achieved generations ga occurred evolution 
hinton nowlan interpreted result extremely simple example baldwin ect 
maynard smith calculated phenotypes strictly determined genotype opportunity learning generations required asexual population probably evolve strictly sexual population 
described hinton nowlan learning di erence nding needle haystack nding needle haystack tells getting closer 
evident studies lamarckian evolution baldwin ect learning allows organisms evolve faster equivalents 
importance tracking stock market adapting agents quite possibly evolution natural world 
cultural social evolution view ect learning evolution natural ask culture ects evolution 
arti cial systems studying lamarckian evolution baldwin ect natural vehicles explore elements cultural transmission 
fact relatively studies 
studies evolution cooperation prisoner dilemma begun axelrod stimulated great deal investigation 
typically involve cultural evolution real world traits strong cultural component 
studies evolution communication acquiring ability communicate agree common lexical items modeled success 
addition studies addressed dicult problems concerned actual languages learned evolve see 
learning human languages presents serious theoretical problems complex adaptive systems 
example gold problem concerned hearing nite number sentences may errors learns grammar generate nite number grammatically correct sentences 
second problem account changes occur time 
speakers modern english typically read shakespeare early modern english years ago diculty 
read middle english years ago moderate amount lexical help 
scholars read old english years ago 
spoken incomprehensible changes vowel sounds occurred spoken spelling remained similar 
challenge describe possibly predict course language evolution cases 
learnability major issue generally felt evolution languages largely driven easy learn 
niyogi berwick evolutionary computation methods model populations agents acquire language hearing samples prior generation provide examples generation learn 
chomsky principles parameter model language parameters stable 
learnability inadequate explanation changes grammatical form known occurred evolution english verb order old english resembles day german 
review attempts model coevolution genes cultures societies see epstein axtell 
evolution computational ecologies novel approach computational studies ecologies pioneered ray 
goal evolve self replicating cooperating bits computer code live virtual computer world 
computer instructions brittle permit random mutations recombinations provide fragments code meaningful capable strung fragments 
koza genetic programming paradigm described section method get brittleness neural networks 
ray tierra program uses di erent method involving specially designed assembly language construct self replicating programs 
resulting ecology provide interesting parallels natural life including competition memory resources trophic structures 
ray current orts directed evolution selfcontained cooperating programs emerge evolutionary computation analogous multicellular organisms 
success far limited ray observe di erentiation akin somatic reproductive code 

building tierra adami developed computational world spatial structure tierra lacks 
chu developed run massively parallel intel paragon computer large numbers simulations run fairly large environments units competing bits code 
chu observed invariant power laws log number copies program lived plotted frequently sequences observed evolutionary sequence 
selection strong slope just observed number families fossil record observed avalanche size higher dimension bak models self organized criticality 
chu developed arguments theory branching process explain true 
relationships general point radically di erent theory evolution principles self organizing systems general capable capture phenomena far resisted adequate explanation 
adaptive surfaces evolution genetic systems eld evolutionary computation surprisingly little quantitative genetics population genetics theory 
reason belief computer scientists dicult problems highly nonlinear exists widespread interaction parts candidate solution attempts minimize interactions attempts linearize quantitative genetics treat genes individuals single locus models population genetics bound self limiting 
second reason lack reciprocity theory conditions evolution di erent evolutionary computation settings population sizes mutation rates biology 
evolutionary computation systems include recombination life cycle individuals moss short diploid long phase genetic theory addresses 
say population genetics inconsistent inapplicable 
christiansen feldman showed derive parts holland ga theory principles population genetics 
theoretical predictions population genetics help explain certain observations evolutionary computation evolutionary computation applications mutation rates magnitudes allowed evolve typically observed evolve downwards sucient time reviewed expected equilibrium theory population genetics :10.1.1.6.5943
challenging problems population genetics concerned manner populations traverse adaptive landscape 
evolution carry gradual hillclimbing leading sort optimization fisher argued proceed jumps starts chance playing signi cant role argued wright 
spite centrality issue questions evolutionary theory proven extremely dicult test di erent proposals 
evolutionary computation addressed problem purely practical standpoint typically population subdivision island models signi cantly speeds evolution 
di erent vantage theoretical approaches evolutionary computation proposing mechanisms underlying evolution may provide new theoretical bases describing phenomena 
feature adaptive landscapes evolutionary computation biological settings broad plateaus tness common chance plays major role moving 
population move depend critically drifted plateau 
example stadler fontana computational models predicting molecular structures describe structure trna 
nucleotide substitutions neutral high dimensionality possible traverse sequence space connected path changing nucleotide changing structure 
surprise population begun sequences identical small amount mutation initial point sequence space di uses outwards cloud limit accord theoretical expectations drifts plateau 
di erent subpopulations reach di erent parts sequence space dramatic improvement results nding improvement 
fitness assumes step improvement coinciding wright expectation changes wholly nonfunctional parts molecule frequent ones unimportant occasionally give basis changes improve function species question established selection 
moving plateau plateau tness frequently observed evolutionary computation typically associated changes complexity 
just example miglino na si taylor genetic algorithms evolve controllers small robots 
controllers neural networks described equivalent nite state automata complexity readily observed measured 
task traverse squares possible grid placed oor limited amount time 
starting random networks initially sucient merely move forward turn left encountering corner 
neural networks prescribed behavior easier jumps radically sophisticated behavior correspondingly complex programs 
variation run run chance largely determining populations able nd improved solution 
studies showed quite clearly plateaus adaptive surface common stepwise improvement tness stressed case especially frequency dependent 
complex dynamics observed including plateaus interspersed periods chaos permanently chaos 
interesting example provided competition bit strings series studies kaneko workers summarized 
system strings assumed compete extent similar measured hamming distance similar strings competing strongly tness frequency dependent 
strings far apart success reproduction 
mutation strings allowed 
possible include predator prey interactions system strength predator prey interactions depends hamming distance 
systems high dimensional highly non linear 
way interactions resemble logistic maps known chaotic parameter space high dimensional escape having tness reduced competition mutation frequent form 
series papers kaneko workers analyzed dynamics system numerically calculating lyapunov exponents observed high dimensional weakly chaotic dynamics evolution system led dynamic stability robustness external perturbations 
termed situation suggested system dynamics may general features evolution computational evolution real world 
parallels biological evolution searching space gene sequences computer evolution searching space computer programs data structures 
approaches exploit similarities developed independently collectively termed evolutionary algorithms evolutionary computation 
methods computation search space candidate solutions problems nding application increasing number industrial business problems 
general theory identify best method nd optima appears evolutionary computation best suited problems involve nonlinear interactions elements intermediate optima exist solutions satis cing merely necessarily absolute optimum 
problems common business biological studies cooperation foraging coevolution 
evolutionary computation serve useful model biological evolution 
allows dissection repetition ways biological evolution 
computational evolution useful tool education provide new ways view patterns evolution power laws descriptions non equilibrium systems 
evolutionary theory developed biologists typically tries linearize systems ease analysis di erential equations treat units isolation single locus selection 
evolutionary computation inconsistent theory tends outside real di erence capacity complexity observed really describable stable equilibria simple changes gene frequencies ways interesting 
reason believe theories evolutionary computation extend language biological evolutionary theory contribute new kinds generalizations analyses available 
acknowledgments mm acknowledges santa fe institute national science foundation nsf iri support 
ct acknowledges nsf br 
legends lizard viewing area divided regions di erent escape probability insects 
switching curves illustrate behavior best program population generations run genetic programming algorithm 
curves divide lizard viewing area regions chase insects regions ignore insects 
adapted 
optimal strategy simpler version foraging problem encoded parse tree 
illustration crossover parse trees produce spring 
randomly chosen point crossover tree marked dark line 
breeding screen blind watchmaker program 
parent center screen spring surrounding 
figures line immediately screen signify genotype parent 
spring di er parent mutations genotype string occurring probability determined parameter parent 
modi ed 
ackley littman 
interactions learning evolution 
langton taylor farmer rasmussen editors arti cial life ii pages reading ma 
addison wesley 
adami 
arti cial life 
springer verlag new york 
angeline editor 
evolutionary programming vi th international conference ep new york 
springer 

evolution linguistic diversity simple communication system 
adami belew kitano taylor editors arti cial life vi pages cambridge ma 
mit press 
axelrod 
evolution cooperation 
basic books new york 
ack 
evolutionary algorithms theory practice evolution strategies evolutionary programming genetic algorithms 
oxford university press oxford 
ack editor 
proceedings seventh international conference genetic algorithms san francisco ca 
morgan kaufmann 
hammel :10.1.1.6.5943
schwefel 
evolutionary computation comments history current state 
ieee transactions evolutionary computation 
bak 
nature works science self organized criticality 
springer verlag new york 
belew mitchell editors 
adaptive individuals evolving populations models algorithms 
addison wesley 
belew vose editors 
foundations genetic algorithms 
morgan kaufmann san francisco ca 
chomsky 
minimalist program 
mit press cambridge ma 
christiansen feldman 
algorithms genetics populations schemata theorem revisited 
complexity 
chu 
computational explorations life 
phd thesis california institute technology ca 
cli grand 
creatures global digital ecosystem 
arti cial life press 
coyne barton 
perspective critique wright shifting balance theory evolution 
evolution 
dawkins 
evolution evolvability 
langton editor arti cial life pages reading ma 
addison wesley 
dawkins 
blind watchmaker evidence evolution reveals universe design 
norton new york edition 
weber 
evolving 
mit press cambridge ma 
epstein axtell 
growing arti cial societies 
mit press cambridge ma 
fogel 
evolutionary computation new philosophy machine intelligence 
ieee press new york 
fogel editor 
evolutionary computation fossil record 
ieee press new york 
fogel owens walsh 
arti cial intelligence simulated evolution 
john wiley new york 
sherman fogel fogel 
molecular recognition inhibitor ag hiv exible docking evolutionary programming 
chemistry biology 
gold 
language identi cation limit 
information control 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading ma 
gordon whitley 
serial parallel genetic algorithms function optimizers 
ack editor proceedings fifth international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
grefenstette 
lamarckian learning multi agent environments 
belew booker editors proceedings th international conference genetic algorithms applications pages 
kaufmann san mateo ca 
hillis 
evolving parasites improve simulated evolution optimization procedure 
physica 
hinton nowlan 
learning guide evolution 
complex systems 
holland 
adaptation natural arti cial systems 
university michigan press ann arbor mi 
hop eld 
neural networks physical systems emergent collective computational abilities 
procedings national academy sciences 
stadler fontana 
smoothness rugged landscape role neutrality evolution 
proceedings national academy science usa 
araki 
lamarckian evolution associative memory 
proceedings ieee third international conference evolutionary pages 
ieee 
juill pollack 
coevolutionary learning case study 
icml proceedings international conference machine learning san francisco ca 
morgan kaufmann 
kaneko 
chaos source complexity diversity evolution 
arti cial life 

ocial strategy guide 
prima publishing ca 
kelly 
cracking wall street 
wired july 
knuth 
art computer programming volume sorting searching 
addison wesley reading ma 
koza 
genetic programming programming computers means natural selection 
mit press cambridge ma 
koza rice roughgarden 
evolution food foraging strategies caribbean lizard genetic programming 
adaptive behavior 

philosophie ou exposition des consid erations relatives de 
chez paris 

uence environment activities habits animals uence activities habits living bodies modifying organization structure 
belew mitchell pages 

survival 
new york review books pages october 
lindgren 
evolutionary phenomena simple dynamics 
langton taylor farmer rasmussen editors arti cial life ii pages reading ma 
addison wesley 
maynard smith 
natural selection learning guides evolution 
nature 
maynard smith 
byte sized evolution 
nature 
miglino taylor 
selection wandering behavior small robot 
arti cial life 
mitchell 
genetic algorithms 
mit press cambridge ma 
adachi suzuki iwata higuchi 
analogue ehw chip intermediate frequency lters 
sipper mange editors evolvable systems biology hardware pages 
niyogi berwick 
logical problem language change 
technical report memo mit arti cial intelligence laboratory july 

evolution easy instances 
unpublished manuscript 
paredis 
coevolving cellular automata aware red queen 
ack editor proceedings seventh international conference genetic algorithms pages san francisco ca 
morgan kaufmann 
thomas jr know mad scientist may rm biggest asset 
wall street journal july 
press teukolsky vetterling flannery 
numerical recipes cambridge university press new york 

wright evolutionary biology 
university press chicago il 
rao 
evolution warp speed 
forbes magazine january 
rawlins editor 
foundations genetic algorithms 
morgan kaufmann san mateo ca 
ray 
approach synthesis life 
langton taylor farmer rasmussen editors arti cial life ii pages reading ma 
addison wesley 
ray hart 
evolution di erentiated multi threaded digital organisms 
adami belew kitano taylor editors arti cial life vi pages cambridge ma 
mit press 
rechenberg 
evolutionsstrategie 
frommann holzboog stuttgart 
rosin belew 
methods competitive coevolution finding opponents worth beating 
eshelman editor proceedings sixth international conference genetic algorithms san francisco ca 
morgan kaufmann 
sasaki tokoro 
adaptation changing environments darwinian nature 
proceedings fourth european conference arti cial life pages 
mit press cambridge ma 
sasaki tokoro 
evolvable learnable neural networks changing environments various rates inheritance acquired characters comparison darwinian lamarckian evolution 
arti cial life press 

schwefel 
evolutionsstrategie und numerische optimierung 
phd thesis technische universit berlin berlin 

schwefel 
evolution optimum seeking 
wiley new york 

compendium fossil marine animal families 
milwaukee public museum milwaukee wi edition 
simon 
sciences arti cial 
mit press cambridge ma 
sims 
evolving morphology behavior competition 
brooks maes editors arti cial life iv pages cambridge ma 
mit press 
steels kaplan 
stochasticity source innovation language games 
adami belew kitano taylor editors arti cial life vi pages cambridge ma 
mit press 
tanese 
distributed genetic algorithms 
scha er editor proceedings third international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
van eld mitchell 
statistical dynamics royal road genetic algorithm 
theoretical computer science 
appear 
van eld mitchell 
finite populations induce evolutionary search 
physics letters 
waddington 
genetic assimilation acquired character 
evolution 
werner dyer 
evolution communication arti cial organisms 
langton taylor farmer rasmussen editors arti cial life ii pages reading ma 
addison wesley 
whitley editor 
foundations genetic algorithms 
morgan kaufmann san mateo ca 
whitley vose editors 
foundations genetic algorithms 
morgan kaufmann san francisco ca 

