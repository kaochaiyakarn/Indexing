information categories abbas edalat michael smyth department computing imperial college science technology medicine queen gate london sw bz england 
information systems introduced dana scott convenient means presenting certain class domains computation usually known scott domains 
essentially idea developed systematically various authors connection classes domains 
previous authors introduced notion category abstraction enhancement idea emphasis solution domain equations form functor 
important feature con ned domains computation usually understood classes spaces familiar mathematicians general accessible 
idea terms call information categories concrete categories objects structured sets tokens morphisms relations tokens 
spirit information system enables speci results obtained 
account general theory examples discussed detail stone spaces ordinary mathematical example scott domains sfp domains continuous bounded complete domains 
sco dana scott introduced certain category information systems convenient means presenting known class domains computation scott domains 
concerned problem characterizing categories information systems general obtain uniform treatment classes domains various classes spaces usually considered domains computation 
previous es carried program terms notion category 
terms call information categories concrete categories objects structured sets tokens morphisms relations tokens 
spirit information system enables speci results obtained 
new examples discussed 
tried reasonably self contained hoped informal discussion remainder helpful 
background domain theory ideas desirable 
elementary account consult dp 
comprehensive textbooks domain theory available 
information system sense intend primitive logic represent specify elements domain computation 
de ned scott sco information system ingredients set tokens propositions distinguished member 
informative member collection con nite subsets consistent sets propositions binary relation con entailment relation 
consistency predicate satisfy subset consistent set consistent ii singleton consistent iii fag consistent entails concerning usual conditions re exivity transitivity entailment consequence relation 
entailed 
speci cation domain elements proceed postulating relation satisfaction tokens elements 
minimal assumptions relation nd set tokens propositions true particular element consistent theory set closed entailment nite subset member con 
nd elements partially ordered information ordering proposition true true alternatively typically just de ne domain associated information system set consistent theories ordered inclusion 
notice element closure entailment equally 
may ask domains exactly constructed represented information systems 
answer known 
useful recall basic de nitions concerning scott domains 
cpo partial order having element having lubs upper bounds increasing sequences elements 
note allow partial order large carrier proper class 
element cpo compact cpo algebraic set kd compact elements countable element lub increasing sequence kd poset bounded complete subset bounded lub 
scott domain bounded complete algebraic cpo 
scott topology algebraic cpo topology having collection sets fx xg compact notice base case scott domain 
lawson topology topology ner scott topology sets compact open 
topology speci ed scott topology assumed 
easy show domains associated information systems having countably tokens characterised scott domains countability restriction may dispensed natural context computing 
propositions system directly determine topology proposition token sub basic open set consistent theories contain logical system notions entailment consistency satisfying conditions signi cant exceptions relevance logic linear logic examples legion 
consider just simple examples information systems relevant computing example logic programs 
pure logic program set program clauses horn clauses having exactly positive literal see example llo 
take tokens set ground atoms con collection nite subsets want regard program clause containing ground literals saying head entailed body 
take entailment relation contains ground substitution instances clauses 
concretely re exive transitive closure set ground instances clauses 
identifying herbrand models logic program subsets herbrand base usual way see domain associated information system just de ned elements herbrand models usually logic programming works just herbrand model 
certainly interest may want consider lawson scott topology see bv 
example binary trees 
binary tree set nodes regarded strings 
take con nite set tokens consistent entailment containing instances example labelled binary trees 
set atoms labels 
want de ne data type binary trees understood including partial nite trees 
type typically de ned recursively means domain equation btree btree btree 
informally binary tree consists root atom left tree right tree unde ned 
systematic solution domain equations main objects treated brie 
just note straightforward approach solution yields inductive de nition information system follows 
ha ci con fb 
ng con fc 
ng con fha ng con ha ha note omitted various clauses hold automatically fbg con 
con 
preceding example typical example typical illustrations usually done information systems way constructing domains computation 
variations de nition information system possible 
example may larsen winskel lw dispense 
example bother specify 
signi cant technical simpli cation achieved requiring ect compact element domain represented token 
arrive inhabited propositional languages fourman grayson see fg de nition propositional language set tokens distinguished element 
pre order partial binary operation conjunction satisfying 


clause de nition interpreted implying exists evidently conjunction meet greatest lower bound respect entailment pre order 
elements points models propositional language lters lter subset satisfying 
propositional languages completely equivalent information systems de ned means representing domains 
detailed comparison nite consistent set tokens scott information system ect taken single token propositional language 
propositional languages preferred notion information systems generalised various ways call bounded complete information systems section information systems quali cation 
representation continuous functions domains taken account 
fact morphisms information systems de nition 
information systems 
approximable mapping relation satisfying 


afb afc af 
afc pair may regarded proposition asserting true argument true result 
idea leads construction information system function space result category countable information systems approximable mappings cartesian closed 
context facts particularly relevant collection approximable mappings ordered inclusion isomorphic cpo continuous maps category countable information systems equivalent category scott domains 
statements veri ed known methods 
preceding conclude information systems matter presentation way scott domains little prospect distinctive theory information systems 
di erent begins emerge looks information systems broader context 
broader context presentation topological spaces means entailment relations open sets 
entailment relations need restricted format considered 
natural generalisation allow entailments terms right 
read disjunctively model satis es satis es adapting propositional languages allow entailments modify second clause de nition element read 
elements ect prime lters 
example infinite binary strings 
tokens binary strings entailments generated initial segment 
conjunction exists longer strings 
elements prime lters identi ed nite binary strings topology cantor space 
far reaching development ideas provided fourman grayson fg 
part content entailments simple form antecedent consequent allowing disjunction having operation tokens 
wider context typically think information systems having structure lattices 
may example boolean algebras representing stone spaces 
somewhat di erent example may hope accommodate various kinds event structures see win representing species stable domains see section 
remarks may tend suggest theory information systems assimilated stone dualities 
overlooks distinctive feature information systems expounded sco lw context presentation domains sequentiality concrete data structures bc 
refer idea collection information systems variety information ordering 
importance domain equations form recursive speci cation types handled simply 
monotonic operator ordinary xed point techniques suce solution 
example provide illustration inductive de nition xed point de nition 
ordering information systems typically de ned follows 
information systems token sets operations relations restrictions requiring may loss generality tokens information systems drawn common pool tokens nd typically collection information systems cpo algebraic cpo 
compare elaborate category theory approaches sp ma 
answer clear categorical approach gives valuable characterization intended solution usually initial algebra simple order theoretic method provides information 
gives clue aiming nd needs added information system method capture advantages systematic category theoretic approaches 
key idea global information ordering morphisms needed addition including objects 
concretely de ne note sets pairs tokens 
required theory domain equations far ective initial algebra theorem developed general context level categories es available applied routinely various concrete situations scott domains stable domains stone spaces metric spaces 
various constructions functor category categories information systems handled 
remainder organized follows 
section recall various notions categories es 
section general theory information categories 
section show category boolean algebras boolean homomorphisms instance information category solve domain equation stone spaces solution known cantor space 
subsequent sections construct information categories words categories information systems equivalent categories scott domains sfp objects di domains continuous bounded complete domains case construct function space explicitly 
preliminaries categories category 
consists category partial order homset hom subclass mor called inclusion morphisms hom set hom inclusion morphism denote distinguished object 
obj satisfying axioms axiom class objects obj inclusion morphisms form partial order represented category 
ii 
exists obj 
morphisms hom 

iii mor compositions de ned 
axiom composition morphisms monotone respect partial order hom sets compositions de ned 
partial orders obj mor category 
de ned follows exists dom dom ii cod cod iii cod cod dom dom note diagram dom cod dom cod weakly commutes 
complete category satis es axioms axiom mor cpo 
axiom mor 
axiom composition morphisms continuous operation respect hf hg increasing chains mor cod dom 
algebraic category satis es axioms axiom mor algebraic 
axiom mor compact cod obj compact 
ii obj compact mor compact 
iii composition compact morphisms compact 
algebraic complete partial order element considered category usual way example algebraic complete category mor discrete partial order distinguished object 
category sets sets functions fact complete large category sets inclusion morphisms simply set inclusions full subcategory objects elements countable pool fact algebraic category 
es shown category scott information systems approximable maps complete category category sets algebraic subcategory 
examples categories 
order capture general framework examples need introduce information categories section 
information categories practice categories concrete sense objects sets internal structure operations predicates de ned elements sets nite subsets weak second structures terminology bar partial order objects correspond substructure relation objects morphisms relations elements nite subsets carrier sets objects 
call concrete categories information categories categories complete algebraic 
information categories partial order objects corresponds notion substructure partial order morphisms simply reduces inclusion relations 
similarly complete information categories lub chain objects union chain structures lub chain morphisms simply set union relations representing morphisms 
algebraic information categories compact objects precisely nite objects objects nite carrier set compact morphisms precisely relations nite objects 
features information categories conceptually simple easy handle task verifying certain category information category category quite straightforward 
justi cation introduce information categories note basic examples concrete categories treated section papers fully covered notions 
formalise de nition information categories start notion weak second order structure 
de nition weak second order structure tuple jaj jaj set indexing sets respectively predicates partial total operations jaj jaj 
notion substructures weak second order structures 
de nition weak second order structures signature jaj jbj say substructure denoted jaj jbj ii jaj jaj arity iv exists exists case arity 
information category identity morphism object course satisfy binary relation elements nite subsets carrier set object transitive interpolative order relation transitive interpolative 
convenient assume distinguished transitive interpolative relation predicates object information category 
note relation usually carrier set cases turns pre order partial order equality relation 
ready de ne information category 
de nition information category 
indexing sets category properties objects weak second order structures xed signature form jaj relation jaj jaj elements jaj xed alphabet 
morphisms relations elements nite sets objects usual composition rule relations satisfy relation identity morphism obj 
inclusion morphisms mor satisfy object substructure object relation jaj jbj jaj morphism unique inclusion morphism hom 
objects 
exists 
hom 

hom sets partially ordered subset inclusion 
prove shortly information category de ned fact category partial order morphisms reduces set inclusion relations 
couple remarks appropriate 
observe way inclusion morphisms de ned implies partial order objects induced inclusion morphisms coincides substructure relation weak second order structures notions consistent 
note category implies id id case information categories reduces motivates requirement note transitive interpolative orders objects pre orders easily checked 
expected result proposition information category category 
induced partial orders obj mor satisfy proof note get axiom follows 
observe morphism inclusion morphisms follows prove axiom iii suppose 
afb jbj afb afb agb prove second part suppose afb jbj afb afb agb suppose jaj fb gb gd completes proof 
example category sets information category partial order example category information category 
order de ne complete information category rst need de ne union chain structures 
de nition ha ja increasing chain weak second order structures union chain structure ja jaj jaj arity arity 
de nition information category complete obj mor complete sense ha chain objects object ii hg increasing chain morphisms dom cod morphism dom dom cod cod ag 
proposition complete information category complete 
proof clear increasing chain morphisms hg complete information category lub de ned ii 
mor cpo 
increasing chain inclusion morphisms hin readily nds exists lub chain ja shows mor 
increasing chains morphisms elements pairwise composable composable mappings dom cod continuous 
putting af bg conclude composition morphisms continuous operation proof complete transitive interpolative relation object information category fact pre order information category pre ordered objects 
de ne notion algebraicity categories 
de nition complete information category pre ordered objects pre order denoted algebraic satis es morphism union countable chain morphisms nite objects objects nite carrier sets 
objects elements set ea fx ag nite ea eb 
means 
condition ensures nite objects objects nite carrier sets represent nite information excludes example nite object elements equivalent 
condition trivially satis ed pre order fact partial order 
reason convenient partial orders construction algebraic information categories examples equivalent categories pre orders satisfying constructed 
expected result proposition algebraic information category pre ordered objects algebraic category 
proof consider algebraic information category 
show mor algebraic axiom holds 
claim morphism compact domain codomain nite objects 
suppose mor compact 
lub increasing chain morphisms nite objects 
compactness equal morphisms nite domain nite codomain 
conversely morphism nite objects suppose proposition continuity dom cod get consequently subset nite sets nd compact 
proves claim 
objects category sets countable alphabet nite objects morphisms compact morphisms countable 
shows mor algebraic 
axiom follows immediately claim 
completeness algebraicity practice order verify category algebraic information category completeness condition algebraicity condition non trivial conditions check show concrete cases conditions veri ed quite general methods 
assume objects morphisms information category models weak second order theory nite number weak second order axioms quanti cation carried elements nite subsets carrier sets objects 
context objects satisfy submodel model theory substructure discuss question completeness algebraicity separately 
completeness simple model theoretic results concerning type axioms objects morphisms information category completeness condition guaranteed hold 
recall rst order ordinary model theory predicates operations de ned elements carrier sets models rst order axiom satis ed models chain preserved union chain axiom equivalent universal existential axiom prenex normal form precisely number universal quanti ers followed number existential quanti ers 
see example gra 
extend result information categories predicates operations object de ned elements nite subsets carrier set object extend result rst order weak second order model theory 
convenience small letters quanti cation elements capital letters quanti cation nite subsets 
distinguished predicate mixed argument jaj objects constant jaj satis es 
easily shown extending proof case rst order model theory weak second order theory axiom quanti cation preserved union chain 
conclude formula equivalent formula preserved union 
argument extended morphisms follows 
morphism information category regarded weak second order model basic sorts distinguished predicates 
model characterised weak second order axioms objects relation axioms equivalent axioms category contains unions chains morphisms completeness condition satis ed 
algebraicity conditions algebraicity reduced simple criterion 
say weak second order model locally nite nite subset carrier set model contained carrier set nite submodel model say complete information category pre ordered objects locally nite morphisms objects locally nite weak second order models 
suppose complete information category pre ordered objects satis es objects elements countable pool 
claim algebraic locally nite 
assume algebraic morphism 
exist morphisms nite objects 
nd implies locally nite 
direction assume locally nite morphism carrier sets jaj jbj countable choose nite sets jaj jbj put 
de ne inductively follows nite submodel ja jb assuming de ned nite submodel ja ja jb jb algebraic 
proves claim 
simple 
say information category nitary objects nite 
clear chain completion nitary information category simply adding lubs increasing chains objects morphisms category gives rise algebraic information category conversely algebraic information category obtained chain completion full subcategory nite objects 
initial algebra theorem endofunctor category category algebras objects pairs obj hom morphisms objects hom diagram commutes 
initial algebra de ned initial object exists category algebras say initial algebra xed point initial algebra gives canonical solution domain equation importance computing science 
see example ma details 
recall de nitions es 
morphism category strict 


immediately see 
initial object subcategory strict morphisms functor categories standard preserves inclusion morphisms functor complete categories object continuous morphism continuous induced function cpo objects morphisms continuous 
es showed standard morphism continuous endofunctor complete category initial algebra ectively algebraic category initial algebra ectively 
fact general non ective theory better result sp known basic lemma 
lemma category initial object functor 
de ne chain 
unique morphism 
suppose colimiting cones 
initial algebra exists unique mediating morphism 
theorem standard object continuous endofunctor complete category initial algebra proof consider chain basic lemma 
lemma es lub chain colimit follows 
colimiting object continuous 
furthermore 
initial object result follows basic lemma information categories refer standard functors monotonic functors simple way characterizing object continuous functors generalizes corresponding result lw 
say functor complete information categories continuous token sets ha increasing chain jf lemma monotonic functor complete information categories object continuous continuous token sets 
proof part evident 
part note rst de nition substructure relation jaj jbj implies suppose monotonic functor continuous token sets 
ha increasing chain objects monotonicity 
objects continuity token sets carrier sets follows note fact objects object continuous combining results proposition get theorem monotonic endofunctor continuous token sets complete information category initial algebra subcategory strict morphisms 
initial algebra obtained union chain iterates functor distinguished object 
stone spaces section construct information category denoted bool isys presenting category stone spaces continuous functions 
stone duality extra structure information category enables domain equations solved straightforward manner 
objects bool isys boolean algebras form carrier set elements countable pool boolean operations respectively greatest elements algebra 
easy reader check axioms satis ed boolean operations universal existential form 
regard boolean homomorphism objects relation de ned 
axioms follows afb afb afb afb fb afb fb 
objects substructure relation means boolean subalgebra inclusion morphism simply boolean inclusion 
distinguished object 
trivial boolean algebra consisting elements 
obtain information category bool isys 
complete axioms category easily seen 
type 
furthermore category clearly locally nite algebraic 
stone duality bool isys dual category countably stone spaces hal 
instructive solve domain equation bool isys solution represents known stone space 
consider domain equation category stone spaces continuous functions element set discrete topology represents product stone spaces product topology 
dual category bool isys dual equation say element boolean algebra consisting say represents coproduct boolean algebras de ned follows 
coproduct algebra generated union sets frg subject relations inherited form initial algebra functor obtained union chain 







boolean algebras generated respectively sets convenience dropped brackets representing tokens stands 
notice set generators subset 
general 
generated set initial algebra obtained union generated set appreciate tokens fact represent open sets construct stone spaces corresponding boolean algebras chain 
nite discrete spaces obtained iteration action functor point space element space conveniently taken easily identify token set elements having th entry 
tokens represent set open sets cantor space provides nal algebra solution original domain equation category stone spaces continuous functions 
scott information systems construct di erent course equivalent complete information categories scott domains 
rst dp uses original presentation domains scott sco larsen winskel lw second presentation gunter gun fact mentioned 
develop second presentation obtain algebraic information category 
isys lw sco scott information system de ned structure jaj con jaj set tokens xed pool con non null subset jaj consistent sets subset con entailment relation 
extends easily subset con con convenient assume start binary relation jaj 
require axioms equivalent papers con con ii jaj fag con iii cona iv con vi note vi implies pre order jaj 
morphism called approximable mapping objects relation jaj jbj satisfying xry cona ii iii xry xry xr iv xry ry trivial check identity morphism substructure restricted jaj jbj morphism inclusion morphism 
put 
trivially information system approximable mapping 

information category isys con 
complete axioms 
type 
bc isys de ned category bounded complete information systems section see gun 
assuming system distinguished token 
denote category bc isys 
easily shown bc isys 
complete information category partial order captured approximable mapping arb inclusion relations 
ambiguously denotes trivial object having 
set tokens 
fact conditions trivial check follows fact axioms de ning objects morphisms bc isys universal type 
obtain algebraic information category consider full subcategory bc isys bc isys consisting objects elements jaj xed countable pool partial order 
categories equivalent object isomorphic lindenbaum algebra object bc isys 
slight change notation write partial order object bc isys claim bc isys 
algebraic information category 
completeness axiom holds 
furthermore bc isys locally nite object nite subset jij set conjunctions consistent subsets nite gives rise nite submodel proves category locally nite algebraic 
known bc isys bc isys equivalent category scott domains continuous functions details es 
function space constructor usual constructors scott domains counterparts constructors bc isys 
just function space constructor 
recall initial algebra theorem holds covariant functors general function space constructor 
bc isys op bc isys bc isys contravariant rst argument 
restrict subcategory inclusion morphisms denoted bc isys obtain covariant functor bc isys bc isys bc isys course standard technique domain theory rst formulated sco 
general formulation context categories ordered hom sets see sp 
describe action objects inclusion morphisms 
convenience drop superscript objects bc isys de ned follows 
ji consists nite sets pairs elements ja 
nite satisfying conditions fa jl lg bounded ii iii exists bounded ji ji cl cl closure conditions 
closure obtained steps cl start subsets jl lg fa jl lg bounded add pair 
note exists satis es 
cl ii remove redundancies imposing ii iii 
routine check object bc isys 
see conditions iii ensure compact element function space scott domains unique representation function space corresponding information systems space fact partial order simply pre order 
functor 
acts inclusion morphisms follows 
readily seen 
de ne functor 
covariant arguments standard desired 
verify construction capture intended meaning function space scott information systems 
notations clear denote function space constructor category domains 
proposition scott domains information system isomorphic bc isys 
proof sucient prove isomorphic posets 
need identify compact elements terms step functions elements de ned 

step functions de ned pair compact elements compact compact element expressed terms step functions follows 
consider nite collection pairs ja ka kb satisfying conditions conditions ordering reversed fa jl lg bounded ii iii de nes compact element function space 
fact compact element function space uniquely expressed satisfying conditions 
completeness condition ii iii eliminate redundant step functions de nition mapping 
establishes required isomorphism 
remains verify function space constructor morphism continuous 
proposition functor bc isys bc isys bc isys morphism continuous 
proof show continuous objects 
simply check continuous argument separately 
hi increasing chain objects xed object bc isys 
standard monotonic know show converse 
nite set pairs elements satisfying conditions ii preserved chain follows belongs 

continuous rst argument objects 
similarly continuous second argument objects 
assume increasing chains inclusion morphisms calculate proves continuity constructors including various power domain functors similarly treated 
sfp information systems category sfp domains continuous mappings denoted sfp largest cartesian closed full subcategory category algebraic cpo continuous mappings closed main power functors 
see plo smy jun 
recall algebraic cpo sfp nite ka set minimal denoted mub nite complete sense upperbound exists mub furthermore sfp addition nite ka nite 
jt sfp category sfp domains continuous mappings largest cartesian closed full subcategory alg category algebraic cpo continuous mappings closed main power functors 
de nition construct category information systems sfp isys equivalent sfp 
objects category called sfp information systems tuples mlb 
pre order 
distinguished token implied tokens objects mlb unary operations satisfying axioms mlb ii mlb iii mlb iv mlb vi vii means rst axioms say nite mlb complete set maximal lower bounds respect 
axioms iv say nite subset contained nite subset closed mlb 
axioms vi vii ensure local niteness needed see constructing algebraic information category complete information category 
morphism sfp information systems approximable mapping relation satisfying 

fb af afb afb af objects de ne approximable mappings pr pr easily checked fact approximable mappings satisfying pr id pr id 
check sfp isys mlb 
complete information category fact conditions straightforward verify axioms 
type ensures completeness 
order obtain algebraic information category exactly bc isys consider subcategory sfp isys partially ordered objects elements countable pool 
sfp isys locally nite object mlb category nite subset easily see axioms mlb partial order operations restricted nite submodel sfp isys algebraic information category 
equivalence category sfp sfp isys functors sfp sfp isys follows 
sfp domain put kd mlb inverse mlb mub maximal lower bounds wrt minimal upper bounds wrt de ned section 
easily seen object sfp isys satis es axioms iv vii continuous map sfp domains ar hand sfp isys object mlb put fil set lters ordered inclusion 
see fact sfp note basis domain isomorphic inverse mlb gives minimal iv imply nite subset contained nite set closed minimal upperbound operation 
note order obtain add axioms prefer avoid 
approximable mapping objects sfp isys objects de ne fil fil 
checked de nes equivalence categories sfp information systems approximable mappings pr mapped embedding projection pair sfp domains fil fil 
explicitly de ne function space constructor sfp isys 
assume objects category de ne ja bj consists nite sets pairs elements form ja 
satisfying fa jk kg closed mub subsets 
ii iii exists compare conditions conditions section 
show required operations mlb assume sfp objects function space sfp sfp information system required operations mlb easily see isomorphic posets 
conclude required operations mlb 
function space constructor case bc isys gives rise standard morphism continuous covariant functor subcategory inclusion morphisms sfp isys 
information systems di domains consider di domains introduced ber context studying full abstraction problem typed calculi 
recall di domain bounded complete scott domain satis es conditions di di ii nite number elements compact element 
function di domains stable continuous satis es stable functions say stable ordering denoted stable function rigid embedding exists stable function called projection id id 
category di domains stable functions denoted di cartesian closed products formed cartesian product ordered pointwise function space di domains consists stable functions stable ordering 
category closed direct limits rigid embeddings great deal denotational semantics done category including solving recursive domain equations involving product sum function space 
details see cgw 
category information systems di domains denote di isys 
previous examples represent di domain compact elements 
stress fact domains computations represented bt compact elements 
di erent treatment di domains provided zhang zha uses complete prime elements domain representation 
objects di isys called di information systems tuples 

scott information system total binary disjunction operation satisfy 

ii iii iv vi vii note axioms imply set equivalent classes tokens implied token nite consists nite set tokens implied complete sense token implied equivalent 
note vii implies exists inverse implication holds 
morphisms di isys called traces de ned follows 
trace di information systems relation satisfying tr 

tr ii arb rb tr iii arb rb tr iv arb rb tr arb rb identity morphism id diagonal trace id generally objects de ne inclusion projection pr pr trivial check fact de ne traces pr id pr id 
leave proof simple proposition reader 
proposition trace determines approximable mapping de ned rb rb 
see di isys 
complete information category 
notice order object inducing inclusion morphisms case previous examples 
see de nition information category 
conditions easy check completeness condition follows fact axioms di isys 
type 
obtain algebraic information category previous cases consider full subcategory di isys partially ordered objects elements countable pool 
replace write objects subcategory 
partial order vi imply xg 
di isys clearly equivalent di isys complete information category 
locally nite object di isys nite subset consider closure 
scott information systems nite 
xjx sg nite 
see object set partial order operations restricted nite submodel shows di isys algebraic required 
de ne functors di di isys equivalence categories 
start de ning object di de ne kd 
inverse exists ag readily seen basis di di ii satis es vii 
consider stable mapping di domains de ne fm kd ke ar minimal element 
minimal elements scott open sets compact open continuous open compact de nition sense 
proposition trace 
proof show satis es tr tr replaced respectively 
recall inverse convenience shall refer proof 
element 
see tr holds 
prove tr ii assume bounded wrt minimal elements 
stable minimality show tr iii assume minimal element minimal element 
show tr iv assume bounded minimal elements respectively 
note di domain compact compact 
bounded 
furthermore minimal element suppose stability minimality get similarly establishes tr iv 
note partial order tr tautology 
de ne functor di isys di 
object di isys fil set lters ordered inclusion 
scott domain scott information system 
compact elements principal lters fa fil bounded fa yg 
show domain satis es distributivity axiom di follows 
basis domain isomorphic poset inverse 
vii poset satis es di basis 
operations continuous operations cpo follows satis es di 
furthermore nite follows nite di ii holds 
object di required 
consider trace put gm fil 
fil continuous map corresponding approximable mapping see proposition 
prove stable map lemma 
lemma continuous map di domains kd 
ke approximable mapping corresponding stable satis es condition gb gb gb proof continuous continuous operation need consider stability condition compact elements 
stable kd reverse inequality holds monotonicity kd ke kd ke gb gb gb ordering information system reversed rb completes proof 
proposition stable 
proof need check condition lemma holds approximable map suppose bounded rb rb 
exists rb rb 
bounded tr ii implies say 
arb approximable mapping nally get rb 
completely de ned functors di di isys routine verify induce equivalence categories 
show stable ordering morphisms captured inclusion traces 
proposition proof assume kd 
ke ar exists ka stable order condition minimal 
direction assume continuity sucient prove stable ordering conditions compact elements ka kb implies ka take kb 
exists tr ii obtain implies 
gives 
reverse inequality holds monotonicity obtain corollary pair inclusion projection traces di isys represent rigid embedding projection pair di 
function space constructor subsection de ne function space constructor di isys 
objects di isys function space de ned follows 
ja bj consists nite traces nite subsets satisfying tr tr iv replaced 
recall tr redundant partial order 
partial order de ne note de nition existence ensured tr iv applied see proposition smallest trace containing order de ne operation convenient put ja bj de ne see shortly largest trace contained condition rigidity condition ensures fact get trace 
fr rg 

proposition ja bj 
di information system 
proof image clearly nite satis es axioms vi 
need show operations give elements ja bj satisfy required axioms 
start 
verify tr tr iv 




tr holds 
show tr ii bounded assume bounded tr ii applied get similarly tr ii holds prove tr iii consider 
tr iii applied exists 
veri ed tr iii 
show tr iv consider get tr iv applied obtain 
required 
conclude ja bj 
show fact conjunction check 


similarly furthermore consider 

tr iv applied required 
ii consider show trace non trivial axiom check tr iii 
ar ar tr iii applied exists implies show satis es axioms disjunction note rst 
assume suppose check assume tr iii applied implies exists rb tr ii applied imply rb shows symmetry conclude 
iii remains check distributivity axiom vii elements ja bj bounded show rigidity condition de nition exists 

rigidity condition implies 
show 
implies xry 
obtain reverse inequality suppose xry 
clearly get hand sb exists sy tr ii applied gives get establishes similarly conclude required 
information systems continuous domains semantic domains commonly taken algebraic dcpo kind 
known category algebraic domains typically extended category continuous domains objects may considered retracts alternatively projections objects continuous lattices retracts projections algebraic lattices bounded complete continuous cpo retracts scott domains 
abstractly extension category retracts may considered construction envelope agv fre ls original category category envelope kar objects pairs object retraction morphism morphism clear usual cases dealing categories spaces kind kar equivalent category retracts objects retractions spaces continuous map ect map image obvious correspondence continuous maps continuous maps form equivalently maps 
categories having distinguished ordering hom sets construction carried projections retractions id general retractions 
constructions context categories es es 
sense setting information categories 
morphism relation token sets object formed adding relation denoted morphisms extended category satisfy axioms inclusion morphisms take account additional structure 
continuous bounded complete posets illustrate presenting information systems continuous bounded complete posets smy projections equivalently retracts scott domains 
equivalence category scott domains scott information systems category information systems continuous bounded complete posets obtained simply envelope bc 
object envelope takes form 

scott information system object bc isys projection retraction axiomatise add axioms state scott information system cs 
cs ii cs iii cs iv cs cs vi cs cs iii say scott morphism cs iv cs morphism retraction retraction projection 
consider describe morphisms 
morphism 

scott morphism satisfying axioms scott morphism add afa note presence cs vi converse axiom holds automatically 
cs vi dispensed converse needs added axiom 
suppose particular restriction put easy check morphism course inclusion morphism 
obtain information category cs having objects distinguished transitive order morphisms described 
axioms objects morphisms 
form cs complete 
category cs equivalent category bounded complete continuous cpo smy 
functors functors de ned category extend trivial way kar 
functor extension kar kar de ned morphisms exactly obviously extends functors arguments 
suitable cases may check extended functor satis es universal condition example products coproducts go products coproducts kar exercise fre 
furthermore theorem scott sco kar cartesian closed cartesian closed 
suppose complete information categories object continuous morphism continuous functor 
show kar kar continuous 
increasing chain objects kar 
continuous objects continuity morphisms trivial extension 
note context information categories cs isys notion substructure relation objects 
categorical deduce usual categorical methods standard functors categories give rise standard functors envelopes general deduce 
possible impose categorical conditions imply equation dwell prefer verify particular case usual functors standard 
continuous scott information systems treat function space subtle usual functors 
function space constructor construct function space functor cs isys envelope bc isys 
function space functor bc isys see section 
objects cs isys retractions bounded complete information systems respectively approximable mapping 
de ned easy check retraction 
object cs isys 
prove standard suppose jij jij ji ji 
ji ji standard de ne easily checked construction captures intended meaning function space details see es page 
final remarks stated information systems developed context domains denotational semantics means presenting domains 
majority examples type consequence familiar mathematicians 
seen case boolean algebras stone spaces technique may available types spaces usually studied mathematicians 
key really simple 
constructing points elements domain ect arbitrary lters consistent theories information system see discussion propositional languages 
structure available information system possibility constructing points sophisticated way example prime lters stone duality 
elaborate example cite proximity lattices represent stably compact spaces proximal lters smy 
adding metric structure information systems appropriate way certain classes metric spaces captured notion cauchy lter es 
predominance specialized computer science examples may seen historical accident development technique essential 
agv 
th eorie des topos des sch sga 
lecture notes mathematics 
bar barwise 
rst order logic 
barwise editor handbook mathematical logic studies logic foundations mathematics pages 
north holland 
bc berry 
curien 
sequential algorithms concrete data structures 
technical report report ecole nationale superieure des mines de paris centre de appliqu ees sophia antipolis 
ber berry 
stable models typed calculi 
proceedings th international colloquium automata languages programming volume lecture notes computer science pages 
springer verlag 
bv subrahmanian 
query topology logic programming 
monien cori editor stacs pages 
springer verlag 
lecture notes computer science vol 
cgw coquand gunter winskel 
di domains model polymorphism 
third workshop mathematical foundations programming language semantics pages 
springer verlag 
dp davey priestley 
lattices order 
cambridge university press cambridge 
es edalat smyth 
categories information systems 
pitt curien abramsky pitts rydeheard editors category theory computer science pages 
springer verlag 
es edalat smyth 
categories information systems 
technical report doc department computing imperial college 
es edalat smyth 
compact metric information systems 
semantics foundations applications rex workshop volume lecture notes computer science pages 
springer verlag 
es edalat smyth 
categories framework solving domain equations 
theoretical computer science 
fg fourman grayson 
formal spaces 
van dalen editors brouwer symposium pages 
north holland 
fre freyd 
abelian categories theory functors 
harper row new york 
gra 
universal algebra 
springer verlag berlin heidelberg new york nd edition 
gun gunter 
universal pro nite domains 
information computation 
hal 
lectures boolean algebras 
number van nostrand mathematical studies 
princeton 
jun jung 
cartesian closed categories domains 
phd thesis technische hochschule darmstadt 
llo lloyd 
foundations logic programming 
springerverlag 
ls lambek scott 
higher order categorical logic 
cambridge studies advanced mathematics vol 

cambridge university press 
lw larsen winskel 
information systems solve recursive domain equations ectively 
macqueen kahn plotkin editors semantics data types pages berlin 
springer verlag 
lecture notes computer science vol 

ma manes arbib 
algebraic approaches program semantics 
springer verlag 
plo plotkin 
post graduate lecture notes advanced domain theory incorporating pisa notes 
dept computer science univ edinburgh 
available 
sco scott 
continuous lattices 
lawvere editor toposes algebraic geometry logic pages 
springer verlag berlin 
lecture notes mathematics 
sco scott 
lambda calculus models philosophy 
barwise keisler kunen editors kleene symposium pages 
north holland publishing 
sco scott 
domains denotational semantics 
nielson schmidt editors automata languages programming proceedings 
springer verlag berlin 
lecture notes computer science 
smy smyth 
ectively domains 
theoretical computer science 
smy smyth 
largest cartesian closed category domains 
theoretical computer science 
smy smyth 
stable cation london math 
soc 

sp smyth plotkin 
category theoretic solution recursive domain equations 
siam computing 
tennent 
semantics programming languages 
prentice hall 
win winskel 
event structures 
foundations software technology theoretical computer science pages berlin 
springer verlag 
lecture notes computer science vol 

zha zhang 
di domains information systems 
ausiello dezani ciancaglini ronchi della rocca editors automata languages programming volume lecture notes computer science pages berlin 
springer verlag 

