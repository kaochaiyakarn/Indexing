cryptographic evaluation ipsec niels ferguson bruce schneier internet security way suite pe san jose ca www com february performed evaluation ipsec november rfcs ipsec ka ka mg mg md ka pip msst hc gk pa 
evaluation focused primarily cryptographic properties ipsec 
concentrated integration aspects ipsec intimately familiar typical ip implementations ipsec great disappointment 
quality people worked time spent expected better result 
opinion various discussions people involved learned virtually satisfied process result 
development ipsec burdened committee process forced shows results 
serious ipsec probably best ip security protocol available moment 
looked functionally similar protocols past including sm sm manner looked ipsec 
protocols come near target manage mark wider margin ipsec 
difference significant security point view points getting security nearly right 
marketing point view important 
ipsec current best practice matter badly reflects ability create security standard 
main criticism ipsec complexity 
ipsec contains options flexibility ways doing similar things 
typical committee effect 
committees notorious adding features options additional flexibility satisfy various committee 
know additional complexity bloat seriously detrimental normal functional standard 
devastating effect security standard 
instructive compare approach taken nist development aes nist nist 
committee nist organized contest 
small groups created proposal process niels com schneier com limited picking 
time writing stage elimination remaining candidates better standard committee 
lesson cryptographic protocols developed committee 
stress analysis way full security review 
looked obvious aspects system 
areas hardly reviewed included comments review 
fixing problems list improve ipsec result secure system 
general comments go details ipsec give general comments entire system 
complexity start introducing new rule thumb call complexity trap complexity trap security worst enemy complexity 
odd statement especially light simple systems exhibit critical security failures 
true 
simple failures simple avoid simple fix 
problem cases lack knowledge right refusal inability apply knowledge 
complexity different beast really know handle 
complex systems exhibit failures complex failures 
failures harder fix systems complex know system unmanageable 
designing software system matter weighing reconciling different requirements functionality efficiency political acceptability security backward compatibility deadlines flexibility ease 
requirement simplicity 
system gets complex difficult expensive maintain 
fulfilling imagine aes process committee form 
rc elegant cipher start 
uses multiplications data dependent rotations 
add decorrelation modules get provable security add outer mixing layer mars rijndael rounds add key dependent increase number rounds include cast boxes 
large number arbitrary changes everybody equally unhappy 
result cipher combines clever ideas original proposals contains serious weaknesses taken trouble really analyze final result 
requirements usually involves complex design systems design complex designers implementers reasonably handle 
systems design complex handle project fails accordingly 
virtually software developed try fix methodology 
small pieces implemented tested fixed tested 
small pieces combined larger module module tested fixed tested 
result software functions expected familiar high frequency functional failures software systems 
process making fairly complex systems implementing try fix methodology devastating effect security 
central reason easily test security security functional aspect system 
security bugs detected fixed development process way functional bugs 
suppose program developed testing development quality control 
feel confident stating result completely useless program perform desired functions correctly 
exactly get try fix methodology respect security reasonable way test security system perform security reviews 
security review manual process expensive terms time effort 
just functional testing prove absence bugs security review show product fact secure 
complex system harder security evaluation 
complex system security related errors specification design implementation 
claim number errors difficulty evaluation linear functions complexity fact grow faster 
sake simplicity assume system different options possible choices 
measure complexity reasonable length system specification implementation proportional 
different pairs options interact unexpected ways different configurations altogether 
possible interaction lead security weakness number possible complex interactions involve options huge 
expect number actual security weaknesses grows rapidly increasing complexity 
increased number possible interactions creates security evaluation 
system moderate number options checking option interactions huge amount 
checking possible configuration effectively impossible 
difficulty performing security evaluations grows rapidly increasing complexity 
combination additional potential weaknesses difficult security analysis unavoidably results insecure systems 
actual systems situation quite bad options orthogonal relation interaction 
occurs example options different layers communication system layers separated defined interface show options side 
reason separation system relatively independent modules clearly defined interfaces hallmark design 
modularization dramatically reduce effective complexity system need eliminate important features 
options single module course interactions need analyzed number options module minimized 
modularization works properly actual systems include cross dependencies options different modules affect 
complex system loses fronts 
contains weaknesses start harder analyze harder implement introducing security critical errors implementation 
increase number security weaknesses interacts destructively weakest link property security security system limited security weakest link 
single weakness destroy security entire system 
complexity virtually impossible create secure system system extremely hard manage 
people running actual system typically thorough understanding system security issues involved 
configuration options kept minimum options provide simple model user 
complex combinations options configured erroneously results loss security 
stories kah wri illustrate management complex systems weakest link 
repeat security worst enemy complexity 
security systems cut bone simple possible 
substitute simplicity 
complexity ipsec opinion ipsec complex secure 
design obviously tries support different situations different options 
feel strongly resulting system level complexity analysed properly implemented current methodologies 
ipsec system achieve goal providing high level security 
ipsec documentation thing notices looking ipsec documentation hard understand 
overview reader assemble pieces build overview 
highly state affairs documentation meant convey information readers 
believe reasonable expect learn ipsec ipsec documentation 
various parts ipsec documentation hard read 
example isakmp specifications msst contain numerous errors essential explanations missing document contradicts various places 
stated goal documentation specify ipsec supposed achieve 
stated goals standard analyze 
goals obvious left deduce goals designers design check design fulfilled goals 
course highly undesirable discussion results deteriorate discussion ipsec supposed achieve 
lack specification difficult ipsec 
designer wishes ipsec part system way determining functionality ipsec system provides 
saying ipsec provides packet level security saying car transport true right circumstances situations large number additional prerequisites restrictions 
designer tries ipsec knowing prerequisites resulting functionality virtually certain create system achieve security goals 
problem evident 
ipsec provides ip level security essentially vpn protocol 
hear people trying application level security authenticating user tries get email 
ipsec authenticates packets originating knows particular key think authenticates originating ip address filter firewall 
ipsec lead problems 
rationale ipsec documentation provides rationale choices 
somewhat important clear statement goals consider crucial information 
reviewer comment design rfcs requests comments told option intended achieve 
rationale reviewer left guess review design guessed rationale 
lesson documentation system include introductory material overview time readers stated goals rationale reason including extra material desire ensure contradictions usual standardization practice marking part documentation normative parts informative 
bulk data handling discuss various parts ipsec detail 
assume reader familiar details ipsec 
core ipsec consists functions provide authentication confidentiality services ip packets ka ka mg mg md ka pa gk 
example create vpn untrusted network secure packets pair computers local network 
complexity ipsec modes operation transport mode tunnel mode 
protocols ah esp ah provides authentication esp provides authentication encryption 
creates lot extra complexity machines wish authenticate packet total different modes transport ah tunnel ah transport esp null encryption tunnel esp null encryption 
differences options functionality performance minor 
documentation clear circumstances envisioned protocols ah authentication esp encryption 
modes far determine functionality tunnel mode superset functionality transport mode 
network point view view tunnel mode special case transport mode security point view case 
advantage see transport mode results somewhat smaller bandwidth overhead 
tunnel mode extended straightforward way specialized header compression scheme explain shortly 
achieve virtually performance transport mode introducing entirely new mode 
recommend transport mode eliminated 
recommendation eliminate transport mode 
documented rationale know ipsec modes 
opinion require compelling argument introduce second major mode operation 
extra cost second mode terms added complexity resulting loss security huge certainly introduced clearly documented reasons 
eliminating transport mode eliminates need separate machines network categories hosts security gateways 
main distinction security gateways may transport mode transport mode distinction longer necessary 
protocols functionality provided protocols overlaps somewhat 
ah provides authentication payload packet header esp provides authentication confidentiality payload 
transport mode ah provides stronger authentication esp provide authenticates ip header fields 
standard modes operation ah esp transport mode 
tunnel mode esp provides level authentication payload includes original ip header ah typically combined esp ka section 
implementations required support nested tunnels allow esp ah tunnel mode 
question ip header fields authenticated 
authentication payload proves came knows proper authentication key 
provide adequate information 
ip header fields get data recipient affect interpretation packet 
reason ip header fields need authenticated somebody provides reason rationale remains unclear 
ah protocol ka authenticates ip headers lower layers 
clear violation modularization protocol stack 
creates kind problems header fields change transit 
result ah protocol needs aware data formats lower layers mutable fields avoided 
ugly construction create problems extensions ip protocol create new fields ah protocol aware 
header fields authenticated receiving application rely entire packet 
fully understand authentication provided ah application needs take account complex ip header parsing rules ah uses 
complex definition functionality ah provides easily lead security relevant errors 
tunnel esp authentication avoids problem uses bandwidth 
extra bandwidth requirement reduced simple specialized compression scheme suitably chosen set ip header fields single bit esp header indicates fields inner ip header identical corresponding fields outer header 
fields question removed reduce payload size 
compression applied computing authentication encryption 
authentication computed entire original packet 
receiver original packet outer header fields verifies authentication 
suitable choice set header fields allows tunnel esp achieve virtually low message expansion transport ah 
conclude eliminating transport mode allows elimination ah protocol loss functionality 
recommend ah protocol eliminated 
trivial generalization flag bits controlling set ip header fields 
recommendation eliminate ah protocol 
esp esp protocol allows payload encrypted authenticated 
virtually cases encryption authentication useful 
situation sense authentication esp protocol authentication provided subsequent application ah protocol done transport mode esp authentication transport mode strong 
transport mode ah protocol worry esp provide authentication 
recommend esp authentication encryption optional 
recommendation modify esp provide authentication encryption optional 
avoids misconfigurations system administrators 
administrators know need encryption network secure know exactly cryptographic services require 
quite configure esp encryption believing provides security 
fragmentation ipsec exhibits unfortunate interactions fragmentation system ip protocol ka appendix 
complex area typical ipsec implementation perform specialized processing facilitate proper behavior higher level protocols relation fragmentation 
strictly speaking fragmentation part communication layer ipsec layer ideal world transparent ipsec 
compatibility requirements existing protocols tcp force ipsec explicitly handle fragmentation issues adds significantly complexity 
far see elegant solution problem 
bulk data handling overly complex 
number major modes operation drastically reduced significant loss functionality 
recommend esp tunnel mode retained esp protocol modified provide authentication 
order operations encryption authentication provided ipsec performs encryption authenticates ciphertext 
opinion wrong real problem course tcp interacts directly fragmentation different layer bit late change 
order 
going horton principle ws protocol authenticate meant said 
meaning ciphertext depends decryption key 
authentication applied plaintext ssl ciphertext 
encrypting authenticating second lead direct security problem 
case esp protocol encryption key authentication key part single esp key sa 
successful authentication shows packet sent knew authentication key 
recipient trusts sender encrypt packet half esp key decrypted data fact original data sent 
exact argument secure gets complicated requires special assumptions key agreement protocol 
example suppose attacker manipulate key agreement protocol set sa way parties get agreement authentication key disagreement encryption key 
done data transmitted authenticated successfully decryption takes place different key encryption plaintext data garbled 
simpler robust authenticate plaintext 
attack ipsec suppose hosts manually keyed transport mode ah protocol security association sa call 
due manual keying ah protocol provide replay protection 
hosts negotiate transport mode encryption esp sa call sa esp send information sa esp 
application expect get confidentiality authentication channel replay protection 
immediate interaction finished sa esp deleted 
hours hosts negotiate encryption esp sa sa esp receiver chooses spi value sa esp sa esp data transmitted sa esp 
attacker introduces packets exchange 
packet encrypted sa esp authenticated 
receiver checks authentication finds valid 
replay protection enabled sequence number field ignored 
receiver proceeds decrypt packet sa esp presumably different decryption key sa esp result receiver accepts packet valid decrypts wrong key presents garbled data application 
clearly authentication property violated 
may somewhat contrived example points serious flaw concept authentication 
mentioned problem solved easily recommendations remove transport mode ah protocol entire scenario 
fix underlying problem 
authenticating ciphertext plaintext authenticate meaning packet authentication cover bit data interpretation packet 
see ws detailed discussion principle 
lesson authenticate just message determine meaning message 
fast discarding fake packets authenticating ciphertext allows recipient discard packets erroneous authentication quickly overhead decryption 
helps computer cope denial ofservice attacks large number fake packets eat lot cpu time 
question preferred mode attack tcp ip enabled computer 
important consideration authentication ciphertext retained decryption key data relevant interpretation included authentication 
possible esp protocol ugly ah protocol dig esp protocol data structures authenticate decryption key 
recommendation modify esp protocol ensure authenticates data deciphering payload 
modularization point view idea rely key negotiation protocols provide strong linkage authentication key encryption key 
esp protocol take care security considerations 
ordering encryption authentication ipsec dangerous 
authentication applied data determine meaning packet 
authenticating ciphertext authenticating decryption key wrong 
security associations security association sa simplex connection affords security services traffic carried ka section 
computers side sa store mode protocol algorithms keys sa 
sa direction bi directional communications sas required 
sa implements single mode protocol protocols ah esp applied single packet sas required 
aforementioned comments affect sa system modes protocols sa system complex necessary 
situations computer sends ip packet host reply sent 
situations traffic direction needs secured traffic direction need secured 
virtually practical situations sas occur pairs allow bi directional secured communications 
fact ike protocol negotiates sas pairs 
suggest logical sa bi directional connection machines 
halve number sas system 
avoid asymmetric security configurations somewhat useful real time traffic scenarios think undesirable 
security policies security policies stored spd security policy database 
packet sent spd checked find packet processed 
spd specify actions discard packet packet bypass ipsec processing apply ipsec processing 
case spd specifies sas suitable sas set specifies parameters new sas set 
spd flexible control mechanism allows fine grained control security processing packet 
packets classified large number selectors spd match selectors determine appropriate action 
depending spd result traffic computers carried single sa separate sa application tcp connection 
fine granularity disadvantages 
significantly increased overhead setting required sas traffic analysis information available attacker 
see need fine grained control 
spd specify packet discarded bypass ipsec processing authenticated authenticated encrypted 
packets combined sa important 
holds exact choice cryptographic algorithm algorithm 
asking users administrators determine packets secured bypass ipsec processing probably asking 
significant fraction installations settings create security holes 
asking specify details cryptographic algorithms parameters algorithms take guarantees average installation contain configuration weaknesses 
feel ask users administrators determine packets require type processing 
ideally user specify example packet requires authentication encryption leave 
implementation ensure algorithms uses provide adequate security situations 
cryptographic algorithms available cheap reason weak bad algorithms 
argue configuration allow levels encryption export quality full quality encryption 
practice 
quality level encryption required smtp port depends actual contents mail determined data available policy matcher 
nice high level approach done relation choice sa points 
currently reliable automatic method detecting ipsec enabled security gateways see practical alternative manual configuration parameters 
questionable automatic detection ipsec enabled gateways possible 
initial knowledge side detection negotiation algorithm subverted active attacker 
comments section contains minor comments bulk data handling ipsec 

ka section point suggests implementation find matching spd entry packet back pointers sad entries 
general correctly 
suppose spd contains rules packets port second allows incoming packets authenticated 
sa set second rule 
sender sends packet sa addressed port packet refused matches spd rule 
backpointer sa points second rule spd allows packet 
shows back pointers sa point appropriate rule proper method finding relevant spd entry 

handling icmp messages described ka section unclear 
states icmp message generated router forwarded transport mode sa transport mode sas occur hosts 
definition hosts forward packets router access transport mode sa 
text suggests unauthenticated icmp messages disregarded 
creates problems 
envision machines geographically far apart tunnel mode sa set 
probably dozen routers machines forward packets 
routers knows existence sa 
icmp messages relating packets sent unauthenticated unencrypted 
simply discarding icmp messages results loss ip functionality 
problem mentioned text claims due routers implementing ipsec 
routers implement ipsec send authenticated icmp messages concerning tunnel set sa tunnel point purpose sending icmp packet 
tunnel point turn wants sure source real router 
requires generic public key infrastructure exist 
far understand problem fundamental compatibility problem existing ip protocol solution 

various algorithm specifications require implementation reject known weak keys 
example des cbc encryption algorithm specifications md requires des weak keys rejected 
questionable increases security 
extra code requires creates security problems due bugs solved rejecting weak keys 
weak keys really problem situations 
des easiest way attacker detect weak keys try 
equivalent partial keyspace search done small set keys 
weak key rejection required algorithms detecting weak key class weak cipher properties significantly trying weak keys question wfs 
recommendation remove weak key elimination requirement 
encryption algorithms large classes weak keys introduce security weaknesses simply 

mandatory encryption algorithm esp des cbc 
due limited key length des bdr considered secure 
strongly urge algorithm standardized replaced stronger alternative 
obvious candidate triple des 
blowfish sch interim high speed solution software 
upcoming aes standard nist nist presumably gain quick acceptance probably default encryption method systems 

insistence randomly selected iv values md overkill 
true counter provide known low hamming weight input differentials block cipher reasonable block ciphers secure type attack 
furthermore chosen plaintext attacks allow low weight input differentials quite ipsec system 
random generator results increased risk implementation error lead low entropy constant iv values error reduce security typically testing 

block cipher bit block size general limited block encryptions key 
due birthday paradox 
blocks expect collision 
cbc mode equal ciphertexts give attacker xor blocks plaintext 
specifications des cbc encryption algorithm md mention require sa algorithm limit total amount data encrypted single key suitable value 

preferred mode block cipher esp cbc mode pa 
probably widely cipher mode disadvantages 
mentioned earlier collision gives direct information relation plaintext blocks 
furthermore hardware get probability collision limited blocks 
implementations encryptions done turn 
gives limited parallelism hinders high speed hardware implementations 
counter mode preferable 
ciphertext block formed ci pi ek block number needs sent start packet 
blocks counter mode reveals information plaintext occurs cbc 
big advantage counter mode hardware implementations parallelize encryption decryption process achieving higher throughput lower latency 

pa section states blowfish weak keys likelihood generating small 
disagree statements 
likelihood getting equal bit values entry box event certainly occur practice 
blowfish weak keys lead detectable weaknesses reduced round versions cipher 
known weak keys full blowfish cipher 

pa section suggested negotiate number rounds cipher 
consider bad idea 
number rounds integral cipher specifications changed 
ciphers specified variable number rounds determination number rounds left individual system administrators 
ipsec standard specify number rounds ciphers 
negotiating number rounds opens avenues attack 
suppose negotiation protocol subverted side rounds side rounds 
attacker try get side encrypt message side decrypt message 
resulting plaintext returned attacker block round processing ciphers easy attack 

pa section proposes rc riv 
urge caution cipher 
uses new ideas fully analyzed understood cryptographic community 
original rc proposed rounds broken bk response recommended number rounds increased 
feel research data dependent rotations required rc fielded systems 
ipsec bulk data handling simplified significantly 
identified various problems weaknesses addressed 
replay protection starting value formed times sequence number 
saves bytes packet 
isakmp isakmp msst defines structure protocols establish sas perform key management functions 
isakmp supports domains interpretation doi ipsec doi 
isakmp specify protocol provides building blocks various key exchange protocols 
comments documentation description isakmp clear 
great difficulty understanding intentions description 
list comments documentation 

document contains repeated instances text similar texts 
text unnecessarily long hard read 
example section list checking actions possible logging notifications described succinctly 

msst section defines hash payload verify integrity authentication data isakmp message 
data described result hash function applied message provides integrity authentication 
presumably payload contains mac case name hash payload hash data field name misnomer 
general ipsec documentation confuse hashes macs 

msst section specifies generic processing sending isakmp message 
description method specify algorithm ambiguous probably wrong 
clear exactly step entered 
strictly speaking step message resent counter decremented 
suppose reaches 
step executed immediately logs retry limit reached event log side chance respond resend 
assuming step executed immediately step resend packet answered vain 
clearly intention designers 
description resend mechanism clarified 
presumably resend mechanism disabled soon valid reply received 

data attributes transform payload 
ipsec doi defines data attributes apply various levels 
attributes apply entire sa 
sa contain proposals proposal contain transforms 
sa wide attributes transform transforms 
various attributes interpreted 

interesting note msst section claims splitting functionality isakmp doi key exchange protocol security analysis complex 
feel modularization boundaries simplify analysis significantly 
unfortunately isakmp doi key exchange protocol documents contain numerous cross dependencies security analysis complex 
header types definition isakmp headers gives rise various questions 
standard header payload contains type payload message msst section 
construction complicate generation parsing messages 
isakmp header contains length parser knows payload message 
simpler payload contain type standardized payload header type payload 
msst section clear security association payload uses system sub payloads confused 
fact field sa header indicate type sub payload 
sub payload specifies type sub payload corresponding field sub payload 
presumably receiver know sa payload proposal payload sub payload 
gives rise question proposal payload header field 
type information allowed structures receiver deduce value field 
inconsistencies 
sa header specify proposals included sub payloads proposal header specify transform payloads included sub payloads 
system sub payloads documented clearly 
suggest header field changed header field 
certainly lot things simpler 
confusion sub payloads leads second confusion 
certificate request payload may inserted proposal payloads proposal payloads just inside sa header explicit 
certificate request payload inserted proposal recipient way identifying payload certificate request payload interpret proposal 
fact certificate request payload section specifies accepted point exchange adds confusion 
security comments cases security constructions questionable 
isakmp general structure document unclear result weaknesses actual specific cases isakmp 
stress perform full analysis isakmp protocols expect undiscovered weaknesses 

isakmp allows great latitude participants exact messages sent exact processing done 
extremely hard give reasonable statement security properties achieved protocols 
authors feel overview different variations allowed isakmp 
security analysis extremely hard 

msst section specifies resend functionality 
clear receiver responds multiple copies message 
ideally implementation verify copies receives identical resend identical copies reply sent 
careful implementation re process incoming message 
opens various modes attack 
example identity protection exchange attacker resend fourth message initiator collect chosen messages varying nonce 
ignoring encryption moment note encryption weak nonexistent 
threatening changing ke payload attacker able subtle interactions find information key 
attack lines possible 
attacker identity protection exchange resends fourth message modified ke payloads 
assume dh key agreement protocol modulo subgroup size small divisors 
specific choice dh group unfortunate practical secure key exchange algorithm 
attacker recover dh secret initiator repeatedly sending ke payloads contain elements low order checking limited set possible keys encryption 
reveals initiator dh secret modulo order element sent ke payload 
combining tries reveals entire dh secret 
dh secret initiator known attacker resends original fourth message 
returns parties state attacker interfered 
subsequent exchange continues normal attacker key clearly violates intention protocol 
shows important specify party react repeat message exchange 
analyzed protocols similar weaknesses clear solution protocol step introduce additional weaknesses 
retransmission system handling duplicate messages avoid reprocessing messages 
rejecting copies message identical copy received allow recovery bogus message 
little security risk providing recovery 
exchange abandoned new started 
general method ensuring completion exchange presence active attacker 
possible attacker flip bits message case exchange fail 

msst section defines authentication exchange provides authentication party exchange keys 
direct protocol 
exchange parties know talking provide information 
assume protocol meant authenticate party secure channel established authentication 
side perform man middle attack authentication protocol 
fact general property exchanges defined isakmp 
completed man middle 
man middle learn key established exchange 
authentication protocol establish key link authentication existing key participants protocol 
protocol dangerous implementers think provides kind security service 
attempted authentication exchange result security weakness sort 

identity protection exchange msst section vulnerable active attack 
initiator sends identity having authenticated party 
active attacker pretend responder collect initiator identity abandoning protocol 
initiator little choice try negotiate sa 
attacker interfere complete attacker retrieved value 
note type weakness avoided public key encryption 
initiator send identity encrypted public key responder 
initiator retrieve responder public key way 
central public key directory provide service revealing information attacker initiator retrieving somebody key 
functional comments part analysis generated various comments functionality isakmp 
choice selection 
certificate request payload request certificate party 
allows requestor specify single ca accept 
responder send certificate value contained payload practical systems single responder certificates ca 
unclear responder send suitable certificate suitable certificates 
common case handled 
way parties ask certificate issued list cas 
useful 
currently competing cas certificates 
specific machine trust subset 
case accept certificate signed list cas 
isakmp sending list cas interpreted asking certificates sas see msst section 

msst section defines identity protection exchange 
nonces protocol sent messages making protocol base exchange 
furthermore exchange shortened messages 
order third fourth message important 
order messages swapped merged adjacent message sent single packet 
save full roundtrip time negotiations loss functionality 

msst section defines aggressive exchange 
states initial sa payload contain proposal transform 
necessary restriction 
proposal payloads proposal number constitute single proposal 
concern initiator know final transforms sending message requirement proposal number 
ke payload dependent way final keys see reason single proposal restriction place 
restriction single transform redundant 
see problems single proposal contains multiple transforms 

msst section forces spi generated 
needless restriction sender removed 
implementations wish spi directly index table case generated 
ka appendix states spi local significance recipient may choose various ways interpret spi 
imply spi chosen randomly 

various features cookies included prevent denial service attacks participants 
isakmp 
stated msst section denial service attacks prevented completely 
convinced idea increase complexity protocol provide partial solution problem 
require analysis complexity various forms denial service attacks computers 
partial countermeasures sense attacks harder perform 
protecting difficult attacks sense protection easy forms attack 
remains area study 
ike ike default key exchange protocol isakmp moment hc 
ike built top isakmp performs actual establishment isakmp sas ipsec sas 
primitive functions ike supports negotiation various primitive functions protocols 
hash function pseudorandom function prf 
requirements hash function prf 
mention properties ike assumes hash function prf 
hash function widely definition hash function states collision resistant 
impossible find messages hash function 
ross anderson showed protocols break certain collision resistant hash functions :10.1.1.48.1096
gave simple example 
bits message rest 
define collision resistant hash function clear collision resistant protocols silently assume hash function random mapping fail case 
example hmac construction fails miserably hash function reveals key output 
shows important define properties required hash function 
applying hmac just collision resistant hash function dangerous avoided 
pseudorandom function currently special prfs defined default mode negotiated hash function hmac construction 
notational convention hc call argument prf key second argument message 
requirements new prf description calls keyed pseudorandom function take mean fixed key mapping messages output pseudorandom function 
prf indistinguishable function key uniformly selects random element set functions mapping messages suitable output values 
note definition preclude prf invertible known key 
define prf called nasty prf follows short message prf defined prf long messages defined prf suitable hash function block cipher encryption key plaintext block arguments message considered long long block size block cipher 
short messages prf invertible key known 
block cipher block size large bits function indistinguishable random function detecting fact permutation random function requires 
ike uses prf known key input 
clearly designer intention invertible function case 
avoid type problems ike specify properties expects prf 
default construction prf hmac hash function 
shown hash functions result bad prfs hmac construction 
break protocol prf 
example main mode exchange public key encryption fails hmac defined hash reveals allowing fake responder impersonate real responder 
lesson properties required primitive functions system clearly documented 
seen specifying interface parts definition 
allows parts analyzed separately 
clear specifications harder analyze security system 
furthermore serious danger extension introduce new primitive lacks properties silently assumed designers evaluators original version 
derivation data observe computation hc page different authentication cases 
signature authentication key input prf public message input secret 
clearly abuse prf 
revealing reveals xy furthermore concatenation nonces bytes long hmac sha takes bytes key 
public key encryption case line resolves inserting extra hash function application 
formulas computing somewhat ad hoc 
clear properties wanted achieved 
unsure cookies public key encryption case pre shared key case 
idea value input 
principle followed derivation values repeatedly derivation 
signature authentication case xy affects key message field prf application compute far able see properties lead direct weakness prfs forgiving ideal case 
signature authentication case saved fact revealed key input prf applications 
recommendation fix derivation formulas associated values 
hash authentication values ike uses called hash values authentication parties 
fact message authentication code mac values hash values 
clearer standard terminology 
reflection attack formulas computing hash hash symmetrical regard swapping initiator responder 
opens possibility reflection attack 
main mode pre shared keys fraudulent responder claim identity initiator pass authentication phase 
responder choosing cky cky xr xi initiator identity 
case hash equal hash responder just send back value initiator sent 
related attack fraudulent initiator aggressive mode initiator commit xi responder chooses xr random manner 
attack apply signature authenticated main mode exchange 
responder replay initiator values message pass authentication 
proposal attack hash computations include sa reply responder 
implies attacker manipulate payload adverse effects protocol 
suppose initiator sends list proposals order preference 
preferred proposal provides marginal security bits 
attacker modify responder sa select weak mode rest exchange complete usual 
initiator start newly negotiated sa considerably weaker 
suppose done aggressive mode negotiation phase 
resulting isakmp sa weak 
soon initiator starts weak fraudulent responder read fifth message gets initiator encrypted 
matter message wants send reply format encrypted fifth message sent back sixth message 
keys attacker brute force search keys 
attacker recovered isakmp sa keys negotiate full strength ipsec sas initiator pretending responder 
clear violation intention protocol 
subtlety changing responder sa change mode 
attacker responder performing protocol mode initiator protocol mode 
investigated possible interactions clearly undesirable 
responder sa included hash computations 
definition hash values unacceptably weak 
recommendation fix definition hash value provides proper authentication 
parsing string bytes prfs signature functions hash functions applied strings bytes 
strings bytes specify formatted 
opens lot freedom attacker 
suppose places protocol prf function applied key different message formats 
formats generate strings length principle possible confuse prf computations 
attacker take result prf computation receive part protocol value second prf computation 
leads actual weakness depends factors clearly undesirable property 
authenticating intended message prf authenticating string bytes interpretation fully defined 
violates horton principle ws 
set order fields known parsing messages depends outside information 
example hash computation message consists concatenated fields 
length field derived context open manipulation attacker 
ways type attack attempted analyze 
strongly recommend input hash function prf function signature extended field uniquely identifies function system 
protocol id message number version number furthermore message input hash prf signature algorithm constituent fields outside information 
achieved tag length value encoding scheme lines asn 
advocate asn complex 
lesson protocol ensure string authenticated signature mac uniquely marked function system string parsed constituent fields contextual information 
efficiency noted earlier isakmp identity protection exchange shortened messages 
main mode exchanges ike implementations identity protection exchange isakmp 
main mode exchange signature authentication pre shared keys authentication shortened way 
main modes public key encryption authentication shortened exactly way responder need know identity initiator way 
change properties protocol 
possible shorten exchange messages swapping order merging adjacent messages responder sends single packet 
reason ike shorter versions protocols 
case reason documented 
comments relating security give selection security related comments ike 

hc page describes choice signature algorithm affects choice prf algorithm compute hash values 
ugly construction removed 
affect security 
suppose signature method uses weird hash function section perfectly suitable signature system hash function 
ike hash function hmac mode secure 
effect reveal attacker 
far fetched 
rsa system allows message bits recovered signature 
system wants take advantage property definition similar gave section produces exactly type value suitable rsa signature partial message recovery 

method derive key material newly negotiated sa phase quick mode contains serious weakness 
value depends protocol spi nonces 
spi values bit chosen smaller set index values 
implies quite initiator responder choose spi value 
case keying material sas direction turn may allows kind splicing attacks 
weakness exists pfs 
recommendation change derivation phase avoid generating keys negotiated sas 

hc section new group mode specified 
hash values authentication computed exactly manner 
sa message contains single proposal sa reply identical hash identical hash 
result hash really provide authentication 
authentication needed definitions hash values changed 
authentication needed hash values removed 

mentioned earlier active attack identity protection exchange protocol isakmp 
attack attacker responder collects initiator identity abandoning protocol execution 
attack works main mode exchanges signature authentication pre shared key authentication 
public key encryption authenticated versions 
general comments section contains comments ike 

hc section defines encoding group elements ke payload 
different group element encodings parts protocol 
group element encodings consistent 

hc section shows revised mode public key encryption authentication 
properties mode superior mode section 
reason retain modes section removed 

hc appendix defines methods stretch output length prf stretch keying material 
methods strong prf improved 
theoretically perfect prf current definition generate uniformly distributed outputs 
example page block equal block equal block 
implies possible values generated construction 
criticism applies stretching encryption keys ciphers need longer key 
shown pages 
construction generate possible sequences 
stretching methods easily fixed including counter message input prf 
done deriving 
system simplified single stretching function situations 

quick mode negotiation protocol simplified significantly esp transform ipsec encryption authentication 
current solution uses separate cbc encryption mode ad hoc message authentication specific hash values 
protocols easier analyze isakmp sa set confidential authenticated tunnel replay protection quick mode built top 
isakmp implementation support ipsec simplify implementation 
minds ipsec 
hand ipsec far better ip security protocol come microsoft tp hand believe result secure operational system 
far complex complexity lead large number ambiguities contradictions inefficiencies weaknesses 
hard perform kind security analysis feel fully understand system fully analyzed 
serious security weaknesses major components ipsec 
security prize getting right get right 
ipsec falls short target require major changes possibly provide level security 
worries weaknesses identified complexity system 
opinion current evaluation methods handle systems high complexity current implementation methods capable creating secure implementation system complex 
feel way salvage ipsec rigorously reduce complexity eliminating options improving modularization 
require major 
clear blame state affairs lies people worked ipsec process develop 
committee designs bad try get 
ipsec experience demonstrated committee design process wholly incapable creating useful design security system 
opinion fundamental conflict committee process property security systems strong weakest link 
think continuing existing process fixing ipsec various comments bound fail 
nist run process selecting new aes serve example alternate process developing standardizing security system 
strongly discourage ipsec current form protection kind valuable information hope iterations design improved 
strongly discourage current alternatives recommend ipsec alternative insecure network 
realities world 
anderson classification hash functions proceedings fourth ima conference cryptography coding pp 

available www cl cam ac uk ftp users rja hash ps anderson cryptosystems fail proceedings st acm conference computer communications security acm press nov pp 

bdr blaze diffie rivest schneier thompson weiner minimal key lengths symmetric ciphers provide adequate commercial security jan 
bk kushilevitz improved cryptanalysis rc advances cryptology eurocrypt proceedings springer verlag pp 

freier kocher ssl protocol version internet draft transport layer security working group november 
available home netscape com eng ssl 
gk glenn kent null encryption algorithm ipsec rfc nov 
hc internet key exchange ike rfc nov 
kah david kahn story secret writing macmillan publishing new york 
ka kent atkinson ip authentication header rfc nov 
ka kent atkinson ip encapsulating security payload esp rfc nov 
ka kent atkinson security architecture internet protocol rfc nov 
md esp des cbc cipher algorithm explicit iv rfc nov 
mg glenn hmac md esp ah rfc nov 
mg glenn hmac sha esp ah rfc nov 
msst schneider turner internet security association key management protocol isakmp rfc nov 
nist national institute standards technology announcing development federal information standard advanced encryption standard federal register jan pp 

nist national institute standards technology announcing request candidate algorithm advanced encryption standard aes federal register sep pp 

pa pereira adams esp cbc mode cipher algorithms rfc nov 
pip piper internet ip security domain interpretation isakmp rfc nov 
riv rivest rc encryption algorithm fast software encryption nd international workshop proceedings springer verlag pp 

rrs rivest sidney yin rc block cipher nist aes proposal jun 
sch schneier description new variable length key bit block cipher blowfish fast software encryption cambridge security workshop proceedings springer verlag pp 

schneier kelsey whiting wagner hall ferguson bit block cipher nist aes proposal jun 
schneier kelsey whiting wagner hall ferguson encryption algorithm bit block cipher john wiley sons 
sm schneier mudge cryptanalysis point point tunneling protocol proceedings th acm conference communications computer security acm press pp 

available www com html 
sm schneier mudge cryptanalysis microsoft authentication extensions ms proceedings springer verlag appear 
available www com html 
check url thayer glenn ip security document roadmap rfc nov 
wfs wagner ferguson schneier cryptanalysis frog proc 
nd aes candidate conference national institute standards technologies pp 

ws wagner schneier analysis ssl protocol second usenix workshop electronic commerce proceedings usenix press pages 
usenix press 
revised version available www com 
wri wright viking penguin 
