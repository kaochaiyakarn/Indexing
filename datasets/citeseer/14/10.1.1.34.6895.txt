reunite recursive unicast approach multicast ion stoica eugene ng hui zhang march cmu cs school computer science carnegie mellon university pittsburgh pa earlier version appeared proceedings ieee infocom 
research sponsored darpa contract numbers nsf numbers career award ncr ani ani 
additional support provided intel lucent ericsson 
views contained document authors interpreted representing official policies expressed implied darpa nsf intel lucent ericsson government 
keywords multicast routing state reduction incremental deployment load balancing 
propose new multicast protocol called reunite 
key idea reunite recursive unicast trees implement multicast service 
reunite class ip addresses 
group identification data forwarding unicast ip addresses 
compared existing ip multicast protocols reunite unique properties 
routers acting multicast tree branching points group need keep multicast forwarding state group 
non branching point routers simply forward data packets unicast routing 
addition reunite incrementally deployed sense works subset routers implement protocol 
furthermore reunite supports load balancing graceful degradation router resources forwarding table entry buffer space processing power support additional multicast groups branching automatically migrated loaded routers 
sender access control easily supported reunite 
reunite routers multicast tree need maintain control path state discuss variant reunite routers need maintain control path state 
achieved expense having additional protocol message types slightly complex protocol 
ip multicast proposed deering important components service model routing protocols 
ip multicast service model group receiver hosts identified single class ip group address 
host send group setting destination address ip header group address 
receivers dynamically join leave group 
service model provides powerful abstraction applications hosts senders receivers utilize service having keep track membership group 
responsibility ip multicast routing protocols maintain membership information build multicast distribution trees deliver packets sender receivers group 
despite decade research development open technical issues difficult deploy ip multicast global internet 
point view routing existing ip multicast routing protocols scale poorly large number groups 
particular current routing protocols router needs maintain multicast forwarding table entry group distribution tree passes router 
size multicast forwarding table needs grow number active groups results higher router cost lower forwarding performance 
point view service model current model requires new group allocated globally unique address 
difficult large scale distributed environment 
addition current model provide means control allowed send group host send ip multicast address 
case ip unicast waste network resources disruption denial service unauthorized senders greatly amplified case multicast due potentially large number receivers group 
schemes simple multicast express proposed tackle address allocation sender access control problems 
schemes special node sender core associated group group identified special node unicast ip address class multicast address 
allocation group address trivial locally enforcing uniqueness class addresses node uniqueness tuples enforced 
addition access control senders supported forcing packets go special node authenticated multicasted receivers 
proposals address important issues related service model ip multicast scalability problem ip multicast routing remains 
propose novel multicast scheme called reunite recursive unicast tree address scalability issues 
existing ip multicast protocols reunite class ip addresses 
data forwarding group identification unicast ip addresses 
multicast data forwarding implemented novel technique called recursive unicast 
group identified tuple root ip address root port number root node sender special node 
compared existing ip multicast solutions reunite important advantages enhanced scalability reduction forwarding state reunite routers acting multicast tree branching points group need keep multicast forwarding state group 
non branching point routers simply forward packets unicast routing 
need class ip address reunite multicast group identified tuple unicast ip address port number need separate block class ip addresses 
case allocation unique group identification trivial 
addition maximum number simultaneously active multicast groups increases dramatically 
native support incremental deployment unicast addresses destination addresses ip header router implement reunite simply forward packets hop unicast destination address adverse effect protocol potential loss efficiency 
allows reunite incrementally deployed subset network nodes need tunnelling 
load balancing graceful degradation reunite router resources forwarding table entry buffer space processing power support additional multicast groups simply ignore protocol messages branching point automatically migrated routers 
support access control access control implemented authenticating senders root node 
cmu traceroute experiment cmu sites 
multicast scalability sparse groups discussed section existing multicast protocols scalable respect number simultaneously active groups 
router needs maintain multicast forwarding table entry group distribution tree passes router 
techniques hierarchical address assignment forwarding longest prefix match achieve great reduction unicast forwarding table size easily applied multicast 
number multicast groups large speculate majority groups sparse 
important observation members multicast group distributed sparsely network data delivery tree group large number non branching routers routers downstream router 
illustrate point obtained results set traceroute experiments carnegie mellon university sites constructed resulting tree shown 
assuming routing symmetric dvmrp create tree cmu multicasting destinations 
clearly routers tree non branching 
example path cmu receiver routers performing multicast operations forwarding packets hop 
furthermore entire multicast tree branching points routers 
existing multicast protocols sanjay rao providing data 
mft 
mft 
mft 
example packet forwarding reunite 
packets sent unicast replicated branching points 
non branching routers need maintain group multicast forwarding entry important scarce resource multicast routers 
propose new multicast protocol called reunite 
main advantages non branching routers need maintain forwarding state group 
potential greatly reducing size multicast forwarding table network large number sparse groups 
reunite addressing forwarding algorithm key idea reunite protocol recursive unicast implement multicast service 
group reunite builds delivery tree rooted specially designated node called root 
branching node tree maintains list receivers addresses 
receiver said joined multicast tree node address maintained reunite receiver address maintained exactly node group delivery tree 
multicast packet root sends copy packet receiver list 
similarly branching node forwards packet sends copy packet receiver list 
procedure continues recursively packets reach leaf nodes tree receivers 
consider example shows multicast group receivers 
assume source root joins andr 
note branching nodes 
list receivers maintained node shown entry corresponding tables 
multicasts packet simply sends packet receivers list case consists 
forwards packet sends copy receiver list 
copy traverses copy sends 
unicast addresses class addresses data delivery key difference reunite existing ip multicast protocols 
result protocols router multicast tree maintain multicast forwarding state reunite multicast packets simply forwarded router unicast forwarding table cases router non branching router implement reunite router runs multicast related resources forwarding table entries 
discussed results unique advantages reunite enhanced scalability due reduction forwarding state native support incremental deployment graceful degradation load balancing 
details reunite addressing forwarding algorithm rest section describe tree maintenance protocol section 
addressing key distinctive features reunite uses unicast ip addresses data forwarding group identification purposes 
contrast existing ip multicast protocols class ip addresses 
reunite special root node associated group 
node serve root source may desirable choice case single source single source applications 
multicast group identified tuple root ip addr root port number 
generation globally unique group identifiers trivial requires root nodes generate locally unique port number 
multicast packet source destination address fields packet header set ip addresses root receivers group respectively 
forwarding algorithm multicast group reunite builds delivery tree rooted root node 
reunite router maintains multicast forwarding table mft contains entry multicast group data delivery tree branches router 
mft entry format root addr root port dst stale rcv alive rcv alive root addr root port identifies group dst ip address receiver joins group receivers downstream router called receiver list ip addresses receivers router send replicated unicast packets receives multicast packet group destined dst stale alive boolean variables 
mft state soft refreshed entry stale seconds 
similarly refreshed receiver list entry alive seconds 
consider example stale alive source port number shown simplicity 
root dst stale omitted 
assume joins group followed 
seen branching nodes mft entries group 
data packet source address port number destination address arrives node forwarding algorithm searches entry mft exception root node 
entry exists packet duplicated receiver receiver list group mft entry 
destination address duplicated packet replaced corresponding receiver ip address 
original packet simply forwarded destination address 
example forward multicast packet unicast packet corresponding entry mft replicate packet 
mct mft 
mct 
mft 
mft 
mft 
mct mft 
mct mft 
mct mft 
mct 
mft 
mft 
mft 
mct mft 
mct 
mct 
mft 
mft 
mft 
mft 
example illustrating tree creation maintenance protocol reunite 
reunite tree maintenance mct 
mft 
join msg tree msg marked tree msg mft 
discussed earlier group state mft branching router defines multicast forwarding tree 
states installed deleted control protocol 
section describe control protocol create maintain mft router 
addition mft reunite router maintains table called multicast control table mct 
complex version protocol require mct discussed appendix 
router mct contains entry group multicast delivery tree passes branch router 
mct entry format root addr root port dst root addr root port identifies group dst ip address receiver joins group receivers downstream router 
mct state soft refreshed entry times seconds 
worth noting reunite router traversed multicast group delivery tree router maintain entry mft case tree branches router mct case tree branch 
natural question ask reunite router maintain group state reunite scalable ip multicast protocols 
key observation mft needs maintained data plane mct discussed maintained control plane 
data packet arrives mft needs looked 
contrast mct needs looked control messages processed 
partitioning group multicast state forwarding control state reunite maintains smaller group forwarding table ip multicast protocols network large number sparse groups 
previous multicast protocols control messages sent receivers source core reunite uses types control messages join message periodically receiver root tree message multicasted periodically root multicast delivery tree 
join messages create refresh receiver entries mft tree messages create refresh entries mft 
describe tree creation maintenance operations detailed example shown 
source root group receivers router nodes 
better illustrate properties reunite assume asymmetric unicast routes omit port number flags figures simplicity 
addition omit dst stale tuple root mft root 
joining group assume receiver joins group 
initially router aware group join message sent propagated way receiving message creates entry mft 
maintains mft state say joins multicast tree begins sending data packets 
addition sends periodic tree messages delivery tree 
tree message arrives nodes mct updated indicate part multicast forwarding tree 
particular packets destined traverse 
continue example worth noting network paths root receiver asymmetric join tree messages traverse different paths 
example join message passes tree message passes 
quite different existing multicast protocols join messages data packets traverse exact reverse paths 
reunite branch data delivery tree constructed forward direction unicast routing receiver 
contrast multicast protocols data delivery tree constructed reverse direction unicast routing sender 
network asymmetric links paths reunite may potentially generate higher quality data delivery tree multicast protocols 
suppose joins group sending join message 
receiving message part multicast tree branching node 
accomplished removing mct entry group creating mft entry 
data packets tree messages sent replicated sent 
receiver periodically sends join messages refresh mft entry router joins 
join messages discarded router propagated 
example join messages reach respectively 
leaving group leave group receiver simply stops sending join messages 
consider case decides leave group 
mft entry longer refreshed time period seconds concludes left 
note sending data immediately receivers example receive data replicated sent 
remove mft entry terminate unicast flow allow receivers sufficient time discover new mft dst mft stale mft rcv list mft rcv list alive set timer join msg received mft exists node overloaded insert mft rcv list discard join msg forward join msg mct exists mct dst node overloaded insert mct dst mft insert mft rcv list discard join msg flowchart join message processing algorithm 
branch point receive data 
accomplish maintains mft entry additional seconds marks alive indicated shaded area 
time period keeps sending data tree messages 
tree messages marked stale indicate data flow torn 
receives tree message stale bit set removes corresponding entry mct 
receives tree message marks corresponding mft entry stale 
result join message longer intercepted 
eventually reaches new mft entry created 
begins sending data tree messages packets pass node 
tree messages processed described 
mft entry refreshed subsequent join messages 
time period stale mft entry removed receive duplicate data packets 
seconds stale state removed 
longer sends data tree messages andr receiving duplicate data packets 
mft dst mft stale set timer tree msg stale mft stale set timer tree msg received mft exists mft dst mft dst mft stale set timer remove mft rcv list forward tree msg mft stale tree msg stale remove mct mft rcv list mft rcv list alive remove mft rcv list insert mct flowchart tree message processing algorithm 
details tree maintenance protocol previous example illustrates important operations protocol simplified scenario 
section specify complete protocol describing details message generation message processing timeout handling 
message generation join messages periodically generated receiver group 
tree messages periodically generated root group multicast forwarded root mft 
cases message generation period seconds 
message processing algorithms message processing algorithms non root nodes figures 
group address root addr root port abbreviated dst addr abbreviated dst 
description join message processing algorithm implicitly covered section 
flowchart tree message processing algorithm involves cases discussed section 
briefly describe actions 
action executed node branching point group state stale receives non stale tree message destined receiver happen receiver joined node leaves group receiver joined group upstream node 
message received group entry mft refreshed 
time dst set new receiver address indicates node replicate data tree messages received addition entry group receiver list removed 
action performed receiver entry mft stale group entry stale unmarked tree message received 
happen receiver leaves current node joins node upstream may caused change route 
case receiver entry simply removed mft longer need replicate send packets node packets replicated new branching node just joined 
action executed non branching node receives stale tree message 
action consists simply removing group entry mct 
stale tree message indicates seconds data tree message transmissions may terminate result node longer part tree 
note tree message replicated forwarded receiver receiver entry mft stale replicated tree message marked stale 
timeout handling timeout expires mft group entry entire entry marked stale 
second timeout set 
expires entire mft entry removed 
timeout expires receiver entry mft entry receiver entry marked alive 
second timeout set 
expires receiver entry mft entry removed 
timeout expires mct entry entry removed 
reunite advantages enhanced scalability reducing forwarding state existing multicast routing protocols require router multicast tree keep forwarding state multicast group 
forwarding class multicast addresses 
contrast reunite routers acting multicast tree branching points group required keep multicast forwarding state group 
non branching nodes simply forward data packets default unicast routing 
effect reunite removes unnecessary forwarding state converting control path state 
discussed section lead significant savings especially large networks sparse groups 
mct 
mft 
mft 
join msg tree msg reunite aware node regular node scenario illustrating incremental deployability reunite 
steady state amount multicast forwarding state maintained entire network group number receivers group 
receiver joins multicast tree exactly node node maintains receiver state 
note value optimal multicast protocol uses tree topology 
single router point view routers network implement reunite steady state receiver mft entry input interfaces 
steady state link network traversed join messages receiver group 
incrementally deployable existing multicast protocols require router network implement protocol 
introduces deployment problem requires routers network updated simultaneously 
possible solution ip tunneling regions network multicast aware 
reunite hand native support incremental deployment 
packets unicast addresses router implement reunite forward packets unicast packets 
affect correctness protocol may lose efficiency 
extreme case router implements protocol reunite degenerates sending unicast streams receivers root 
illustrate depicts scenario node implements reunite 
case join tree node node longer intercepts join messages 
result packets destined replicated 
note tunneling needed stream node reunite aware 
load balancing graceful degradation multicast protocols requires router multicast tree maintain forwarding state routers longer able store state overloaded run memory multicast tree partitioned 
contrast reunite require router process protocol messages router overloaded choose ignore join messages upstream routers process messages share load 
example scenario shown node may choose ignore join message 
case join message simply propagate stream 
choose accept message get multicast service 
results tree shown 
point view new group router running forwarding table entries exhibits behavior non reunite aware router 
unique group identification 
generating globally unique group identification trivial re unite root just needs generate locally unique port numbers 
support access control reunite easily support sender access control 
root allowed inject multicast traffic network access control implemented simply authenticating senders root node 
discussion protocol dynamics recursive unicast desirable properties introduces dynamic behaviors exist multicast protocols 
section describe situations complex dynamic behaviors show reunite perform gracefully situations 
tree restructuring due member departure reunite receiver leaves group corresponding branch data delivery tree removed may affect receivers branch 
explained section shown figures reunite mechanisms restructure delivery tree receivers lose packet result 
race condition joins reunite mct entry group created router receives new tree message generated result new receiver joining upstream node 
tree message traverses new branch establishes mct state branch join message second receiver arrives router branch message propagated upstream 
mct state established join message intercepted router router branching point second receiver 
due race condition joins branching point second receiver upstream necessary resulting sub optimal tree 
fortunately data delivery tree sub optimal state transiently 
mct state established branch subsequent join messages second receiver intercepted new optimal branching point created 
previous non optimal branching point eventually timeout removed 
duplicate packets tree restructuring discussed previous paragraph section possible short time periods receiver get duplicate packets 
reduce number duplicate packets additional techniques 
example receiver joins multicast tree node node generate tree message immediately receiver 
update mct tables nodes new branch immediately having wait tree message generated root 
technique time window new receivers join nodes newly created path greatly reduced 
multiple senders far assumed root sender group reunite 
section show reunite extended support multiple senders 
idea root acting reflector 
suppose host wants multicast packet group address root addr root port 
simply send unicast packet destination address port number set root addr port respectively 
root node receives packet determines root addr root port corresponds multicast group rooted just multicasts packet group 
note access control implemented easily authenticating sender multicasting packets 
note mechanism accommodate multiple senders reunite similar session relay approach proposed express 
express solution require application level layer ip encapsulation unicasting packets sender root 
reunite implemented efficiently 
simple solution drawbacks 
messages go root network partition root failure compromise entire group 
alleviate problem possible solution backup root primary fails 
second transmission delay larger directly unicasting packet destination 
believe applications delay increase acceptable 
comparison solutions bidirectional trees cbt simple robust 
particular solutions members group may able communicate core node fails 
access control required advantage negated special designated node core node assumed perform task 
source address spoofing ingress filtering reunite router duplicates packets rewrites destination address field packet header keeps source address field root address writing field address 
point view router stream equivalent source address spoofing 
routers implementing ingress filtering interpret security attack automatically drop packets 
problem shared protocols mobile ip 
network routers implement reunite possible solution protect source address spoofing attack authenticate tree messages add mft entry field set interface group tree message comes 
multicast data packet forwarded comes 
network routers implement reunite protocol modification needed accommodate reunite ingress filtering 
solution ip option store root address rewrite source address field packet duplicated 
advantage approach compatible non reunite aware routers implement ingress filtering 
disadvantage adds extra overhead packet processing 
unicast packet forwarding reunite router receives packet extracts source destination addresses source port number packet performs lookup mft 
entry second lookup performed ip forwarding table 
regular unicast packet received lookups required 
note mft lookup involves exact match opposed longest prefix match performed faster ip forwarding table lookup 
efficiency packet replication discussed section reunite mft stores list receiver addresses unicast packet needs sent 
contrast forwarding table multicast protocols stores list output interfaces multicast packet needs replicated 
implemented efficiently bitmap output interfaces leveraging packet replication capabilities switch backplane 
despite mft table content different reunite packet replication algorithm implemented efficiently 
content mft distributed input output ports router 
input mft entry contain root addr root port dst addr stale port mask mask bit mask specifies output ports multicast packet needs forwarded 
receiver list associated group entry stored corresponding output ports 
packets replicated bitmaps transmitted backplane fashion similar existing ip multicast protocols 
rewriting destination address field duplicated packets done corresponding output ports 
accommodating multicast capable subnets far described reunite assuming point point network 
lan wan technologies native support multicast 
sending individual unicast messages receivers multicast capable subnet ethernet inefficient 
possible solution map reunite group local ip multicast group network 
joining host sends request containing reunite group address local gateway 
local gateway maps reunite group address local ip multicast group address replies host local ip multicast address 
subsequently host joins local ip multicast group igmp 
local gateway join reunite group behave local receivers 
reunite packet received local gateway translates destination address forwards packet local ip multicast group 
points worth noting 
ip multicast address allocation simple address locally unique 
second solution require changes igmp host ip protocol stack 
simulation experiments implemented reunite ns 
section results simulation experiments illustrating aspects protocol graceful degradation load balancing incremental deployment dynamic join leave receivers 
experiment design due high overhead incurred ns packet level simulation limit simulation time seconds 
experiments senders active second remain active 
experiments receivers join groups seconds remain active simulation ends 
remove transient experiments report results seconds simulations receivers joined groups 
third experiment receivers join leave dynamically 
simulation time short set refresh period join message sec 
correspondingly set timeouts sec 
senders assumed send constant bit rate traffic byte packets ms performance metrics average redundancy ar maximum redundancy 
ar defined interval assume hosts subnet reunite multicast 
reunite ip multicast simultaneously assume block class ip addresses exclusively allocated reunite 
senders groups link link link 
receivers host router average redundancy ratio ar link link link multicast forwarding table mft size experiment involving groups receivers subscribing group 
average redundancy ar links versus number entries mft 
ar pt pu pt total number multicast packets pu total number unique multicast packets sent interval 
example ar link depicted link traversed copies packet sent sent 
defined maximum number copies packet including original traverse link 
link 
note ar greater equal 
ideally want equal link traversed copy packet 
load balancing graceful degradation experiment illustrate behavior algorithm routers large accommodate entire multicast forwarding state 
clarity simple topology shown 
receivers groups receivers subscribing group 
ideally packets group replicated node 
require mci backbone topology 
groups receivers randomly placed 
entries mft group 
mft entries receivers join routers stream increase network load 
example assume router store group entries 
store group entries store remaining 
consider group stored mft easy see links traversed copies packet group receivers 
plots average redundancy ar links versus number entries mft 
expected ar decreases mft size increases 
mft size ar receiver able join group node 
points worth noting 
router space mft protocol continues operate 
second reduce network traffic effective routers large near receivers senders allows receivers join groups routers close proximity 
incremental deployment experiment illustrates incremental deployability reunite number reunite aware routers affects performance 
consider realistic topology mci backbone network shown 
assume senders groups receivers 
senders receivers randomly placed restriction sender receiver connected router 
vary percentage routers topology obtained www caida org october 
reunite routers ar table ar link percentage reunite aware routers varies 
reunite aware increments 
percentage value independent simulations random reunite aware router assignment 
table shows ar entire network versus percentage routers reunite aware 
expected routers reunite aware lower ar note router reunite aware receivers join directly senders protocol degenerates sender generating unicast messages receivers 
note significantly larger ar 
fact router reunite aware high 
percentage reunite aware routers increases decreases 
routers reunite aware link carries duplicate packets 
performance dynamic joins leaves reunite receiver leaving group may cause receivers re join group different nodes 
explained section may result duplicate packets sent receivers 
characterize overhead conduct experiment mci topology routers reunite aware 
senders groups receivers randomly placed 
receiver joins leaves group process active inactive periods exponentially distributed means sec sec respectively 
dynamic scenario meant stress test algorithm 
gauge overhead reunite protocol compute ar independent trials 
resulting average ar value 
reunite loses efficiency compared ideal multicast protocol uses distribution trees 
addition measured larger 
shows significant hot spots network 
related scheme proposed achieve similar state reduction non branching nodes re unite 
requires dynamically setting tunnels adjacent branching routers multicast tree 
additional layer ip header introduces bytes overhead header may result packet fragmentation 
addition support dynamic membership sophisticated complex control protocol needed dynamically set tear tunnels 
contrast reunite achieves state reduction need tunnelling 
tree maintenance protocol reunite exhibits similarities tree protocols 
new branch data delivery tree reunite constructed forward direction unicast routing receiver 
contrast protocols data delivery tree constructed reverse direction unicast routing sender 
simple express augment multicast class address unicast address core sender respectively 
eliminates address allocation problem provides support sender access control 
contrast reunite goes step eliminates class address altogether 
unicast address identify group possible provide additional features reduced forwarding state native incremental deployability load balancing graceful degradation 
mechanism provide support multiple senders similar session relay mechanism proposed express 
express solution require application level layer ip encapsulation unicasting packets sender root 
propose novel approach called reunite supports multicast service recursive unicast ip networks 
best knowledge reunite ip multicast protocol uses unicast addresses multicast forwarding group identification 
ip multicast protocols need class addresses 
recursive unicast support multicast reunite achieves unique advantages 
require non branching routers maintain group forwarding state 
addition protocol provides native support incremental deployment load balancing graceful degradation hot spots 
network unicast routers existing ip multicast solutions need tunnels 
addition existing solutions recover gracefully scenario multicast request router run multicast forwarding table entries 
complex version reunite eliminates control path state discussed appendix 
direction study implement address aggregation reunite achieve reduction forwarding state 
ballardie core trees cbt multicast routing architecture september 
rfc 
deering 
host extension ip multicasting august 
rfc 
deering cheriton 
multicast routing datagram internetworks extended lans 
acm transactions computer systems may 
estrin farinacci helmy thaler deering handley jacobson liu sharma wei 
protocol independent multicast sparse mode pim sm protocol specification jun 
rfc 
estrin farinacci jacobson liu wei sharma helmy 
protocol independent multicast dense mode pim dm protocol specification 
progress 
fenner 
internet group management protocol version nov 
rfc 
ferguson 
network ingress filtering jan 
rfc 
handley 
session directories internet multicast address allocation 
proceedings acm sigcomm vancouver bc canada september 
holbrook cheriton 
ip multicast channels express support largescale single source applications 
proceedings acm sigcomm cambridge massachusetts aug 
kumar thaler alaettinoglu estrin handley 
masc architecture inter domain multicast routing 
sigcomm vancouver bc canada september 
proceedings acm perkins 
ip mobility support october 
rfc 
perlman lee ballardie crowcroft wang diot green 
simple multicast design simple low overhead multicast 
internet draft internet engineering task force march 
progress 
tian neufeld 
forwarding state reduction sparse mode multicast communication 
proceedings infocom san francisco california mar 
ucb lbnl vint 
network simulator ns version 
www mash cs berkeley edu ns 
appendix eliminating control path state control protocol described section router needs maintain mct control plane 
purpose having mark routers branching points part multicast tree 
information control path new branching points easily created join messages 
section describe modified version control protocol called reunite ii eliminates need maintaining routers 
addition eliminates race condition joins experienced reunite see section 
discussed benefits achieved expense having protocol message types slightly complex protocol state machines original control protocol 
describe reunite ii discuss tradeoffs reunite reunite ii 
order remove need introduce new mechanism create branching points new receivers 
key idea rely forwarding path discover new receiver join tree 
outline reunite ii follows 
reunite receiver sends periodic join messages root node 
messages intercepted node maintains group state messages paths 
note reunite reunite mft 
mft 
mft mft 

mft 
join msg branch msg example illustrating join operation nodes reunite ii aware 
ii join message intercepted nodes branching points multicast tree nodes maintain group state 
node intercepts join message inserts new receiver mft node suitable branching point receiver generates new message called branch forwards tree 
purpose branch message find branching point new receiver 
ideally branching point created node path new receiver diverges path followed branch message 
illustrate procedure consider setting similar previously shown 
difference order better illustrate behavior protocol path changed 
operations reunite ii shown figures 
simplicity tree messages shown 
consider cases nodes implement reunite ii subset nodes implements protocol 
join operation nodes implement reunite ii shows main messages exchanged result joining group 
joins sending join message root 
node maintains multicast state message delivered root receiving message node creates entry new receiver receiver join group 
note maintain route interaction reunite ii join mft 
mft 
mft 
mft 
mft 
mft 
join msg branch msg forced join msg reunite aware node regular node example illustrating join operation case node implements reunite ii 
virtually identical behavior original protocol depicted 
joins sending join message 
intercepts message checks receiver mft uses output interface 
example receiver exists paths share link 
result node generates message called branch sends 
message contains field specifies group field specifies receiver wants join 
branch message arrives checks traffic uses output interface 
case branch message just forwarded node 
receiving branch message checks similarly node paths 
case concludes branching point result installs corresponding state mft 
subsequent join messages sent intercepted directly refresh entry mft 
join operation heterogeneous network previous example assumed nodes implement reunite ii node resources create new entries mft 
show protocol extended handle case subset nodes reunite ii aware nodes may refuse accept new receiver 
main difficulty branch message propagated usable reunite ii node path branching point created receiver 
consider 
assume resources create new entry group result node simply forward message creating branching point 
address problem introduce new message called forced join generated receiver arrival branch message 
addition branch message needs carry field maintains node path branching point 
consider scenario 
assume reunite ii aware 
joins previous case simply inserts receiver list receiving join message 
joins group 
receiving join message generates branch message 
carrying group receiver message carries potential branching point 
message sent 
node branch message path act branching point potential branching point field branch message updated 
message forwarded implement protocol simply forwards message 
receiving branch message immediately sends forced join message 
message contains group identifier receiver asked join 
receiving message creates mft entry receiver 
subsequent join messages intercepted refresh mft entry 
note forced join messages fact absolutely necessary 
eliminating messages increase protocol complexity tree join messages need perform additional topology discovery management functions 
discuss mechanisms 
join msg received mft exists mft stale mft dst mft rcv list mft rcv list alive set timer forward branch msg exists alive mft rcv list mft dst node overloaded insert mft rcv list send branch msg receiver group node self discard join msg branch msg receiver group node received mft exists mft rcv list discard received branch msg mft rcv list alive set timer discard received branch msg send branch msg receiver group node self forward join msg mft dst mft stale set timer tree msg stale mft stale set timer tree msg received mft exists mft dst mft dst mft stale set timer remove mft rcv list forward tree msg node overloaded mft exists mft stale mft dst remove mft rcv list mft stale set timer mft dst mft rcv list insert mft update node branch msg self forward branch msg exists alive mft rcv list mft dst insert mft rcv list mft stale mft rcv list mft rcv list alive remove mft rcv list forced join msg self receiver group received node overloaded insert mft rcv list mft exists mft stale mft dst mft exists mft dst mft dst remove mft rcv list insert mft rcv list mft stale set timer discard forced join msg detailed message processing algorithms reunite ii protocol 
insert mft insert mft rcv list details reunite ii protocol detailed message processing algorithms reunite ii 
new join message processing algorithm contains modifications eliminate mct operations add generation branch messages described previous examples 
new tree message processing algorithm similarly includes modifications remove mct related operations 
algorithms processing new branch forced join messages shown respectively 
reiterate branch message contains special fields specifying group root ip addr root port number joined specifying receiver wishes join specifying node traversed branch message branching point 
forced join message contains group joined receiver added 
shown figures branch message arrives receiver generates forced join message contains receiver wishes join group join 
sends forced join message potential branching node actions figures discussed examples shown 
action shows branch message refresh mft state created previous branch message 
action recursively send branch messages multicast tree order discover branching point nearest receiver 
action performed previous stale mft state node 
previous state replaced new information carried branch forced join message 
discussion section compare reunite reunite ii discussing advantages disadvantages 
obvious advantage reunite ii reunite eliminates need control path state 
reunite ii advantage 
discussed section reunite simultaneous joins lead race condition sub optimal multicast tree created short transient periods 
cause control path state instantaneously created reunite new receiver joins 
contrast reunite ii eliminates problem 
re unite ii simultaneous joins independently discover optimal branching points relying control path state eliminating race condition 
advantages come free reunite ii higher protocol complexity 
particular reunite ii protocol introduces additional message types branch forced join requires receiver actively involved protocol sending forced join message time receives branch message 
number control messages required reunite ii larger reunite 
receiver joins additional messages generated branch forced join 
routing asymmetric subsequent refresh join messages trigger branch messages 
figures path symmetric join messages refresh mft directly 
join messages arrive join trigger branch message 

