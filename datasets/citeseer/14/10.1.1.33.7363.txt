manipulating surfaces differentially william welch michael gleicher andrew witkin september cmu cs school computer science carnegie mellon university pittsburgh pa appear proceedings springer verlag 
want create interactive surface design systems provide intuitive interfaces parametric surface representations 
show technique differential manipulation constructing interfaces 
allows surface manipulation issues treated separately surface representation issues 
arbitrary differentiable functions representation parameters control surface 
constraint optimization techniques enhance interaction control surface degrees freedom 
provide examples technique interactive surface modeling program 
electronic mail claude cs cmu edu electronic mail gleicher cs cmu edu research sponsored part apple computer siemens silicon graphics incorporated 
second author supported part fellowship schlumberger foundation views contained document authors interpreted representing official policies expressed implied schlumberger siemens sgi apple 
keywords interaction techniques computational geometry object modeling computer aided design surface modeling interested interactive design free form surfaces 
systems able represent diversity objects designers require easy 
unfortunately need sufficiently expressive representations odds desire intuitive interaction methods 
prior addressing issue defining surface representations expressive easy control 
interpolating splines spline gr til control nets transfinite curve gor attempts specify surfaces terms parameter sets extensible degrees freedom regular way easy control straightforward geometric meaning parameter sets 
interfaces provided representations directly couple parameters user controls pervasive example control point dragging spline nets 
direct manipulation interfaces explicit degrees freedom representation user set independent controls shortcomings 
fixed representation offer parameters correspond directly range effects desired designers 
second representations achieve general expressiveness offering numerous degrees freedom specified independently creating surface 
making incremental changes surface require adjusting large numbers parameters 
third interactions qualitatively different parameters example control point positions weights knot spacings nurbs curve leave designer confused exactly shape achieved 
pursue alternative approach providing interfaces surface manipulation 
seeking representation easier control way uniformly manipulate surfaces defined parametric representation 
separate problem manipulation problem representation 
technique differential manipulation gw permits provide controls convenient user lets map operations controls changes representation parameters 
previous gw discussed technique construct direct manipulation interfaces wide variety geometric objects 
build interfaces away rich underlying representations provide controls modify degrees freedom 
particularly effective surface sculpting applications 
resulting interface retains expressivity underlying representation giving user direct control meaningful higher level shape parameters expressed functions object basic parameters 
technique suggests natural ways control potentially unintuitive degrees freedom underlying representation 
overview differential manipulation 
give geometric specification intuitive behavior objects direct manipulation system 
show behavior described terms equations motion simple mechanical system 
show implement general controls framework discuss applications surface sculpting including number examples spline surface editor 
joint linkage joint angles velocity point related jacobian position function 

differential manipulation allow user manipulate surface controls computed representation parameters 
example user control positions surface points tangents normals various points surface area curvature properties 
controls may possible compute inverse maps directly specified function value object configuration corresponding parameter settings 
general direct mapping possible nonlinear underconstrained systems equations preclude inverses 
possible compute derivatives control functions underlying parameters altered differentially 
specifying target value control user specifies moment moment controls move 
motion requests mapped small changes parameters 
iterating process object moves continuous motion response users control permitting user push pull object move desired configuration 
specifying motion outputs opposed positions require derivatives opposed inverses control functions 
differential manipulation uses numerical techniques allow users manipulate geometric objects 
section motivate techniques optimization series simple examples 
final part section show results obtained techniques mechanics 

generalized coordinates consider joint linkage 
fixed linkage configuration determined joint angles concatenate form object state vector represents generalized coordinates current configuration space possible configurations 
world space coordinates point object point constrained curve 
user specified velocity projected space allowable velocities tangent point 
expressed function consider allow user manipulate point object 
allowing user specify new position point directly requires solving nonlinear system equations 
allow user control motion point 
example moving target point user specify instantaneous velocity dot indicates time derivative function moves target 
jacobian position function matrix partial derivatives respect linearizes current solving transforms world space velocity corresponding generalized velocity 
specify velocity multiple displacement target point continually move integrated 
making target point position mouse linkage track pointer user moves connected damped spring 
user manipulate linkage regard underlying parameterization 
squares projection consider point constrained slide fixed curve 
clearly user pulls point direction tangent curve point point move direction 
user reasonable expecting point slide curve long specified velocity perpendicular curve point 
get behavior projecting velocity linearized space allowable displacements point 
example space line tangent curve point general space spanned column vectors jacobian 
instance overdetermined equations unknown projected equation solution 
squares solution solution gamma minimizes error gamma model think user joint linkage 
uniquely determine additional velocities specified 
specified velocities suggestions hard constraints 
system moves minimize error requested actual velocities 

underdetermined motions consider joint linkage 
user specified velocity leads underdetermined system equations unknowns 
way resolve define reasonable behavior objects sufficiently constrains problem 
note user specified velocities simultaneously generalize equation system overdetermined unique squares solution 
generalization straightforward concatenate world space points vector call configuration vector analog state vector 
user specified velocities similarly concatenated form contain row point configuration vector system equations independent rows components matrix positive definite unique squares solution 
generalization able sufficiently constrain problem making crucial assumption addition explicitly specifying velocities points user implicitly specified zero velocities remaining points points move user pulling 
reasonable behavior model guarantees sufficiently populated unique squares solution set user specified velocities interpreted nonzero velocity specified point coupled zero velocity point underlying parameterization solution minimizes distance zero velocity point moves 

generalized configuration vectors previous example collection world space points 
worth emphasizing components differentiable functions example arises context manipulating curve 
consider parametric curve shape determined parameter vector manipulate curve differentially configuration vector uniquely determine corresponding value course construct sampling points curve 
movement sample points minimized curve changed response velocity signals user sufficient number sample points turn minimize magnitude world space change entire curve 
consider limit sampling process cds squares projection specifying zero velocity value integral result minimizing magnitude corresponding change curve world space configuration deltaq gamma ds differential change dq derivative linearizes expression yielding dq gamma ds dq ds dq ds dq dq represents integral curve parameter symmetric matrix 
displacements minimize magnitude change curve minimize gradient function current value want yields dim independent equations may take row jacobian generalized configuration vector zero velocity specified 
actual components configuration vector solutions differential equations note solve interested generating necessary independent rows jacobian 
minimizing velocities results minimizing world space change entire curve 
simple example technique consider parametric curve represented linear blend set control points state vector see independent shape projections just sg basis function local support spline sparse dominated diagonal entries may reasonably approximated diagonal scaling matrix reflecting independence underlying control points 
leads result control points linearly blended curve may pressed service components generalized configuration vector 
come surprise original spline representation created intention control points direct manipulation parameters 
control points configuration vector leads turn simple formula directly manipulating linear blend curve 
user pulling single point curve fi fi fi fi fi fi fi fi fi fi ff 
ff fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi fi 
fi fi fi fi fi fi fi fi fi fi sufficiently large ff matrix essentially identity scaled ff choose disregard terms controlled point accounted integration curve 
terms merely provide additional weighting point 
ff equation constant may directly solve total change simply multiple squares weighting deltaq displaces world space point deltax deltaq deltax kn shows spline curve manipulated way 
resulting displacements minimize magnitude change curve placing controlled point desired position 

order equations motion previous techniques lead animated models respond user interaction uniform intuitive ways accidental 
equations motion arising purely geometric specification correspond exactly physical simulation mechanical system 
basic equation motion mechanical system mp kp vector particles system corresponding vector applied forces 
mass damping matrices linear maps accelerations velocities forces 
stiffness matrix relates current configuration amount potential energy system 
dynamic behavior specified previous section corresponds physical situation drag dominates inertia particle moves force applied pulling point spline curve 
dashed lines connect spline control points 
displacements point curve mapped corresponding displacements control points 

particles correspond components configuration image applied forces user supplied velocity signals 
assume potential energy system coupled components identity equation motion reduced view parameters alternate coordinate representation configuration particles standard change coordinates mechanics yields gammaj jacobian map simply equation physical interpretation 
valuable correspondence motivates techniques mechanics constructing intuitive user interfaces 

manipulating surfaces consider differential manipulation applies interactive surface modeling 
particular show technique addresses problems mentioned earlier fixed parameterization unintuitive parameter interactions specifying independent degrees freedom 
previous section showed differentially control functions state vector 
look control functions useful free form surface design 
controls formulated independently particular surface representation 
concreteness give examples controls spline surface editor 

control functions differential manipulation hides underlying representation model letting operate control functions state vector 
control may simple geometric interpretation corresponding effect state vector reflect complexity mapping state space world space quantities 
example surface modeler allow user control position point surface point control point generalizing curve manipulation results section 
similarly allow user pull directly surface tangents normals 
interface attach control rod represents second parametric derivative surface specified point user pull rod 
changing rod direction changes tangent plane control point stretching rod increases curvature surface point 
interestingly ask designers want control write functions 
control scheme requires dynamic creation evaluation control functions derivatives gw 
note local support property splines functions generally depend subset components resulting jacobians sparse vectors 
model degrees freedom run interactive speeds crucial implementation take advantage sparsity 

hierarchical parameterizations common structure surface design parameters hierarchically 
example embed surface deformation bar apply rigid body transformation resulting deformed points 
appealing design strategy parameters level may treated independent sets controls defined scopes effect 
certainly independent terms parameters effect world space location particular surface point 
placing surface point particular world space position manipulating deformation parameters rarely straightforward structure 
traditional direct manipulation surface embedded hierarchy possible compute deformation inverse 
deformation hierarchy simply composition functions chain rule lets formulate differential controls map forces level composition apply world space state space intermediate spaces hierarchy 
parameters specified level hierarchy isolated manipulation simply freezing parameters associated levels 
world space forces transmitted active level 
levels may active damping matrix providing way applied force 
user manipulate kind parameter level hierarchy way applying forces directly world space surface 
example modeling system specify rigid body rotation grabbing object pulling desired orientation surface degrees freedom frozen operation 
interface markedly different commonly encountered rotation controls cms easy quick non precision positioning object 

constraints manipulation useful modeling system control function value 
instance modeler generate forces hold function fixed value manipulation enforces constraint relationship underlying parameters reduces number degrees freedom model 
may constrain arbitrary functions modeler state explicit degrees freedom underlying representation indirect effect kinds constraints effectively enforce 
number ways differentially enforce constraint 
penalty methods springs pull output functions desired values pla simple implement lead stiff differential equations 
turn requires smaller integrator steps taken degrading interactivity system 
alternatively formulate set constrained differential equations restrict allowable motions model 
try solve constrained equations variation lagrange multiplier technique convert unconstrained equations computing forces constraint projecting portion applied force violate constraints bau application technique interactive systems discussed gw 
useful modeling constraints highly nonlinear functions state maintain differentially need solve linear systems equations timestep compute needed constraint forces 
experimented number different constraints system 
simplest fixed material point fixed point space 
constraint function gamma holding components system forces points remain coincident figures 
constraint connects surface points formulated similarly 
case spline surface representation linear constraint constant jacobian inexpensive maintain 
nail surface point material coordinates allowed vary coordinates part state vector get nonlinear sliding point contact constraint 
surface freely slides point world space maintaining contact 
may constrain surface normal lie particular direction 
may conjunction connection constraint force surfaces lie tangent point 
second parametric derivative unit normal constraint linear control points 
scheme drawbacks regions low curvature arising dependence underlying parameterization 
note world space nail point need fixed 
time derivative point may included constraint formulation cause material point object track nail moves location ww 
scheme spline surface point constraints 
manipulating constrained spline surface 
user interface assembling parts model constraints 
resulting motion brings model configuration satisfy connection constraint parts preserving existing constraints 
simply relied constraint stabilizing forces pull model satisfying configuration forces tend momentarily disrupt constraints worse cause integration diverge 

optimization manipulation having system constrain function output particular value generate forces tend drive function optimize constrain control quantity 
possible formulate control functions involve surface degrees freedom nontrivial surface features expressed 
able optimize local global surface attributes subject user supplied forces constraints 
example consider simplified energy deformation cg create fair seeking patches interactive surface design 
integrals second parametric derivatives taken linearized approximations metric curvature tensors surface patch 
minimizing local surface metric causes surface behave soap film contracting world space minimal area achieved balanced constraints forces surface 
minimizing local curvature patch effect distributing curvature evenly patch causing seek fairer shape 
user point view forces model terms higherlevel surface characteristic fairness 
possibilities optimization forces include shape attractors discussed twk 
optimizing function outputs modeler continuously adjusts numerous surface parameters nontrivial ways response simple manipulation user 

controls representations differential manipulation manipulation techniques different surface modeling representations 
build systems integrate tensor product surfaces free form deformations sp parameterized transforms 
differential manipulation allows different types controls surface type 
easily define new types controls provide ones designers want provide tools allow users define 
differential manipulation allows address difficult issues surface design modeling programs 
define controls independently representation parameters problem representation parameters unintuitive hard control 
large number parameters required expressive surface representations easier manage controls operate groups parameters constraint optimization techniques 
bar barr 
global local deformations solid primitives 
computer graphics july 
proceedings siggraph 
bau 
stabilization constraints integrals motion dynamical systems 
computer methods applied mechanics 
cg george dave gossard 
deformable curve surface finite elements free form shape design 
computer graphics july 
proceedings siggraph 
cms michael chen joy abigail sellen 
study interactive rotation input devices 
computer graphics august 
proceedings siggraph 
gor gordon 
spline blended surface interpolation curve networks 
journal math mechanics 
gr gordon 
spline curves surfaces 
editors computer aided geometric design 
academic press 
gw michael gleicher andrew witkin 
differential manipulation 
appear graphics interface june 
gw michael gleicher andrew witkin 
snap mathematics 
edwin blake peter editors advances object oriented graphics proceedings eurographics workshop object oriented graphics 
springer verlag 
appears cmu school computer science technical report cmu cs 
pla john platt 
constraint methods neural networks computer graphics 
phd thesis california institute technology 
sp thomas sederberg scott parry 
free form deformation solid geometric models 
computer graphics august 
proceedings siggraph 
til 
rational splines curve surface representation 
ieee computer graphics applications 
twk demetri terzopoulos andrew witkin michael kass 
symmetry seeking models object reconstruction 
international journal computer vision 
andrew witkin kurt fleischer alan barr 
energy constraints parameterized models 
computer graphics july 
proceedings siggraph 
michael gleicher william welch 
interactive dynamics 
computer graphics march 
proceedings symposium interactive graphics 
ww andrew witkin william welch 
fast animation control non rigid structures 
computer graphics august 
proceedings siggraph 

