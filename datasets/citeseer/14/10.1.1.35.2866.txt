kdd workshop web usage analysis user profiling appear non invasive learning approach building web user profiles philip chan pkc cs fit edu computer science florida institute technology melbourne fl researchers started web browsers adaptive personalized 
personalized web browser caters user interests adaptive learns users potentially changing access behavior 
goal help user navigate web 
lieberman letizia monitors user browsing behavior develops user profile searches potentially interesting pages recommendations 
user profile developed intervention user details performed clear 
user reading page letizia searches breadth manner location pages interest user 
pazzani syskill webert asks user rank pages specific topic :10.1.1.40.4469
content ratings pages system learns user profile predicts pages interest user 
investigated number topics different user profile learned topic 
pages recommended preselected web sites 
similar syskill webert balabanovic fab requires user rank pages learns user profile rankings content pages :10.1.1.52.4135
fab considers recommendations profiles users system fab identify users similar interests 
fab collection agent performs line best search web interesting pages 
approach adaptive personalized web browser require user explicitly provide information browser 
monitors user access behavior captures interests user profile 
developed metric estimating interestingness visited page 
user profile consists components web access graph wag page interest estimator pie 
web access graph summarizes web page access patterns user 
content web pages page interest estimator learned user access behavior characterizes interests user 
provide line search search engine consults multiple existing search engines returned records ranks user profile 
similar search techniques recommendation prefetching interesting pages performed line night 
extended focus pie section investigate user interest page approximated asking user section phrases identified enrich common bag words representation documents section 
discuss preliminary empirical results data web site section 
conclude section remarks challenging issues pie learning exhibits 
page interest estimator pie identify patterns pages constitute user interest 
example certain words phases interest user 
set labeled interesting interesting pages apply learning algorithms example induce classifiers predict page interest user 
classifiers called page interest estimators pie 
concretely interest user page pie learned user page interest addition pie learned stored individual users sites privacy maintained 
related area usually requires user involvement providing ranking example :10.1.1.40.4469
discuss section section user interest visited page approximated user involvement 
page represented machine learning algorithms applied 
discuss page representation section 
user interest page find user interested page 
way ask user directly 
common approach invasive cases requires user provide ad hoc ranking score bad 
furthermore user may provide inconsistent rankings pages process time consuming 
way monitor user behavior evaluate user interest 
approach non invasive user subject ad hoc ranking 
course web browsing user leaves trail information model interests 
general sources information available history bookmarks content pages access logs 
web browser usually maintains history user requests current session past 
history current session allows user go back forth pages visited 
addition global history maintains timestamp time page visited allows links expire specified amount time displayed visited 
netscape navigator title url visit timestamp visit timestamp expiration timestamp visit count visited url stored global history 
conjecture higher frequency visits url indicate stronger user interest url 
bookmarks serve quick access point interesting url chosen user 
mouse clicks user easily jump url bookmarks 
natural assume pages bookmarked strong interest user 
page usually contains links pages 
page interesting user visit links referenced page lieberman similar observation 
higher percentage links visited page indicates stronger user interest page 
particularly important index pages contain lot related links users spend time pages real content 
entry access log corresponds request typically contains client ip address timestamp access method url protocol status file size 
sample entry cs fit edu jun get toc html entries time spent page calculated 
longer user spent page user interested page 
page interesting user usually jumps page quickly 
experimental studies confirm observation 
quick jump caused short length page user interest appropriately approximated time spent page normalized page length 
note activities surfing web answering phone call inadvertently included time spent page 
avoid problem complicated way obtaining time statistics 
reduce problem impose upper limit time minutes spent page time intervals upper limit considered separate sessions 
unfortunately browsers usually history access log essentially detailed history history sufficient traversing pages session maintaining timestamps link expiration 
access logs usually servers 
order maintain access log browser client modify source code browser 
requires changes complex piece software browser dependent 
simpler approach web proxy server logs requests 
proxy serves relay browser client web usually security clients firewalls performance system wide caching external pages filtering blocking undesirable sites 
sources information devise measure approximating interest page user 
simple measure interest age page page frequency page visited user 
consider number visits primary indicator interest 
sophisticated measure uses page base incorporates factors discussed interest age page theta page duration page recency page age page ae page bookmark duration page page size page page size page recency page time isit gamma time time gamma time age age page maximum value interest age page theta 
frequency visits measure value factor equally 
weighted scheme appropriate perform experiments validate model 
visited pages considered interesting various degrees user accessed 
find pages interesting user 
easier user required rank pages user actively involved case 
furthermore assume page visited web interest user know existence mention staggering number pages web 
pages usually contain links pages cases followed user approach identifying pages interesting user consider links visited pages followed user 
related text categorization documents mapped categories learned models 
usually documents grouped categories documents known advance 
task group pages categories interesting interesting assume pages web known advance 
page representation various representations web page widely studied 
researchers vector space model pioneered salton 
model document represented vector weights corresponds feature word cases 
word ordering information document usually retained name bag words 
research focuses single words unigrams features 
partly due large combination possible multi word phrases 
reason earlier results syntactic statistical phrases mixed 
suspect ad hoc way constructing statistical phrases problem 
statistical building multi word features focuses occurrence words appear frequently probably phrases 
occurrence metric mutual information 
consider words window size mutual information mi log measures reduction uncertainty knowing presence window presence known vice versa metric symmetric 
metric consider effect absence words window 
note words appear phrase situations 
expected average mutual information information gain captures effects word 
emi log measures expected mutual information combinations presence absence larger mi mi provide evidence ab phrase larger mi mi supply counter evidence 
introduce augmented expected mutual information aemi appropriately incorporates counter evidence aemi log gamma log essence supporting evidence summed damaging evidence subtracted 
furthermore define event word event words window size word 
higher value aemi indicates followed absent 
window size allows flexibility number gaps words phrase 
aemi threshold find highly probable word phrases bigrams training corpus 
word phrases grams method event gamma words event word window size words 
memory requirement storing necessary statistics find grams number unique words corpus prohibitive locating trigrams 
consider relatively small number counter takes byte gigabytes needed find trigrams 
reduce combinatorial explosion safely consider small number bigrams high aemi values event scheme memory efficient requires second pass corpus incurs disk time aemi values calculated pass 
scheme requires gamma passes identifying grams 
propose approximate approach finding grams requiring lot storage multiple passes disk resident corpus 
bigram aemi threshold directed edge inserted graph vertices words 
trigram abc identified edges exist 
similarly abcd located addition edges trigram abc edges exist 
scheme needs storage counters plus graph sparse requires storage single pass corpus 
formally gram defined ngram wn ae edge ngram wn gamma gamma edge wn edge ae true aemi false window size plays role method building grams 
scheme allows larger gaps shorter phrases smaller gaps longer phrases 
notion stems observation shorter phrases additional intervening words longer phrases usually 
instance set building grams upto trigrams allow additional word words bigrams trigrams 
preliminary experiments experiments conducted data obtained departmental web server 
analyzing server access log january april identified hosts accessed times months second months 
data months training months testing 
filtered proxy crawler computer lab hosts identified single user hosts rooms local 
text web document html txt extracted words applied list remove common articles prepositions verbs stemmed words porter stemming algorithm 
bigrams trigrams identified scheme described section 
table accuracy performance pie learned algorithms fifteen users train test words phrases words user size size cart bayes ripper cart bayes ripper avg 
threshold window size words bigram trigram adjacent text 
boolean features presence absence words phrases selected expected mutual information equation ties broken preference features higher document frequency interesting documents features longer phrases 
accessed pages considered interesting user pages accessed interesting 
simplicity randomly picked pages included training testing 
number pages accessed pages class ratio training test sets 
ran cart naive bayes ripper data set 
table groups columns right results features words phrases features words 
groups comparing utility adding phrases feature sets groups selected features training testing 
algorithms paired test confidence difference accuracy significant adding phrases led higher accuracy cart bayes ripper lower accuracy 
user phrases improved performance cart ripper 
provides empirical evidence phrases improve accuracy performance learned pie 
algorithms ripper achieved significantly higher accuracy group second group paired test confidence bayes consistently accurate algorithms 
top performer word features 
average bayes significantly higher default accuracy obtained 
point success approach largely depends user behavior pattern 
instance user smallest training sets largest test set algorithms achieved highest accuracy user 
inspection generated trees rules reveals user consistent pages contain word java 
concluding remarks discussed non invasive approach estimating user interest web page time space efficient method locating multi word phrases enrich common bag words representation text documents 
page interest estimators learned build web user profiles 
reported preliminary empirical results approach indicate predict average accuracy significantly higher default page visited user 
including phrases features improve predictive accuracy 
machine learning tasks including text categorization assume features known hand applicable training test sets 
pie learning words documents change time user preferences 
monolithic classifier regressor fixed set features able adapt changes 
plan investigate multi classifier approach different feature set classifier learned particular time period 
ensemble combined meta learning 
identifying phrases feature construction techniques enrich bag words representation 
instance lexical knowledge wordnet group words semantically synonym sets 
pay attention words html tags title 
experiments page visited multiple times record training test sets 
domain weighting pages proportional number visits training effort emphasize relevant features repeatedly visited pages enhance performance 
apte damerau weiss 
language independent automated learning text categorization models 
proc 
acm sigir pages 
balabanovic :10.1.1.52.4135
adaptive web page recommendation service 
proc 
st intl 
conf 
autonomous agents pages 
breiman friedman olshen stone 
classification regression trees 
wadsworth belmont ca 
chan stolfo 
comparative evaluation voting meta learning partitioned data 
proc 
twelfth intl 
conf 
machine learning pages 
chen sycara 
webmate personal agent browsing searching 
proc 
nd intl 
conf 
autonomous agents pages 
cohen 
fast effective rule induction 
proc 
th intl 
conf 
machine learning pages 
croft turtle lewis 
phrases structure queries information retrieval 
proc 
sigir pages 
duda hart 
pattern classification scene analysis 
wiley new york ny 
fagan 
experiments automatic phrase indexing document retrieval 
phd thesis linguistics cornell univ ithaca ny 
frakes baeza yates editors 
information retrieval data structures algorithms 
prentice hall englewood cliffs nj 
konstan miller maltz herlocker gordon riedl 
grouplens applying collaborative filtering usenet news 
comm 
acm 
lewis schapire callan papka 
training algorithms linear text classifiers 
proc 
acm sigir pages 
lieberman 
letizia agent web browsing 
proc 
ijcai 
miller 
wordnet lexical database english 
comm 
acm 
morita 
information filtering user behavior analysis best match text retrieval 
proc 
sigir pages 
netscape 
netscape mozilla 
www mozilla org 
netscape 
netscape navigator 
www netscape org 
pazzani billsus 
learning revising user profiles identification interesting web sites 
machine learning 
pazzani muramatsu billsus 
syskill webert identifying interesting web sites 
proc 
aaai 
porter 
algorithm suffix stripping 
program 
quinlan 
programs machine learning 
morgan kaufmann san mateo ca 
van rijsbergen 
information retrieval 
butterworths london 
rosenfeld 
maximum entropy approach adaptive statistical language modeling 
computer speech language 
salton 
automatic text processing 
addison wesley reading ma 
selberg etzioni 
multi service search comparison metacrawler 
proc 
www 
selberg etzioni 
metacrawler architecture resource web 
ieee expert 
squid 
squid internet object cache 
squid nlanr net squid 
yang 
evaluation statistical approaches text categorization 
technical report cmu cs cmu pittsburgh pa 
yang pedersen 
comparative study feature selection text categorization 
proc 
intl 
conf 
machine learning 
