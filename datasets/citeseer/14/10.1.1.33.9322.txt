linkage identification non monotonicity detection overlapping functions david goldberg illigal report january illinois genetic algorithms laboratory university illinois urbana champaign transportation building mathews avenue urbana il office fax linkage identification non monotonicity detection overlapping functions graduate school engineering university north west kita ku sapporo japan 
mail main eng ac jp david goldberg illinois genetic algorithms laboratory university illinois urbana champaign south mathews avenue urbana il usa 
mail deg uiuc edu presents linkage identification non monotonicity detection limd procedure extension overlapping functions introducing tightness detection td procedure 
limd identifies linkage groups directly performing order simultaneous perturbations pair loci detect monotonicity non monotonicity fitness changes 
limd identify linkage groups order applied strings 
td procedure calculates tightness linkage pair loci linkage groups obtained limd 
removing loci weak tightness linkage groups correct linkage groups obtained overlapping functions considered difficult linkage identification procedures 
power genetic search lies processing building blocks bbs essential subcomponents solutions crossover selection 
goldberg deb thierens thierens thierens goldberg shown effective bb mixing absolutely essential 
effective mixing set loci belongs bb need tightly linked crossover avoid disruptions 
tightness loci referred linkage set loci tightly linked called linkage set linkage group 
genetics linkage tendency different genes passed generation winter hickey fletcher 
definition indicates genes submitted evolutionary computation journal extended version entitled identifying linkage groups nonlinearity non monotonicity detection submitted genetic evolutionary computation conference gecco 
mapped closely chromosome 
ga literature indication useful want detect linkage groups encoded strings completely trivial want detect linkage groups underlying structure problem dependent encoding system employed 
correct linkage groups identified easy gas mix bbs effectively disrupting 
identify linkage groups algorithms proposed 
classified roughly categories 
direct detection bias probability distribution 
direct detection fitness changes perturbations 
indirect detection genetic search bbs category algorithms estimation distribution algorithm eda muhlenbein paa univariate marginal distribution algorithm umda muhlenbein factorized distribution algorithm fda muhlenbein mahnig bivariate marginal distribution algorithm pelikan muhlenbein optimization algorithm boa pelikan cant paz goldberg proposed identify linkage groups detecting bias probability distributions selections 
second category gene expression messy ga kargupta calculates change fitness values locus string performing perturbations detect loci may involve local optima 
collect loci strings population algorithm identify possible bbs problem 
revised kargupta kargupta goldberg wang introduces order simultaneous perturbation method detect linkage addition order perturbation detect local optima 
order perturbations detect invariance change position perturbation considered detect linearity included linkage set 
bandyopadhyay kargupta wang employ previous approach detect linkage 
consider value locus collects loci involve local optima caused perturbations direction linkage group 
simply locus considered member loci involves local optimum necessary member global optimum 
checking value locus perturbation different strings contexts algorithm increase reliability detecting value locus involves global optimum want detected 
third category linkage learning ga harik employs point crossover circular strings grow tight linkages bbs 
works effectively problems exponentially scaled subfunctions fails exploit linkage groups problems 
simultaneous search linkage groups bbs may cause negative feedback effect prevents obtaining correct results 
concentrate discussion second category linkage identification 
linkage identification nonlinearity check linc procedure goldberg proposed identify linkage groups directly employing bitwise perturbation technique pioneered kargupta revised kargupta 
linc opposite linc detects nonlinearity pair loci included linkage group hand revised detects invariance changes equals linearity identified linkage 
linc rely local global optimality problem considers problem decomposed smaller subproblems 
problem divided subproblems obtained linkage groups easy gas concentrate testing mixing bbs 
linc identify correct linkage groups order problems order perturbations applied strings 
addition consider ga easy nonlinearity condition allowable nonlinearity goldberg introduced relax linc condition previously detected linkage groups accurate 
propose linkage identification non monotonicity detection limd procedure detects linkage groups performing perturbations detect monotonicity nonmonotonicity pair loci string population 
discuss equality limd linc allowable nonlinearity linc 
design tightness detection td procedure overlapping functions detects meta level tightness exists linkage sets obtained limd 
limd td procedure limd td expected identify linkage groups correctly overlapping functions 
continues follows introduce linkage identification nonlinearity check linc procedure checks nonlinearity detect linkage groups 
second discuss class easy nonlinearity gas allowable nonlinearity linc 
third limd condition discuss equality limd linc 
td procedure limd 
estimate population size necessary identification consider noisy functions perform experiments non overlapping overlapping test functions validate ability detect linkage groups 
nonlinearity check linkage identification nonlinearity check linc procedure goldberg identifies linkage groups detecting nonlinearity caused perturbations 
arbitrary nonlinearity detected perturbations pair loci string population included linkage group 
assumption nonlinearity existent loci form bb separable lower order bbs 
consider string delta delta delta define changes fitness values bit wise perturbations follows deltaf gamma deltaf gamma deltaf ij gamma gamma gamma binary strings 
deltaf ij deltaf deltaf changes fitness values perturbations additive indicates linear interaction 
deltaf ij deltaf deltaf additive means nonlinearity 
checking nonlinearity string may exist linearity inside bb contexts example trap function linear deceptive attractor 
strings properly sized population checked 
linearity detected string pair loci safe unlinked 
store linkage groups assign linkage set list loci tightly linked locus 
assign linkage set string linkage set linc stores linkage information strings population 
obtain linkage sets procedure performed pair loci string population 

deltaf ij deltaf deltaf surely members linkage set add linkage set locus add linkage set locus 
deltaf ij deltaf deltaf may member linkage set linked linearity exists current context 
case 
introduce value ffl specifies amount error allowed linearity nonlinearity detection replace conditions deltaf ij gamma deltaf deltaf ffl deltaf ij gamma deltaf deltaf ffl 
problem completely decomposable nonoverlapping subproblems noise set value ffl zero 
fitness function quasi decomposable noisy need set ffl positive value depending problem 
similar condition proposed definition conjugate schemata find transformation encoding reduce complexity 
definition considers local linearity nonlinearity function domain propose sampling procedures encoded strings 
allowable nonlinearity problem linearly decomposable checking arbitrary nonlinearity yield correct linkage sets 
general fitness changes perturbations pair loci need exactly additive order ga easy 
detect nonlinearity reinforcing contribution fitness changes simultaneous perturbations pair loci gas improve fitness values combining offsprings obtained perturbations 
checking nonlinearity may produce overspecified linkage sets ga mixing point view 
consequently necessary detect easy nonlinearity gas excluded linkage sets 
discuss precisely presenting allowable nonlinearity ga easy nonlinearity 
deltaf deltaf expect fitness improvements successive perturbations effect successive perturbations fitness value additive words deltaf ij deltaf deltaf decomposable ga improve fitness values combining perturbations loci 
additive property ga improve fitness value 
happens condition satisfied deltaf ij deltaf deltaf ij deltaf define deltaf deltaf ij deltaf ij condition identical ij ij means successive perturbations cause monotone increases fitness values ij ij 
problems satisfies condition ga easy loci positive changes deltaf deltaf increase number strings selection combination changes improve fitness values 
need include linkage set 
case negative changes deltaf deltaf identical positive case consider possible contexts 
noted need check condition satisfied possible substrings relax condition may cause problem nonlinearity detection linkage set detected nonlinearity check 
order remove pair linkage set relation needs satisfied contexts satisfy deltaf deltaf 
discuss population sizing section 
non monotonicity detection checking nonlinearity linc procedure linkage identification non monotonicity detection limd procedure propose checks violation monotonicity conditions detect linkage groups 
procedure adds pair loci linkage set condition satisfied string population 
delta deltaf deltaf ij deltaf deltaf ij deltaf delta deltaf deltaf ij deltaf deltaf ij deltaf equation deltaf deltaf ij appeared linc conditions 
define ij previous discussion linc rewrite conditions follows ij ij ij ij indicate monotone increases ij ij decreases ij ij fitness values series perturbations loci pseudo code limd procedure 
procedure applied population randomly initialized binary strings omit initialization strings code trivial checked conditions pair loci 
monotonicity condition negative case deltaf deltaf essentially positive case consider possible strings reduce number strings necessary detect linkage check negative case 
procedure string perturbation position applied calculate df deltaf 
second perturbation position applied calculate df deltaf perturbation position applied calculate df deltaf ij 
third employing calculated fitness differences perturbations algorithm checks limd condition satisfied 
violation monotonicity condition detected pair loci included linkage sets locus included linkage set locus included linkage set 
equality linc limd section discuss equality conditions limd linc allowable nonlinearity 
prove condition monotonicity detection linc allowable nonlinearity linc 
list linc linc limd conditions follows 
conditions pair loci included linkage sets 
linc deltaf ij deltaf deltaf linc deltaf ij deltaf deltaf deltaf ij deltaf deltaf deltaf ij deltaf ij deltaf ij deltaf deltaf ij deltaf limd delta ij deltaf ij deltaf ij deltaf deltaf ij deltaf conditions deltaf amount change fitness value perturbation string locus deltaf perturbation locus deltaf ij simultaneous perturbations loci simplicity define predicates ffl ij deltaf ij deltaf deltaf ffl ij deltaf deltaf ffl ij deltaf ij deltaf deltaf ij deltaf rewrite conditions follows linc ij linc ij ij ij ij limd ij ij replace ab conditions 
linc ij linc ij ij ij ij limd ij ij consider relations ij ij ij 
predicate ij ij ij true deltaf ij deltaf deltaf deltaf deltaf directly deltaf ij deltaf deltaf deltaf deltaf ij deltaf deltaf deltaf 
rewriting condition know ij ij ij true 
calculating negation condition know ij ij ij false 
rewrite limd conditions ij ij ij ij know condition linc condition false 
result means linc condition limd condition identical consider possible strings population practically population size 
result limd condition ability linc identifying linkage simpler conditions require smaller number calculations 
tightness detection overlapping functions considered difficult linkage identification procedures may mislead obtain overspecified linkage groups 
section propose extension limd order identify correct linkage groups overlapping functions 
detect overspecification obtained linkage sets introduce tightness linkage pair loci 
limd procedure linkage set linkage set 
mean existent simultaneously linkage sets linkage set 
loci tightly linked expected exist simultaneously linkage sets 
tightness detection td procedure propose calculates tightness pair loci calculating tightness number linkage sets includes number linkage sets includes equation calculates ratio simultaneous occurrence loci obtained linkage sets 
definition tightness 
modify overspecified linkage sets remove loci linkage set condition satisfied tightness ffi ffi 
show tightness detection td procedure 
procedure calculates pair loci scanning linkage sets obtained limd 
omit initialization zero trivial 
denote limd procedure td limd td performs td procedure limd 
population sizing number strings required obtain correct linkage sets easily calculated way population sizing 
order problems kargupta limits problem difficulty order exists instance order schemata shows nonlinearity linc non monotonicity limd 
worst case string shows nonlinearity non monotonicity need check strings order problems encoded binary strings 
precisely considering worst case order schema causes nonlinearity non monotonicity probability string schemata population strings gamma gamma fix success probability solving log gamma log gamma gamma log gamma set gamma gammak failure may occur combinations order schemata gamma log gamma hand best case need check string detect linkage group 
happens entire strings cause non monotonicity inside linkage 
number locus pairs string length 
computational cost linc limd procedures needs function evaluations 
computational cost td procedure apparently algorithm performs triple loops 
noise evaluating fitness values need perform sampling accurate estimation fitness 
consider fitness function gaussian noise defined follows ffi ffi oe modify limd procedures robust noise replace fitness evaluation averaging function 
estimate effects limd conditions considers positive case condition negative case essentially define amount violation condition follows deltaf gamma deltaf ij deltaf gamma deltaf ij detect linkage 
fitness function yields noise failures may occur 
overspecification small negative value positive noise exceeds causes overspecified linkage limd detects violation monotonicity condition considered linkage violation 
underspecification small positive value negative noise exceeds causes underspecified linkage 
error ffi oe violation conditions case occur ffi gamma occur gammaffi gamma signal difference nearest values origin positive negative region 
obtain correct result need satisfy coe min gamma scaling factor level confidence 
consider case noisy fitness functions results amount change fitness perturbations delta deltaf ffi gamma ffi delta deltaf ffi gamma ffi delta ij deltaf ij ffi gamma ffi ffi independent gaussian noise follows oe 
amount violations noisy fitness follows ffi gamma ffi gamma ffi gamma ffi ffi gamma ffi gamma ffi gamma ffi consequently results oe oe mean noise distribution canceled exists times variance noise 
results means error follows oe limd procedure 
reduce error averaging fitness values 
calculate average fitness evaluations string reduce error oe 
oe oe need satisfy condition perform reliable detection linkage set oe min gamma scaling factor 
solving equation result number sampling 
oe min gamma equation total number function evaluation needed correct linkage gamma log gamma oe min gamma number function evaluations proportional variance noise inversely proportional square minimum difference border condition 
note estimation conservative consider worst case 
empirical results perform experiments non overlapping overlapping test functions 
non overlapping functions check effectiveness limd sum ga difficult subfunctions nonlinear function sum 
show equality limd linc empirically check validity population sizing noisy fitness functions 
overlapping functions apply limd limd td sum ga difficult subfunctions parity overlapping factors 
show limd produces overspecified linkage groups limd td procedure necessary obtain correct results 
non overlapping functions non overlapping test function employ sum order trap functions string length defined follows gamma number ones unitation bit substring shows output limd procedure employ strings 
ls set linkage group th locus 
test function linkage loci bit subfunctions result shows obtain correct linkage groups 
population size 
perform linkage identification limd linc populations plot result ratio linkage sets correctly identified 
apparently difference small amount noise caused random initializations 
equation number strings needed success probability linkage identification gamma log gamma gamma log gamma 
algorithms achieves success strings worst case estimation 
reason results apparently better estimation equation conservative assumes schemata shows nonlinearity non monotonicity 
perform experiments nonlinear function sum order trap functions string length defined follows equation 
function linc limd generate results 
employ linc allowable nonlinearity overspecified linkage groups consisting loci obtained due nonlinearity function 
employing limd procedure considers ga easy nonlinearity excluded linkage sets obtain correct linkage sets nonlinear function 
estimation equation obtained directly statistical theory important verify validity empirically 
experiment employ sum trap functions gaussian noise defined follows oe equation 
employ population strings 
observe ratio linkage groups correctly identified changing amount noise changing oe number sampling fitness values 
shows result experiment 
axis number samples string axis ratio correct linkage sets 
plot result oe 
function employed gamma minimum difference pair function values 
set value achieve success rate obtain lower bound equation table 
easily see validity obtained values comparing result 
overlapping functions perform experiments overlapping functions consisting bit trap functions loosely connected parity functions 
purpose td procedure remove loose connection table samples calculated equation oe noise samples obtain tightly linked linkage groups inside bit trap functions 
experiments employ bit overlapping function follows oe psi bit overlapping function oe psi oe parity function outputs odd gamma psi minus operator modular bit function number subfunctions bit function string length 
functions adjacent bbs adjacent loci connected parity function 
value represents strength connection 
small limd td identify correct linkage groups parity affect result non monotonicity conditions 
large ignore effect overlapping parity function 
example show results bit overlapping function bit overlapping function 
experiments employ sized population strings 
apparently results indicates overspecified linkage groups obtained 
test functions obtained correct results 
overspecified ones 
range parity function gamma effect function theta 
non overlapping test functions minimum difference fitness function 
solving 

employing td procedure detect tightness pair loci linkage sets obtained limd 
results see pairs loci existent linkage set 
example locus locus appear linkage sets locus locus 
basic idea td procedure detecting tightness simultaneous existence detect tight linkages 
show tightness matrices bit bit overlapping functions calculated obtained linkage sets 
figures number assigned row column represents id locus matrix characters consisting represents matrix tightness values pairs loci 
tightness matrices figures easily identify effect parity overlapping functions connects loosely group loci belong bb 
removing loci linkage sets obtain accurate linkage sets 
results show linkage sets obtained applying td procedure bit bit overlapping functions 
applied limd td procedures population binary strings randomly initialized 
overlapping test functions employ ffi threshold equation 
apparently results obtained indicates correct linkage groups identified removing unnecessary tightness 
limd td procedure robust overlapping effects value larger generates result 
td condition considers meta level relation loci linkage sets obtained monotonicity conditions deal change fitness values directly 
discussed direct linkage identification procedures detections nonlinearity non monotonicity 
obtain accurate linkage sets proposed tightness detection procedure removes overspecified linkage loosely connected 
experiments non overlapping overlapping test functions showed limd identify correct linkage sets non overlapping functions nonlinear function limd td identify accurate linkage groups overlapping functions considered difficult linkage identification procedures 
limd needs check violation monotonicity condition strings obtain accurate results fixed success probability 
computational cost check pair loci complexity limd 
cost td dependent population size 
acknowledgments dr initiated visiting scholar illinois genetic algorithms laboratory 
professor goldberg contribution sponsored air force office scientific research air force materiel command usaf 
research funding project provided army research laboratory federal laboratory program cooperative agreement daal 
government authorized reproduce distribute reprints government purposes notwithstanding copyright notation thereon 
views contained authors interpreted necessarily representing official policies endorsements expressed implied army air force office scientific research government 
bandyopadhyay kargupta wang 

revisiting scalable evolutionary optimization linkage learning 
proceedings ieee international conference evolutionary computation 
goldberg deb thierens 

better understanding mixing genetic algorithms 
journal society instrument control engineers 
harik 

learning gene linkage efficiently solve problems bounded difficulty genetic algorithms 
unpublished doctoral dissertation university michigan ann arbor 
illigal report 
kargupta 

search polynomial complexity fast messy genetic algorithm technical report 
urbana il university illinois urbana champaign 
kargupta 

gene expression messy genetic algorithm 
proceedings ieee international conference evolutionary computation 
kargupta 

performance gene expression messy genetic algorithm real test functions 
proceedings ieee international conference evolutionary computation pp 

piscataway nj ieee service center 
kargupta 

search evolution gene expression messy genetic algorithm unclassified report la ur 
los alamos nm los alamos national laboratory 
kargupta goldberg wang 

extending class order problems gene expression messy genetic algorithm 
genetic programming proceedings second annual conference 


conjugate schema genetic search 
proceedings seventh international conference genetic algorithms 
muhlenbein 

equation response selection prediction 
evolutionary computation 
muhlenbein mahnig 

convergence theory applications factorized distribution algorithm 
published 
muhlenbein paa 

recombination genes estimation distributions binary parameters 
parallel problem solving nature ppsn iv 
goldberg 

identifying linkage nonlinearity check illigal report 
urbana il university illinois urbana champaign 
pelikan cant paz goldberg 
november 
linkage problem distribution estimation bayesian networks illigal report 
urbana il university illinois urbana champaign 
pelikan muhlenbein 

bivariate marginal distribution algorithm 
published 
thierens 

analysis design genetic algorithms 
leuven belgium katholieke universiteit leuven 
thierens goldberg 

mixing genetic algorithms 
proceedings fifth international conference genetic algorithms 
winter hickey fletcher 

instant notes genetics 
new york ny springer verlag 
procedure linkage identification non monotonicity detection population length perturb df length perturb df perturb df df df df df df df adding adding df df df df df df adding adding linkage identification non monotonicity detection limd procedure procedure tightness detection length adding length length exist exist tightness tightness tightness length entry tightness delta remove tightness detection td procedure ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls linkage sets obtained sum non overlapping bit trap functions ratio number strings limd linc ratio correct linkage groups identified linc limd ratio number samples theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta oe ratio correct linkage groups identified noisy functions ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls linkage sets obtained bit overlapping function 
limd ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls linkage sets obtained bit overlapping function 
limd oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo 
oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo ooooo oooooooooo ooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo oooooooooo tightness loci bit overlapping function 
ooooo ooooo ooooo 



ooooo 
ooooo 



ooooo 
ooooo 



ooooo 
ooooo 



ooooo 
ooooo 



ooooo 
ooooo 



ooooo 
ooooo 



ooooo 
ooooo 



ooooo ooooo ooooo tightness loci bit overlapping function 
ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls linkage sets obtained bit overlapping function 
limd td ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls ls linkage sets obtained bit overlapping function 
limd td 
