incompressibility method tao jiang ming li paul vit anyi department computer science university california riverside ca usa 
email jiang cs ucr edu computer science department university california santa barbara ca usa 
email mli cs ucsb edu cwi university amsterdam kruislaan sj amsterdam netherlands 
email cwi nl 
kolmogorov complexity modern notion randomness dealing quantity information individual objects pointwise randomness average randomness produced random source 
proposed kolmogorov quantify randomness individual objects objective absolute manner 
impossible classical probability theory 
kolmogorov complexity known variously algorithmic information algorithmic entropy kolmogorov chaitin complexity descriptional complexity shortest program length algorithmic randomness 
developed new mathematical proof technique known incompressibility method 
incompressibility method basic general technique pigeon hole argument counting method probabilistic method 
new method quite successful examples 
example concerns static problem combinatorial geometry 
gamma delta triangles vertices chosen points unit square smallest area area heilbronn triangle problem asks maximum value assumed choices points 
consider average case points chosen independently random uniform distribution exist positive large expectation close expectation value determine area smallest triangle arrangement general position 
second example concerns dynamic problem average case running time algorithms 
question nontrivial general lower bound upper bound average case complexity shellsort open years 
obtain lower bound 
second authors supported part nserc ucr startup third author supported part european union neurocolt ii working group project 
second author leave university waterloo 
incompressibility individual random objects yields simple powerful proof technique incompressibility method 
method general purpose tool prove lower bounds computational problems obtain combinatorial properties concrete objects analyze average complexity algorithm 
middle incompressibility method successfully solve known questions open long time supply new simplified proofs known results 
survey 
incompressibility method kolmogorov complexity especially suited average case analysis 
illustrate versatility form application kolmogorov complexity obtain results result world combinatorics dealing static structures result world algorithmics dealing dynamic structures 
new average case result geometric combinatorics related half century old problem determination heilbronn triangle constant second gives advance years general bounds average case complexity sorting shellsort algorithm 
press articles see 
aim survey help reader appreciate beauty incompressibility method stimulate solve reader favorite problems 
coding information approach appears quite universal 
example development kolmogorov complexity version quantum information driven hope similarly obtain lower bounds new quantum mechanical algorithms 
kolmogorov complexity give definitions establish notation 
details proofs see 
write string mean finite binary string 
finite objects encoded strings natural ways 
set strings denoted length string denoted distinguishing cardinality jaj finite set denotes natural numbers 
identify correspondence ffl ffl denotes empty word letters 
length number bits binary string example ffl 
emphasis binary sequences convenience observations alphabet encoded way theory neutral 
self delimiting codes binary string proper prefix binary string write yz ffl 
set fx prefix free pair distinct elements set proper prefix 
prefix free set called prefix code 
binary string xn special type prefix code called self delimiting code xn code self delimiting determine code word ends reading left right backing 
code define standard self delimiting code easy check log 
delta deltai standard mapping theta technical reasons chosen hx yi example hx yi xy 
kolmogorov complexity informally kolmogorov complexity algorithmic entropy string length number bits shortest binary program string compute fixed universal computer particular universal turing machine 
intuitively represents minimal amount information required generate effective process 
conditional kolmogorov complexity xjy relative defined similarly length shortest program compute furnished auxiliary input computation 
functions delta deltaj delta defined terms particular machine model machine independent additive constant acquire asymptotically universal absolute character church thesis ability universal machines simulate execute effective process 
formally definition 
standard enumeration turing machines 
choose universal turing machine expresses universality manner hhi pi yi hp yi hp yi denotes turing program input 
fix universal computer define conditional kolmogorov complexity xjy min fl hq yi xg example hi pi auxiliary input unconditional kolmogorov complexity defined 
convenience write hx yi xjy zi 
incompressibility turing machine say computes identity function follows fixed log easy see strings described programs shorter 
instance function defined follows log denotes binary logarithm 
gamma grows fast stack 
clear complexity 
incompressibility 
binary strings length gamma gamma descriptions binary string format length binary string length call strings incompressible 
argument holds conditional complexity length gamma binary programs length binary string binary string length xjy randomness deficiency measures far object falls short maximum possible kolmogorov complexity 
constant ffi say string randomness deficiency ffi gamma ffi 
strings incompressible say small randomness deficiency pattern reduce description length 
intuitively think sequences random random sequence synonymously incompressible sequence 
short programs objects low complexity number strings length randomness deficiency ffi gamma gammaffi 
string length randomness deficiency half strings length randomness deficiency strings length randomness deficiency gamma ffi th part strings length randomness deficiency ffi 
general lemma 
ffi positive integer 
fixed finite set contains gamma gammaffi jaj elements xja blog gamma ffi 
proof 
gamma gamma binary strings length fortiori elements computed binary programs length implies jaj gamma elements computed binary programs length substituting blog gamma ffi definition yields lemma 
lemma 
set element complexity xja log jaj 
proof 
lemma holds described describing bits giving index enumeration order example set fx ng 
jaj ffi fixed lemma demonstrates trivial estimate quite sharp 
explicit table simply enumerate elements say lexicographical order fixed program depending possible give rigorous formalization intuitive notion random sequence sequence passes effective tests randomness see example 
fixed program bits 
complexity xja log jaj 
incompressibility method typical proof incompressibility method chooses incompressible object class discussion 
argument invariably says desired property hold contrast assumption object compressed 
yields required contradiction 
applying incompressibility method uses fact absolutely relative fixed string incompressible strings length strings nearly incompressible standard 
objects incompressible desired property usually holds objects average 
average case area heilbronn triangles gamma delta triangles vertices chosen points unit circle area area delta maximum assumed choices points 
heilbronn asked exact value approximation delta list selection papers dealing problem 
obviously value delta change small constant factor unit area convex shape customary consider unit square 
brief history follows 
heilbronn observed trivial upper bound delta conjectured delta erdos proved conjecture true tight delta omega 
nontrivial result due roth established upper bound delta log log improved schmidt log year roth delta 
roth simplified arguments 
exact values delta studied 
koml os szemer edi improved roth upper bound gammaffl simplified arguments roth 
really surprising news came authors derived lower bound omega log narrowly refuting heilbronn original conjecture 
believe lower bound best possible 
bertram gave algorithm finds specific set points unit square defined omega log fixed discretization problem 
barequet derived lower bounds dimensional versions heilbronn problem 
concerns worst case value minimal triangle area 
results consider expected value points chosen independently random uniform distribution exist positive large expectation area smallest triangle formed points 
webpage www com constant html devoted exclusively heilbronn triangle problem 
probability close follows directly corollaries theorems 
technique discretize problem show kolmogorov random arrangements see points unit square satisfy range area smallest triangle constants functions randomness deficiency arrangement far kolmogorov complexity arrangement falls short maximum attainable kolmogorov complexity 
arrangement rigorous way say arrangement general position typical simple describable properties distinguish arrangement 
consequence arrangement smallest triangle area outside range smaller larger kolmogorov random 
article result act mathematical guarantee certain pseudo monte carlo methods determine fair market value derivatives stock market 
geometrical modeling see 
grid pebbles analysis triangle problem consider discrete version equally spaced theta grid unit square general result continuous situation obtained limit 
call resulting axis parallel lines grid lines crossing points grid points 
place points grid points 
points referred pebbles avoid confusion grid points geometric points arising discussion 
gamma delta ways put unlabeled pebbles grid pebble put grid point 
count distinguishable arrangements regard identities placed pebbles 
clearly restriction pebbles placed grid point restriction anymore grow unboundedly 
erdos demonstrated special case theta grids prime number necessarily arrangements pebbles pebble placed grid point pebbles collinear 
area triangle arrangement 
implies triangle constant delta omega special sequence primes 
give detailed examples incompressibility method 
lemma integer ffi independent arrangement xn locations pebbles fraction gamma ffi arrangements pebbles grid satisfies xn jn log gamma ffi lemma 
holds fixed sufficiently large pebbles collinear area smallest triangle gamma 
proof 
place gamma pebbles positions chosen total grid points gamma gamma delta choices 
choose pebbles gamma pebbles gamma gamma delta choices 
choose new pebble straight line determined number grid points line identifies uniquely log bits 
fixed algorithm input decodes binary description consisting items encoded logarithm number choices computes pebbles 
implies log gamma log gamma log log gamma ffi asymptotic expression log gamma log log gamma log fixed obtains log log gamma ffi contradiction sufficiently large 
lemma 
holds fixed sufficiently large pebbles horizontal grid line 
proof 
place gamma pebbles positions chosen total grid points gamma gamma delta choices 
choose pebble gamma pebbles gamma choices 
choose new pebble horizontal grid line determined gamma choices 
fixed algorithm input reconstructs positions pebbles description choices 
implies log gamma log gamma log log gamma ffi fixed obtain log log gamma ffi contradiction large lower bound points dimensional plane euclidean metric 
abuse notation jp qj denote length line segment pq jp denote area triangle points theorem 
holds large positive area triangle formed pebbles grid ffi 
proof 
place pebbles positions chosen total grid points gamma delta choices 
choose pebbles pebbles gamma delta choices 
loss generality triangle pqr pq longest side 
center grid coordinates units gamma axes directions 
grid points parallel line segments length jp qj gamma distance jq gamma gamma line defined number grid points line segments including endpoint excluding endpoint positive integer gcd line integer coordinate points including endpoints 
implies defined lh gamma fg positive integer 
enumerating grid points concerned lexicographical order index takes log gf log log log jp gamma bits jp denotes area triangle pqr 
follows log log log jp gamma log gamma ffi fixed log jp gamma log gamma ffi 
consequently exists positive constant independently particular triangle pqr jp ffi large holds triangle pqr holds particular triangle area lemma probability concentrated set arrangements satisfying gamma ffi corollary 
points chosen independently random uniform distribution unit square area triangle formed points positive positive ffi ffi probability gamma ffi particular case ffi probability concentrated arrangements satisfying immediately implies corollary 
points chosen independently random uniform distribution unit square positive area triangle formed points expectation upper bound pair pebbles incompressible arrangement pebbles theta grid defines distinct line lemma 
area triangle formed pebbles line defines strip extending side line pebbles placed 
strategy show pebbles define lines associated forbidden strips don overlap 
consequence number choices left place remaining pebbles gets restricted point description arrangement compressed far 
theorem 
holds ffi 
gamma ffl log positive constant ffl positive area triangle formed pebbles grid ffi fixed 
proof 
choose pebbles chosen total grid points satisfied 
divide unit square horizontal grid line upper lower half contains sigma pebbles grid lines containing pebbles lemma 
write upper line line determined pebbles upper half intersects bottom horizontal grid line outermost grid points 
lemma 
positive constant upper lines 
proof 
take top half larger half area 
divide top half vertical strips equal width horizontal strips equal width starting top ignore possibly remaining horizontal strip bottom top half 
upper line determined pebble upper rectangle pebble lower rectangle middle vertical strip intersects bottom horizontal grid line 
choose rectangles 
contain pebbles 
area rectangle theta contains grid points plus minus grid points circumference length ignore 
place gamma pebbles positions chosen grid points outside rectangle gamma gammam delta choices place pebbles positions chosen total grid points rectangle gamma delta choices 
pebble positions determined position rectangle index number log gamma gammam delta gamma delta bits 
total description length description expressed bits right hand side 
calculation shows large 
holds rectangles upper half top square bottom squares middle column contain pebbles 
pair pebbles top square bottom square determine distinct upper line 
lemma proven 
delta lemma 
spacings consecutive intercepts upper lines horizontal grid line bottom half containing pebble positive gammaffl ffl statement theorem 
proof 
place gamma pebbles positions chosen total grid points gamma gamma delta choices 
choose pebbles gamma pebbles gamma gamma delta choices new pebbles upper lines theorem pebble lower half 
coordinates unknown determined locations intersections associated upper lines lower half horizontal grid line located ii unknown distances intersections associated upper lines 
grid point positions uniquely determined know distances precision gamma 
relative intersection known upper line item uses log dk bits 
item ii uses log bits 
choices form description arrangement 
implies log gamma log log dk log log gamma ffi familiar calculation yields log gamma log gamma ffi fixed 
shows log gammaffi positive substituting ffi 
gamma ffl log proves lemma 
divide lower half horizontal grid lines consecutive intervals length choose intersection odd interval 
choose constant delta 
lemmas procedure selects upper line intersections spaced apart lower half horizontal grid line containing pebble 
area smallest formed pebbles forbidden strip associated intersection covers grid line segment length side upper line intersection 
grid points eliminated forbidden strips widely spaced upper lines intersections grid line distinct pebbles lower half placed gamma grid points horizontal grid line gamma horizontal grid line 
minf dg horizontal lower half grid line concerned coordinate pebble requires log gamma bits select horizontal grid lines place pebble grid line lemma chosen total grid lines gamma delta choices 
select upper horizontal grid lines grid point place pebble choices 
select lower horizontal grid lines grid points place pebbles gamma choices top bottom 
choices form description arrangement 
implies log log log gamma log gamma ffi fixed yields log gamma gammaffi gamma left hand side log gamma log gammac ffi log ffi log right hand side lemma shows implies establishes theorem 
lemma corollary 
points chosen independently random uniform distribution unit square area triangle formed points positive positive ffi 
gamma ffl log ffl ffin probability gamma ffi expectation satisfies log ne ffi ffi gammaffl upper bounded gammaffl positive ffl 
corollary 
points chosen independently random uniform distribution unit square positive area triangle formed points expectation average case analysis shellsort question nontrivial general lower bound upper bound average complexity shellsort due shell open decades 
lower bound pass shellsort shellsort sorts list elements passes sequence increments kth pass main list divided separate sublists length dn ith sublist consists elements positions mod gamma main list 
sublist sorted straightforward insertion sort 
efficiency method governed number passes selected increment sequence ensure final list 
original log pass increment sequence bn bn shell uses worst case theta time showed related sequence uses pratt extended class nearly geometric increment sequences proved bound tight 
currently best asymptotic method pratt 
uses log increments form bn obtain time log worst case 
pass takes steps average complexity pratt increment sequence theta log 
sedgewick constructed family increment sequences shellsort runs ffl log time ffl log passes ffl 
chazelle attribution obtained result generalizing pratt method construct increment sequence fixed yields worst case running time log ln ffl log ln log 
plaxton suel proved omega ffl lower bound passes shellsort increment sequence ffl omega log shows sedgewick chazelle bounds optimal small slightly larger shows theta log log log lower bound worst case complexity shellsort 
pass takes steps shows omega log log log lower bound worst case shellsort increment sequence 
average case running time knuth showed theta best choice increments passes yao analyzed average case obtain simple analytic form yao analysis improved janson knuth showed average case running time particular choice increments passes 
apart nontrivial results known average case see 
results show general omega pn lower bound average case running time pass shellsort uniform distribution input permutations advance problem determining general nontrivial bounds average case running time shellsort 
shellsort shellsort computation consists sequence comparison inversion swapping operations 
analysis average case lower bound count just total number data movements inversions executed 
bound holds fortiori number comparisons 
trivial lower bound omega pn comparisons element needs compared pass 
proof intuitive idea 
different permutations 
sorting process insertion paths right order recover correct permutation sorted list 
requires 
pairwise different sorting processes 
gives lower bound minimum maximal length process 
formulate proof crisp format incompressibility 
theorem 
ffl satisfy ffl log log pass shellsort algorithm average number inversions comparisons lists keys omega gamma pn gammaffl delta increment sequence 
average taken lists items equally uniform distribution 
proof 
list sorted consist permutation elements consider shellsort algorithm increment kth pass 
number elements chain containing element left pass larger observe number inversions initial permutation pass insertion sort pass requires precisely comparisons 
denote total number inversions lemma 
appropriate fixed order reconstruct original permutation proof 
trivially specify initial permutation pass general final permutation pass reconstruct initial permutation pass fixed number 

permutations elements 
permutation incompressible permutation having kolmogorov complexity jn log 
gamma log decoding program discussion 
exist permutations lemma 
clearly fixed program input reconstructs description claim 
minimum length description including fixed program bits exceed complexity jn jn defined division contradicts lower bound number inversions performed 
divisions 
choosing elements ordered list elements divides remainder sequence possibly empty sublists 
np gamma np gamma distinct divisions np ordered nonnegative integral summands 
division indicated index enumeration divisions 
obvious application lemma 
description followed description effectively describes 
note clearly 
fix program universal machine reconstructs ordered list description 
binary length part description definition exceed kolmogorov complexity described object 
minor complication simply concatenate binary description parts result binary string delimiter indicate substring ends begins 
overcome problem encode substrings self see section 
encoding part description self obtain log log log log jn know pn assumed log log 
gamma log gamma log log gamma estimate log log np gamma np gamma np gamma log np gamma np gamma log np gamma log np gamma np gamma second term right hand side bounded log np gamma log np gamma positive np gamma 
pn np gamma log np gamma np gamma formula log log gamma log gamma log gamma 
positive integer 
log asymptotically np gamma log np gamma log 
altogether log log gamma 
ffl log log ffl rewritten np gamma log np gamma gamma ffl log gamma log np gamma gamma ffl log gamma righthand side positive asymptotic term 
omega pn gammaffl running time algorithm stated theorem permutation satisfying 
lemma gamma fraction permutations require high complexity 
lower bound expected number inversions sorting procedure gamma omega pn gammaffl omega omega pn gammaffl gives theorem 
theorem 
average computation time number inversions log comparisons omega log pass shellsort lists keys omega gamma pn delta increment sequence 
average taken lists items equally uniform distribution 
proof 
assume terminology 
log ffl theorem lower bound expected number inversions sorting procedure gamma omega pn omega omega pn omega log trivial lower bound number comparisons vacuously pn omega pn 
lower bound average case compared suel omega ffl worst case lower bound 
special cases lower bound average case complexity 
lower bound asymptotically tight average number inversions insertion sort 

shellsort requires omega inversions tight bound known theta 
shellsort requires omega inversions best known upper bound 
log log log shellsort requires omega log log log inversions 
log shellsort requires omega log comparisons course lower bound average number comparisons sorting algorithm 

general log shellsort requires omega delta comparisons pass trivially comparisons 
mentioned existence increment sequence yielding average log shellsort open years 
lower bound average shows number passes increment sequence exists precisely theta log possibilities ruled 
open problems average case performance shellsort fundamental interesting open problems area algorithm analysis 
simple average case analysis insertion sort pass shellsort similar analyses bubble sort stack sort queue sort preliminary version serve examples demonstrate generality simplicity technique analyzing sorting algorithms general 
open questions 
tighten average case lower bound shellsort 
bound tight passes 

increment sequence log pass shellsort runs average case theta log 
john tromp help proof theorem 
don knuth ian munro vaughan pratt discussions shellsort 

barequet lower bound heilbronn triangle problem dimensions 
proc 
th acm siam symp 
discrete algorithms 

van dam quantum kolmogorov complexity proc 
th ieee computational complexity conference 

beck collinear triples points plane tribute paul erdos ed 
baker bollobas hajnal cambridge univ press pp 


bertram algorithm heilbronn problem proc 
rd ann 
conf 
comput 
combinatorics jiang lee eds pp 


buhrman jiang li vit anyi new applications incompressibility method pp 
proceedings icalp lncs springer verlag berlin 

geometric proofs results yang lu math 
magazine 

erdos problems results combinatorial geometry discrete geometry convexity annals new york academy sciences 

erdos extremal problems combinatorial theory handbook combinatorics graham grotschel lov asz eds elsevier mit press pp 


goldberg maximizing smallest triangle points square math 
magazine 

guy unsolved problems number theory nd ed springer verlag pp 


sedgewick improved upper bounds shellsort journal computer system sciences 

janson knuth shellsort increments random struct 
alg 

jiang li vit anyi new applications incompressibility method ii theoretical computer science 

jiang li vit anyi average case complexity shellsort preliminary version pp 
proceedings icalp lncs springerverlag berlin 
assoc 
comput 
mach appear 

jiang li vit anyi expected size heilbronn triangles proc 
th ieee computational complexity conference 

knuth art computer programming vol sorting searching addison wesley st edition nd edition 

kolmogorov approaches quantitative definition information 
problems inform 
transmission 

koml os szemer edi heilbronn triangle problem london math 
soc 

koml os szemer edi lower bound heilbronn problem london math 
soc 

li vit anyi kolmogorov complexity applications springer verlag new york nd edition 

nielsen huang quantum computation quantum information cambridge university press 

mackenzie roll new scientist november blum die zeit april mackenzie le ne pas aux de international december january 

odlyzko partitions planar sets small triangles discrete math 

method information sorting computer memories problems inform 
transmission 

plaxton suel improved lower bounds shellsort proc 
rd ieee symp 

comput 
sci pp 


pratt shellsort sorting networks ph thesis stanford univ 

roth problem heilbronn london math society 

roth problem heilbronn ii proc 
london math society 

roth problem heilbronn iii proc 
london math society 

roth estimation area smallest triangle obtained selecting points disc unit area proc 
symp 
pure mathematics ams providence pp 


roth developments heilbronn triangle problem advances math 


schmidt problem heilbronn london math 
soc 

sedgewick analysis shellsort related algorithms proc 
th annual european symposium algorithms lecture notes computer science vol 
springer verlag berlin 

sedgewick open problems analysis sorting searching algorithms workshop prob 
analysis algorithms princeton www cs princeton rs 

shell high speed sorting procedure commun 
acm 

tian zheng ping problem heilbronn type northeast 
math 


yang zhang zeng heilbronn problem points int centre theoret 
physics preprint ic 

yang zhang zeng conjecture heilbronn numbers computation chinese ann 
math 
ser 


yang zhang zeng heilbronn numbers triangular regions acta math 
sinica 

vit anyi approaches quantitative definition information individual pure quantum state proc 
th ieee computational complexity conference 

yao analysis shellsort algorithms 
