copyright institute electrical electronics engineers 
reprinted permission proc 
icde february orlando florida 
material posted permission ieee 
internal personal material permitted 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution obtained ieee sending blank email message info pub permission ieee org 
choosing view document agree provisions copyright laws protecting 
widespread web originated new data management problems extracting data web pages making databases accessible web browsers renewed interest problems appeared contexts querying graphs semistructured data structured documents 
systems languages proposed solving web data management problems systems addresses problems unified perspective 
problems essentially amount data restructuring information represented certain structure want construct representation part different structure 
weboql system supports general class data restructuring operations context web 
weboql synthesizes ideas query languages web semistructured data website restructuring 
widespread web originated new data management problems renewed interest problems addressed contexts 
new problems mention web querying declaratively expressing navigate portions web find documents certain features web data warehousing extracting data web pages populate database possibly integrating data data sources website restructuring exploiting knowledge organization highly structured websites defining alternative views content :10.1.1.25.8757:10.1.1.11.3892
problems revisited due popularity web include querying structured documents querying semistructured data querying graphs :10.1.1.32.3916:10.1.1.45.8397
systems languages proposed solving web data management problems systems provides framework approaching problems unified perspective 
systems provides combination architecture data model query language possible effectively extract information line structured documents building custom tailored programs 
weboql system goal provide framework 
weboql data model supports necessary abstractions easily modeling record data structured documents hypertexts 
query language allows restructure instance types objects instance 
weboql synthesizes ideas query languages web semistructured data website restructuring contributions notably idea querying documents manipulating syntax trees support concept web data type 
usual approach querying structured documents custom tailored wrapper programs map documents instances data model main disadvantage approach wrapper program built new document set documents similar structure usually parser generator perl filtering language :10.1.1.25.8757
weboql syntax tree document family html built wrapper structure document query language powerful query restructure trees variety ways 
weboql webs abstraction supported data model web model small set related pages example manual larger set example pages corporate intranet www 
having webs class citizens key expressing restructuring operations 
features mentioned enable development useful applications querying small databases represented documents catalogs price listings guides restructuring single pages weboql restructuring documents databases webs gustavo arocena alberto mendelzon department computer science university toronto gus mendel db toronto edu example converting large page set smaller hyperlinked pages restructuring sets pages example set pages creating index page containing hyperlink adding original pages hyperlink pointing index page integrating information extracted heterogeneous web sources example extracting headlines line news sources 
weboql architecture common middleware approach data integration projects flexible common data model wrappers map data represented terms sources models common model :10.1.1.45.8397
facilitates integration information sources databases file systems 
related mentioned weboql synthesizes ideas diverse research areas 
overview similarities differences systems 
web queries 
web query languages websql qs weblog share idea viewing web database queried declarative language 
languages suffer common limitation lack support exploiting document structure 
early attempt exploiting document structure weblog applicable documents simple flat structure 
weboql navigation patterns generalization websql path regular expressions 
qs weboql possible traverse trees graphs depth breadth search 
semistructured data 
main obstacles exploiting internal structure web documents lack schema type potential irregularities appear reason 
problem querying data structure unknown irregular addressed context web called query languages semi structured data lorel unql 
systems low level representation data graphs 
unql data model influential design 
problem semistructured data models far provide modeling abstractions essentially labeled graphs 
notably support ordered collections 
believe necessary flexibility required modeling loosely structured information imply lack support basic abstractions records nesting ordering 
schema free data model reflects belief fact contributions 
explicit support order key element modeling structured documents allow model hyperlinks documents records easily represent relational tables needing devise ad hoc encodings simulate 
website restructuring 
hand order able express kind mentioned query language capable manipulating structure documents providing mechanism generating arbitrarily linked sets documents 
facility website restructuring systems araneus strudel 
systems exploit knowledge website structure defining alternative views content 
araneus approach highly typed pages website classified formally described manipulated weboql favor dynamic approach structure pages captured queries furthermore weboql capable querying pages irregular structure pages structure fully known 
strudel uses graph data model nodes represent documents model internal structure documents 
interesting result strudel query language exactly captures queries expressible order logic extended transitive closure 
weboql compute transitive closure characterization expressive power fully precise 
araneus strudel handle urls similarly oids provide facilities creating urls skolem functions assigning urls documents 
weboql urls just strings 
see approach flexible simpler 
queries generate urls just strings 
structured documents 
idea querying structured documents previously investigated context office information systems context integration sgml databases 
largely different approaches strongly typed 
documents mapped instance object oriented database means semantic actions attached grammar 
database representation queried query language database 
novel aspect approach possibility querying structure means path variables 
documents modeled nested ordered relations 
model similar weboql strongly typed 
query language generalization nested relational algebra 
group card punching group programming languages label full version url www ps label url www abstr html label full version url www ps label full version url www ps label full version url www ps label url www abstr html label url www abstr html title advances card punching authors peter smith john brown publication technical report tr title magnetic media better authors peter smith john brown tom wood publication acm vol 

pp title cobol ai authors sam james john brown title assembly masses authors john brown tom wood publication acm popl proceedings 

group databases 
hypertree containing publications database rest section introduce weboql data model aspects query language means comprehensive list examples 
defined formal semantics model space limitations prevent presenting 
try convey intuition model focus pragmatic aspects 
section introduce webs show 
section introduce features manipulating documents semistructured data give example document patterns formalism close spirit concept query example 
section results preliminary characterizing weboql expressive power 
section status current implementation possible directions 
weboql weboql data model ordered trees think web graph trees 
goal query language general able navigate query restructure graphs trees 
tree data model level abstraction weboql data model light weight oem similar models heavy weight traditional schema models 
analogy compiler field assimilate weboql data model intermediate language optimizations low level machine language time high level source language 
main data structure provided weboql hypertree introduce 
hypertrees 
hypertrees ordered arc labeled trees types arcs internal external 
internal arcs represent structured objects external arcs represent typically hyperlinks objects 
arcs labeled records 
atomic data type string 
shows hypertree containing descriptions publications research groups 
diagrams full lines internal arcs dotted lines external arcs 
external arcs descendants record labels field named url 
urls just strings additional semantics 
interpretation urls left wrappers connect weboql external world 
hypertrees useful data structure subsume abstractions want support collections nesting ordering 
distinction internal external arcs notion captured trees fact labels records allows easily represent ubiquitous collections records 
type associated node records outgoing arcs heterogeneous 
note example publication field cobol ai field assembly masses 
modeling information residing web hypertree correspond document 
hypertree represent relational table bibtex file directory hierarchy rest say tree hypertree 
webs 
hypertrees key abstraction weboql world view weboql supports higher level abstraction enables model sets related hypertrees web 
web pair consisting hypertree function maps urls hypertrees 
refer components schema browsing function web respectively 
say pair composed url hypertree page web say content page 
browsing function implicitly defines graph nodes pages arc node node content page tree simple trees subtrees tails 
tails simple trees subtrees select title url authors smith title advances card punching url www ps title magnetic media better url www ps node contains external arc url attribute url page node schema web provide entry points graph 
schema null know urls able enter graph 
web model small set related pages example manual larger set example pages corporate intranet www 
hypertrees webs manipulated weboql 
subsections introduce main features language example 
see formal presentation data model query language see line demo live examples 
simple trees subtrees tails 
define terms quite frequently sequel 
tree say tails trees obtained chopping prefixes simple trees trees composed arc followed possibly null tree stems root subtrees trees arcs stem root 
illustrates ideas graphically 
query language data model goals guided design query language largely pragmatic 
goal weboql perform complex restructuring operations 
implies ability build deeply nested structures arbitrarily linked hypertexts 
weboql express feasible queries queries polynomial complexity 
regarding expressive power weboql simulate operations nested relational algebra compute transitive closure arbitrary binary relation 
example 
main construct provided weboql familiar select briefly 
see example 
suppose name denotes papers database want extract title url full version papers authored smith 
query shows 
result displayed right query 
query iterates simple trees research groups value iterates simple trees subtree papers research group represented 
quote symbol prime operator returns subtree argument 
dot symbol peek operator extracts field record labels outgoing arc argument 
square brackets denote hang operator builds arc labeled record formed arguments example field names inferred explicitly indicated see examples 
tilde represents string pattern matching predicate left argument string right argument grep string pattern 
answer query obtained follows instantiation variables clause order induced trees variables take values check condition clause true evaluate query select clause append result answer 
construct seen generalization map second order function functional programming languages 
manipulating trees 
queries need involve construct 
oql weboql purely functional language 
addition prime peek hang operators introduced weboql provides tree operators 
introduce examples 
concatenate illustrated query allows trees denotes result query 
query illustrates general form hang operator takes record tree arguments hangs tree new arc labeled record tree argument null constant denotes null tree elide slash simply write tag li tag li null string value field obtained peek operation necessary explicitly give name want rename instance write tag null simply tag tag tag null 
combine hang concatenate operations create trees purely constants shown query 
note tree represents fragment html code composed list followed anchor 
queries illustrate head tail operators give simple tree tree simple tree tree respectively 
head resp 
tail extended version allows get resp 
discard simple trees tree nonnegative tag ul tag li text child tag li text second child tag li text third child tag href text click title url www 
title magnetic url www 
title url www 
title magnetic url www 
tag li text child tag li text third child tag li text second child tag ul tag text click tag li text child tag li text second child tag li text third child tag li text child tag li text second child tag li text third child tag li text child tag li text second child title url www 
title magnetic url www 
label papers smith label papers smith href integer query illustrates get simple trees tree 
explained peek allows extract field arc label 
example title string advances card punching 
cited field exist peek returns nil represents value undefined 
example tag evaluates nil 
comparison nil evaluates false nil nil 
related nil constant operator denoted question mark tests presence field arc label instance text evaluates true tag evaluates false 
relaxed typing useful dealing semistructured data 
wrappers url dereferencing webs important issue addressed input weboql query 
weboql approach issue simple flexible url dereferencing 
dereferencing url means replacing result applying browsing function current web see subsection 
query executed context web refer current web 
indicated current web assumed www plus data sources accessible wrappers 
write queries create new webs default web execution queries 
see subsection 
url result query browse content page identified current web 
instance browse www org tag returns name tag associated subtree home page see subsection get idea html documents looks weboql 
url considered defined web browse nonnull web 
proposals urls generally handled similarly oids object database weboql urls simply strings 
interpretation url wrappers connected system 
current implementation convention url dereferenced contains colon prefix colon identifies wrapper suffix actual request sent wrapper 
wrappers map html documents file system hierarchy relational tables hypertrees 
mapping object hypertree done step demand instance relational table mapped demand tuples required instantiating variable query execution 
restructuring webs 
previous examples illustrated perform tree restructuring 
general case weboql query restructure trees web restructure webs 
web restructuring query function maps web schema new web may arbitrary hypertree browsing function new web obtained redefining value returned browsing function old web number urls pages url targeted query left unchanged 
particular case browsing function new web just extend old web associating nonnull hypertrees urls previously undefined 
primary mechanism creating webs clause construct 
explained semantics mention fact creates web just tree 
instance query reality shorthand select title url schema authors smith keyword denotes current web vertical bar syntax composing web queries informally refer pipe operator real operator 
schema indicates result query form schema new web 
case new web differs current web schema 
clause allows define new browsing function 
specifying url keyword schema 
example query creates new index projects card punching programming languages 
publications card punching group advances card punching peter smith john brown magnetic media better peter smith john brown tom wood index card punching html 
result query html index projects html page research group group name url 
page contains publications corresponding group 
select group general select clause form select 
queries string query keyword schema 
clauses evaluated left right ones containing schema keyword specify create schema new web ones containing strings interpreted urls specify create pages old new webs differ 
example clarifies idea 
suppose want generate tree web containing page research group consisting title author publications index page lists groups provides links pages 
query 
diagram representing result put url page just top content omitted pages content changed amount www 
select unique name group url group schema title authors group select keyword followed unique keyword trees built contain outgoing arcs label 
occurrence arc label kept answer duplicates trees hang eliminated example unique guarantees arc group added index page 
query arrow assign symbolic name newly created web 
naming facility part query language analogous macro definition 
composing web 
natural question point may compute new web 
primary uses web name card punching url card punching name programming languages url programming languages name url 
title advances card punching authors peter smith john brown title magnetic media better authors peter smith john brown tom wood card punching title cobol ai authors sam james john brown title assembly masses authors john brown tom wood programming languages schema querying performing returning host application example application web pages visible browser 
suppose want pages resulting query visible browser 
pages specify formatting details presenting content html exist application program translates pages html fixed formatting style example html tables application program tailored format output particular query 
returning web resulting query create new web pages created query restructured contain html formatting tags 
query 
resulting html pages displayed 
select tag text title text authors tag hr url schema browse url select tag text publications name group browse url tag text index href index projects html url html schema select tag text index projects tag ul select tag li tag text name href url html schema index projects html analyze query works 
piped query current web evaluation query restructures project pages adding html formatting different fields see note browse url page url url url appearing definition new page url 
second query simply adds heading link pointing tag tag tag ul tag tag source 
source tag li tag tag tag tag ul source publications text publications 
source card text card punching source text 
source text 
source programming text programming 
tag br source text 
tag li source text magnetic 
source magnetic text magnetic 
tag cite source magnetic text magnetic 
source peter text peter smith 
tag br source source acm text acm vol 

tag br source tag source text full version url ps publications research groups cs department card punching advances card punching peter smith john brown technical report tr full version magnetic media better 
peter smith john brown tom wood acm vol 
pp full version programming languages cobol ai sam james john brown full version 
databases 

views html document source publications text publications research 
tag html index page group pages star symbol denotes string concatenation operation 
query creates html page index converting schema html unordered list preceded heading 
worth mentioning details continuing query context tree expected schema resulting web taken value query 
conversely tree query context web expected result query interpreted redefinition schema current web 
void denotes empty web composed null hypertree browsing function evaluates null argument 
void allows create closed webs access external data 
documents semistructured data web documents cited examples semistructured data structure constrained schema may irregularities 
section show model manipulate documents weboql 
modeling structured documents novel aspect modeling technique opposed proposals rely custom tailored external programs mapping document instance data model 
wrappers current implementation weboql generates annotated syntax trees asts arbitrary html documents 
effectively manipulate documents set hyperlinked documents documents physical structure implied markup reflects logical relationships information items 
presents views html document containing descriptions publications tree fit page omitted portions ellipsis 
rules generating asts arc corresponds enclosed occurrence paired tag example root arc tree corresponds enclosed tag piece untagged text 
dummy tag named case possible refer untagged portions text queries example titles papers 
arcs corresponding tag external arcs internal 
internal arcs attributes source text tag corresponding piece html code text excluding markup tag respectively 
external arcs attribute url corresponds destination anchor 
restructuring documents semistructured nature documents difficult manipulate components 
features weboql particularly useful addressing problem navigation patterns tail variables 
navigation patterns 
previous examples variables ranged simple trees tree 
possibility fact simplest 
general variables range subtrees located depth subtrees linked hypertrees 
range variables specified navigation patterns nps regular expressions alphabet record predicates allow specify structure paths followed order find instances variables 
nps mainly useful purposes 
extracting subtrees trees structure know detail structure presents irregularities 
example need know structure document detail extract names research groups need know names tagged illustrated query 
select text papers html tag np tag tag record predicates true arc arc internal second true arc tag attribute value 
np matches paths composed number internal arcs star usual means kleene closure followed arc corresponding piece text tagged 
opposite true arc arc external 
example tag table specifies paths tree lead root anchor enclosed table 
nps match paths starting root source tree 
matching path associated variable instantiated simple tree see starting arc np omitted done earlier examples true assumed default shorthand true 
variables instantiated order paths matched left right depth breadth search default breadth depth write 
second important nps iterating trees connected external arcs 
fact distinction internal external arcs hypertrees really useful navigation patterns traverse external arcs 
suppose software product documentation provided html format want build full text index 
documents form complex hypertext possible browse sequentially links having string label 
building full text index need feed indexer text url document 
obtain information query select url text browse root html text external arc matched middle path url attribute arc dereferenced navigation continues tree obtained 
view process demand materialization graph induced browsing function 
note starred nps potentially traverse large fraction www 
tail variables 
trees generated query research group flat physical structure 
logical structure heading followed list components representing see 
suppose want restructure list papers group html ordered list 
language features seen far enable express query 
problem solved weboql tail variables variable name uppercase variable iterates simple trees tails see keeping just simple tree matching path keep simple tree simple trees right 
tail variables express query way tag ol select tag li browse card punching html 
tag tail variables easily express queries extract tables preceded heading containing word service build list enclosed consecutive hrs 
examples 
suppose want collect publications metadata available documents warehouse local relational table schema title authors publication ps url url 
assuming papers html url document query restructures metadata source set records required schema select title text authors text publication text ps url url url url insert browse papers html tag variable successively instantiated tail descendant group name second descendant represents list papers group instantiated 
note scan papers html 
title authors publication giving publications groups title title authors 
document pattern magnetic media better weboql handles irregularities smoothly raising run time errors invalid tree operations return null 
note url insert target result 
far weboql semantics concerns string special semantics 
implementation recognize prefix perform insertion operations database query executed 
query gives feeling weboql integrate information extracted directly html documents populate local database 
easy imagine example works opposite direction generates html pages result query relational table 
variation query restructures html document tree examples sections select group text select title text authors text publication text label full version url label url browse papers html tag note assign name result queries sections name denoting hypertree implicitly referring schema web 
document patterns 
weboql extracting information line sources observations documents queries may fairly complex difficult read second subqueries common structure idioms appeared frequently 
developed pattern language thought incarnation concept query example applied documents 
document pattern composed html tags string patterns variables syntactic devices 
pattern restructures document eliminating classification groups making title label anchor points full version 
document pattern specifies mapping webs 
construct giving keywords input pattern construct giving keywords output pattern 
intuitively ellipsis mean search document structure curly brackets mean repeat application pattern wildcard matches simple tree 
patterns automatically translated weboql queries 
complexity expressive power complexity weboql query polynomial size input 
easy see operations compositions thereof operations containing nps clauses 
finding nodes reachable paths match np starting tree polynomial cost query create number documents polynomial size input 
composition queries contain nps clauses polynomial 
weboql simulate nested relational algebra operators 
projection selection union cartesian product simulation trivial 
difference simulated sql nesting clause 
queries suggest simulate unnest nest operators nested relational algebra respectively 
transitive closure arbitrary binary relation simulated generating web represents graph relation explicitly page value external arc pages pair corresponding values relation traversing web np 
weboql system language supports general class data restructuring operations 
weboql provides framework approaching web data management tasks unified perspective 
data model supports abstractions records ordered trees hyperlinks webs allow easily model web data query language provides powerful primitives tree web restructuring hypertext navigation 
data model query language flexible accommodating lack knowledge structure data queried potential irregularities lack explicit structure data common issues context web 
see line demo containing live examples ranging document restructuring integration information extracted line news sources 
implemented weboql document pattern translator java 
weboql queries embedded java programs new wrappers dynamically added system 
weboql parser generates internal algebraic representation queries 
particular construct translated simpler operations algebraic nature 
directly interpret algebraic representation performing optimizations 
fact query optimization techniques efficient execution sources 
theoretical side working formal semantics document patterns precise characterization weboql expressive power 
presence order web creation regular expressions problem particularly challenging 
appropriate formalism analyzing weboql expressive power structural recursion 
structural recursion forms recursive definitions systematic traversals structured objects 
different forms structural recursion yield query languages different expressive power 
ignore web creation tail variables expressive power weboql lies ext vext forms structural recursion proposed 
instance query extract anchors tree corresponding html document expressed ext expressed weboql nps 
hand vext allows simulate nps interestingly allows express queries change headings headings tree corresponding html document query expressed weboql basically weboql general preserve structure input result 
tail variables captured structural recursion forms new form easily defined captures 
possibility defining webs adds new dimension expressive power 
instance allows compute transitive closure arbitrary binary relation expressible means structural recursion 
project supported information technology research centre ontario natural sciences engineering research council canada 
abiteboul cluet christophides milo moerkotte simeon querying documents object databases journal digital libraries 
abiteboul kanellakis object identity query language primitive proc 
acm sigmod int 
conf 
management data pp 

abiteboul quass mchugh widom wiener lorel query language semistructured data journal digital libraries 
arocena weboql exploiting document structure web queries master thesis university toronto 
arocena weboql home page www db 
toronto edu weboql 
arocena mendelzon mihaila applications web query language proc 
th 
int 
www conference santa clara california april 
atzeni mecca merialdo semistructured structured data web going back forth proc 
workshop semi structured data tucson arizona may 
buneman davidson hillebrand suciu query language optimization techniques unstructured data proc 
acm sigmod int 
conf 
management data montreal canada pp 

buneman davidson suciu programming constructs unstructured data proc 
th int 
workshop dbpl sept 
buneman naqvi tannen wong principles programming complex objects collection types theoretical computer science pp 

cattell ed object database standard odmg morgan kaufmann publishers san francisco calif 
christophides abiteboul cluet scholl structured documents novel query facilities proc 
acm sigmod int 
conf 
management data pp 

fernandez florescu levy suciu query language processor web site management system proc 
workshop semi structured data tucson arizona may 
zicari algebra structured office documents acm tois pp 

hammer garcia molina cho crespo extracting semistructured information web proceedings workshop semi structured data tucson arizona may 
konopnicki shmueli qs query system world wide web proceedings th int 
conf 
large databases zurich pp 

lakshmanan sadri subramanian declarative language querying restructuring web proceedings th int 
workshop research issues data engineering new orleans 
mendelzon mihaila milo querying world wide web journal digital libraries 
mendelzon wood finding regular simple paths graph databases siam comp 
pp 
papakonstantinou garcia molina widom object exchange heterogeneous information sources proceedings th int 
conf 
data engineering taipei pp 

