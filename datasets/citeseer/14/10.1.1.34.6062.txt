new dual algorithm shortest path reoptimization sang nguyen epartement informatique de recherche op universit de montr eal stefano pallottino dipartimento di informatica universit di pisa maria scutell dipartimento di informatica universit di pisa shortest path problems studied network flow problems interesting applications various fields 
large scale transportation systems sequence shortest path problems solved th problem differs slightly th 
significant reduction computational time may obtained efficient reoptimization procedure exploits useful information available shortest path computation sequence 
reduction computational time essential line applications 
devoted development reoptimization algorithm 
shall focus sequence shortest path problems solved problems differ origin node path set 
reviewing classical algorithms described literature far essentially show dijkstra behavior new dual approach proposed particularly promising practice 
shortest paths computations large scale transportation systems shortest path problems solved sequentially th problem differs slightly th 
quite practice problem sequence solved independently previous 
attempts exploiting reoptimization techniques investigated problem finding shortest cost matrix cost arc input graph changes 
theoretical interest proposed approaches required impractical large amount memory transportation applications 
efficient approach updating shortest cost matrix dijkstra method due fujishige 
efficient reoptimization strategy gallo general situations arising transportation applications considered clever reoptimization procedures proposed solution 
general problem considered follows assume shortest path tree relative origin say determined problem finding new shortest path tree origin changed exactly arc new cost 
note applications transportation reduced cases combination 
gallo reoptimization strategy efficient algorithm proposed gallo pallottino case varying origin nodes fully exploits arc reduced cost property see instance nemhauser lawler 
different direction research progetto nserc canada 
dual simplex algorithm suggested florian nguyen pallottino problem 
algorithms considered efficient ones literature 
formally state problem finding new shortest path tree origin node changed review reduced cost algorithm dual simplex algorithm terms dual ascent methods propose new dual approach 
algorithms literature follow dijkstra node inserting order approach adopts different hopefully efficient insertion policy 
shortest path reoptimization problem shortest path tree problem directed graph set nodes cardinality set arcs cardinality function assigns cost ij arc simplicity shall assume strongly connected parallel arcs 
origin node root shortest path problem sp consists finding directed tree path minimum cost path observe previous assumption spanning tree 
order guarantee finite solution problem shall assume directed cycle negative cost exists linear programming notation problem dual formulated follows sp min ij ij bs ji gamma ij ij dsp max gamma gamma ij fs bs denote forward star backward star respectively fs ig bs ig gamman denotes dual variable associated usually referred price potential potential vector reduced cost ij ij gamma arc dual feasibility equivalently stated ij reoptimization problem assume shortest path tree determined 
reoptimization problem consideration consists finding shortest path tree origin changes node sake completeness auction algorithms mentioned 
algorithms belong family dual methods standard shortest path computations fact suitable reoptimization problem consideration 
auction methods described specialized reoptimization algorithm proposed far 
main algorithmic approaches problem proposed literature early review sections 
algorithms rely observation optimum potentials relative feasible dual problem dsp dual approaches promising avenues computing required shortest path tree rooted algorithms new instances general dual ascent reoptimization paradigm maintains algorithmic execution ffl partial shortest path tree rooted new origin ffl partial tree moved ffl feasible dual vector satisfies complementarity slackness conditions associated problem sp dual dsp coincides optimum dual vector relative previous origin ij dual feasibility ij complementary slackness conditions csc 
ffl dual vector satisfies csc arcs potentials nodes belonging remained unchanged changed value ij nodes referred external nodes 
subset external nodes denote respectively bsb bse set arcs incident originating called border arcs originating complement called external arcs bsb sg bse ns sg partitioning critical values subset may defined ffi minfc ij bsb minfc ij bse fl ffi bsb similarly bse 
consider cut separating complement nns cutset sg fl called dual gap minimum reduced cost cutset 
feasible dual solution fl represents maximum increment added potentials maintaining dual feasibility guaranteeing new reduced cost decreases updating 
particular fjg ffi minfc ij bsb minfc ij bse fl finite fl ffi provide bounds optimal solution dsp optimum potential associated node fact possible prove gamma fl lower bound gamma ffi upper bound 
observe definition ffi sg special case ffi nr delta previous definition delta dual gap associated set external nodes maximum increment added potentials external nodes maintaining dual feasibility ensuring reduced cost border arc reaches updating 
typical dual ascent iteration dual ascent operation performed iteration attempt augment works follows subset selected potential node increased possible maintaining dual feasibility 
objective enlarge set arcs zero reduced costs added arcs satisfy csc 
previously introduced definitions dual ascent operation consists increasing potential node amount fl fl arc bsb zero reduced cost updating moved termination optimal potentials root computed external nodes moved minimum path costs gamma particular case happens jsj say fjg external node case dual ascent operation referred local operation node corresponds increasing potential amount fl fl special case case fl delta delta dual gap associated dual ascent operation referred global operation delta observe delta threshold gap potentials external nodes sense minimum increment warrants external node say called closest node added partial tree iteration dual ascent interpretation classical dijkstra algorithm reoptimization context 
fact resulting algorithm equivalent solving shortest path tree problem root dijkstra approach optimum reduced costs obtained previous shortest path tree computation root arc costs 
observe case csc hold arcs pointed 
dual ascent operation performed selecting disjoint sets sh external nodes increasing node potentials subset corresponding dual gap fl enhanced dual ascent approach dual ascent operation entire reoptimization paradigm specialized follows 
closest node subtree rooted denote border arc vw delta 
arcs zero reduced cost consequently arcs belonging zero reduced cost 
property performs global operation entire tree may transferred words path node updated tree shortest path global operation implies updating potential nodes efficient way avoid repetitive updating potentials consider partial graph called reduced graph obtained removing external arcs nn implied earlier shown shortest path reduced graph shortest path original graph set apply dual ascent operation reduced graph obtain potentially efficient operation called enhanced dual ascent operation 
arc reduction leads bse fl ffi delta 
node potentials increase threshold gap delta delta addition potentials nodes remaining change arc remaining maintains zero reduced cost pointed allows embed enhanced dual ascent operation iterative process 
property easily established property enhanced dual ascent paradigm moves nodes exactly order dijkstra algorithm arc reduced costs 
algorithmic point view enhanced paradigm equivalent dijkstra approach reoptimization context computationally efficient smaller set potentials updated iteration node potential updated 
main reoptimization algorithms literature described derived enhanced dual ascent paradigm 
reduced cost algorithm primal approach reduced cost algorithm dual algorithm 
fact performs operations enhanced dual ascent paradigm graph reductions performed explicitly physical removal external arcs 
efficiency purposes key operation finding border arc entering closest node performed set nodes border backward stars bsb empty 
computation dual gap delta delta qg border arc maintained arc ij ffi border arcs entering considered removed graph search closest node computation delta performed time 
computation values ffi performed globally time 
node moved examining forward star possible update value ffi node arc exists fs 
order move subtree set implemented lists contains nodes minimum ffi value contains remaining nodes 
closest node selected inspection forward star allows set ffi value sons value equal ffi delta sons inserted nodes moved subsequently search node minimum ffi value performed 
reduced cost algorithm performs operations enhanced dual ascent approach considered efficient ad hoc implementation dijkstra algorithm reoptimization context property 
dual simplex algorithm observation optimum tree primal unfeasible dual feasible basis new problem root changes algorithm specializes classical dual simplex algorithm determining new optimum tree current dual feasible basis negative valued basic arc determined computing primal basic solution reverse arc basic tree path removal arc basis divides tree subtrees 
new basic arc border arc oriented provides minimum reduced cost vw ffi delta closest node 
practical point view reduced cost approach minimum reduced cost arc may identified maintaining border arc node updating ffi values carried scanning forward stars nodes entering similarly reduced cost approach arc reduction implicitly performed entire subtree rooted moved approach sophisticated data structure describing needed explicitly move entire traverse order update node potentials 
observe reduced cost case potential updating exactly enhanced dual ascent operation 
dual simplex algorithm viewed efficient implementation dijkstra approach reoptimization context 
new dual algorithm shortest path reoptimization new reoptimization algorithm closely related introduced family dual ascent shortest path algorithms called hanging family 
algorithms hanging family suitable kind reoptimization consideration essentially reduced previously reviewed reoptimization algorithms property dijkstra procedure shown 
ad hoc dual ascent operations necessary devise novel reoptimization approach 
basic properties allow efficiently pruning graph discovering subtrees moved simultaneously 
properties extend enhanced dual ascent paradigm previously described embody key ingredients new reoptimization approach 
hanging family basic dual ascent operations performed 
operations viewed particular cases dual ascent operation introduced shortest path reoptimization problem sophisticated operations mix basic ones various ways proposed local operation performed single external node classic operation corresponds 
basic properties consider typical dual ascent iteration reoptimization context described unique predecessor function indicates arc belongs external node denote subtree rooted current feasible dual vector external node define ff minfc ij bse ff bse nf 
finite ff minimum increment added potential due external arcs ignore critical arc complementarity slackness respect tree zero reduced cost 
case root ff furthermore external node ffi ffi ff ff ffi ffi ff ff finite ffi minimum increment added potential due border arcs entering ffi border arcs entering ancestors recall paths ancestors zero reduced cost 
hand finite ff minimum increment added potential due external arcs entering ancestors give added insights values introduced consider graph shortest path tree rooted optimal potentials associated nodes 
graph shortest path tree new root trees depicted border arcs reduced costs values ffi delta 
values ff computed shown 
furthermore values ffi ff defined respectively ffi ffi ffi ffi ff ff ff ff 
defined values properties readily proved 
property ffi gamma upper bound shortest path length ff finite ff delta gamma lower bound length paths enter node external arc 
trees border arcs values ff property follows easily definitions ffi ff delta 
property ffi ffi external node border arcs entering implicitly removed proof property ffi gamma upper bound shortest path length length path going ancestor note ffi ffi path terminating border arc provides value ffi length greater having length ffi gamma border arcs entering removed shortest path terminating arcs 
due property needs maintain border arc external nodes ffi ffi denoted effective candidate nodes 
practical consequence needs compute value delta sufficient consider set fj ffi ffi property ff delta ffi node external arcs implicitly removed proof property ff finite ff delta gamma lower bound length paths enter node external arc hand ffi gamma upper bound shortest path length condition ff delta ffi implies external arcs removed ingredients introduce additional graph reduction involving arcs property ff delta ffi effective candidate node removed proof definition ff minimum increment added potential due external arcs entering ancestors ff finite ff delta gamma lower bound length paths enter node external arc including tree arc 
property ffi gamma upper bound shortest path length effective node ffi gamma length path having border arc entering arc combining properties ff delta ffi implies external arcs entering removed including 
observe removing tree arcs may transform forest 
interesting consequence property effective candidate node satisfying property border arc arc entering may happen ffi delta 
unfortunately general descendants entire subtree moved possible minimum cost path descendants pass node example consider previous graph external nodes effective candidate nodes 
ff delta ffi external arcs entering node removed 
follows optimal potential node ffi 
ffi 
consequently moved stronger conditions discovered allow transfer entire subtrees 
definition effective candidate node said independent ffi ffi descendant equivalently define ffi ffi ffi definition subtree rooted independent node said satisfies property ff delta ffi proper descendant equivalently define ff ff delta ffi theorem subtree optimum potential node ffi proof property satisfied external arcs entering removed ffi optimum potential node independent ffi ffi path going unique border arc entering best paths border arc go proper descendant recall arcs zero reduced cost 
border arcs entering proper descendants removed ff delta ffi proper descendant external arcs entering proper descendants exception arcs removed follows border arc entering arc linking entire subtree theorem follows 
corollary subtrees simultaneously moved optimum potential node obtained increasing current potential value amount ffi ffi algorithm properties stated section suggest considering subset nodes ffi minf ffi ff delta ff deltag defines fact roots subtrees specifies subtrees simultaneously moved typical iteration new reoptimization algorithm discovering set typical iteration compute values ffi ffi ffi ff ff ff node compute set fj ffi ffi value delta node satisfying conditions root subtree move subtree update potentials 
observe closest node satisfies conditions construction moved worst case exactly subtree may moved iteration 
case proposed algorithm behaves previously described reoptimization algorithms shows dijkstra behavior 
may happen algorithmic iterations subtrees moved parallel case new reoptimization algorithm different classical reoptimization algorithms literature 
particular subtrees require increase potential amount ffi delta moved happens new reoptimization algorithm extends enhanced dual ascent operation collection disjoint node sets 
illustrate behavior proposed approach consider example discussed previously cost arc changes 
values associated external nodes reported table 
delta 
ffi ffi node root subtree 
table external nodes hand ffi delta 
example ffi minf ffi ff deltag ffi delta 
moved simultaneously trees moving illustrated 
new trees iteration enter set value 
shortest path tree rooted shown minimum costs gamma associated node shortest path tree rooted order complete description reoptimization algorithm specify efficiently discover subtrees iteration 
consider typical iteration 
compute values ffi ff set delta ffi ff ff ffi ffi set ff ff ffi ffi initialization step 
initialization step visit depth way starting perform operations visited node ffl visited descending phase set ff ff ffi ffi ffi ffi fjg delta minf delta ffi ffl visited ascending phase set ff ff ffi minf ffi ffi visit ffi delta entire forest moved computation ends repeat operations ffl select remove node ffl belongs satisfies conditions move update potentials 
theorem algorithm correctness time complexity reoptimization algorithm correctly finds shortest path tree mn time 
proof algorithm correctness follows immediately theorem subtrees moved algorithm iteration 
far time complexity concerned observe algorithm performs iterations iteration closest node moved corresponding subtree 
consider typical iteration 
initialization steps computation values ffi performed globally time shown reduced cost algorithm 
hand computation values ff requires time algorithm iteration worst case backward star node analyzed 
initialization operations performed time 
depth visit construction require time 
movement subtrees requires globally time 
stated complexity follows 
due computational cost required algorithm iteration particular computation values ff possible devise relaxed version reoptimization approach lower bounds ff right values observe lower bounds node discovered iteration satisfies conditions certainly root subtree words algorithm correctness preserved 
particular values ff updated pre specified iterations old values maintained iterations algorithm time complexity km 
suitably choosing better time complexity values derived 
suggest consider compute ff initialization phase dn cases algorithm time complexity reduces 
practical point view reduced effort computing ff lead efficient implementations 
obtain non dijkstra behavior necessary condition ff external node condition requires particular value ff 
observe ff implies exists external arc entering say zero reduced cost 
words exists zero cost cycle say goes old root node happens suggest shrink new node say takes place old root ff value associated new root ff shrinking operation iterated tree root nonzero ff value 
easy show proposed reoptimization algorithm correct shrink reduction operations performed 
furthermore time complexity values stated theorem ensuing observations remain valid shrink reduction operations performed time reverse operations cycle unfolding algorithm termination performed time refer reader details cycle shrinking unfolding operations 
strongly believe proposed new dual approach promising avenue reoptimization problems considered 
numerical experimentations presently carried results reported subsequent 
ahuja magnanti orlin 

network flows theory algorithms applications 
prentice hall englewood cliffs nj 
bertsekas pallottino scutell 

polynomial auction algorithms shortest paths 
computational optimization applications 
dijkstra 

note problems connexion graphs 



etude extension un algorithme de 
infor 
florian nguyen pallottino 

dual simplex algorithm finding shortest paths networks 
fujishige 

note problem updating shortest paths 
networks 
gallo 

reoptimization procedures shortest path problems 
di matematica le scienze 
gallo pallottino 

new algorithm find shortest paths pairs nodes 
discrete applied mathematics 
lawler 

combinatorial optimization networks matroids 
holt rinehart winston new york 


fixed matrix method shortest distances directed graph inverse problem 
ph thesis univ karlsruhe 
nemhauser 

generalized permanent label setting algorithm shortest path specified nodes 
journal mathematical analysis applications 
pallottino scutell 

dual algorithms shortest path tree problem 
networks 
pallottino scutell 

shortest path algorithms transportation models classical innovative aspects 
marcotte nguyen eds 
equilibrium advanced transportation modelling kluwer boston 
tarjan 

data structures network algorithms 
siam philadelphia pa 
