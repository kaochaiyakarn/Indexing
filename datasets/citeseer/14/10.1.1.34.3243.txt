telecommunication systems 
analysis tcp vegas tcp reno omar ait eitan altman inria route des lucioles sophia antipolis france mail altman sophia inria fr analytic approach order analyze dioeerent features vegas reno tcp versions 
simulations con rm analytic results 
available bandwidth high vegas retransmit fth data reno higher available bandwidth eoecient vegas heavy congestion vegas behaves reno manage eoecient new mechanism congestion detection 
analytic results obtain evolution window size round trip times averages average throughput 
keywords tcp vegas tcp reno approximations 

known congestion control mechanism tcp ip protocols proposed van jacobson dubbed tahoe 
revised years author including fast recovery fast retransmit new version called reno achieves bandwidth utilization retransmits data predecessor 
manner predict available bandwidth provoking losses main source large averages variances round trip time rtt aggressiveness network saturation 
brakmo peterson proposed new congestion avoidance algorithm dubbed vegas source behavior reno :10.1.1.41.8565
new algorithm able inter operate valid implementation tcp reported achieve better throughput reno retransmit fth half data reno eoeciently available bandwidth :10.1.1.41.8565
authors improvements report gain reno ait altman analysis tcp vegas tcp reno throughput 
existing studies vegas performance employed simulation results live experiments 
analytic approach order analyze dioeerent features vegas reno 
simulations analytic results 
available bandwidth high results claims vegas retransmit fth data reno higher available bandwidth eoecient vegas heavy congestion vegas behaves reno manage eoecient new mechanism detection congestion 
analytic results obtain evolution window size round trip times averages average throughput 
structured follows section brief description reno vegas 
model considered main results obtained section 
section conclude remarks 
detailed calculations proofs delayed appendix 
description reno vegas reno vegas versions tcp aeow control dynamic window schemes types mechanisms detect packet losses duplicate ack timeouts see details 
congestion window cwnd dened number allowed packets bytes sent acknowledged packets bytes transit 
analysis shall consider discrete time epochs interval called mini slot see 
dened recursively follows 
time tcp sends rst packet 
called rst generation packets 
dened time instant acknowledgment returns source 
versions tcp arriving ack causes transmission zero packets depending phase 
dene st generation packets sent source due acks packets nth generation 
dened time instant acknowledgment packet nth generation returns source 
packets belonging nth generation called literature nth window 
shall denote number packets nth window duration nth mini slot ait altman analysis tcp vegas tcp reno ffi gamma control mechanism reno vegas increases decreases window size depending packet acknowledged lost timeout expired source received duplicate acks set min receive window congestion window 
size receive window dened destination determines number packets receive packets sequence destination assume receive window larger congestion window 
packets bytes units window size 
packets considered units 

tcp reno reno adjusts window phase performs slow start increase window source sends packets time ack received 
slow start phase initiated loss detected time mechanism ends window reaches certain level called slow start threshold th set experiments packets 
congestion avoidance phase begins slow start phase loss detected duplicate acks 
tcp continues increase congestion window cwnd time receives ack till reaches receive window till loss occurs uses loss packets detect eventually congested network whichever occurs rst 
sender sends packet starts retransmission timer 
timer expires exceeds value called coarse grain timeout packet acknowledged packet considered lost slow start phase performed setting slow start threshold current window size congestion window 
reno checks timeout ms determines coarse grain timeout keeping estimator round trip time 
describe fast retransmit fast recovery mechanisms 
loss detected receiving duplicate acks case retransmit packet supposed lost subsequent ones waiting retransmission timer expire fast retransmit mechanism congestion avoidance phase performed slow start threshold th set half current window size 
ait altman analysis tcp vegas tcp reno congestion window cwnd set th plus times packet size 
time sender receives duplicate ack increments cwnd packet sends new packet 
rst non duplicated ack arrives cwnd set th fast recovery mechanism 

tcp vegas vegas uses fast retransmit fast recovery mechanisms 
reno manner detect losses detect available bandwidth dioeerent slow start behavior 
congestion window updated phase performed congestion avoidance congestion avoidance phase vegas estimates amount data switches decides increases decreases congestion window packet 
estimation done time mini slot ffi vegas sets basertt minimum measured round trip times including previous mini slots computes expected rate expected cwnd basertt cwnd number bytes transit 
period vegas records sending time distinguished packet bytes transmitted time time acknowledgment received computes sending rate actual cwnd rtt rtt round trip time distinguished packet 
sender thresholds ff fi fl experiments set ff fi fl 
expected gamma actual ff basertt increase congestion window cwnd time receive ack reno 
expected gamma actual fi basertt decrease congestion window packet size nally dioeerence expected gamma actual falls thresholds ff fi keep congestion window unchanged 
analysis slightly dioeerent version corresponding implemented version vegas release rtt considered average round trip time packets acknowledged sending packet till receiving ack 
slow start principle similar reno vegas doubles congestion window ffi ffi congestion window doubled kept unchanged opposed reno ffi slow start phase ends vegas detects queue buildup 
ait altman analysis tcp vegas tcp reno done congestion window reaches value th dioeerence expected gamma actual exceeds certain threshold fl basertt vegas transitions congestion avoidance phase 
helps avoid losses slow start phase may order half current window size case reno 
losses detection vegas extends reno retransmission mechanism follows vegas reads records system clock time packet sent 
ack received vegas reads clock rtt calculation computing mean round trip time mean deviation ne grain timeout value computed way reno adjusted multiple ms recall coarse grain timeout reno remains eoeective vegas 
vegas decides retransmit situations ffl duplicate ack received vegas checks see round trip time rst sequence unacknowledged packet greater ne grain timeout value 
vegas retransmits packet waiting duplicate acks required reno 
ffl non duplicate ack received rst second retransmission vegas checks see time interval packet acknowledged sent exceeds timeout value 
vegas retransmits packet 
technique enables detect losses faster recover multiple drops restarting slow start phase retransmission timer doesn expire 
permits deal problem reno multiple drops window data 
illustrates ideal behavior window variation average round trip time reno vegas 
slow start phase ideal behavior performed session 
see window vegas stabilizes rtt version smoother reno bandwidth fully 
window size reno varies maximum size half maximum size corresponds window size loss occurs 
vertical lines reno window correspond fast recovery mechanism 
ait altman analysis tcp vegas tcp reno time seconds window reno window vegas time seconds rtt reno rtt vegas 
ideal vegas reno congestion window left average round trip time associated right 
src thp dest thp 
tcp source exogenous constant traoec 
model main results consider situation sources sending sink sharing bottleneck 
source controlled represents tcp connection uncontrolled represents constant rate source voice internet tcp 
assume xed packet size default bytes simulations 
packet size xed applications tcp 
fact analyzing xed packet size analysis throughput function time 
shall model describes system evolution function generation slot ffi approach 
approach consists approximating aeow packets aeow 
number packets take non integer values 
precisely fact established slow start phase packets sent bursts trains train represents generation trains periods silence time interval transmission rst packet consecutive generations xed round trip time dened 
similar situation holds ait altman analysis tcp vegas tcp reno congestion avoidance phase 
phases situation occurs long period transmission generation smaller characterized fact rst packet generation nds queue empty 
reaches shall continuous transmission silent periods queue empty anymore 
shall approximate analysis transmission packets train continuous aeow rate thp 
thp zero silent periods 
approximation imply particular number packets queue real valued integer valued viewed 
shall notations 
dene max delta maximal size attained reno window loss occurs 
vmax delta window size vegas stabilizes 
max delta maximal size attained vegas window maximum vmax 
delta total number packets queue router rst packet nth window arrives 
delta size 
delta service rate router 
delta rate exogenous packets transmitted 
assume 
thp delta rate packets nth window transmitted 
thp delta rate packets nth window served 
delta maximum bandwidth controlled source transmit due maximum bandwidth link connecting source rst node path 
shall assume large slow transmission packets 
delta time transmission packet reaches queue 
delta time departure packet queue till reaches destination 
delta round trip delay queue empty time transmission packet ack received including service time 
delta gamma packet empty system round trip delay plus service time gamma smallest round trip delay 
rtt delta average round trip delay taken nth window 
thp delta average throughput 
ffi delta time takes nth window acknowledged 
time receiving ack packet sent previous window gamma ait altman analysis tcp vegas tcp reno arrival time ack packet sent actual 
ffl wn delta rtt gamma average excess time window rates bandwidths expressed packets second 
approximation implies property 
ffl queue empty time period burst controlled packets arrives 
shown inductively 
burst size rst time transmitted packets spaced time period transmission rate controlled packet system gamma rate packets served lower bounded gamma gamma obtained exogenous traoec full priority controlled traoec 
acknowledgments return source rate smaller gamma generation packets transmitted source rate smaller gamma assume packets nth generation transmitted rate gamma argument acknowledgments return rate gamma packets generations transmitted rate gamma case may happen vegas 

round trip time duration mini slot compute ffi time necessary receive acknowledgments nth window rtt average round trip time window congestion avoidance slow start phase 
proof theorem appendix theorem 
consider congestion phase 
vegas window remains constant stabilizes rtt ffl wn gamma ffi vegas reno window increases ffi gamma gamma gamma gamma ait altman analysis tcp vegas tcp reno rtt gamma gamma gamma gamma max max max gamma max gamma gamma 
gamma max gamma gamma gamma ii slow start reno ffi gamma gamma gamma rtt gamma gamma gamma gamma gamma iii vegas slow start doubles congestion window ffi distinguish cases case vegas doubles window ffi ffi gamma gamma gamma ait altman analysis tcp vegas tcp reno rtt rtt gamma gamma gamma gamma gamma gamma window remains constant ffi ffi gamma gamma gamma gamma rtt rtt gamma gamma gamma gamma equations gamma ffi ffi gamma gamma gamma gamma relation shows excess time vegas take send amount data reno slow start phase takes excess time reno 
excess time helps vegas keep data network avoid successive losses may happen case reno average rate vegas reno 
happens mainly traoec generated vegas continuous queue empties 
case vegas helps queue drain keeping window size constant round trip time 
packets sent size window doubled nd queue size important case reno 

slow start threshold vegas maximum window size compute maximum window size vegas window size slow start phase order get throughput 
proof corollary appendix ait altman analysis tcp vegas tcp reno corollary 
consider vegas 
congestion window stabilizes reaches vmax gamma ff vmax gamma ff ii window threshold th log min th integer part min th fl gamma gamma theta flc ct gamma gamma fl gamma gamma fl gamma gamma gamma th fl fl ct gamma theta gamma fl gamma fl fl ct gamma 
average round trip time throughput compute throughput vegas reno making assumptions respectively available bandwidth high gamma ff see theorem vegas window stabilizes reaching vmax 
ii congestion avoidance phase loss window reno congestion control algorithm occurs detected receiving duplicate acks 
note assumption ii implies nitely slow start phases session periodic cyclic behavior congestion avoidance phase 
fact desirable operation reno 
assumption describes desirable operation vegas 
case assumption hold delayed theorem 
analyze situations ii hold making assumptions see 
theorem implies ait altman analysis tcp vegas tcp reno corollary 
consider vegas assumption 
window size stabilizes vmax throughput thp gamma average round trip time rtt vmax gamma consider reno assumption ii 
distinguish cases max gamma corresponds case queue empty average throughput thp cycle duration total number packets successfully sent average round trip time respectively thp gamma max max gamma max max max gamma max gamma gamma max gamma duration cycle gamma gamma gamma max max gamma gamma max gamma gamma gamma amount data sent safely sent sent acknowledged cycle max gamma gamma max gamma max gamma average round trip time packet equals gamma max gamma gamma max gamma gamma max gamma gamma average throughput thp proof corollary appendix ait altman analysis tcp vegas tcp reno 
simulations numerical results table summarizes dioeerent results simulations results obtained analytically rtt th maximum window size vmax chosen parameters vegas window stabilizes reaches vmax parameters wth rtt min th ana sim ana sim err ana sim err bmin table simulation analytic results table shows analytic results close simulations relative error gamma simulation doesn exceed cases window size rtt fact maximum window size obtained simulations integer increase window segment received ack rtt words gamma ff vmax gamma fi integer part relative error close gamma ff 
column compute min size vegas window stabilize parameters vegas behavior reno 
rtt taken simulation value average varies window analytic value computed vmax obtained simulation 
min th minimum size window slow start phase equation 
ait altman analysis tcp vegas tcp reno table compute average rtt packet average throughput number packets sent divided time 
results see analytic values close simulations throughput expect relative error average round trip time close maximum window size vegas see corollary equation 
parameters thp rtt analy sim err analy sim err losses table average throughput rtt simulation analytic results vegas results concerning reno analytical simulation seen table 
relative error throughput approximatively round trip time doesn exceed 
fact depends number losses occurred simulation fast recovery mechanism time spent detecting taken account analytical results 

vegas behavior denition 
congestion control algorithm behavior cyclic behavior congestion window continues increase loss occurs 
ait altman analysis tcp vegas tcp reno parameters thp rtt analy sim err analy sim err losses table average throughput rtt simulation analytic results reno theorem 
ff gamma ff fi behavior estimate available bandwidth 
proof size congestion window depends strongly variation rtt mean round trip time taken window 
mean exceed suoeciently small available bandwidth small size congestion window continues increase loss occurs 
congestion avoidance phase loss occurs window reaches max vegas increments window ffi expected gamma actual ff 
average round trip time window increases window size increases vegas loss occurs vegas window reaches bottom threshold ff stabilizes max gamma max rtt ff equivalently ffl max fft max gamma ff substituting ffl max equivalent fft gamma gamma ff gamma ff gamma gamma fft gamma solving obtain suoecient necessary condition ff gamma max ff 
ait altman analysis tcp vegas tcp reno 
heavy congestion lim 
ff gamma follows theorem size vegas operate suoeciently close time seconds vegas win time seconds reno win 
vegas reno congestion window ms size pkts presence video traoec 
illustrates example vegas behaves reno size pkts 
real simulator introducing vegas function simulate model described earlier star war video traoec traces exogenous traoec 
exogenous source assumed send frame ms divides frames packets xed size bytes 
seconds simulation average rate exogenous source pkts sec 
capacity bottleneck set pkts sec 
see behavior window relatively vegas reno size larger computed theorem packets 
see higher available bandwidth eoecient vegas time sec 
generalization consider multiple connections running vegas share bottleneck node constant exogenous traoec model discussed tcp vegas connections single connection 
assume queue length exceeds maximum size connections experience loss synchronous losses 
total rate vegas connections windows stabilize remains equal gamma reasoning vegas behavior reno maximum window size vmax connection satises equation 
round ait altman analysis tcp vegas tcp reno trip time connection max gamma max rtt ff max rtt ff max rtt ff gamma ff nff gamma previous theorem generalized case multiple connections synchronous losses follows case vegas connections synchronous losses sharing bottleneck node constant exogenous traoec vegas ff fi behavior reno estimate available bandwidth nff gamma reason vegas performances decrease number active connections increases 

studied behavior tcp vegas tcp reno 
considered simple model allowed investigate dioeerent features algorithm understand behavior vegas presence multiple connections dioeerent network conditions 
tcp vegas aims detect available bandwidth provoking losses reno 
seen vegas performances queue sizes intermediate routers large enables full utilization link keeps sending rate smoother 
available bandwidth suoeciently large vegas behavior reno manage eoecient new mechanism congestion detection 
computed dioeerent performance criterions average round trip time window size phase average throughput 
simulations hypothesis errors analytical results negligible 
performance criterions evaluated model fairness stability 
constitutes directions 
ait altman analysis tcp vegas tcp reno ait altman problems tcp vegas tcp reno de architectures pour les communications paris dec 
ahn danzig liu yan experience tcp vegas emulation experiment proc 
sigcomm symp aug 
altman bolot nain brown analysis tcp ip flow control mechanism speed wide area networks ieee conference decision control dec new orleans 
brakmo 
tcp vegas release nov 
available ftp ftp cs arizona edu new protocols vegas tar brakmo peterson tcp vegas congestion avoidance global internet ieee journal selected areas communications vol :10.1.1.41.8565

floyd tcp successive fast retransmits lawrence berkeley laboratory technical report february 
available anonymous ftp ftp ee lbl gov papers ps 
van jacobson congestion avoidance control acm sigcomm pp 
van jacobson modied tcp congestion avoidance algorithm list interest received monday april 
jacobson peterson brakmo floyd problems arizona vegas mailing list tf discussion tcp vegas 
keshav real network simulator department computer science uc berkeley technical report 
lakshman madhow performance analysis window aeow control tcp ip eoeect high bandwidth delay products random loss ifip transactions high performance networking north holland pp 

lakshman madhow window error recovery aeow control slow acknowledgment channel study tcp ip performance submitted publication 
richard stevens tcp ip illustrated volume 
addison wesley 
appendix appendix proof theorem reno mini slot time ffi ith window incremented packet congestion avoidance phase doubled slow start phase 
gamma th gamma vegas congestion avoidance phase window may remain constant shall consider addition case gamma ait altman analysis tcp vegas tcp reno congestion window increases slow start phases packets window sent gamma received packet sent receiving ack gamma gamma thp 
transmission time burst time necessary send packets belonging receiving time burst gamma time necessary receive serve packets belonging gamma plus write thp gamma gamma thp gamma gamma 
thp gamma thp gamma shall approximation 
replace instantaneous input rate burst average burst similarly output rate 
burst transmission thp thp thp fact long controlled packets transmitted burst periods queue nonempty property output rate source proportional input rate 
holds silent periods queue doesn empty 
consider slot window remains constant gamma vegas 
thp thp gamma combining get thp thp gamma rst packet nds empty queue time takes reach router sending time exceeds service time remaining packets gamma router 
equivalent gamma gamma thp gamma gamma thp gamma thp gamma gamma gamma number controlled packets queue nonempty gamma constant time window remains constant 
due fact total input rate equals total output rate ait altman analysis tcp vegas tcp reno aeow packets continuous time silent periods 
packets nd queue size thp gamma thp gamma gamma gamma thp gamma gamma thp gamma means number controlled packets transit just transmitting rst packet equals gamma rst packet sent rst ack packets belonging gamma received 
moment number packets belonging gamma served equals gamma delta thp gamma gamma thp gamma 
rst packet spends reach router time thp gamma packets gamma served 
number controlled packets remain queue rst packet arrives proportional input rate thp gamma equals gamma minus number packets belonging gamma served 
thp thp gamma gamma get gamma gamma ffi rtt gamma ffl wn gamma ffi rtt vegas window exceed max max get 
easily checked max ffl max 
congestion phase reno vegas window increases thp thp obtained replacing gamma gamma 
yields approximatively thp gamma gamma thp gamma send packet received ack ack packets sent assume discussed rates constant burst generation 
rst packet nds empty queue gamma gamma thp gamma gamma thp gamma thp gamma gamma ait altman analysis tcp vegas tcp reno gamma gamma gamma gamma gamma gamma rst packet nds empty queue queue empty window wait time packet number delta delta delta gamma thp gamma gamma thp gamma gamma gamma packet number gamma sent gamma nd packet ffi gamma gamma gamma gamma rtt wn gamma gamma gamma max window size round trip time packet gamma st equals rst equation obtained 
queue nonempty gamma ffi thp gamma gamma gamma gamma average round trip time window congestion phase window increases packets nth window sent long acks packets belonging window gamma received 
time receive ack rst packet gamma send time receive time packet number delta delta delta gamma respectively gamma gamma gamma gamma gamma gamma gamma gamma round trip time packet gamma gamma gamma gamma gamma gamma gamma gamma ait altman analysis tcp vegas tcp reno packet gamma st sent gamma nd packet ack received thp gamma gamma round trip time gamma gamma gamma get rtt wn gamma rtt gamma gamma max window size round trip time packet gamma st equals get approximatively eq 
ii slow start phase thp thp gamma thp 
thp thp gamma solution 
get gamma gamma solution equation depends initial condition depends 
receiving rst ack send packets separated thp thp combining get gamma follows induction gamma gamma wn gamma gamma delta delta delta gamma gamma 
gamma 

gamma solution converges thp thp gamma rst packet nth window nds empty queue gamma thp gamma thp thp gamma gamma ffl rst packet nds empty queue wn gamma ait altman analysis tcp vegas tcp reno rtt packet number gamma delta delta delta packets numbered gamma exceeds gamma gamma gamma gamma gamma gamma gamma wait time time served minus arrival time 
wait time packet number gamma equals gamma gamma gamma gamma gamma gamma gamma gamma average round trip time window slow start phase reno rtt wn gamma gamma gamma get 
ffi equals round trip time packet window plus sent receiving ack packet sent window gamma round trip time plus wait time computed ffi gamma gamma gamma ffl queue nonempty gamma ffi thp gamma gamma packets window sent sender begins receive acks sent window gamma 
arrival time ack rst packet sent previous window resp 
send resp 
arrival time packet resp 
ack 
packet number gamma delta delta delta packets numbered gamma sent receive ack packet sent time gamma gamma thp gamma gamma ack received gamma thp gamma ack rst packet received time thp gamma gamma gamma rtt gamma gamma gamma ait altman analysis tcp vegas tcp reno packet number gamma sent packet gamma send packets received ack gamma gamma ack received thp gamma gamma wn gamma gamma rtt gamma gamma gamma get rtt wn gamma gamma gamma gamma gamma gamma iii vegas slow start phase distinguish cases window doubles size ffi case send packets received ack 
window remains constant send packet received ack 
cases performed alternative way time 
thp resp 
thp rate packets nth window transmitted resp 
served rst case thp resp 
thp rate packets nth window transmitted resp 
served second case 
rst case send packets received ack packet sent second case thp thp second case send packet received ack packet sent rst case thp thp thp thp thp thp thp thp combining get thp thp thp thp thp ait altman analysis tcp vegas tcp reno thp gamma solution 
gamma recursively prove gamma gamma gamma gamma 
gamma 

gamma solution converges thp gamma get thp gamma thp gamma thp gamma thp gamma window doubles rst packet window nds empty queue gamma gamma thp gamma thp thp gamma theta thp gamma remains constant rst packet nds empty queue gamma gamma thp gamma thp thp gamma theta thp gamma dioeerent rates case compute average round trip time window rtt time takes window acknowledged ffi steps case reno 
ait altman analysis tcp vegas tcp reno appendix proof corollary vegas congestion window stabilizes reaches vmax ff vmax gamma vmax ffl fi fft vmax gamma ff ffl fit vmax gamma fi ffl average round trip time nth window equals vmax vmax solution inequality substituting get fft vmax gamma ff vmax gamma gamma fit vmax gamma fi obtained solving inequality 
ii slow start vegas congestion window doubles size ffi expected gamma actual fl fl taken equal th satises rtt gamma fl th gamma fl substituting get cases gamma th th solution th gamma fl gamma gamma th gamma fl tc gamma gamma th satises th gamma fl fl ct gamma th fl gamma solving inequalities equalities inequalities yield 
recall doubles ffi th equals smallest power satises min th yields 
appendix proof corollary vegas assumed previously window stabilizes duration slow start phase negligible thp gamma average round trip time rtt vmax gamma ait altman analysis tcp vegas tcp reno easy compute amount data successfully transmitted average round trip time dene exactly transient behavior 
simplify calculations assumption ii reno case multiple drops taken account 
supposed loss window burst occur slow start phase performed time session 
follows focus calculations behavior 
slow start performed time duration relatively short phase neglected periodic behavior congestion phase 
congestion phase compute amount data sent time necessary data acknowledged average round trip time packet cycle max till loss occurs max 
distinguish cases ffl max gamma queue doesn empty wmax wmax ffi wmax wmax gamma wmax wmax wmax wmax theta rtt wmax wmax gamma gamma wmax wmax gamma gamma ffl max gamma queue empties cycle indices correspond period queue empty refer period queue empty 
period queue empty gamma wmax gamma wmax gamma ait altman analysis tcp vegas tcp reno average round trip time queue empty equals second period queue empty wmax gamma wmax gamma gamma wmax gamma theta rtt wmax gamma gamma gamma wmax gamma gamma gamma 
