sdsi linked local name spaces martn abadi digital equipment systems research center lytton avenue palo alto ca usa ma pa dec com april rivest lampson introduced sdsi simple distributed security infrastructure 
important innovations sdsi linked local name spaces 
suggests logical explanation sdsi local name spaces complement operational explanation sdsi definition 
contents linked local names spaces concepts notations keys names 
compound names 
statements 
bindings meanings 
general form bindings 
logic linked local name spaces syntax 
axioms 
example 
simulating name resolution 
semantics self appendix proofs linked local names spaces rivest lampson introduced simple distributed security infrastructure sdsi 
important innovations sdsi linked local name spaces 
sdsi principal name space names bound values possibly name spaces principals 
example particular local name space name lampson may associated public key kl 
consequence binding statement signature verified kl viewed coming lampson 
addition name rivest may associated lampson rivest 
consequence binding lampson says rivest public key kr statement signature verified kr viewed coming rivest 
compound names lampson rivest allow name space import bindings 
linked local name spaces offer promise combining advantages pgp style local certification hierarchical certification schemes see :10.1.1.44.6276
particular sdsi certification egalitarian need assume global trust global notion identity inherent public key cryptography 
hand sdsi take advantage structured trust relations naming conventions exist 
precise rules local names simple example may suggested 
rules deal compound names lampson rivest secretary lampson rivest students dns names internet mail names 
sdsi definition gives operational account local names 
basically explains local names giving algorithm name resolution maps names meanings 
suggests alternative account local names 
account logic express compound names lampson rivest assert lampson rivest bound public key kr 
ask lampson lampson lampson lampson rivest secretary lampson rivest secretary 
questions addressed independently binding lampson name resolution possible lampson bound 
purpose logic explain local names general self contained way requiring particular implementations 
sdsi name resolution algorithm recast sound proof method logic 
hopefully contribute understanding naming sdsi related systems simple public key infrastructure spki 
section introduces basic concepts notations 
section develops logic linked local name spaces proves soundness sdsi name resolution algorithm respect logic 
contains example 
section defines semantics logic 
semantics serves mathematical tool precise counterpart informal explanations naming 
section concerns self 
appendix contains proofs 
seen descendant lampson :10.1.1.112.4473
develops calculus principals statements analogous section explore sdsi approach naming 
time september april sdsi evolving 
comprehensive informal description sdsi 
document sdsi definition available preliminary version written useful 
months sdsi integrated spki 
briefly discusses aspects resulting design 
definitions sdsi spki sophisticated long 
attempt cover fully ignoring facets definitions focuses linked local name spaces 
concepts notations section informal discussion basic concepts related linked local name spaces 
main goal section review ideas sdsi suitable level abstraction clarify meanings 
section introduces notations rest 
keys names hierarchical certification schemes rely general agreement roots certification hierarchies names roots interpreted similarly name spaces 
hand egalitarian certification schemes principal introduce names private 
sdsi supports styles naming 
study sdsi deal global local ways referring principals global identifiers understood equally name spaces 
global identifiers include public keys global names 
public keys global principals agree value public key see agree statement signed inverse public key see public key statement 
addition names certain special roots global special designers sdsi example dns 
global name represents root dns hierarchy 
local names auxiliary names principal name space 
example lampson may local name bound value 
value global identifier public key local name 
principals may disagree value lampson may agree statement comes lampson 
assume set global identifiers disjoint set local names symbols range symbols compound names sdsi compound names basic mechanism linking local name spaces 
compound name expression form ref 
abbreviated 

may global identifier local name compound name 
intuitively principal called name space principal called current name space 
general 
principal called name space 
principal called current name space 
going intuitions compound names questions immediately arise ref 
sense 
sdsi allow case 
meaning ref current principal trying name resolution 
ref 
sense 
sdsi explicitly allows case says ref equivalent argument ref interpreted current name space 

asserted sdsi consistent 
valid logic 

sdsi assume unreasonable example case spouse 
light properties consider ref binary case loss generality recover expressiveness nullary case introduce construct self replace ref self 
postpone study self section 
unary case writing ref simply write case reducible binary case example regard abbreviation 
set principal expressions set containing principal expression syntactic representation principal 
symbols range statements sdsi concerned statements principals 
statements certificates requests service particular 
statements understood respect current name space 
true statement may true forever 
consequently certificates contain temporal information indicating periods validity 
simplicity prefer away issues time example interesting questions early versus late binding 
statements understood respect arbitrary fixed time current time 
write says indicate principal denoted statement public key statement signing textual representation private key corresponds bindings meanings name space set bindings names values 
notation represent binding name value name value form name value pair 
value arbitrary object case relevance value principal expression 
name space name bound principal expression statement taken statement binding defining current name space 
may view binding assertion equality 
example may bind local name lawyer principal expression ted lawyer lawyer ted lawyer represent real principal 
interpreting binding equality simple interpretation runs trouble 
suppose example different public keys kl kl values local name lampson name space real lampson controls keys 
sdsi allows local name undefined bound value 
principal may assign value local name issuing corresponding certificate 
local name valid name value certificate new certificate augments old sense sdsi application deemed act correctly uses name value binding certificate 
little hard sense equalities kl lampson kl kl kl different 
equalities may sense view kl lampson kl ways referring real principal 
clear appropriate semantic intuition 
principles sdsi principals public keys equalities kl lampson kl put interesting situation principal different keys 
clearly situation principle principals public keys understood loosely 
section gives stronger formal argument equality interpretation 
light difficulties may consider weaker interpretation binding 
weaker interpretation possible bindings need symmetric way 
example binding lawyer ted lawyer may turn statement ted lawyer statement lawyer vice versa 
weaker interpretation binding simply assertion speaks relation :10.1.1.112.4473
speaks statement statement 
equality speaks relation symmetric 
weaker interpretation binding lawyer ted lawyer means ted lawyer speaks lawyer lawyer ted lawyer 
similarly binding lampson kl kl means kl kl speak lampson imply equality lampson kl kl generally favors speaks interpretation binding 
strictly necessary commit specific interpretation 
suffices assume properties binding compatible interpretation 
spki relies speaks relation enhances elaborate finegrained notion authorization 
spki express principal speaks principal speaks statements particular class example requests particular service 
general form bindings suppose name space contains binding sysadmin bindings form sysadmin 
suppose says name space may deduce sysadmin corresponds may fact deduce 
situation useful generalize relation write simple name 
example may write sysadmin order capture association compound name sysadmin key name resolution implemented cache cache record facts sysadmin general means bound current name space result explicit binding sysadmin consequence bindings sysadmin 
logic linked local name spaces section define logic concepts notations section 
explain sdsi name resolution algorithm particular proof method logic show sound 
syntax introduce syntax statements building section 
assume set atomic statements written 
set formulas statements set atomic statement formula formulas write implication abbreviation principal expressions formula principal expression formula says formula 
symbols range set formulas 
intuitive meanings principal expressions says explained section 
discussed formulas understood respect current name space current time 
example kl says rivest kr formula kl kr global identifiers rivest local name 
formula expresses assertion signed inverse public key kl 
assertion rivest bound kr 
binding asserted local name space associated kl universally 
axioms give proof system proof system components 
standard axioms rules propositional logic axiom rule 
standard axiom rule modal logic says says says says useful manipulating statements scope says need 
axiom expresses statements principal says closed consequence rule expresses principal says provable statements 

new axioms deal linked local name spaces listed 
reflexivity transitivity express binding relation reflexive transitive 
left monotonicity means bound bound bound may bound name space 
expresses global identifier arbitrary principal expression bound 
bound values 
axiom justified reflexivity transitivity left monotonicity global identifier 
associativity linking says local name 
speaking says says axioms linked local name spaces 
associativity postulates associative 
formulas assume symmetric 
need second formula 
linking expresses says bound implicitly name space bound implicitly current name space 
trusted assertions name space 
speaking expresses bound statement taken statement axioms may intuitively clear 
case inevitable hard justify sdsi name resolution algorithm assuming properties axioms express 
axiom system extended ways 
particular add converse global identifier generalization linking says arbitrary principal expression 
extensions may reasonable 
interestingly fundamental conflict 
instance suppose formula kl says dns 
kl kl public key formula expresses kl says dns 
bound kl suspicious possible statement 
derive kl dns 
kl kl conclude dns 
kl 
undesirable consequence means strange statement arbitrary key kl pollute current name space 
speaking binding dns 
kl statement kl viewed statement dns kl hijack dns 
incompatible 
possible addition symmetry axiom 
axiom motivated equality interpretation binding 
interestingly undesirable consequences 
instance suppose formulas kl says kl kl says dns local name 
linking transitivity obtain kl kl kl dns 
new symmetry axiom transitivity conclude dns 
kl 
statements arbitrary key kl pollute current name space 
provides strong argument adoption symmetry setting logic equality interpretation binding 
arguments somewhat plausible axioms lead catastrophic results 
bit order 
know axiom system lead exactly results 
prove corollary section 
show matter kl says derive dns 
kl 
proof construed final guarantee security logic sdsi 
useful sanity check 
example order illustrate logic example 
applying sdsi abbreviation write smith aol com shorthand dns 
com aol smith note omitted parentheses expression dns 
com aol smith 
axiom associativity fortunately worry expression parenthesized 
omit parentheses rest example justification 
consider bindings current name space certificates 
local name bound public key 
local name broker bound smith 
certificate signed inverse says local name bound public key 
certificate signed inverse says local name smith bound smith aol com 
logically represent bindings certificates formulas 

broker smith 
says 
says smith smith aol com formulas hypotheses construct semi formal proof 
says hypotheses speaking 

step linking 

step transitivity 

says smith smith aol com hypothesis step speaking 

smith smith aol com step linking transitivity smith aol com shorthand dns 
com aol smith dns 
global name 

broker smith aol com hypothesis step transitivity 
obtain local name broker bound smith aol com 
lampson examine proof examine audit trail 
identify hypotheses contribute 
case clear example certificates relevant trusted issued appropriately 
name broker may acl 
signed request may need determine request comes broker order access control decision 
axiom speaking binding broker smith aol com suffices determine signature request ref global identifier return local name assumptions includes return ref compound name return ref ref fail name resolution algorithm 
smith aol com 
determination requires chain certificates starting root dns hierarchy 
result broker smith aol com derived evaluated chain certificates 
simulating name resolution name resolution process mapping principal expression global identifier 
name resolution happens context assumptions particular assumptions values local names 
form assumptions may vary depending protocols architecture 
consider set assumptions forms says local name principal expression global identifier 
assumptions form correspond bindings current name space 
form says correspond certificates bindings name spaces 
typically public key says implemented certificate signed inverse conjunction assumptions 
easy exercise include bindings global names example binding dns 
corresponding public key 
sdsi name resolution specified recursive algorithm 
core algorithm nondeterministic function ref returns meaning name space associated argument may current principal cp short global identifier gives adaptation sdsi definition ref 
fairly faithful simpler original example deal quoting encrypted objects 
write assumptions set assumptions assumptions cp consists assumptions form assumptions consists assumptions form says 
computation ref nondeterministic assumptions may include bindings form say ref yields possible outputs ref 
section show ref simulated logic 
carry steps 
define new set rules called name resolution rules 
rules rely notation logic constitute separate proof system 
establish name resolution rules equivalent ref 
second step show name resolution rules sound respect logic 
name resolution rules simple rules designed proving formulas form 

understand set rules algorithm 
algorithm starts input assumptions finds suitable exists 
algorithm case analysis form rule base case global identifier rule local name local name rules form base case local name ref case analysis form global identifier remaining rule ref applies form despite apparent differences name resolution rules ref equivalent proposition shows proposition assume set bindings form cp global identifier conjunction formulas binding cp says binding principal expression global identifiers provable name resolution rules ref cp yields provable name resolution rules ref yields proposition relates name resolution rules logic section base case base case local name conjunct local name says conjunct ref ref name resolution rules 
proposition name resolution rules sound respect logic 
provable rules provable logic 
conclude corollary name resolution algorithm sound respect logic 
proposition principal expression ref cp yields global identifier provable logic 
converse property hold provable logic ref cp yield logic powerful algorithm permits reasoning full name resolution impossible 
easy forbid reasoning beneficial harmless 
example logic axiom yields lampson kr kr need additional hypotheses 
contrast computation ref cp lampson kr fails name lampson bound 
similarly logic reason lampson kl rivest lampson rivest rivest kl rivest independently certificates kl rivest 
certificates algorithm fails 
differences logic algorithm may surprising 
particular assumptions lampson kl lampson kl kl says ron rivest kl says rivest kr logic enables derive lampson ron kr 
logical proof relies axiom speaking example go lampson kl kl says ron rivest lampson says ron rivest 
contrast ref cp lampson ron yield kr 
definition spki incorporates sdsi names 
definition write kl says ron rivest kl says kl ron kl rivest 
generally consider bindings form principal expression right starts global identifier 
interestingly restriction suffices block proof lampson ron kr 
logic restriction worth investigating 
semantics section define semantics logic section 
standards logicians semantics elementary 
probably enhanced complicated ideas modal logic literature see 
despite simplicity semantics helpful refining rules section useful demonstrate corollary 
recall set global identifiers set local names set principal expressions set atomic propositions 
semantics assumes set mapping subsets mapping subsets mapping truth values 
vocabulary modal logic set possible worlds 
choice set matter purposes 
matters subset subset indicates true false define subset follows 
obtain relation 
relation simply composition relations statement write mean true definition true iff true true iff false true iff says true iff true equality interpretation binding interpretation obviously symmetric 
interpretation guarantees speaks sense says says statement valid true choices proposition establishes soundness logic section respect semantics section 
converse proposition completeness probably false 
proposition provable logic valid 
soundness implies consistency corollary provable logic 
sanity check show undesirable formulas discussed section derivable logic 
show formula dns 
kl derived hypotheses hypothesis lists normal statement dns 
binding local names principal expressions may able generalize corollary include normal statements 
second hypothesis lists statements kl possibly goal hijacking dns statements completely arbitrary 
corollary guarantees despite arbitrary statements kl derive dns 
bound kl 
corollary assume kl dns 
distinct global identifiers 
formula form dns 
says 
dns 
says 
local names 
arbitrary principal expressions 
formula form kl says 
kl says 
arbitrary statements 
formula dns 
kl derivable logic 
self section consider construct self notation ref arguments ref 
intuitively self represents current principal 
sensible add self set principal expressions extend logic axioms identity self self self self easy extend semantics validating new axioms 
suffices self 
formal properties self may appear fairly dull construct 
new axioms show eliminated expressions semantics self routine 
self convenient 
example enables write formula says self 
case public key ted statement corresponds certificate binds ted certificate need mention explicitly 
refer self public key verifying signature certificate 
says ted self derive ted self ted respect says ted self effect says ted wire representation says ted self different 
continuing example assume edward holds current name space 
says ted self obtain edward says ted self edward ted edward 
nice minor result reached says ted 
new axioms self bound 
say truthfully self 
speaks edward edward say self 
somewhat consequence apparently sensible hypotheses true statement leads suspicious statement edward 
hand edward statement harmless edward authority convince speaks fact edward bound vice versa 
summary construct self sdsi ref may useful occasionally 
potential surprising relative names handled care 
sdsi linked local name spaces appear promising innovation 
attempts contribute understanding informal explanations development logic 
logic generalizes sdsi algorithm 
permits evaluation compound names reasoning names bindings 
having logic synonymous security logic complement operational approach provide perspective examine security issues 
ron rivest useful comments draft 
discussions carl ellison butler lampson ron rivest generally helpful 
appendix proofs proposition assume set bindings form cp global identifier conjunction formulas binding cp says binding principal expression global identifiers provable name resolution rules ref cp yields provable name resolution rules ref yields proof direction proof induction execution ref kinds 
suppose algorithm terminates immediately returning global identifier case obtain rule base case rule base case 
local name assumptions include algorithm invokes recursively ref returns induction hypothesis provable cp provable obtain rule local name rule local name 
suppose 
algorithm invokes recursively twice 
recursive invocation ref yields result induction hypothesis provable cp provable second recursive invocation ref yields final result induction hypothesis provable 
obtain rule ref rule ref 
direction proof induction proof 
case name resolution rules base case trivial ref cp yields base case trivial ref cp ref yield local name induction hypothesis ref cp yields implies ref cp yields bound local name induction hypothesis ref yields implies ref cp ref yield bound name space 
ref induction hypothesis ref cp yields ref yields ref cp yields case happens global identifier need prove ref yields ref cp yields ref yields ref induction hypothesis ref cp ref yield ref yields prove ref cp yields invocation ref cp turns invocation ref ref cp ref cp yields turns invocation ref yields prove ref yields immediate consequence facts ref yields ref yields proposition name resolution rules sound respect logic 
provable rules provable logic 
proof proof induction proof rules 
case rules 
base case axiom reflexivity 
base case axiom 
note special case needed 
local name axiom transitivity 
local name axioms linking transitivity 
ref axioms left monotonicity transitivity 
ref axioms associativity left monotonicity transitivity 
note associativity direction special case 
proposition provable valid 
proof propositional axioms rules validated propositional connectives interpreted usual manner 
standard axiom rule modal logic 
reflexivity transitivity validated straightforwardly 
associativity holds essentially composition binary relations associative 
remaining axioms require small arguments global identifier independent determined equality holds 
linking says true true true 
speaking true says true true true says true 
corollary assume kl dns 
distinct global identifiers 
formula form dns 
says 
dns 
says 
local names 
arbitrary principal expressions 
formula form kl says 
kl says 
arbitrary statements 
formula dns 
kl derivable logic 
proof formula question derivable valid proposition 
show valid 
suffices give set element functions true dns 
kl false 
trivial choices suffice 
singleton kl dns 
local names 
remaining properties irrelevant 
true true kl dns 
kl false dns 
kl 
martn abadi 
sdsi linked local name spaces 
th ieee computer security foundations workshop pages 
ieee computer society june 
martn abadi michael burrows butler lampson gordon plotkin 
calculus access control distributed systems 
acm transactions programming languages systems october 
matt blaze joan feigenbaum jack lacy 
decentralized trust management 
proceedings ieee symposium security privacy pages may 
ccitt 
blue book recommendation iso framework 
ccitt 
carl ellison 
spki certificate documentation 
web pages www clark net pub cme html spki html 
gasser andy goldstein charlie kaufman butler lampson 
digital distributed system security architecture 
proceedings national computer security conference pages october 
robert goldblatt 
logics time computation 
number csli lecture notes 
csli stanford 
adam grove joseph halpern 
naming identity epistemic logics propositional case 
journal logic computation 
butler lampson martn abadi michael burrows edward wobber 
authentication distributed systems theory practice 
acm transactions computer systems november 
ronald rivest butler lampson 
sdsi simple distributed security infrastructure 
version theory lcs mit edu rivest sdsi html replicated www research digital com src personal martin abadi papers sdsi html october 
edward wobber martn abadi michael burrows butler lampson 
authentication taos operating system 
acm transactions computer systems february 
philip zimmermann 
official pgp user guide 
mit press 

