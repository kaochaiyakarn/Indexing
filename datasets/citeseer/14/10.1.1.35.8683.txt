codes graphs amin shokrollahi bell laboratories room mountain ave murray hill nj usa amin research bell labs com 
give brief theory low density parity check codes decoding 
emphasize case correcting erasures best understood accessible case 
describe developments 
want give brief theory low density parity check codes ldpc codes short 
codes introduced early gallager phd thesis 
built sparse bipartite graphs manner describe 
turns analysis codes requires tools methods graph theory common knowledge early 
fact may explain extent ldpc codes completely forgotten invention 
turned major impacts theoretical analysis codes came coding theory theoretical computer science appears proceedings conference theoretical aspects computer science 
deliberately brief history ldpc codes concentrate developments 
topic complete mentioning names pinsker margulis russian school realized potential ldpc codes name tanner re invented extended ldpc codes 
fact re invention recurring theme advent powerful class turbo codes researchers started study types codes fast encoders decoders perform rates close theoretical upper bounds derived shannon 
instance mackay re invented versions ldpc codes derived interesting useful properties 
anybody wants field gives fresh detailed look various aspects ldpc codes 
time coding theorists struck performance turbo codes starting remember ldpc codes codes re invented time theoretical computer science community 
graphs useful objects field may get impression field motivated style file lecture notes computer science documentation derived graphs 
hand linear codes shown useful construction probabilistically checkable proofs 
idea combine concepts 
sipser spielman exactly 
interesting results shows performance codes constructed directly related expansion properties underlying graph 
russian school known sipser spielman completely unaware 
useful extremely advantageous property ldpc codes easy design various efficient encoders decoders 
done gallager largely rigorous analysis 
algorithms re invented improved analyzed 
instance sipser spielman give simple encoder decoder run time time respectively block length code see definition parameter 
expansion property described translates error performance algorithm code 
spielman applies idea decrease encoding time linear uses best known explicit expanders construct codes efficient encoders decoders asymptotically 
describe technical term means leave construction asymptotically codes difficult assume efficiently encodable decodable 
motivated practical problem sending packets high speed computer networks group uc berkeley international computer science institute berkeley consisting luby mitzenmacher spielman designed simple algorithm correcting erasures ldpc codes :10.1.1.35.5754
similar codes constructed alon luby performed poorly practice 
major impacts subsequent ldpc codes :10.1.1.35.5754
contained time rigorous analysis probabilistic decoding algorithm ldpc codes 
analysis greatly simplified luby mitzenmacher method developed core analysis ldpc codes complicated error models 
second proves highly irregular bipartite graphs perform better regular graphs method choice particular simple decoder :10.1.1.35.5754
goes codes perform better graphs sampled randomly set graphs particular degree distribution codes transmit rates arbitrarily close capacity erasure channel 
words decoder recover portion encoding arbitrarily close lower bound dictated length uncoded message 
short say sequences degree distributions capacity achieving 
model erasures realistic applications data transfer high speed networks codes typically situations know positions errors 
problem harder 
style file lecture notes computer science documentation approach equipped new analysis luby mitzenmacher spielman rigorously analyzed gallager original flipping decoders invented methods design appropriate degree distributions corresponding graphs recover errors possible :10.1.1.35.5754:10.1.1.35.5754
obtain better performance decoder changed 
powerful efficient decoder known date called belief propagation 
tested erasure codes results reported 
hope codes decode erasures capable decoding errors exponential time maximum likelihood decoder belief propagation decoder erasure codes perform belief propagation 
turns perform experiments beat turbo codes 
method analyze asymptotic performance codes rely heuristic experiments judge quality 
analysis derived richardson urbanke generalizing analysis 
analysis methods papers luby enriched new weapons richardson urbanke able construct codes perform rates closer capacity turbo codes 
rest try describe details left discussion 
define objects rigor traded clarity 
channels codes describing definition communication channel sufficient channel finite labeled directed bipartite graph set called code alphabet set called output alphabet labels nonnegative real numbers satisfy property element sum labels edges emanating 
semantically graph describes communication channel elements transmitted received 
label edge conditional probability obtaining transmitted 
examples channels 
aim reliably transmit information unreliable channel channel cause errors nonzero probability 
want reduce error communication 
idea transmit blocks symbols individual symbols symbols chosen uniformly random assumption commonly scheme provide protection original 
main idea reducing error adding redundancy 
computation redundant symbol message called encoding 
operation produces codeword message word assume injective map set message words set codewords 
code set codewords obtained way 
counter operation encoding style file lecture notes computer science documentation fig 

binary erasure channel binary symmetric channel call de encoding 
operation computes codeword original message word usually forgetting redundant symbol 
important operation decoding 
assigns word alphabet codeword applications corrupted version codeword decoder successful intuitively clear adding redundancy reduce error 
instance repeating transmitted symbol times majority rule decoding easily reduce decoding error constant ffl increasing technique called repetition coding teachers repeat material times reach students 
symbols alphabet encoded symbols called block length fraction called rate code 
rate equals fraction real information symbols codeword 
repetition code described block length rk length message 
rate decreases zero increases infinity 
sending information channel times expensive desirable sequences codes constant rate decoding error probability decreases zero block length goes infinity 
fundamental marks birth modern coding information theory shannon completely answered questions type 
showed maximum likelihood decoding algorithm decodes word alphabet codeword minimal hamming distance channel critical rate called capacity channel decoding error probability code rate larger approaches 
furthermore showed random coding argument rate capacity codes rate decoding error probability decreases zero exponentially fast block length goes infinity 
computing capacity easy task general 
shows capacities binary symmetric channel binary erasure channel 
shannon answered old questions generated new ones 
nature random coding proofs question explicitly construct codes promised theorem 
style file lecture notes computer science documentation fig 

versions ldpc codes original version dual version second serious question efficient decoding codes maximum likelihood decoding hard task general 
shown years corresponding decision problem np hard 
low density parity check ldpc codes described section suited partially answering questions 
ldpc codes code construction assume code alphabet binary field gf 
bipartite graph nodes right called message nodes nodes right called constraint check nodes 
graph gives rise code different ways see version gallager original version coordinates codeword indexed message nodes vector xn valid codeword constraint node sum gf values adjacent message nodes zero 
constraint node imposes linear condition rate code gamma second version message nodes indexed original message 
constraint nodes contain redundant information value node equal sum gf values adjacent message nodes 
block length code rate 
versions look quite similar differ fundamentally computational point view 
encoding time second version proportional number edges graph clear encode version solving systems linear equations 
needs done graph encoding corresponds matrix vector style file lecture notes computer science documentation multiplication 
graph sparse encoding time second version essentially linear block length version essentially quadratic pre processing step 
second version advantageous encoding version suited decoding 
don want go details issue consider gallager original version ldpc codes 
readers invited consult learn second version 
decoding erasure channel mentioned earlier principal motivation erasure codes design forward error correction schemes high speed computer networks 
data sent network divided packets 
packet identifier uniquely describes entity comes location entity 
packets routed network sender recipient 
certain packets arrive destination certain protocols tcp ip recipient requests case retransmission packets arrived sender initiates retransmission 
steps iterated times receiver obtained complete data 
protocol excellent certain cases poor scenarios feedback channels exist satellite links sender serve large number recipients multicast 
channel corresponding scenario modeled erasure channel corresponding codes remedy mentioned shortcomings 
linear code field block length dimension dimensional subspace standard vector space minimal hamming weight nonzero element linear code called minimum distance code usually denoted hard see linear code minimum distance capable correcting pattern gamma erasures essentially solving system linear equations size elias showed random linear codes achieve capacity erasure channel high probability 
running time decoder slow applications large 
decoder ldpc codes extremely simple describe case binary erasure channel 
decoder maintains register message constraint nodes 
registers initially set zero 
round decoding value received message node added values adjacent constraint nodes message nodes edges emanating deleted 
direct recovery step complete second substitution recovery phase kicks 
looks constraint node degree 
note value constraint node intact codeword zero constraint node degree contains value unique adjacent message node 
value copied corresponding message nodes value added adjacent constraint nodes message node edges emanating deleted graph 
style file lecture notes computer science documentation nodes left constraint nodes degree left decoder stops 
note decoding time proportional number edges graph 
graph sparse number edges linear number nodes decoder linear time ram unit cost measure 
hope supply degree constraint nodes decoder finishes successfully 
case depends original fraction erasures graph 
surprisingly important parameter underlying graph distribution nodes various degrees 
analysis topic section 
analysis describe conditions successful decoding concisely need piece notation 
call edge graph left right degree connected message constraint node degree ae denote fraction edges left degree right degree respectively 
define generating functions gamma ae ae gamma peculiar look exponent polynomials artifact particular message passage decoding 
best explained analysis describe informal way 
edge message node constraint node probability edge deleted th round algorithm 
probability check node degree th round equivalently probability message node corrected round 
compute probability unroll graph neighborhood node consider subgraph obtained neighborhood depth subgraph nodes graph connected edge path length connecting assume graph tree 
suppose graph sampled uniformly random set graphs edge distribution polynomials ae 
denote probability corrected round 
ffi denote original fraction erasures 
obviously ffi 
assumed neighborhood tree level tree message nodes erased independent probability 
assume message nodes contribute levels tree message nodes forming leaves level root level 
establish recursion message node level corrected received directly constraint nodes connected degree larger 
constraint node degree descending message nodes level corrected 
happens independent probability gamma message node edges emanating probability ae gamma descending message nodes tree probability check node degree ae gamma 
probability style file lecture notes computer science documentation message node level connected descending constraint nodes degree larger gamma ae gamma 
node corrected probability ffi gamma ae gamma factor ffi explains probability node received directly 
gives ffi gamma ae gamma 
altogether obtain condition ffi gamma ae gamma successful decoding 
precisely says neighborhoods depth message nodes trees ffi gamma ae gamma 
gamma ffl ffi rounds algorithm probability message node corrected gamma ffl ffi 
large random graphs probability neighborhood message node tree small argument shows decoding algorithm reduces probability message node constant 
show process finishes successfully needs expansion :10.1.1.35.5754
informal discussion completely rigorous proper martingale arguments 
summarizing condition successful decoding ffi fraction erasures ffi gamma ae gamma ffi capacity achieving sequences condition handy wants analyse performance random graphs degree distribution 
instance turns performance regular graphs deteriorates degree message nodes increases :10.1.1.35.5754
fact best performance obtained message nodes degree 
hand condition give clue design degree distributions ae 
aim construct sequences asymptotically achieve capacity erasure channel 
words want ffi arbitrarily close gamma rate code 
definition rigorous call sequence ae rate corresponding graphs give rise codes rate ffl exists gamma gamma ffl gamma ae gamma gamma gamma ffl surprising sequences really exist 
sequence discovered :10.1.1.35.5754
describe need mention ae average left right degree graph ae respectively 
quantities conveniently expressed dx ae dx 
result rate code gamma ae dx dx 
nice exercise deduce equation ffi equal gamma equal ae dx dx 
examples capacity achieving sequences rate discovered describe fix parameter style file lecture notes computer science documentation harmonic sum dx gamma :10.1.1.35.5754
ae gamma unique solution equation gamma gamma gamma gamma sequence ae gives rise codes rate ffi gamma ae gamma ffi gamma gammax gammaffi ln gammax ffix successful decoding possible fraction erasures 
note quantity equals gamma gamma gamma gamma quantity larger gamma gamma 
gamma gamma gamma ae gamma gamma gamma shows sequence capacity achieving 
named sequences heavy tail poisson sequences commercially oriented tornado codes 
obtained capacity achieving sequence left side closely related power series expansion gamma right regular nodes right degree 
precisely new sequence defined follows 
integers ae gamma gamma gamma ff delta gamma gamma gamma ff delta gamma ff gamma 
correct choice parameter properties sequences refer reader 
close section comments trade proximity channel capacity running time decoder 
heavy tail poisson sequence average degree message node tolerate gamma gamma fraction erasures 
get close gamma ffl capacity gamma needed codes average degree log ffl 
shown essentially optimal 
words get gamma ffl channel capacity need graphs average degree omega log ffl 
relation holds right regular sequences 
codes essentially optimal simple decoders 
style file lecture notes computer science documentation codes channels section briefly describe developments field ldpc codes 
luby mitzenmacher spielman started adapt analysis situation simple decoders gallager transmission binary symmetric channel 
knowledge rigorous analysis probabilistic decoder ldpc codes 
common feature decoders simple erasure decoder described round iteration keep track real variable case erasure decoder variable describes probability message node erased 
case gallager decoders equals probability message node error 
analysis powerful decoders belief propagation decoder complicated round keep track density function describing distribution various values message node 
description belief propagation algorithm refer reader 
richardson urbanke managed generalize analysis case 
main results derivation recursion common density functions message nodes iteration algorithm 
analysis simplified described 
assume input alphabet set sigma 
round algorithm passes messages message nodes check nodes check nodes message nodes 
assume message nodes messages represented log likelihood ratios log yjx yjx gamma represents observations conveyed message node time 
denote probability density function message nodes th round algorithm 
density function error message bits originally exposed 
denoted density functions defined set sigma 
turns satisfy symmetry condition gammax gammax result value density functions determined set values set 
restriction function set denoted 
technical difficulty defining function solved distributions functions discuss 
function defined define hyperbolic change measure fl fl ln function satisfying symmetry condition fl defines function uniquely extended function sigma 
transformation mapping denoted gamma bijective mapping set density functions sigma satisfying symmetry condition 
denote density common density function style file lecture notes computer science documentation messages passed message nodes check nodes round algorithm 
denotes density original error denoted suppose graph degree distribution ae 
omega gamma gamma ae gamma gamma omega denotes convolution function denotes function omega gamma case erasure channel corresponding density functions point mass functions mass zero mass gamma infinity 
case iteration translates ffi gamma ae gamma gamma ffi original fraction erasures 
exactly 
open problems large number important open questions ldpc codes 
single topics call asymptotic theory short codes 
name suggests asymptotic theory deals asymptotic performance various decoding algorithms ldpc codes 
discussed lot progress asymptotic analysis belief propagation algorithms 
main important open questions algorithm design degree structure underlying graphs corresponding codes perform optimally respect decoding algorithm 
particularly important case belief propagation 
go ask sequences degree distributions 
words channel capacity want ffl explicit degree distributions ffl ae ffl asymptotically ldpc codes obtained sampling graphs distributions perform rates ffl decoded belief propagation 
case know sequences erasure channel 
conjecture sequences exist channels awgn channel bsc 
topic short codes deals construction analysis short codes 
mention question rigorous analysis codes finite length asymptotic analysis discussed paragraph problem arises message nodes neighborhood tree small depths 
words decoder works graphs cycles analysis described adequate 

alon luby 
linear time erasure resilient code nearly optimal recovery 
ieee trans 
inform 
theory 
style file lecture notes computer science documentation 
arora safra 
probabilistic checking proofs new characterization np 
acm 

berlekamp mceliece van 
inherent intractability certain coding problems 
ieee trans 
inform 
theory 

glavieux 
near shannon limit errorcorrecting coding decoding 
proceedings icc pages 

elias 
coding noisy channels 
information theory third london symposium pages 

gallager 
low density parity check codes 
mit press cambridge ma 

luby mitzenmacher shokrollahi 
analysis random processes tree evaluation 
proceedings th annual acm siam symposium discrete algorithms pages 

luby mitzenmacher shokrollahi spielman 
analysis low density codes improved designs irregular graphs 
proceedings th annual acm symposium theory computing pages 

luby mitzenmacher shokrollahi spielman 
improved parity check codes irregular graphs belief propagation 
proceedings ieee international symposium information theory page 

luby mitzenmacher shokrollahi spielman 
practical loss resilient codes 
proceedings th annual acm symposium theory computing pages 

mackay 
error correcting codes sparse matrices 
ieee trans 
inform 
theory 

margulis 
explicit constructions graphs short cycles low density codes 
combinatorica 

richardson shokrollahi urbanke 
design provably parity check codes 
ieee trans 
inform 
theory submitted 

richardson urbanke 
capacity low density parity check codes message passing decoding 
ieee trans 
inform 
theory submitted 

shannon 
mathematical theory communication 
bell system tech 


shokrollahi 
new sequences linear time erasure codes approaching channel capacity 
appear proceedings 

sipser spielman 
expander codes 
ieee trans 
inform 
theory 

spielman 
linear time encodable decodable error correcting codes 
ieee trans 
inform 
theory 

tanner 
recursive approach low complexity codes 
ieee trans 
inform 
theory 


estimate complexity constructing binary linear cascade codes 
probl 
inform 


pinsker 
estimation error correction complexity gallager low density codes 
probl 
inform 

