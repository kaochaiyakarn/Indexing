logical modelling computational multi agent systems thesis submitted university manchester degree doctor philosophy faculty technology michael john wooldridge department computation august declaration portion referred thesis submitted support application degree qualification university institution learning 
aim thesis investigate logical formalisms describing reasoning specifying ultimately verifying properties systems composed multiple intelligent computational agents 
obvious resources available task 
largely ai tradition reasoning intentional notions belief desire 
second mainstream computer science tradition temporal logics reasoning reactive systems 
unfortunately resource ideally suited task intentional logics little say subject agent architecture tend assume agents perfect reasoners models concurrent systems mainstream computer science typically deal execution individual program instructions 
thesis proposes solution draws resources 
defines model agents multi agent systems defines execution models describe agents may act interact 
execution models define constitutes acceptable run system 
run may act model temporal logic logic subsequently describe reason multi agent systems 
number logics various properties developed way 
detailed examples showing logics may specifying reasoning multi agent systems 
thesis includes detailed literature survey 
ii name appears cover thesis great people indirectly involved production 
serc financial support 
second greg hare enthusiasm encouragement difficult imagine supportive supervisor 
third involved dai cscw research umist past years 
particular go paul rebecca haddadi lynne hall robin pike steve 
fourth read reports commented ideas engaged protracted email debates generally helped understand 
special nigel discussions proved fruitful source ideas daniel mack carefully read commented thesis draft 
fifth offer special vote michael fisher spent great deal time reading reports helping understand doing helping sort technical details 
thesis quite simply exist michael help 
wife hopes get back normal 
thesis submitted faculty technology university manchester september successfully defended october 
typeset iii contents ii iii motivation 
background 
approach reasoning multi agent systems 
structure thesis 
ii background agency artificial intelligence agent 
agents intentional systems 
reasoning intentional notions 
possible worlds semantics 
normal modal logics 
common distributed knowledge 
quantified epistemic logics 
grounded possible worlds 
avoiding logical omniscience 
beliefs goals intention rational balance 
meta languages syntactic modalities 
meta languages self inconsistency 
konolige order formalization knowledge action 
moore formalism 
formalisms 
deduction model belief 
werner formalism 
situation semantics 
singh formalism 
agency ai building agents 
symbolic ai agency 
alternative approaches 
summary 
social agency distributed artificial intelligence communication dai 
speech acts 
speech acts la austin 
speech acts la searle 
iv speech acts la cohen perrault 
speech acts la cohen levesque 
non monotonic reasoning belief revision speech acts 
werner formalism speech acts 
singh formalism speech acts 
social agency dai building social agents 
blackboard architecture 
beings 
actors 
contract net 
mace 
mace 
summary 
iii theory computational multi agent systems temporal logics theory computational multi agent systems setting scene 
assumptions 
comment notation 
agents 
belief 
communication 
action 
agent architecture 
systems 
execution models 
synchronous execution 
interleaved execution 
extensions basic model 
alternative definitions epistemic inputs 
broadcast messages 
multiple preconditions actions messages 
list types 
summary 
linear time temporal logics multi agent systems logic 
syntax 
semantics 
proof theory 
discussion 
internal languages 
expressive internal language 
possible theorems interpretation 
order linear time logic multi agent systems 
syntax 
semantics 
proof theory 
summary 
examples reasoning multi agent systems 
axiomatizing frameworks multi agent systems 
agent oriented programming agent 
concurrent metatem processes 
specifying paradigms cooperative problem solving 
master slave problem solving systems 
cooperative inference technique 
contract net protocol 
summary 
branching time temporal logics multi agent systems bal frames 
logic bal 
syntax 
semantics 
proof theory 
cooperative ability cooperative goals 
cooperative ability 
cooperative goals 
ability goals example 
order branching time logic multi agent systems 
syntax 
semantics 
proof theory 
examples 
summary 
iv review 
context 

appendices bibliography notation technical reviews situated automata 
cohen levesque formalism 
syntax 
semantics 
derived operators properties logic 
werner formalism 
syntax 
semantics 
temporal logic reactive systems plethora temporal logics 
program modelling 
specification temporal logic 
vi axioms chapter axioms section 
axioms section 
vii list tables family logics multi agent sytems 
intentional logics 
correspondence theory 
modalities cohen levesque formalism 
definitions plan theory speech acts 
non standard operators 
derived temporal operators 
properties 
syntactically correct incorrect formulae 
modalities aop 
message types domain predicates master slave system 
message types domain predicates cooperative inference technique 
abbreviations cooperative inference technique 
message types domain predicates cnet 
abbreviations cnet 
non standard operators bal 
derived operators bal 
ability goals example scenario 
paths moves goals 
non standard operators qbal 
operators werner language 
viii list figures semantics normal modal logic 
modal systems axioms 
semantics levesque logic 
structure typical ai belief system 
operation agents 
states transitions 
synchronous execution 
runs worlds world sequences 
interleaved execution 
semantics 
semantics fotl 
relationships languages 
proof theorem 
semantics qal 
components theory multi agent systems 
simple cmp system 
proof theorem 
proof theorem 
semantics bal 
semantics qbal 
syntax cohen levesque formalism 
semantics cohen levesque formalism part 
semantics cohen levesque formalism part 
derived operators cohen levesque formalism 
semantics werner language 
ix part chapter distributed artificial intelligence dai emerging subfield artificial intelligence ai loose focus study cooperative activity systems composed multiple intelligent computational agents 
thesis expression multi agent system refer systems 
aim thesis investigate logic formalisms describing reasoning specifying ultimately verifying properties multi agent systems real need formal tools analyze reason multi agent systems 
chapter discusses motivations developing tools various resources available task 
methodology thesis described 
structure remainder thesis outlined 
motivation worth observing formal theory multi agent systems valuable right 
konolige observes formal models force assumptions plain admit rigorous examination predictions model 
pressing need tools help manage complexity multi agent systems 
designing implementing debugging multi agent systems easy 
seminal gasser observed concurrency problem domain uncertainty non determinism execution conspire difficult understand activity distributed intelligent system 
counter problems authors advocated development graphic displays system activity linked intelligent model tools help developer reason expected observed behaviour 
described gasser colleagues firmly empiricist tradition ai call practical tools aid understanding 
software experience past decades surprising similar principled techniques reasoning specifying verifying properties multi agent systems 
expected formal theory multi agent systems provide framework general questions cooperation social interaction posed solutions developed 
summarize suitable formal theory multi agent systems fulfill roles provide tool describe reason multi agent systems provide tool specify ultimately verify properties multi agent systems provide foundation profound theories social action interaction cooperation constructed 
detailed scope aims methodologies dai possible limited space available 
see representative survey dai research subsequent 
thesis focuses logic methods modelling systems 
general logic viewed comprising defined syntax language identifies class syntactically acceptable objects called formulae logic defined semantics model theory purpose assign syntactic object language formal meaning defined proof theory broadly speaking concerned manipulation formulae 
advantages employing logic techniques reasoning multi agent systems follow naturally definition 
fixing defined formal artificial language opposed unstructured ill defined natural language possible investigate question expressed rigorous mathematical way see example number temporal logics compared formally 
major advantage ambiguity removed see example proofs unique readability propositional logic order predicate logic pp pp 
transparency advantage expressing properties agents multi agent systems logical axioms theorems language clear semantics focal points theory explicit 
theory transparent properties interrelationships inferences open examination 
contrasts computer code requires implementational control aspects issues tested confused 
adopting logic approach available results techniques arguably oldest richest fundamental best established branch mathematics 
background aims develop formal methods modelling reasoning multi agent systems place start observing mainstream ai dai community gone building intelligent social agents 
unfortunately immediately runs difficulties issue intelligent agent architecture subject somewhat heated ongoing debate ai 
chief debate may crudely divided camps classical symbolic logicist camp alternative behavioural camp 
put crudely classical approach proposes giving agents symbolic knowledge typically relates environment agent occupies 
knowledge commonly represented form rules frames semantic nets generally formulae logical language order predicate logic 
reasoning hoped intelligence achieved getting agent manipulate knowledge order derive new knowledge 
manipulation usually involves theorem proving 
classical approach explains main concerns symbolic ai research past decades knowledge representation techniques automated theorem proving 
agent architectures described closing chapter canonical examples classical approach 
alternatives classical approach diverse range techniques unifying principle central symbolic models favour closer relationship agent environment occupies 
emphasis placed situated nature intelligence 
examples alternative approach :10.1.1.12.1680
interesting important debate aim thesis interests completeness issues briefly reviewed chapter 
despite intense interest controversy alternative approaches evoked overwhelming majority dai lies firmly classical camp thesis focuses 
examples classical approaches dai agent concurrent metatem mace mcs cosy 
go reasoning systems 
techniques appropriate available task 
obvious resources 
established tradition ai philosophy devising logics mentalistic intentional notions belief knowledge intention notable examples 
associated set theories speech acts reasoning communication notable examples 
intentional logics theories speech acts identify agent intentional system 
crudely intentional system appropriately described terms intentional notions see discussions agency intentionality 
researchers generally developed intentional logics aims mind 
investigate mentalistic properties human activity 
example aim develop working formal theory human intention largely motivated concerns philosophy 
intended theory computational systems authors took trouble distance suggestion logic developed automated computational agent 

serve knowledge representation formalism automatic planning system 
example 

enable reasoning distributed systems see comments 
prevalent method defining semantics intentional logics give possible worlds interpretation idea originated kripke proposed intentional logics hintikka 
belief logics agent assigned set possible worlds epistemic alternatives world representing way actual world agent believes 
true epistemic alternatives said believed agent 
possible worlds semantics advantage established theoretically attractive mathematical foundation see suffer disadvantages 
chief logical omniscience problem imply agents perfect reasoners 
problem worlds semantics way grounded concrete interpretation remain theoretical clear worlds correspond agent see discussion point 
logics category adopt ungrounded possible worlds semantics suited purposes thesis 
ungrounded possible worlds semantics suited task reasoning classical computational multi agent systems faced options 
wishes retain possible worlds semantics highly attractive theoretical point view attempt find way grounding possible worlds 
second option reject possible worlds semantics altogether seek alternative semantic base 
epistemic logics grounded possible worlds semantics object study researchers mainstream computer science notion knowledge valuable analyzing distributed systems protocols see overview 
crudely idea node distributed system said know thing true runs system node indistinguishable 
similar grounding proposed independently rosenschein situated automata paradigm 
clear approaches related classical model agents 
distributed systems situated automata models knowledge valuable important research topic tangential interest thesis 
researchers rejected possible worlds semantics altogether looked possibility developing alternative semantics 
best known example deduction model belief developed kurt konolige 
deduction model defines belief system tuple containing base set formulae internal cognitive logical language belief set deduction rules deriving new beliefs 
konolige argued agent belief system said believe possible derive thing base beliefs deduction rules 
logically incomplete reasoning may modelled giving agent logically incomplete deduction rules 
interestingly deduction model viewed model beliefs classical ai systems 
reason deduction model best candidate intentional logics mentioned far purposes thesis 
return question posed earlier resources available modelling multi agent systems 
second resource tradition temporal logics reason reactive systems reactive systems systems adequately described relational functional view 
relational view regards programs functions initial state terminal state 
current usages term reactive system computer science 
oldest usage pnueli followers see description 
second researchers ai planning take reactive system capable responding dynamically changes environment word reactive taken responsive see 
term denote systems respond directly world reason explicitly see 
thesis term sense indicated 
typically main role reactive systems maintain interaction environment described specified terms going behaviour 
concurrent system studied behavioural means 
individual module concurrent system reactive subsystem interacting environment consists modules 
reasons supposing multi agent systems type thesis interested modelling reactive applications multi agent approach suited distributed sensing manufacturing control air traffic control non terminating described functional view multi agent systems necessarily concurrent pnueli observes agent considered reactive system 
landmark pnueli proposed temporal logic reasoning reactive systems 
enormous amount research effort subsequently devoted investigating possibility see example overviews 
unfortunately naive attempts adapt techniques doomed failure models concurrency typically deal execution individual program instructions grain size fine purposes thesis 
approach reasoning multi agent systems order develop methods reasoning multi agent systems described thesis draws resources mentioned 
consists parts 
part formal model computational multi agent systems model aims capture key features typical dai systems 
main components model surprisingly agents agents set explicitly represented beliefs formulae internal logical language belief agents able derive necessarily logical consequences beliefs agents computational resources may draw performing private internal cognitive actions example database agent perform retrieve action agents able affect beliefs agents communicating message passing 
second part consists execution models agents groups agents 
role execution model may summarized follows 
execution agent follows continuous cycle acting performing cognitive actions sending messages updating beliefs result receiving messages acting 
doing agent traces execution history run defines beliefs held actions performed moment execution 
taken multi agent system traces run defines agent beliefs actions moment execution 
execution model set rules define system set legal runs system 
simplest execution model synchronous model agent assumed act simultaneously 
complex realistic alternative model interleaved execution model agent allowed act time 
taken model multi agent systems associated execution models constitute theory multi agent systems 
important understand stage theory intended 
intended plausible formal theory multi agent systems agent computational artifact built classic ai lines 
contrast theory intended model human social systems model intended canonical model agents multi agent systems 
aimed idealized model believe captures important aspects wide class agents 
basic model described thesis taken starting point develop finer grained realistic models real dai agents systems 
prevent inspiration human social systems analogies human social systems mildly anthropomorphic improves readability example calling agents ralph 
understood analogies just 
propositional order linear time chapter qal ial chapter branching time bal chapter qbal chapter table family logics multi agent sytems third part family temporal logics reasoning theory multi agent systems 
family may divided categories linear time branching time may subdivided categories propositional order see table 
linear time logics ial qal called model time time points isomorphic natural numbers time point just successor 
idea informs development linear time logics allowing run system act model logic relationship established multi agent systems models model representing run multi agent system 
relationship easily formalized gives kind correspondence theory logics 
branching time logics bal qbal model time viewed tree structure branching infinitely time point 
structure arises considers possible runs system collected branching nature comes choices faced agent time point 
axiomatizations logics 
axiomatizations sound shown complete completeness issue somewhat scope thesis 
structure thesis remainder thesis divided parts 
part chapters literature survey 
chapter begins addressing question agent particularly context ai concludes agent generally taken intentional system simply described terms beliefs desires chapter investigates critically assesses number formalisms developed reasoning intentional notions 
additionally main approaches building agents ai reviewed main issues classical versus behavioural ai debate mentioned earlier discussed 
chapter addresses wider question social agency particularly context dai 
speech act theory identified dominant paradigm reasoning communication dai various speech act theories reviewed detail 
chapter briefly examines attempts dai community build multi agent systems 
chapters represent main contribution thesis 
chapter develops formal model computational multi agent systems argued captures main features wide range classical dai systems 
associated model number execution models define agents act 
taken model multi agent systems execution models constitute theory multi agent systems 
chapter introduces family linear discrete temporal logics reasoning systems modelled theory developed chapter 
key idea model temporal logic shown correspond multi agent system type described theory 
number issues associated logics examined 
chapter contains case studies demonstrate logics developed chapter may model run extra technical apparatus logical machinery 
describe reason multi agent systems 
chapter devoted logics branching model time contrasts linear models chapter 
shown branching models admit possibility reasoning attributes agents goals described linear models 
final part thesis chapter presents 
additionally appendix presents brief review notation thesis appendix contains technical reviews formalisms reasoning agency held earlier chapters interests readability appendix contains overview temporal logic reasoning reactive systems 
thesis strict formalism avoided possible mathematical expositions natural language description suffice 
order text consistent decided standardize presentation language semantics net result description material may appear differ description material cited source 
differences hoped cosmetic 
reader assumed familiar fundamentals logic 
part ii background chapter agency artificial intelligence aim thesis investigate formal methods modelling reasoning multi agent systems 
building blocks systems agents 
obvious point departure detailed examination notion agency 
obvious questions ask cf 

agents 

formally describe reason agents 

construct agents 
chapter addresses questions turn 
question obvious pre requisite study addressed section finds commonest interpretation takes agent intentional system behaviour best explained predicted terms intentional notions belief desire emphasis thesis methods formally reasoning agents multi agent systems surprising second question receives attention 
dealt sections examine detail various proposals logical modelling intentional notions 
modal logics possible worlds semantics identified dominant paradigm area advantages disadvantages approach discussed length 
number variations possible worlds theme reviewed discussion alternatives possible worlds semantics 
section third questions discussed various ai approaches building intelligent agents reviewed 
issue building agents central purposes thesis subject dealt briefly 
note part chapter deals isolated agents aspects social agency dealt chapter 
agent 
past years term agent adopted variety sub disciplines ai computer science 
hears agents software engineering data communications concurrent systems research robotics ai distributed ai 
article british national daily prediction agent computing abc significant breakthrough software development programming paradigm agent oriented programming usages appeals quite different notion agency 
important examine question agent carefully 
dictionary defines agent exerts power produces effect definition terribly helpful indicate action involved sight notion action inextricably bound agency guardian thursday th march 
see aop case study chapter 
concise oxford dictionary current english th edn agents things act called agents 
tacit assumption agents take active role originating actions affect environment passively allowing environment affect hears ai agent action 
words describe agentive action autonomy rationality 
autonomy generally means agent operates direct human intervention guidance 
rationality easily tied pseudo game theoretic sense agent maximizing performance respect valuation function see pp discussion rationality agency 
measure rationality implicitly assumes agent independent goals wants achieve 
unfortunately autonomous rational action defined sufficient criterion agenthood admits unacceptably wide class objects agents 
example perfectly consistent describe transistor essentially simplest form electronic switch autonomous rational agent definition 
troubling action analysis agency notion action slippery 
example action described number different ways seemingly valid 
classic example due philosopher searle pull trigger fire gun kill ferdinand start world war 
equally valid descriptions event trying isolate event notoriously difficult 
trying describe actions terms causal links help introduces seemingly infinite regress 
example waving friend lift arm caused muscles contracting caused neurons firing caused 
easy way halting regress appealing notion primitive action example illustrates philosophically suspect action analysis agency look going 
properties agency consider 
shoham suggested term agent ai denote high level systems employ symbolic representations enjoy cognitive function explicit logical pseudo logical reasoning 
high level condition excludes entities actors neuron entities connectionism objects object oriented programming 
implies agents possess significant computational resources resources course finite 
high level property contentious growing number researchers vigorously argue highlevel agents best way go ai 
chief protagonist debate brooks built number robotic agents certainly high level shoham definition able perform tasks impressive ai standards see discussion section :10.1.1.12.1680
high level condition useful classifying agents unfairly discriminates objects employ explicit cognitive functions 
widely held view agent entity appears subject beliefs desires 
philosopher dennett coined term intentional system denote systems 
agents intentional systems explaining human activity useful statements took umbrella believed going rain 
michael worked hard wanted possess phd 
statements folk psychology human behaviour predicted explained attribution attitudes believing wanting examples hoping 
folk psychology established people reading statements say meaning entirely clear give second glance 
attitudes employed folk psychological descriptions called intentional notions philosopher daniel dennett coined term intentional system describe entities behaviour predicted method attributing belief desires rational 
dennett identifies different grades intentional system see classic ai attempt deal notion action excellent analysis relationship action agency 
unfortunately word intention different ways logic philosophy mind 
everyday usage intended kill 
second intentional notion attitudes 
logic word intension means internal content concept opposed extension 
sequel intended meaning clear context 
order intentional system beliefs desires beliefs desires beliefs desires 
second order intentional system sophisticated beliefs desires doubt intentional states beliefs desires intentional states 
carry hierarchy intentionality far required 
obvious question legitimate useful attribute beliefs desires artificial agents 
isn just 
mccarthy argued occasions intentional stance appropriate ascribe beliefs free intentions consciousness abilities wants machine legitimate ascription expresses information machine expresses person 
useful ascription helps understand structure machine past behaviour repair improve 
logically required humans expressing reasonably briefly known state machine particular situation may require mental qualities qualities isomorphic 
theories belief knowledge wanting constructed machines simpler setting humans applied humans 
ascription mental qualities straightforward machines known structure computer operating systems useful applied entities structure incompletely known 
quoted objects described intentional stance 
turns 
thesis showed simple automata objects consistently ascribed intentional descriptions similar rosenschein kaelbling albeit different motivation arrived similar 
example consider light switch perfectly coherent treat light switch cooperative agent capability transmitting current invariably transmits current believes want transmitted switch simply way communicating desires 
adults find description absurd 

answer intentional stance description perfectly consistent observed behaviour light switch internally consistent buy essentially understand mechanism sufficiently simpler mechanistic description behaviour 
put crudely know system need rely intentional explanations behaviour complex systems complete accurate picture system architecture working available mechanistic design stance explanation behaviour may practicable 
consider computer 
complete technical description computer available hardly practicable appeal description explaining menu appears click mouse icon 
situations may appropriate adopt intentional stance description description consistent simpler alternatives 
intentional system necessary condition agenthood sufficient condition 
master thesis literature cognitive science component disciplines attempt find unifying concept underlies notion agenthood 
forced agent capacity beliefs desires thing admits unified account cognitive science 
comments reasonable say agent system conveniently described intentional stance simplest consistent description requires intentional stance 
step investigate methods reasoning intentional notions 
shoham insightful observation move intentional stance technical description behaviour correlates piaget model child development scientific development generally 
children explanations objects light switches grasp technical concepts involved 
similarly evolution science marked gradual move explanations mathematical ones 
author experiences teaching computer programming suggest faced completely unknown phenomena children adopt explanations 
easier teach computer concepts explanations computer doesn know try teach principles 
reasoning intentional notions suppose wishes reason intentional notions logical framework 
consider statement pp believes father zeus 
naive attempt translate order logic result bel father zeus unfortunately naive translation reasons 
syntactic second argument bel predicate formula order logic term 
formed formula classical order logic 
second problem semantic serious 
constants zeus jupiter reasonable interpretation denote individual supreme classical world 
acceptable write order logic zeus jupiter 
standard rules order logic allow derivation bel father jupiter intuition rejects derivation invalid believing father zeus believing father jupiter 
problem 
order logic fail 
problem intentional notions belief desire referentially opaque set opaque contexts standard substitution rules order logic apply 
classical propositional order logic denotation semantic value expression dependent solely denotations sub expressions 
example denotation propositional logic formula function truth values operators classical logic said truth functional 
contrast intentional notions belief truth functional 
surely case truth value sentence believes dependent solely truth value substituting equivalents opaque contexts going preserve meaning 
meant referential opacity 
existence referentially opaque contexts known time frege 
suggested distinction sense 
ordinary formulae term formula denotation needed opaque contexts sense formula needed see 
clearly classical logics suitable standard form reasoning intentional notions alternative formalisms required 
vast enterprise devoted developing formalisms 
field formal methods reasoning intentional notions widely reckoned begun publication jaakko hintikka book knowledge belief logic notions 
time subject considered fairly esoteric interest comparatively researchers logic philosophy mind 
important research area right contributions researchers ai formal philosophy linguistics economics 
enormous literature subject major international conference devoted solely theoretical aspects reasoning knowledge input numerous specialized conferences literature growing larger 
despite diversity interests applications number basic techniques quite small 
recall discussion problems addressed developing logical formalism intentional notions syntactic semantic 
follows formalism characterized terms independent attributes language formulation semantic model 
fundamental approaches syntactic problem 
modal language contains non truth functional modal operators applied formulae 
alternative approach involves meta language sorted order language containing terms denote formulae object language 
intentional notions represented meta language predicate note sentence proposition denotation value true false 
modal language metalanguage possible worlds ungrounded grounded table intentional logics axiomatization deemed appropriate 
approaches advantages disadvantages discussed length sequel 
syntactic problem basic approaches semantic problem 
best known probably widely approach adopt possible worlds semantics agent beliefs knowledge goals characterized set called possible worlds accessibility relation holding 
possible worlds semantics associated correspondence theory attractive mathematical tool 
associated difficulties notably known logical omniscience problem implies agents perfect reasoners 
number minor variations possible worlds theme proposed attempt retain correspondence theory logical omniscience 
commonest alternative possible worlds model belief sentential interpreted symbolic structures approach 
scheme beliefs viewed symbolic formulae explicitly represented data structure associated agent 
agent believes agent belief structure 
despite simplicity sentential model works certain circumstances 
table characterizes number known intentional logics terms syntactic semantic properties 
part chapter contains detailed reviews formalisms 
idea possible worlds semantics discussed detailed analysis normal modal logics variants possible worlds theme 
meta language approaches discussed hybrid formalism described 
alternative formalisms described 
detailed presentations note terminology 
strictly speaking epistemic logic logic knowledge logic logic belief logic logic desires goals 
common practice epistemic blanket term logics knowledge belief 
practice adopted thesis distinction considered significant 
reviews focus knowledge belief virtual exclusion goals desires principles little addressed issue goals see comments cohen levesque formalism 
possible worlds semantics possible worlds model epistemic logics originally proposed hintikka commonly formulated normal modal logic techniques developed kripke hintikka insight see agent beliefs characterized terms set possible worlds way 
consider agent playing card game gin game knows cards possessed opponents better able play 
complete knowledge opponent cards generally impossible excludes cheating 
ability play gin depends part ability deduce cards held opponent limited information available 
suppose agent possessed ace 
assuming agent sensory equipment functioning normally rational believe possessed card 
suppose try deduce cards held opponents 
done calculating various different ways cards pack possibly distributed various players 
proposed actual card playing strategy illustration 
argument sake suppose possible configuration described separate piece 
process complete agent systematically eliminate large pile configurations possible knows 
example configuration possess ace rejected immediately impossible 
call piece remaining process world 
world represents state affairs considered possible knows 
hintikka coined term epistemic alternatives describe worlds possible beliefs 
true agent epistemic alternatives said believed agent 
example true agent epistemic alternatives ace 
reading technique roundabout way characterizing belief advantages 
remains neutral subject cognitive structure agents 
certainly doesn posit internalized collection possible worlds 
just convenient way characterizing belief 
second mathematical theory associated formalization possible worlds extremely appealing see 
step show possible worlds may incorporated semantic framework logic 
subject section 
normal modal logics epistemic logics usually formulated normal modal logics semantics developed kripke 
moving explicitly epistemic logics section describes normal modal logics general 
modal logics originally developed philosophers interested distinction necessary truths mere contingent truths 
intuitively necessary truth true contingent truth plausibly 
example fact write conservative party great britain hold majority seats house commons 
true necessary truth quite easily turned labour party won majority general election 
fact contingent truth 
contrast statement square root rational number 
way true standard reading sentence 
fact example necessary truth 
necessary truth usually defined true possible worlds 
quite difficult think necessary truths mathematical laws 
illustrate principles modal epistemic logics normal propositional modal logic defined 
syntax semantics logic essentially classical propositional logic extended addition operators necessarily possibly 
syntax 
definition prop fp countable set atomic propositions 
syntax normal propositional modal logic defined rules 
prop formula 
hintikka original technique model sets equivalent kripke formalism elegant 
see appendix pp comparison discussion techniques 
example adapted 
hm wi true hm wi prop iff hm wi iff hm wi hm wi iff hm wi hm wi hm wi iff hm wi hm wi iff hm wi semantics normal modal logic 
formulae true 
formula operators standard meaning true logical constant called true 
remaining connectives propositional logic defined abbreviations usual way 
formula read necessarily formula read possibly 
semantics language 
normal modal logics concerned truth worlds models logics contain set worlds binary relation saying worlds considered possible relative worlds 
additionally valuation function required saying propositions true world 
definition model normal propositional modal logic triple hw pi non empty set worlds powerset prop valuation function says world atomic propositions true alternative equivalent technique define follows prop ftrue falseg rules defining semantics language changed slightly 
semantics language satisfaction relation holds pairs form hm wi model world formulae language 
semantic rules defining relation 
definition satisfaction atomic propositions captures idea truth current world appears left 
semantic rules true standard 
rule captures idea truth accessible worlds rule captures idea truth possible world 
note modal operators duals sense universal existential quantifiers order logic duals possible take primitive introduce derived operator 
correspondence theory understand extraordinary properties simple logic necessary introduce validity satisfiability 
formula satisfiable satisfied model world pair unsatisfiable 
formula true model satisfied world model valid class models true model class 
formula valid true class models 
valid write basic properties logic follows 
axiom schema valid 
condition order name axiom characterization reflexive serial transitive euclidean table correspondence theory axiom called honour kripke 
second property follows 
proofs properties trivial left exercise reader 
valid theorem complete axiomatization normal modal logic 
similarly second property appear rule inference axiomatization normal modal logic generally called necessitation rule 
properties turn problematic features normal modal logics logics knowledge belief point examined 
intriguing properties normal modal logics follow properties accessibility relation models 
illustrate properties consider axiom schema 
turns axiom characteristic class models reflexive accessibility relation 
characteristic mean true models class 
host axioms correspond certain properties study way properties correspond axioms called correspondence theory 
table list axioms characteristic property order formula describing property 
note table lists axioms specific interest thesis see 
names axioms follow historical tradition 
results correspondence theory straightforward derive completeness results range simple normal modal logics 
results provide useful point comparison normal modal logics account large part popularity style semantics 
system logic thought set formulae valid class models member set called theorem logic theorem usually denoted 
notation ks 
denote smallest normal modal logic containing axioms 
recall normal modal logic contain cf 

axioms ought sixteen distinct systems logic 
systems turn equivalent contain theorems result eleven distinct systems 
relationships systems described 
diagram arc means strict superset theorem theorem vice versa means contain precisely theorems 
modal systems widely names kt known kt known kd known weak kt known normal modal logics epistemic logics logic developed epistemic logic formula read known 
worlds model interpreted epistemic alternatives accessibility relation defines alternatives kd kt kt kdt kdt kd kd kt kdt kd kt kdt gamma gamma gamma gamma gamma gamma gamma psi hj gamma gamma gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma gamma gamma psi modal systems axioms world 
logic deals knowledge single agent 
deal multi agent knowledge adds model structure indexed set accessibility relations agent 
model structure hw 
pi knowledge accessibility relation agent simple language defined extended replacing single modal operator indexed set unary modal operators fk 
ng 
formula read knows 
semantic rule replaced rule hm wi iff hm wi operator exactly properties 
corresponding modal systems corresponding system defined multi agent logic 
smallest multi agent epistemic logic largest 
step consider normal modal logic serves logic knowledge belief 
consider necessitation rule axiom normal modal system committed 
necessitation rule tells agent knows valid formulae 
things means agent knows propositional tautologies 
infinite number agent infinite number items knowledge immediately faced counter intuitive property knowledge operator 
consider axiom says agent knowledge closed implication 
suppose logical consequence set ff 
world true true valid 
necessitation formula believed 
agent beliefs closed implication believes believe agent knowledge closed logical consequence 
counter intuitive 
example suppose logician agent knows peano axioms 
may fermat theorem follows peano axioms despite efforts far managed prove 
agent beliefs closed logical consequence agent know 
consequential closure implied necessitation axiom property resource bounded reasoners 
logical omniscience problem problems knowing valid formulae knowledge belief closed logical consequence constitute famous logical omniscience problem 
problem damaging corollaries 
concerns consistency 
human believers rarely consistent logical sense word beliefs aware implicit inconsistency 
ideal reasoners implied possible worlds semantics inconsistent beliefs believing formula logical language consequential closure inconsistent set formulae set formulae 
konolige argued logical consistency strong property resource bounded reasoners argues lesser property non contradictory reasonably demand 
non contradiction means agent simultaneously believe agent logically inconsistent beliefs 
second corollary subtle 
consider propositions example 
hamlet favourite colour black 

hamlet favourite colour black planar map coloured 
second conjunct valid believed 
means logically equivalent true just agents ideal reasoners believe propositions logically equivalent 
counter intuitive property implied possible worlds semantics equivalent propositions equivalent beliefs 
just possible worlds semantics implies 
suggested propositions coarse grained serve objects belief way 
logical omniscience problem serious 
words levesque problems cause reject possible world formalization unintuitive best completely unrealistic worst 
axioms knowledge belief consider appropriateness axioms logics knowledge belief 
axiom says agent beliefs non contradictory re written form read knows doesn know 
axiom reasonable property knowledge belief 
axiom called knowledge axiom says known true 
usually accepted axiom distinguishes knowledge belief reasonable believe false hesitate say know false 
knowledge defined true belief knows believes true 
defined knowledge satisfies axiom called positive introspection axiom 
introspection process examining beliefs discussed detail chapter 
positive introspection axiom says agent knows knows 
similarly axiom negative introspection axiom says agent aware doesn know 
positive negative introspection imply agent perfect knowledge doesn know cf 
equation 
types introspection appropriate properties knowledge belief subject debate 
generally accepted positive introspection demanding property negative introspection reasonable property resource bounded reasoners 
comments modal system chosen logic knowledge weak chosen logic belief 
computational aspects leaving basic logic worth commenting computational proof theoretic properties 
halpern moses established 
provability problem key systems weak decidable 
halpern moses sketch tableaux decision procedures logics 

satisfiability validity problems weak pspace complete 
result encouraging holds hope automation 
unfortunately second result extremely discouraging simple terms means worst case automation logics practical proposition 
discussion sum basic possible worlds approach described disadvantages multi agent epistemic logic agents believe valid formulae agents beliefs closed logical consequence equivalent propositions identical beliefs agents inconsistent believe worst case automation feasible 
people add ontology possible worlds accessibility relations mysterious practically minded people particular say agent architecture 
despite serious disadvantages possible worlds semantics choice researchers number variations basic possible worlds theme proposed get difficulties 
sections examine various topics associated possible worlds semantics 
common distributed knowledge addition reasoning agent knows believes useful able reason cultural knowledge things knows knows knows kind knowledge called common knowledge 
famous man puzzle classic problem epistemic reasoning example kind problem efficiently dealt reasoning common knowledge see statement man problem starting point common knowledge develop operator things knows 
unary modal operator ek added modal language discussed formulae ekf read knows 
defined abbreviation ekf semantic rule hm wi ekf iff hm wi 
ng ek operator satisfactorily capture idea common knowledge 
derived operator ck required ck defined ultimately terms ek 
necessary introduce derived operator ek formula ek read knows degree 
defined follows ek ekf ek ek ek discussion follows adapted expanded chapter 
common knowledge operator defined abbreviation ekf ek ek semantic rule hm wi iff hm wi ek classic problem distributed systems folklore coordinated attack problem generals side wish attack enemy unwilling sure attack common knowledge attack 
halpern shown certain circumstances notably communication guaranteed common knowledge achieved 
related issue common knowledge distributed implicit knowledge 
suppose omniscient observer group agents ability read agent beliefs knowledge 
agent able pool collective knowledge group agents generally able deduce agent group 
example suppose group agents agent knew agent knew distributed knowledge agent explicitly knew distributed knowledge reduced operators introduced far definition 
distributed knowledge operator dk semantic rule hm wi iff hm wi rule strange uses set intersection set union odds naive perception distributed knowledge works 
restriction possible worlds generally means increase knowledge 
distributed knowledge potentially useful concept cooperative problem solving systems knowledge problem distributed group problem solving agents try deduce solution cooperative interaction 
proof theoretically various group knowledge operators straightforward properties 
note form hierarchy ek ekf see discussion operators properties 
quantified epistemic logics natural extension basic logic described allow quantification 
section proceed propositional modal logic described define quantified modal logic examine suitability logic reasoning knowledge belief 
discussion adapted expanded part 
syntax quantified modal logic classical order logic enriched addition unary modal operators meanings 
operators applied arbitrary formulae modal order language 
example syntactically acceptable formulae quantified modal logic assumed constants basic order language belong set const variables set var predicate symbols set pred 
model quantified modal logic structure hw pi set worlds binary relation non empty set called domain maps const maps pred powerset arity predicate symbol set tuples gives extension predicate symbol world 
usual predicate logic formulae interpreted respect variable assignment variable assignment maps var term variable constant 
useful define function takes arbitrary term returns denotation relative const suppressed understood 
semantic rule interest predicates remainder essentially unchanged formula interpreted respect variable assignment 
hm wi 
iff 
despite added complexity predicates terms model theory quantified modal logics remains straightforward 
consider system epistemic logic 
semantics easily extended multi agent case propositional modal logic addition multiple accessibility relations unfortunate property quantified modal logics defined barcan formulae valid 
barcan formula converse barcan formula reverse implication see pp discussion 
interpreted known barcan formula means known individuals independently property known individuals property 
barcan formula implies aware existence individuals demand resource bounded reasoners 
converse barcan formula says agent knows individuals property known individual property words implies agents perform universal instantiation possible 
weaker property implied barcan formula demand resource bounded reasoners 
refers back model structures quantified modal logics moment domain individuals fixed worlds called constant domain assumption 
assumption dropped domain indexed worlds quantification restricted just individuals domain world barcan formulae longer valid 
reasonable property epistemic logic consider semi robin hood king arthur 
agent reasonably unsure individuals existed appear domain epistemic alternatives 
worth noting model structure constants rigid interpretation constant denotation worlds 
mean assumption dropped effect 
possible drop assumption simply making map const consider formula intended express fact agent believes individual prime minister britain actual world world perceived author time writing late april cricket fan 
cricket fan pm pm constant actual world denotes individual john major 
suppose agent desert island november unaware margaret thatcher longer prime minister 
agent constant pm denote entirely different denotes rational agent believe individual margaret thatcher cricket fan 
note agent believe individual john major cricket fan ignorance different constant individual 
point constant pm different denotation agent generally different denotation different worlds 
constants said fluent expressions non fluent expressions called rigid designators 
deal fluent expressions konolige proposed technical device bullet operator 
suppose constant expression returning constant denotes denotes 
bullet operator somewhat complex described detail pp pp 
difficult issue philosophy modal logics quantifying modal contexts 
consider english sentence known unicorn 
consider quantified modal logic formulae representing attempt formalize unicorn unicorn de re reading 
formula implies existence particular individual believer name agent believes property unicorn 
note know individual name simply represent fact agent 
de dicto reading 
reading expresses weaker property agent believes individual unicorn 
agent necessarily name individual 
formulae express quite different properties 
concludes review quantified modal epistemic logic 
grounded possible worlds people confronted possible worlds semantics time initially uncomfortable idea notion possible world accessible sight certain air fantasy science fiction 
problem ontological status possible worlds really exist 

map agent physical architecture 
questions answered reluctant treat epistemic alternatives theoretical 
researchers proposed grounding epistemic alternatives giving precise meaning real world overcoming confusion status identical proposed distributed systems community second rosenschein situated automata paradigm 
section describes grounded possible worlds focus distributed systems approach formal treatment adapted 
logic knowledge analyze distributed system may strange 
halpern points informally reasoning distributed system statements processor send packet processor knows processor received previous 
logic knowledge formalizes reasoning 
starting point study define simple model distributed systems 
system contains environment may set environment states set processes 
ng may set local states 
time system may set global states 
times run system function assigns time point global state time points isomorphic natural numbers time discrete bounded past infinite 
run point run time point run point implicitly identifies global state 
points serve worlds logic knowledge developed 
system set runs 
system powerset run suppose global states 


extent seen example grounding card game example earlier 
define relation states process iff note equivalence relation 
terminology indistinguishable local state global state 
intuitively local state process represents information process global states indistinguishable information 
crucial point processes choice actions function local state points indistinguishable processor processor perform actions state 
pp step define language reasoning systems 
language multi agent epistemic logic defined earlier classical propositional logic enriched addition set unary modal operators 
ng 
semantics language satisfaction relation holds triples form hm ui formulae language 
hr ui point structure hr pi system point powerset prop returns set atomic propositions true point 
structure hr pi called interpreted system 
non standard semantic rules propositions modal formulae 
hm ui prop iff hr ui hm ui iff hm ui note equivalence relation reflexive symmetric transitive logic properties system discussed 
sense second rule capture idea processes knowledge 
idea knows run time run time process information able distinguish states 
information knowledge things true indistinguishable states 
model knowledge external notion 
don imagine processor scratching head wondering knows fact programmer reasoning particular protocol say outside processor knew global states indistinguishable current state intuitively states processor knows true 
distributed knowledge operator defined similar way 
define relation global states 
iff 
ng distributed knowledge operator defined 
hm ui iff hm ui distributed knowledge operator exactly properties distributed knowledge operator developed earlier 
number researchers investigated variety different properties distributed systems slight variations basic technique described see 
example fagin vardi demonstrated conservation principle distributed knowledge briefly investigate properties required distributed knowledge system remain constant 
related issue processes learn forget time 
interestingly essentially equivalent definition knowledge described proposed independently rosenschein kaelbling situated automata paradigm 
details note fagin vardi term implicit knowledge way distributed knowledge 
discussed appendix rosenschein aim analyze knowledge content states automata 
epistemic temporal logic described specify designer machine know 
intentional description compiled gate level description digital machine satisfies properties expressed intentional description 
situated automata paradigm gaining followers ai see inspired situated automata 
distributed systems situated automata analysis knowledge useful allowing characterize agent states terms information implicitly carry clear description relates class agents consideration thesis 
analysis coarse grained useful 
area interest minor relevance thesis 
avoiding logical omniscience number attempts develop epistemic logics avoid logical omniscience problem retain theoretically attractive properties possible worlds semantics 
better known examples reviewed section 
levesque logic implicit explicit belief second fagin halpern logic general awareness part inspired levesque 
levesque proposed making distinction explicit implicit beliefs 
define semantics implicit explicit beliefs levesque proposed situations notion borrowed situation semantics see 
situation best thought fragment world partial description world 
situations similar possible worlds differ world assigns primitive proposition true false situation may assign true false case situation said incoherent 
levesque proceeded assigning agent set situations compatible explicit beliefs 
agent said explicitly believe truth supported situation compatible agent explicit beliefs 
syntactically levesque logic classical propositional logic extended unary modal operators explicit belief implicit belief 
nested beliefs allowed 
model levesque logic structure hs fi set situations set situations compatible agent explicit beliefs prop powerset takes primitive proposition returns set situations support truth prop powerset takes primitive proposition returns set situations support falsity 
single satisfaction relation standard logics levesque defines satisfaction relations hold structures form hm si model situation formulae language 
relation supporting truth relation supporting falsity 
semantic rules main part language 
rules straightforward particular clearly show means situation support truth falsity proposition 
seventh rule explicit belief overcome problem logical omniscience 
consider fundamental problem possible worlds semantics knowing tautologies valid formulae tautology known assigned truth value true worlds 
effect world acts propositional valuation definition assigns true tautology 
levesque formalism tautology necessarily assigned true situation situation may assign primitive proposition true false 
short situations act propositional valuations problem arise 
similar arguments show explicit belief defined closed logical consequence agents inconsistent believing logically equivalent formulae equivalent explicit beliefs 
hm si prop iff hm si prop iff hm si iff hm si hm si hm si iff hm si hm si hm si iff hm si hm si iff hm si hm si bf iff hm si hm si bf iff hm si bf semantics levesque logic implicit belief operator operator function defined takes situation returns set situations properties agree truth falsity propositions act propositional valuations 
incoherent function extended take set situations way 
fs 
semantic rules implicit belief operator 
hm si lf iff hm si hm si lf iff hm si lf implicit belief operator picks situations compatible agent explicit beliefs act classical propositional valuations situations act worlds definition implicit belief operator 
suppose bf true model 
situation supports truth subset picked implicit belief operator support truth 
lf true model 
gives validity bf lf general reverse hold 
note properties normal modal necessity operator logic 
levesque logic appears solve problem logical omniscience main objections see 
allow quantification see 
second allow nested beliefs 
third notion situation levesque logic suspect notion world normal epistemic modal logic 
fagin halpern shown certain circumstances agent modelled levesque scheme aware propositional tautologies 
effort recover negative result fagin halpern developed logic general awareness 
logic contains modal operator implicit belief operator awareness derived operator explicit belief 
call language logic logic general awareness 
semantically logic simpler levesque 
models structures form hs pi set states powerset form maps state set formulae agent aware state transitive serial euclidean relation powerset prop interprets primitive propositions states 
non standard semantic rules operators 
hm si lf iff hm si hm si af iff operator ordinary modal necessity operator restrictions belief accessibility relation mean logic kd 
operator says agent aware formula 
explicit belief operator introduced abbreviation 
bf lf af agent explicitly believes aware true epistemic alternatives 
effect awareness set state acts filter picking beliefs agent aware opposed agent knows 
konolige detailed critique logic general awareness compares deduction model belief see 
concludes gained considering logic general awareness far modelling resource limited reasoning beliefs concerned 
powerful deduction model re expressed terms 
practice mixing sentential possible worlds elements semantics preserve elegance offer insight psychological nature explicit belief 
beliefs goals intention rational balance formalisms considered far focussed just aspect intelligent agency knowledge belief 
expected general theory agency integrate reasoning facets intentionality components agent cognitive makeup goals intentions best known sophisticated attempt show done due cohen levesque 
logic rational agency object study section cohen levesque formalism originally develop theory intention intended authors required pre requisite theory speech acts see chapter summary full details 
logic subsequently proved useful specifying reasoning properties agents analysis conflict cooperation multi agent dialogue studies theoretical foundations cooperative problem solving 
section focus logic developing theory intention 
step lay criteria theory intention satisfy 
building intelligent agents particularly agents interact humans important rational balance achieved beliefs goals agents 
example desirable properties intention autonomous agent act intentions spite adopt intentions believes feasible forego believed infeasible keep commit intentions forever discharge intentions believed satisfied alter intentions relevant beliefs change adopt subsidiary intentions plan formation 
bratman cohen levesque identify specific properties satisfied reasonable theory intention 
intentions pose problems agents need determine ways achieving 

intentions provide filter adopting intentions conflict 

agents track success intentions inclined try attempts fail 

agents believe intentions possible 

agents believe bring intentions 

certain circumstances agents believe bring intentions 

agents need intend expected side effects intentions 
unfortunately logic complex allow detailed presentation 
outline significant components detailed technical review appendix bel agent believes goal agent goal happens action happen done action just happened table modalities cohen levesque formalism criteria cohen levesque adopt tiered approach problem formalizing theory intention 
construct logic rational agency careful sort relationships basic modal operators 
top framework introduce number derived constructs constitute partial theory rational action intention constructs 
syntactically logic rational agency sorted order multi modal logic equality containing primary modalities see table 
semantics bel goal possible worlds usual way agent assigned belief accessibility relation goal accessibility relation 
belief accessibility relation euclidean transitive serial giving belief logic kd 
goal relation serial giving logic kd 
assumed agent goal relation subset belief relation implying agent goal believes happen 
worlds formalism discrete sequence events stretching infinitely past 
basic temporal operators happens done augmented operators describing structure event sequences style dynamic logic 
important constructors denotes followed 
denotes test action standard time operators temporal logic defined abbreviations strict operator happens 
temporal precedence operator derived holds holds important assumption goals eventually dropped goal major derived construct persistent goal 
goal goal bel bel bel goal agent persistent goal 
goal eventually true believes currently true 

drops goal conditions hold agent believes goal satisfied agent believes goal satisfied 
small step persistent goals definition intention intending act 
note intending true similar requires slightly different definition see 
intend goal done bel happens cohen levesque go show definition meets bratman criteria theory intention outlined 
critique cohen levesque theory intention space restrictions prevent discussion 
meta languages syntactic modalities school thought cult mathematics computer science ai holds classical order logic sense canonical done non classical modal logic reduced problem order logic 
area reasoning intentional notions thinking manifests order meta languages represent reason beliefs goals basic idea meta language quite simple 
recall naive attempt formalize believes father zeus earlier bel father zeus syntactic problem pseudo formalization father zeus formula order logic term formula ill formed 
suppose domain order language called meta language contains formulae language called object language 
suppose meta language contains terms denote object language formulae 
possible write meta language formula capturing sense 
meta language formulae readable useful employ quoting convention 
suppose object language formula usual abbreviation meta language term standing formulation sentence bel father zeus father zeus meta language term syntactically acceptable formula metalanguage 
approach belief knowledge axiomatized order meta language properties deemed appropriate 
obvious difficulty possible quantify object language terms 
difficulty overcome un quoting convention see pp discussion point 
quote marks called frege quotes sense quotes 
process making formulae objects meta language domain called godel metalanguage technique proof incompleteness arithmetic names object language formulae called godel numbers 
claimed meta language approaches enjoy advantages modal languages 
expressive power 
meta language formulae quantified modal logic counterparts bel believes bel bel believes believes 
computational tractability 
meta languages just sorted order languages automated theorem provers exist 
possible principle existing theorem provers meta languages 
claim satisfactorily demonstrated 
unfortunately meta language approaches suffer severe problems 
problems discussed section 
meta language approach described detail 
hybrid formalism part meta language approach part possible worlds briefly described 
meta languages self inconsistency key difficulty meta language approaches naive attempts treat meta language predicates syntactic modalities run inconsistency 
difficulties arise large part issue self discussion issues may issue self examined detail 
suppose wished meta language approach represent reason knowledge belief 
standard practice knowledge may defined true belief 
setting meta language object meta language circumstances metalanguage said self referential may contain terms refer formulae 
truth predicate defined 
true knowledge may defined composite concept 
know bel true bel predicate axiomatization deemed appropriate 
approach simple intuitive satisfactory 
unfortunately general order meta language theory containing axiom turns inconsistent 
problem recognized tarski difficulty possibility formulae asserting falsity famous liar paradox 
proposals put forward remedy problem 
possibility define true false predicates formulae true false hold effect system law excluded middle hold 
solution unintuitive ad hoc 
solution due perlis replace axiom form true formula obtained replacing occurrence true true 
simple expedient prevents inconsistency see pp proof 
proposal criticized konolige number grounds see details 
problem alleviated perlis schema recognized montague 
consider axiom bel inference rule infer bel cf 
modal system kt 
montague showed moderately sophisticated order theory particular basic arithmetic containing axiom inference rule inconsistent 
result appears devastating long time research order meta languages 
similar result thomason similarly discouraging 
des rivieres levesque shown montague results technically correct careful reworking slightly different assumptions leads back consistency perlis shown similar technique proposed recovering tarski result recover montague results 
despite results author aware recovery thomason negative results 
discussion illustrates issue self referential languages difficult 
hardly surprising researchers rejected self entirely 
critic konolige suggests observer system agents hardly self referential language 
argues logical puzzles caused self just puzzles agent usually need consider philosophy logic student 
standard alternative self referential languages hierarchical language structure 
consider tower languages language non self referential base language standard order logic example 
languages meta language containing terms referring formulae languages lower hierarchy 
language hierarchy self referential 
possible write formulae languages paradoxes self arise 
fact showed naive translation modal meta language causing difficulties 
hierarchical approach problems 
consider scenario adapted 
agents equal expressive powers belief believe believe vice versa 
consider statement 
believes believes true 
statement represented hierarchical approach 
obviously represented obvious solution write bel bel true 
suppose inner bel predicate belongs language 
variable formula ranges formulae languages range language beliefs language lower hierarchy 
moving language hierarchy solve problem matter far climb object meta language hierarchy able capture intuitive content 
pp objections hierarchical approach raised 
example morgenstern points truth predicate paradox resolved positing infinite number truth predicates language hierarchy 
argues satisfactory solution reasons place implausible people consciously aware different truth predicates speak 
secondly know truth predicate utter particular statement 
impossible construct pair sentences refers sentences may perfect sense 
self referential hierarchical languages difficulties 
problem common meta languages general notationally cumbersome unintuitive complex see discussion point 
difficulties described prevented development ingenious useful meta language formulations intentional notions 
konolige order formalization knowledge action kurt konolige described hierarchical meta language formalism describing reasoning knowledge actions computational agents 
section briefly review formalism 
describing meta object language relationship moving specifics konolige axiomatization 
moment assume object language standard order language 
primitive object language expression assumed corresponding meta language term metalanguage terms denoting compound object language formulae constructed meta language functions 
example object language formula denoted meta language term imp 
construction somewhat cumbersome sense quotes abbreviations write object language formula reflects true state world konolige meta language truth predicate true axiomatization true true true true true konolige took syntactic approach describing beliefs agents agent assigned set formulae theory believes provable theory 
meta language function th assumed takes term denoting agent returns set object language formulae representing agent theory 
meta language predicate fact assumed says member theory common fact formula common agent theories true 
fact th true step introduce predicate pr provability 
binary predicate theory formula arguments 
axiomatization desired konolige suggests giving provability complete respect object language 
axiomatization include modus ponens reflexivity pr imp pr pr pr pr belief defined meta language predicate holds agent object language formula agent believes provable theory 
bel pr th knowledge defined true belief usual way 
konolige goes extend formalism ways introduces standard name function denotation function simplify notational problems associated meta language approach deals nested belief beliefs beliefs extending language hierarchy hierarchy introduces situations sense situation calculus domain meta language reasoning changing world 
details extensions need concern 
critique konolige formalism developed davies 
addition drawbacks associated hierarchical languages generally davies suggests criticisms konolige formalism layer hierarchy ad hoc computationally konolige formalism unwieldy due meta level overhead axioms common facts invalid 
moore formalism influential figures development intentional logics moore 
doctoral thesis detailed formal examination interaction knowledge action framed multi modal order logic 
logic possible worlds semantics semantics normal modal logics discussed earlier 
moore took novel step showing semantics axiomatized order meta language 
modal formulae translated order meta language formulae axiomatization 
theorem proving modal language reduced problem theorem proving meta language 
moore formalism complex details omitted interested reader referred cited works 
part formalism essentially treatment knowledge possible worlds semantics moore axiomatized semantics modal operators order meta language 
moore developed treatment action action constructors style dynamic logic 
moore went detailed examination way knowledge action interact 
culminated definition ability means agent able 
moore began analysis noting knowledge action interact obvious ways 
result performing action agent gain knowledge 
agents perform test actions order find things 

order perform actions agent needs knowledge knowledge pre conditions 
example order open safe necessary know combination 
result considerations moore defined ability having rigid designator action agent knows result performing action goal achieved having initial action agent may perform performed agent position achieve goal 
definition subsequently extended refined workers 
moore formalism major advantage ultimately order meta language possible order theorem prover 
moore formalism fact implemented appelt natural language planning system kamp 
number difficulties formalism 
important follows 
process translating modal language order theorem proving firstorder language inefficient 
reichgelt observes hard wired modal theorem provers probably efficient pp 

formulae resulting translation process complicated unintuitive 

moore formalism possible worlds falls prey logical omniscience 
corollary definition ability somewhat vacuous agents know necessary truths weakens knowledge precondition 
conclude approach order meta language axiomatize semantics modal developed order provide framework efficient modal theorem proving 
approach ruled practice clear advantages technique normal modal language 
formalisms section examine formalisms reasoning intentional notions fit neatly categories described 
konolige deduction model belief examined detail werner formalism situation semantics singh formalism briefly described 
deduction model belief konolige order formalization knowledge action described agent beliefs modelled set formulae provability relation 
motivated shortcomings formalism see konolige went develop family belief logics semantic model similar described 
logics employed modal language belief cumbersome metalanguage formalism limited form deduction provability relation modelling resource bounded reasoning 
originally described doctoral thesis published polished revised form 
starting point deduction model belief observation important properties belief purposes necessary typical robot planning problem solving systems deduction model developed effort define accurate models beliefs ai systems 
important point overlooked critics deduction model aim develop model beliefs artificial computational agents model human believers 
argued model capture properties beliefs agents may derive beliefs necessarily derive logically possible 
possible worlds logics belief capture property capture second 
construct model beliefs ai systems captures properties 
konolige observed ai systems constructed ai researchers look design answer questions internal mental structures 
effect systems subjects discipline appropriately termed experimental robot psychology 
base beliefs inference rules control strategy oe queries replies gamma gamma structure typical ai belief system konolige noted typical ai system structure illustrated 
base beliefs correspond called knowledge ai system belief surely appropriate term 
beliefs usually expressed symbolic language 
language may semantic nets frames generally logical language subset order predicate logic 
call language internal language 
important distinguish language external language observer describe beliefs agents 
languages may necessarily case may way talking beliefs agents internal language 
second feature set inference rules 
ai systems limited inferential ability pseudo logical inference 
inference inevitably limited computational resources available agent 
general possible agent derive possible consequences set beliefs infinite number consequences 
application inference rules generally guided control strategy 
unfortunately trying mathematically model control strategies possible due inherent complexity 
konolige proposed simplifying modelling process assuming agent possessed finite set rules applied exhaustively agent base beliefs 
agent believes possible derive agent base beliefs deduction rules 
model resource bounded reasoners manages capture incomplete reasoning advantage simplicity 
model belief systems outlined formalized deduction structure 
deduction structure pair hd ri database base beliefs countable set formulae internal language belief set deduction rules 
deduction rule rule inference satisfy properties number premises rule fixed finite rule effectively computable function premises 
relation defined sets formulae formulae internal language set deduction rules iff proof rules relation enjoys properties proof relation including transitivity reflexivity 
closure set formulae set deduction rules function close hd ri ff fg called bel konolige 
suppose deduction structure agent belief meaning 
close believes close doesn believe close believes close doesn believe note may case agent belief system simultaneously satisfies second fourth conditions modelling possibility agent opinion formula 
note deductive closure modelled close function weaker property consequential closure 
konolige defines external languages describing beliefs allow modal contexts bq 
language essentially internal language assumed superset classical order logic augmented indexed set unary modal operators agents 
ng 
formula read believes 
model model order logic augmented set agents 
ng indexed set deduction structures fd 
ng 
semantics modal formulae rule 

iff close deduction rules agent respect model 
difficult see axiom sound konolige models 
ff 
axiom justifies derived rule inference 

ff 
infer konolige develops tableaux decision procedure resolution system logics resolution system formalism attractive computational point view 
having developed basic logic konolige goes develop operators common knowledge operator circumscription operator 
common knowledge operator idea fictitious agent beliefs fool know 
agent name reserved agent 
semantics common knowledge operator follows 

iff close close 
ng common knowledge possible agents capable having beliefs beliefs 
axiom obviously sound 
circumscription operator unusual 
written hi gif read derivable deduction structure 
semantic rule operator 
hi gif iff understand operator consider trying represent statement modal language belief facts knows circumscription operator statement formalized follows hi gif forward implication tells prove believed believe 
reverse implication says believe believes effect operator allows circumscribe agent beliefs 
deduction model undoubtedly simple model belief 
ai researchers accustomed building agents architecture lines described konolige deduction model far earth semantics possible worlds 
deduction model critics 
commonest criticism deductive closure property agent belief system 
konolige gives criticism 
outlines method modelling belief systems local cost bound derivations 
second argues deductive closure property needed order alleviate need modelling proof trees agendas required model agent belief system 
implication finer grained model belief developed required specific applications 
criticism deduction model ad hoc modelling belief systems sets formulae naive approach see 
criticism unfounded 
konolige shows deduction model treated generalization possible worlds semantics standard possible worlds systems modelled deduction model see chapter 
second deduction model developed model human belief model beliefs ai systems 
conclude deduction model arguably simplistic capture intricacies human belief serves adequate model beliefs ai systems suited purposes thesis 
werner formalism extensive series papers published eric werner proposed formalism modelling reasoning multi agent societies draws game theory temporal logic intentional logics 
detailed technical review werner formalism logic lt known appendix werner defines cognitive state agent triple hi vi information state agent intentional state agent evaluative state agent 
information state agent set partial histories corresponding epistemic alternatives 
partial history represents way world developed agent knows 
intentional plan state agent set strategies 
strategy represents course action agent follow 
strategy function information states set histories leaving state 
strategy presumably maps information state states result strategy followed 
evaluative state agent represents agent preferences may function assigns particular history numerical value called utility history 
simple starting point werner investigates number aspects cooperative activity including speech acts planning social structure 
werner theory speech acts reviewed briefly chapter model social structure outlined appendix interesting aspect werner model agent intentional state set strategies 
approach flexible goal accessibility relation proposed cohen levesque see 
situation semantics situation semantics originally developed formalism natural language semantics philosophers barwise perry 
chief motivation deep dissatisfaction montague grammar prevailing formalism natural language semantics possible worlds semantics 
felt possible worlds point view dead wrong deeply unsatisfactory philosophically mathematically 
assumption built possible worlds semantics world provides total information extension piece language world time 
publication situations attitudes intense interest situation semantics linguistics community comparatively little interest mainstream ai community 
situation semantics degree devlin interested building foundational theory information 
interesting valuable situation semantics undoubtedly clear employed reason multi agent systems 
subject largely tangential interests thesis discussed detail interested reader referred cited works 
singh formalism series papers munindar singh outlined various aspects theory multi agent systems 
motivation appears similar thesis investigate methods reasoning multiagent systems 
techniques adopts quite different 
detailed analysis cognitive structure agents develops branching time logic multi agent systems includes believes intends operators describe beliefs intentions agents 
semantics operators unified view cognition action communication called discourse representation theory drt 
goal drt provide theory discourse meaning capture aspects information typically encoded natural language utterances 
unfortunately examination drt quite scope thesis 
agency ai building agents thesis far largely concerned question reason agents agents viewed intentional systems 
section move away considerations turn question agents built aim thesis develop formalisms reasoning systems composed real computational agents 
question build agents course big sense ai project 
question big 
ongoing debate ai best way go building intelligent agents 
debate may broadly divided camps traditional symbolic logicist camp alternative behavioural camp connectionists somewhat debate section key arguments camp described 
symbolic ai agency foundation corpus symbolic ai constructed physical symbol system hypothesis formulated newell simon physical symbol system defined physically realizable set physical entities symbols combined form structures capable running processes operate symbols symbolically coded sets instructions 
system hypothesis says system capable general intelligent action 
short step notion physical symbol system mccarthy dream sentential processing automaton deliberate agent term deliberate agent introduced genesereth pp slightly general sense 
deliberate agent satisfies properties 
contains explicitly represented database formulae logical language representing beliefs 

operates continuous cycle observe deliberate act 
reasoning deciding actions form logical inference 
deliberate agent ultimate aim pure logicist ai project looser sense description agent classical ai generally 
worth pointing beliefs systems konolige trying model deduction model belief see earlier 
worth pointing members camp complete agreement certainly don agree members opposing camp 
see detailed discussion way hypothesis affected thinking symbolic ai 
supporters classical ai general accepted physical symbol system hypothesis acceptance hypothesis variant led researchers believe appropriate way design agent capable finding way round acting physical world equip formal logic representation world get bit theorem proving 
accepts doctrine important problems solved build intelligent agent 
transduction problem translating real world accurate adequate symbolic description world time description useful 

representation reasoning problem representing information symbolically getting agents manipulate reason time results useful 
problem led vision speech understanding learning led knowledge representation automated reasoning automated planning despite immense volume problems generated people argue problem near solved 
seemingly trivial problems commonsense reasoning turned extremely difficult 
detailed exposition specific problems quite scope thesis illustrate problems ai planning briefly reviewed 
widely accepted symbolic ai community planner central component structure artificially intelligent agent 
briefly planner takes goal agent want achieve symbolic representation current state world agent beliefs generates plan action agent follows achieve goal 
planning argued central component everyday activity intelligent agent engage see 
real planner strips system developed fikes late early 
basic components strips model world set formulae predicate logic set action schemata describe pre conditions effects actions available planning agent 
component proved strips lasting legacy ai planning community nearly implemented planners employ strips formalism action variant 
strips planning algorithm principle finding difference current state world goal state reducing difference applying action 
unfortunately proved inefficient process formulating plans strips tended lost low level plan detail 
effort overcome problem sacerdoti developed hierarchical planner called works sorting high level plan components moving low level details 
despite performance improvements gained hierarchical planning planning process remained time consuming 
efforts improve performance 
came chapman tweak non linear planner proved correct sense produces solution solution correct signifies failure solution possible 
course chapman established results delivered body blow ai planning community 
long known worst case planning problem np hard discouraging result 
chapman showed correct planning general case undecidable 
planning activity long regarded central classical model artificially intelligent agency turns computationally intractable problem planners moderate sophistication undecidable 
result led number researchers reject classical ai model agency altogether seek alternative 
alternative approaches probably vocal critic symbolic ai notion agency rodney brooks researcher mit 
brooks originally robotic engineer apparently frustrated ai approaches building control mechanisms autonomous mobile robots 
outlined alternative architecture building agents called subsumption architecture began attack symbolic ai 
analysis alternative approaches begins brooks 
papers brooks key theses :10.1.1.12.1680
intelligent behaviour generated explicit representations kind symbolic ai proposes 

intelligent behaviour generated explicit reasoning kind symbolic ai proposes 

intelligence emergent property certain complex systems 
brooks identifies key ideas informed research 
situatedness embodiment 
real intelligence situated world disembodied systems theorem provers expert systems 

intelligence emergence 
intelligent behaviour arises result agent interaction environment point borne practical terms 
intelligence eye 
brooks just dreyfus style critic ai ideas probably gained currency 
demonstrate validity claims built number robots subsumption architecture 
subsumption architecture hierarchy task accomplishing behaviours 
behaviour competes exercise control robot 
lower layers represent primitive kinds behaviour avoiding obstacles precedence layers hierarchy 
stressed resulting systems computational terms extremely simple explicit reasoning pattern matching kind symbolic ai systems 
despite simplicity brooks demonstrated robots doing tasks extremely impressive accomplished symbolic ai systems 
example robot goes office building looking soda pop cans lifting see empty discarding 
similar reported steels described simulations mars explorer systems containing large number subsumption architecture agents achieve near optimal performance certain tasks 
time brooks describing results subsumption architecture chapman completing master thesis reported theoretical difficulties planning described coming similar inadequacies symbolic ai model 
worker agre began explore alternatives ai planning paradigm 
agre conceptually sophisticated thats brooks 
observed everyday activity routine sense requires little new reasoning 
tasks learned accomplished routine way little variation 
agre proposed efficient agent architecture idea running arguments 
crudely idea decisions routine encoded low level structure digital circuit needs periodic updating handle new kinds problems 
approach illustrated celebrated pengi system 
sophisticated approach rosenschein kaelbling propose describing agent intentional terms compiling intentional description low level device realises description 
situated automata paradigm attracted interest see 
researchers described similar noticeably phillips group worked behaviour systems 
hybrid systems described try marry classical alternative approaches success 
summary chapter began trying come definition agent 
difficult analyses high level analyses agenthood proved useful 
agent identified dennett notion intentional system simply described terms intentional notions belief desire 
motivated detailed analysis formal methods reasoning intentional notions 
analysis began look classical order logic appropriate task 
discussed length called possible worlds semantics 
problems notably logical omniscience identified possible worlds approach variations possible worlds theme discussed 
meta language approaches reasoning knowledge belief reviewed 
konolige deduction model belief reviewed model beliefs ai systems 
focus chapter turned methods reasoning ai systems agents built 
classical ai model agency accord deduction model belief agent equipped set formulae logic beliefs constitute description world 
objections classical model agency notably theoretical difficulties associated activities generally taken heart classical ai model agency discussed alternative mentioned 
focus thesis classical models agency alternative discussed 
chapter focussed largely isolated aspects agency knowledge beliefs single agents 
aim chapter move aspects social agency particular methods reasoning communication building social agents 
chapter social agency distributed artificial intelligence definition agent dai system social exists environment containing agents generally expected interact way 
agents dai situated multi agent environment disembodied isolated early ai theorem provers expert systems 
consequently dai largely concerned social aspects agency 
aspects agency object study chapter 
chapter structured follows 
notion communication examined 
axiomatic social agents able communicate peers universally assumed dai 
various ways communication treated dai literature examined section 
leads recognition speech acts widely method describing reasoning communication dai 
section examines various formal semi formal speech act theories detail origins austin treatments cohen levesque 
section echoes structure preceding chapter examining various ways social agents built dai 
chapter closes summary 
communication dai widely accepted communication plays central role dai systems 

consider twin problems coordination ensuring actions agents system conflict self defeating coherence ensuring global system performance satisfactory arise non trivial dai system best currently available account problems pp 
root cause problems lack information generally feasible agents maintain complete correct current knowledge environments 
short agent knows precisely agent doing 
agents generally maintain partial knowledge shall see limited cases knowledge 
basic role communication provide means exchanging information plans partial results synchronization information 
werner identified ways communication treated dai pp 
communication 
simplest kind communication communication 
agents infer plans communicating employ structured environment alleviates need direct communication 
alternative pre established harmony agent operates pre determined scheme achieve goal need communicate run time 

signalling 
synchronization multi agent activity may achieved semaphore signals 
worth pointing classic computer science problems communication problem efficiently transmitting packet information node considered scope dai 
low level problems generally considered solved dai purposes 

computation message passing 
hewitt agha developed computational paradigm notion message passing called actor systems contain large numbers fine grained agents working 
generally dai systems communication message passing 

plan passing 
problems coordination coherence mentioned tackled plan exchange particularly partial global planning paradigm 

speech acts 
basic axiom speech act theories communication form action way lifting block table action 
speech act theories developed philosophers linguists attempt understand workings human communication 
possibility communication practicable certain circumstances inferring plans time consuming useful structured environments feasible certain highly stylized tasks 
similar comments apply signalling synchronization operating system sense little 
actor paradigm deals fine grained massively concurrent systems limited interest thesis 
plan passing specific technique coordinating multi agent activity minor interest purposes thesis 
best developed framework reasoning communication speech act theories theories reviewed detail section 
speech acts speech act theories originally fairly obscure issue linguistic philosophy central component ai linguistic theory 
speech act theories pragmatic theories language deal language everyday situations achieve everyday ends 
pragmatics distinguished syntax language form semantics language meaning 
basic axiom speech act theories utterances humans everyday situations actions typically performed speaker intention change state world way analogous way physical actions 
utterances change state physical world obvious way appropriate ask exactly changed utterance 
utterances performed context alter context 
essence basic idea pragmatic theories language 
suppose set possible utterances language set contexts 
pragmatic theory viewed function equivalently see pp function prag pp 
complete theory account 
set possible contexts 

internals function generally accepted context utterance composed mental states utterance participants beliefs desires consistent view agents intentional systems discussed preceding chapter 
subsections analyze various developments speech act theories treatment adapted 
speech acts la austin origin speech acts theory usually attributed austin 
book things words noted everyday spoken language humans class sentences simply assert ignoring pathological cases causing avalanche effects 
fact perform action 
austin called sentences performatives 
noted performatives fail sense non linguistic actions fail 
austin called conditions required successful completion performatives conditions 
recognized important conditions 
accepted conventional procedure performative 
circumstances persons specified procedure 

procedure executed correctly completely 

act sincere uptake required completed insofar possible 
illustrate condition consider saying country 
gone legal procedures required hearer legal authority act performative 
conventional procedure say 
second part condition arise example wrong baby 
second condition relatively straightforward 
third subtle 
requires example agents appropriate mental state perform act carry required behaviour 
example asking wanting promising having intention carrying promise condition 
austin postulated uttering sentence agent performs types action acts 
act performed simply uttering syntactically acceptable sentence 
illocutionary acts 
illocutionary act performed performative verb 
examples performative verbs request inform insist state demand argue 
austin claimed english language contains verbs 
performative verb associated illocutionary force 
performatives similar identical illocutionary force inform tell 
performatives identified seeing take adverb inform 
acts 
act bringing effect hearer utterance 
term speech act subsequently illocutionary act 
speech acts la searle important stage development speech acts theory came john searle book speech acts developed 
main thesis searle conversing language rule governed form behaviour 
searle attempted formulate structure speech acts deriving set necessary sufficient conditions successful completion 
example conditions searle suggested hold order successful completion request act listed speaker speaker uttering sentence request hearer hearer perform action 

normal conditions 
normal conditions state hearer able hear request hearer deaf act performed normal circumstances film play 
preparatory conditions 
preparatory conditions state true world order speaker correctly choose speech act 
case hearer able perform action speaker believe hearer able perform action 
obvious hearer action anyway 

conditions 
conditions distinguish sincere performances request performance act occur speaker really want action performed 

essential conditions 
act attempt speaker get hearer action 
searle listed similar sets conditions asserting questioning advising warning greeting 
observed speech acts similar illocutionary force 
begs question possible classify illocutionary acts typology 
searle believed essential part understanding speech acts 
proposed point typology 
representatives 
representative act commits speaker truth expressed proposition 
paradigm case asserting 

directives 
directive attempt part speaker get hearer 
paradigm case requesting 


commit speaker course action 
paradigm case promising 


express psychological state gratitude 
paradigm case 

declarations 
effect changes institutional state affairs 
paradigm case declaring war 
levinson criticized typology grounds lacks principled basis number proposed pp 
merits sentence types common languages imperatives 
speech acts la cohen perrault landmark published cohen perrault took searle attempted re formulate necessary sufficient conditions techniques adapted mainstream ai planning 
result plan theory speech acts 
cohen perrault pointed model humans planners continually generating debugging executing plans constitute behaviour 
suggested speech acts viewed operators plans way physical actions viewed operators planning 
aim develop theory speech acts modelling planning system operators defined terms speakers hearers beliefs goals 
speech acts treated way physical actions 
words context defined cohen perrault speech acts operate mental state participants mental states defined terms beliefs desires 
model consistent view agents intentional systems 
consider request act act fundamental 
aim request act speaker get hearer perform action 
table defines request act 
definition requires explanation 
preconditions stated pr pre conditions want pr want pre conditions 
pr states successful completion request conditions hold 
speaker believe hearer request able perform action 
second speaker believe hearer believes ability perform action 
want pr states order request successful speaker believe wants request performed 
pre conditions request fulfilled request successful result defined effect part definition hearer believes speaker believes wants action performed 
successful completion request ensures hearer aware speakers desires guarantee desired action performed 
definition request models illocutionary force act 
says force 
required mediating act 
table gives definition cause want example act 
definition agent come believe wants believes agent believes wants 
definition clearly extended adding pre conditions beliefs social relationships power structures inform act basic request 
aim performing inform speaker get hearer believe statement 
request definition inform requires associated mediating act model force act 
definitions inform associated mediating act convince table 
pr inform states speaker believe true 
effect act simply hearer believe speaker believes pr convince simply states hearer believe speaker believes effect simply hearer believe request preconditions pr believe believe believe want pr believe want request instance effect believe believe want cause want preconditions pr believe believe want want pr effect believe want inform preconditions pr believe want pr believe want inform instance effect believe believe convince preconditions pr believe believe want pr effect believe table definitions plan theory speech acts note inform request acts degree interchangeable 
suppose agent speaker wants task action performed agent hearer 
request act described provides obvious method causing hearer carry task 
examination inform act illustrates method achieving result 
suppose speaker performed act inform speaker hearer speaker want action definition inform successful completion act cause hearer believe speaker believed wanted action performed 
turn satisfy pre condition part cause want 
issuing inform want appears achieve result issuing request point examined 
definitions expounded assumed result speech act may modelled completely effect part definition 
virtue fact agent performed speech act possible inferences cognitive state speaker 
example hearer may reasonably infer pre conditions act held speaker performed speech act 
tells hearer cognitive state speaker 
inferences called side effects 
enjoyed success 
example appelt celebrated natural language generation system kamp 
appealing formulation speech acts problems 
recognition illocutionary force necessary component language point stated explicitly appelt 
extremely humans classify acts understanding taxonomy speech acts useful right constitute explanation dialogue 
general agreement deep theory speech acts rooted theory rational action starting point cohen levesque described section 
situations explicit reasoning type act necessary hearer unsure speaker ironic 
speech acts la cohen levesque cohen levesque developed theory arguably represents state art logical analysis speech acts 
proceeds basic premises 
illocutionary force recognition unnecessary 
speakers hearers recognize intentions mutual beliefs 
require intentions include intentions hearer recognize precisely illocutionary act performed 

illocutionary acts complex event types primitives 
point find way describing actions performed 
actions previous chapter mentioned slippery concept 
recall searle example simultaneously pulling trigger firing gun killing ferdinand starting world war actions performed 
just action described ways number actions 
cohen levesque solution logic rational action described briefly preceding chapter detail appendix provides number primitive event types put complex event types dynamic logic style constructions 
illocutionary acts defined complex event types 
approach best illustrated giving definition request 
preliminary definitions required 
alternating belief 
abel bel bel bel bel times times related concept mutual belief 
bmb abel attempt defined complex action expression curly brackets distinguish predicate modal operator 
qg bel goal happens intend 
english attempt complex action agents perform desiring bring effect intent produce result 
idea represents ultimate goal agent aiming doing proposition represents takes honest effort achieve definition helpfulness helpful bel goal done goal done goal done english agent helpful agent action adopts agent goal eventually action goal conflict 
definition requests note curly brackets requests complex event types predicates operators addr ag bmb addr goal done addr intend addr goal done addr helpful addr english request attempt part doing bring state ideally addr intends relative having goal addr inclined addr eventually brings state addr believes mutually believed wants ideal situation 
definition primitive request act speaker viewed having performed request executes sequence actions produces needed effects 
short event complexity satisfies definition counted request 
cohen levesque show request takes place possible infer searle preconditions act held pp 
cohen levesque starting point galliers developed general framework multi agent dialogue acknowledges possibility conflict 
non monotonic reasoning belief revision speech acts reprinted perrault described reiter default logic reason speech acts 
perrault insight see scenario containing communicating participants represented default theory 
default theory pair containing set formulae called assumptions set default rules key difference default classical logic default logics obey monotonicity principle 
reasoning speech acts assumptions part theory contains observer knowledge world utterance rules part contains small set default rules capturing assumptions scenario 
example rule belief transfer rule believes believes consistent beliefs believe default theory augmented statement utterance performed statements describing observing perrault claims ach extension resultant default theory describes consistent view observer knowledge world utterance 
positive features perrault theory deal situations pre conditions speech act hold example speaker utters assertion world fact believe assertion hearer fails detect lie 
perrault theory criticized number grounds pp 
theory predicts agent come believe unsupported proposition simply uttering 
odds everyday experiences 

theory adequately deal belief revision 

theory easily integrated theory action 

belief transfer rule easily implemented 

default logic formalization easily implemented 
motivated points appelt konolige proposed hierarchic auto epistemic logic reasoning speech acts 
essentially extension auto epistemic logic developed order allow reasoning priorities default theories 
syntactically auto epistemic logic classical logic augmented single unary modal operator formula lf having intended reading believe 
operator possible write formulae expressing believe achieve simple default reasoning 
contrast auto epistemic logic contains indexed set operators fl referring different evidence spaces evidence spaces arranged hierarchy defined irreflexive founded partial order oe 
oe evidence space said specific information lower level evidence spaces filters higher levels 
formula read th level evidence space 
operator applied evidence spaces lower hierarchy possible write formulae expressing specific information 
priorities defaults incorporated putting different levels hierarchy higher level lower priority 
possible write formulae reasoning prioritized defaults 
readily demonstrated theory just extension making tractable system automation reiter logic 
reasoning speech acts way hierarchy autoepistemic subtheories oe oe 
lowest subtheory contains strongest evidence speaker hearer mental states 
example known hearer speaker lying information goes subtheory defaults collected effects speech act beliefs speaker hearer 
defaults overridden particular evidence constitute level reasoning speech act 
level beliefs speaker hearer deduced evidence guide defaults nested beliefs speaker beliefs hearer beliefs vice versa 
results collected similar manner successive levels contain result agent reflection interlocutor beliefs intentions lower level 
authors show perrault results reconstructed scheme show proposal subject problems perrault technique 
galliers proposed autonomous belief revision plays important role cooperative interaction 
idea agent preference ordering cognitive states number different possible cognitive states agent choose preferred state 
agents control cognitive state 
revision cognitive state motivating force communicative behaviour 
specialized rules dictating cooperative response success utterance guaranteed 
autonomous agents may may comply recognized intended effects utterance cognitive states 
strategic interaction acknowledges participants sharing control effects communication 
aim utterance planning determine actions goals context 
context includes agent autonomy presumed existing mental states 
strategic planning achieve desired change belief states matter setting goal state prediction context agent general rules rational autonomous belief revision dictate desired change anyway 
werner formalism speech acts papers werner formalism describing cognitive states agents see preceding chapter appendix canvas paint theory speech acts 
central theory notion pragmatic interpretation function prag 
suppose rep set cognitive representational states agent set formulae language 
prag function prag rep rep pragmatic interpretation function takes formula language returns function maps cognitive state cognitive state 
werner described elements rep length theory concentrates part describing properties function assertions directives 

assertions 
pragmatic interpretation sentence jon opened door arrived follows refers event jon opening door 
prag operator hearer information state prag reduction set just histories event occurred 
hearer knows holds worlds comes know result receiving interpreting message 
agent information set viewed set epistemic alternatives werner implies receiving interpreting accepting message agent comes know propositional content 

directives 
example open door refers situation addressee opening door 
prag operates intentional state opens door 
prag removing possible plans force viewed constructively plan incrementally built prag algorithm 
result agent performs directive parallel goals may 
werner theory tells agent comes believe assertions intend directives 
werner appears envisage theory computational setting prag describes pragmatic competence ideal speaker actual performance 
may various reasons accept message 
account force recipient command automatically mechanically obey command 
understand conventional meaning assertion directive agent know effect message supposed accept 
agent accepts speech act computes force force act may may acted 
werner proposing humans operate manner reasonable suppose werner theory computationally motivated 
sadly werner gives details 
singh formalism speech acts munindar singh done describing conditions satisfaction different kinds speech acts 
singh identifies ways speech act satisfied 
extensional satisfaction 
speech act extensionally satisfied propositional content true reason 

satisfaction 
satisfaction directive requires specified proposition true true sure fire manner 

relevant satisfaction 
requires proposition speech act true sure fire way true speech act 
singh formal definitions types satisfaction theory know multi agent systems branching time temporal logic ctl 
defines operators types satisfaction 
formal definitions quite simple involved give informally state semantics operators 
extensional satisfaction 
directive extensionally satisfied proposition eventually true 
assertion extensionally satisfied proposition currently true 
satisfaction 
directive satisfied extensionally satisfied extensionally satisfied hearer act knows achieve propositional content intends propositional content 
condition assertions extensional satisfaction 
relevant satisfaction 
speech act satisfied satisfied hearer chose result speech act 
difficult derive theorems capturing various properties satisfaction 
obvious relevant satisfaction satisfaction extensional satisfaction 
social agency dai building social agents preceding chapter various ai approaches building intelligent agents examined chapter examine various dai approaches building intelligent social agents 
majority firmly classical symbolic ai camp systems examined 
blackboard architecture discipline dai generally reckoned begun hearsay speech understanding system 
hearsay computer system employ blackboard architecture 
blackboard system contains components globally accessible data structure called blackboard set demon knowledge sources constantly watch part blackboard central control mechanism protocol determines order knowledge sources may access blackboard 
knowledge sources basic problem solving elements blackboard system 
communicate directly interact central control mechanism blackboard 
knowledge source continually scans blackboard portion blackboard allocated read access contribution problem applies central controller write access blackboard 
access granted knowledge source writes contribution blackboard 
way problem solving proceeds knowledge source trying contribute partial solutions possible 
variations basic blackboard structure possible 
example goal blackboards may introduced facilitate goal directed reasoning 
number blackboard systems described 
attempts formalize blackboard architecture see 
problem solving architecture blackboard 
centralized controller imposes severe bottleneck problem solving truly distributed single thread control 
knowledge sources truly autonomous act collections production rules 
notion agency developed blackboard systems 
beings slightly different approach taken lenat beings concept 
essentially attempt simulate problem solving community experts domain expertise distinct areas 
lenat hypothesised dominant problem solving strategy systems process question answer 
expert modelled relatively small fragment lisp code structure described 
order manage problem solving beings act experts management tasks 
test beings concept lenat implemented pup program generator contained beings 
structurally pup resembles frame slots called parts lenat terminology slot corresponding question may asked 
beings activated pattern directed fashion able communicate broadcasting messages 
problem solving proceeds beings receiving messages matching slots causes messages broadcast 
notion agency clearly better developed beings blackboard systems beings concept ways anticipates current cooperative problem solving 
lenat saw beings knowledge representation technique research paradigm right concept developed ideas refined successful am project 
actors time lenat proposed beings hewitt developing actor paradigm concept received fullest expression agha thesis published 
beings actors subject ongoing research ai computer science generally 
actor paradigm influenced early development object oriented systems actor formalism thought framework concurrent objectoriented programming 
actor paradigm developed mathematical basis special interest thesis 
actor system contains set actors remain passive receive message 
actor receives message tries match behaviour behaviour actor called determines actor response message may things send messages actors create actors specify replacement behaviour 
message passing actor formalism asynchronous agents identified unique mail addresses actor message queue containing messages waiting processed 
message processed dealt replacement actor original actor specifies 
soon actor specifies replacement replacement message 
feature ability create new actors computational paradigm high potential concurrency principle constraints execution speed stem logical dependencies computation hardware restrictions 
actor paradigm elegant model concurrent computation 
actors comfortably map idea agents thesis actors fine grained 
contract net innovation late contract net protocol developed smith 
aim contract net provide framework efficient cooperative problem solving 
contract net system contains number autonomous agents nodes communicate contract net protocol perform cooperative tasks 
node contract net system capable making independent decisions engage problem solving high degree autonomy 
smith gives information structure contract net agents detailed analysis possible 
contract net protocol subject case study chapter details 
mace discipline distributed ai came age publication proceedings fifth workshop dai held 
proceedings describing detail multi agent computing environment mace developed gasser colleagues 
mace justification claim general experimental testbed dai systems 
mace system contains components collection application agents basic computational units mace system see collection pre defined system agents provide services users user interfaces collection facilities available agents pattern matcher description database maintains agent descriptions produces executable agents descriptions set kernels physical machine handle communication message routing gasser identify aspects agents contain knowledge sense environment perform actions 
agents kinds knowledge specialized local domain knowledge acquaintance knowledge knowledge agents 
agent maintains information acquaintances pp class agents organized structured groups called classes identified class name name agent assigned name unique class agent address namei pair roles role describes part agent plays class early behaviours called scripts 
skills skills agent knows capabilities modelled agent goals goals agent knows modelled agent wants achieve plans plans agent view way modelled agent achieve goals 
agents sense environment primarily receiving messages 
agent ability act encoded engine 
engine lisp function evaluated default scheduling cycle 
externally visible signs agent activity messages sends agents 
messages may directed single agent group agents agents 
interpretation messages left programmer define 
gasser describe mace construct blackboard systems contract net system number experimental systems see pp 
mace proved influential system 
number subsequent systems taken onboard mace innovations 
notion autonomous agency defined mace structure agents described explicitly previous 
mace mace testbeds dai described 
example doran describe mcs 
mcs system multi agent testbed built sophisticated non linear hierarchical planner 
agent mcs system database beliefs represented prolog facts set operators corresponding actions agent perform demons basically condition action pairs action performed condition believed 
runtime agents goals continually strive achieve 
single cycle agent flaw fix plan cycle planner agents virtual access 
limited communication possible agents writing goals facts databases 
agents simple structure access powerful planner making mcs somewhat unusual dai terms 
testbeds dai agent agent oriented programming paradigm concurrent metatem 
systems subject case studies chapter described detail 
summary chapter examined essentially isolated aspects agency chapter examined aspects social agency 
necessarily case agents communicate order cooperate widely assumed dai 
chapter began examining various ways communication treated dai 
led recognition speech act theories dominant paradigm reasoning communication dai 
detailed examination various speech act theories 
various attempts build dai systems discussed 
stage worth making point ai generally distance theory practice dai 
particular exception actor paradigm attempts incorporate formal theories communication real dai systems 
situation changing shoham agent oriented programming framework claims theory agency speech acts 
cawsey describe distributed expert system employs galliers theory autonomous belief revision 
experimental stage 
concludes literature survey 
part thesis concerned constructing model agents dai systems number logics reasoning systems 
part iii theory computational multi agent systems temporal logics chapter theory computational multi agent systems chapter presents formal theory computational multi agent systems 
theory contains components 
model multi agent systems second set execution models defines way agents act interact 
chapter structured follows 
section informal ideas developed chapter 
assumptions described comments techniques presentation theory 
introductory material model multi agent systems introduced 
model agents defined component agent belief action communication turn 
systems defined collection named interacting agents 
execution models multi agent systems defined simple synchronous model realistic interleaved execution model 
chapter concludes brief look ways basic theory may adapted extended 
setting scene important understand theory developed chapter intended 
theory intended model human social systems 
phenomena human belief communication action objects study thesis 
theory intended plausible formal model captures key features wide range classical dai agents systems 
statement requires qualification 
superficial reading literature demonstrates builds dai system ideas agents deal communication beliefs agents 
developing canonical model dai systems question moment 
best hope idealized model captures important properties wide range systems 
theory described intended 
note theory necessity fairly coarse grained 
may readily adapted extended refined model features specific systems 
examples illustrating basic theory adapted section 
key features dai system hope capture theory 
agents 
chapter observed workers variety disciplines liberal term agent obligation explain usage 
agents significant finite computational resources 
distinct fine grained neuron computational agents connectionism algebraic agents ccs actors 
agents set explicitly represented beliefs able reason beliefs accordance computational resources afforded 
beliefs generally taken represent believer model environment believer resides cf 
acquaintance models mace archon beliefs mcs agents 
beliefs expressed defined cognitive internal language shall called thesis 
moment assumptions logical language 
nature role explored chapter 
agents assumed ability reason beliefs base set beliefs typically derive logical consequences set 
generally derive logically possible ones resource bounded reasoners 
model belief properties deduction model developed konolige see chapter 
deduction model adopted virtually wholesale model multi agent systems 
term cognitive state occasionally refer set beliefs possessed agent 
addition believers agents act 
types action distinguished cf 
cognitive actions correspond agent employing computational resources 
example database agent performing retrieve operation 
distinguishing feature cognitive actions private observed agents 
agent performing cognitive act control possible agent interfere act prevent successful completion 
communicative actions correspond sending messages agents 
example agent sending agent message containing request piece information 
communicative act agents able affect cognitive state peers 
contrast cognitive acts effect communicative act complete control actor agent sending message 
agent predict effect communicative act plan actions predictions actual effect control agent receiving message 
acts performed real world correspond normally regarded actions 
example robot agent lifting block table 
actions 
philosopher find typology dubious axiom speech act theory agent requesting informing performing action just 
typology suits purposes thesis 
arises considers domain action type 
domain cognitive act actor cognitive state domain communicative act cognitive state message recipient 
domains defined formalism achieve effective formalization cognitive communicative acts 
contrast domain act physical world extends agent unique control 
proven extraordinarily difficult devise realistic tractable formalizations acts performed multi agent environments reason considered thesis see attempt formalize multi agent scenarios agents perform acts 
note means unique making distinction different types act shoham distinguishes private cognitive communicative acts agent system consider acts 
reactive systems research distinction component part system unique control agent environment part system agent best partial control 
agents perform types action cognitive communicative 
possess repertoire possible actions 
formalization cognitive actions straightforward 
cognitive action viewed function agent belief set argument 
result epistemic input new piece evidence may incorporated subsequent belief sets 
mechanism epistemic inputs incorporated belief sets described 
formalization communicative acts problematic preceding chapter points formal models communication rarely adopted real dai systems 
theory multi agent systems communicative act modelled exchange messages content formula defined common communication language 
assumed communication language subset internal language effect messages recipients modelled interpretation 
idea message interpreted context recipient cognitive state result epistemic input 
interpretation modelled function belief sets messages epistemic inputs 
agent possess interpretation 
scheme somewhat arbitrary general describe models communication 
idea interpretation werner pragmatic interpretation function prag described preceding chapter 
note scheme agents autonomy cognitive state consistent gallier theory autonomous belief revision 
processing epistemic inputs 
idea give agent belief revision function 
belief revision function takes belief set set epistemic inputs returns new belief set 
idea belief revision function similar gardenfors definition epistemic commitment function see 
summarize model agents key features agents maintain set beliefs style konolige agents perform repertoire communicative actions sending messages cognitive actions computational resources effect communicative act modelled interpretation agent possesses interpretation result performing action epistemic input cognitive actions cause epistemic inputs actor communicative actions cause epistemic inputs message recipient epistemic inputs incorporated agent belief set belief revision function 
having developed model agents faced problem defining execution model says activity system composed number agents may proceed 
unfortunately involves modelling concurrency 
means trivial problem 
modelling concurrency ongoing research area right see 
thesis ignore difficult issue true concurrency unrealistic simple execution models allow focus properties agents requiring bogged deep theoretical issues associated concurrency see comments chapter 
execution models defined 
simple synchronous model agent considered acting simultaneously 
second finer grained interleaved model agent actions interleaved 
interleaved model realistic difficult manage formally synchronous model remainder thesis 
assumptions formal theory purports model existing real world extent involve abstraction 
abstraction typically involves making assumptions unimportant irrelevant technically intractable portions domain operate 
main assumptions theory follows model control 
control schemes agents generally extremely complex simplest attempts formalization 
huge range control schemes production rule systems simple strips style planners interleaved plan execute systems intelligent reactive systems prevent unified description 
reasons attempt explicitly model control theory multi agent systems agents assumed choose actions anonymous decision procedure cf 

prevent specific control schemes modelled grafted basic theory 
control schemes effectively modelled logics developed subsequent chapters examples chapter 
standard names 
name symbol denote object 
observers system agents system names 
number technical problems associated names 
example happens object different names agent agents don names objects 
problem essentially fluent expressions mentioned review quantified modal logics chapter 
solution adopted assign object unique standard name demand standard names refer objects 
standard names correspond closely rigid designators 
comment notation proceeding technical details theory brief comment notation 
mathematical parts theory techniques vdm specification language chapters cover required material 
familiar basic set notation logic difficulty understanding notation summary appendix order aid comprehension summary types appears chapter 
agents section introduces attributes agents parts belief communication cognitive internal actions 
components agent put agent architecture 
belief mentioned deduction model belief adopted virtually wholesale model agents see chapter 
beliefs expressed internal language assumed logical language 
type introduced belief sets 
powerset form belief set just set formulae internal language type deduction rules 
symbol generally denote belief set symbol generally denote set deduction rules 
assumed logical language proof relation defined set deduction rules relation defined 
definition set formulae formula set deduction rules logical language iff proof rules note complete respect logical language question equivalent provable provable 
closure set formulae deduction rules function 
close powerset close ff fg changes agent belief state caused epistemic inputs 
epistemic input defined appropriate defined set formulae internal language 
alternative definitions epistemic inputs discussed chapter 
powerset form agents able revise beliefs order accommodate new information 
rule determining new belief set belief set set epistemic inputs called belief revision function 
type 
powerset symbol generally denote belief revision function 
say belief revision function consistent produces logically inconsistent belief set 
communication communication modelled exchange messages content formula defined common communication language generally assumed internal language 
basic theory assumed messages sent point point broadcast see comments extensions basic theory chapter 
method required identify agents uniquely order messages routed intended recipient 
method chosen assign agent agent identifier agent id 
type introduced agent ids 
arbitrary countable set 
symbols agent ids 
message defined triple sender recipient content sender recipient agent ids content formula communication language self addressed messages allowed agent alter cognitive state sending message 
mess form symbol denote message 
selector functions assumed function sender takes message returns id sender function takes message returns id receiver 
formal definitions functions trivial omitted 
functions invariant condition message type agents send messages easily defined 
mess sender message interpretation function takes belief set message returns epistemic input 
mess usual symbol interpretation set mess nil nil messages assumed 
idea nil message sent agent time guaranteed received agent 
nil messages affect state system provide conveniently simple method modelling agents doing 
action agent possesses repertoire actions communicative cognitive case actions applicable agent cognitive state 
action associated condition represented formula internal language 
condition believed associated action applicable 
condition action pair called rule 
idea associating actions conditions quite common 
example aop paradigm shoham associates private cf 
cognitive action mental condition plays precisely role conditions 
course standard treatment action ai planning community see 
agent possesses number rules implicitly define actions available 
obvious condition demand rule sets weakly complete sense applicable action message available agent beliefs 
number applicable actions agent choose 
question choose arises 
problem concern thesis see comments earlier 
task formalize ideas 
type actions 
action symbol generally denote action 
model agent doing nil action assumed 
action produces empty epistemic input arguments 
idea action model agent doing 
rule condition action pair condition formula special condition true 
condition true satisfied actions applicable 
type conditions follows 
cond form ftrueg types rule defined cognitive action rules message action rules type action 
convenience cognitive action rule usually abbreviated action rule message action rule abbreviated message rule 
types follows 
cond action mrule cond mess usual symbol action rule ar message rule boolean valued function defines means action rule applicable belief set 
usually abuse terminology calling cognitive action action communicative action message 
context meaning clear 
ar applic ar applic hf ai ftrueg action rule applicable condition believed true 
similar function applic assumed defined message rules formal definition essentially identical ar applic omitted 
boolean valued function defines means action rule sound compare definition soundness 
sound sound hf ai ar applic hf ai general agent possess range possible actions represented set action rules set message rules 
symbol ar denote set action rules symbol denote set message rules 
important property demand agent action message rules weak completeness beliefs agent action perform message send 
boolean valued function defines set action rules weakly complete ar wk powerset ar wk ar ar ar ar applic ar similar function wk assumed message rule sets 
formal definition essentially identical ar wk omitted 
boolean valued function says action legal set action rules belief set 
ac legal action powerset ac legal ar hf ar ar applic hf function ms legal assumed messages message rule sets definition essentially identical omitted 
sensible demand honesty message rule sets agents allowed send messages lie sender 
honesty boolean valued function 
honest powerset mrule honest hf sender agent architecture type agents called agent 
defined follows 
definition agent structure hd ari initial belief set set deduction rules belief revision function message interpretation function mrule set message rules wk strong completeness demand precisely available action message 

interpret messages received 

update beliefs processing epistemic inputs resulting previous action message interpretation belief revision function 

derive deductive closure belief set 

derive set possible messages choose send 

derive set possible actions choose apply 

goto 
operation agents ar set action rules ar wk ar ar ar sound ar 
operation agent summarized cf 
basic loop aop systems 
systems group named agents called system 
type systems called system definition 
definition abuses notation somewhat example denote map agent ids sets deduction rules set deduction rules 
abuse helps improve readability meaning clear context 
definition system structure hag ari ag countable set agent ids ag gamma 
maps element ag initial belief set ag gamma 
powerset maps element ag set deduction rules ag gamma 
maps element ag belief revision function ag gamma 
maps element ag message interpretation function ag gamma 
powerset mrule maps element ag set message rules ar ag gamma 
powerset maps element ag set action rules ag hd ar agent ag honest 
gamma 
gamma 
gamma 
gamma 
gamma 
gamma 
states transitions convenient define function takes agent id system extracts agent associated id system 
agent system agent agent sys hag ari sys hd ar execution models aim section define execution models multi agent systems show group agents structure described operate interact 
simpler execution models assumes agents act synchrony sending receiving messages acting time 
second realistic model assumes agent act time 
execution models hinge notion state system changes state caused transitions 
crudely state snapshot belief set agent system moment time 
belief sets assumed kind equilibrium cf 

state denoted symbol state change transition occurs agents receive messages perform cognitive actions 
transition denoted symbol history executing system considered sequence state transition state transition 
see 
synchronous execution agent extension system defined initial state 
agent initial state initial belief set closed deduction rules 
system initial state collection initial belief sets member agent set closed agent deduction rules 
agents able change state performing actions various types 
tuple actions type communicative cognitive called move 
move agent uniquely determine state 
moves agent system combine 
collection moves agent called transition 
system state transition resultant state uniquely defined 
operation system described follows 
system defined initial state call 
state agent picks legal move combines form transition result transition new state results 
process begins agents choosing moves form transition 
result sequence states 
process illustrated 
restate definitions formally 
notion state formalized 
state system defined map agent ids belief sets 
state gamma 
symbol denote state 
initial state system defined state agent initial belief set closed deduction rules function 
init state system state init state sys hag ari sys fi 
close agg time agent agent agent agent bullets indicate agent completing move changing state circles ffi indicate non completion move 
synchronous execution move tuple actions type cognitive communicative 
move action mess usual symbol move selector functions assumed moves 
function action takes move returns action move function mess takes move returns message move 
formal definitions functions trivial omitted 
functions extensively sequel 
boolean valued function defines move legal agent belief set 
mv legal move agent mv legal ag hd ari ag ac legal action ar ms legal mess nil move move contains nil action nil message 
usually agent acting system 
actions agent combine change state system 
analogous move transition defined map agent ids moves performed agent 
trans gamma 
move usual symbol transition transition legal just case moves suggests legal 
trans legal trans system state trans legal sys dom mv legal agent sys possible transitions system state legal transitions system 
nil transition agent performs nil move 
function nil trans assumed takes system returns nil transition system 
utility definitions useful transitions 
function returning set messages sent transition 
sent trans powerset mess sent mess nil function returns set messages sent particular agent transition 
trans powerset mess sent nil gamma 
gamma 
gamma 
gamma 
gamma 
gamma 
runs worlds world sequences function defined shows agent beliefs change result executing cycle performs action receives messages 
bel agent powerset mess action bel ag ms hd ari ag close fa fi msg function state defined system returns successor state transition 
state system state trans state state sys fi 
bel agent sys action components theory multi agent systems place 
remains define execution sequences runs system 
idea run illustrated 
representation runs developed 
possibility simply define run sequence states 
states contain information beliefs agents 
purposes chapter useful record execution sequence cognitive actions performed messages sent agents 
achieved defining run sequence worlds world contains state transition caused state idea associating state transition gave rise illustrated 
type worlds follows 
world state trans usual symbol world selector functions assumed worlds extensively sequel 
called state takes world returns state associated 
second called trans takes world returns transition associated 
formal definitions functions trivial omitted 
useful function world takes arguments worlds system says second world represents valid transition system world 
world world world system world sys trans legal trans sys state state state sys state trans system initial state see initial world 
convenience initial world system defined initial state nil transition 
init world system world init world sys state sys nil trans sys world sequences defined countably infinite sequences worlds 
world sequences basic representation mechanism runs 
world world sequences extend infinitely satisfy invariant recall infinite ordinal len 
world may peculiar choice words arises historical reasons 
formal semantics temporal logics developed modal logics possible worlds semantics described preceding chapters 
time agent ffi ffi ffi agent ffi ffi ffi ffi ffi agent ffi ffi ffi ffi ffi ffi agent ffi ffi ffi ffi ffi ffi ffi bullets indicate agent completing move changing state circles ffi indicates move 
interleaved execution step define function says world sequence run system 
run system run sys init world sys world sys concludes definition synchronous execution model 
interleaved execution synchronous execution models advantage simplicity paint realistic picture agents real multi agent system act interact presence global clock implied 
agha points concept unique global clock meaningful context distributed system self contained parallel agents 
realistic model execution tune standard model reactive systems see example appendix interleaved execution model agent allowed act time 
model 
moving details interleaved execution model consider illustrates imaginary run agent multi agent system 
bullet indicates agent executes internal cycle receiving messages updating beliefs acting circle ffi indicates agent completed cycle 
execution steps system agent completes execution cycles times agent completes times agent completes time agent complete 
difficult see agent considered acting time 
easy see agent sense running faster agents seemingly twice fast agent faster rest 
suppose run continued indefinitely agent completed cycle 
fair agent 
surely matter slow processor agent ultimately complete cycle enormous finite time 
reason usual demand interleaved execution runs satisfy fairness requirement 
unfortunately fairness deep research issue right detailed treatment quite scope thesis 
reader referred details 
return details interleaved execution model 
main difference synchronous model agent may act transition time gives invariant condition transitions 
means messages sent cycle received cycle 
necessitates method keeping track messages received called message pool 
note assumed agent executes cycle receives outstanding messages 
type introduced pools 
pool powerset mess state redefined map agent ids belief sets addition current message pool 
state gamma 
pool selector functions assumed bel pool takes state extracts belief state pool state respectively 
formal definitions trivial omitted 
initial state system empty message pool 
init state system state init state sys hag ari sys hfi 
close agg gi agent execute cycle receives messages sent pool 
state powerset mess pool transition agent performs move agents 
doing indicated mapping distinguished object called nil 
gives trans gamma 
move invariant trans 
dom nil 
recall 
means exists precisely 
legality transition defined obvious changes required deal transitions appear definition mv legal 
trans legal trans system state trans legal sys dom nil mv legal agent sys bel definition function sent returns messages sent transition needs restated 
sent trans pool sent dom nil function bel requires modifications 
function required give belief state system 
bel state system state trans gamma 
bel state sys bel fi 
bel agent sys bel action doms nil message pool resulting transition occurring state 
pool state state trans pool pool state sent pool nil state function interleaved execution follows 
state system state trans state state sys bel state sys pool state runs world sequences interleaved execution developed exactly way synchronous execution definitions omitted 
interleaved execution realistic synchronous execution paint completely accurate picture real systems operate 
added complexity interleaved execution awkward manage formally 
reasons reasons associated fairness discussed earlier remainder thesis deal solely synchronous execution 
particular world sequences underlying semantics various logics developed subsequent chapters assumed synchronously executing systems 
extensions basic model basic model agents systems extended number ways 
possible extensions 
alternative definitions epistemic inputs defined epistemic input essentially unstructured 
simply set formulae crudely regarded new evidence 
definition probably suffice simple cases sophisticated applications certainly require information input 
brief section outline couple possible ways epistemic inputs redefined include information 
management uncertainty central issue ai 
obvious possibility incorporate mycin style certainty factors probabilities epistemic inputs indicate certainty new information true 
powerset form possibility give indication source input associating agent id input 
powerset form broadcast messages communication paradigm modelled theory point point message passing message originates agent routed network intended recipient 
simplifying assumption agent send message time 
common style communication means method available 
alternative broadcast messages agent sends messages group agents possibly agent simultaneously 
broadcast message passing supported theory quite common 
example basic communication method concurrent metatem heart contract net protocol 
modifications required broadcast messages simple 
definition message rule altered second component set messages single message 
mrule cond powerset mess idea message rule chosen set messages sent single message 
alter definition move take account change 
move action powerset mess alter definition sent recall extracts set messages sent transition 
sent trans powerset mess sent mess nil changes necessary 
multiple preconditions actions messages obvious extension basic theory allow multiple preconditions actions messages 
accommodated follows 
types action message rules redefined 
powerset cond action mrule powerset cond mess definitions applicability need changing 
ar applic ar applic hg ai ftrueg function applic message rules essentially identical function omitted 
changes necessary 
list types types appear theory multi agent systems summarized 
primed types alternative definitions existing types 
belief set set formulae internal language usual symbol deduction rule rule inference fixed finite number premises effectively computable function premises 
agents possess set deduction rules usual symbol epistemic input results agent result performing cognitive action result receiving message 
represents new piece evidence agent may subsequently believe 
belief revision function maps belief set set epistemic inputs new belief set 
usual symbol agent identifier assigned agent order uniquely identify 
usual symbols mess message sent agents 
usual symbol message interpretation function maps belief set message epistemic input 
usual symbol action cognitive action function takes argument belief set returns epistemic input 
actions represent utilization cognitive computational resources 
usual symbol cond condition associated actions messages action message rules see 
usual symbol cognitive action rule condition action pair condition determining action applicable satisfied believed 
usual symbol ar 
agent possesses set rules usual symbol ar 
mrule analogous action rule message rule condition message pair condition determining message may sent 
usual symbol agent possesses set rules usual symbol agent agent initial belief set deduction rules interpretation function messages belief revision function action message rules 
usual symbol ag 
system system collection named interacting agents 
usual symbol sys 
move move pair containing action type cognitive communicative 
defines actions agent performed round 
usual symbol trans transition defines moves agent performed round system maps agent id system move 
usual symbol state state system defines belief set possessed agent round system 
maps agent id system belief set 
usual symbol world world state transition caused state 
usual symbol world sequence countably infinite sequence worlds representing run system 
world sequence contains nil transition initial state system 
usual symbol summary chapter introduced theory computational multi agent systems agent considered possess explicitly represented beliefs limited capacity reasoning beliefs ability act utilizing private cognitive resources performance cognitive act sending message agent 
chapter culminated definition execution models define agents act interact 
subsequent chapters number logics developed reason multi agent systems type described theory 
chapter linear time temporal logics multi agent systems preceding chapter introduced theory computational multi agent systems 
aim chapter describe family logics shown precise way correspond theory may reason systems modelled theory 
common feature logics described chapter linear model time alternative logics branching model time described chapter 
remainder chapter structured follows 
section introduces logic called agent logic simplest family logics developed thesis 
propositional allow quantification linear discrete model time 
correspondence theory multi agent systems syntax semantics proof theory discussed length 
section closes discussion expressive 
section examines role internal languages agents choice internal language affects possibility internal language discussed point practically speaking unworkable due important syntactic restriction language 
remedy hybrid language developed combining standard order temporal logic 
various possible theorems hybrid logic discussed respect properties agents correspond 
section introduces quantified version called qal quantified 
language expressive allows quantification agents actions individuals domain internal language 
logic section introduces simplest logics developed thesis 
logic called stands agent logic 
propositional allow quantification 
contains atomic operators bel describing beliefs agents send describing messages agents send describing cognitive actions agents perform 
contains set modal temporal operators allow description dynamic properties agents 
indicated model time linear 
syntax intended allow reasoning agents beliefs actions messages send 
isn possible put action agent directly formulae language just strings symbols way referring objects language 
achieved putting symbols language denotation agent identifier action 
quantification isn allowed symbols constants properly individual constants 
express beliefs agents internal language appear 
definition alphabet contains symbols bel agent believes send agent sent message agent performs action ccdeef table non standard operators 
symbols ftrue bel send dog 
set constant symbols const disjoint sets const ag agent constants const ac action constants 
closed formulae internal language 
unary propositional connective binary propositional connective 
unary temporal connectives ccdeef binary temporal connectives 
punctuation symbols instance called external language parameterized internal language different internal languages result different external languages 
identify language internal language write 
part concerned general properties internal language suppressed 
relationship language examined detail section 
definition syntax defined rules 
agent id constants closed formula action constant formulae true bel send 
formulae formulae 
formulae formulae ccdeef standard conventions parentheses square brackets disambiguate formulae necessary true languages defined thesis 
table summarizes meaning non standard operators semantics purpose language semantics assign formal meaning syntactic objects language 
section introduces formal semantics semantics parts defines model structures shows execution system corresponds structures second gives semantic rules third presents notions satisfiability validity formulae model structures idea underlies semantics linear time logics multi agent systems developed thesis allowing run system act model linear discrete temporal logic 
component model world sequence representing run system 
unfortunately machinery logic extra technical apparatus required 
interpretation constants bijective map const objects constants denote map bijective object assumed precisely constant associated standard name object 
note map preserve sorts map agent id constants agent ids symbol generally interpretation 
type models called model defined follows 
definition model structure hw ag ac ii world sequence ag set agent ids ac action set actions const 
ag ac interprets constants 
boolean valued function defines circumstances model model system 
model model system model sys hw ag ac ii hag ari sys run sys ag ag ac ffa hf ai ar agg conjunct condition simply requires model represents valid run system 
second third conjuncts require agents actions model system correspond 
say model ordinary iff system model 
ordinary model ordinary sys system model sys part shall concerned solely ordinary models obvious reasons model ordinary describes system exist 
ordinary models useful shift burden proof show theorem sound class models merely necessary show property expressed theorem holds systems modelled class 
establishes kind correspondence theory correspondence property natural useful frequently abuse terminology writing theorem sound class systems agents technically correct long sound class models models system agent class 
semantic rules semantics satisfaction relation holds pairs form hm ui model temporal index formulae semantic rules 
rules deal atomic formulae atoms atoms primitive components language 
understand semantics may helpful recall world sequence structured object represents run system 
contains information system expressed formula 
semantic rules largely concerned simply structure apart get required information 
example world sequence time agent id state returns belief set agent time world sequence hm ui true hm ui bel iff state hm ui iff action trans hm ui send iff hi fi sent trans hm ui iff hm ui hm ui iff hm ui hm ui hm ui iff hm hm ui ccdeef iff hm hm ui iff hm vi hm wi hm ui iff 
hm vi hm wi semantics note state trans action sent selector functions fixed models state takes world extracts state trans takes world extracts transition action takes move extracts cognitive action move sent takes transition returns set messages sent transition 
formula true logical constant interpretation true times satisfied 
logical constant false defined true satisfied 
belief operator bel read agent believes operator essentially belief operator konolige logic obeys rules 
ff 
bel abbreviate bel 
bel 
operator describes performance cognitive actions 
read agent performs action 
operator send describes sending messages satisfied agent sent message content appropriate time 
useful rcv abbreviate send rules define standard propositional connectives usual semantics 
remaining propositional connectives implies logically equivalent defined abbreviations usual way final rules define semantics temporal operators 
basic stock temporal operators turns surprisingly expressive early result study temporal logic due kamp temporal logics strict operators expressively complete continuous linear orders imaginable propositional connective expresses property orders defined terms 
convenience abbreviations table assumed 
ccdeef strong operators respectively satisfied satisfied world ccdeef past time version operator ccdeef satisfied satisfied state sequence 
ccdeef said strong false time 
operator weak version ccdeef argument satisfied time special symbol init satisfied time 
heretofore operators respectively satisfied iff satisfied moments past time version 
note strict past operator 
discussion follows time assumed 
note assume messages received cycle sent 
assumption case instance interleaved execution model described previous chapter necessary introduce rcv new operator semantic rule 
note need different kinds operator time finite past 
ccdeef weak init ccdeef true initially true true heretofore precedes table derived temporal operators operators respectively satisfied satisfied satisfied strict past version satisfied satisfied past 
operators respectively called weak operator satisfied satisfied satisfied eventually satisfied 
similar allows possibility second argument satisfied 
operators strict past time versions respectively 
operator describes temporal precedence strictly precedes satisfiability validity satisfiability validity defined usual way 
formula satisfiable model hm ui satisfiable iff satisfiable model 
true model iff hm ui valid class models written iff true models class valid iff true class ordinary models 
convenient way expressing valid write important relationship satisfiability belief atoms deductive capabilities agents described 
relationship captured lemma prove soundness axiom belief atoms 
lemma denumerable set bel bel unsatisfiable iff proof see 
proof theory section proof theory developed framed terms axiom system 
usual practice axiomatizing logic pick smallest complete set axioms inference rules axiomatic base 
axioms inference rules introduced derived constructs 
completeness proofs tend involved issue completeness addressed thesis 
see comments chapter 
axioms noting ordinary connectives obey classical semantics propositional tautology 
axiom captures fundamental property belief systems called attachment axiom cf 

bel bel bel ff soundness axiom immediate corollary attachment lemma 
logic temporal operators studied great detail pp pp list great temporal axioms 
axiom systems number temporal logics soundness number derived axioms demonstrated formal proof 
detailed list axioms simply list representative axioms fuller list appendix ccdeef inference rules propositional connectives classical semantics modus ponens mp rule inference 
infer difficult see temporal rules sound 
infer infer infer infer infer infer discussion logical language possible classify terms independent attributes language formulation underlying model 
parameters may decomposed attributes agents beliefs actions messages attributes time 
main features summarized table 
entry table reflects design decision development aim section discuss necessary justify decisions 
consider properties agents language express 
belief linguistic tool chosen sentential modal operator bel operator sentential key argument sentence formula internal language modal standard truth functional operator changes mode formula 
alternatives operator 
main alternative order meta language contains terms denoting formulae object language 
principle advantage meta language approaches expressive modal language counterparts 
claimed meta languages just sorted order languages ordinary order theorem provers may theorem provers agents time language belief sentential modal operator bel action operator sentential modal operator send modal tense logic past operators ccdeef expressively complete 
model belief deduction model action primitive actions directed messages linear discrete finite past infinite table properties modal logics ongoing research area 
claim satisfactorily demonstrated 
disadvantages meta language approach 
importantly non trivial metalanguage reasoning involves manipulating formulae extraordinary complexity negative attribute reported researchers 
modal operators natural language expression meta language counterparts 
reasons meta language approach rejected favour sentential modal operator belief 
actions messages agents 
described operators sentential modal operator send messages operator cognitive acts 
discussing semantics operators detail worth making general comments suitability having operators describing cognitive communicative acts 
questions arise necessary operators describing actions 
operators replaced single unified notation 
question posed research ai planning philosophy rejected notion actions primitives reason 
notion actions appealing 
shoham expressed similar sentiments developing theory underlies aop paradigm pains reject notion action 
worth introducing actions agent system syntactic sugar pp 
may deeply suspect notion primitive action strictly philosophical grounds concept useful reject solely basis dogma 
representation action language desirable second question arises 
necessary distinguish cognitive communicative acts 
operators replaced single unified notation 
question strange familiar speech act theory generally taken axiomatic communication just form action may planned may fail precisely way normal actions picking table may fail 
cohen levesque highly influential theory speech acts model request act type committed attempt bring certain state affairs see chapter discussion cohen levesque approach 
theory distinction essentially linguistic acts saying please cup tea types action nodding direction 
result satisfying theory clear confusion surrounding earlier attempts formalize speech acts 
cohen levesque able achieve results abstracting away deal information example distinction linguistic actions 
certain degree abstraction appropriate describing computational multi agent systems 
qualitative distinction sending message employing computational resources surely useful retain distinction purposes 
reasons distinction models underly belief communication cognitive action appear theory multi agent systems 
discussed extensively preceding chapter mentioned passing 
deduction model belief adopted simplest current time best developed model agents incomplete reasoning abilities 
critics reichgelt example argues coarse grained really capture incomplete reasoning 
reasons just mentioned deduction model adopted 
reasoning time achieved language temporal modal operators ccdeef 
approach means approach reasoning time general 
choice justified 
simplest method reasoning time standard sorted order logic contains terms denoting times 
example ary predicate logic extended ary predicate th term denoting time predicate true 
english sentence jones ill translated order formula 
time ill jones obvious advantage approach extra logical apparatus need introduced deal time entire corpus standard order logic brought bear directly 
disadvantages approach unnatural awkward humans 
formulae representing quite trivial temporal properties large complicated hard understand 
approach called method temporal arguments order approach 
second technique employ order meta language contains terms denoting times terms denoting formulae object language meta language approaches typically finds predicate holds true express fact object language formula denoted true time holds interval denoted approach usually called reified approach reasoning time 
main advantage claimed proponents reified approach ability stay sorted order language reasoning time 
main disadvantage simple temporal properties difficult express logical apparatus quite cumbersome 
reichgelt comes restricts oneself purely logical considerations modal treatments temporal logics superior computational point view reified order treatments preferable 
computational tractability key consideration thesis modal approach adopted 
model time may characterized properties linearity discreteness finite past infinite cf 

basic alternative linear model time branches 
fact quite straightforward construct branching model time theory multi agent systems see comments close section 
discreteness property disposed easily 
basic alternatives discrete models dense model temporally ordered time points may put correspondence reals second interval model time viewed points intervals 
doubt simplest discrete model suggested quite reasonably model real world time really time atoms 
applications inherently discrete model time applications discrete models satisfactory 
application method reasoning reactive systems time points correspond state executing computer program transitions states atomic correspond execution primitive program instructions 
discreteness theory multi agent systems arises belief sets 
discrete moments agent beliefs said fixed difficult see agent said believe 
agent rationally choose action basis continuously changing beliefs 
gardenfors finds notion epistemic state similarly fundamental 
comments times agent beliefs conceptually equilibrium forces internal criticism pp 
forces internal criticism modelled theory principles exactly meta language approach representing beliefs see discussion 
bel agent believes 
bel sentence 
bel agent believes 
bel bel bel sentence ccdeef bel agent previously believed 
bel past believed 
ccdeef bel bad quantifier 
table syntactically correct incorrect formulae multi agent systems belief revision function 
reasons felt discrete model time appropriate having finite past means time point recognized time 
finite past temporal models reasonable describing computer systems execution said definite starting point 
having infinite time point successor quite weak condition 
reasonable reactive systems pointed earlier generally intended execute terminating 
terminating models mapped non terminating models simple expedient iterating final time point sequence infinitely called infinite stuttering 
discussion justified main design decisions development areas easily extended 
internal languages 
little said internal language choice affects recall express beliefs agents 
beliefs generally constitute agent model world agent exists multi agent system type describe 
interesting question arises internal language 
issue discussed section 

quantification 
natural extension allow quantification agents actions individuals internal language 
language called qal quantified allowing quantification developed section 
branching time 
model time underlies linear time point unique successor 
alternative view time branching 
branching system time point number possible successors corresponding futures arise various choices 
chapter entirely devoted development logics similar set atoms view time branching structure 
internal languages section examine expressiveness parameterized various internal languages 
assume existence ordinary order language language contains set predicate symbols fp set constants fa set variables fx usual connectives quantifiers simplicity assume language function symbols constants 
normal formation rules order predicate logic assumed 
formulae said ordinary 
sentence closed formula free variables 
see presentation analysis considering language language formed allowing agents ordinary order predicate logic internal language 
called order intentional language allows agents described terms intentional constructs belief agents capable supporting beliefs agents 
examples syntactically correct incorrect formulae language table 
internal language express beliefs agents 
beliefs generally taken constitute agent description environment exists multi agent system type describe 
intriguing possibility arises 
internal language agents 
ignore moment computational issues associated reasoning complex modal language suggestion quite appealing 
semantics formal model multi agent systems described preceding chapter 
ideal language agents express beliefs system 
unfortunately naive attempt apply idea immediately runs difficulties 
consider examples formulae language 
bel bel example straightforward believes believes 
contrast formula syntactically acceptable 
bel argument belief atom sentence problem lies way defined formulae internal language formulae means form representing beliefs agents extremely unwieldy 
solution problem develop hybrid language combines say order temporal logic fotl allows formulae fotl formulae atoms 
language developed 
expressive internal language suggested expressive internal language may derived adding fotl allowing formulae fotl atoms resulting language call ial internal 
fotl standard see language fml full terse description 
order temporal logic fotl sake simplicity exposition language equality functions 
definition alphabet fotl contains symbols 
countable set predicate symbols fp associated non negative integer arity 
countable set constant symbols fa 
countable set variable symbols fx 
equality symbol 
quantifier punctuation symbol 
punctuation symbols propositional temporal connectives syntax fotl augmented temporal connectives definition syntax fotl defined rules 
term variable constant 
atom application predicate symbol terms written 
arity ground atom containing variables 
equality expression form terms 
primitive atom equality 
primitives formulae fotl 
formula fotl variable formula fotl 
fotl contains propositional temporal formation rules interpretation fotl map times powerset ground atoms set ground atoms true time variable assignment map variables constants 
function defined applies variable assignment arbitrary term 
note function return denotation term constant 
var hp ui 
iff hp ui iff hp ui iff hp fx 
ag ui constants semantics fotl ial fotl hj arc means form form 
relationships languages understood abbreviated 
semantics fotl satisfaction relation usual way relation holds triples form hp ui interpretation fotl variable assignment temporal index formulae fotl 
see semantic rules 
propositional temporal connectives essentially standard semantic rules omitted semantics just atoms quantified formulae existential quantifier assumed abbreviate usual 
completes survey fotl 
adding fotl sub section show fotl may added fotl yield language ial internal 
fotl added fotl syntactically semantically 
syntactically atoms resultant language ial defined sentences fotl formulae 
note fotl abbreviated remainder section 
compound formulae built atoms temporal propositional connectives common fotl 
example closed formula fotl atom ial 
formula atom ial 
bel compound formulae ial may built formulae fotl means syntactically acceptable formula ial 
bel semantically model ial constructed adding interpretation fotl model ial contains temporal propositional connectives fotl compound formulae evaluated usual way 
definitions formal 
definition syntax ial defined rules 
sentence fotl formula ial 

formula formula ial 

ial contains propositional temporal formation rules syntactic relationships ial fotl summarized 
semantics ial suggested informal discussion 
definition model ial structure hp ag ac ii interpretation fotl remainder form model satisfaction relation ial holds triples form hm ui model ial variable assignment fotl temporal index formulae ial 
satisfaction relation fotl satisfaction relation fotl 
semantic rules ial follows semantic rules atoms ial remainder essentially unchanged omitted 
hm ui iff hp ui fotl sentence fotl hm ui iff ag ac ii ui formula possible theorems interpretation section considers significance various formulae ial 
saturation consistency introspection consider class agents deduction rules complete sound respect internal language 
belief set property closed logical consequence said saturated 
axiom corresponding classical modal logic sound class see pp 
bel bel bel consistency interesting property agents 
say agent locally consistent time believe formula negation time globally consistent locally consistent 
contrast agent locally inconsistent globally consistent globally inconsistent locally consistent 
schema corresponding classical modal logic sound class globally consistent agents cf 

bel bel theorem agent consistent initial belief set sound deduction rules consistent belief revision function globally consistent 
proof need show agent properties locally consistent times case initial set beliefs consistent deduction rules sound 
base beliefs result processing epistemic inputs belief revision function 
belief revision function consistent definition produce inconsistent set base beliefs belief set results deductive closure consistent 
process reasoning beliefs called introspection examined detail chapter 
class positively introspective belief systems characterized schema corresponding axiom classical modal logic 
bel bel bel schema corresponding axiom classical modal logic characteristic negatively introspective belief systems 
bel bel bel 
bel bel 
bel bel 
bel bel tl 
bel bel bel bel tax 
bel bel pl 
bel bel pl proof theorem temporal awareness persistence belief temporal awareness persistence belief distinct related issues 
temporal awareness means sense aware passage time able distinguish cognitive state previous cognitive states 
persistence belief concerns long beliefs held 
deal temporal awareness distinguish types 
strong temporal awareness means explicitly aware distinction previous cognitive states 
simply described schema 
bel bel ccdeef easy see strongly temporally aware agent definition believing time believe ccdeef time ccdeef stands operator ccdeef iterated times 
weak temporal awareness name suggests weaker condition 
means able distinguish believed previous cognitive state 
condition easily described schema 
bel bel bel weakly temporally aware agent definition believing time believe times 
note schemata temporal awareness intended strictly characterize associated conditions give simplest obvious interpretation 
related issue persistence long beliefs held 
define agent persistent believing believes 
schema characteristic 
bel bel persistence strong limiting condition theorem shows 
theorem schema valid class persistent globally consistent agents 
bel bel proof see 
consistent persistent agents remain largely ignorant passage time come believe believe negation 
follows agents severely limited scope reasoning world 
reasonable form persistence default persistence cf 
pp 
default persistence means carrying believing believed evidence contrary 
appropriate schema ccdeef bel bel bel 
schema appeared guises ai 
example similar called strips assumption reasoning changing world known changed assumed unchanged 
anticipation retention suppose agent aware messages sends agent said anticipate messages 
schema characteristic agents anticipate messages 
send bel send similarly consider agents aware messages receive 
agent receives message believes received message said message 
schema characteristic message agents 
rcv bel rcv schema characteristic agents anticipate actions bel similar properties examined genesereth nilsson chapter 
directed beliefs directed beliefs simply beliefs 
section explores possibility directed beliefs affect action 
motivate discussion consider axioms 
bel bel send send axioms agent believes perform action send message perform action send message 
axioms describe direct relationship beliefs agent actions performs 
interesting possibility suggests agent beliefs beliefs causal effect agent 
possibility axiomatizing relationship explored section 
idea directed beliefs having causative effect subsequent actions heart entire programming paradigm called metatem discussion section motivated metatem approach 
formally defining mean directed belief 
say agent belief directed satisfies conditions belief refers actions believer belief contains propositional time temporal operators 
condition arises concerned agent beliefs actions affect behaviour 
obvious axiom examine restricted form classical modal logic 
bel satisfies conditions clearly axioms start section instances schema 
axiom generally taken characteristic axiom knowledge true belief 
interpreted expressing constraints agent behaviour 
agent satisfy modified pick actions satisfy constraints expressed beliefs 
conceptually describe agent trying find model beliefs satisfy conditions 
model exists way agent act satisfy 
possibility relax constraints example dropping belief action 
practice trying method choose actions unworkable due complexity decision problem simple temporal logics 
order linear time logic multi agent systems clear discussions expressiveness limited number important ways 
limitations inability write formulae correspond english sentences 
ralph performed action 
ralph knows murderer 
believes ralph murderer 
ralph sent request 
sent request 
problem order language 
possible quantify terms aim section develop language qal quantified omission 
syntax alphabet qal contains symbols addition extra constants const individuals domain internal language set var disjoint sets var ag agent variables var ac action variables var variables denoting individuals domain equality symbol quantifier symbol punctuation symbol 
definition term variable constant 
symbol denote term 
sort term ag ac indicate term sort write syntax qal definition 
definition syntax qal defined rules 
terms named sorts formula atomic formulae qal true bel ag send ag ag ag ac 
formula qal variable formula qal 

qal contains propositional temporal formation rules note arbitrary formulae allowed arguments bel operator closed formulae required propositional temporal abbreviations assumed 
easy see formulae correspond english sentences 
ralph bel ralph murderer bel murderer ralph send ralph request send request semantics semantics qal parts model structures defined semantics language satisfaction relation usual way 
definitions satisfiability validity essentially standard omitted 
model structures language qal contains non empty sets constants standard names const ag denoting agents const ac denoting actions const constants individuals domain 
const union sets 
sets corresponds set occurs qal model structures ag set agents ac set actions universe individuals domain domain quantification union sets quantification allowed agents actions individuals domain bijective map constants domain interpretation preserves sorts interpretation constants 
symbol usually interpretation inverse interpretation naming function 
understood abbreviated 
naming function assigns unique standard name individual domain quantification addition constants qal contains set variables var 
mapping var domain quantification preserves sorts variable assignment 
symbol usually variable assignment 
transformation defined formulae definition variable assignment naming function arbitrary formula mean formula obtained replacing variable occurs free 
example formula 
free variable replaced standard name associated object variable denotes 
function defined returns denotation term relative interpretation constants variable assignment 
const understood abbreviated 
model structures qal defined 
definition model qal structure hw ag ac ii non empty universe individuals domain const 
ag ac interprets constants remainder 
aside 
semantics qal require know individuals agents names order assigned names 
necessary know individuals 
semantics qal say ralph believes murderer necessary know individual standard name denotes 
necessary opinion properties stands relation individuals domain 
semantic rules satisfaction relation qal holds triples form hm ui model qal variable assignment temporal index formulae qal 
semantic rules qal 
rules propositional temporal connectives remain essentially unchanged omitted 
usual existential quantifier assumed abbreviate function plays similar role naming function konolige logic bq pp 
simpler standard names assumption 
hm ui bel ag iff state ag hm ui ag ac iff action trans ag ac hm ui send ag ag iff ag ag sent trans hm ui iff hm ui iff hm fx 
dg ui domain quantification sort semantics qal proof theory qal contains axioms inference rules addition rules sorted order logic equality functions restrictions proof theory sorted order logic largely result need substitute objects correct sort 
axiomatization pp 
axiomatization normal form mean free meaning free standard 
additionally denote formula obtained systematically replacing occurrence normal substitution 
term occur free sort axiom universal instantiation axiom 
axioms deal equality 
note barcan formulae temporal operators sound 
give fuller list axioms appendix just list axioms operator 
basic inference rule generalization 
infer ae free occurrence possible theorems interpretation interesting theorems consider pp 
barcan formula belief see chapter pp 
bel bel domain quantification universally quantified variable ranges theorem means believes element believes property 
antecedent consequent implication convey quite different information example illustrates 
suppose just elements occurrence bear 
names elements suppose bel bel 
believes element antecedent barcan formula satisfied 
barcan formula correctly describes believe 
barcan formula fairly extreme property requires agent aware elements domain interesting property reverse implication barcan formula called converse barcan formula 
schema characterizes agents deduction rules include universal instantiation 
bel bel suppose agent perform existential generalization believing specific agent named standard name property deduce agent property 
schema characteristic bel bel summary chapter described detail number linear time temporal logics reasoning multi agent systems 
simplest logics propositional logic syntax semantics proof theory logic discussed length 
correspondence established systems theory multi agent systems preceding chapter models correspondence model representing run system 
problems identified possibility internal language order overcome problem hybrid language called ial developed order temporal logic possible theorems ial meaning discussed 
quantified version called qal developed 
chapter logics develop specifications axiomatizations various systems 
chapter examples preceding chapters laid theory multi agent systems linear time temporal logics may reason systems modelled theory 
chapter presents case studies demonstrate logics may modelling reasoning multi agent systems 
case studies divided groups axiomatizations frameworks building multi agent systems specifications cooperative problem solving paradigms 
frameworks building multi agent systems axiomatized shoham agent oriented programming paradigm particularly agent system fisher concurrent metatem processes 
cooperative problem solving paradigms specified simple master slave framework lines described cooperative inference technique employed feline cooperating expert system contract net protocol 
presenting case studies brief discussion reasoning multi agent systems temporal logics 
reasoning multi agent systems literature reasoning reactive systems temporal logic quite literally enormous 
detailed review literature scope thesis details appear appendix 
reader referred emerson excellent area pnueli detailed technical reviews 
articles useful bibliographies 
volume devoted theoretical aspects logics 
article barringer contains example formal temporal logic specification may derived informal specification serves outline key techniques 
logics specifying verifying generally reasoning multi agent systems 
consider specification case 
crudely specification description desired behaviour system 
implementation aims program satisfy specification 
show program satisfies specification verify 
temporal logics widely specification reactive systems multi agent systems example see pnueli comments quoted chapter 
giving specification reactive system natural want express statements request sent response eventually sent 
statements elegantly expressed temporal logic easy express formalisms 
specification multi agent system expressed set temporal logic formulae call specification spec 
idea formula spec valid class models representing runs systems satisfy specification 
useful feature specifications possible explore properties mathematically 
example show spec entails property prop try establish relation spec prop proof systems established logic specification 
examination particular properties system may specified temporal logic appendix consider verification case 
verification system sys involves showing sys satisfies specification spec 
verification depends idea temporal theory system 
temporal theory sys sys set formulae true run sys verification process sys specification spec involves demonstrating relation sys spec proof systems established logic specification 
typically temporal theory system include system specific formulae formulae capturing general properties systems 
obvious question particular system sys implemented established framework building multi agent systems sys obtained 
suppose language specification 
step developing sys model sys theory multi agent systems developed chapter 
result system call sys 
corresponding system set models sys fm model model sys sys set formulae valid sys sys ff form sys fg moving general case may possible axiomatize properties specific system may help development temporal theory system 
note specifications specifications axiomatizations chapter qal quantified version free variables formulae assumed universally quantified practice agent identifiers left free 
worth observing specifications axiomatizations intended definitive sense 
specification personal thing 
choices specify step different people specify different things different ways 
question detail go 
sad fact formal specifications tend require exhaustive tedious amounts detail order useful 
choices exactly specified left 
specifications taken pointer possible definitive statements 
axiomatizing frameworks multi agent systems section attempts describe existing frameworks multi agent systems terms theory multi agent systems described earlier justify claim theory reflect multiagent systems built 
frameworks axiomatized logics developed earlier 
frameworks chosen shoham agent oriented programming paradigm agent system particular fisher concurrent metatem paradigm 
agent oriented programming agent agent oriented programming aop new programming paradigm societal view computation 
idea informs aop mentalistic notions belief choice declarative programming regime 
aop unusual unique claims general theory agency outlined 
time writing prototype called agent aop paradigm implemented 
section shows agent modelled theory multi agent systems described chapter agent logics developed chapter 
shoham identifies components complete aop system formal logical system defining mental state presumably partial theory agency reported interpreted programming language programming agents agent believes time cmt agent committed time agent bring time table modalities aop process converting agent programs low level executable objects 
aop admits levels description agents terms logical language second terms programming language third terms low level device 
time writing components received attention 
shoham writes third somewhat mysterious indicates thinking rosenschein kaelbling situated automata approach 
review ignore process 
component language defining mental state informally described 
semantics language appears theory agency outlined 
language modal predicate logic modalities belief cmt commitment capability see table details 
woven language method reasoning time method temporal arguments briefly described preceding chapter detail pp 
augment language modalities describing time modal operator predicate extra argument describe time true 
syntactically acceptable formula shoham language open door open door formula read time agent ensure door open time time agent believes time agent ensure door open time 
operators clear mean 
cmt operator unusual worthy closer study 
sadly details role precisely understood 
proof system language restrictions placed beliefs commitments beliefs commitments assumed internally consistent agents committed believe capable agents aware committed agents committed behalf 
persistence mental state assumed see comments persistence previous chapter 
component makeup aop system interpreted programming language 
concrete example shoham agent system see 
system described 
developing theory underlies aop shoham avoids introducing notion actions primitives 
actions natural concept introduced syntactic sugar 
agent types action available agents private internal cf 
cognitive actions clear private actions correspond invocation procedure programming language communicative actions types communicative act allowed agent inform causes recipient believe content message request attempt get recipient commit un commit respectively 
agent agent definition program consists components set capabilities condition action pair condition determining circumstances action may performed condition formula modal language described set initial beliefs formulae modal language described set commitment rules defining circumstances agent adopt commitments 
system agent 
agent 
agent belief ded 
rules act 
rules interpretation actions ae cognitive communicative components theory multi agent systems components remain fixed execution life agent beliefs agent change time agent program proper just set commitment rules worth looking detail rules 
commitment rule simply quad agent acti condition messages received agent current time mental condition beliefs agent currently agent agent name act action expression dictating action performed 
precise nature conditions important 
suffice say may contain variables may quantified universally existentially 
suppose rule possessed agent cycle life check see rule fired matching messages received beliefs held 
rule matched fired belief added belief set cmt agent act 
mean committed performing action act agent agent time current time 
agent life commitment rules continually generate commitments agent subsequently tries discharge 
operation agent described loop 
read current messages updating beliefs commitments necessary 
execute commitments current cycle capability condition associated action satisfied 
goto 
completes review agent 
task see extent agent modelled theory multi agent systems 
component theory taken turn discussed respect agent 
recall components theory illustrated 
belief reasoning 
agent agents maintain belief sets precisely way described theory multi agent systems 
beliefs formulae modal language described identified internal language agent implementation described agents deductive capabilities agent assigned empty set deduction rules 
rules actions cognitive communicative 
clearly private cf 
cognitive communicative act aop map directly equivalents theory multi agent systems 
private action agent associated condition determining applicability condition action pairs held capabilities database map directly rules 
important caveat mental conditions may contain quantifiers 
agent private acts allowed cause epistemic inputs clear user manual 
interpretation process agent interpretation message may viewed message 
belief revision 
belief revision process aop complex 
involves steps cycle shoham suggests agents possess commitments database defining commitments agent 
agents aware commitments committed believe committed separate database redundant conceptually 
authors agent programming manual write agent gain commitment asserting commitment beliefs 

generating new belief set received inform message remove old beliefs inconsistent inform information add new information message remove belief set commitments 
generating new commitments comparing rules beliefs epistemic inputs see commitment rules fire described adding belief set resulted step 
axiomatizing agent aspects behaviour agent systems may axiomatized languages developed earlier 
useful technique write axioms commitment rule possessed agent 
recall commitment rule quad agent acti message conditions mental conditions respectively 
commitment rules may rewritten formulae qal general form send send fm ccdeef bel bel bel cmt agent act shoham gives example commitment rule expressed english asked perform action agent message condition believe friend mental condition commit 
rule expressed follows send request ccdeef bel bel cmt real failing rule respect shoham original explicit time appeared original expressed logics developed thesis dropped 
note properties commitments specified desired example possible specify commitments eventually discharged 
properties inform acts formula 
send inform fact bel fact bel fact similarly property acts holds 
send bel cmt entries capabilities database similar technique commitment rules 
entries capabilities database pairs form acti meaning act performed believed 
gives axioms form act ccdeef bel bel concludes axiomatization agent 
concurrent metatem processes concurrent metatem processes cmp framework building multi agent systems metatem temporal logic programming paradigm 
cmp system contains set concurrently executing objects able communicate asynchronous broadcast message passing 
object main components interface defines object may interact environment objects computational engine defines object acts 
interface consists components unique object identifier just object id names object set symbols defining messages may received object called environment predicates set symbols defining messages object may send called component predicates 
example interface definition stack object stack pop push popped stack name object environment predicates component predicates 
computational engine object metatem temporal logic programming paradigm 
idea informs approach directly executing declarative object specification specification set rules temporal logic formulae form antecedent past consequent 
past time antecedent temporal logic formula referring strictly past time consequent temporal logic formula referring 
intuitive interpretation rule basis past gives rise name paradigm declarative past imperative 
actual execution object superficially simple understand 
object obeys cycle trying match past time antecedents rules recorded history executing consequents rules fire language object rules order temporal logic fotl described preceding chapter metatem literature language called fml order metatem logic 
recap language ordinary order predicate logic augmented set temporal modal operators appear past form rules restricted separated normal form snf details snf important 
purposes assume snf formula simply past form 
useful identify various subsets formulae fotl 
set form snf fotl set snf formulae fotl set form fotl set fotl formulae referring strictly past form fotl set fotl formulae referring 
element form snf fotl called rule element form fotl called history formula element form fotl called commitment 
precise definition object execution 
objects continually execute cycle 
update history object receiving messages objects adding history 
process described detail 

find rules fire matching past time antecedents rules history 
note matching process deductive literal 
example suppose object history formula ccdeef rule rule fire ccdeef obvious similarities object production systems significant differences 
reader cautioned analogy seriously 
rc give ask ask ask rc give ask ask ccdeef ask ask ask rp ask ask give give ccdeef ask give ccdeef ask give true give give ask give ask give ask give ask give simple cmp system 
jointly execute fired rules commitments carried previous cycles 
done collecting consequents newly fired rules old commitments new commitments 
may possible satisfy commitments current cycle case unsatisfied commitments carried cycle 
object choose number execution possibilities 
commitments satisfied considered true 

goto 
clearly step heart execution process 
making bad choice step may mean object specification subsequently satisfied 
unfortunately process finding best choice difficult see details 
natural question ask objects things perform actions send messages idea action performed commitment true 
commitment component predicate defined objects interface see predicate broadcast message objects 
receipt message object attempts match predicate environment predicates interface 
match add predicate history prefixed ccdeef operator 
commitment corresponds action action associated commitment executed 
illustrate cmp paradigm detail gives definition cmp system adapted 
simplify things little system propositional 
system contains objects rp resource producer rc resource consumer rc resource consumer 
object rc send ask message cycle 
object rc send ask message cycle ask previous cycle rc ask previous cycle 
resource producer object rp defined rules 
rules say object asks eventually 
third rule says producer give objects time 
fourth fifth rules guarantee object asked previously 
prove properties system 
abstractly cmp system described quintuple env act comp obj set object ids env maps element obj set predicate symbols head messages object accept act maps element obj set predicate symbols correspond actions object capable performing comp maps element obj set predicate symbols head messages object may send rules maps element obj subset form snf fotl representing object program rules 
step execution object characterized state set formulae containing rules history commitments object subset form snf fotl form fotl form fotl 
concludes brief review concurrent metatem processes 
step see cmp described theory multi agent systems 
component theory discussed turn 
belief reasoning 
beliefs agent correspond state object 
language fotl identified internal language steps execution cycle cmp object involve matching history object specification rules determine new commitments 
viewed deductive process 
rules actions cognitive communicative 
cmp framework explicitly identify notions cognitive communicative act ideas implicit 
communicative acts objects communicate exchanging messages containing ground atoms language fotl 
maps theory multi agent systems cognitive acts appear cmp system calls style built predicates prolog language epistemic input results performance cognitive act simply belief action performed 
input added history object 
example suppose object performed action write 
cycle object ccdeef write history notion conditions actions implicit order perform action communicative cognitive associated predicate currently true 
condition action simply associated predicate 
interpretations 
object interface filters messages object interested receiving 
interface consists set predicate symbols messages headed predicate symbols accepted object 
process modelled interpretation function 
belief revision 
step life object compare history rules order determine new commitments 
means objects strongly temporally aware sense appears history object cycle cycle ccdeef appear history 
effectively means rewriting history cycle task handled belief revision function 
actual management epistemic inputs trivial simply added belief set state object 
belief revision function handles updating commitments removing satisfied current time 
axiomatization 
axiomatizing concurrent metatem processes cmp object believes predicate associated action performs action 
gives axiom note follows arbitrary predicate symbol arbitrary sequence constants bel act associated safety property ensures actions performed condition action true 
ccdeef bel act similarly cmp object believes component predicate sends associated message 
gives axiom 
bel send comp associated safety condition ensures messages sent condition message true 
send ccdeef bel comp recall cmp messages broadcast objects sender 
cmp objects believe messages receive messages pass message filter gives axiom 
send bel ccdeef env objects maintain accurate histories lose beliefs 
gives 
bel bel ccdeef history formula note messages cmp broadcast sent point point 
similarly object sends message may generate epistemic input sender message concept directly supported theory multi agent systems 
example object sends message ask rc history cycle contain ask rc 
difficult extend theory multi agent systems support 
conceptually object rules part state 
bel rules general rule adopting commitments basis past 
gives axiom instance attachment axiom capturing basic deductive capabilities cmp objects 
bel bel bel history formula rules note axioms simplified 
bel bel history formula rules note axioms may require subsidiary proof object eventually discharge commitments 
understand axiom associated discharging commitments necessary understand notion eventuality 
formula form contains eventuality formula contains eventuality time formula contains eventuality 
bel bel ef eventuality note operator example eventuality operator 
means object commits say give guaranteed give 
reason subtle complex reader referred cited details 
sample proof section show temporal theory simple cmp system derived prove properties system 
system take described 
call system 
axiomatization described temporal theory system systematically derived 
properties system examined formal proof 
theorem illustrates 
theorem system property send rc rp ask send rp rc give proof see 
completes axiomatization concurrent metatem 
specifying paradigms cooperative problem solving section presents specifications existing cooperative problem solving paradigms 
simple master slave framework lines described cooperative inference technique employed feline cooperating expert system contract net protocol 
master slave problem solving systems rosenschein outlined technique coordinating problem solving activities simple master slave style problem solving systems 
technique outlined best author knowledge implemented quite clearly demonstrates principles systems 
section follows model rosenschein framework faithfully simply attempt basis describe systems 
specification internal language agents assumed order meta language ml reasoning ordinary order object language ol 
usual quoting convention assumed language object language formula ml term denoting 
bel rp ccdeef ask bel rp give 
bel rp give bel rp give 
bel rp ccdeef ask bel rp give pl 
send rc rp ask bel rp ccdeef ask 
send rc rp ask bel rp give pl 
bel rp give send rp give 
send rp give send rp give tax 
bel rp give send rp give pl 
bel rp give send rp rc give 
bel rp give send rp rc give tl 
bel rp give send rp rc give bel rp give send rp rc give tax 
bel rp give send rp rc give pl 
bel rp give send rp rc give tl pl 
send rc rp ask send rp rc give pl proof theorem message types request agent requests agent perform goal inform agent informs agent fact domain predicates goal agent goal fact agent believes fact agent capability goal agent perform goal table message types domain predicates master slave system ml predicate fact record facts self belief agent recorded fact 
ml predicate goal record goals 
goals sorts communicative cognitive 
example agent may goal request inform may goal perform action agents may send types message request inform 
rosenschein took inspiration messages plan theory speech acts described 
general action cognitive communicative performed actor 
basic pre condition action leads axioms safety properties 
send inform ccdeef bel fact inform send request ccdeef bel fact request ccdeef bel fact inform act performed argument believed safety property 
send inform ccdeef bel fact similarly request act performed sender goal argument safety property 
send request ccdeef bel goal axioms rule requests informs 
immediate effects communicative acts liveness properties 
send request bel goal send inform bel fact force request act axiom called cause want liveness property 
bel goal bel accept bel goal ability persuade adopt goal depends accept predicate 
predicate allows performance actions dependent social relationships gives agents measure autonomy adopt goal 
example suppose master authority expressed axioms 
bel fact master bel fact master accept endowed suitable reasoning abilities adopt goal requests 
obviously sophisticated social relationships may built similar fashion 
force inform act axiom called convince liveness property 
bel fact bel bel fact bel fact predicate axiom analogous role accept predicate cause want axiom provides agents measure autonomy believe 
note measure consistency non contradiction assured definition 
commitment action predicate depends having appropriate capability achieve goal 
agents commit goals capable liveness property 
bel goal bel bel fact property specify goals eventually achieved liveness properties 
bel fact cognitive action bel fact inform send inform bel fact request send request completes specification master slave system 
cooperative inference technique cooperating expert system expert system constructed group agents contains classical expert system domain knowledge inference engine process cooperative interaction agents pool resources solve problems requiring collective domain expertise 
basic issue development system devise called cooperative inference technique method extending classical intra agent reasoning inference techniques multiple agent scenarios 
section gives specification technique employed feline system 
description feline cooperative inference technique taken directly agent feline maintains data structure representing beliefs environment 
data structure called environment model 
contains entry modelling agent agent modelling agent communicate acquaintances 
entry contains important attributes skills 
attribute set identifiers denoting hypotheses agent expertise establish deny 
skills agent correspond roughly root nodes inference networks representing agent domain expertise 
interests 
attribute set identifiers denoting hypotheses agent requires truth value 
may agent expertise establish truth value interests interested 
interests agent correspond roughly leaf nodes inference networks representing agent domain expertise 
agent environment model serves delimit cooperative problem solving process 
describing inter agent problem solving detail describe types message agents may send 
define message triple sender receiver contents 
feline contents field triple containing message type attribute value 
agents communicate message types request 
agent sends request attribute field contain identifier denoting hypothesis 
assumed hypothesis lies domain intended recipient 
request assumed mean sender wants receiver derive truth value hypothesis 
response 
agent receives request manages successfully derive truth value hypothesis send response originator request 
attribute field contain identifier denoting hypothesis value field contain associated truth value 
inform 
attribute field inform message contain identifier denoting hypothesis 
value field contain associated truth value 
inform message unsolicited agent sends thinks recipient interested hypothesis 
look detail cooperative problem solving technique 
consider problem solving normal rule system 
typically goal driven reasoning proceeds attempting establish truth value hypothesis 
truth value known recursive descent inference network associated hypothesis performed 
leaf nodes inference network typically correspond questions asked user 
feline known scheme augmented principle 
evaluating leaf node question check environment model see agent node skill 
agent lists node skill send request agent requesting hypothesis 
wait response received response indicate truth value node 
technique instance general problem solving technique called task sharing evaluation tasks explicitly delegated basis skills entry environment model 
turn data driven problem solving 
typically data driven problem solving proceeds database facts hypotheses associated truth values set rules repeatedly generating conflict set new facts 
new facts added database process begins 
hypothesis follows set facts set rules style problem solving eventually generate result 
feline basic scheme augmented follows 
new fact generated environment model consulted see agent hypothesis interest 
inform message sent appropriate agent containing hypothesis truth value 
receipt inform message agent adds fact database enters forward chaining cycle 
technique instance result sharing agents share results believe may interest agents 
specification straightforward 
assumed agent environment model set formulae restricted order language 
table summarizes message types domain predicates specification 
message types request request value response response request value inform unsolicited data value domain predicates modelling agent domain expertise skill agent domain expertise interest agent interest goal modelling agent requires value value value table message types domain predicates cooperative inference technique request send request response send response inform send inform bel skill bel skill interest bel interest goal bel goal value bel value table abbreviations cooperative inference technique agent belief domain expertise evaluate hypothesis belief skill believe expertise evaluate belief interest believe interested value belief goal currently trying find value message types correspond exactly informal description 
interests readability abbreviations defined table 
agents may perform types cognitive action 
may forward chain attempt derive new information 
second may evaluate specific hypothesis order determine value 
abbreviations assumed eval eval property specification evaluation actions ultimately result value hypothesis evaluated liveness property 
eval value agents evaluate things skill safety property 
eval ccdeef various properties request acts 
agents hypothesis appropriate domain expertise 
request goal possible goals eventually acted liveness property 
goal eval notation abused interests readability second argument operator constant variable term denoting action function 
meaning quite clear specifications written way expanded strictly correct form necessary 
goals evaluated locally lack expertise liveness property 
requests honest safety property 
specify assumption agent goal expertise evaluate knows agent expertise 
goal skill request request ccdeef goal skill goal skill properties response actions 
responses guaranteed classic liveness property 
request response responses solicited safety property 
response request result receiving response agent come believe data liveness property 
response value agents lie responses value respond 
safety properties 
response ccdeef value properties inform acts 
informs sent agents appropriate interests liveness property 
interest value inform associated safety property ensures informs sent agents interested agents honest informs 
inform ccdeef interest value effect inform captured liveness property 
inform value miscellaneous properties 
agents drop goals value re adopt 
value goal possible specify agent beliefs skills correct 
skill completes specification cooperative inference technique 
contract net protocol contract net cnet protocol high level protocol achieving efficient cooperative action networks communicating problem solvers 
developed smith stanford university usa initially described early 
formed basis smith doctoral thesis published described 
basic protocol subsequently adapted extended researchers 
aim section develop formal specification subset cnet protocol description protocol distillation cited intended definitive 
cnet protocol interesting case study reasons 
historical 
protocol major attempt address issue cooperative problem solving autonomous problem solvers participating agent able explicitly choices 
earlier focussed mainly blackboard architectures autonomy issue 
secondly cnet protocol remains completely specified cooperative problem solving paradigms suited formalization 
simple formalization cnet protocol achieved providing useful point comparison pp key idea motivated cnet negotiation central component cooperative problem solving essence cnet protocol framework managing negotiation 
agent node smith parlance cnet system autonomous problem solver capable communicating peers message passing 
execution agent may generate task expedited 
may done locally agent ability agent may try get agent expedite brief node generates task advertises existence task nodes net task announcement acts manager task duration 
absence information specific capabilities nodes net manager forced issue general broadcast nodes 
manager possesses knowledge nodes net candidates issue limited broadcast just candidates 
manager knows exactly nodes net appropriate issue point point announcement 
problem progresses task announcements various managers 
nodes net listen task announcements evaluate respect specialized hardware software resources 
task node suited submits bid 
bid indicates capabilities bidder relevant execution announced task 
manager may receive bids response single task announcement information bids selects appropriate nodes execute task 
selection communicated successful bidders award message 
selected nodes assume responsibility execution task called contractor task 
task completed contractor sends report manager 
pp normal contract negotiation process simplified instances resulting enhancement efficiency protocol 
manager knows exactly node appropriate execution task directed contract awarded 
differs announced contract announcement bids submitted 
award directly 
cases nodes awarded contracts acknowledge receipt option refusal 
tasks amount simple requests information contract may appropriate 
cases request response sequence 
messages aid distribution data opposed control implemented request information messages 
request message encode straightforward requests information contracting unnecessary 
information message response request message general data transfer message 
pp fact werner formalized fragment cnet protocol 
formalization incomplete elements original description described may assumed dropped interests simplicity 
retrospect idea probably key contribution cnet 
researchers notably zlotkin rosenschein subsequently investigated properties negotiation strategies game theoretic techniques 
message types sender announces task id spec bid sender bids task id award sender awards task id agent request sender requests information associated inform sender informs recipient value domain predicates eligible agent eligible tasks spec task newly generated sub task spec announced task id announced agent awarded agent awarded task agent task agent committed eventually doing task goal task currently expedited result result agent bid table message types domain predicates cnet addition describing various messages agents may send smith describes procedures carried receipt message 
briefly procedures follows see pp details 
task announcement processing 
receipt task announcement agent decides eligible task 
looking eligibility specification contained announcement 
eligible details task stored agent subsequently bid task 

bid processing 
details bids contractors stored managers deadline reached 
manager awards task single bidder 

award processing 
agents bid task fail awarded simply delete details task 
successful bidder attempt expedite task may mean generating new sub tasks 

request inform processing 
messages simplest handle 
request simply causes inform message sent requestor containing required information information immediately available 
informs requestor information unknown 
inform message causes content added recipient database 
assumed task contractor send information message manager detailing results expedited task protocol specification 
assumed agents internal language subset order language necessary reasoning capabilities 
domain predicates message types specification table 
messages domain predicates contain terms sorts task id standard name task eligibility specification spec allows agents determine eligible task usual agent id value result task domain values assumed contain distinguished element unknown 
meaning message types fairly obvious domain predicates require explanation 
agents maintain beliefs tasks eligible 
achieved eligible predicates 
record task announcements agent received kept announced predicates 
agent awarded task records fact awarded predicates second argument denotes manager task 
commitment eventually performing task recorded task predicates 
details tasks currently expedited recorded goal predicates result task recorded result predicates relate task id value 
manager records details bids receives predicates relate task id bidder 
details new tasks recorded predicates 
note done special report message type original cnet framework 
send bid send bid award send award request send request inform send inform eligible bel eligible bel announced bel announced awarded bel awarded task bel task goal bel goal result bel result bel table abbreviations cnet means agent task wants task means committed task goal means currently working task 
definitions order improve readability see table 
definitions illuminating 
capture dynamic nature roles contractor manager 
contractor inform award manager contractor agent contractor time receives award sends final result 
similarly agent manager time sends award receives final result note symmetry roles 
definitions define means contract exist agents 
contract contractor manager fourth definition gives means contract successfully expedited 
expedited ccdeef contractor inform actual properties specified 
task announcements 
broadcast giving 
immediate effect task announcement liveness property 
eligible announced agents correct beliefs announcements safety property 
announced eligible agents announce tasks want expedite safety property 
ccdeef eligible creation task announcements 
agent locally generated task expedited locally announce task liveness property 
eligible tasks expedited locally liveness property 
eligible task agents bid tasks originate eligible liveness property 
announced bid bids solicited safety property 
bid announced effect receiving bid liveness property 
bid manager correct beliefs bids safety property 
bid eventually manager assesses bids sends award liveness property 
award managers award agents safety property 
award ccdeef desired specified managers award agent safety property 
award award task announcements awards broadcast gives 
award award successful bidder contractor believe awarded task liveness property 
award awarded agents correct beliefs awarded safety property 
awarded award contractors eventually committed tasks liveness property 
awarded task tasks eventually adopted goals liveness property 
task goal goals tasks safety property 
goal task axiom states goals successfully expedited liveness property 
goal result agent contracted task result task eventually send result liveness property 
result contractor inform simple come served ordering imposed tasks 
contractor contractor expedited expedited inform request acts comparatively simple properties 
recipient inform message add appropriate information local database liveness property 
inform result informs honest safety property 
inform ccdeef result request sent required value known sender safety property 
request ccdeef result recipient request required information inform sender liveness property 
request result inform required value known recipient request recipient tells sender value unknown 
request result inform unknown properties may specified example property eligible agent task follows 
eligible completes specification cnet protocol 
note specification quite long fairly tedious great deal left 
example specification little say subject long beliefs held 
reason omissions lack space 
reader aware specification expanded considerably detail 
sample proof advantages presenting specification manner properties may examined formal proof 
section sample proof 
call specification sp 
theorem states property proven 
theorem specification sp property sp eligible eligible bid proof see 

eligible 
eligible pred pl 
eligible announced 
eligible announced pred pl 
eligible eligible announced tl pl 
announced bid 
announced bid pred 
eligible eligible bid tl pl proof theorem comparison werner formalization contract net werner formalization cnet pp contract net defined social group sg cnet hl cnet st cnet roles cnet cnet language communication cnet set agents st cnet social structure defining cognitive states associated roles contractor manager roles maps role st cnet agent possible time cnet space possible histories system 
significant parts description language cnet social structure st cnet language cnet parallels message types defined formalization see 
associated language pragmatic interpretation function prag defines cognitive states agents affected messages 
werner defines function message type awards 
effect awarded contract reject possible courses action lead task expedited additionally manager expects contractor intends awarded task 
item interest social structure st cnet consists set roles role agent defines state information permission responsibilities values role 
werner state roles cnet contractor manager 
ways werner formalizations alike ways differ 
main similarity recognize dynamic nature roles manager contractor 
additionally formalisms broad agreement force award message type 
apart points comparison formalizations differ markedly 
obvious difference formalization axiomatic properties may readily demonstrated formal proof werner 
comparison difficult 
werner formalization sense general assume existence specific domain predicates agent belief set werner assumptions 
detailed description critique werner formalism may appendix summary previous chapters laid theory multi agent systems number linear time temporal logics may reason systems modelled theory 
chapter devoted case studies demonstrated logics describing reasoning specifying properties multi agent systems 
brief subject reasoning systems temporal logic frameworks building multi agent systems examined modelled terms theory multi agent systems 
frameworks axiomatized qal 
frameworks agent concurrent metatem 
subsequently existing cooperative problem solving techniques reviewed specified qal 
problem solving techniques simple master slave framework cooperative inference technique cooperating expert system feline known contract net 
chapter final chapter main part thesis shows number branching time temporal logics may developed shown correspond theory multi agent systems developed earlier 
contrast linear models time underpin logics developed chapter branching time logics model time branches infinitely point time 
logics expressive linear time counterparts allow consideration attributes agents cooperative goals described linear models 
chapter branching time temporal logics multi agent systems logics described chapters linear model time time point successor 
idea semantics allowing run multi agent system act model linear time temporal logic 
linear temporal logics means type temporal logic available 
basic alternative view time branching time point 
branching time structure time point may number successors depending actions taken change state system 
see branching time structures related multi agent systems consider set runs system 
way representing set collect runs single branching structure 
fully express properties structure requires ability talk things happening things true possible possible futures 
language branching time temporal logic 
chapter develops branching time logics reasoning multi agent systems bal branching propositional branching time logic expressive branching time system ctl logic qbal quantified bal extends bal quantification addition operators describing goals abilities agents groups agents 
reasons supposing branching time logics suitable reasoning multi agent systems 
consider semantic structures underly branching time logics 
structures closely resemble game trees extensive representation formalism developed game theorists describing game multi agent interactions 
link multi agent systems game theory established see 
semantic structure branching time logic appropriate representing multi agent interactions ladner reif came similar 
branching time logic appropriate linguistic tool describing multi agent interactions 

branching time logics certain inherent advantages linear counterparts allow consideration happen just happens 
turn allows development theories ability cooperative ability goals cooperative goals literally meaningless linear structure point examined detail chapter 

multi agent systems inherently reactive sense proven tool describing reasoning reactive systems temporal logic issue discussed chapter 
remainder chapter structured follows 
section develops objects called bal frames 
objects foundation branching time semantic structure built 
subsequent section develops basic propositional branching time logic bal 
section develops theories show goals abilities attributed agents branching time framework 
section incorporates theories operators quantified version bal called qbal see 
short examples bal 
chapter concludes comments summary 
technical framework branching time logics ctl particular system logics chapter reader referred 
ctl originally described 
complete axiomatization ctl described 
bal frames step development branching time logics define bal frames precursors model structures language bal 
powerset world powerset world world words bal frame set worlds binary relation worlds meant frame classical modal logic 
idea bal frame represent set runs system case model system follows terminology chapters reader find useful glance back chapters order refresh memory various function type definitions 
basic idea follows 
suppose hw ri bal frame 
hw wi represents world arise world system modelled 
function defines means bal frame model system 
model system model bfr sys hw ri bfr init world sys world world sys hw wi init world sys world sys wi tc hw wi world sys function requires explanation 
conjunct simply demands initial world system second conjunct demands legal ways system evolve third conjunct demands worlds ones arisen legal set transitions system initial world 
demand function tc takes relation returns transitive closure relation definition transitive closure essentially standard omitted final conjunct ensures relation contains legal transitions 
bal frame model system said ordinary 
ordinary bal frames property relation frame total world successor 
definition totality function 
total total bfr hw ri bfr hw wi result stated formally theorem 
theorem ordinary bal frames total 
proof weak properties agents agent possible move 
state possible transition associated 
possible transitions world successor world hw wi definition model total 
utility definitions 
path defined countably infinite sequence worlds 
type exists 
paths defined type 
reason change terminology retain compatibility branching time logic literature 
path suppose hw wi hw wi hw wi transitive closure transitive closure relation called ancestral relation 
addition notational convention path path obtained omitting elements denoted function defines means path bal frame 
path path path bfr hw ri bfr hdp hp function takes frame returns set paths 
paths powerset path paths bfr fp path path bfr logic bal section introduces logic bal branching 
logic essentially augmented path quantifiers describe things true just possible true possible futures 
defining syntax bal 
subsequently develop model structures show model corresponds system 
semantics bal defined usual way 
axiomatization bal 
syntax language bal parameterized internal language instance bal denoted bal 
alphabet bal essentially augmented path quantifiers mentioned note bal ctl contains past time operators 
path quantifiers turn duals introduced language basic 
introduced derived operator 
definition alphabet bal contains symbols 
symbols ftrue bel send dog 
set constant symbols const disjoint sets const ag agent constants const ac action constants 
closed formulae internal language 
unary propositional connective binary propositional connective 
unary temporal connective binary temporal connective path quantifier 
punctuation symbols syntax bal definition 
definition syntax bal defined rules 

closed formula action constant agent constants formulae bal true bel send 
formulae bal formulae bal 
formulae bal formulae bal af bel agent believes agent performs action send agent sent message af paths table non standard operators bal observed earlier temporal component bal logic ctl 
notation original altered slightly interests compatibility table summarizes meaning non standard operators bal 
appropriate emerson halpern original notation parentheses 
semantics step define semantics bal 
carried parts 
model structures defined correspondence model structures systems established 
formal semantics language set semantic rules terms satisfaction relation usual way 
satisfiability validity bal defined 
model structures language bal contains non empty sets constants const ag agent constants const ac action constants put bijective correspondence sets ag set agents ac set actions model structures interpretation usual preserve sorts 
expected model structure contains bal frame 
type bal models model bal defined follows 
definition model bal structure hw ag ac ii hw ri bal frame ag set agent ids ac action set actions const 
ac ag interprets constants 
close relationship models systems 
relationship formalized function defines conditions model considered model system 
model model bal system model sys hw ag ac ii model hw ri sys hag ari sys ag ag ac ffa hf ai ar agg hm pi true hm pi bel iff state hdp hm pi send iff hi fi sent trans hdp hm pi iff action trans hdp hm pi iff hm pi hm pi iff hm pi hm pi hm pi af iff hm pi paths hw ri hdp hdp hm pi iff hm hm pi iff hm hm semantics bal ef path true table derived operators bal model bal model system frame defines execution sequences system set actions agents model members corresponding sets system 
model bal ordinary iff model system 
semantic rules semantics bal satisfaction relation usual way 
relation holds pairs form hm pi model bal path formulae language 
semantic rules bal 
rules define semantics atomic formulae bal 
primitives reading counterparts properties attachment lemma belief holds 
rules define usual propositional connectives 
operators standard semantics remaining propositional connectives false defined abbreviations usual way 
operator read paths 
af satisfied satisfied paths head path 
operator defined abbreviation table 
read path 
ef satisfied satisfied path head path 
final rules define temporal operators 
essentially time operators see table derived operators 
true satisfied world path satisfied satisfied points path satisfied true point path true point 
satisfiability validity satisfiability validity defined normal way 
formula bal satisfiable model path hm pi satisfiable satisfiable normal model true model satisfied paths model valid non empty class models true member class 
valid valid class models property indicated proof theory axioms noting instances propositional tautologies theorems 
propositional tautology axioms deal temporal path component bal adapted stirling axiomatization ctl 
axiom stirling axiomatization omitted due complexity see discussion axiomatization 
af atomic ef atomic af af ay af ef aef af axioms deal time operators require explanation 
see sound recall atomic formula refer time 
axiom simply version axiom classical modal logic axiom version classical modal axiom version classical modal axiom version classical modal axiom 
axiom captures interaction time operator path quantifier 
attachment axiom belief operators soundness axiom follows attachment lemma see chapter 
bel bel bel ff 
inference rules observing propositional reasoning sound modus ponens mp rule inference 
infer inference rules stirling axiomatization ctl 
infer infer af cooperative ability cooperative goals section shows semantic structures developed previous sections examine important issues development cooperative systems 
develop theory cooperative ability 
ability assumed mean having power bring state events know know 
addition develop theory cooperative goals 
theory posit existence distinguished cognitive goal state cf 
allows attribute goals agents groups agents 
shall see theories incorporated order language qbal provide powerful tool reasoning cooperative systems 
cooperative ability mean ability achieve goal 
doesn mean having single message cognitive action available bring desired goal goals depend successful execution complex sequences actions 
say agent group agents able achieve goal plan agent group agents telling agent group agents moves agent group agents follows plan goal guaranteed achieved 
problems mean plan mean guaranteed 
ai planning community generally views plan partially ordered sequence actions 
choose direct literal representation plans fix abstraction called strategies concept originally developed game theorists 
strategy thought strong kind conditional plan 
model strategy function belief sets moves 
mean guaranteed 
take world bal frame agent strategy 
world set futures emerge paths rooted world 
necessarily futures moves performed agent correspond suggested strategy 
call paths futures strategy 
goal achieved strategy goal necessary consequence strategy 
mean strategy guaranteeing goal 
definition rests subtle property bal frames contain possible legal ways system evolve 
strategy appear frame goal achieved 
case strategy said guarantee goal 
note definition ability applied just easily groups agents 
discussion formalized 
type strategies 
strat move strategy sound agent dictates illegal move agent 
st sound strat agent st sound st ag mv legal st ag function defines means strategy agent hold path 
idea strategy hold path agent moves path correspond dictated strategy 
holds strat path holds st state hdp trans hdp st idea strategy generalized group agents joint strategy 
convenient define joint strategy map 
gamma 
strat sensible demand joint strategies non empty leads invariant 
js dom js joint strategy sound group agents just case member strategies sound 
js sound system js sound js sys dom js st sound js agent sys convenience function defined returning set sound joint strategies group agents system 
sjs powerset system powerset sjs sys js dom js js sound js sys definition single strategy holding path easily extended encompass joint strategies 
js holds path js holds js dom js holds js possible define joint strategy bal frame world bal frame set paths emerging world joint strategy holds paths called futures strategy 
idea somewhat similar werner calls potential 
futures world powerset path futures js bfr fp paths bfr js holds js hdp joint strategy guarantee goal world bal frame goal satisfied strategy world 
leads semi formal definition ability semiformal define means goal satisfied path 
logical concept defined semantics language 
powerset goal world system bfr sys js sjs sys futures js bfr satisfied note definition ability section loosely developed werner see appendix note definition quite different moore essentially mentalistic definition ability see chapter 
cooperative goals section uses semantic structures developed earlier develop theory joint goals 
theory allows observer system attribute goals agents groups agents 
theory posit existence distinguished cognitive goal states individual agents groups agents 
possible identify direct representation goal structure agent internalized collection possible worlds goal relation holding cf 
goal stack intention box cf 

agent group agents goals virtue attributing 
go attributing goals agents 
idea adopt inspired 
semantics goals developed possible worlds inflict possible worlds semantic structures developed look model see worlds lie latent 
find suitable candidates give semantics goals 
worlds pick semantics goal paths bal structures 
idea attribute goal agent look done 
doing involves choosing 
choices mean expressing preference consequences move 
preferences dictated goals 
making choice say choosing move move agent preferring consequences crudely agent goal necessary consequences actions 
consequences moves contained bal frame ought possible decode path deduce goals agent relative path 
step define means paths agree actions group agents 
agree path path powerset agree trans hdp trans hdp st move nd move st move nd move table ability goals example scenario leads immediately semi formal definition joint goals 
goal powerset goal path goal bfr paths bfr hdp hdp agree satisfied ability goals example illustrate ideas previous sections extended example 
suppose system contains agents ralph 
point time agent possible moves 
perform fm perform fm achieve goal necessary perform move second perform second move 
doesn matter move 
achieve goal necessary perform moves doesn matter 
scenario summarized table cross intersection row column indicates matter agent 
point time possible transitions system sequence moves generates total sixteen distinct futures call possible futures described table 
final columns tick indicates associated goal achieved path cross indicates 
sixteen futures labeled table achieved 
definition coalition fr fg achieve strategy simply requires agents perform moves dictated table 
agents achieve individually 
asks fr fg goal path answer path agrees moves fr fg achieved 
agent individually goal path scenario 
goal achieved futures goal paths goal path 
definition achieve 
paraphrase halpern definitions ability goals external concepts 
don imagine agent scratching head wondering achieve wondering goal observers designers may notions describe system design 
necessary agent represent goals ability order goals ability 
order branching time logic multi agent systems section draws results previous chapters sections developing quantified version bal called qbal quantified bal 
logic qbal allows quantification agents actions individuals domain internal language 
extends bal addition modal operators describing abilities goals agents groups agents allowing relationship agent groups member described 
possible express statements goal achieved agent 
path st move nd move table paths moves goals syntax alphabet qbal language extends bal addition symbols symbols extra constants const individuals domain internal language countable set individual variables var sets var ag agent variables var ac action variables var variables denoting groups agents var variables individuals domain quantifier symbol punctuation symbol 
usual term defined variable constant 
symbol denote term 
term associated sort ag ac indicate term sort write syntax qbal defined 
definition syntax qbal defined rules 
terms named sorts formula formulae qbal true bel ag send ag ag ag ac ag qg 
qg term sort formula qbal formulae qbal qg goal qg 
formula qbal variable formula qbal 

qbal contains propositional path temporal formation rules bal 
qbal contains primitive operators addition provided bal 
standard order equality remainder summarized table 
semantics semantics language parts model structures semantic rules 
definitions satisfiability validity essentially standard omitted 
group coalition true goal group coalition goal agent member group coalition table non standard operators qbal model structures qbal contains terms sorts agent action group individual domain associated non empty set individuals appear model structures ag agents ac actions domain set groups agents set non empty subsets ag 
domain quantification defined union sets 
definitions deal technical apparatus quantification essentially logic qal chapter reader familiar treatment safely skip definitions 
bal bijective mapping defined elements const elements domain quantification called interpretation 
interpretations preserve sorts 
inverse written naming function understood abbreviated note constants assumed standard names assigns element domain quantification unique standard name 
mapping elements var domain quantification preserves sorts called variable assignment 
transformation defined formulae definition variable assignment naming function arbitrary formula mean formula obtained replacing variable occurs free 
example formula 
free variable replaced standard name associated object variable denotes 
function defined returns denotation term relative variable assignment interpretation 
const understood abbreviated give semantics ability necessary include model structures function sjs returns set sound joint strategies group 
defined earlier arguments function system available model structure 
function sjs appears model structures assumed relativized system model structure model 
define form model structures qbal 
definition model qbal structure hw ag ac set non empty subsets ag non empty set individuals domain const 
ag ac interprets constants sjs function returns group agents set sound joint strategies group remaining components bal 
hm pi bel ag iff state hdp ag hm pi ag ac iff action trans hdp ag ac hm pi send ag ag iff ag ag sent trans hdp hm pi qg iff js sjs futures js hw ri hdp hm pi hm pi goal qg iff paths hw ri hdp hdp agree hm pi hm pi iff hm pi ag qg iff ag hm pi iff hm fx 
dg pi domain quantification sort semantics qbal semantic rules semantics qbal defined satisfaction relation holds structures form hm pi model qbal variable assignment path formulae qbal 
semantic rules atomic formulae 
remaining rules propositional connectives temporal operators path quantifiers essentially unchanged bal omitted 
operators intended reading bal counterparts 
remainder new 
atomic formula read group bring world true 
note formula qbal 
semantics theory cooperative ability developed earlier 
able achieve implies existence strategy guarantees goal 
atomic formula goal read group goal 
semantics theory cooperative goals outlined 
operator slightly difficult understand expresses property paths 
impartial assessment group agent goals follow particular course action 
says agents acted way goal inevitable 
note goal operator interesting dual 
goal dual called weak goal suggests agent entirely antagonistic goal doesn want possibility goal absolutely excluded want guaranteed 
operator usual order equality 
note arguments sort 
operator allows reasoning members coalition simple way atomic formula read member group 
operator equality possible build useful operators reasoning coalitions 
example occasionally useful reason coalitions contain just single agent 
operator grp defined group argument 
grp 
operator possible define single agent versions goal 
final rule defines semantics universally quantified formulae standard sorted firstorder logics 
usual existential quantifier defined dual universal quantifier 
proof theory qbal contains proof rules axioms sorted order logic largely amounts ensuring substitutions correct sort 
sorted order proof systems standard fare section focus logic new modal operators goal 
looking operator 
ef axiom says holds paths group bring bring axiom called principle possible group agents achieve true just path requires grand coalition agents achieve 
reverse implication says achievable possible 
reverse implication version axiom classical modal logic 
axiom version axiom classical modal logic says group bring state 
axiom called principle added value group agent adds efforts achieve agent achieve 
axiom similar superadditivity principle game theory states utility coalition equal sum utilities member agents working isolation 
logic goal similar 
goal goal goal goal ef goal goal goal goal goal axiom just classical modal logic 
axiom called realism axiom agents goals things possible version axiom version axiom classical modal logic says group don goal goal having goal 
say determined attitudes 
axiom says group inherits goals members 
leaving axioms note theorems 
goal goal words members group inherit abilities goals group 
new inference rules goal 
rules generalization rules say groups vacuously achieve necessary truths vacuously goals necessary truths 
infer infer goal soundness proofs axioms inference rules straightforward omitted 
particular soundness proofs axioms necessitation rule classical modal logic may readily adapted prove soundness 
examples aim section short examples showing qbal express desirable properties cooperative systems 
larger examples principles specification branching time logics essentially linear time logics see chapter 
example shows logic capture idea agent required order achieve goal 
goals achieved help agents 
example suppose agent manages database containing information replicated 
goal involves information require helpful interaction database manager agent 
property agent required achieve goal captured definition 
analogous pick set agents required achieve goal 
coalition forms achieve goal contain required members succeed 
derived operator intended capture idea coalition committing goal 
idea committing goal means restricting actions just goal consequence superficially similar definition commitment term commitment loose sense certainly don intend capture nuances commitment cohen levesque focus 
commit goal examples commit 
suppose specification set formulae ff 
qbal 
formulae assumed common goals system 
agent works achieving goals 
suppose formulae liveness requirements satisfied infinitely 
simplest requirement happen 
note joint satisfaction goals required 
general requirement place system 
says goals achieved 
specific constraints place system behaviour 
possibility specify agent act goal unachievable 
ng formula sense safety property reading says agent bad goal unachievable 
specify agents act positively achieve goals 
possibility specify coalitions form possible order achieve goals 
ng commit specification extended express idea agents commit goals commitment goal unachievable 
ng commit jf ng ef commit summary earlier chapters focussed exclusively linear time temporal logics chapter investigated branching time temporal logics multi agent systems 
idea semantics logic collect runs system computation tree incorporated model logic way run model linear time logic 
branching time logics developed 
bal simpler effectively augmented path quantifiers 
second qbal qal includes operators describing abilities goals structure agents groups agents 
concludes main text thesis 
final chapter presents 
part iv chapter vladimir passed time 
passed case 
samuel beckett waiting chapter concludes main text thesis reviewing carried attempting put context providing pointers possible lines research 
review part thesis contained detailed literature survey 
survey began chapter posing question agent 
shown naive attempts define agent terms action terms high level cognitive function problematic 
discussion led recognition agent intentional system appropriately described terms intentional notions belief desire 
prompted detailed analysis various logic formalisms developed researchers ai computer science philosophy reasoning intentional notions 
dominant approach normal modal logics possible worlds semantics 
objections basic possible worlds model discussed 
number variations possible worlds theme described 
reasons model suitable purposes thesis 
alternative formalism deduction model belief developed konolige model beliefs ai systems 
chapter concluded examination various approaches taken ai community problem building intelligent agents 
chapter examined wider issues social agency 
began looking role communication various ways communication treated dai 
led recognition speech act theories dominant paradigm reasoning communication dai 
detailed review various speech act theories 
chapter concluded review various ways dai addressed issue building intelligent social agents 
main contribution thesis chapters 
chapter formal theory computational multi agent systems 
basic components theory agents modelled having important attributes agents maintain beliefs style deduction model proposed konolige agents internal computational resources may draw performing internal cognitive actions agents affect cognitive state sending messages 
execution models multi agent systems represent models agents system may act interact 
simpler models assumes synchronous action agent assumed act simultaneously 
second realistic model allows interleaved execution agent considered act time 
difficulties interleaved model identified remainder thesis dealt synchronous action 
chapter developed various linear time temporal logics reasoning systems modelled theory developed chapter 
simplest logics called agent logic 
propositional temporal logic containing operators describing beliefs actions messages agents 
properties discussed detail 
version called ial internal developed suited internal language knowledge representation language 
quantified version called qal quantified developed 
chapter detailed case studies showing logics developed chapter reasoning systems 
shown properties systems implemented agent concurrent metatem captured logics 
number specification examples culminating formalization contract net protocol 
chapter developed number branching time temporal logics reason multiagent systems 
simplest called bal branching contains operators expressive branching time logic called ctl shown semantic structures underly branching time logics exploited allow attribution goals ability agents groups agents 
quantified version bal called qbal developed includes operators describing abilities goals 
context easy assess piece academic research stands relation benefit hindsight 
assessments particularly hard author benefit hindsight 
section attempt consider described thesis relates dai related areas 
consider model agents multi agent systems 
little ai dai addressed question developing formal architectural models agents chapters demonstrated agent architectures generally modelling aspects agency example belief desire 
author aware similar modelling explicitly computational multi agent systems 
consider logics developed chapters 
logics take deduction model belief developed konolige 
closing comments konolige observes line research deduction model integration aspects agent cognitive makeup seen extending deduction model way 
extends deduction model temporal dimension 
linguistically logics superficially similar logic developed cohen levesque 
differences 
obvious cohen levesque adopt ungrounded possible worlds semantics beliefs goals pains 
motivation cohen levesque quite different 
concerned developing theories mentalistic aspects human behaviour intention 
concerned humans modelling computational systems 
general technique developing model agents multi agent systems letting run system act model temporal logic adapted tradition mainstream computer science 
approach far author aware novel dai circles appropriate useful 
scope described thesis necessarily broad 
raised number issues wide range areas 
section attempt highlight issues 
theory multi agent systems 
stands theory quite coarse grained senses 
model agents developed chapter coarse grained 
example agents assumed belief revision function properties function hardly examined 
fruitful area developing finer grained formal models real computational agents 
claimed ai unnecessarily formal field surprisingly attempts develop formal models real ai systems second models concurrency employed theory multi agent systems poor 
realistically claim proved property real multi agent system issue concurrency worms called fairness addressed 
moving logics developed thesis number obvious areas 
completeness 
axiom systems various logics family sound shown complete 
important issue addressed logics wider audience related issue automation logics 
course automation classical logics ongoing research area issue ultimately addressed logics put general 
logics knowledge representation formalisms reason suppose automated versions logics reasoning systems designers 
area attempting unify logics developed chapter example models cooperation cooperative problem solving systems developed cohen levesque formalism 
note alternative models agency discussed close chapter come classical ai model agency formal tools required reason 
limit done order temporal logic finitely axiomatizable 
part appendices bibliography appendix notation techniques mathematical parts theory multi agent systems loosely vdm specification language chapters cover necessary material 
familiar basic set notation logic difficulty 
central idea type purposes thesis type thought possible infinite set 
standard types assumed natural numbers natural numbers greater 
integers ftrue falseg truth values real numbers set subsets type powerset powerset type ordered tuples element type second element type th element type may specified ways 
simplest method define cross product component types alternative name elements ht general method large complex types 
restriction type called invariant generally specified order formula type satisfy 
general form invariant type property element type satisfy 
example type natural numbers divisible may specified satisfy invariant mod 
vdm convention type names chosen mnemonic capital letter followed sequence lowercase letters 
functions specified giving signature direct definition 
general form function definitions 

says function takes arguments type domain th domain returns value type range direct definition describes value obtained arguments 
direct definitions boolean functions order formula arguments function satisfy formula result true false 
example definition function takes set natural numbers sole argument returns true element argument false 
powerset ns ns mod symbol read defined 
function names lowercase letter distinguish types may contain underscore character 
map thought partial function extensionally set written fd 

maps specified way functions map arrow gamma 
function arrow 
specifies type maps natural number set integers 
gamma 
powerset bijective map 
bijective maps specified bijective map arrow 
useful operator map overwrite 
best illustrated example 
suppose maps 




map application denoted way function application previous example 
standard functions assumed dom takes map function returns set elements domain defined rng takes map function returns set elements range corresponding elements domain defined 
example domm domm map names follow convention function names 
sequence thought simply list objects type 
type sequences type specified sequence may listed square brackets 
th element sequence picked indexing 
sequence th element 
sequences may infinite length vdm sequences generally finite case length infinite ordinal 
length sequence len example sequence hd len thesis deals languages symbols meta variables ranging formulae languages 
symbols meta variables ranging sets formulae languages 
form denotes set formulae language order language sentence assumed closed formula free variables free usual meaning 
language formula set formulae form form powerset form 
formal logic proofs usual way abbreviation pl denote simple tedious steps propositional reasoning pred indicate predicate logic reasoning tl indicate temporal logic reasoning tax denote temporal axiom 
formal proofs closed symbol 
appendix technical reviews appendix presents detailed technical reviews various formalisms held main text thesis due complexity 
formalisms described situated automata paradigm cohen levesque logic werner formalism 
situated automata pointed chapter people regard ontological status possible worlds epistemic alternatives problematic 
worlds exist 

researchers ai take extreme realist view possible worlds exist worlds moderate realist view worlds don exist useful abstraction theorizing contentious 
solution provide method grounding epistemic alternatives giving precise meaning real world terms 
method doing distributed systems discussed chapter node said know true indistinguishable runs system 
alternative essentially equivalent grounding described rosenschein situated automata paradigm 
basically analysis information implicit state automaton 
situated automata paradigm object study section 
definition automaton automaton machine structure hs set states set stimuli inputs set output actions state function output function initial state 
automaton interact environment sending outputs intuitively change state environment environment providing stimulus taken machine internal state causes state transition defining output 
set world conditions things true world 
world state state machine statei pair 
world state denote fact condition holds assume distinguished world condition corresponds strongest condition world satisfy machine initial state idea property guaranteed hold start run 
note distinction world environment state machine state pair fact holds world state machine 
distinct notions 
function defined state maps function called strongest post condition function 
idea specific world condition guaranteed hold time holds stimulus sensed time interval 
operator extended sequences stimuli 
usual set finite sequences elements set strings alphabet 
null sequence element concatenation operator 
extend function follows automaton necessarily able distinguish world conditions 
sense define automaton 
things sequence inputs automaton able distinguish things impact state automaton 
ff important point states automaton divide set equivalence classes 
general automata coarse equivalence classes able distinguish world fine equivalence classes 
state automaton set input sequences language element guaranteed leave automaton state started state defined parts extended sequences 
defined follows 
fs sg condition language strongest condition guaranteed hold input sequence contained language automaton starts initial state 
condition language denoted 
sequence language fed automaton condition guaranteed hold guaranteed 
condition language defined follows 
sl definition possible characterize information content state things guaranteed hold world automaton state 
info possible define epistemic accessibility relation worlds 
state denote state automaton world relation defined follows iff state state note equivalence relation 
write follows info state 
semantics knowledge operator follows kf iff note equivalence relation logic see 
concludes review situated automata 
cohen levesque formalism chapter cohen levesque formalism reasoning rational agents briefly described 
syntax semantics formalism unfortunately complex reason held appendix 
sections define syntax semantics logic properties 
material section adapted summarized 
originally intended review review omitted due space restrictions 
vari vari vari vari vari vari 
happens expi done expi agt vari vari bel vari goal vari vari vari expi vari expi expi expi expi 
expi syntax cohen levesque formalism syntax logic rational agency sorted order multi modal logic key modalities bel belief goal goals happens happens done just happened 
logic allows direct time including times terms language usual relative time normal temporal modal logics 
syntax logic defined bnf form 
time assumed numerals cohen levesque allow times pm rd july time obvious interpretation 
ordering relation actions 
action constructors defined final production meaning followed non deterministically 
test action iterative action pseudo dynamic logic constructs provide effective method talking action sequences 
semantics basic semantic components language worlds sequences events stretching infinitely past 
time discrete sequences indexed integers belief goal accessibility relations defined indexed agent set worlds 
assume set primitive event types 
type worlds follows world model logic structure hq agt fi hm ni 
iff hv 
hm ni iff hm ni hm ni iff hm ni hm ni hm ni iff hm fx 
dg ni hm ni iff hm ni iff hm ni iff initial sub sequence hm ni agt iff agt fv hm ni happens iff hm mi hm ni done iff hm ni hm ni bel iff world hs hm ni hm ni goal iff world hs hm ni semantics cohen levesque formalism part set things universe discourse set people agents set primitive event action types agt gives agent event world set worlds belief accessibility relation assumed euclidean transitive serial goal accessibility relation assumed serial interprets predicates 
domain quantification defined possible quantify people things sequences primitive event types 
function agt assumed give agents sequence events function derived agt 
semantics language defined satisfaction relation usual 
relation holds structures form hm ni model sequence events world variable assignment temporal index formulae language 
semantics parts 
rules part define semantics modal operators rules part somewhat unusual define semantics action constructors 
note construct means occurs time points construct defined terms satisfaction 
hm mi iff 
hm mi iff hm mi hm mi hm mi iff hm ki hm mi hm ni iff hm ni hm mi iff 
hm semantics cohen levesque formalism part 
happens 
done done agt happens happens agt happens happens 
derived operators cohen levesque formalism derived operators properties logic number derived constructs possible logic example empty action nil empty sequence nil empty event sequence subsequence sequence 
derived constructs defined 
derived operators fairly obvious interpretations derived versions done happens simply associate action agent 
strict operator 
allows temporal order events described 
cohen levesque define axiom system normal way study validities logic 
validities obvious example axioms belief axiom goals 
necessitation works beliefs goals 
important property bel goal unusual looking axiom consequence agent goal accessibility relation subset belief accessibility relation 
concludes review cohen levesque formalism 
werner formalism extensive sequence papers published eric werner described formalism reasoning multi agent systems draws mathematical logic game theory linguistics 
section describe basic components formalism including model social groups social structure language lt renamed 
material described mainly taken 
properties ary relations 
set individuals 
set time instants ordered relation denoted tp set time periods 
elements tp denoted situation set objects properties stand various relations 
example 
qa 
situation property holds property said properties related relationship sits set possible situations 
state complete situation properties relations specified 
set states 
histories worlds series states 
formally history function times set states value function set possible histories worlds partial history including time hist set possible partial histories times partial histories partial functions state partial history time events situations time period events functions times situations sits 
actions events agents function agent 
event realized contained domain time period 
information state set partial histories possible available information 
information set associated set alternatives choices alt 
alternative set possible histories leaving possible information states agent environment form information partition strategy plan function information states alternatives potential strategy set possible histories consistent strategy 
cognitive representational state agent described components hi vi 
information state agent 
intentional state agent 
set possible strategies guide actions agent 
evaluative state agent 
represents agent evaluation focus situations 
representational state may include agent representation representation 
pp moving social groups social structures comments formalism far 
information states epistemic alternatives standard sense 
situations unusual comments 
werner definition social groups social structures 
role defined agent defined particular representational structure 
defines state information permissions responsibilities values agent role 
agent assumes role rol role constraining representational state rol positively expressed agent assumes role rol changes representational state rol part 
social structure st set roles 
rol social group social structure particular setting 
social group sg structure hl st roles wi language group agents st social structure roles gamma 
st maps member group role set possible histories environment 
example social group werner formalization contract net pp described chapter contrasted formalization contract net developed 
step develop language describing reasoning systems described model multi agent systems 
werner defines language called lt plan called 
treatment adapted source 
pf past strict ff strict necessary agent agent plans group plans agent bring agent coordinate achieve group cooperatively achieve table operators werner language syntax propositional multi modal logic containing basic modalities see table 
formulae built obvious way set primitive propositions prop 
semantics semantics require preliminary definitions 
suppose strategy potential strategy set histories compatible strategy 
information state potential set histories compatible state 
define follows set worlds allowed strategy information 
necessary introduce idea information ensemble 
set histories system information ensemble set information sets conditions hold 
partial history hist information set 
clearly partial history hist member just information set call information set 
follow information sets information ensemble singletons partial histories duplicated different information sets ensemble 
partial history denote information set member relative information ensemble 
agent associated ensemble implicitly defines information conditions agent times possible define information ensemble time dependent epistemic accessibility relation give semantics informational necessity 
iff strat function agent returning set strategies agent 
intentional state potential state information see pp 
models structures form hs ag fi set states set time instants ordering set histories system ag 
ng set agents 
information plan ensembles agents ag hm prop iff hm ti prop iff hm hm ti pf iff hm ti hm ti ff iff hm ti hm ti iff hm ti hm ti iff hm ti hm ti iff sg hm ti hm ti iff strat hm ti hm ti iff strat ag ag hm ti hm ti iff strat ig ig hm ti semantics werner language powerset prop interprets propositions states 
semantic rules language 
semantics defined usual satisfaction relation holds structures form hm hm ti model formulae 
rule defines satisfaction propositions respect model state 
second defines satisfaction propositions respect model time history 
second rule defined terms recall history time returns state time semantic rules propositional connectives omitted 
examine semantics 
rules propositions propositional connectives temporal operators clear caveat 
werner uses notion situation extensively semantic structures defines ordinary propositional valuation states words states act possible worlds standard modal logic sense 
situations turn redundant language way 
informational necessity operator standard modal epistemic knowledge operator 
plan operators straightforward single agent plan operator captures idea agent intentional state forcing goal true 
group plan operator simply generalizes definition multi agent case 
final operators complex 
says strategy history consistent strategy coincides representation agent intentional states histories coincide achieved 
says group cooperate achieve semantically true group nonconflicting strategies ensure outcome concludes review werner formalism 
appendix temporal logic reactive systems amir pnueli published landmark temporal logic reasoning programs enormous amount literature produced subject thesis justice extraordinary wealth material 
case relevant thesis 
aim appendix detailed review area outline programs modelled framework point major developments area 
material appendix adapted chapter 
reader assumed familiar elements modal logic see 
plethora temporal logics different temporal logics people temporal logics reason programs 
section briefly describe important developments temporal logics 
earliest temporal logic studied detail modal logic corresponding modal system basic modal operators written heretofore past henceforth 
semantics operators ordering relations set worlds relations inverse 
usual operators written hpi hfi defined duals operators 
logic discussed length chapter 
system crudely reason programs describe fine structure state sequences generated executing programs see 
reason time operator pnueli original proposal 
standard heretofore combination operators discovered inadequate expressing properties basic temporal logic augmented operators written 
doctoral thesis kamp demonstrated logic operators expressively complete continuous linear orders standard linear discrete temporal logic employed part thesis 
propositional case logic decidable problem pspace complete see discussions complexity logics generally regarded expressive capture interesting properties reactive systems 
gough developed decision procedures logic fisher developed resolution methods 
order case temporal logics containing operators decidable come surprise 
worrying order temporal logic finitely axiomatizable 
temporal logic solely operators limitations 
sistla showed describe unbounded fifo buffer 
disadvantage express fact proposition true moment 
variations basic temporal logic theme exist 
example fixpoint operators discussed 
barringer describe logic keeps operator basic defines fixpoint operators standard operators linear discrete temporal logic derived 
wolper described logic etl extends standard temporal logic set grammar operators 
variation add chop operator composes finite sequences 
operators assumed strict operator refers strictly past operator refers strictly 
logics mentioned assumed model time discrete time point exists time time point occurs linear point time successor 
assumptions essential temporal logic reals worlds isomorphic real numbers developed logics complex uncommon 
common branching time logics 
briefly branching time structure time point may number successor times intuitively corresponding way things turn 
repertoire operators linear temporal logic sufficient express properties structures despite lamport claims famous 
earliest branching time logic studied length ub unified system branching time 
logic extended linear time temporal logic addition operators paths path called path quantifiers prefixed formula containing occurrence usual linear time temporal operators 
introduces obvious restriction expressibility ub 
ub contain operator omission rectified logic ctl computation tree logic 
ctl expressive capture interesting properties branching time structures 
expressive branching time logic far studied detail called ctl 
logic allows path quantifiers prefixed arbitrary formulae language path quantifiers standard temporal logic operators freely allowed resulting highly expressive logic 
propositional case branching time logics known decidable complete axiomatization ctl 
general review branching time logics provided 
concludes overview temporal logics 
program modelling show temporal logic reason program define simple model parallel programs model analogous model multi agent systems developed chapter 
show firstorder linear discrete temporal logic reason program 
consider parallel program consisting finite fixed non zero number concurrently executing processes fp 
processes assumed share variables process may communicate changing value variable 
memory state program may defined tuple variable values hx 
variables called program variables distinguish logical variables 
mst set possible memory states 
internals mst depend values variables may take considered 
program variables assumed initial value set start computation 
process represented finite connected directed graph 
node graph associated label 
arc graph process associated instruction may executed process process selected execution current state process 
loc function takes process returns set locations process 
process distinguished initial node starts execution 
instruction defined ordered pair hc ai condition assignment operation form hx 

expressions 
execution instruction implicitly defines change state program variables process moving label 
purpose condition guard define instruction executed 
instruction satisfied condition said enabled 
state program defined follows 
state loc loc mst consider execution program possibly infinite sequence states 
process initial state variables initial values exists represents state resulting execution processes enabled instruction state 
note mean change state program variables dictated assignment operation change state processes label 
note execution program instructions interleaved process changes state program time 
widely accepted set executions program represent possible ways execution corresponding real program evolve shown occur execution program reasonably said proved occur real program 
similarly true executions program true runs corresponding real program 
simple model programs capture interesting aspects imperative programs 
difficult derive similar models systems example message passing 
note problems trying represent properties sophisticated high level programming languages frameworks 
temporal logic reason program 
run program sequence discrete states possible incorporate run model structure order temporal logic write formulae logic express properties run 
way logic reason properties program 
go details order temporal logics see cited 
simply give indication properties described reasoned 
worth pointing set computations program collected branching structure called computation tree branching time logic express properties structure program 
suppose want linear temporal logic reason program 
predicate generally represent fact execution process reached label value variables described standard order equality 
suppose desired specify execution process proceed label 
done formula 
similarly suppose processes critical regions ci cj respectively 
mutual exclusion specified ci cj 
properties program specified similar way 
suppose specification spec developed program prog developed 
possible verify prog show satisfies specification 
idea develop temporal theory prog prog show prog spec temporal theory program usually derived text program transformation process 
example arc transition processes graph axiom temporal theory describing effect transition 
effect change state variables change state program time instant executed process new label 
addition program specific axioms temporal theory axioms capturing general properties acceptable execution sequences 
example typically axiom form ng states process label 
axioms specify transition occurs guard condition held 
concludes review program modelling 
specification temporal logic section reviews properties reactive system may specified temporal logic 
generally accepted properties fall categories called safety properties liveness properties informally safety property interpreted saying bad won happen 
formally safety property states finite prefix run satisfies requirement 
obvious reasons safety properties called invariance properties 
simplest kind safety property global invariance expressed formula form local invariance stating holds hold formula 
system terminates partial correctness may specified terms precondition hold initially postcondition hold termination condition indicates termination reached 
init mutual exclusion property global invariance form gamma delta formula states properties ff hold time 
notation arises imagines truth valued falsity formula read ff 
true 
formula written form finite expanded ordinary formula required notation may regarded abbreviation 
liveness property states eventually happen 
simplest liveness properties form termination example liveness 
basic termination property init states run initially satisfied property eventually satisfied property property holds run terminated 
useful liveness property temporal implication states followed 
responsiveness classic example temporal implication suppose represents request response 
temporal implication state request followed response 
example temporal implication total correctness states system initially satisfying property eventually terminate termination satisfy property 
init class properties deal temporal ordering events system 
simplest example property absence unsolicited response 
request response property 
crude way specifying requests basis 
concludes review properties may specified temporal logic 
material section adapted 
appendix axioms chapter axioms listed logics qal developed chapter 
axioms section set list adapted extended pp pp 
rules axiomatize interaction temporal operators 
ccdeef useful forward implications dealing time operators axioms fairly obvious past time mirrors precise correspondence time bounded past past time operators strict time operators 
ccdeef axioms show iterating difference axioms capture interaction operators operators past time equivalents 
distributivity properties operators captured axioms 

similar implications hold reverse direction 

axioms show temporal operators monotonic argument 
ccdeef ccdeef fixpoint characteristics temporal operators axioms 
induction axiom 
axioms section list includes barcan formulae temporal operators 
ccdeef ccdeef ccdeef ccdeef bibliography abadi 
temporal logic theorem proving 
phd thesis computer science department stanford university stanford ca 
agha 
actors model concurrent computation distributed systems 
mit press cambridge ma 
agre chapman 
pengi implementation theory activity 
proceedings sixth national conference artificial intelligence aaai pages seattle wa 
allen 
general theory action time 
artificial intelligence 
steel 
integrating planning execution monitoring 
proceedings seventh national conference artificial intelligence aaai pages st paul mn 
appelt 
planning natural language utterances 
proceedings second national conference artificial intelligence aaai pages pittsburgh pa 
appelt 
planning english sentences 
cambridge university press cambridge england 
appelt konolige 
nonmonotonic logic reasoning speech acts belief revision 
de kleer ginsberg sandewall editors non monotonic reasoning proceedings second international workshop lnai volume pages 
springer verlag heidelberg germany 
austin 
things words 
oxford university press oxford england 
barringer 
study extended temporal language temporal fixed point calculus 
technical report umcs department computer science manchester university oxford rd manchester pl uk 
barringer 
temporal way 
technical report umcs department computer science manchester university oxford rd manchester pl uk 
barringer fisher gabbay gough owens 
metatem framework programming temporal logic 
rex workshop stepwise refinement distributed systems models formalisms correctness lncs volume pages 
springer verlag heidelberg germany june 
barringer kuiper pnueli 
may compose temporal logic specifications 
proceedings sixteenth acm symposium theory computing pages 
barwise perry 
situations attitudes 
mit press cambridge ma 
ben ari manna pnueli 
temporal logic branching time 
proceedings eighth acm symposium principles programming languages popl 
bond gasser editors 
readings distributed artificial intelligence 
morgan kaufmann publishers san mateo ca 
bratman 
intentions plans practical reason 
harvard university press cambridge ma 
bratman 
intention 
cohen morgan pollack editors intentions communication pages 
mit press cambridge ma 
brooks 
robust layered control system mobile robot 
ieee journal robotics automation 
brooks 
intelligence reason 
proceedings twelfth international joint conference artificial intelligence ijcai pages sydney australia 
brooks :10.1.1.12.1680
intelligence representation 
artificial intelligence 
muller 
rational agents testbed multi agent networks 
demazeau 
muller editors decentralized ai proceedings second european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
burmeister 
cooperative problem solving guided intentions perception 
werner demazeau editors decentralized ai proceedings third european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
cammarata mcarthur 
strategies cooperation distributed problem solving 
proceedings eighth international joint conference artificial intelligence ijcai karlsruhe federal republic germany 
cawsey galliers sparck jones 
automating librarian belief revision base system action communication user 
computer journal june 
chapman 
planning conjunctive goals 
artificial intelligence 
chapman agre 
reasoning emergent concrete activity 
georgeff lansky editors reasoning actions plans proceedings workshop pages 
morgan kaufmann publishers san mateo ca 
chellas 
modal logic 
cambridge university press cambridge england 
cohen levesque 
intention choice commitment 
artificial intelligence 
cohen levesque 
rational interaction basis communication 
cohen morgan pollack editors intentions communication pages 
mit press cambridge ma 
cohen perrault 
elements plan theory speech acts 
cognitive science 
wavish 
experiment cooperation 
demazeau 
muller editors decentralized ai proceedings european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
craig 
formal specification advanced ai architectures 
ellis horwood chichester england 
davies 
order theory reasoning agents 
technical report csm department computer science university essex colchester uk 
davies 
order theory truth knowledge belief 
logics ai proceedings european workshop jelia lnai volume pages 
springer verlag heidelberg germany 
demazeau 
muller editors 
decentralized ai proceedings european workshop modelling autonomous agents multi agent worlds maamaw 
elsevier science publishers amsterdam netherlands 
demazeau 
muller editors 
decentralized ai proceedings second european workshop modelling autonomous agents multi agent worlds maamaw 
elsevier science publishers amsterdam netherlands 
dennett 

mit press cambridge ma 
dennett 
intentional stance 
mit press cambridge ma 
des rivieres levesque 
consistency syntactical treatments knowledge 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
devlin 
logic information 
cambridge university press cambridge england 
doran choo li 
mcs multi agent testbed developments experiments 
editor proceedings international working conference cooperating knowledge systems pages 
springer verlag heidelberg germany 
durfee 
coordination distributed problem solvers 
kluwer academic publishers boston ma 
durfee lesser 
negotiating task decomposition allocation partial global planning 
gasser huhns editors distributed artificial intelligence volume ii pages 
pitman publishing london morgan kaufmann san mateo ca 
durfee lesser 
partial global plans coordinate distributed problem solvers 
proceedings tenth international joint conference artificial intelligence ijcai milan italy 
dwork moses 
knowledge common knowledge byzantine environment crash failures extended 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
emerson 
temporal modal logic 
van leeuwen editor handbook theoretical computer science pages 
elsevier science publishers amsterdam netherlands 
emerson halpern 
revisited branching time versus linear time temporal logic 
journal acm 
emerson srinivasan 
branching time logic 
de bakker 
de roever rozenberg editors rex school workshop linear time branching time order logics models concurrency lncs volume pages 
springer verlag heidelberg germany 
enderton 
mathematical logic 
academic press 
engelmore morgan editors 
blackboard systems 
addison wesley reading ma 
fagin halpern 
belief awareness limited reasoning 
proceedings ninth international joint conference artificial intelligence ijcai pages los angeles ca 
fagin halpern vardi 
machines know 
properties knowledge distributed systems 
journal acm 
fagin vardi 
knowledge implicit knowledge distributed environment preliminary report 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
lesser 
parallelism artificial intelligence problem solving case study hearsay ii 
ieee transactions computers 
ferguson 
architecture adaptive rational mobile agents 
werner demazeau editors decentralized ai proceedings third european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
fischer immerman 
foundations knowledge distributed systems 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
fisher 
resolution method temporal logic 
proceedings twelfth international joint conference artificial intelligence ijcai sydney australia august 
fisher 
concurrent metatem processes language implementation 
preparation 
fisher 
normal form order temporal formulae 
proceedings eleventh international conference automated deduction cade 
springer verlag heidelberg germany june 
fisher barringer 
concurrent metatem processes language distributed ai 
european simulation multiconference copenhagen denmark june 
francez 
fairness 
springer verlag heidelberg germany 
gabbay 
declarative past imperative 
barringer pnueli editors proceedings colloquium temporal logic specification lncs volume pages 
springer verlag heidelberg germany 
galliers 
strategic framework multi agent cooperative dialogue 
proceedings eighth european conference artificial intelligence ecai pages munich federal republic germany 
galliers 
theoretical framework computer models cooperative dialogue acknowledging multi agent conflict 
phd thesis open university uk 
galliers 
cooperative interaction strategic belief revision 
editor proceedings international working conference cooperating knowledge systems pages 
springer verlag heidelberg germany 
galton 
temporal logic computer science overview 
galton editor temporal logics applications pages 
academic press 
gardenfors 
knowledge flux 
mit press cambridge ma 
gasser hermann 
mace flexible testbed distributed ai research 
huhns editor distributed artificial intelligence pages 
pitman publishing london morgan kaufmann san mateo ca 
gasser huhns editors 
distributed artificial intelligence volume ii 
pitman morgan kaufman 
gasser hill lieb 
representing organizational knowledge dai systems 
gasser huhns editors distributed artificial intelligence volume ii pages 
pitman publishing london morgan kaufmann san mateo ca 
genesereth nilsson 
logical foundations artificial intelligence 
morgan kaufmann publishers san mateo ca 
georgeff 
communication interaction multi agent planning 
proceedings third national conference artificial intelligence aaai washington 
georgeff 
planning 
annual review computer science 
georgeff lansky 
reactive reasoning planning 
proceedings sixth national conference artificial intelligence aaai pages seattle wa 
ginsberg 
decision procedures 
huhns editor distributed artificial intelligence pages 
pitman publishing london morgan kaufmann san mateo ca 
goldblatt 
logics time computation 
centre study language information lecture notes series 
distributed chicago university press 
gough 
decision procedures temporal logic 
master thesis department computer science manchester university oxford rd manchester pl uk october 
halpern 
reasoning knowledge overview 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
halpern 
reasoning knowledge analyze distributed systems 
annual review computer science 
halpern 
knowledge common knowledge distributed environment 
journal acm 
halpern moses 
guide completeness complexity modal logics knowledge belief 
artificial intelligence 
harel 
order dynamic logic lncs volume 
springer verlag heidelberg germany 
hewitt 
universal modular actor formalism ai 
proceedings third international joint conference artificial intelligence ijcai pages 
hewitt 
viewing control structures patterns passing messages 
artificial intelligence 
hintikka 
knowledge belief 
cornell university press ithaca ny 
hughes cresswell 
modal logic 
methuen 
hughes cresswell 
companion modal logic 
methuen 
huhns editor 
distributed artificial intelligence 
pitman publishing london morgan kaufmann san mateo ca 
jennings 
responsible 
werner demazeau editors decentralized ai proceedings third european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
jennings 
cooperation knowledge level collaborative problem solving 
proceedings tenth european conference artificial intelligence ecai pages vienna austria 
jones 
systematic software development vdm second edition 
prentice hall 
kaelbling 
architecture intelligent reactive systems 
georgeff lansky editors reasoning actions plans proceedings workshop pages 
morgan kaufmann publishers san mateo ca 
kamp 
tense logic theory linear order 
phd thesis university california 
kiss 
variable coupling agents environment combining situated symbolic automata 
werner demazeau editors decentralized ai proceedings third european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
kiss reichgelt 
semantics desires 
werner demazeau editors decentralized ai proceedings third european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
konolige 
order formalization knowledge action multi agent planning system 
hayes michie pao editors machine intelligence pages 
ellis horwood chichester england 
konolige 
deduction model belief logics 
phd thesis computer science department stanford university stanford ca 
konolige 
deduction model belief 
pitman publishing london morgan kaufmann san mateo ca 
konolige 
awareness isn sentential view implicit explicit belief position 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
konolige 
hierarchic autoepistemic theories nonmonotonic reasoning preliminary report 
de kleer ginsberg sandewall editors nonmonotonic reasoning proceedings second international workshop lnai volume pages 
springer verlag heidelberg germany 
kripke 
semantical analysis modal logic 
zeitschrift fur mathematische logik und grundlagen der mathematik 

temporal logic programs eatcs monographs theoretical computer science vol 
springer verlag heidelberg germany 
ladner reif 
logic distributed protocols preliminary report 
proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
lakemeyer 
steps order theory explicit implicit belief 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
lakemeyer 
computationally attractive order logic belief 
jelia proceedings european workshop logics ai lnai volume pages 
springer verlag heidelberg germany 
lamport 

proceedings seventh acm symposium principles programming languages popl 
lansky 
representation parallel activity events structure causality 
georgeff lansky editors reasoning actions plans proceedings workshop pages 
morgan kaufmann publishers san mateo ca 
lenat 
beings knowledge interacting experts 
proceedings fourth international joint conference artificial intelligence ijcai stanford ca 
lesperance 
formal account self knowledge action 
proceedings eleventh international joint conference artificial intelligence ijcai pages detroit mi 
levesque 
logic implicit explicit belief 
proceedings fourth national conference artificial intelligence aaai pages austin tx 
levesque cohen nunes 
acting 
proceedings eighth national conference artificial intelligence aaai pages boston ma 
levinson 
pragmatics 
cambridge university press cambridge england 
lifschitz 
semantics strips 
georgeff lansky editors reasoning actions plans proceedings workshop pages 
morgan kaufmann publishers san mateo ca 
manna pnueli 
verification concurrent programs temporal framework 
boyer moore editors correctness problem computer science 
academic press 
mccarthy 
ascribing mental qualities machines 
technical report stanford university ai lab stanford ca 
mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence 
edinburgh university press 
mcclelland rumelhart 
parallel distributed processing 
mit press cambridge ma 
milner 
communication concurrency 
prentice hall 
montague 
syntactical treatments modality corollaries reflexion principles finite axiomatizations 
acta philosophica 
moore 
reasoning knowledge action 
proceedings fifth international joint conference artificial intelligence ijcai cambridge ma 
moore 
semantical considerations non monotonic reasoning 
artificial intelligence 
moore 
formal theory knowledge action 
allen hendler tate editors readings planning pages 
morgan kaufmann publishers san mateo ca 
morgenstern 
order theory planning knowledge action 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
morgenstern 
knowledge preconditions actions plans 
proceedings tenth international joint conference artificial intelligence ijcai pages milan italy 
moses tennenholtz 
formal aspects artificial social systems 
technical report cs weizmann institute science rehovot israel 
penczek 
branching time partial order temporal logic 
technical report umcs department computer science manchester university oxford rd manchester pl uk 
perlis 
languages self foundations 
artificial intelligence 
perlis 
languages self ii knowledge belief modality 
artificial intelligence 
perlis 
meta logic 
maes nardi editors meta level architectures reflection pages 
elsevier science publishers amsterdam netherlands 
perrault 
application default logic speech acts theory 
cohen morgan pollack editors intentions communication pages 
mit press cambridge ma 
pnueli 
temporal logic programs 
proceedings eighteenth foundations computer science 
pnueli 
specification development reactive systems 
information processing 
elsevier science publishers amsterdam netherlands 
pnueli 
applications temporal logic specification verification reactive systems 
rex school workshop linear time branching time partial order logics models concurrency noordwijkerhout netherlands 
prior 
past 
oxford university press oxford england 
reichgelt 
comparison order modal logics time 
jackson reichgelt van harmelen editors logic knowledge representation pages 
mit press cambridge ma 
reichgelt 
logics reasoning knowledge belief 
knowledge engineering review 
reiter 
logic default reasoning 
artificial intelligence 
rosenschein 
synchronisation multi agent plans 
proceedings second national conference artificial intelligence aaai pittsburgh pa 
rosenschein 
rational interaction cooperation intelligent agents 
phd thesis computer science department stanford university stanford ca 
rosenschein 
formal theories knowledge ai robotics 
new generation computing pages 
rosenschein kaelbling 
synthesis digital machines provable epistemic properties 
halpern editor proceedings conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
sacerdoti 
planning hierarchy abstraction spaces 
artificial intelligence 
searle 
speech acts essay philosophy language 
cambridge university press cambridge england 
searle 
expression meaning 
cambridge university press cambridge england 

agent theories architectures 
phd thesis surrey university guildford uk 

intentional descriptions reactive systems 
demazeau 
muller editors decentralized ai proceedings second european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 

action agency cognitive science 
master thesis department university manchester oxford rd manchester pl uk 
shoham 
time action relation time knowledge action 
proceedings eleventh international joint conference artificial intelligence ijcai pages detroit mi 
shoham 
agent oriented programming 
technical report stan cs computer science department stanford university stanford ca 
singh 
theory situated know 
proceedings ninth european conference artificial intelligence ecai pages stockholm sweden 
singh 
group ability structure 
demazeau 
muller editors decentralized ai proceedings second european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
singh 
formal theory communication multi agent systems 
proceedings twelfth international joint conference artificial intelligence ijcai pages sydney australia 
singh 
critical examination cohen levesque theory intention 
proceedings tenth european conference artificial intelligence ecai pages vienna austria 
singh asher 
formal theory intentions 
logics ai proceedings european workshop jelia lnai volume pages 
springer verlag heidelberg germany 
sistla 
theoretical issues design verification distributed systems 
technical report school computer science carnegie mellon university pittsburgh pa 
sistla clarke francez meyer 
message buffers axiomatized temporal logic 
information control 
smith 
contract net formalism control distributed problem solving 
proceedings fifth international joint conference artificial intelligence ijcai cambridge ma 
smith 
contract net protocol 
ieee transactions computers 
smith 
framework distributed problem solving 
research press 
smith davis 
frameworks cooperation distributed problem solving 
ieee transactions systems man cybernetics 

order logic 
springer verlag heidelberg germany 
van 
environment experimentation interactive cooperating knowledge systems 
shadbolt editor research development expert systems vi 
cambridge university press cambridge england 
steels 
cooperation distributed agents self organization 
demazeau 
muller editors decentralized ai proceedings european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
stirling 
completeness results full branching time logic 
rex school workshop linear time branching time partial order logics models concurrency noordwijkerhout netherlands 
tate 
generating project networks 
proceedings fifth international joint conference artificial intelligence ijcai cambridge ma 
editor 
modal logic deductive databases 
john wiley sons chichester england 
thomason 
note syntactical treatments modality 
synthese 
tidhar rosenschein 
contract net consultants 
proceedings tenth european conference artificial intelligence ecai pages vienna austria 
torrance viola 
agent manual 
technical report program symbolic systems stanford university ca 
turner 
truth modality knowledge representation 
pitman publishing london 
van dyke parunak 
manufacturing experience contract net 
huhns editor distributed artificial intelligence pages 
pitman publishing london morgan kaufmann san mateo ca 
van dyke parunak 
distributed ai manufacturing control issues insights 
demazeau 
muller editors decentralized ai proceedings european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
wavish 
exploiting emergent behaviour multi agent systems 
werner demazeau editors decentralized ai proceedings third european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
werner 
formal computational semantics pragmatics speech acts 
proceedings coling pages 
werner 
social intentions 
proceedings eighth european conference artificial intelligence ecai pages munich federal republic germany 
werner 
theory communication cooperation multiagent planning 
vardi editor proceedings second conference theoretical aspects reasoning knowledge pages 
morgan kaufmann publishers san mateo ca 
werner 
cooperating agents unified theory communication social structure 
gasser huhns editors distributed artificial intelligence volume ii pages 
pitman publishing london morgan kaufmann san mateo ca 
werner 
distributed cooperation algorithms 
demazeau 
muller editors decentralized ai proceedings european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
werner 
agents semantics operative ability 
proceedings ninth european conference artificial intelligence ecai pages stockholm sweden 
werner 
planning uncertainty 
proceedings tenth workshop planning special interest group cambridge uk 
werner 
unified view information intention ability 
demazeau 
muller editors decentralized ai proceedings second european workshop modelling autonomous agents multi agent worlds maamaw pages 
elsevier science publishers amsterdam netherlands 
wilkins 
practical planning extending classical ai planning paradigm 
morgan kaufmann publishers san mateo ca 
wittig 
archon cooperation heterogeneous line systems 
systeme proceedings third international congress 
springer verlag heidelberg germany 
wolper 
temporal logic expressive 
information control 
wooldridge 
approach reasoning multi agent systems 
proceedings third uk workshop belief representation agent architecture university durham uk june 
wooldridge fisher 
order branching time logic multi agent systems 
proceedings tenth european conference artificial intelligence ecai pages vienna austria 
wooldridge hare 
feline case study design implementation operating expert system 
proceedings eleventh european conference expert systems applications avignon france may 
zlotkin rosenschein 
negotiation task sharing autonomous agents cooperative domains 
proceedings eleventh international joint conference artificial intelligence ijcai pages detroit mi 

