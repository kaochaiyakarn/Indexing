glass box approach adaptive hypermedia kristina hook jussi karlgren annika wrn nils carl jansson klas karlgren october utilising adaptive interface techniques design systems introduces certain risks 
adaptive interface static actively adapt perceived needs user 
carefully designed changes may lead unpredictable obscure uncontrollable interface 
design adaptive interfaces ensure users inspect adaptivity mechanisms control results 
way rely user understanding application domain relate adaptivity mechanisms domainspecific concepts 
example adaptive hypertext help system pop built principles discuss design considerations empirical findings lead design 
keywords adaptive hypermedia plan inference multimodality user modelling utilising adaptive interface techniques interactive systems introduces certain risks 
adaptive interface static actively adapt perceived needs user 
carefully designed adaptation changes occasions may lead unpredictable obscure uncontrollable interface 
frequently pointed important users feel control systems 
increasingly important systems act autonomously read sort mail choose news items read book meetings 
systems act independently knowledge systems swedish institute computer science 
authors reached electronic mail push sics se 
www sics se linkoping university stockholm university university grenoble systems adaptive interfaces acceptable users berry broadbent meyer vassileva 
reason complex problem solving implemented system task approached joint task system user solved interaction pollack 
giving users sense control achieved systems internal workings transparent users systems actions predictable users 
adaptive interfaces bold assumptions user characteristics adapt accordingly 
expected adaptation correct 
believe virtually adaptive interfaces times mistakes resulting erroneous adaptations see kay 
strong argument ensuring adaptive interface provides mechanisms control appropriate level abstraction order confuse user technical details adaptivity mechanism 
transparency gives user view internal workings system 
ideally users see system glass box lower level components act black boxes du boulay karlgren 
view maes represents internal state personal meeting booking agent facial expression form visualisation level abstraction chosen carefully order lead users expectations astray 
predictability difficult achieve adaptive interface 
meyer describes requirement requirement stable relation stimuli response input context user perceives input context give output 
inherent contradiction requirement general idea adaptive interfaces changing presentations perceived needs user 
design adaptive interfaces aim achieving predictability alternative way strict adherence stable stimuli response requirement 
solution split interface stable component carefully designed predictable change interface agent 
example information seeking application developed user adaptive hypertext solution 
solution rely agent metaphor achieve transparency predictability control adaptive interface focuses finding domain specific design interaction 
generic adaptive visible users means language inherent particular domain information 
example application adaptive information seeking assistant enhances interaction control multimodal interaction including unconstrained text input utilises task adaptation information selections 
task adaptation controllable explicit task selection user verified plan recognition 
briefly describe mechanisms describe designed deal transparency predictability control 
general domain dependent solutions allow users communicate sys tem domain language 
approaches transparent controllable user modelling generic 
example adaptive prompts 

design allows user program analyst tailor mechanisms adaptivity order user learn new complex vocabulary distinguishes sets terms goal action interaction 
furthermore users able predict effects tailoring different parameters interact complex way achieve adaptiveness 
architecture solution aims separate domain specific information general inference mechanisms interface design 
possible transfer solution information seeking applications little effort 
describe studies underlie design followed description non adaptive hypertext system 
describe multimodal interface chosen mechanisms 
project background plan user sensitive help push project aims developing testing intelligent help solutions information seeking tasks 
domain method development large telecommunications software systems sdp ta 
method documented huge information space documents consisting pages sdp ta structured objects processes 
objects denote results produced applying method code documentation similar 
performed project sdp ta organised processes defining requirements system performing design processes related objects related objects produced refined certain processes 
design solution discussed currently implemented prototype named pop push operational prototype runs sun workstations 
pop implemented object oriented extension sicstus prolog sicstus objects sicstus user manual 
studies underlie design adaptivity hypermedia proposed means meet users different needs background knowledge interaction style cognitive characteristics kobsa 
order ways knowing targeted group users needs related domain information system developing 
acquiring knowledge users order build intelligent help system similar distinct problem gathering knowledge knowledge systems developing knowledge systems focus domain expert problem extract expert knowledge case hand design adaptive information system focus users needs 
area knowledge systems fair amount research done system development methods methodology domain analysis adaptive system perspective remains largely field infancy 
claims user needs little real users particular domain 
instance common claim explanations avoid concepts unfamiliar particular user reading text provided details kobsa 
may true cases general case instance user attempting learn particular issue contrary just true hook 
challenging goal push project find adaptive techniques fact improve interaction side constraint knowledge representation reasoning strategies scalable easy update accommodate new releases changes large target system 
knowledge acquisition methods utilised push push project fortunate sdp ta documented large line manual project access large number users documentation sdp ta crucial issue daily situation 
enabled set series studies find users needs support currently supports need added users turn manual followed principles cognitive task analysis roth woods 
tried understand problem area focusing types tasks users typically involved addressing manual information 
done avoid solution solve example scenario scale problem area 
initial problems solved help system process 
main reason user specific problems arise current project task difficulties understanding development method 
essentially tasks different projects sdp ta unique 
problems sdp ta addressed help system 
problems originated sdp ta process mismatch process organisation applied 
surprising frequent result development help systems wanting changes environment applied breuker 
findings proved useful subsequent development sdp ta lie outside scope help system help system supposed give help method compensate 
reason studies concentrated extracting users information seeking needs primary reason addressing help system opposed project tasks 
initial interviews interviewed persons point number problems directly connected method documentation 
seeking information sdp information searching solving project task information searching learning sdp information searching concepts mapping known concepts sdp learning structure details structure structure process object planning project object relations object aspect working creating global project tasks activity performing product producing sdp known activity mapping mapping known sdp products process object details details information type details objects processes project evaluating parts domain dependant task hierarchy information seeking needs sdp ta users 
help users felt problem information overload difficulties finding information information problems interpreting making text graphs 
user suffered classical bind little information 
mcdermid 
went focused study users information seeking needs daily 
study interactions users daily quite long period time 
purpose collect corpus questions users test answers satisfying look surface level extract information seeking tasks depicted hook 
task hierarchy may observe learning sdp constitutes quite large part tasks 
caused study novices experts conceptual understanding ideas sdp ta novices experts study 
purpose see apply theories learning influence design help system get general grip difficult grasp domain users 
theory learning applied chi chi turned quite hard apply 
hypothesis theory works learning natural concepts concepts sdp ta easy classify theory 
find quite confusion fundamental concepts sdp ta novices 
primary explanation lot concepts fuzzy users expected get intuition concept object oriented thinking able find precise formal definitions concepts 
cater concept communication pop system 
set evaluative studies design choices 
particular produced set explanations differ meet perceived needs users tasks engage tested explanations users hook described 
persons participated controlled evaluative studies 
shown prototypes real users 
basic system knowledge acquisition phase design development prototype help assistant pop system 
order understand multimodal interface designed need describe basic hypertext system developed 
describe example scenario adaptivity basic interaction principles pop 
describe underlying knowledge representation information entities 
example scenario pop prototype software developer assigned task producing specification subsystem software project developing 
software developer quite extensive knowledge application domain fairly unfamiliar sdp ta method 
project manager informed project members briefly method start working name part method process enters line help system pop entering netscape world wide web www viewer ref enters unspecific question process describe process 
system provides information process see shall name answer page 
answer page consists graphics text different headings 
shown graphs process part general process process activities set input objects set output objects 
information helps software developer see method structured focus process user click symbols causing graphic displays change putting object clicked centre 
may example click input objects 
object displayed centre object graphics window objects related shown window 
page textual information 
fairly basic information process provided underlying purpose process shown 
headers associated texts 
indicate information available 
user decides click header titled purpose 
description underlying purpose process inserted page header clicked 
sdp ta method proprietary 
minimal information method 
super process window object window describe interface current version pop 
reading text terms quite unfamiliar software developer gets confused perform document object oriented analysis 
text displayed bold style indicating possible ask follow questions concepts information inserted page see 
follow questions currently available trough opening bold word clicking query symbol kobsa set alternative follow questions available marked links 
www allows aim turn pop 
user feels satisfied information process turn processes sdp ta gain information objects sdp ta 
new object process dynamically generated answer page www 
summary observe ffl user may enter questions follow questions move processes objects 
ffl user may choose navigate graphs 
ffl information provided text graphics modes simultaneously information shown mode 
ffl user manipulate answer opening closing subsections manipulating graphics asking follow questions placed context 
summary basic interaction mechanism pop combines navigation search hypertext space 
hypertext information entities discuss information organised underlying knowledge representation 
see example processes objects relationships sdp ta convey information 
addition structure lot mainly textual information available 
information may concern certain object produced process carried hints produce quality output entry exit criteria similar issues 
information tightly related single object comparisons similar process steps slightly different purposes explanations commonly terms object oriented analysis example 
pop prototype divide available information processes objects typed information entities 
information entity piece hypertext possibly including static picture turn contain semantic links related information 
links formulated follow questions text 
example super process window object window describe interface opening purpose description posing follow query object oriented analysis 
push process activity object contains answer generation methods contains object specific methods information object may contain comparisons subprocess knowledge representation explanation operators pop 
short description process step may contain link comparison process step 
object relationships represented information entities type denotes type relationship example information entity input objects list names input objects associated set possible queries object 
sdp ta structured object oriented fashion natural choice structure database hierarchy software objects information entities constitute attributes software objects see 
hierarchy associate information entities comparisons generic classes inherited objects sharing information 
explanation operators inherited methods software object 
software object therefor knowledge knows explain inherited explanation method 
question posed objects knowledge base object know information entities return answer know provide necessary information constructing graphs interface graphs predefined pictures generated spot 
fact answer page generated dynamically response question 
multimodal interaction adaptivity hypertext system carefully designed enhance understanding domain structure 
empirical investigations point difficulties addressed solution 
users immediately get lost know search ask users need specific explanation style understand information users general suffer getting asked 
order support users vague understanding content organisation information system provide possibility pose vague questions text input 
users specific information needs helped free text input possibilities 
solution described 
order deal need different types explanations different situations careful analysis information entities exist database 
example introduced different ways describe activities process just listed name briefly describe declarative factual style provide quite long procedural description full hints think hook 
description style represented hypertext information entity 
describe area 
order deal answers tailored knowledge user current task 
information entity associated list tasks provides fulfilling 
system choose information entities best fitted know task user performing 
know users task provide kind adaptivity described 
solutions important allow user inspect control functionality 
sections shall describe detail achieved pop 
program netscape viewer prolog process free form queries knowledge database user model inferred task stereotypical task rules plan inference hypertext graphics predefined query hypertext graphics predefined query free form query architecture pop system 
see picture basic architecture pop 
knowledge database consists objects domain information entities 
methods explanations inherited domain object 
free form queries transformed set standard queries system able understand 
require dialogue 
answer turn altered inferred task user 
process affect explanation certain information entities hidden opened task inference adaptation explanation described 
result query sent program turns extended html format information hidden page follow display requested proper www page shown user netscape 
issues multimodal interaction interface multimodal meaning produces graphics text accepts text menu choice pointing selection input 
text graphics combination direct access representations complement sense tasks different types require different modalities cohen users varying preferences modalities differing capacity 
text language interface taken opposition direct manipulation paradigm 
main points noted direct manipulation interfaces shneiderman continuous representation object interest physical actions labelled button presses complex syntax rapid incremental reversible operations impact object interest immediately visible 
points pictures graphs show strongest side pictures graphics achieve persistence sought 
time points way contradict possibility text language input interface language point click follow principles 
natural language case text mechanisms interaction relaxing constraints posed shneiderman second point continuing observe points 
multimodal systems strong cross modal interactivity text input component interface behaves shneiderman principles show encouraging results biermann bos crawford 
find sdp ta structures graph form little effort relations objects processes type clear picture hh files cc files belong ii ou respectively 
pop interprets query compare ii ou 
describe hh 
describe cc 
query generalised extensive inferencing 
pop simply catches referents proposes queries describes 
case multiple queries result user chance choose ones process 
need textual explication users 
relation semantically complex need elucidation difficult achieve graph form 
addition user studies indicated users want rely pointing clicking thread way hypertext space way manual organised want direct goal oriented mechanisms especially exploring information looking concrete 
users study expressed frustration finding correct answer clicks away hypertext raises expectations users point information seek immediately available 
point click allow user abstractions possible natural language partly overcome drawbacks 
reason include free form text input standard queries designed answer specific set foreseen questions users help system definition odds information structure target system user really novel subject knows little domain able predefined queries user specific information need simply anticipated set queries 
affording text input provides users way enter queries needs unexpected 
system designed accept queries map set internal query templates 
exact match general query consistent query representation chosen entities identified reasonable assumed topic query general query includes identified constructed 
displayed user see assumptions system capable making answer 
example shown 
means users answers answers may inconsistent gist queries give user idea pop handles better error messages 
known problem natural language interfaces resolution cohen 
system allows user refer previously mentioned entities pronouns definite compare 
done keeping track focus stack referents stored score indicating salient subsequent mention 
salience score composed weighted sum scores actions linguistic non linguistic 
system certainly inappropriate weightings times bos 
users accept occasional error error understandable 
top elements focus stack displayed user focusing explicit karlgren adds permanence referents displays results focus calculation 
dialogue history gives users transparency system view discourse situation addressing cohen point 
adaptation user information seeking task main problem faced push vast amount information available 
information connected single domain object may exceed pages 
initial studies users read page information relevant purposes hook 
necessary find rich mechanisms information extraction individual user initially information deemed relevant 
line kaplan kaplan identify possible parameters relevant determining certain piece information relevant particular user 
object oriented structure domain parameter user reading specific object may interested information objects related 
knowledge base structured domain objects information entities belonging objects semantic links information entities 
potential usage knowledge structure construct queries specific represented navigational interface small fraction information relevant answer query 
amount information large solution run risk users losing track structure domain search right information users may get lost hyperspace 
furthermore solution provide users sense information available 
answers precise queries specific object include information object information directly relevant query hidden user immediate view example hidden parts ones headings opened follow questions associated 
way users know decide open hidden information page accessed information related object 
furthermore allow users ask open questions compare object object 
answers imprecise queries large users read entire answer certain having exhausted information certain subject represented query 
important concern define textual information entities domain object 
important plan information entities cover available information current system additional needs users knowledge acquisition 
concern domain experts eventually write texts able understand purpose information entity write text answers needs user addressing entity 
words different writers keep user models heads writing text 
initially started small set identified information entities small set stereotypical user models intended capture variation user backgrounds user roles 
idea information entity written versions user stereotype 
approach unfeasible practice grows intractable large domain 
furthermore proved hard grasp stereotype really meant affect formulations certain information entity 
stereotypes modelled aspects user background turned affect discourse 
critique put forward john self self area student modelling tutoring systems 
self expresses don diagnose treat 
paraphrase area user modelling don model user characteristics affect interaction case meant try write different information entities fact turn sufficiently different 
chosen refine division information information entities describe aspect object concept description geared specific purpose 
turns classification task subsumes level expertise role example person trying learn structure novice area sdp ta working person planning project nominally project leader 
structure proven useful 
information entity large self contained internally consistent possible combine answer 
coherence enhanced selecting texts presentation written closely related tasks mind 
structure provides flexibility design maintenance help assistant novel information need detected handled defining novel combination information entities relevant need adding entirely new information entities geared specifically novel need 
different typical task descriptions specific situation determine choice information entities display 
instance explanation process user engaged follow activity task display text procedural description replete practical tips explanation user engaged product planning include activities text declarative description process similar difference proposed paris 
mapping tasks queries information entities rule see 
learning structure producing product reverse engineering fundamental purpose activities input objects output objects information model relations processes simple example project planning activities information model simple example general release input objects output objects entry exit information model advanced example frequently asked questions information model activities release rules query describe process describing information entities displayed user pursuing certain task 
information users affected ways selection task ffl information entities deemed relevant current task opened time answer generated 
ffl follow questions organised level menus level contains questions relevant current task second level contains follow questions 
solution inspired adaptive prompts 
similar approach dynamic menus described mittal moore 
ffl acronyms sdp ta expanded full terms tasks example sdp ta spelled system development process telecommunications applications 
accordance fundamental glass box approach system display task knowledge users order allow inspect control adaptation 
pop prototype decided investigate parallel approaches plan recognition explicit task selection 
interface design allows mechanisms combination separately 
motivations detailed form approaches described 
transparent task stereotypes approach making task knowledge pop transparent users simply allow users choose task think performing 
indicated dynamic adaptation drawbacks 
particular user modelling guess attempts model user knowledge kay 
hypertext application input user may quite limited know texts user chooses see links followed texts 
provide little information user 
discussed requirements transparency control predictability desirable keep separate generic user model users great difficulties inspecting controlling model 
users allowed alter user model difficult foresee effects modification 
furthermore domain applications users spend little time modifying adaptive components immediately provide mileage main task 
leads behaviour users forced unnatural lengthy sequences interactions geared circumventing adaptivity goes wrong woods 
solution users allowed choose task think performing avoid problems inherent user modelling introduce new ones 
firstly tasks choose form difficult user predict alternation task result 
second small set tasks users willing restate tasks performing goals needs change session system 
users start trying reverse engineering task discover need learn aspect move learning details task 
shown oppermann best solution inbetween system controlled user controlled adaptation think allowing user choose small set predefined stereotypical tasks combined plan inference approach described 
users required state small set tasks think adhering 
currently experimenting tasks learning structure sdp ta project planning reverse engineering activity 
task stereotypes selected allow users predict explanation satisfy need particular situation empirically established task hierarchy 
tasks expressed domain concepts understood users sdp ta 
know meaning reverse engineering know working way 
said forcing user learn understand language words goal action express needs adaptation domain language 
order establish users able choose tasks able predict understand choice result performed small study asked subjects varying familiarity couple tasks explanations provide motivations choices 
subjects correct coupling partially correct coupling 
important comments explanations improve mapping rules task explanation 
add example information entity specifically geared needs project planners explaining purpose certain step sdp ta process 
new information entity needed order help planners determine sdp ta projects absolutely skip certain circumstances 
similar alternations 
critique user controlled task adaptation explanations provide static approximation kind explanations users need 
allow users change explanation opening closing parts clicking receiving explanations concepts unfamiliar fact introduced moore swartout raised requirement explanations explanation interactive process requiring dialogue advice giver advice seeker 
current expert systems participate dialogue users 
particular systems clarify misunderstood explanations elaborate previous explanations respond follow questions context going dialogue 
drawing moore swartout explanation systems engage user text dialogue direct manipulation multimodal hypertext solution problem 
see advantages approach require text dialogue builds direct manipulation techniques simple queries multimodal setting 
appearance system familiar direct manipulation interface free form queries cause users false expectations conversational competence 
way direct manipulation follow queries provide user ways alter explanations task stereotypes provide 
user verified task recognition proposed solution static task stereotypes runs problems may addressed dynamic adaptation user task 
said problem set task stereotypes small order user select learn understand effects explanations 
seen complete set empirically identified tasks large analysis exhaustive 
second problem users move tasks 
typically user may start system order get help develop particular object 
reading detailed description object comes term understood starts looking information explaining term 
represents shift task task learning concept 
users go effort mark new tasks explicitly especially users actively reflect focus shift 
open new information entities pose new queries cover needs 
course perfectly possible means user go extra effort searching right information entities posing new questions moving information domain 
discussed earlier dynamic interface may require unnecessary circumvent erroneous adaptations 
opposite situation users may perform unnecessary circumvent unnecessarily static nature interface 
deal problems decided utilise plan recognition techniques allow system actively adapt users tasks 
plan recognition mechanism intelligent technique included actively adapts presentation 
order keep interface transparent controllable selected plan recognition affect answers queries free format input navigation information structure done direct manipulation 
answer user question affected additional way plan recognition 
explicit task selection information entities deemed relevant current task opened time answer generated menus follow questions organised show queries relevant current task 
addition plan recognition method generates textual phrase answer reads answer assuming current information seeking task 
mouse sensitive associated menu containing list alternative tasks 
statement menu alternatives generated dynamically 
menu tailored include tasks alter information 
plan recognition characteristics push domain plan recognition interpreted task recognising guessing agent intention underlying actions utterances 
reason usually called plan recognition widespread approaches problem try follow agent actions utterances match procedural description plan corresponding particular intention kass finin kautz 
plan recognition problem appears different forms plan recognition actor aware actively operating recognition example choosing actions task easier intended plan recognition plan recognition actor unaware indifferent plan recognition process keyhole plan recognition plan recognition actor aware actively keyhole plan recognition got name analogy looking keyhole system plan recognition process obstructed plan recognition 
applications plan recognition human machine interfaces extent keyhole 
reasons firstly users provided means communicate intentions find reason communicate intentions foremost aware plan recognition abilities system aid plan recognition process 
highly desirable plan recognition utilised interface users provided means inspect understand control plan recognition process achieve situation users intend system perform plan recognition 
pure keyhole plan recognition direct manipulation interfaces extremely difficult user goal usually high level compared individual interactions system users may frequently change task adopt novel strategy task way signalling system 
way better odds intended plan recognition provide user operative task enrichment wrn 
interface provides operative task enrichment ffl adapts responses individual user interactions user task plan recognition integral part dialogue ffl communicates assumptions user ffl allows user explicitly interact plan recognition mechanism 
pop interface characteristic example point click interface combines features intended plan recognition providing operative task enrichment 
keys available inferring user task moves different information pages way selecting page navigation direct query opening closing information entities page explicit selections tasks 
plan inference integral part dialogue selects information hide time new page generated 
system shares lot properties direct manipulation applications plan recognition low level compared user task users may frequently move different strategies task tasks 
example draw definite user task way selecting page information users navigate sought information prefer search commands 
existing information system domain users started particular task frequently move tasks 
interesting aspect application plan recognition integral part human system interaction determine plan patterns users exhibit prior implementation plan recognition observing user actions user aware happening indifferent 
component 
clearly kind bootstrapping procedure needed machine learning techniques gradually build system plan knowledge 
second version pop currently development utilise extremely simplistic plan recognition algorithm called intention guessing described probabilistic plan parsing approach limited attention span wrn 
algorithm useful domain requires little declarative knowledge user plans trained examples 
inherently forgetful making suited deal users changing intentions 
advanced approaches plan recognition plan parsing approach kautz problems recognising users move tasks 
furthermore intention guessing algorithm keeps track tasks performed time observation really needed produce answers specific query 
example extended adaptivity turning back example introduced ways adaptivity changed interaction user 
assuming combine tasks plan inference mechanism scenario possible ffl user entered system encouraged choose set stereotypical tasks 
ffl choice task affects answer page making certain informations entities open closed affecting follow questions available 
ffl user starts manipulating answer page asking follow questions plan inference component decide alter assumed task turn affects answer page 
ffl user may point disagree system inferred decide change task back task 
done clicking answer page displays task system inferred user trying complete 
alternative tasks alter presentation shown user 
ffl addition free form questions allow user search specific information pose vague question 
words adaptivity try answer page short possible demands inherit information seeking task furthermore affect navigation answer page pages affecting follow queries available page 
free form questions affect navigation search aspects system allowing experienced users express questions 
focus discuss user adaptive techniques integrated direct manipulation interface design achieve inspectable controllable predictable interface 
particular pointed need integrated modes interaction need means inspection control adaptive functionalities 
order means understandable users advocate domain specific terms terms may difficult user understand predict effects alterations 
consideration affected particular design linguistic interaction system means inspection control adaptivity 
linguistic interaction may lead obscure results users remedy giving users query paraphrases visible dialogue history add transparency interface behaviour 
inspect control task adaptation users provided task stereotypes actively selected user verifiable task presumptions menu candidate tasks user choose 
deliberately introduced means users control system adaptation user task task stereotypes user verified plan recognition 
voiced arguments approaches plan perform comparative study techniques aiming determine provides best user performance acceptance 
note perfectly feasible include interface user chose level self adaptiveness system 
prototype system users provided separate window dealing task information select small set task stereotypes 
selected generated answers tailored task 
selected plan recognition determine user task 
provides user high level domain specific control adaptivity system accordance general glass box approach adaptiveness 
hypertext solution selected pop help system example balance finding intelligent flexible techniques aiding users requirements maintainability tractability large real world domain sdp ta 
singular hypertext items written users seeking information specific purposes 
item self contained coherent piece text combined texts provide answers general queries 
gives modular extendible solution understandable text writer write update hypertext 
interface design pop entirely relies domain specific terms obvious question arises extent solution carries domains 
particular realisation domain specific fundamental concepts generic 
particular concerns object oriented structure domain information definition task hierarchy 
generality mirrored clear division generic domain specific information implementation pop 
current belief pop system currently development fairly easy transfer information seeking applications aim attempt close 
authors wish anonymous subjects took part studies 
push funded jointly ab sics 
sics stockholm university linkoping university participate project 
van beek cohen 

resolving plan ambiguity cooperative response generation proc 
ijcai sydney australia morgan kaufmann 
berry broadbent 

expert systems man machine interface part user interface expert systems international journal 
biermann alan bruce ballard anne 

experimental study natural language programming international journal man machine studies pages 
malin kristina hook 

satisfying user needs combination interface design techniques proceedings interact norway 
bos edwin carla wim 

edward full integration action multimodal user interface international journal human computer studies pages 
du boulay ben tim shea monk 

black box inside glass box presenting computing concepts novices international journal man machine studies 
ivan 

natural language model world interfaces 
licentiate thesis department computer systems sciences 
stockholm royal institute technology stockholm university 
ivan niklas frost jussi karlgren 

surface syntax interactive interfaces th nordic computational linguistics 
helsinki university helsinki 
breuker joost 

developing intelligent help systems lawrence erlbaum associates publishers ec report esprit project 
ruth robert crawford 

natural language interface casual users 
international journal man machine studies pages 
chi james de leeuw nicholas 

things processes theory conceptual change learning science concepts 
learning instruction journal european association research learning instruction pages 
cohen 
role natural language multimodal interface proceedings acm symposium user interface software technology uist monterey pages 
hook kristina 

providing explanations fitted user task available sics 
kaplan craig justine james chen 

adaptive hypertext navigation user goals context user modeling user adapted interaction pages 
karlgren jussi ivan niklas frost lars jonsson 

interaction models interactivity speech interfaces virtual environments proceedings second eurographics workshop virtual environments realism real time monte carlo 
darmstadt fraunhofer igd 
karlgren jussi kristina hook ann jacob daniel 

glass box user model filtering th international conference user modeling acm 
kass robert tim finin 

modeling user natural language systems computational linguistics special issue user modeling ed 
kobsa wahlster 
kautz henry 
circumscriptive theory plan recognition ed 
cohen morgan pollack intentions communication mit press cambridge mass pages 
kay judy 

lies lies stereotypes th international conference user modeling acm 
kobsa muller nill 

kn ahs adaptive hypertext client user modeling system bgp ms fourth international conference um ma acm 
foley 

adaptive prompting technical report git gvu georgia institute technology 
benoit 
february 
object oriented explanation planning principles natural language generation papers dagstuhl seminar horacek eds report si university duisburg germany 
benoit mcdermid annika wrn 

adaptive help navigation explanation 
sics technical report 
maes pattie 

agents reduce information overload 
communications acm 
mcdermid anna lena 

initial application evaluation help requirements sdp 
push working wp 
meyer 
adaptive performance support user acceptance self adapting system th international conference user modeling acm 
mittal moore 

dynamic generation follow question menus facilitating natural language dialogues sigchi denver colorado may computing system proceedings 
newyork acm sigchi pp 
moore swartout 

reactive approach explanation th int 
conf 
ai pages 
oppermann reinhard 
adaptively supported adaptability int 
human computer studies 
paris 

tailoring object descriptions user level expertise computational linguistics 
pollack hirschberg webber 

user participation reasoning processes expert systems proceedings second national conference artificial intelligence pittsburgh penn 
raskutti zukerman 

query response generation interactions th international conference user modeling acm 
roth woods 
cognitive task analysis approach knowledge acquisition intelligent system design 
tasso eds 
topics expert system design elsevier science publ 

north holland 
self 
bypassing intractable problem student modelling proc 
conference intelligent tutoring systems pages 
shneiderman ben 

direct manipulation step programming languages 
ieee computer pages 
sicstus prolog user manual release 
swedish institute computer science box kista sweden 
isbn 
vassileva 
practical architecture user modeling hypermedia information system 
fourth international conference um ma acm 
wrn annika 

cooperative enrichment reactive plan inference applying plan inference outside natural language dialogue 
um workshop applied planning plan recognition available sics 
wrn annika ola 

recognizing plan replanning user 
ijcai workshop plan recognition montreal canada 
woods david 
price flexibility ed 
gray murray proc 
workshop intelligent user interfaces acm press pages 

