measuring effects data corruption information retrieval elke mittendorf peter schauble swiss federal institute technology eth ch zurich switzerland probability model introduced helps describing effects data corruption information retrieval 
leads definition measure analyses effects data corruption retrieval ranking 
behaviour measure analysed theoretically 
give explanation results empirically 
main results explain retrieval ranking affected length documents characteristics query features 
longer documents ranking corrupted 
documents long large variation recognition characteristics query features heavy influence ranking corruption 
show data corruption simulations questionable value measuring effects information retrieval 
years growing interest information retrieval objects text documents images audio recordings 
objects converted automatically text ocr speech recognition techniques 
text produced recognition process correspond exactly speech printed text data corrupted recognition process 
research groups addressed question basic retrieval methods corrupted data 
series studies simulated data corruption information retrieval 
standard text collection queries set relevant documents known corrupted artificially algorithm 
retrieval performance measured comparing runs set queries original text collection corrupted version 
experiments retrieval performance tested corrupted data manually corrected data 
attempts find retrieval functions corrupted data collections 
difficult interpret results experiments retrieval effectiveness affected factors detection rates indexing features systematic errors scanners ocr devices speech recognisers 
affected characteristics simulation process behaviour special retrieval function weighting schemes normalisation scheme affected collection characteristics length documents length queries 
comparing average precision understand impact different factors 
people started compare measures recall precision 
analysed difference rank documents determined noisy perfect data collections :10.1.1.66.1098
opinion important measure effects ranking effects retrieval performance order understand influence different factors 
aiming providing sound basis measurement effects data corruption information retrieval theoretical analysis effects 
extents preliminary analysis done 
data corruption viewed random process 
section explain probability space describes random process derive random variables usually interest noisy feature frequencies noisy retrieval status values noisy average precision 
fact computing average precision corrupted data viewed sample random variable noisy average precision 
section introduce new measure rc ranking corruption probabilities 
viewed generalisation ranking corruption measures applied 
section give estimate ranking corruption probabilities 
certain extent analyse ranking corruption probabilities behaviour rc theoretically 
order understand ranking corruption analyse section corruption feature frequencies weighting functions feature frequencies 
results section section noisy retrieval status values set different weighting retrieval functions analysed 
estimates section ranking corruption probabilities applied results lead interesting results longer documents ranking corrupted section 
documents long large variation recognition characteristics query features heavy influence ranking corruption section 
show data corruption simulations questionable value measuring effects information retrieval 
retrieval model corruption model section describe retrieval model notation describe data corruption modelled 
widely retrieval functions compute retrieval status value rsv query document sum feature weights indexing features common query document rsv ij weight ij indexing feature weight usually expressed functions values 
feature frequency ff ff denotes number occurrences feature document query 
document frequency df number documents feature occurs 
normalisation factor number tokens document maximal feature frequency known cosine normalisation see 
data corruption introduced recognition process described random experiment generates collection perfect documents dn gamma collection noisy documents dn gamma ocr ed versions documents 
document probability space consists sets possible corrupted documents produced recognition process 
characteristic values recognition process detection probabilities characters features confusion matrices get hints probability distribution space 
important random variables probability space noisy weights weights assigned features corrupted documents 
usually noisy feature frequency nff ff noisy document frequency ff gj number noisy documents feature occurs 
derive noisy frequencies random variable noisy retrieval status value nrsv rsv usually interested retrieval performance corrupted data interested random variables noisy average precision nap average measuring effects data corruption information retrieval precision computed collections noisy documents 
computing average precision noisy document collections viewed random sample variable nap 
find relations perfect values corresponding noisy values feature frequency ff definitions retrieval status values rsv depend linearly ff document frequency df analysed lot harder describe noisy document frequency find effects noisy document frequency noisy retrieval status values 
theoretical analysis noisy average precision nap desirable depends lot parameters described mathematically sufficient way 
measure ranking corruption introduce measure degree ranking corrupted 
measure probability documents appear different order ranking determined noisy data compared ranking determined perfect data 
give estimate probability 
reasons introducing measure 
gives tool understanding influence different factors retrieval performance secondly analyse theoretically 
measures average precision 
data corruption measured comparing retrieval effectiveness measures average precision ranking perfect collection ranking noisy collection 
comparisons great interest 
hard interpret effects caused different factors 
interested probability ranked ranked retrieval status values noisy data nrsv nrsv rsv rsv 
measure degree ranking corruption suggest expected number rc rsv rsv nrsv nrsv ranking corruption estimated empirically applying data corruption process times data collection estimating ranking corruption probabilities relative frequencies 
example corrupted versions data collection jk denotes number versions ranked rc rsv rsv jk corrupted version data collection estimate rc similar measures rank differences applied 
focus empirical results 
theoretically investigate behaviour measure rc certain circumstances explain variety effects 
note rc measure rank measures take account corruption applies mainly top ranked list parts ranked list big difference degradation effectiveness 
ranking corruption probabilities describe relation retrieval status values corresponding random variable investigate systematic effects ranking expectation value nrsv variation var nrsv 
expectation described follows nrsv rsv 
note description exists rsv zero trivially elke mittendorf peter schauble nrsv rsv 
yields description noisy retrieval status value nrsv rsv describes variation var var nrsv data corrupted badly recognition process expect ranked leads definition 
definition pair rsv rsv nrsv nrsv holds say quality condition met nrsv nrsv say quality condition violated 
denote differences retrieval status values ffi jk rsv gamma rsv difference expected noisy retrieval status values denoted delta jk nrsv gamma nrsv quality condition met iff ffi jk holds delta jk gamma rsv ffi jk illustrates effects expectation variation 
black circles ffl represent expectation values ellipses represent variation 
pairs quality condition met pair quality condition violated 
notion quality condition important 
pair satisfies quality condition violates essential contribution ranking corruption probabilities 
get idea condition met remarks 
rsv nrsv illustrates effects expectation variation ranking corruption 
ffl document high nrsv compared documents quality condition met pairs ffi jk positive small ranked far ffl ffi jk large large difference perfect rsv usually quality condition met 
ffl documents consistent corruption nrsv quality condition met pairs 
note positive 
proposition gives estimates ranking corruption probability 
proposition assume nrsv nrsv stochastically independent 
quality condition met nrsv nrsv var nrsv var nrsv delta jk quality condition violated nrsv nrsv gamma var nrsv var nrsv delta jk measuring effects data corruption information retrieval proof shown appendix draw proposition 
ffl generally speaking smaller variance noisy retrieval status values higher probability ranking documents expected noisy retrieval status values 
ffl quality condition met ranking corruption probability smaller difference ffi jk retrieval status values gets larger 
equation shows delta jk depends ffi jk intuitively obvious result conclude proposition ranking corruption probability decreases quadratically terms distance ffi jk 
ffl fixed ranking corruption probability shrinks growing gamma 
means better ranked favoured addition noisy retrieval status values low probability overtake 
lead small corruption rc ranked top negative effects 
ffl inequalities suppose sufficiently small variation pairs violate quality condition higher ranking corruption rc 
corruption feature frequencies retrieval functions rely weighting scheme feature frequency 
analyse relation noisy feature frequency feature frequency detail 
results section 
introduce model helps find formula expectation nff variance 
number tokens occurrences features document shall denoted call length document assume length obviously true general model supposed reasonable assumption 
speak slots th slot contains exactly occurrence feature mapped recognition process feature th slot document 
notation suggests assumed recognition process depend slot feature occurs document feature 
fixed slot feature interested feature occurs slot 
distinguish conditional probability distributions set possible features slots perfect document contain feature second slots perfect document contain slot feature define random variables slot contains ae slot contains arbitrary ae detection probability feature probability recognised formally features destroy feature frequencies falsely recognised features called false alarms disturbing 
assume independence specific feature assume independence slot particular perfect document define noisy feature frequency expressed sum bernoulli variables nff slots containing slots containing leads formula expectation noisy feature frequency nff elke mittendorf peter schauble slots containing slots containing ff gamma ff gamma ff simple description variance nff model assume pairwise stochastic independence var nff slots containing var slots containing var ff gamma gamma ff gamma gamma gammap gamma ff interpret formulas ffl closer detection probability gets closer false alarm probability gets zero closer expect nff ff 
ffl false alarm probability nff expected proportional ff 
ffl closer detection probability gets closer false alarm probability gets zero smaller variance 
ffl length document linear influence degree variation 
ffl variance grows linearly terms ff influence document length ranking corruption section analyse specific retrieval function 
retrieval function chosen simplicity proofs formula main results generalisable certain extent give clue influence data corruption retrieval 
main results section ffl quality condition holds pairs ranking affected data corruption documents longer 
accordance results experiments cited 
ffl documents collection sufficiently long measure rc approximates number document pairs quality condition violated 
cosine normalisation bad choice normalisation want retrieve corrupted data terms document normalisation garbage features introduced recognition process high inverse document frequencies destroy similarity perfect normalisation factor noisy normalisation factor 
see experiments explanation 
fortunately effective weighting formulas rely number tokens document byte size document behave stable manner noise document 
avoid complicated investigations cosine normalisation 
subsequent rsv function take document frequency account difficult investigate theoretically noisy document frequency influence ranking corruption probabilities 
need research point 
emphasise drawn analysis hold weighting schemes depending linearly ff inverse document frequency weighting document frequencies determined non corrupted training collection measuring effects data corruption information retrieval normalisation schemes depending ff ff 
rsv function rsv inq ff ff corresponding random variable nrsv inq ff nff assuming independence nff get var nrsv inq ff var nff proposition definition rsv function identity get proposition quality condition holds nrsv nrsv delta jk inq ff var nff var nff quality condition violated nrsv nrsv gamma delta jk inq ff var nff var nff quality condition violated 
leads proposition assume infinite sequence pairs satisfy requirements 

corresponding lengths unbounded lim lim 
pairs quality condition met violated exists positive bound delta delta jk nrsv gamma nrsv delta jk delta conclude nrsv nrsv quality condition met nrsv nrsv quality condition violated 
proof shown appendix 
proposition states longer documents smaller ranking corruption probability case quality condition met proofs opposite behaviour quality condition violated 
conditions specify certain kind growing length 
consider examples 
documents longer paragraph new topic added encyclopedia 
called scope hypothesis varying document length 
retrieval status values expected retrieval status values tend zero sequences condition met 
author writes topic title full text feature frequencies query features documents grow proportionally document length rsv nrsv remain approximately constant condition fulfilled 
contrast scope hypothesis growth document length explained verbosity hypothesis 
proposition derive corollary lengths documents growing sense conditions rc 
jf violate quality condition gj elke mittendorf peter schauble documents long documents ranked expectation nrsv variation affects ranking way 
influence different query features ranking corruption example rsv function section explain ranking corruption rc depends difference detection probabilities query features 
explain high variation ranking corruption 
introduce notation min min inq fp gamma pmax max inq fp gamma definition equation find nrsv inq ff nff inq ff gamma ff inq inq bounds expected retrieval status values 
min rsv nrsv pmax rsv bounds equation min pmax 
bounds inclusive document contain query features gammap equal min equal pmax general say closer pmin pmax ranking corrupted 
examples clarify fact 
consider different queries ffl example assume holds 
nrsv rsv quality condition met 
rsv nrsv yield ranking 
corollary know rc close zero documents long 
ffl example contrarily assume query consists features different detection false alarm probabilities gamma gamma document containing nrsv rsv similarly document containing nrsv rsv 
case easily happen quality condition violated rsv rsv nrsv nrsv 
contributes higher rc 
important note effect amplified feature frequencies different features weighted differently document independent weights 
illustrate examples 
black circles represent documents containing black squares represent documents containing gamma gamma 
gamma gamma 
examples show different query features treated recognition process higher corruption ranking rc 
imposes constraints experiments data corruption simulated algorithm retrieval performance measured 
meaningless different weighting schemes tested set systematically corrupted data systematically corrupted data favour specific weighting schemes 
hand post process recognition output recognition probabilities query features greatly improved lexicon proper names counterproductive effects 
measuring effects data corruption information retrieval rsv nrsv query features recognition characteristics example 
outlook introduced measure ranking corruption succeeded analysing influences ranking corruption theoretically 
explains effects noise feature frequency weighting schemes shows simulations data corruption questionable including described 
suggests lot 
results design better data corruption simulations 
analyse retrieval weighting functions 
influence noisy document frequencies investigated theoretically empirically retrieval inverse document frequency weightings 
experiments analysed rc measure retrieval effectiveness measures 
aiming describing noisy average precision theoretically save lot expensive experiments 
rsv nrsv query features different recognition characteristics example 
appendix proof proposition definitions get nrsv nrsv rsv rsv rsv rsv ffi jk gamma 
delta jk js gamma 
delta jk chebychev inequality independence nrsv nrsv yield nrsv nrsv var gamma delta jk var nrsv var nrsv delta jk proves equation 
quality condition met shown similarly nrsv nrsv elke mittendorf peter schauble var nrsv var nrsv delta kj delta jk gamma delta kj nrsv nrsv gamma nrsv nrsv gamma delta jk var nrsv var nrsv proof proposition gamma get rough estimation variance noisy feature frequency inequality var nff gamma gamma gamma ff ff inserting quality condition met condition yields nrsv nrsv delta jk inq ff delta inq ff quality condition met nrsv nrsv gamma delta jk inq ff gamma delta inq ff proves proposition 
croft harding 
evaluation information retrieval accuracy simulated ocr output 
symposium document analysis information retrieval pages 
schauble wechsler 
metadata integrating speech documents text retrieval system 
sigmod record 
mittendorf schauble sheridan 
applying probabilistic term weighting ocr text case large alphabetic library catalogue 
acm sigir conference information retrieval pages 

automatic hypertext conversion collections 
adam bhargava yesha editor advances digital libraries current lecture notes computer science pages 
springer verlag 
robertson walker 
simple effective approximations poisson model probabilistic weighted retrieval 
acm sigir conference information retrieval pages 
salton 
automatic text processing 
addison wesley reading ma 
schauble 
assessing retrieval effectiveness speech retrieval system simulating recognition errors 
arpa workshop human language technology hlt pages 
singhal salton buckley 
length normalization degraded text collections 
technical report departement computer science cornell university 
smith stanfill 
analysis effects data corruption text retrieval performance 
thinking machines cambridge ma 
measuring effects data corruption information retrieval condit 
effects ocr errors ranking feedback vector space model 
technical report tr university nevada las vegas 
condit 
evaluation model retrieval effectiveness ocr text 
technical report tr tr university nevada las vegas 
condit 
results applying probabilistic ir ocr text 
acm sigir conference information retrieval pages 
turtle croft 
inference networks document retrieval 
acm sigir conference information retrieval pages 
elke mittendorf peter schauble 
