gp beagle benchmarking problem repository genetic programming community robert ce chalmers se computer engineering chalmers university se sweden michael neill conor ryan michael ul computer science university limerick ireland peter nordin complex systems chalmers university se sweden william langdon cwi kruislaan sj amsterdam netherlands experimental studies genetic programming arti cal problems 
results obtained may typical may re ect performance problems met real world 
change propose common suites benchmark problems introduce benchmarking problem repository called gp beagle 
basic entities repository problems problem instances problem suites usage information 
give examples problems suites repository identify www site location 
large fraction genetic programming gp research empirical 
new ideas implemented tested experiments number problems 
performance new idea compared baseline gp system 
show relative merit new idea easily extend comparing merits di erent gp extensions 
furthermore problems arti cial results may representative performance real world problems 
real world data number di erent problems limited 
lead results typical performance majority problems 
introduce gp beagle infrastructure establishing maintaining promoting publically available repository benchmarking problems empirical investigation performance evaluation genetic programming systems 
includes individual problems benchmarking suites problems 
de nes nomenclature structure di erent entities related benchmarking speci es attributes needed describe problem suite lists publications 
inspired successes open source movement repository available usage agreement problems free published results reported back repository 
ensures repository give date view problems knowledge gained 
gp beagle ort supported www site currently development www gp beagle org 
believe gp beagle enable gp community faster progress promote sound experimental methods provide common ground comparisons enable faster elimination ideas fruitful evoke discussions problems research respective merits 
ort research community extend repository 
hope convince part ort bene cial community 
number existing problem databases areas related gp gained think new repository needed gp gp attack types problems existing databases mainly pools problems give date view problems 
furthermore establishing repository potential raising awareness experimental studies far act pointing existing databases 
section elaborates experimental research pros cons benchmarks 
section example uci machine learning repository classi cation regression data sets 
components structure gp beagle introduced section detail attributes describe entities repository 
examples problems suites repository described section section concludes 
experimental research benchmarks experimental research important part scienti method importance computer science stressed experiments prove theory allow test theoretic predictions reality explore areas theory reach 
main bene ts conducting experiments help build reliable knowledge base adequate theories methods give observations lead unexpected insights accelerate progress help quickly eliminate approaches weed erroneous claims 
experiments guides engineering practice theory development promising directions 
know studies current level experimental practice gp research 
studies neural network community computer science general revealed amount experimental evaluation low 
study neural networks articles published showed results real world problem employ single realistic learning problem third quantitative comparison previously known algorithm 
orts ann community raise level experimental assessment probably spilled gp community suspect situation gp community di erent 
collective strive better assessment practices called 
benchmarks ective way conducting experiments successfully areas benchmark collection problems de ned performance measurements prescribed method evaluate performance 
chosen way allow repeatable objective comparisons 
essential requirements benchmark volume benchmark include section draws heavily papers 
notable example spec problem suites benchmarking computer performance 
diverse problems validity common errors invalidate results avoided reproducibility problems experiments documented reproducible comparability results comparable results studies 
conducting experiments problems dicult characterize new algorithm extension 
problems type results may show typical performance 
including problems di erent types get fuller picture algorithm performs general 
methodological errors threaten validity include choice problem suited investigated algorithm reporting result data set training test data set tuning parameters 
errors avoided de ned evaluation procedure separates training validation testing 
describe exact setup experiment result reproduced 
results di erent studies compared dicult choose algorithms ideas proposed di erent studies 
slows progress 
addition requirements practitioners requirement representability benchmark problems resemble problems met real world 
risk arti cial problems limited information content room discover exploit di erent layers complexity 
example having meta learning ability assembling information search directions searching multiplexer problem 
comparing machine learning algorithms simple problems central idea get evaluate problem solving ability unfair way 
benchmarks disadvantages 
risk algorithms speci cally tailored perform benchmark problems 
risk benchmarks focus single numerical performance measure 
hinder progress information theoretic sense 
example scalable arti cal problem gaussian described table information content kolmogorov complexity regardless parameters varied 
researchers optimize local optima exploring new innovative avenues research 
problem clear fair comparisons carried 
example unfair compare accuracy gp algorithms execution time time needed set time needed tune parameters account 
benchmarks evolve needs community application areas static fail re ect new knowledge irrelevant 
current level maturity experimental practice gp community think advantage establishing common problems benchmarks outweighs potential drawbacks 
constantly remind pitfalls negative ects avoided 
furthermore designed gp beagle explicitly try address 
gp beagle problem repository gp beagle designed place information gp problems benchmarking suites problems 
basic philosophy de ne open framework easily extended suites problems evolve knowledge gained algorithms evaluate 
gp beagle simply supply number problems collects presents information 
guarantee usage information date problems supplied usage agreement 
agreement states problems freely information reported back repository 
encourages researchers submit new problems repository 
problems accepted long meet basic criteria published instances type problem repository evolutionary algorithms general search algorithms applied large number areas wise specify benchmark suite research 
gp beagle number suites starts recording collections problems 
suites de facto collections problems 
time anticipated special suites evolve di erent sub areas gp research example classi cation regression arti cial problems 
anticipated mass problems usage data assembled suites constructed rigorous way ideas quantify features benchmarking suites 
gp beagle implemented www server set perl scripts accessing mysql database 
database consists records basic entities problems problem instances de facto benchmarking suites usage information 
implementation minimizes amount human resources needed maintain repository 
statistics problems repository automatically collected 
structure repository gp beagle usage agreement described 
section gives detailed view entities repository 
structure repository basic entity repository problem 
problem data set data generator simulator 
programs generate data tness evaluation 
di erence data generator line 
generating data set prior starting gp run simulator line dynamic evaluation gp individual 
problem arti cial real world 
specifying problem experiment allow full reproducibility comparability results 
instance specify data set describe data set divided training validation testing sets 
simulator data generator need know parameters tness cases generated forth 
encompass level detail gp beagle introduces concept problem instance 
fully speci ed description problem problem repository multiple instances instance stem problem 
problem de nes family possible instances 
collection problem instances experimental study called problem suite 
homogeneous suite consists problem instances problem heterogeneous suite instances problems 
human assistance needed review new submissions repository complete create new benchmarks instance may contain multiple samples problem data set 
special kind problem suites benchmarking suites 
suites de facto suites actual research 
explicitly added repository promote new kinds experiments de ne suites consisting diverse problem instances 
addition basic entities repository contains usage information 
usage information details studies problem instance suite results knowledge obtained 
information easily accessed browsing repository 
collects statistics problems hot lists 
way researcher easily nd problems give opportunities comparative analysis 
gp beagle usage agreement problems gp beagle repository available free academic commercial long published information generated reported back repository 
speci cally information reported includes general suite speci information 
experiment described 
set problem instances 
goal experiment rationale choosing speci set problems 
knowledge gained set problems suitability achieving goal 
problem instance instance speci information 
result obtained performance measure de ned problem instance optionally 
execution time 
new problem instance generated existing instance altered long new instance supplied back repository information 
reason creating new instance 
description previously existing instances adequate 
attributes entities gp beagle attributes kept record problem repository name unique name problem 
assigned problem name uniquely referred papers discussions 
description textual description problem 
ideally give basic knowledge domain describe parameters simulator attribute values missing dataset version version number re ect updates problem 
type dataset simulator sub type regression binary classi cation classi cation origin arti cial real world 
arti cial problems characterized di culty varied 
source submitted problem 
status suggested reviewed 
indicates problem reviewed entered repository 
number type attributes total number attributes number continous discrete attributes 
number instances number instances dataset 
file gzip ped tar le les problem 
unique attributes problem instance record problem problem instance derived 
description describes instance derived parent problem components consists previously existing instances problem adequate reason created reason creating instance 
performance measure describes tness value evaluate algorithms instance 
number instances number instances evolving solution 
instances divided validation training sets 
number test instances instances test set way evolve solution 
gp result give example result obtained gp technique 
gp pointer problem instance usage info record describing result obtained 
result give example result obtained non gp technique 
brie describe technique give result 
simple result give result achieved simple technique example plurality rule classi cation task technique linear separation regression 
record suite contains unique attributes type defacto benchmark 
problem instances instances suite 
sub type heterogeneous homogeneous performance measure performance measure suite 
addition basic entities repository contains types usage information records instance usage info suite usage info 
unique attributes instance usage info suite usage info record similar experiment instance described 
pointer gp bibliography 
technique algorithm technique 
performance obtained performance obtained 
time execution time evolve solution performance 
contemplated standardized way report execution time think right way available 
possible way report actual execution time normalized spec benchmark result cpu 
number objections raised scheme chosen specify way measure time needed 
examples give examples entries repository 
problem problem instance de facto suite proposed benchmark 
descriptions brief primarily intended give picture kind information repository 
details gp beagle web site 
problem gaussian gaussian problem problem 
record gp beagle database shown table 
data le problem gaussian tar gz contains les readme txt description les included tar le gaussian description data record shown table gaussian implemented ansi usage info description compile data info description data le generated generator run 
les typical included problem di er types problems 
problem instance kddcup kddcup problem instance sampled kdd cup data real world class classi cation dataset problem 
problem instance record shown table 
note gp bibtex key table record gaussian problem name gaussian type subtype binary classi cation version status suggested origin arti cial instances varying attributes varying numerical file gaussian tar gz source carla gauss math rocks org description discriminate instances generated multivariate attributes gaussian distributions mean stddev respectively 
parameter governs false input attributes uniformly sampled added instance 
diculty problem dimensionality bayes optimal classi cation rate number false attributes varied varying parameters problem 
bayes optimal classi cation rate ultimate uncertainty problem ml algorithm better calculated parameter choices equal 
generalization problem elena project 
table record kddcup problem instance name kddcup kddcup status suggested version instances file kddcup tar gz average cost test instance speci ed cost matrix source catherine darwin evolution rules com description data kdd cup competition training instances testing instances 
problem instance contains sample training instances testing instances 
refers mapping discrete input attributes numerical integers 
task relatively dicult class distribution test set di erent class distribution training set 
wanted test gp system get competitive results simplest possible mapping mapping values unordered discrete attribute integers imposes order exist original data 
took sample wanted get manageable data set give shorter execution times 
test set kept intact wanted able compare results algorithms kdd cup 
darwin bagged boosted decision trees winner kdd cup elkan results kdd classi er learning contest 
ucsd edu users elkan html may plurality rule nearest neighbor classi er 
gp bibliography 
planning implement connections gp beagle gp bibliography papers easily located searched 
de facto suite proben medical banzhaf problems proben benchmark suite compare gp performance neural nets 
problem di erent samples data set 
put samples instances de facto suite contains different problem instances 
record shown table benchmark suite classi cation diverse give example benchmark suite created adding large classi cation problems suite classi cation problems 
note kddcup problem instance described table 
record shown table 
note problem instances problems proben medical suite 
di erent sampling evaluation procedure fold crossvalidation vs fold cross validation suite instances distinct stem problems 
described gp beagle infrastructure establishing promoting publically available repository benchmarking problems empirical studies genetic programming systems 
benchmarks genetic programming community faster progress results di erent studies easily compared 
furthermore benchmarks chosen way promotes sound empirical studies include broad diverse set problems prescribe evaluation procedure performance measurements 
address pitfalls benchmarks gp beagle open framework benchmarks problems evolve pre speci ed benchmarks 
anticipate time gp community collective ort banzhaf report aggregated performance measure indicated table 
assemble benchmarks di erent sub areas gp research framework supplied gp beagle 
basic entities gp beagle problems problem instances problem suites 
problem instances concrete instances problem full description 
allow full reproducibility results 
repository contains information problems suites 
problems freely available long published results problem extensions reported back repository 
gp beagle implemented set records mysql database 
perl scripts extract information update data base 
interface repository web site www 
org 
order ort really take encourage visit site start repository submitting problems results 
blake merz 
uci repository machine learning databases 
markus wolfgang banzhaf 
comparison linear genetic programming neural networks medical data mining 
ieee transactions evolutionary computation press 

universal benchmark suites 
proc 
th int 
symp 
modeling analysis simulation computer telecommunication systems pages 

lim 
loh 
shih 
comparison prediction accuracy complexity training time old new classi cation algorithms 
machine learning forthcoming 
prechelt 
quantitative study experimental evaluations neural network learning algorithms current research practice 
neural networks 
lutz prechelt 
notes neural learning algorithm benchmarking 
neurocomputing 
tichy 
computer scientist experiment 
ieee computer 
walter tichy paul lukowicz lutz prechelt ernst heinz 
experimental evaluation computer science quantitative study 
journal systems software january 
table record proben medical de facto suite name proben medical type defacto status suggested version instances id number file proben medical tar gz instances cancer proben diabetes proben gene proben heart proben horse proben thyroid proben average classi cation error test sets source markus wolfgang banzhaf originally proben benchmark banzhaf valid email de description subset medical classi cation problems extracted proben neural network benchmark 
instance consists di erent samples problem 
table record classi cation diverse benchmark suite name classi cation diverse type benchmark status suggested version instances id number file classi cation diverse tar gz instances cancer lim cmc lim dna lim heart lim boston housing lim led lim liver lim pima indians lim satimage lim image segmentation lim smoking lim thyroid lim vehicle lim voting lim waveform lim ta evaluation lim kddcup kddcup average classi cation error rate source robert ce chalmers se description broad diverse suite classi cation problems 
includes binary ternary class class class class class classi cation problems 
small problems instances test set fold cross validation estimate classi cation error rate 
sixteen problems di erent ml techniques study tien lim allows comparisons large number machine learning algorithms 
additional data sets kdd cup competitions added benchmark problems lim study small 
