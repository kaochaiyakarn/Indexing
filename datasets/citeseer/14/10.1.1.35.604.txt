corpus stemming occurrence word variants xu bruce croft computer science department university massachusetts amherst ma 
cs umass edu stemming information retrieval ir systems reduce variant word forms common roots 
simplest applications natural language processing ir effective terms user acceptance consistent small retrieval improvements 
current stemming techniques reflect language specific corpora lead occasional serious retrieval failures 
propose technique corpus word variant occurrence statistics modify create stemmer 
experimental results generated english newspaper legal text spanish text demonstrate viability technique advantages relative conventional approaches 
categories subject descriptors 
information storage retrieval content analysis indexing indexing methods linguistic processing 
information storage retrieval information search retrieval query formulation search process general terms algorithms experimentation performance additional key words phrases information retrieval stemming corpus analysis occurrence class refinement gram stemming common form language processing information retrieval systems krovetz 
similar morphological processing natural language processing somewhat different aims 
information retrieval system stemming reduce variant word forms common roots improve ability system match query document vocabulary 
variety word forms comes inflectional derivational morphology stemmers usually designed handle systems stemming consists solely handling simple plurals 
stemmers group conflate words synonyms children childhood variant word forms typical function 
stemming studied mainly english evidence useful number languages 
evaluations stemming test collections produced mixed results harman shown consistent small improvements retrieval effectiveness range collections krovetz hull 
stemming usually viewed recall enhancing device expands original query related word forms improve precision low recall levels promoting relevant documents high ranks 
stemming english usually done document indexing removing word endings suffixes tables common endings heuristics appropriate remove 
best known stemmers experimental ir systems porter stemmer porter iteratively removes endings word termination conditions met 
porter stemmer number problems varying degrees stemmers 
ffl difficult understand modify 
ffl errors aggressive conflation policy police execute executive conflated missing european europe matrices matrix conflated 
ffl produces stems words difficult user interpret iteration produces iter general produces gener 
despite problems recall precision evaluations porter stemmer shown performs stemmers hull 
krovetz krovetz developed new approach stemming machine readable dictionaries defined rules inflectional derivational morphology 
stemmer called kstem addresses problems porter stemmer produce consistently better recall precision performance 
reasons kstem heavily dependent entries dictionary conservative conflation 
example words stocks bonds valid entries dictionary general english conflated stock bond separate entries 
database searched wall st journal problem discussed 
refer group words result common root applying specific stemming algorithm conflation equivalence class 
class may example stock stocks 
corpus stemming refers automatic modification equivalence classes suit characteristics text corpus 
produce effective results obvious errors user point view 
basic hypothesis word forms conflated corpus occur documents corpus 
hypothesis occurrence measure similar expected mutual information measure emim van rijsbergen church hanks modify initial set conflation classes generated stemmer 
test viability building new stemmer linguistic knowledge modifying equivalence classes generated simple gram approach 
equivalence classes generated stemmers corpus analysis document indexing time query formulated 
query stemming flexible users choose word variants applicable query eliminating adding variants expanded form query 
price additional flexibility efficiency 
expanded queries take significantly longer process degree expansion results set equivalence classes important efficiency measure stemming algorithm 
article describe algorithms corpus analysis word variants report results effectiveness efficiency experiments 
experiments carried inquery retrieval system broglio 
corpora experiments retrieval experiments study carried english corpora spanish corpus 
english corpora west legal document collection turtle collections news articles trec experiments harman wsj wall street journal wsj wall street journal 
spanish corpus ism collection trec conferences 
query set ism spanish adhoc queries trec 
statistics derived corpora associated queries shown table 
sets queries west natural language query set structured query set 
queries treated collection individual words 
second uses operators structure combinations words 
previous stemming phrases produced different results stemming words krovetz 
occurrence data wsj wall street journal 
wall street journal gb data fact affect results reported corpus analysis word variants corpus analysis general purpose language tools generally successful ir 
example general thesaurus automatic query expansion consistently improve effectiveness system result effective retrieval voorhees 
tool tuned domain text corpus results usually better point view stemming algorithms successful general techniques consistently give small effectiveness improvements 
stemming algorithm adapts language characteristics domain reflected corpus better non adaptive 
words meaning meanings uniformly distributed corpora 
example stocks plural form stock wall street journal primary meaning corpus history may device punish prisoners 
conflation corpus may bad 
corpus statistics may help establish relationship words specific corpus 
basic assumption word variants conflated occur documents specifically text windows 
example articles wall st journal discuss stock prices typically contain words stock stocks 
technique identify corpus dependent stock stocks 
help prevent bad linguistics stemmer policy police addition additive porter stemmer unrelated words occur rarely 
jing croft jing croft discuss corpus technique query expansion produces significant effectiveness improvements metrics define metric measure significance word form occurrence em max ab gamma en number occurrences corpus ab number times fall text window win word tokens corpus 
strictly define ab number elements set 
wing distinct occurrences corpus dist distance measured word count document 
en expected number occurrences assuming statistically independent 
metric variation emim expected mutual information measure van rijsbergen church hanks widely measure significance associations 
word form occurrences emim defined emim log ab number text windows 
reason choose emim normalized number occurrences unfairly favors high frequency word forms 
em metric measures percentage occurrences occurrences intuitively suitable purpose 
role en em formula important words may occur chance 
example words occur reasonably large text window erroneous conclude related 
formula calculate en en kn constant factor corpus window size 
justify formula assumption word occurs text window 
en practice currently estimate occurrence data large sample randomly chosen word pairs value ab wsj randomly chosen word pairs obtained gamma window size words 
table list number pairs words em scores wsj text window size 
table clearly indicates relationship em score appropriateness 
examples interesting 
gases plural form gas closely related 
low em score wsj 
examining documents find gases usually mean inert gases hot gases medical gases gas means natural gas gasoline 
news new occur frequently porter stemmer conflates news new 
formula estimating en expected number occurrences 
results em score suggests related 
corpus west wsj wsj ism number queries raw text size gigabytes number documents mean words query mean words document mean relevant documents query number words collection table statistics text corpora word frequency word frequency occ em bond bonds stock stocks cruise animation animators brokerage brokers votes voting gas gases policy police new news arm army desirable desires table em scores example word pairs wsj word window connected component algorithm stemming equivalent expanding query words equivalence classes 
aggressive stemmer generates large equivalence classes stemming 
approach adopt corpus analysis em score break refine large equivalence classes generated aggressive stemmer 
algorithm equivalence class refinement connected component algorithm 
refine initial equivalence class class mapped graph vertex representing word edge vertices representing em score greater threshold vertices connected component graph form new equivalence class 
threshold parameter experiments 
connected component algorithm efficient 
implementation algorithm runs nlog refine class size linear log small value practically large connected component algorithm occasionally produces large sparsely connected equivalence classes called strings clustering literature salton hurt retrieval effectiveness 
gives equivalence classes generated porter stemmer wsj 
classes result applying connected component algorithm shown singleton classes omitted 
optimal partition algorithm algorithm class refinement optimal partition algorithm addresses string problem associated connected component algorithm 
stemming may improve recall retrieving relevant documents 
may decrease precision retrieving nonrelevant ones 
motivation optimal partition algorithm achieve best tradeoff 
precisely pair words recall benefit keeping em higher em score related conflation may improve recall 
harm precision keeping constant ffi 
net benefit keeping em gamma ffi net benefit separating 
net benefit partition equivalence class sum net benefits pairs words class 
optimal partition equivalence class maximizes net benefit 
optimal partitions chosen arbitrarily refine initial equivalence class 
far efficient implementation optimal partition algorithm 
similarity np complete problems prompts guess may np complete 
current implementation algorithm brute force search possible partitions 
equations give number possible partitions class words gamma gamma gamma gamma obviously grows exponentially 
feasible apply connected component algorithm input classes smaller 
class large members split initial characters words 
apply optimal partition algorithm 
solution may suboptimal adequate purpose 
shows power optimal partition algorithm 
words clustered connected component equivalence class connected sparsely 
area enclosed dotted line new equivalence class generated optimal partition algorithm 
words human race separated words horse race 
abandon abandoned abandoning abandonment abandons absorb absorbed absorbing absorbs abuse abused abuses abusing abusive access accessed accessibility accessible accessing accession example equivalence classes wsj porter abandonment abuse abusing abuses abusive abused accessibility accessible equivalence classes produced connected component algorithm phi phi phi phi phi phi phi phi phi gamma gamma gamma omega omega omega omega omega omega pi pi pi 
racial racing races race raced racetrack racer optimal partition connected component equivalence class experimental setup general procedure experiments follows 
collect unique word forms corpus 
numbers words possible proper nouns discarded 

construct initial equivalence classes aggressive stemmer 

collect occurrence data word pairs initial equivalence class sample word pairs calculating estimate calculate em scores word pairs initial equivalence class 

refine initial equivalence classes em scores connected component optimal partition algorithms 

refined equivalence classes query expansion query word replaced equivalence class 
words equivalence class grouped inquery syn operator retrieval time inquery creates single inverted list equivalence class merging inverted lists words class 
expanded queries run unstemmed database corpus 
retrieval results evaluated standard point average precision compared queries expanded baseline stemmers 
aggressive stemmers step porter stemmer english corpora trigram matching algorithm english spanish corpora 
words trigram equivalence class share characters 
purpose trigram stemmer twofold 
test feasibility constructing statistical stemmer little linguistic knowledge 
test effectiveness statistical corpus analysis 
know trigram matching mistakes corpus analysis improve performance level comparable traditional stemmers validate value corpus analysis 
choose appropriate size text window determines occurrence step 
window small em scores infrequent words dominate vocabulary zipf law unreliable due occurrences 
window size large step consume time running time proportional window size 
previous showed appropriate window size words croft xu 
window size 
step decide em threshold connected component algorithm ffi value optimal partition algorithm 
window size fixed em threshold controls prevented higher threshold smaller equivalence classes applying connected component algorithm conservative resulted stemmer 
previous croft xu showed window size appropriate em threshold 
em threshold connected component algorithm ffi value optimal partition algorithm controls conservative resulted stemmer higher ffi value results conservative stemmer 
tried different ffi values table shows influence ffi retrieval effectiveness wsj 
appropriate ffi value word text window half average em value pairs words initial equivalence classes 
ffi set principled approach take set ffi value average em score 
experiment retrieval performance relatively insensitive small variations parameter values 
english experiments baseline stemmers porter kstem baseline stemmers compare retrieval results english corpora 
retrieval effectiveness query stemming porter kstem shown tables 
kstem outperforms porter natural language queries west corpus porter outperforms kstem wsj 
porter kstem quite different terms amount query expansion 
wsj unique word variants 
porter stemmer clusters equivalence classes average class size 
kstem clusters classes average class size 
average class sizes similar stemmers porter stemmer produces longer expanded queries kstem 
define expansion factor stemmer number words expanded query set stemmer number words unexpanded query set 
expansion factor porter stemmer wsj compared kstem 
west corpus unique word variants porter kstem cluster classes respectively average class sizes 
expansion factor porter higher value kstem 
expansion factors show porter aggressive stemmer kstem 
example west porter stemmer expands word constitutes constitute constituted constitutes constituting constitution constitutive kstem expands constitute constituted constitutes constituting 
refining porter equivalence classes section connected component optimal partition algorithms refine porter stemmer equivalence classes 
wsj porter equivalence classes broken classes connected component algorithm average class size broken classes average size optimal partition algorithm 
expansion factor reduced 
west porter equivalence classes broken classes connected component algorithm average class size broken classes average size optimal partition algorithm 
expansion factor reduced 
example word constitute west queries expanded constitute constituted constitutes applying connected component algorithm constitute constitutes applying optimal partition algorithm 
expansion means faster retrieval see timing figures section results better retrieval effectiveness 
see tables connected component optimal partition algorithms produce small improvements retrieval effectiveness west wsj 
effectiveness optimal partition algorithm better connected component algorithm 
interactive environment expansion words visible users eliminating bad means better user satisfaction 
refining trigram equivalence classes wsj trigram matching generates classes unique word variants average class size 
average class size large classes huge classes members 
largest equivalence class initial characters con members 
word pairs occurrence data need collect precision change queries recall kstem porter gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma average gamma table improving porter stemmer west natural language queries precision change queries recall kstem porter gamma gamma gamma gamma gamma gamma gamma gamma gamma average table improving porter stemmer west structured queries wsj pairs occur corpus 
connected component algorithm classes refined classes average class size 
classes large contain words morphologically related computer 
address problem initial characters determine association common prefixed words 
words prefix differ characters em score forced 
computer em value pan put different 
may characters label modified approach gram 
precision change queries recall kstem porter average table improving porter stemmer wsj gram approach wsj connected component algorithm generates classes wsj average class size 
optimal partition algorithm breaks classes average class size 
expansion factor query set connected component classes optimal partition classes 
gram west connected component algorithm generates classes average class size 
optimal partition algorithm generates classes average class size 
expansion factor query set connected component classes optimal partition classes 
retrieval effectiveness connected component gram optimal partition gram classes shown tables 
connected component gram achieved level performance kstem porter 
worse kstem porter west better kstem wsj 
optimal partition gram better kstem porter collections 
interesting compare optimal partition gram optimal partition porter 
start different initial stemmers comparable terms retrieval effectiveness 
west optimal partition porter slightly better better natural language queries better structured queries 
wsj optimal partition gram slightly better 
precision change queries recall kstem gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma average gamma table retrieval results gram stemmers west natural language queries precision change queries recall kstem gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma average gamma table retrieval results gram stemmers west structured queries gives examples connected component gram equivalence classes 
contain words directly related 
gives classes produced optimal partition algorithm 
scalability overhead collect occurrence information relatively low better occurrence information part corpus generate equivalence classes precision change queries recall kstem average table retrieval results gram stemmers wsj retrieval corpus 
table gives retrieval effectiveness parts wsj corpus generate ngram equivalence classes 
wsj generate gram optimal partition classes retrieval performance slightly worse corpus wsj retrieval performance wsj 
means possible fraction large corpus generate equivalence classes losing performance 
need carry experiments multiple collections decide necessary amount data proportional size corpus fixed 
portability results previous sections show corpus analysis occurrence information helps stemming answer questions stemming corpus specific corpus specific answer questions equivalence classes generated occurrence data corpus expand queries 
table shows result applying optimal precision change queries recall gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma average gamma table equivalence classes wsj wsj partition gram equivalence classes generated wsj gb occurrence data wsj queries 
result better kstem porter improvement kstem 
tables show result applying optimal partition gram equivalence classes generated wsj occurrence data west 
result comparable kstem porter clearly classes generated west occurrence data 
results show stemming somewhat corpus specific 
portability equivalence classes depends similarity corpora 
precision change queries recall kstem porter wsj gamma average table wsj classes wsj precision change queries recall kstem porter gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma average gamma gamma table wsj classes expand west natural language queries precision change queries recall kstem porter gamma gamma gamma gamma gamma gamma gamma gamma average table wsj classes expand west structured queries efficiency measured time taken steps described section wsj sun workstation 
takes minutes cpu time collect unique word variants step 
takes minute construct equivalence classes porter stemmer step 
gram stemmer step unnecessary 
collecting occurrence data step takes hour minutes initial stemmer porter hour minutes initial stemmer trigram matching 
step takes minute run connected component algorithm refine initial equivalence classes 
takes additional minutes run optimal partition algorithm 
total time precision change queries recall delta delta delta delta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma average gamma table effect ffi ngram stemmers wsj expensive configuration gram optimal partition steps hours 
production environment step omitted indexing phase give unique word variants 
sophisticated implementation step confident total time steps reduced hour wsj 
speed mb hour faster indexing speed typical ir systems applying corpus analysis stemming practical 
query stemming query expansion equivalence classes retrieval time varies stemmer 
direct correlation expansion factor retrieval time 
example inquery takes hours minutes cpu time finish wsj queries expanded porter stemmer hour minutes cpu time finish queries expanded gram optimal partition stemmer 
expansion factors stemmers wsj 
technique significantly reduces expansion factor result faster retrieval especially desirable interactive applications 
query stemming efficient stemming document indexing time 
takes minutes cpu time finish wsj queries pre stemmed wsj database 
think efficiency gap largely due fact current implementation inquery tuned query stemming 
database stemmed indexing time equivalence class needs disk get inverted list 
query stemming equivalence class needs disk read inverted lists class members merge 
stemmer disk transfer time 
extra overhead required query stemming extra disk seeks merge inverted lists 
porter stemmer wsj query stemming requires extra disk seeks query average take seconds workstation 
overhead merge inverted lists modest modern computer system 
properly implemented query stemming combination corpus analysis technique may efficient stemming document indexing time traditional stemmers corpus analysis results smaller equivalence classes shorter inverted lists query words 
spanish experiments natural generalize corpus analysis gram matching languages 
tried ideas spanish preliminary results encouraging 
simplify software design experiments accents removed spanish characters upper cased characters ism corpus 
retrieval performances gram connected component gram optimal partition stemmers ism corpus shown table 
parameter values window size em threshold ffi english experiments 
baseline stemmer spanish experiment porter style stemmer designed center intelligent information retrieval university massachusetts amherst umass spanish experiments trec conferences broglio 
english case retrieval performance gram stemmers comparable baseline stemmer 
interestingly english experiments optimal partition stemmer slightly worse connected component stemmer 
precision change queries recall gamma gamma gamma gamma gamma gamma average gamma table retrieval performances ism ism corpus unique word forms expansion factor baseline stemmer 
expansion factors gram connected component gram optimal partition stemmers ism 
spanish rich morphology figures surprising 
recall parameters class refinement algorithms control sizes resulted equivalence classes 
spanish richer morphologically english expect ideal parameter values english spanish different 
parameter values english experiments may prevent spanish 
reasons optimal partition algorithm slightly worse connected component algorithm may produces equivalence classes small spanish 
possible reason current implementation optimal partition algorithm handle input equivalence classes members break pieces running algorithm 
may break 
needs done decide appropriate parameter values spanish 
looking inexpensive approximations optimal partition algorithm handle large input classes 
results show corpus analysis word variants enhance performance stemming algorithms 
experiments crude equivalence classes generated trigram matching demonstrate validity basic hypothesis related word variants occur limited text windows 
begun issues come research 
improving efficiency query stemming 
solution index stems word variants word variants specified user 
course increases index overhead substantially looking increasing efficiency query processing word variants 
second issue stemming non english languages 
statistical approach stemming potentially effective way improving retrieval system language needing language expert produce stemmer 
initial experiments spanish trigram approach encouraging 
problem languages complex morphology arabic generating initial equivalence classes 
may simply expanding query related words just word variants accomplish effect 
acknowledgments james callan helpful comments early draft 
lisa ballesteros help spanish experiments 
west publishing providing west collection legal texts 
material supported part national science foundation library congress department commerce cooperative agreement number eec contract number 
opinions findings recommendations expressed material author necessarily reflect sponsor 
broglio broglio callan croft 

overview inquery system tipster project 
proceedings tipster workshop pp 

morgan kaufmann 
broglio broglio callan croft 

document retrieval routing inquery system 
harman editor proceedings third text retrieval conference trec pp 

nist special publication 
church hanks church hanks 

word association norms mutual information lexicography 
proceedings th acl meeting pp 

croft xu croft xu 

corpus specific stemming word form occurrence 
fourth annual symposium document analysis information retrieval pp 

harman harman 

effective 
journal american society information science 
harman harman 

overview third text retrieval conference trec 
harman editor proceedings third text retrieval conference trec pp 

nist special publication 
hull hull 

stemming algorithms case study detailed evaluation 
journal american society information science 
jing croft jing croft 

association thesaurus information retrieval 
proceedings riao pp 

krovetz krovetz 

viewing morphology inference process 
proceedings th annual international acm sigir conference research development information retrieval pp 

porter porter 

algorithm suffix stripping 
program 
salton salton 

automatic text processing 
addison wesley reading ma 
turtle turtle 

natural language vs boolean query evaluation comparison retrieval performance 
proceedings th annual international acm sigir conference research development information retrieval pp 

van rijsbergen van rijsbergen 

information retrieval 
butterworths second edition 
voorhees voorhees 

query expansion lexical semantic relations 
proceedings th annual international acm sigir conference research development information retrieval pp 

marketed marketer markets marketing mark marker marked marks marketers markers market uniformity uniformly uniform generated generating generation generator generators generations generate generates generalize examples gram connected component classes west marked marketer marketers marker markers marketed markets marketing mark marks market uniformity uniformly uniform generator generators generations generated generating generation generate generates generalize examples gram optimal partition classes west 
