attribute exploration background knowledge bernhard ganter purpose article describe generalized version known knowledge method called attribute exploration 
get rough idea explorations imagine want classify collection items selected properties 
example class mathematical structures groups classified structural properties commutative nilpotent consist technical devices car engines example attributes may reflect properties reliability weight price 
set persons students university classifying attributes may field study age degree etcetera 
attribute exploration help explore implicational logic attributes 
computer implementations attribute exploration exist early 
growing experience demand generalizations 
applications include uncertain knowledge negated attributes burmeister information stumme 
aim suggest framework doing 
method somewhat related results nowak approaches developed independently integrated 
specific feature knowledge acquisition technique mathematical rigour 
discrete data including probabilistic approximative handling knowledge 
may seen limitation results transparent reliable 
processing mathematical knowledge condition 
written conference ottawa author active research group supported 
german israeli foundation scientific research development 
lemma propositional logic discuss approach scholars having background logic tend translate results language propositional calculus 
formulate basic tools terms 
finite set propositional variables set propositional formulae composed introduced usual manner 
set fx ft fg characteristic function defined fx fx ft fg denote canonical extension fx formulae 
call model formula ff denoted ff fx ff set formulae set subsets fx ff ff fg set models ths fff ff sg theory formula form fa fn sets variables clause abbreviated 
conjunction clauses negated variables called cumulated clause 
standard rules propositional calculus cumulated clause written form distributive law implies formulas sets atoms equivalent clauses 
clause jn definite horn clause 
cumulated clause fn fn consisting horn clauses called implication abbreviated fn fixed set formulae associate subset finite set variables cumulated clause ff ff note immediate facts proposition model ff model satisfying particular model model ff model ff model going show propositional theory canonical basis consisting cumulated clauses 
term basis set formulae ffl non redundant satisfies ffig fi ffl generates satisfies 
clear theory non redundant generating system assumed finite 
construction produce system uniform manner inherit automorphisms call canonical basis definition set respect ffl model ffl set model satisfying finite correct definition 
lemma finite 
theory set fff non redundant generating set proof set model fff non redundant 
model model ff 
proposition model satisfying consequently model 
impossible model model shows converse inclusion stated proposition lemma proved 
lemma generalizes result implications 
consists implications closure system 
conversely closure system cumulated clause ff equivalent implication denotes closure closure system finite set 
denotes corresponding closure operator results specialize manner subset respect closed contains closure proper subset 
obtain lemma finite closure system set implications fp non redundant generating set th 
introduce basic notions mention elementary facts implications play role sequel 
set subsets necessarily closure system imps ths implications implicational theory consisting implications theory ths closure operator sets implications 
called implicational theory generated lemma shows implicational theory canonical generating set 
implicational theories characterized inference rules armstrong rules see maier set implications implicational theory closed 
mentioned closure system set implications 
corresponding closure operator denoted 
closure operator implicational theory generated closely related easy compute closure set check implication replace repeat process 
closed 
see wild detailed description algorithm 
combined simple algorithm described compute closed sets algorithm produces closed sets lexicographic order compute sets 
attribute exploration formal context consists sets objects attributes binary relation theta expressing object attributes operators fm ag fg bg introduce formal concept pair sets satisfying concepts ordered set concepts order complete lattice called concept lattice 
implication subsets model sense section implies say holds object model imp denotes implicational theory set implications hold small contexts imp huge desirable small generating set hand 
solution offered lemma finite set modest size 
difficulty remains compute basis practice large infinite 
imp implicational theory generated course contained imp 
hand implication holds hold subcontext theta 
combining cases get imp imp theta see ganter wille formal concept analysis 
imp satisfy imp theta theory equal imp 
words find set examples subset implication generating set imp theta holds know generate imp 
attribute exploration organizes process 
interactive procedure lists kept set implications known hold subcontext examples theta 
iterated step find smallest set jj exists process terminates generates imp imp 
jj question jj asked 
user react confirming suggested implication holds case implication added giving example jj included quote burmeister small example exploration concerning triangles elementary geometry 
attribute set fa gg equilateral oblique right equilateral acute obtuse exploration process terminates implications examples 
result shown simplified premises implications possible 
sets obtained closing premise wrt 
implications list 
examples read concept lattice 
right equilateral obtuse equilateral oblique acute oblique oblique right attributes acute obtuse attributes equilateral oblique acute equilateral equilateral attributes implicational base triangles 
right obtuse gamma gamma equilateral equilateral acute oblique gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma theta theta theta theta theta theta gamma gamma gamma gamma gamma gamma concept lattice triangles 
implications plus background knowledge lemma generalize attribute exploration arbitrary propositional theories 
reasons implicational logic 
help avoiding combinatorial explosion implicational statements particularly easy comprehend human customer 
limitation implications strict relaxation desired 
suppose example try classify groups respect properties 
implications may encode abelian nonabelian mutually exclusive attributes express group abelian nonabelian 
suggest cautious generalization exploration procedure allow user provide arbitrary propositional background knowledge 
exploration remain implicational implications asked 
modest generalization causes serious complexity problems 
just ignore section discuss possible ways get difficulties 
generalized version input user form clauses 
certainly sufficient propositional formula equivalent conjuction clauses 
clause may input different meanings ffl universal statement objects object having attributes attribute ffl existential statement objects object having attributes attributes note second just negation 
stage procedure denote set universal statements input including implications confirmed valid 
particularly interested implicational theory generated corresponding closure operator 
ft tg set existential statements input 
statements generalize replace specification examples original exploration procedure 
longer require example completely specified allow partial information 
give impression clauses may applied come back example triangles substantial example 
universal clauses example particularly simple forms contradiction object having attributes 
exhaustion object attribute 
fmg implication attributes imply 
fmg differentiation fm ag attributes triangles clauses immediate fright oblique fright oblique obtuse obtuse suggestive way code clauses write list possible attribute combinations chosen subcollections form contexts subcollection theta theta theta theta theta theta theta context representation universal existential clauses existential ones attribute combinations know occur conveniently specified subset universal ones attribute combinations exclude 
clauses sufficient generate implicational base 
implication added equilateral acute rows contexts sufficient existential clauses 
examples provided demonstrate independent right acute obtuse 
clauses may contradict implementation procedure computer program check consistency data 
done standard methods propositional logic described 
general assumption compatible model 
note compatible clause set realizes satisfying refer family sets realizer information possible realizers obtained may extend statements fact existential clause ft ft realizing realizes 
associate set operators 
ffi fn ag 
fn clearly ffi proposition suppose implication consequence fx mg compatible 
proof fx mg compatible possible choose realizer respects done set realizing realizing definition conversely fx mg compatible realizer satisfying mod fx mg 
containing disjoint definition 
proposition states extended implication 
closure operator may assume 
suggests strategy generalized exploration procedure find smallest set exists process terminates largest implicational theory containing implicational consequences compatible question asked 
user react giving admissible universal clause included giving admissible existential clause added repeated process terminates 
described interactive version 
course non interactive variant asking question implication automatically added computed 
proposition gives answer may unsatisfactory computation complex proposition satisfying fng exists 
proof model clause condition satisfied ft tg ft fng tg approximation problem approach described computational complexity 
apart checking consistency main problem compute operators generating questions 
turns serious obstacle replace operator ffi easy compute ask question ffi 
course partially stupid question part principle automatically answered means data 
original question contained 
replacing ffi may put labour user results remain correct complete 
similar introduce closure operator ffi easier compute satisfies ffi question necessary replaced ffi ffi introduce ffi split set universal statements parts consists implications small 
guarantees consequently define ffi closure operator corresponding ffi ft tg obtain ffi ideally generates implications equality ffi holds 
example implicational base computation ffi relatively easy mentioned section 
worthwhile studying implicational theories closed respect consequences derived set clauses 
formulated theorem 
better understanding mention examples studies far part relatively small consequences computed 
particular interest prime implicants mean minimal clauses 
clauses may generate implications implications 
known instances ths rules contraposition exhaustion propositional logic 
special cases general exhaustion rule fng proposition family implications clause closed proof suppose fng claim ft mod tg subset containing model model theorem set clauses finite set set implications satisfies closed exhaustion rules prime implicants proof immediate proposition closed rules 
suppose conversely implicational theory closed exhaustion wrt 
prove model intersection models model model set models containing fy transversal selected clause consequence prime implicant hypothesis closed exhaustion rule 
implies fng fng equivalent fng exhaustion implies closed follows 
reducible 
irreducible model model valued attributes natural instance theory sketched valued attributes 
recall valued context defined quadruple sets objects valued attributes attribute values resp theta theta ternary relation satisfying value attribute object condition ensures value object attribute pair 
assume valued contexts consideration complete precisely value value set attribute distinguish valued contexts formal contexts defined referred contexts 
concepts implications valued contexts defined terms contexts 
standard method called plain conceptual scaling transform valued context chooses context ssm gm mm gm ssm called scale attribute gm set scale values mm set scale attributes respective scale 
context defined fmg theta mm derived context 
example show classification dimensional point groups stabilizers point symmetry group planar see hahn rotations mirror reflections contain 
possible attribute value combinations shown scales describe structure attribute values 
derived context respect scales shown 
set attributes scales ssm gm mm general valued context value silently identify indistinguishable objects objects group rot rot order rotation number directions mirror axes 
rot theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta rotations reflections dimensional point groups scales attributes 
rot theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta derived context obtained plain scaling 
sets theta gm gm corresponding derived context theta gm fmg theta mm called scales ssm subset induces subcontext valued context derived context 
exploration valued attributes respect plain scaling understood exploration 
generalize consider exploration context attribute exploration additional restriction models choosen context called frame context 
covered general approach developed frame context defined universal clauses 
frame context modest size accessible computation process quite obvious unnecessary store lists universal existential clauses 
contexts bookkeeping context potential examples context examples encoding attributes examples known 
abbreviation fm second context examples encoding attributes examples known 
abbreviation fm initially contain frame context corresponding valued context 
existential clause include new object universal clause causes modifications 
objects removed models 
incidence relations modified encode consequences clause 
precisely perform steps 

set objects replaced subset fg incidence relation restricted subset 

fg replaced 
fg replaced difficult see operators defined defined terms contexts 
ii iterated step exploration procedure find smallest ii exists exploration process terminates largest implicational theory subcontext frame context implicational consequences universal clauses compatible existential clauses 
ii question asked 
user react giving admissible universal clause leads modification described giving admissible existential clause leads extension contexts new object fg ng fg ng rot rot gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma rot maximal order rotation number directions reflection axes number directions axes rot maximal order rotation incident reflection axis maximal order rotation non incident reflection axis reflection 
dimensional groups 
example demonstrate methods consider classification twodimensional groups 
known exactly seventeen groups classified attributes describing rotations reflections glide reflections combinations 
list hahn see wille concept lattice 
table viewed valued context 
plain scaling scales may precisely rot scale fits attributes rot rot scale suited proof list complete difficult 
tedious skipped textbooks 
outline proof organized automatically techniques 
note intend give automatic proof 
mathematical argumentation touched purpose algorithm support case analysis 
classification proof show contains cases entry corresponds unique solution 
brevity treat part 
example particularly simple insofar complete list examples 
implies contexts defined previous section equal derived context remain unchanged 
existential clauses play role 
task find base propositional theory examples 
propositions base require proof proved classification complete 
example lemma apply algorithm described section confirming suggested implications 
yields implicational base prove classification showing implications holds groups 
turns implicational base consists implications 
pleasant idea organize proof dividing cases 
valued approach developed section situation improves slightly 
frame context scales having delta objects small 
implicational base frame consists implications better large 
way proceed reduce size frame context adding universal statements 
loosely speaking simplify problem telling algorithm know return told remains proved 
implementation returns addition list cases excluded 
usually states obvious propositions 
clearly rotation center incident mirror axes 
including information reduces frame context example objects size relative implicational base 
systematic way find propositions easy prove restrict small subsets attribute set 
give example 
select columns consider derived subcontext scaling concept lattice implicational base see 
implications obviously true groups 
reduce number open implications 
may repeated choices attributes 
hope trivial aspects eliminated implicational base reduced essential problems require nontrivial argument 
example comparing attribute rot attribute number open cases reduces implications remain proved 

sincere beautiful programs 
gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta gamma gamma delta delta delta delta delta delta delta delta delta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma interplay mirror glide reflections 
left concept lattice group names omitted right implicational base relative 
rot gamma rot rot gamma rot gamma rot implications remain proved 
confident tool describe potential supporting mathematical knowledge processing 
apparent limitations method restricted specific kind knowledge due complexity reasons feasible projects modest size 
boundary may useful handle portions mathematical knowledge 
plain attribute exploration wei completely explored implicational theory frequently attributes finite lattices 
baader solved representation problem description logics exploration technique 
applied method find axiom systems certain relational structures linguistic classification characterizations literature stated theorems 
worked generalization combining approach including elements predicate logic 
said expect method replace creative mathematical 
may ease handling steps mathematical considered trivial tedious 
franz baader 
computing minimal representation subsumption lattice conjunctions concepts defined terminology 
preprint 
peter burmeister 
bei wissen 
lex ed 
und intelligenz 
informatik bericht tu 
bernhard ganter rudolf wille formale mathematische grundlagen 
springer verlag heidelberg 
theo hahn ed international tables crystallography 
reidel dordrecht boston 

vincent 
implications resultant un tableau de donn ees 
math 
sci 

david maier 
theory relational data bases 
computer science press rockville 
nowak 
conceptual knowledge preference 
draft notes 
stefan wolfgang wei 
properties finite lattices 
diplomarbeit th darmstadt 
gerd stumme 
attribute exploration background implications exceptions 
hans herrmann bock wolfgang editors 
data analysis information systems 
springer berlin heidelberg new york pp 
ff 
marcel wild 
theory finite closure spaces implications 
advances mathematics 
rudolf wille 
von 
bernhard ganter rudolf wille karl erich wolff eds 
age zur 
mannheim 
monika 
rule exploration order logic formal concept analysis 
dissertation th darmstadt 

