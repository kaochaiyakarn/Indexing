genetic programming produced competitive soccer softbot teams robocup sean luke cs umd edu www cs umd edu department computer science university maryland college park md robocup teams autonomous robots software softbots compete simulated demonstrate cooperative robotics techniques difficult real time noisy environment 
ijcai robocup softbot competition entries human crafted cooperative decision making behaviors 
entered softbot team high level decision making behaviors entirely evolved genetic programming 
team won games human crafted opponent teams received robocup scientific challenge award 
report discusses issues faced approach took gp evolve robot soccer team difficult environment 
robocup competition pits teams robots robotic soccer tournament kitano 
successful robocup team robotic soccer players able cooperate real time noisy environment opposing team 
addition real robot leagues robocup softbot league competes inside provided soccer simulator robocup soccer server 
simulator enforces extremely limited noisy sensor information complex physics real time dynamics limited softbots 
result challenging real time domain 
practically entrants robocup simulator league hand strategy algorithms low level functions ball interception backpropagation decision trees 
contrast university maryland group undergraduates entered softbot team high level strategies entirely learned genetic programming luke 
teams refined understood robotics techniques order win competition saw robocup simulator difficult environment push bounds possible existing evolutionary computation techniques 
variety reasons detailed soccer simulator difficult evolve 
goal relatively modest produce team played 
turned pleasantly surprised results 
evolved teams learned disperse field pass kick goal defend goal coordinate defer teammates 
ijcai robocup competition team managed win matches human coded opponents took home robocup scientific challenge award 
robocup soccer server domain genetic programming successfully applied multiagent coordination 
andre evolved communication agents different skills 
evolved agent communication cooperative avoidance domain 
gp evolve cooperative sporting strategies luke spector haynes gp develop cooperation predator prey environments :10.1.1.29.6914
iba applied similar approach cooperative behavior tileworld domain 
evolutionary computation rarely applied problem domain difficulty 
robocup soccer server ci etl go jp noda soccer server html designed gp mind 
realize soccer server presents challenge evolutionary computation gp specific important understand domain works 
full match soccer server admits eleven separate player programs team controlling different virtual soccer player simulation model 
regulation rules player programs separate processes permitted communicate limited facilities provided soccer server 
player team separate socket connection simulator 
connected player program receives udp datagrams milliseconds providing sensor information messages players field 
player issues commands server sending udp datagram messages faster milliseconds 
commands queued player issues commands faster simply ignored server 
server updates internal world model milliseconds places real time restriction speed play 
simulator maintains virtual soccer field units long units wide goals units wide 
sensor information relays game status relative positions viewable objects field 
useful sensor option players competition gives direction distance objects player see 
players may choose narrow degrees medium degrees competitors chose wide degrees fields view wider range slowly sensor updates received 
sensor information includes ball position relative movement 
positions relative movement players 
players far away units jersey numbers ascertained 
players far away units team re determined 
goal positions 
position flags placed corners field edges field midpoint 
distance perceived angle soccer field boundary line crossing player field vision 
state ball play including free goal side corner kicks bounds pre game mid game setup sensing complicated ways 
coordinate positions objects relative player position direction facing server tell player information whereabouts 
second server gives information object closer units player field view widest degrees 
third simulator adds sensor positional information heavy dose gaussian noise noise increases distance object increases 
player movement nonholonomic players turn dash time things messy 
sensor information movement subject great deal noise 
movement cycle player may issue commands rotate degrees current facing direction 
dash direction facing power 
player repeatedly dash keep forward movement 
decreases stamina players dash high power soon start running slower realize 
player told current stamina fast currently running 
players may dash backwards third maximum power 
kick ball certain direction relative direction player facing certain power 
players kick ball units away 
message bytes long 
strong limitations 
messages may infrequently fellow players hear messages sensor cycle 
players aren told came faked opponents 
move player specific coordinate position facing specific angle 
permitted ball play 
play happens real time 
player process sensor information moves fast fall 
soccer server maintains complex dynamics moving objects 
balls players acceleration momentum immediately change direction move certain velocity command 
players ball different mass move different rates ball move faster 
players take space collide ball players 
team possession ball goal kick server bumps opposing players general ball area 
competition simulator provide wind complicating conditions 
simulator enforces standard soccer rules large exception robot players hands goalie goalie area 
ball kicked ball control transferred opponents ball moved appropriate kick position regulation rules 
goals scored ball passes goal line 
server allows human referee foul calls play example entire team lining block goal 
challenge evolutionary computation obvious description soccer server domain complex large number options controls correspondingly large number boundary conditions special cases accounted 
tough problem tackle gp 
soccer server complex dynamics didn evolving robot team hard server adds enormously problematic issue time 
provided soccer server runs real time players connect separate udp sockets 
enforced millisecond delay world model updates full game takes minutes play 
game play sped hacking server players unified program removing udp eliminating millisecond delay 
reasons increase speed dramatically imagined carefully done runs risk changing game dynamics changing game optimize 
reason problem evolving computer program successfully domain require large number evaluations new evaluation soccer simulator trial 
previous experiments considerably simpler cooperation domains luke spector genetic programming require order evaluations find reasonable solution :10.1.1.29.6914
suspected soccer domain worse 
consider just evaluations serial soccer server require full year evolution time 
challenge cut years weeks months produce relatively playing soccer team evolutionary runs 
accomplished ways brute force 
sped play performing full team game parallel supercomputer cluster 
cut game time minutes seconds minute 
attempted cut population size number generations necessary produce reasonable team 
developed additional layer software simplified orthogonalized domain eliminating boundary conditions gp programs account 
spent time designing function set evaluation criteria promote better evolution domain 
performed parallel runs different genome structures give options competition time 
genetic programming evolve soccer behaviors soccer simulator dynamics quite complex began hand coding multithreaded socket library abstracted away domain 
library received incoming sensor information absolute position visible teammates opponents player ball goals 
included simple state estimation mechanism interpolated teammate opponent positions sensor cycles maintained estimates player stamina 
domain provided information ball free kicks goal kicks information largely unused simulator keep players kick area anyway 
decided ignore complexities domain eliminated ability listen 
significant changes traditional gp genome 
player algorithm consisting single tree players consisted algorithm trees 
tree responsible moving player evaluated output vector gave direction speed turn dash 
second tree responsible making kicks output vector gave direction power kick ball 
evaluation time program executing player moves follow instructions tree simplifying state rules player see ball close kick ball call kick tree 
kick ball told moving player slightly way necessary 
turn direction ball kicked 
player see ball isn close kick call move tree 
turn dash told player continue watch ball doing dash moving reverse 
player see ball turn direction turned player see 
state great troublesome boundary conditions 
combining movement turn dash pairs allowed gp tree function set assume player holonomic movement ability move immediately direction 
second doing reasonable keep ball view able eliminate boundary conditions occur ball suddenly disappears due arbitrary player movement big problem early tests 
evolving team create set lowlevel basic behavior functions players 
required compromise 
ideally liked produce soccer players variety low level generic vector functions 
allowed say way bias function set produce certain kinds strategies 
early tests suggested domain complex little hope evolving team kind function set 
designed large set functions generic specialized thought particular utility soccer domain 
doing tried stay general possible come function set thought stood chance evolving successfully 
function syntax returns description home vector home starting position 
ball vector ball 
zero length vector ball 
block goal vector closest point line segment ball goal defend 
away mates vector away known teammates computed inverse vectors teammates max away vector away known opponents computed inverse vectors opponents max squad am squad nil 
opp closer opponent closer ball am nil 
mate closer teammate closer ball am nil 
home vector home teammate 
block near opp vector closest point line segment ball nearest known opponent known opponent return 
mate vector teammate see return 
inv rotated degrees 
return return 
sight rotate just keep ball sight 
return ball max units nil 
return ball max units home nil 
return ball max units goal nil 
weight return 
far mate vector offensive positioned teammate receive ball probability 
return 
mate vector teammate position known receive ball probability 
return 
kick goal vector goal kick successful probability 
return 
dribble dribble kick size max direction 
kick goal 
kick goal 
far mate 
kick offensive positioned teammate 
kick goal 
kick clear kick goal area 
kick opponents computed away adjust direction degrees goal defend 
kick return return 
opponent close return opponent max constant integer values 
table gp functions soccer evaluation runs 
functions tried final runs included internal state magnitude cross product comparison angle rotation boolean operators move history max approximate maximum distance kicking set 
kick vector move vector integer boolean 
vectors kicking moving pair floating point values 
achieve strongly typed gp montana provide variety different types data booleans vectors accepted returned gp functions restricting tree formation conform type rules 
allowed include large rich set gp functions allowing player options constrain possible permutations function combinations 
table gives basic functions provided gp system build gp trees 
decided early enrich basic function set vector operators control constructs relatively domain specific behavior functions 
behaviors derived directly soccer server sensor information 
included vector functions kick goal home 
behaviors important include hand coded evolving unsuccessful limited time constraints 
included ball interception surprisingly complex task formed ball moving optimally point objects forming block near opp example 
genetic programming evolve low level behaviors 
notably charles symbolic regression evolve functions determining probability successful goal kick pass teammate opponents various positions 
symbolic regression data points generated playing actual trials soccer server kicker receiver opponent teammate pass trials just kicker opponent goal kick trials 
evolved algorithms basic probabilistic mechanism decision making functions kick goal mate far mate 
basic function set variety ways genetic programming evolve soccer team 
obvious approach form teams populations individual players 
difficulty approach introduces credit assignment problem team wins loses blame credit spread various teammates 
took different approach widely gp tried luke spector genetic programming genome entire team players team stay evaluations breeding :10.1.1.29.6914
raises question homogenous heterogeneous team approach 
homogenous team approach soccer player follow effectively algorithm gp genome single kick move tree pair teammates play 
heterogeneous approach soccer player develop follow unique algorithm gp genome just kick move tree pair forest pairs pair player 
domain heterogeneity useful heterogeneous approach provides considerably flexibility promise specialized behaviors coordination 
homogenous approaches take far time evolve require evolving single algorithm case eleven algorithms 
move tree kick tree move tree kick tree team members players squad move tree kick tree players squad move tree kick tree players squad 
homogenous pseudo heterogeneous squad homogeneous pseudo heterogeneous genome encodings 
implement fully heterogeneous approach soccer domain necessitate evolving genome consisting separate gp trees far felt reasonably evolve time available 
ran separate runs homogeneous teams hybrid teams see 
hybrid teams divided players squad evolved separate algorithm players squad 
way pseudo heterogeneous teams genomes twelve trees 
player develop unique behavior function set included functions player distinguish 
ran separate runs different approaches increase chance having show robocup discussed concern justified 
genomes consisted forests trees adapted gp crossover mutation operators accommodate 
runs crossover mutation apply single tree genome 
homogeneous pseudo heterogeneous approaches disallowed crossover kick tree move tree 
approaches allowed trees cross squad restricted breeding previous experience proven useful promoting specialization luke spector :10.1.1.29.6914
introduced special crossover operator root crossover swapped trees root swapping subtrees 
teams effectively trade players hoped spread strategies population rapidly 
reduce run time population sizes final run 
felt small populations problem complexity necessitated somewhat unusual mix breeding operators 
consequence findings luke spector decided large dose mutation final run produce higher fitness small population premature convergence 
rest consisted subtree crossover choosing internal nodes time competition initial random randomly moving teams 
leaf nodes time performing root crossover time 
tournament selection tournament size 
issue evaluation function needed assess genome fitness 
way assess team play team hand created opponent teams known difficulty 
problems approach 
experience evolutionary computation strategies efficiently difficulty problem ramps evolution progresses population gets better problem gets harder 
suite pre created opponents difficult gauge 
second opponents particular difficulty level runs common risk evolving team optimized beat particular set hand opponents generalizing play soccer 
opted evolving teams competitive fitness teams fitnesses assessed competition peers population survey environments see angeline pollack 
variety approaches creating competitions 
approach create round robin tournament team population squares team 
approach expensive evaluations population size fit evolution umbrella 
theoretical biology definition evolution term species fuzzy late 
originally evolution describe environment think term carries just inter species multi population baggage 
competitive fitness precise 
soccer problematic early suboptimal strategy team go ball try kick goal 
careful tuning populations escape 
approach traditional single double elimination tournament evaluations best 
extreme cost evaluations opted randomly pair teams basing team fitness single game pair played evaluations 
competitive fitness functions chaotic occasionally undesirable effects population useful fit naturally competitive domain robotic soccer 
competitive fitness functions naturally ramp problem difficulty teams population play peers approximately similar ability 
functions promote generalization set possible opponents individual face population 
initially fitness variety game factors including number goals time possession ball average position ball number successful passes early runs entire population converge poor solutions 
ultimately simply basing fitness goal difference population avoided convergence 
glance simplistic fitness assessment overly crude measure early games scores 
luckily turned untrue 
discovered initial game scores fact high quite variable vectors ball goal fundamental parts function set teams simple defense poorly 
teams evolved better players hang back protect goal chase ball 
sive strategies scores come reasonable levels 
performed gp runs parallel custom strongly typed multithreaded version lil gp zongker punch running node dec alpha supercomputer 
evaluation time system paired competitors formed pairs groups assigned group separate evaluation thread 
parallel evaluation threads socket communication library pair teams play competitions separate soccer server processes 
point felt need population global searches start narrowly tweaking best strategies date preparation competition 
ran final runs generations time reintroduced population high fitness individuals past generations added reproduction mutation crossover 
intent unusual step force population rapidly converge narrow set 
continued runs time robocup competition twelve generations 
just prior competition held tournament champions highest performing teams point submitted winner 
feel evolution time learned strategies teams ultimately outperform homogeneous teams best teams competition time including submitted homogeneous 
teams eventually learn disperse field 
history evolution fun parts working domain watching population learn 
typical gp experiment conduct large number runs provides statistically meaningful analysis population growth change 
obvious reasons possible 
shot nature robocup runs final run took months time observations population development admittedly anecdotal 
observed interesting trends 
initial random teams consisted primarily players place ball chased teammates 
ball kick goal 
basic functions occasional players go ball kick goal 
players helped teams rack scores opponents 
shows random teams playing 
early populations produced sorts bizarre strategies 
particular favorite homogeneous competition team programmed move away ball team programmed move away team 
strategies didn generations 
suboptimal strategy particularly troublesome chase ball kick goal known soccer shown 
strategy gained dominance early teams effectively defensive ability 
soccer proved major obstacle evolving better strategies 
overwhelming tendency converge soccer similar strategies chief reason simplification evaluation function goals scored 
simplified evaluation function population eventually way soccer better strategies 
number generations population began develop rudimentary defensive ability 
common approach noted players hang back near goal close ball 
teams players clumped ball soccer style simple defensive moves effectively eliminated long distance goal shots created high scores past 
eventually teams began disperse players field pass teammates appropriate kicking straight goal shown 
homogeneous teams usually players home positions information nearby teammates ball position 
pseudo heterogeneous teams appeared forming separate offensive defensive squad algorithms 
pseudo heterogeneous teams sufficiently fit time robocup arrived suspect time approach ultimately yielded better strategies 
project begun see possible successfully evolve team challenging domain robocup soccer server 
richness soccer server environment long run time required get reasonable results pleased outcome 
evolved softbots learned play constraints place evolution beat teams crafted hand real human experts weren 
think experiment success 
compromise order project reality 
function set provided heavy statements functional operation little internal state 
hope try computationally sophisticated algorithms 
competition mechanism game individual restrictive think tournament yield better results 
population sizes small enlarging significant impact evolutionary progress 
unfortunate pseudo heterogeneous teams outperform homogeneous teams robocup competition time 
due excessive size pseudo heterogeneous genomes smaller full heterogeneous genomes 
hindsight 
definitely pick larger squad sizes 
bring total number trees genome evolve rapidly 
past genetic programming surprisingly successful variety areas real time robotics 
dynamics field plus long time necessary perform evaluations robotics realistic simulator robotics difficult problem evolutionary computation crack 
impossible problem 
hope puts rest myth genetic programming compare favorably human crafted solutions toy domains problems tailor constraints evolution 
research supported part dr james hendler onr afosr arl daah arpa contract dast 
maryland robocup team help development project charles jonathan gary jackson daniel john peterson shu choudhury 
jim hendler lee spector kilian bob hiroaki kitano minoru asada umiacs system staff turning heads played soccer games supercomputers 
andre 
automatic programming agents learn mental models create simple plans action 
proceedings fourteenth international joint conference artificial intelligence mellish ed 

morgan kaufmann san mateo ca 
angeline pollack 
competitive environments evolve better complex tasks 
proceedings fifth international conference genetic algorithms forrest ed 

morgan kaufmann san mateo ca 
haynes sen wainwright 

evolving team 
working notes aaai fall symposium genetic programming 
siegel koza editors 

aaai press 

evolving predictive functions observed data simulated robots 
senior honor thesis 
department computer science university maryland college park 
holland 
adaption natural artificial systems 
university michigan press 
iba 
emergent cooperation multiple agents genetic programming 
late breaking papers genetic programming conference koza ed 

stanford university bookstore stanford ca 

soccer server simulator robocup 
ai symposium special session robocup 
kitano asada kuniyoshi noda osawa 

robocup robot world cup initiative 
proceedings ijcai workshop entertainment ai alife 
koza 
genetic programming programming computers means natural selection 
mit press cambridge ma 
luke spector 

evolving teamwork coordination genetic programming 
proceedings annual conference genetic programming gp koza eds 

mit press cambridge ma 
luke 
evolving soccer softbot team coordination genetic programming 
proceedings robocup workshop th international joint conference artificial intelligence ijcai 
kitano ed 

ijcai 
luke spector 

comparison crossover mutation genetic programming 
genetic programming proceedings second annual conference gp 
koza eds 

san fransisco morgan kaufmann 
montana 
strongly typed genetic programming 
evolutionary computation 

mit press cambridge ma 


evolution sporting strategies 
complex systems mechanisms adaption yu eds 

ios press amsterdam 

evolving agents 
proceedings annual conference genetic programming gp koza eds 

mit press cambridge ma 
zongker punch 

lil gp user manual 
available isl cps msu edu ga software lil gp 
