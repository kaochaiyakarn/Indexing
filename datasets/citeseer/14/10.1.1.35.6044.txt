short random walks graphs greg barnes feige 
short term behavior random walks graphs studied particular rate random walk discovers new vertices edges 
conjecture linial expected time find distinct vertices proved 
addition upper bound expected time traverse edges mn expected time visit vertices traverse edges whichever comes proved 
key words 
random walk graph markov chain ams subject classification 


consider simple random walk undirected graph vertices edges 
time step walk vertex moves vertex chosen uniformly random neighbors random walks studied extensively numerous applications theoretical computer science including space efficient algorithms undirected connectivity derandomization recycling random bits approximation algorithms efficient constructions cryptography self stabilizing distributed computing 
frequently see example karger nisan interested expected time simple random walk undirected connected graph visits th distinct vertex corresponding question edges interesting arises broder large expected time simple random walk undirected connected graph traverses th distinct edge 
gives upper bounds arbitrary graphs 
great deal previously known quickly random walk covers entire graph see example little known behavior random walk vertices covered 
bounds help fill gaps knowledge random walks giving picture rate random walk explores finite infinite graph 
aleliunas show expected time visit vertices arbitrary graph called cover time mn 
bound linial derives bound general lemma 
linial personal communication conjectures cover time bound generalizes 
prove linial conjecture 
theorem 
connected graph vertices portions performed authors ibm watson research center yorktown heights ny 
department computer science university waterloo waterloo ontario canada plg uwaterloo ca 
supported nserc international fellowship 
portions performed author max planck institut fur informatik saarbrucken germany 
department applied mathematics weizmann institute rehovot israel feige wisdom weizmann ac il 
supported foundation fellowship 
barnes feige zuckerman proves upper bound mn time traverse edges general graph 
unaware previous nontrivial bounds prove theorem 
connected graph edges theorem holds simple graph allow self loops parallel edges 
expected time simple random walk traverse distinct edges visit distinct vertices whichever comes 
theorem implies theorems considering respectively 
theorem 
connected graph edges vertices mn theorems graph need finite 
graph infinitely vertices vertex finite degree consider finite portion distance starting vertex random walk proofs remain unchanged 
finite graphs theorem serves complete picture rate vertices edges discovered 
provides better bounds theorems number vertices discovered larger number edges discovered larger theorem 
simple connected graph vertices edges mn nm theorems best possible sense exist graphs bounds tight constant factors cycle theorem 
bounds refined additional information regarding structure 
kahn indicates dmin minimum degree vertices graph useful parameter consider 
show expected cover time connected graph mn dmin implying cover time regular graphs 
inverse dependency dmin applies short random walks 
preliminary results direction tight logarithmic factor earlier version 
superfluous logarithmic factor results subsequently removed feige building proof techniques developed aldous 
aldous writing textbook giving short random walks systematic account random walks graphs reversible markov chains 
current draft contains results similar regular graph setting 
short term behavior random walks worth studying right short random walks immediate applications areas computer science 
results course applied areas 
example stronger results known properties short random walks special class graphs known expanders see example ajtai jerrum sinclair 
hope results dramatically improve algorithms karger nisan undirected connectivity 
mentioned require estimate estimate 
unfortunately substituting bound improves constants algorithms running times depend logarithm 
results may yield significant improvements randomized algorithms 
particular consider randomized time space tradeoffs undirected connectivity studied broder 
key property broder algorithm short random walk edge traverses edges 
improved bounds provide improvement tradeoff 
partial results direction earlier version improvements feige 

proofs theorems 
proofs theorems best read order 
proof theorem introduces proof techniques subsequent proofs 
proof theorem simple modification proof technique 
proof theorem introduces additional subtleties 
reason stated theorems explicitly presenting corollaries theorem 
proof theorem slight modification proofs theorems 
proof 
theorem assume proof follows aleliunas bound mn 
view random walk proceeding phases 
phase identify described set vertices ae starting vertex vertex visited phase gamma 
phase starts random walk ends random walk exits show expected number steps taken phase phase distinct vertices visited 
phases needed visit distinct vertices proving linearity expectation 
simplify presentation assume contains hamiltonian cycle 
case hamiltonian cycle slightly complicated addressed 
arrangement vertices hamiltonian cycle 
phase identify vertices sets vertices 
starting vertex vertex walk phase gamma ended 
starting vertex random walk 
right vertex vertex cyclic order imposed hamiltonian cycle 
visited vertices set ae vertices visited previous steps walk 
note vertices set vertices sets barnes feige denotes set elements property set consecutive vertices fv gamma hamiltonian cycle 
convention interpreted gamman jr vertex phase starting walking hamiltonian cycle half vertices discovered new 
holds number steps walk walking completely cycle 
bad vertices vertices 
denote set 
lemma gives bound jb lemma 
jy jb jy proof 
proof induction jy jy jb consecutive set vertices starting unvisited vertex majority vertices set visited 
assume lemma true jy prove jy 
consider ring vertices visited vertices 
exists visited vertex right unvisited vertex remove ring linking left neighbor right neighbor obvious way 
decreased jy decreased 
induction hypothesis holds gamma bad vertices 
put back ring restore values jy previously vertex bad consecutive set vertices starts unvisited vertex includes contain 
bad vertex possibly added resulting desired bound bad vertices 
fr phase random walk vertex phase ends random walk exits denote number steps taken phase lemma 

jy proof 
lemma jv jy jb follows jv jy phase ends edge leading taken 
edge edge connecting hamiltonian cycle 
claim remove edges leading expected time leave remains 
suppose wish remove single edge removing create new auxiliary vertex connect change 
denote number steps taken exit fwg counting steps traverse edge direction 

remove completely observe expected time leave remains 
removing edges fs leading left subgraph induced edge denote number edges subgraph 
observe jv 
lemma trivially holds 
walk phase starts edge connecting expected time reach 
known 
see example aleliunas 
bounded duration phase 
remains bound number phases 
lemma 
phases distinct vertices visited 
proof 
observe phase ends walking vertex hamiltonian cycle jumping vertex 
sequence short random walks starting vertices visited walk partition subsequences follows subsequence begins begins new subsequence phase gamma gamma subsequence begins vertex half vertices visited new 
note definition vertices possible may consecutive phases walk new vertex visited 
occur earlier subsequence phases new vertex visited 
breaking walk subsequences amounts amortizing cost phases new vertex earlier phases subsequence 
hamiltonian cycle completes proof jy hamiltonian cycle known lemma lemma 
connected graph cyclic ordering vertices wn distance length shortest path vertex successor 
proof 
span spanning tree traverse span depth search fashion vertices distance root advance leaves vertices odd distance root backtrack 
wn vertex ordering derived traversal th vertex visited traversal 
wn neighbor root span distance ring obtained lemma place hamiltonian cycle expected time leave times large affecting constants involved 
proof 
theorem lemma show way arrange vertices connected graph cyclic order 
arranging edges cyclic order simpler 
view undirected edge anti parallel directed edges directed edges anti parallel endpoints directed directed 
number directed edges entering vertex equal number directed edges leaving 
directed graph eulerian eulerian cycle 
eulerian cycle induces cyclic ordering directed edges replace hamiltonian cycle proof theorem 
proof technique theorem applied prove theorem directed edges replacing vertices straightforward manner 
edges lemma strengthened phase set set edges set vertices expected time leave jv jv yields bound 
proof 
theorem assume 
proof case simpler 
see example part proof theorem 
proof theorem view random walk proceeding phases 
phase identify described set vertices ae set edges ae starting vertex vertex barnes feige visited phase gamma 
phase starts random walk phase ends random walk exits subgraph 
phases unvisited outgoing edges walk returns walk ends vertices edges visited 
necessarily correspond fixed number phases making analysis expected number steps taken walk subtler analysis proof theorem completion phases guaranteed walk 
view undirected edge anti parallel directed edges 
observe traversing gamma distinct directed edges guarantees distinct original undirected edges traversed 
set outgoing edges vertex denoted 
arrangement vertices ring obtained lemma 
phase identify vertices sets vertices edges 
starting vertex vertex walk phase gamma ended 
starting vertex random walk 
right vertex vertex ring vertices 
traversed edges set ae edges traversed previous steps walk 
visited vertices set vertices visited previous steps walk 
note exhausted vertices set vertices half outedges traversed previous steps walk 
vertices set vertices property proof theorem set consecutive vertices fv gamma ring vertices 
define max dd gamma jf number outedges traversed exhausted 
vertex vk rv jr note visited vertex exhausted vertex 
note vertex phase 
bad vertices set vertices 
edges set edges exit vertices 
bad edges set edges traversed 
informally definition vertices similar definition vertices proof theorem 
proof subsequence see proof lemma begins vertex progresses ring 
definition vertex ensures number previously unvisited vertices visited subsequence constant fraction number phases subsequence 
proof subsequence starts vertex walk progress ring current vertex exhausted 
definition vertices ensures number previously edges traversed subsequence times number exhausted vertices starting vertices phases subsequence 
property lemma bound number phases exhausted short random walks vertices 
lemma gives bound jc lemma 
jc jf jx 
particular jf jc 
proof 
consider ring vertices phase vertex max gamma jf mark outedges 
jf number edges marked jf show induction jx number marked edges bad jx 
total number bad edges claimed lemma 
bound number marked edges bad prove lemma 
lemma general necessary considers configurations marked edges exhausted vertices result random walks graphs configurations 
lemma 
consider ring vertices choose vertices arbitrary way mark exhausted 
distribute arbitrary number tokens vertices ring arbitrary way 
vertex bad number tokens encountered steps right including tokens times number exhausted vertices encountered walk 
token bad placed bad vertex 
number bad tokens 
proof 
induction values bad tokens lemma holds 
assume lemma true values prove arbitrary consider walk backwards ring exhausted vertex certain number steps ring walk encountered tokens 
vertex walk reaches th token 
tokens lemma trivially holds exhausted vertices exhausted vertex walk visits exhausted vertex vertex tokens encountered walk may include tokens placed 
remove ring tokens exhausted 
decreased 
induction hypothesis holds gamma bad tokens 
add tokens back ring mark exhausted restore value tokens may bad token previously bad bad walk includes include tokens 
number bad tokens increases proving lemma 
observe subset vertices vs vs 
considering marked edges tokens lemma bad marked edges bad tokens proof lemma follows 
definition subgraph stopping condition phase depends exhausted 
phase random walk vertex exhausted fs edges endpoints edges edges phase ends barnes feige random walk returns exits visiting vertex exhausted fr edges endpoints edges shortest path edges anti parallel edges path phase ends random walk exits visiting vertex fr denote number steps taken phase lemma 
phase begins vertex proof 
number edges number outedges vertices plus edges bad vertex bad traversed je jf jc 
lemma jf je 
known undirected graph edges expected time random walk starts vertex return 
equivalent undirected graph je edges directed edge edge anti parallel 
degree degree expected length phase begins vertex 
lemma 
phase begins exhausted vertex proof 
edges may outedges bad exhausted vertices edges path edges anti parallel edges 
construction ring vertices path length path exhausted vertex edges je jf jc 
proof similar proof lemma expected length phase distance times je bounded duration phase 
remains bound number phases 
call phases start vertices short phases phases start exhausted vertices long phases 
walk ends jy jf gamma 
considering directed edges ensure vertices visited undirected edges traversed 
analyze expected number phases walk consider stopping conditions 
distinct vertices starting vertices phases 
clearly implies vertices visited 

long phases 
implies edges visited lemma 
lemma 
long phases occur distinct vertices starting vertices long phases edges traversed 
proof 
similar proof lemma observe phase ends walking vertex ring returning starting vertex jumping vertex 
sequence starting vertices visited walk partition subsequences follows subsequence begins begins new subsequence phase gamma long gamma phase gamma short gamma subsequence begins vertex short phase continually exhausts current vertex steps vertex ring 
subsequence begins step completely ring return property subsequence phase edges traversed time phases short random walks th vertex appears starting vertex true definition vertex 
vertex associate edges traversed start phase subsequence associating edge vertex consider long phases 
start distinct vertices start vertex starting vertex previous long phase 
phase phase assume part subsequence begins phase exhausted phase begun implying identify edges traversed phases associate phase altogether long phases identify delta distinct traversed edges 
lemma long phases long phase takes expected time long phases contribute total nm expected number steps walk 
analyze contribution short phases denote th distinct vertex discovered walk denote expected number short phases start phase probability step walk traverses majority edges leading 

similar reasoning shows walk distinct outedges traversed 
expected number steps short phase follows wald equation see ross page example expected number steps spent short phases delta min 
short phases contribute total nm expected number steps walk 
proof 
theorem show mn distinguish cases 
case handled aleliunas show mn 
case consider proof theorem 
maximum distance consecutive vertices ring expected time phase proof follows 
show nm distinguish cases 
case handled zuckerman shows mn 
case consider proof theorem observe lemma order visit distinct edges suffices phases start exhausted vertices 
expected number steps spent phases start exhausted vertices mn 
likewise graph vertices expected number steps spent phases start vertices exhausted mn fact random walk may time vertices visited affect argument 
proof follows 

linial prabhakar raghavan larry ruzzo helpful discussions directing relevant literature 
barnes feige ajtai koml os szemer edi deterministic simulation logspace proceedings nineteenth annual acm symposium theory computing new york ny may pp 

aldous lower bounds covering times reversible markov chains random walks graphs journal theoretical probability pp 

reversible markov chains random walks graphs 
draft university california berkeley 
aleliunas karp lipton lov asz rackoff random walks universal traversal sequences complexity maze problems th annual symposium foundations computer science san juan puerto rico oct ieee pp 

barnes feige short random walks graphs proceedings fifth annual acm symposium theory computing san diego ca may pp 

broder hard marry random 
approximation permanent proceedings eighteenth annual acm symposium theory computing berkeley ca may pp 

errata proceedings twentieth annual acm symposium theory computing page chicago il may 
broder karlin bounds cover time journal theoretical probability pp 

broder karlin raghavan upfal trading space time undirected connectivity proceedings annual acm symposium theory computing seattle wa may pp 

chandra raghavan ruzzo smolensky tiwari electrical resistance graph captures commute cover times proceedings annual acm symposium theory computing seattle wa may pp 

cohen wigderson deterministic amplification weak random sources th annual symposium foundations computer science research triangle park nc oct ieee pp 

coppersmith winkler collisions random walks graph siam journal discrete mathematics pp 

dyer frieze kannan random polynomial time algorithm approximating volume convex bodies proceedings annual acm symposium theory computing seattle wa may pp 

feige randomized time space tradeoff proceedings th annual foundations computer science palo alto ca nov ieee pp 

goldreich impagliazzo levin venkatesan zuckerman security preserving amplification hardness proceedings st annual symposium foundations computer science st louis mo oct ieee pp 

impagliazzo zuckerman recycle random bits th annual symposium foundations computer science research triangle park nc oct ieee pp 

israeli token management schemes random walks yield self stabilizing mutual exclusion proceedings ninth annual acm symposium principles distributed computing quebec city quebec canada aug pp 

jerrum sinclair conductance rapid mixing property markov chains approximation permanent resolved proceedings twentieth annual acm symposium theory computing chicago il may pp 

kahn linial nisan saks cover time random walks graphs journal theoretical probability pp 

karger nisan parnas fast connected components algorithms erew pram proceedings acm symposium parallel algorithms architectures san diego ca june july pp 

nisan szemer edi wigderson undirected connectivity log space proceedings rd annual symposium foundations computer science pittsburgh pa oct ieee pp 

ross applied probability models optimization applications holden day san francisco ca 
zuckerman technique lower bounding cover time proceedings annual acm symposium theory computing baltimore md may short random walks pp 

time traverse edges graph information processing letters pp 

