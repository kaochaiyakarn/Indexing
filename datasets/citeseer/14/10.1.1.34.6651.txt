university alberta library release form name author denis richard papp title thesis dealing imperfect information poker degree master science year degree granted permission granted university alberta library reproduce single copies thesis lend sell copies private scholarly scientific research purposes 
author reserves publication rights association copyright thesis provided thesis substantial portion thereof may printed reproduced material form author prior written permission 
denis richard papp st edmonton alberta canada date 
university alberta dealing imperfect information poker denis richard papp thesis submitted faculty graduate studies research partial fulfillment requirements degree master science 
department computing science edmonton alberta fall university alberta faculty graduate studies research certify read recommend faculty graduate studies research acceptance thesis entitled dealing imperfect information poker submitted denis richard papp partial fulfillment requirements degree master science 
jonathan schaeffer 
duane szafron 
oliver schulte date 
poker provides excellent testbed studying decision making conditions uncertainty 
benefits gained designing experimenting poker programs 
game imperfect knowledge multiple competing agents understand estimation prediction risk management deception agent modeling 
new evaluation techniques estimating strength potential poker hand 
thesis describes implementation program successfully handles aspects game uses adaptive opponent modeling improve performance 
author acknowledge ffl big jonathan schaeffer excellent supervisor 
ffl billings time ideas insightful input 
ffl duane szafron contributing poker research group 
ffl national sciences engineering research council providing financial support 
people helped things easier knowledge ffl authors fast poker hand evaluation library clifford matthews roy hashimoto keith miyake mat 
library implementation certainly slower 
ftp ftp berkeley edu pub rec gambling poker poker tar gz 
ffl todd author dealer programs irc poker server possible 
www cs cmu edu people public html 
ffl michael maurer author perl player program basis loki interface irc dealer program 
nova stanford edu maurer 
ffl original authors helped pioneer interest irc poker playing programs provided additional data greg stephen greg reynolds 
extra greg reynolds handy windows poker client watching loki play lot user friendly 
stl com 
contents poker playing game 
ante 
deal 
betting 
showdown 
texas hold em 
humans play poker hand strength potential 
opponent modeling 
position 
odds 
pot odds 
implied odds reverse implied odds 
effective odds 
playing style 
deception unpredictability 
summary 
computers play poker expert systems 
game theoretic optimal strategies 
simulation enumeration 
findler 
system 

architecture 
summary 
hand evaluation pre flop evaluation 
hand strength 
multi player considerations 
hand potential 
multi player considerations 
summary 
betting strategy pre flop betting strategy 
basic post flop betting strategy 
effective hand strength 
semi bluffing 
calling pot odds 
calling showdown odds 
strategies 
summary 
opponent modeling representation 
weight array 
action frequencies 
learning 
re weighting system 
pre flop re weighting 
post flop re weighting 
modeling abstraction 
model 
field array 
summary 
experiments self play simulations 
experiments 
betting strategy experiments 
opponent modeling experiments 
generic opponent modeling gom 
specific opponent modeling som 
summary 
bibliography pre flop income rates expert defined values glossary list figures example expert knowledge system 
branching factor structured betting texas hold em maximum bets round 
loki architecture 
calculation 
calculation 
pre flop betting strategy 
simple betting strategy 
post flop betting strategy 
re weighting function code 
re weighting function 
post flop re weighting function 
re weighting function oe 
central opponent modeling function 
betting strategy experiment 
showdown odds experiment 
generic opponent modeling experiment 
specific opponent modeling experiment 
list tables unweighted potential 
seating assignments tournament play reproduced :10.1.1.21.7204
ir income rates opponent 
ir income rates opponents 
ir income rates opponents 
comparison sm ir 
values base increment 
default frequencies 
chapter game playing ideal environment examining complex topics machine intelligence games generally defined rules goals 
additionally performance progress easily measured 
field computer game playing traditionally concentrated studying chess deterministic zero sum games perfect information checkers othello 
games players complete knowledge entire game state visible participants 
high performance achieved brute force search game trees exceptions game go game tree far large 
advances computer science especially searching resulted little learned decision making conditions uncertainty 
tackle problem understand estimation prediction risk management implications multiple opponents deception counter deception deduction decision making models players 
knowledge gained studying imperfect information games bridge poker players cards known search insufficient play games 
poker particular popular fascinating game 
multi player zero sum game imperfect information 
rules simple game strategically complex 
emphasizes long term money management session contiguous interdependent games ability recognize potential specific game maximize gain minimize loss 
games analogical aspect real life poker compared policy decisions commercial enterprises political campaigns 
poker number attributes interesting domain research 
include multiple competing agents players imperfect knowledge opponents hold hidden cards risk management betting strategies consequences agent modeling detecting exploiting patterns errors play players deception bluffing varying style play dealing unreliable information opponents deceptive plays 
challenging dimensions difficult problem 
certain aspects poker extensively studied mathematicians economists 
main approaches poker research 
approach simplified variants easier analyze 
example players constrain betting rules 
careful simplification remove challenging components problem 
approach pick real variant combine mathematical analysis simulation ad hoc expert experience 
expert players mathematical skills usually involved approach 
little done computing scientists 
nicolas findler worked years poker playing program card draw focused simulating thought processes human players achieved program capable defeating strong player 
koller pfeffer investigated poker theoretical point view 
implemented practical algorithm finding optimal randomized strategies player imperfect information competitive games 
system win set bad players set perfect players failing exploit property human players mistakes presumes opponent plays best strategy 
interesting aspects poker research opponent modeling examined 
attempted player games generalization minimax limited success 
part reason games chess opponent modeling critical computers achieve high performance 
poker essential best results 
working assumption opponents mistakes exhibit predictability opponent modeling accounted built program framework 
long term goal produce high performance poker program capable beating best human players step interested constructing framework useful computer oriented techniques 
minimize human expert information easily allow opponent modeling system strong computer poker program 
successful insights gain wide applicability applications require similar activities 
new enumeration techniques determining strength potential player hand demonstrate working program successfully plays real poker demonstrate opponent modeling result significant improvement performance 
chapter introduce terminology glossary appendix give rules poker texas hold em poker variant chosen study 
chapter describes humans play poker 
chapter discusses various ways approach problem computer details architecture selected 
chapter describes enumeration techniques hand evaluation 
chapter describes betting strategy 
chapter details opponent modeling system 
chapter discusses experimental system results 
chapter discusses 
parts chapters published advances artificial intelligence parts chapter published aaai 
poker playing program called loki demonstrated aaai 
written runs real time constraints typical play action take seconds 
primary mechanism performance testing self play play human opponents internet poker server 
interface program server written perl 
chapter poker poker set multi player card games standard deck cards typically played session consisting sequential series multiple games called deals hands 
player begins session certain amount chips equated money 
poker zero sum game player gain loss long term goal net positive amount chips 
accomplished maximizing winnings individual game session 
numerous variants poker 
chapter covers basic structure defines majority variants describes specific variant texas hold em 
note symbols ffl standard deck cards suits ranks suit 
ffl card ranks symbols jack queen king ace 
ffl card suits symbols diamonds clubs hearts 
ffl single card represented pair symbols diamonds clubs 
ffl set cards represented list separated dashes clubs 
playing game game composed rounds turn involve dealing number cards followed betting 
continues active player left game betting rounds completed 
case game enters showdown determine winner 
betting involves player contributing equal amount money pot 
amount grows game proceeds player may fold time means lose money contributed longer eligible win pot 
players fold remaining player wins pot 
game proceeds showdown highest ranked set cards held player highest hand wins pot ties possible case pot split 
note poker full ambiguous terminology example word hand refers game poker player cards 
ante initial deal participating players required blindly contribute fixed amount money ante pot 
variants alternative system players immediately rotating dealer called button forced put fixed size bets called blinds 
forced bets risk minimized playing best hand game uninteresting 
deal round begins randomly dealing number cards non deterministic element poker 
variants community cards shared players 
player receives number cards face known player face known players 
possible dealing steps drawing discarding replacing face cards rolling revealing face cards 
face cards imperfect information poker 
player knows cards opponents 
variant defined script specifies number rounds dealing actions taken round 
script entry round variant recall series betting occurs round 
scripts known poker variants card draw betting rounds ffl deal cards face player ffl player discards cards receives number new face cards 
card stud betting rounds ffl cards face face player ffl face player ffl face player ffl face player ffl face player betting betting portion poker multi round sequence player actions termination condition satisfied 
probability winning game depends solely nature deal cards 
betting increases pot indirectly gives information players hands 
playing opponents pay attention actions players betting give misinformation element deception poker 
betting order players fixed seating order table virtual environment set players referred table 
dealer button rotates clockwise fashion betting actions 
betting begins act games active player button stud games face cards usually player highest ranked cards showing 
betting proceeds table involving active players active player 
termination condition betting continues sequentially table active players contributed equal amount pot active player remaining game proceeds round defined script 
final round remaining players enter showdown 
note players opportunity act betting terminated allows case players equally contributed 
forced put blind bet pot count having opportunity act 
limit number raises increments contribution amount artificially forces betting 
betting actions situations player different actions choose 
action directly affects number active players size pot required contribution remain active game 
action categories different actions fit categories ffl fold drop game inactive 
player folds longer eligible win pot 
player current game loses money contributed pot 
ffl call match current player contribution player contributed player place additional amount call pot 
check special case calling current amount call usually case active player 
means forego opening betting round 
ffl raise increase current player contribution player contributed player put pot raise required contribution 
bet special case raising current amount call 
means open betting round 
point game player actions available fold check bet fold call raise 
exception occurs games blinds player forced blind bet calls folds 
player originally choice option raise action returns amount call 
available actions fold check raise check call raise bet blind 
exception occur normally limit raises including initial bet blind 
player turn betting capped raises allowed available actions fold call 
betting amounts different ways restrict betting amounts various systems produce different games requiring different strategies 
ffl limit poker format world series poker championship main event 
amount player allowed bet raise limited amount money 
ffl pot limit poker format normally minimum amount maximum raise currently pot pot amount call player raise placing pot 
ffl spread limit format commonly friendly games 
fixed minimum maximum round stud game raise bet size round 
ffl fixed limit common format 
fixed bet size round spread limit minimum equal maximum 
usually bet size larger rounds 
games feature bet size rounds called flat limit 
showdown active player remaining game player wins pot having reveal cards 
final round terminates normally game enters showdown active players reveal cards player strongest card hand wins pot 
case tie pot split evenly 
note individual cards ranked lowest ace 
games ace optionally low card comes king 
suit ranking purposes awarding odd chip splitting pot ties 
card hands ranked strongest weakest ffl straight flush strongest hand regular poker cards form straight flush see 
straight flushes ranked top card straight note ace low ace straight flush top card 
ace high straight flush highest possible hand called royal flush 
ffl kind cards identical rank unmatched kicker 
compare kinds rank matched cards 
kicker break ties note games community cards texas hold em possible multiple players hold kind 
ffl full house cards rank cards paired rank 
compare full houses triple pair event tie 
ffl flush cards identical suit 
rank multiple flushes comparing top card subsequent card better 
ffl straight cards sequence 
ranked highest card 
ffl kind cards rank unmatched rank 
compare rank triple examine kicker higher 
ffl pair cards rank card kicker third rank 
compare highest pair second pair kicker 
ffl pair cards rank unmatched rank compare rank pair examine kicker order highest lowest 
ffl high card unmatched cards 
compare highest lowest cards flush 
variants poker recognize special hand types card flush allow wild cards cards represent card common casino games 
texas hold em specific variant consideration thesis texas hold em popular variant played 
main event annual world series poker championship determine world champion 
considered strategically complex poker variants smallest ratio luck skill :10.1.1.21.7204
script texas hold em follows rounds followed betting ffl pre flop player dealt face cards hole cards 
ffl flop cards dealt face board community cards 
ffl turn card dealt face board 
ffl river card dealt face board 
betting river best card hand formed hole cards board cards wins pot 
specifically examine game limit texas hold em structured betting system units blinds units 
means bet size fixed small bet pre flop flop big bet turn river 
pre flop player button small blind forced put pot subsequent player big blind forced bet meaning amount call subsequent callers small blind raise big blind option fold check raise units 
limit hold em typically played players minimum possible maximum 
chapters special convention representing texas hold em hands 
designation represents hole cards board 
chapter humans play poker books written play poker 
intended development human players reinterpreted applicable computer play 
author typically presents small number rules human players follow 
rules frequently experience mathematical foundation 
example book norman zadeh uses mathematical analysis deduce series generalized rules poker variants 
rules basically follow form giving reader threshold hand type take certain action certain situation 
useful books purposes thesis 
book hold em poker advanced players david sklansky mason presents high level strategy guide game texas hold em focus poker literature special treatise playing pre flop 
presents strong rule approach emphasis knowledge opponent taken account 
second book theory poker david sklansky described billings book correctly identify underlying strategic principles poker uses illustrated examples variants including texas hold em :10.1.1.21.7204
chapter important concepts strategies described 
hand strength potential human player able estimate probability certain set cards win 
implicit rule systems give threshold hands betting decisions 
different measures goodness hand potential strength 
potential probability player hand winning hand card flush counts strong fifth suited card dealt 
easily roughly estimated humans players usually able estimate hand potential accurately terms outs number cards left deck produce best hand 
contrast strength probability currently lead win cards dealt 
experience knowledge statistical distribution hand types knowledge opponents expert players get accurate estimate 
knowing stands respect measures determine appropriate strategy raising reduce number opponents trying scare opponents folding betting aggressively 
opponent modeling better players understanding opponents think successful 
experts characterizing opponents exploiting weaknesses play knowing best hand 
try put opponent certain range hands guess cards hold observed actions 
important note player wins game showdown reveal cards 
showdown exposure opponent hidden cards gives away information betting history infer decision making process 
take specific approach estimate probabilities generic reasonable opponent 
observing opponent play may give useful information allows bias probabilities allowing informed profitable decisions 
example player take bet seriously bets aggressively game 
opponent modeling vital having estimate hand strength potential 
position variable expert players take account betting decision position table respect dealer players acted act 
authors emphasize position better information available decision 
pre flop strategy dependent player expected position betting rounds 
example discuss tactical raise called buying button late position pre flop hopefully scare away players player act betting rounds 
odds fundamental concept introduced includes pot odds effective odds implied odds reverse implied odds 
odds gives way compare cost versus potential winnings determine hand terms potential strength require call bet expected return possible actions 
pot odds called immediate odds pot odds ratio money pot cost call 
example pot costs call getting odds winnings cost stay 
translated percentage representing size contribution new pot formula winnings gamma gamma cost cost pot size cost percentage required probability winning 
final round betting odds winning hand 
continuing example required probability 
need chance winning warrant call 
example hand board card diamond flush turn 
estimate having outs remaining cards winning diamond flush 
translates hand potential incorrect call 
hand inside straight draw give straight additional outs counted 
potential correct call 
caveats 
simply making call necessarily round multi player scenario player see bet may raise 
example expecting player raise original call pot odds pay win elevating threshold staying hand 
knowledge opponents required accurate estimate hand strength potential determine expect pay 
considering potential assumes cards hoping hand winner second best 
complications arise card left dealt 
implied odds reverse implied odds implied odds reverse implied odds possibility winning losing money hand 
consider situation cards dealt explain situations things better worse pot odds 
put way implied odds ratio amount expect win hand pot versus amount cost continue playing 
contrast reverse implied odds ratio amount pot win opponent hand versus cost play hand 
major factors considering implied odds hidden hand uncertain opponent hand size bets 
reason implied odds important limit pot limit games fixed limit games 
example implied odds consider turn pot call pot odds hitting hand means win additionally opponent play showdown 
simply fold costing 
hit expect extra bet opponent winning total implied pot odds 
reverse implied odds consider strong hand little chance improving opponent chance improving hand stronger possibly hand stronger betting sure bluffing essentially situation certain best hand 
say turn pot call pot odds 
opponent weak hand misses card may betting case win costs find winning 
committed playing hand case cost find losing pot odds 
variations scenario 
essential idea reverse implied odds considered certain best hand cost betting rounds discover 
effective odds considering odds making hand cards remaining difficult estimate expected cost play rounds 
example pot flop single opponent just bet pot odds 
cards hand try estimate cost round 
single opponent worst case opponent bet round simply call paying win increases requirement playing 
chances hand potential improve 
held board estimated chance hitting flush inside straight outs cards making correct call possibly raise bet flop 
playing style different ways categorize playing style particular player 
considering ratio raises calls player may classified aggressive moderate passive 
aggressive means player frequently bets raises checking calling norm passive means opposite 
simple set categories loose moderate tight 
tight player play fewer hands norm tend fold marginal situations loose player opposite 
players may classified differently pre flop post flop play 
deception unpredictability predictable player poker generally bad player 
consider player player bets strong hand 
opponents fold correctly player bets reducing winning pot size 
course weak opponents bluffing may correct strategy 
general deception unpredictability important 
cost benefit actions considered unpredictability achieved randomly mixing actions 
example raise time hold high pair flop opponent assume holding high pair simply call pre flop 
deception complex achieved numerous different high level strategies 
strategies 
ffl changing styles simple form deception deliberately create false impressions 
example early session play tight conservative style show lot winning hands showdown 
switch looser style players continue treat tight player take bets seriously 
ffl playing hand weakly round betting order people bets 
checking calling earlier round betting shows weakness hopefully leads opponents willing put money pot hand particularly variants hold em bet size doubles rounds 
opponents need strong hand kind play 
ffl check raising way play strong hand weakly 
sklansky calls way trap opponents win money 
essentially believe opened betting round drive players get bet raise 
believe opponents open betting round checking 
assuming opening bet follow raising 
hopefully players put bet willing put second 
players fold money opening bet 
ffl bluffing essential strategy poker 
mathematically proven need play play way optimal play simplified poker 
bluffing allows profit weak hands creates false impression increase profitability hands lot money won betting strong hand opponent suspects may bluffing 
practice need able predict probability opponent call order identify profitable opportunities 
game theoretic explanation optimum bluffing frequency 
ffl semi bluffing bet hand best hand moment chance calling hands flush 
occasion play win outright opponents fold 
combined chances winning immediately improving called profitable play 
note deception play action necessarily largest expected value creates false impression may indirectly lead returns 
undoubtedly important difficult measure effectiveness type deception 
summary short term goal poker goal specific deal maximize gain think win strong hand bluffing weak hand minimize loss think lose 
outcomes individual games independent 
afford bad moves expected value chosen action current game highest provided contribute greater gains games 
expert player usually recognize winning hand maximize money win appropriately 
occasionally invest money misinformation bluffing ability identify hands understand opponents react certain actions hand hold actions 
knowledge tells physical psychological plays human side opponent modeling 
expert player understanding playing strategies hand strength potential pot odds opponent modeling skills 
factors basis decision 
chapter computers play poker little done poker computing scientists numerous commercial approaches 
various computer approaches poker classified high level architecture descriptions mixture thereof expert system game theoretic optimal play simulation enumeration systems 
discussed sections 
chapter discuss case studies programs computing scientists 
included group historical nicolas findler ideas daphne koller avi pfeffer 
findler worked poker playing program card draw poker 
koller pfeffer implemented practical algorithm finding optimal randomized strategies player imperfect information games 
approaches examined play poker online poker server irc internet relay chat 
programs variations run different names 
additionally public domain programs smoke em poker microsoft windows card stud texas hold em implementations johann unix package 
numerous approaches commercial companies target audience professional players 
best turbo texas hold em wilson software www com 
extremely rule system 
final section discusses architecture selected poker player reasons selection 
expert systems expert system essentially set specific rules cover various game situations 
correct knowledge simplest approach reasonably strong program 
difficult expert knowledge system learn opponent modeling easily defeated strong player 
contains rudimentary example piece system bets flop top pair paired top cards state state state bets put state bets call top pair flush open straight return raise call fold example expert knowledge system card board hole pair bigger card card flush open ended straight raise time call time fold time 
problems type approach 
clearly covering situations arise practice laborious 
system difficult flexible 
system specific quite strong conflicting rules possibly constructed need way handle exceptions 
missing rules covering certain situations making rules general program weak predictable 
additionally need expert define rules 
knowledge acquisition bottleneck may prove serious problem 
game theoretic optimal strategies kuhn nash shapley demonstrated optimal strategies randomization exist simplified poker 
optimal strategy takes best worst case move means things player better strategy playing opponent furthermore player worse strategy revealed opponent 
example consider player game rock scissors 
optimal strategy select move uniformly random irrespective game history 
finding optimal approach easy complex game poker major stumbling block 
due enormous branching factor see calculation storage game theoretic optimal strategy extremely expensive 
additionally branching factor numbers player environment multi player environment complex due addition imperfect information possible betting interactions 
demonstrated attention devoted multi player situations poker literature considerations quite important 
additionally game theoretic optimal approach necessarily best 
clearly game theoretic optimal strategy fixed take advantage observed weaknesses opponent 
doing risk falling trap losing 
consider example 
witnessing opponent playing rock times row deciding play risks opponent anticipating action situation may intended trap opponent may know strategy 
existence risk matter small violate optimality strategy second guarantee player worse 
bad players optimal strategy break 
contrast maximal strategy opponent modeling assume perfect play opponents identify weaknesses exploit profit significantly optimal strategy 
risk deviation optimal opens door opponent exploit 
knowledge opponent potential gains outweigh risk 
game theoretic optimal strategy excellent default baseline complement adaptive strategy 
simulation enumeration simulation involves playing hand times opponent hands upcoming community cards dealt randomly time 
number simulations fixed variable dependent real time constraint 
sampling method give rough estimate strength potential hand 
contrast enumeration involves evaluating possible situation get exact probabilities winning chances 
feasible playing hand branching factor wide variety possible opponent hands see easily calculated measures immediate hand strength flop possible cases opponent cards 
note storage space complex enumerations pre calculated 
approaches easily mixed expert system bet chance winning game theory call possible game theoretic optimal function time 
particular opponent modeling easily combined simulation enumeration generate reasonably accurate probabilities outcomes 
useful opponent model contain information specifying probability opponent holding possible pair cards 
particular simulation probability array appropriately skew selection cards held opponent 
enumeration context probabilities weights subcase considered 
additionally faster coarser estimate generated enumerating subcases 
advantage able combine simulation enumeration opponent modeling 
model contains information calling frequency opponent situation able take advan assuming players ffl possibilities acts ffl gamma delta different hole cards ffl gamma delta significantly different ways board dealt gamma delta different flops different turn cards different river cards ffl different ways betting proceed pre flop side winning ffl different ways betting proceed round pre flop side winning ffl gamma delta gamma delta different states flop ffl different states turn ffl different states river ffl note gamma delta possible opponent hands stage game pre flop flop turn river 
hidden information included products number possible variations known information 
large tree redundancy way cards dealt suits isomorphic ffl significantly different classes hole cards see appendix 
reduces number states flop river approximately fold reduction 
ffl additional complex reduction isomorphism suits reduce original number possible flop states starting hands gamma delta elimination redundant starting hands approximately additional fold reduction leaves large number river 
details reduction 
enumerating possible combination suits starting hand flop 
example gamma delta significantly different starting hands cards suit map suit say gamma delta significantly different flops card original suit mapped cards second suit mapped say 
addition multi player considerations exponentially complicates tree ffl players round pre flop sequences betting actions players remaining players remaining win 
players different sequences terminate game 
ffl players round pre flop sequences betting actions players remaining players remaining players remaining win 
branching factor structured betting texas hold em maximum bets round tage realistic consideration outcomes 
example consider situation river opponent pot contains options check bet 
probability array opponent model calculate enumeration chance having stronger hand 
model tells faced check situation opponent check time faced bet opponent fold call 
calculate expected value ev options ffl check win time lose time 
ev gamma 
ffl bet opponent fold weakest hands beat hands worst third hands fold chance win call 
opponent folds win time 
opponent calls win time lose time 
ev gamma 
profitable bet due reasonable possibility opponent folding 
simple contrived example demonstrates accurate opponent model complements simulation enumeration system 
findler nicolas findler worked years cognition poker playing program card draw 
recognized benefits research poker model decision making partial information 
applicability lost due differing goals concerned producing high performance poker program focused simulating thought processes human players 
achieve relying heavily mathematical analysis approach largely modeling human cognitive processes 
produce strong poker player 
system theoretical approach computing scientists taken koller pfeffer 
implemented practical algorithm finding optimal randomized strategies player imperfect information competitive games 
done system tool specifying solving problems imperfect information 
system builds trees find game theoretic optimal maximal strategy 
considering player environment vastly simplified versions poker presently solved due large size trees built 
authors state close able solve huge games full scale poker able 
programs examined explore architecture approach 
common approach expert simulation approaches tend stronger computationally expensive 
ffl greg reynolds uses expert system manually patched weakness observed 
stl com ffl stephen uses expert system combination observing large number possible features hand board straight 
ffl greg strongest irc programs 
pre flop uses sklansky recommendations post flop conducts series simulations playing hand showdown typically times random hands number opponents artificially adjusted bets raises 
actual action dependent percentage simulations resulted win 
ffl smoke em poker card draw program dave brien 
uses expert system set rules opponent type tight loose 
www cgl uwaterloo ca poker html ffl poker games johann stud texas hold em games simulation approach program plays hand showdown times random opponents 
resulting winning percentage artificially adjusted depending game state compared hard coded action thresholds 
ftp ftp berkeley edu pub rec gambling poker tar architecture consideration programs various advantages different approaches led select primarily enumeration approach purposes thesis 
reasons ffl expert system limited context sensitive game far complex cover possible contexts 
inflexible inherit error designer approach problem 
ffl game theoretic optimal strategy complex compute system built presumes optimal play part opponents 
working assumption opponents errors maximal play preferable 
ffl enumeration approach easy combine opponent modeling system probability distribution possible opponent holdings 
ffl desired values computationally feasible real time 
ways calculate approximations measures random simulation pre computation heuristics 
ffl values calculated enumeration opposed simulation accurate random sampling introduces variance rule systems subject systemic error 
loki complete poker playing program able play full game texas hold em unaided 
main dependent components control play program 
components discussed chapters 
hand evaluation opponent models game state generates values roughly correspond probability holding strongest hand betting strategy uses values generated hand evaluation opponent models game state determine best action opponent modeling translates betting history opponent information betting behavior possible hands held 
summary main approaches program design summarized chapter expert system hard coded rules knowledge expert game theoretic optimal strategies simulation enumeration 
approaches obvious limitations 
different approaches combined various extents 
poker playing programs strong source code description inner workings available 
exception findler koller pfeffer resources computing science literature 
little building high performance poker program ideas :10.1.1.21.7204
state game hand value dealer hand evaluation strategy betting modeling opponent events weights weights actions loki architecture chapter hand evaluation accurate assessment winning chances necessary considering cost playing versus payoff pot odds 
hand evaluation uses opponent models game state calculate estimates winning chances hand 
cards come flop turn strength hand insufficient information 
reason post flop hand evaluation broken parts strength potential 
strength probability hand currently strongest potential probability hand strongest losing status hand cards dealt 
due computational complexity potential pre flop cards evaluation stage game special treatment 
pre flop evaluation hand strength pre flop play extensively studied poker literature 
example attempts explain strong play human understandable terms classifying initial card pre flop combinations betting categories 
hand category suggested betting strategy strength hand number players game position table relative dealer type opponents 
poker program ideas implemented expert system general approach preferable 
initial cards possible combinations distinct hand types paired hands suited hands unsuited hands 
possible hand types simulation games done random opponents cover player scenarios 
opponent simple called hand 
produced statistical measure approximate income rate ir starting hand income rate measures return investment 
ir net hands played consider important groupings 
see appendix computed values appendix numbers viewed current context 
obtained simplifying assumption players call 
experiment gives approximation strong hand example player simulation best hand pair worst hand different suits 
absolute ir value may useful relative order hands discuss appendix strong correlation simulation results pre flop card ordering 
hand strength hand strength assesses strong hand relation players may hold 
critical program performance computed flop turn river weighted enumeration provides accurate estimate probability currently holding strongest hand 
calculation feasible real time flop remaining unknown cards possible hands opponent hold 
similarly turn river 
contains algorithm computing hand strength 
bulk call hand identification function rank hand containing cards determines strongest card hand maps unique value stronger poker hands larger values hands equal strength value 
rank called times number unknown cards 
parameter array weights indexed card combinations function determines weighted sum 
weight array opponent consideration possible card holding assigned weight 
array normalized sum weights conditional probabilities meaning possible card holding probability hand held opponent observed betting 
normalization values weight table conditional probabilities meaning probability opponent played observed manner held hand 
opponent modeling simply filled default set values uniform typical distribution 
uniform weighting entry array equal appropriate representation opponent random hand 
typical distribution set values ir tables 
model information directly hand strength enumeration 
suppose starting hand flop possible opponent hands 
estimate hand strength uniform weighting enumeration technique gives percentile ranking hand hand rank 
simply count number possible hands better pair pair kind hands hands equal possible remaining combinations hands worse 
counting ties cards cards float rank cards float ahead tied ahead tied rank consider card combinations remaining cards case rank ahead tied ahead tied ahead tied return calculation half corresponds hand rank hr 
words chance hand better random hand non uniform weights call hand strength hs 
measure respect opponent opponents weight array roughly extrapolated multiple opponents raising power number active opponents hr hand rank opponents hr hr 
hr hr exact value take account interdependencies arising fact players hold card 
secondary consideration 
continuing example opponents random hands adjusted hand rank hs 
presence additional opponents reduced likelihood having best hand 
example uses uniform weighting assumes opponent hands equally 
reality case 
weak hands ir folded flop 
example flop hidden cards strong hand skews hand evaluations 
specifically accuracy estimates depend strongly models opponents array weights 
compute weighted sums obtain hand strength hs 
hr hs hand strength opponents hs hs hs hs multi player considerations description weighted enumeration system hand strength intended opponent 
system put weight array common opponents uniform fixed typical distribution hs easily extrapolated equation 
opponent modeling system computing different set weights specific opponent 
correct approach treat possible case independently 
example possible case player holds player holds 
handle distinction function need extra iteration layer opponent dependent order iteration 
possible case weight complex subcase subcase cards held player weight subcase player 
weight complex subcase example 
increase computational complexity substantial approximately factor additional player infeasible opponents 
simpler methods approach problem obtain estimates hs calculates hs opponents respective weight array 
uses equation hs hs hs hs pn second method calculates hs special weight array called field array computed combining weight arrays active players 
hs calculated equation 
field array estimate compromise computational cost accuracy 
represents entire table giving average weights opponents 
process obtaining hand weights generating array described chapter 
methods estimates ignore interdependencies arising fact players hold card 
situations examined data gathered play human opponents 
methods absolute error measured respect correct full enumeration active opponents opponents expensive compute 
method equation testing revealed error exceeded 
average error opponents opponents 
second method field array equation error exceeded opponents opponents 
fact opponents cases error larger opponent cases 
average errors 
estimated values usually slight overestimates 
isolated test scenario suggests method better difference small 
error appears get slightly worse additional opponents 
loki uses second method due faster computation ease framework particularly respect multi player considerations hand potential discussed 
invested time explore error arising interdependencies believe minor comparison extra required accurate measure hs amount error considered negligible error introduced components system tends greater magnitude 
hand potential practice hand strength insufficient assess quality hand 
hand potential assesses probability hand improving additional community cards appear 
consider hand flop 
probability having strongest hand low random opponent 
hand tremendous potential improvement 
cards come give flush straight 
high probability hand improve substantially strength hand lot value 
need aware potential affects hand strength 
example describes positive potential ppot probability pulling ahead 
compute negative potential npot probability falling ahead 
computed enumeration real time 
possible subcases opposing hands weights flop turn 
subcase card look ahead consider combinations cards flop card look ahead cards flop turn 
subcase count combinations upcoming cards result ahead tied 
total number cases considered ffl ppot npot card look ahead flop ffl ppot npot card look ahead flop turn potential uniform weighting shown table 
table shows result cards cases ahead tied cards 
example best hand cards combinations cards pre flop cards come opponents give best hand 
remaining hands leave tied best hand leave 
words roughly ppot chance winning opponent showdown 
additionally currently ahead opponent plays showdown roughly npot chance losing 
row col refers values table brevity tied ahead sum ppot npot calculated cards cards ahead tied sum ahead tied sum table unweighted potential ppot tb tb tb npot describes algorithm card look ahead flop 
parameter weight array opponent opponent modeling discussed simply uniform set weights 
calculation easily embedded function card lookahead function essentially 
function inner loop executed times rank function called times 
redundant calculations 
possible unique calls inner loop rank redundancy exists order constraint evaluation poker hands 
pre calculation need calls rank number times inner loop executed reduced 
similarly originally needs calls rank flop turn pre calculation cards cards float index represents ahead tied 
float hp initialize float initialize float ppot npot rank cards integer index rank consider remaining card combinations opponent case cards rank index ahead index tied index index consider possible card board combinations come case board rank board rank board hp index ahead hp index tied hp index ppot moved ahead equation ppot hp ahead hp tied hp tied ahead tied npot ahead fell equation npot hp ahead hp ahead tied hp tied ahead tied return ppot npot calculation flop turn 
table compute potential additional cards produces ppot npot calculation card lookahead exactly calculation possible outcomes 
card come turn find ppot npot 
combined array weights opponent modeling subcase weighted card combination defining subcase calculations provide accurate probabilities take account possible scenario 
calculation gives smooth robust results regardless particular situation 
ppot practice due greater complexity ppot calculating effective odds cost see second card calculation time 
mhz sgi challenge pre calculation unoptimized computing ppot flop typically takes ms cpu time ppot takes ms average 
multi player considerations described section loki field array provided opponent modeling module representative entire set active opponents 
hand strength multiple opponents ppot npot values calculated field array adjustment 
correct calculation similar described section accounting player adds extra iteration layer approximately subcases potential value player believed simple reasonable estimate high usefulness low computational complexity 
calculating potential context multiple opponents complex due interactions easy reduction approximate value similar hs estimates typically optimistic correct value worsen additional opponents 
example consider situation straight draw unaware tendencies opponents uniform weight arrays 
additional opponent increases chances flush draw hearts fact increases chances particular hand occurring 
means intersection cards worth likelihood give winning hand decreases ppot example consider hold top pair 
additional opponent increases chance flush straight draw cards heart give losing hand 
npot increases additional opponents 
optimism case multiple opponents improve chances 
example straight draw small cards opponents holding high cards additional opponent increases chance upcoming card high 
decrease npot increase ppot additional players increases size pot increases value draw 
rough examples intended demonstrate complex interactions involved multi player considerations hand potential 
actual effect additional opponent dependent probability distribution possible hands relationship probability distributions players relationship needed cards 
summary chapter describes methods evaluating hand particular situation 
algorithms intended provide estimates winning chances 
pre flop unsophisticated simulation technique calculation pre flop income rates 
feel values sufficient limiting factor strength program room improvement 
chapter describes enumeration techniques evaluating hands strength potential flop 
algorithms particularly multiplayer scenarios abandon treatment complexities favor simplicity computation time 
invested time fully explore magnitude error believe minor comparison savings time complexity 
chapter betting strategy game state opponent models hand evaluation derived data betting strategy determines fold call check bet raise 
exactly information useful 
answer questions trivial reasons poker testbed artificial intelligence 
approach game theoretic optimal betting strategy despite fact complex calculate human opponents play optimally may best decision practice leading profit 
minimal system simply hand strength ignore hand potential simply bet call immediate strength hand 
refinements betting strategy involve addition high level strategy concepts bluffing 
decision variables ppot compared threshold may variable pot odds 
structure uses expert knowledge easy implement overhead insignificant 
refinements intended quick ways select play hopefully largest expected value ev computing exact ev feasible 
real time constraint single game poker takes minutes play see game tree large 
chapter describes pre flop betting strategy treated special case 
followed explanation simple post flop flop turn river betting strategy hand strength serves template measures strategies loki uses post flop rounds 
unimplemented strategies discussed 
note chapter included completeness 
betting strategy far necessarily ad hoc left target improvement computer oriented techniques monte carlo simulation 
pre flop betting strategy implemented pre flop betting strategy preliminary expert information 
sophisticated hamper performance focus put post flop play interesting portion game 
loki examines variables uses expert knowledge determine thresholds various betting actions chooses strategy ffl fold costs zero continue playing check 
ffl call fold costs bets continue voluntarily put money pot round check call 
ffl call bet bet round big blind happen pre flop 
ffl call call check despite name strategy suggests bets 
ffl bet raise bet raises round call 
ffl bet raise betting capped call 
small blind special treatment call call effectively really different strategies 
strategy selected fixed subsequent actions pre flop 
small blind special case due having call half bet call really call call really call fixed thresholds strategies 
call special case folding requirement voluntarily put money pot round 
feature added testing human opponents irc 
players aggressive raise frequently 
meant loki called blind decent hand call better players raise causing loki fold 
due commonly exploited weakness necessary amount opponent modeling implemented pre flop 
thresholds selecting betting strategy determined set linear formulas form threshold strategy base increment position strategy betting strategy base increment defined human expert see appendix position number players act small blind turn num number players pot small blind position num gamma big blind position num gamma player act position num gamma button dealer position 
example loki playing tight players base increment values table formula threshold position equation 
coefficients linear formula depend variable group parameter tightness 
variable group expected number players num players num players num guaranteed probability play num gamma num guaranteed cases interest expected number players 
round num players nearest integer determine appropriate group range value falls players players players see appendix 
state variable num guaranteed number players put money pot presumably committed playing 
includes blinds assume play 
play expert defined value average playing percentage players default 
appropriate opponent modeling provide better estimates value observation current session parameter tightness setting affects percentage hands loki play indirectly selecting different set thresholds 
settings tight moderate loose default 
players roughly translate playing hands distinction large terms misnomer levels relatively conservative 
base increment pair set group strategy tightness values table pairs total default strategy thresholds needed determining strategy 
thresholds determined actual strategy selected dependent pre calculated income rate ir hole cards 
describes algorithm selecting strategy 
example consider player game 
hold playing tight 
players put blinds fold loki turn 
player button acted 
position num num guaranteed including loki 
calculate num players gamma determine group players 
table calculate threshold threshold threshold find value hand ir select appropriate strategy 
select strategy raise 
called time asked action pre flop selected strategy dictates current subsequent actions cards state state parameters param float num players expected number players integer group float ir income rate float thresh indexed strategies determine group num players state num guaranteed param probability play state num state num guaranteed state num group num players group group calculate ir see appendix thresholds 
ir ir table group small blind different thresholds call call thresh group param tightness state position ir select appropriate strategy ir thresh strategy ir thresh strategy ir thresh call strategy call ir thresh strategy ir thresh call strategy call strategy return strategy pre flop betting strategy basic post flop betting strategy minimal system betting calling solely immediate strength hand 
fact useful betting strategy basic system template simply proceed hierarchy alternative branches current decision rejected 
example initial betting decision hand strength decides fold fall back consideration semi bluffing 
decide semi fall back decision pot odds 
time proposed action rejected decision point checked defined order priority 
priority dependent aggressive action pot odds showdown odds described low priority passive calling checking decisions pot odds decision bet 
strategy check raising strong hand highest priority considered 
simple betting strategy hand strength described 
uses function called show level strength appropriate hand held 
function pre flop betting strategy extent actual post flop betting strategy 
effective hand strength majority betting decisions variable represents strength loki hand current situation 
basic hand strength hs probability presently strongest hand 
fully adequate cards come easily change situation 
reason compute potentials ppot npot tell loki probability winning losing currently ahead 
values compute estimate loki chances winning showdown strongest card flop ppot 
define effective hand strength ehs hs gamma hs ppot gamma hs npot observe river ehs hs cards dealt 
problems including npot calculation 
bet know opponent play 
second situations compute high npot better strategy bet raise force opponent hand 
effective hand strength betting decision opposed calling decision preferable optimistic version ehs ehs hs gamma hs ppot estimate means probability currently leading improve best hand showdown 
bet raise bets num bets check call fold appropriately int bets state state bets level strength want show num bets number bets raises players round bets put number voluntarily put round bets call number bets call state num bets bets return bet raise call voluntarily put money pot round see section bets state bets put bets state bets call bets return check call return fold float state state parameters param param return state param return state return state simple betting strategy basic betting decision loki similar exception ehs hs hand defined hand ehs 
raise bets round call 
hand defined hand ehs 
bet call bets call called bet round 
ehs consider strategies semi bluffing pot odds showdown odds resorting 
thresholds ad hoc reasonable way decide bet strength 
lack ability raise bets flop historical artifact limiting 
course addressed eventually low priority function hopefully superseded general betting strategy 
semi bluffing decision semi highest priority meaning bet call ehs consider semi bluffing 
faced bets high potential call bet raise open betting 
players bet raise continue bet subsequent rounds sufficient potential continuing represent strong hand reasonable chance winning pot immediately 
semi bluffing ppot ot odds ot odds bet size pot size bet size bet size term bet size represents bet raise saying call 
term bet size represents money raiser putting pot match bets including assumption initial call raise 
possible know going go pot approximation pot odds getting 
bluffing manner positive side effect contributing deception 
loki human opposition recognize quickly adapt folding faced bet raise lowering winnings 
fact loki infrequently experienced players irc detect exploit predictable pattern 
calling pot odds pot odds important concept differentiates poker games contributes usefulness testbed concepts real world 
pot odds comparison winning chances expected return pot 
example chance loki best hand river fold call bet 
assume pot contains opponent bets 
calling situation lose times cost time 
win time profit 
assumptions call better fold resulting average profit hand 
pot contained fold calling yield average loss hand 
flop turn calling decision slightly different concept 
ppot chance card give loki strong hand 
necessarily win hand sake pot odds consider chance loki hand card current pot winnings 
basic decision take account nuances fact time loki may reasonable chance winning 
calling decision verify pot odds justify paying receive card play showdown river 
call ppot ot odds hs ot odds river ot odds call pot size call calling showdown odds calling pot odds immediate situation cost see card purely potential improvement flop turn 
cover situations loki moderate ppot mediocre hs justify call 
reason introduce calling ehs showdown odds decision bet include npot ehs 
showdown odds defensive measure ensures opponent win simply betting opportunity 
calling hand strong show profit long run loki discourages frequent bluffing opponent 
turn showdown odds turn call bet size pot size call bet size expecting face bet river add bet cost pot bet expect 
flop showdown odds lop call bet size pot size call bet size case complex 
bet size doubles going turn expect face average bet turn river 
reason bets current size added cost pot 
approximation ignores information available number players 
additionally flop appropriate re evaluate ehs ppot npot sufficient capture essence strategy 
strategies betting strategy loki simple approach enable sophisticated hand evaluation system 
preferable approach redesign system attempt decisions computation expected values simulations playing game times 
dependent architecture simple refinements improve performance 
categories refinements unpredictability deception 
unpredictability simple addition harder opponent build model program play 
consider adding unpredictability betting ehs decision linear scale bet time hand time hand time hand 
deception includes strategies pure bluffing check raising 
causes opponent wrong assumptions current state game 
deception play necessarily lead highest expected value current game intended false advertising indirectly lead increased profits hands 
complete possible actions witness loki dual interpretation certainty 
example system check raising loki checks knowledgeable observer infer loki hand ehs 
included deceptive strategies successfully versions check raising pure bluffing betting weak hand river balancing raises raising calling 
currently unpredictably randomly 
occasionally check raise mediocre hand opponents infer hold strong hand check raise 
summary full betting strategy algorithm 
incomplete expert system objective hand evaluation techniques betting decisions easy implementation low cost 
version adjusted opponent modeling system added 
approach preferable example computing expected values playing simulations system sufficient significantly hamper performance allow easy testing high level betting strategies semi bluffing 
uses function defined 
float ehs float ehs float ppot state state parameters param float pot odds pot odds showdown odds showdown cost reset semi flag flop bet raised state round flop state bets call state semi flag false may set previous round bet strength ehs param return state ehs param return state decide semi check betting decisions state bets call pot odds state bet size state pot size state bet size state semi flag state round river ppot pot odds state semi flag true return bet return check decisions call fold check pot odds pot odds state bets call state pot size state bets call state round river ehs pot odds return call state round river ppot pot odds return call check showdown odds flop turn state round river return fold state round flop showdown cost state bet size showdown cost state bet size showdown odds state bets call showdown cost state pot size state bets call showdown cost ehs showdown odds return call give return fold post flop betting strategy chapter opponent modeling strategic games chess acceptable assume opponent perfect assumption result significant loss performance algorithm weaker players 
opponent modeling attempted games generalization minimax limited success 
contrast opponent modeling tremendous value poker primary distinguishing feature players different skill levels 
set players comparable knowledge poker fundamentals ability alter decisions accurate model opponent may greater impact success strategic principle 
having argued form opponent modeling indispensable actual method gathering information betting decisions complex interesting problem 
difficult appropriate inferences certain observations apply practice clear statistics collected categorized 
chapter describes opponent modeling loki 
betting history opponents determines probability distribution hidden cards hand evaluation system 
minimal system single fixed model opponents hand cards played flop typical players 
system place loki generates model opponent maintains information games 
simplistic approximation takes specific observed information transforms useful form 
sufficient demonstrate significant performance improvement simple analysis context 
section discusses representation model action frequencies select decision categories weight array possible card holdings 
second section explains learning system weight array determined action frequencies 
final section discusses weight array hand evaluation particular field array calculated 
representation structures comprise opponent model weight array action frequencies updated learning portion opponent modeling system 
weight array model opponent hand reset hand contains information pertaining cards opponent may holding 
hand evaluation system give accurate estimates hand strength 
action frequencies inter game statistics times opponent taken action situation 
learning system appropriately update weight array betting strategy system 
weight array weight array model opponent hand 
opponent array weights represents possible card hand 
weight associated reset new hand approximately represents conditional probability player played observed manner held hand 
call values weights act multipliers enumeration computations 
want probability distribution possible hands held normalize array dividing entry total sum entries number valid entries depends hands possible 
normalized entries represent conditional probability player holds hand betting history 
detailed representation error interdependencies considered 
multi player scenario address fact different opponents hold card 
example assign high relative probability specific opponent holding ace reduce relative probabilities opponents holding ace 
means player folds information regarding hands player may held discarded 
weight array adjusted respect weight arrays opponents 
feel error minor comparison savings complexity computation time 
action frequencies opponent action adjust weight array important take account type opponent approximation assume opponents play raise top hands 
case matters adjusting weight array action taken type player 
called generic opponent modeling reweighting system identical player 
initial tests human opponents revealed incorrect assumption 
loose aggressive opponent bet bet taken seriously 
hand tight passive opponent usually bet hand 
account introduce specific opponent modeling 
statistics opponent tabulated calculate betting frequencies frequencies adjust re weighting system works 
example observe certain opponent bets time acting flop take account adjusting weight array bet observed opponent situation 
introduces new problem 
statistics retained large number categories 
consider example index frequency number active opponents category total raises round bets call game round pre flop flop turn river 
classification useful putting similar cases 
example situation fits categories 
take large number observed games sufficient data categories 
fact categorization easily complex account important variables table position remaining callers previous action taken catch advanced strategies check raising 
finer granularity data collected harder get meaningful information observations required 
ways manageable 
way distinguish different categories data collection phase fine level granularity combine classes similar contexts data usage phase 
sophisticated approach simply different categories data collection phase 
allows frequency calculations data usage phase quick simple 
done 
data categorized categories indexed bets call different game rounds 
simple approximation sufficient determine level opponent modeling beneficial 
advantage enabling program learn quickly accurately 
easy adjust definition context purpose gathering statistics 
learning system re weighting system uses information interested frequency observed action calculated 
opponent determine category observed action context amount call game round record action taken fold check call bet raise incrementing 
need know frequency player taken certain action certain situation simply compute ratio versus total number actions recorded context default frequencies data accumulated category points value selected arbitrarily weight frequencies hard coded defaults mix observed frequencies defaults linear interpolation sp gammas 
player play earlier rounds rounds pre flops flops 
assuming player style change drastically rounds take advantage data gathered prior rounds set defaults recursive definition frequency 
adjust notation consider round 
definition category composed round number bets call define pre flop 
recursively define new frequency function reduced set defaults sp gamma gammas 
alternative approach loki frequencies default behavior opponents majority human players irc observed play looser loki 
default frequencies typical irc player involve additional computation 
learning time opponent betting action weights opponent modified account action 
example raise increases weights stronger hands held opponent flop cards decreases weights weaker hands 
re weighting system consider distinct levels modeling discussed section 
opponent betting actions adjust weights 
actual transformation function re weighting independent player question 
different weight array maintained opponent raise observed certain category treated players 
second maintain data games action frequencies see appendix values 
frequencies adjust transformation function 
technique called specific opponent modeling re weighting depends opponent model 
fact difference levels specific opponent modeling re weighting function uses generic default frequencies 
remainder section discusses general idea re weighting system presents specific details respect pre flop post flop rounds 
re weighting system weight adjustment particular subcase threshold hand value needed observed action 
threshold turn observed frequency folding calling raising player question default frequencies generic opponent modeling insufficient data 
frequencies deduce average representing mean hand spread oe account uncertainty threshold needed observed action 
values oe define expected distribution hands played realizing transformation function re weighting 
take ranked distribution possible hands held ir pre flop ehs post flop rounds meaning presume opponents rank hands hand compared oe re weighted accordingly see figures 
value equal re weighting value oe oe weight unchanged oe linearly interpolated simple linear interpolation easy know distribution look 
want completely rule legal subcase allow weight go 
value threshold needed observed action turn frequency 
example consider player observed times pre flop bets call times raised times called times folded 
wanted re weight raise compute frequency raising raise meaning threshold gamma player raises top hands 
wanted re weight call frequency note threshold call gamma raise threshold gamma player calls middle hands 
intricacies dependent actual round play determining oe ir values non percentile discussed sections 
immediately noticeable source error system presumes proper distribution hand rankings hands represent hands 
true post flop rounds ehs optimistically increased ppot relative ranking hands correct 
final note prevent weight array distorted automatic false actions perform re weighting model round 
store constant low wt constant high wt weight weight array round reweight float float oe float weight float reweight float depending round ir ehs cards hand subcase hand hand interpolate range sigma oe reweight oe oe reweight low wt reweight low wt reweight high wt reweight high wt weight hand weight hand reweight don weight go weight hand low wt weight hand low wt re weighting function code re weighting function copy weight array round time new action witnessed requiring higher threshold saved weight array reweighting 
example witness opponent calling bet may re weight say 
betting round see opponent raise re weighting done higher value original weight array 
pre flop re weighting pre flop convenience percentile hand valuing system 
needs converted percentile value value ir scale 
achieve index sorted array sample nearest point ir values appendix simplicity ir 
example suppose opponent raises hands translates hand ir roughly corresponding average bets won hand played 
observe consistency opponent adhering estimated threshold specific tendencies 
separate opponents may call average hand may different standard deviation distribution hands call may rarely call hand may play hand low 
implementation selected oe ad hoc manner hands standard deviations normal distribution lie income rate range 
linear interpolation re weighting values range gamma oe oe curve normal distribution 
clear source error low 
consider player observed take certain action certain situation time 
re weight gamma lowest value means hands lowest ir re weighted factor 
reason re weight th percentile ir 
accurate fix possible worth added complexity 
post flop re weighting betting rounds flop infer mean variance oe threshold opponent observed action rank hands effective hand strength ehs calculation equation 
relative ranking hands affected optimistic view hands ehs represent hands due inclusion ppot equation 
additionally hs hs number opponents addressed part context action frequencies presently ignored interest simplified definition context 
calculate ehs compute hand strength hs positive potential ppot 
ppot computationally expensive operation obtain ppot values hands call re weighting function crude fast estimating function ppot 
terms cost ppot 
ppot 
ppot crude ignores available information weight arrays looks features hand heuristics associate value 
example board diamonds card diamond flush draw outs remaining card board diamonds remaining cards worth depending rank suited hole card worth ace worth 
diamond flush draws 
ppot approximates roughly winning chances possible card dealt 
function produces values ppot time random sampling card unweighted cases 
values amortized possible hands effect approximation small 
opponent play hands pot odds required action decision ehs 
reason introduced adjustment re weighting algorithm 
ppot sufficient warrant calling pot odds amount put pot size amount put weight subcase reduced 
simplification betting decision opponent making pot size feel sufficient capture cases prevent hands low ehs high potential severely estimated 
new re weighting algorithm 
value oe 
chose typical value oe interpolating range increase oe smaller decreasing larger reflects tendency loose players low exhibit uncertainty tight players high adhere consistently threshold 
oe gamma 
case pre flop re weighting clear source error low 
observe area re weighting function rectangle height width gamma oe triangle gamma oe oe 
gamma oe oe gamma ignore area due minimum re weighting factor 
function domain bounded oe 
gamma weaker hands re weighting factor low 
special case compensate changing re weighting function ehs re weighting factor function interpolates linearly hand value oe 
value calculated give gamma function looks rectangle right oe triangle height gamma width oe second rectangle constant low wt constant high wt weight weight array round state pot odds pot odds required observed action float float oe float weight state state float reweight value member elements ppot ehs cards hand subcase hand compute crude potential ppot hand value ehs value hand change weight potential sufficient pot odds state round river value ppot state pot odds subcase interpolate range sigma oe reweight value ehs oe oe reweight low wt reweight low wt reweight high wt reweight high wt weight hand weight hand reweight don weight go weight hand low wt weight hand low wt post flop re weighting function re weighting function oe height 
total area function area triangle subtracted gamma gamma oe want gamma see gamma gamma gamma oe leads gamma oe modeling abstraction discussion suggested maintain weight arrays opponents maintain known possible cases flop cases original hold known cards 
compute ehs opponent re weighting function weight array 
opponent know cards hold meaning hold correct assume opponent aware deck 
additionally may want consider opponent estimation ehs inflated turn observing actions denoting weakness opponents 
address problems added level abstraction opponent modeling original design 
opponent models including model effect opponents model gathered adjusted public information available hole cards private information considered public information 
re weighting step particular player ehs calculated field array section composed weight arrays opponents player 
result second re weighting round performed context 
course compute hand values betting strategy available information include subcases hole cards 
weight arrays normalized subcases included additional minor error introduced 
model action frequencies re weighting module type information useful betting strategy module 
opponent information externally weight array hand evaluation module chapter 
context subcase specific weight array calculate weighted sums infer better estimates hand strength expressed total weight subcases weaker added half total weight tied subcases divided total weight subcases 
note fashion weight array need normalized 
field array chapter problem information available multiple weight arrays get general value strength potential 
solution field array intuitive approach fits existing framework 
average add relative sense operation weight arrays opponents give new array representing entire table 
weights represent relative probabilities normalize individual weight arrays scale combined 
specifically need calculate hand values player calculate field array average normalized weight arrays players approach introduce small amount error abandoning secondorder considerations respect intersection cases error minor compared reduction complexity 
example want compute probability appropriate normalized weight arrays statement player holds statement player holds true need compute gamma fact significantly complex 
subcase need rule intersecting subcases probability player holds precludes player holding 
summary opponent modeling module includes data accumulation system infer action frequencies model player hand represented array weights 
action data gathered coarse definition context intended simple framework examine feasibility approach 
easy adjust definition context learning system interested resulting frequency observed action value calculated 
lot potential data accumulated currently ignored 
example variance measured opponents presently assumed level uncertainty consistency actions 
consider recency applying weight data points complex change system 
different levels opponent modeling examined 
generic opponent modeling action frequencies assumed predetermined defaults opponent modeling done inferring weight array re weighting system 
specific opponent modeling observed action frequencies specific opponent adjust reweighting system 
difference systems examined function heart opponent modeling 
re weighting system complex portion opponent modeling system 
involves learning distribution probable hands held observed actions storing information array weights relative probabilities opponent played hand observed actions game 
re weighting system certain oe representing threshold required making observed action hand ranking measure appropriate ir pre flop ehs post flop rounds 
linear interpolation transformation function oe applied weight array give new weight array 
problems system 
example oe fixed expert value observations 
importantly inverse re weightings call check suggest upper threshold hands opponent 
course opponent decisions may reality different metric ir ehs resulting imperfect model 
problems re weighting system presumption hand rankings properly distributed ehs optimistic view 
forming perfect model opponent general unboundedly difficult exact actions 
new techniques improve results current method capture information conveyed opponent actions 
competitive poker opponent modeling complex portrayed 
wants fool opponent constructing poor model 
example strong poker player may try create impression conservative early session exploit image opponents incorrect assumptions 
player games algorithm allows recursive definitions update opponent model observed action player action action parameters param float oe model player composed frequency count frequency see equation weight array blind forced action gives information action blind return difference specific generic generic uses defaults parameter modeling specific state round state bets call action re weight fold check action fold action check return function described section equation state round state bets call action cases second parameter ad hoc value oe see section state round reweight gamma state central opponent modeling function opponent models demonstrated improve performance practice 
maintained certain level abstraction modeling system 
example maintain opponent model opponent model opponent models maintained public information meaning re weight board cards known presume hole cards 
attempt manipulate information 
merely re weighting system accurate ehs calculated respect information opponent available 
chapter experiments experimentation provides simple way determine effectiveness changes identify potential problems shortcomings system 
loki variety different experimental methods 
primary method self play simulation different versions program 
methods difficult interpret anecdotal evidence involve play computer programs human opponents line poker server running irc internet relay chat 
self play simulations self play simulations offer convenient method comparison versions program 
addition verifying certain enhancement beneficial effect possible quantify contribution new component system 
participants simulated game versions program play proceed rapid pace results large statistically significant sample sizes 
self play simulations duplicate tournament system described principle duplicate bridge :10.1.1.21.7204
hand played memory cards dealt preceding hands possible replay deal participants holding different set hole cards time 
system simulates player game 
hand replayed times trials shuffling seating arrangement participant opportunity play set hole cards players seated relative position instance player play directly player exactly 
hole cards betting order belonging small blind identical trial 
seating permutations listed table 
arrangement greatly reduces luck element game player number bad hands 
differences performance players strongly quality decisions situation 
large reduction natural variance means seat number player round table seating assignments tournament play reproduced meaningful results obtained smaller number trials typical game setting :10.1.1.21.7204
numerous different ways self play simulation test different versions program 
simple application play copies new version copies older version differing addition new feature 
new component improved program newer version win older version 
average margin victory terms expected number small bets hand give preliminary indication relative value new enhancement 
careful drawing self play experiments 
important interpret results simulation 
format limitations concluded single experiment representative particular type game style opponent 
quite possible feature perform worse better game human opposition example 
wider variety testing necessary get accurate assessment new feature changing context simulated game 
versions loki similar fairly conservative styles 
quite possible consequences change different field opponents employ different playing styles 
example human players effect weighting function may bigger hand potential 
inter dependencies involved players affect results 
second best player may perform exploit particular bad player best player 
experiments loki tested extended periods time realistic settings human opposition occasional computer player 
purpose program participates line poker game running internet relay chat irc poker net 
human players connect irc participate games conducted dedicated server programs 
statistics player maintained real money stake may contribute results little optimistic 
different games available limit texas hold em 
level betting scale 
won net allowed play second game betting scale 
allowed play third game betting scale 
competition stronger level difficult find opponents games higher levels common 
early versions loki participated games players 
server changed allow players 
playing short handed players emphasizes need strong opponent modeling 
typically players computer win long run playing odds usually bad players 
opponents face situations non mathematical elements game important 
players strong colluding loki loses large amount money 
give bad situation continues lose 
games go significantly faster data limited context 
ignore results games players results distorted 
reported results games players sessions 
closed environment natural variance games high results depend strongly players happen playing 
consequently information gathered safe 
early versions loki mixed results irc server played games conclusive 
appeared play level average human participant open games roughly breaking course hands 
opponent modeling appeared stronger session games players version generic opponent modeling gom achieved winning rate small bets hand places loki comfortably top players play games server 
session games players version specific opponent modeling som achieved winning rate small bets hand 
difference modeling versions may significant win consistently perform better previous versions 
recognizing human opponents easily identifying loki strong weak hand occasional semi bluffing add deception added new deceptive strategies pure betting weakest hands river balancing raises occasionally raising calling check raise round 
check raising normally strongest hands ensure information reliably gained particular action fake check raises mediocre hands 
simply expert rules check raise time callers ehs 
interested machine dependent approaches computer poker loki discover best strategy situation easier introduce opponent modeling decisions 
interested performance contribution particular strategy 
advanced tactics probably explains results better 
opponent modeling versions features gom som stronger features see find noticeable performance difference gom som games som maintained winning rate small bets hand 
games gom maintained winning rate small bets hand 
stronger evidence specific opponent modeling better 
fact believe may worth weaker class human players game may lead stronger disparity higher level games 
stronger irc game earlier versions program opponent modeling lost averaging small bets hand games 
small sample size conclusive results strongly suggests losing player games 
opponent modeling demonstrated noticeable difference level som averaged small bets hand games 
probably influenced results early human players adjusted new style loki probably closer break player 
noticeably better earlier version opponent modeling 
tested gom gom som level 
third form competition introduced strictly computer programs irc server called 
programs participated copies player game 
programs loki clearly dominant established winning 
hands loki averaged small bets hand 
noted competition representative type game players quite conservative 
particular performed better open games human opposition closed experiment lost money 
despite closed environment variance quite high 
noticeable interdependencies different players 
late competition dropped apparent loki may player 
final session hands loki lost small bets hand 
changes new pre flop system prior opponent modeling loki participated ii 
copies different programs time opponents prop 
prop played roughly hands played roughly hands 
games players loki averaged winning rate small bets hand 
lost rate approximately 
iii played player limit 
time programs copies 
opponents similar design 
results higher variance addition having copies numerous players kept dropping coming back 
time easily won money lost 
hands tournament gom som approximately broke 
part tournament significantly longer gom som replaced gom som recall additional expert rules bluffing check raising 
gom played hands half players 
quarter involved players remaining quarter involved players 
games broke players involved hands achieved winning rate small bets hand 
som won small bets hand games games players 
results tournaments suggest simple program decent betting strategy expert rules play better program strengths weak link betting strategy 
addition programs playing irc numerous commercial programs available 
tested loki programmable interface 
known better worse 
final important method evaluation mentioned critique expert human players 
experts review play computer determine certain decisions reasonable circumstances indicative serious weakness misconception 
opinion appears feasible write program stronger average human player casino game loki achieved level 
betting strategy experiments sample self play experiment tested different versions loki different components betting strategy hand tournament trials 
average copies version metric performance 
results seen note betting structure 
player entire betting strategy lacked particular feature showdown odds pot odds semi bluffing 
player simple betting strategy hs 
versions moderate tightness level generic opponent modeling ensure reasonable weights 
experiment reveals danger interpreting self play simulations 
suggests feature showdown odds gain especially semi bluffing 
player won tournament large margin suggesting loki better showdown odds feature 
practice case 
trials average history features potential semi bluffing pot odds potential semi bluffing showdown odds potential pot odds showdown odds basic player betting strategy experiment example long irc session games variety human opponents showdown odds considered times call continue playing times 
games loki folded times total cost scaled betting structure won games showdown won remaining hands went showdown 
total winnings total cost initial call betting actions 
ev showdown odds net gain decision small bets ev folding decision cost winnings 
session ev feature consistently positive sessions 
longer set games decision small bets 
performance decision point dependent performance betting strategy loki situations consistent gain showdown odds 
showdown odds originally added loki estimated irc opponents holding 
bets taken seriously ehs just betting threshold 
showdown odds typically decide play hand ppot just calling threshold ehs just betting threshold 
loki estimates opponents showdown odds usually gain 
self play plays tight game extreme bet taken seriously ehs high 
decide play showdown odds mistake 
profitable trials average history bpl showdown odds experiment environment opponents frequently bluffing betting 
see reverse effect showdown odds winner self play shows results experiment copies features copies showdown odds copies bpl bpl best player loose loose non modeling player uses features betting strategy reduced thresholds looser play 
player uses fixed weight array opponents regardless actions performs re weighting reasonable set weights realistic uniform weights 
bpl bpl ignores number opponents uses hs hs ehs calculations aggressive play 
experiment clear showdown odds resulted significant performance gain large advantage bpl recognize betting strategy potential limitation need re designing particularly interested value particular feature 
showdown odds theoretically gain positive expected value weights accurate experiment shows limitations system reinforces need opponent modeling 
main focus experimentation examine benefits problems opponent modeling including difference generic specific modeling 
opponent modeling experiments humans opponent modeling inferences extrapolation limited data identify general trends errors opponent play 
ability relies opponent predictable case best players 
example may observe opponent showing failed flush draw showdown twice situations calls poor pot odds 
infer opponent values flush draws evidence contrary 
computer difficult identify parts context action important accurate inferences large quantities data 
difficult computer identify trends outside mathematically understood value system probabilistic measures potential strength particular opponent optimistic evaluation flush draws 
feature require computer learn opponent values various features particular hands 
complex problem possible tendencies anticipated computer look 
numerous statistics computer gather poker game inferred sufficient data 
time opponent reveals cards showdown retroactive analysis betting actions game data 
majority observations informed 
complete betting history player recorded data classified variety contextual information betting round bets call bets put round number active opponents previous action player 
cut loki extra information inferences information sufficient data points 
data points acquired particular context opponent modeling action frequencies weighted average pre defined defaults observed data 
context definition coarse granularity considering betting round bets call 
simple approach learn requirements opponent modeling 
better approach try identify aspects context valuable consideration 
generic opponent modeling gom generic modeling attempt opponent modeling 
assumes opponents value scale similar 
observed actions opponent adjust weight array 
statistics gathered re weighting system treats actions equally dependent context regardless player different versions loki trials 
focus experiment copies gom player betting strategy features generic opponent modeling tightness setting loose 
competition trials average history gom bpt bpl bpm generic opponent modeling experiment different non modeling players copies betting strategy features ffl bpl best player loose loose player uses subtracts pre flop ir thresholds looser play 
ffl bpm best player moderate moderate player uses defaults 
ffl bpt best player tight tight player uses adds pre flop ir thresholds tighter play 
shows results experiment 
gom quickly demonstrated clear dominance non modeling players ranked tightness play 
expected gom able exploit basic players model play fairly accurate better decisions 
gom perform players different styles play model accurate better modeling 
specific opponent modeling som specific modeling attempt observed betting history distinguish different types players 
clearly human experts trials average history som gom bpl bpt bpm specific opponent modeling experiment approach crude captures essence 
measure action frequencies rough description context frequencies appropriately adjust weight array actions 
experiment focus copies som specific opponent modeling respect copies gom previous experiment players copies bpl bpt bpm results seen 
quickly opponent modeling programs asserted superiority non modeling versions 
som able attain comparable degree success gom observed frequencies default model 
conclude basis experiment statistically significant difference modeling versions anecdotal evidence somewhat promising irc gom achieved winning rate small bets hand som achieved winning rate small bets hand 
advantage opponent modeling clear 
loki opponent modeling noticeably stronger program 
implementation specific modeling appear produce significant advantage generic modeling 
recognize granularity context gathering action frequencies may coarse error undermines gain 
example loki recognize players calling bet automatic called bet previously round second action contains formation 
variables may identification context stronger include previous action number opponents number callers remaining 
number cases large necessary combine action frequencies similar scenarios 
additionally re weighting system adjusted specific opponent provides simple frequencies 
better predict opponent handle specific subcase value system assigning strength potential simple linear function 
example opponents may value flush draws may find imperative bet mediocre hand low potential 
re weighting system neglects handling certain information 
check call observed infer opponent hand certain threshold apply inverse re weighting function weight array 
prevent loki pessimistic allow bet checks currently checks ignored loki uses hs checking opponent poses threat acted 
summary different ways evaluate loki performance controlled results easily measured 
careful interpreting results account interdependencies players 
self play difficult measure loki strength 
help determine evidence gathered play irc suggests better average human amateur multi player scenarios 
particular evidence indicates addition opponent modeling results significant increase strength 
performance gain generic modeling conclusive superiority specific modeling clear 
due granularity data gathering action frequencies re weighting information betting strategy 
fact strongly believe ad hoc betting strategy originally designed allow quickly test components may bottleneck preventing significant progress 
witnessed relatively performance sophisticated computer programs put effort designing rule betting strategy 
evidenced ease strong human players take advantage loki short handed play head head situations better players 
chapter loki successfully demonstrates beneficial opponent modeling high performance game playing program 
closed self play experiments clearly beneficial modeling results irc play promising 
necessarily follow equally successful games strong human players 
humans opponent modeling predictable players experiments 
self play experiments investigated modeling opponents vary strategy time 
interesting questions addressed 
approach approximation intuitive approach major benefits came weight array re weighting 
enumeration algorithms hand evaluation suited expression opponent modeling allowing useful asset accounting system 
performance hampered ad hoc betting strategy 
fact aspects loki tradeoff usefulness correctness places selected simple cost effective approach reasonable approximations 
provided error sided see amortizing effect 
examined error approximations worth effort limiting aspect play 
plan replacing betting strategy dependent expert rules worth examining benefits particular features 
similarly feel bot general irc play better results put time betting strategy 
amounted tweaking artificial parameters general applicability 
betting strategy opponent modeling information 
approach run simulations game weight array randomly select reasonable opponent hands weight results enumeration techniques 
specific opponent information predict opponent actions simulations resulting estimates expected value options 
presumably strategies check raising bluffing emerge naturally 
example bluffing may turn best action situation recognize opponent fold 
specific opponent modeling program som hampered crude method collecting applying observed statistics 
relevant context ignored simplicity previous action taken player 
sophisticated method observing utilizing opponent behavior allow flexible accurate opponent model 
re weighting system adjusted inverse re weightings passive actions checking calling 
presently witnessed action leads opponent average hand getting stronger 
considered upper thresholds actions implying weakness checking calling appropriately re weight weight array 
specific modeling observe variance consistency opponent exhibits behavior 
information reweighting function simple linear function fixed oe 
poker complex game 
strong play requires player handle aspects game adequately excel 
developing loki cumulative process 
improve component program apparent aspect performance bottleneck 
problem tackled longer limiting factor new weakness program play revealed 
initial opponent modeling pleased results far completed subject 
possible project driven remove human expert information 
betting strategy clearly major component needs addressed 
candidates sophisticated opponent modeling 
eventually sophisticated simulations learning pre flop play loki post flop playing ability 
concepts hand strength potential appropriate poker variant 
parts implementation weight array may specific texas hold em ideas easily variants 
possible build program best poker player world 
certainly construct program strong mathematical basis runs real time constraints 
clear form opponent modeling addition advanced features necessary beat better players 
clear difficult build maintain opponent models sufficiently detailed context sensitive 
probably close program win money typical low limit casino games far goal best world 
bibliography berliner campbell 
measuring performance potential chess programs 
artificial intelligence april 
billings :10.1.1.21.7204
computer poker 
master thesis university alberta dept computing science 
www cs ualberta ca games poker 
billings papp schaeffer szafron 
opponent modeling poker 
aaai proceedings pages 
mit press 
www cs ualberta ca games poker 
billings papp schaeffer szafron 
poker testbed ai research 
robert mercer eric neufeld editors advances artificial intelligence pages 
springer verlag 
www cs ualberta ca games poker 
carmel markovitch 
incorporating opponent models adversary search 
aaai pages 
findler 
studies machine cognition game poker 
communications acm 
findler 
computer model gambling bluffing 
ire transactions electronic computers ec march 
findler klein gould 
studies decision making game poker 
proceedings ifip congress pages 
iida van den herik 
gains risks om search 
van den herik editors advances computer chess pages maastricht netherlands 
department computer science universiteit maastricht 
koller pfeffer 
representations solutions gametheoretic problems 
artificial intelligence july 
robotics stanford edu koller papers html 
kuhn 
simplified person poker 
kuhn tucker editors contributions theory games pages 
princeton university press 
nash shapley 
simple person poker game 
kuhn tucker editors contributions theory games pages 
princeton university press 
sklansky 
theory poker 
plus publishing las vegas nv rd ed 
sklansky 
hold em poker advanced players 
plus publishing las vegas nv nd ed 
zadeh 
winning poker systems 
prentice hall englewood cliffs nj 
appendix pre flop income rates computed income rates distinct hand types paired suited unsuited 
table labeled ir number players hands dealt simulation gamma opponents 
entry indexed ir row col cards suited row col means players income rate suit ir gamma different suits ir gamma :10.1.1.21.7204
simulations pair highest income rate gain players meaning investment return profit average 
player simulation different suits lowest income rate loss invested different hand types returned non negative income 
strong correlation rankings pre flop hand rankings sklansky 
break pre flop hands groups ranked strength call ranking hands sm 
take ir reflective full game assuming break number groups number hands group group group group note hand types group away 
hands middle groups shifted class top groups virtually identical 
details comparison groups table 
interesting similarity top groups contain hands different hand third group 
ir king suit replaces jts jack suit 
fact appears trend favoring big cards ir minor discrepancy due simple minded approach simulations 
table ir income rates opponent table ir income rates opponents table ir income rates opponents group size matches group size matches ir grouping ir grouping table comparison sm ir appendix expert defined values loki uses hard coded constants optimal value difficult determine invested effort determine better value 
selected poker expert billings experimentally validated 
placeholders foresee eventually upgrading system computer determine proper behavior 
post flop betting strategy expert defined values absolute constants respectively confused 
betting raising thresholds ehs represent hand strength required actions profitable 
pre flop function called parameters group tightness position 
parameters retrieve set values base increment strategy 
function generates threshold strategy equation turn uses position 
ffl probability play value hard coded meaning estimating number players group expect players acted play flop 
ffl group pre flop reduced number classifications number players groups players 
consider important groupings ir rankings players nearly identical case 
ffl tightness settings tight moderate loose 
default loki plays loose setting 
note sets parameters relatively tight styles play 
loose set parameters considerably conservative typical loose human player 
ffl strategy different pre flop strategies may call call 
strategy different threshold value context folding strategy 
values call values call players tight moderate loose players tight moderate loose players tight moderate loose table values base increment action bets call fold check call bet raise table default frequencies case small blind fixed values strategies depending group 
ffl base increment pair base increment values defined group strategy tightness table 
small blind call threshold fixed players players equal threshold players 
call threshold players players equal threshold players 
opponent modeling expert values re weighting function 
ffl default frequencies absence sufficient data action frequencies weighted hard coded default frequencies equation 
set values table 
ffl re weighting function oe described section pre flop oe 
post flop oe gamma reflect fact tighter players adhere narrow range threshold hands 
appendix glossary glossary technical terms indicated tt poker jargon thesis 
poker term definitions selected excerpts rec gambling glossary poker terms permission main author john jr 
www com faq html 
ffl action frequency tt frequency certain opponent certain action certain context inter game statistics 
ffl active player player pot 
ffl ante small bet players required hand dealt 
games ante 
related terms blind 
ffl current total gambling funds available 
distinguished current money happen table 
see stake 
ffl bet put money pot rules game maintaining chance winning pot 
ffl bet value betting hand long run expected win loses 
antonym 
ffl round person put money pot 
ffl big blind blind bet usually raise earlier blind called small blind 
limit poker big blind usually size minimum bet round betting 
ffl blind mandatory bet certain player usually sitting left button new hand dealt 
place conjunction 
see ante big blind small blind 
ffl bet raise poor hand hoping remaining active player fold 
verb 
ffl board exposed cards hold em 
called board cards 
see community cards 
ffl button distinctive token held player sitting theoretical dealer position dealer player game 
button rotates table player opportunity act 
button refer player currently button 
ffl call put pot minimum amount money necessary continue playing 
ffl caller calls 
collectively callers ffl cap cap betting permitted raise round 
case betting said capped 
ffl check bet zero legal 
frequently sign fair hand 
ffl check raise check initially raise bet betting round 
frequently sign strength may 
see 
ffl chip gaming token place cash convenience handling counting 
standard form currency 
ffl community cards cards available player making hand 
usually dealt face middle table 
see board 
ffl 
ffl draw class poker games characterized players dealt cards face having opportunity replace original 
draw poker card draw examples usage 
ffl draw hold em games set cards dealt collectively called draw ffl draw discard number cards dealt equal number replacements :10.1.1.21.7204
ffl early position players act betting round 
see middle position late position 
ffl effective odds refinement pot odds includes estimated extra winnings cost see card 
ratio expected winnings hand cost play 
considering hand high potential card come 
ffl ehs tt acronym effective hand strength probability strongest hand ppot npot 
ehs optimistic version ignores npot ehs considered betting decision calling decision 
ffl face card jack queen king card face 
ffl face specifies card known owning player hole cards hold em 
ffl face specifies card known players community cards board 
ffl field array tt average normalized weight arrays opponents 
ffl act active player button 
ffl fixed limit betting structure amount bet specific fixed quantity 
usually specified amount bet betting rounds larger amount bet rounds 
related terms flat limit limit pot limit spread limit 
ffl flat limit variant fixed limit bets amount 
ffl flop hold em community cards dealt simultaneously 
ffl flush poker hand consisting cards suit 
ffl flush draw cards suit missing card flush 
ffl fold decline call bet dropping hand 
ffl kind hand containing cards rank 
ffl free card card dealt players checked betting round 
ffl full house hand consisting kind different pair 
ffl gom tt acronym generic opponent modeler version loki uses default action frequencies opponents re weighting system opponents 
gom version uses additional betting strategies check raising 
compare som 
ffl hand player hand set cards may showdown 
texas hold em player hand set hole cards 
ffl hand full game poker blinds ante pot awarded :10.1.1.21.7204
see trial 
ffl high card weakest poker hand unmatched cards 
ffl hit hand catch card cards improves hand hold dealt giving straight 
antonym ffl hold em generic name class poker games players receive certain number hole cards community cards 
usually betting rounds dealing hole cards dealing cards flop dealing th face card turn dealing th face card river 
ffl hold em specific sense re playing hold em term usually refers game texas hold em :10.1.1.21.7204
ffl hole cards certain poker variants hold em face cards dealt player 
called hole 
ffl hr tt acronym hand rank probability strongest hand state random hand 
hr hand rank hands 
ffl hs tt acronym hand strength probability strongest hand state 
hs hand strength opponents 
ffl immediate odds see pot odds 
ffl implied odds refinement pot odds includes money pot 
considers ratio estimated extra winnings player forms hand cost call 
ffl eligible win pot 
spoken calls 
ffl inside straight cards straight rank complete hand 
example inside straight complete hand 
compare open ended straight 
ffl kicker hands containing pairs kind highest card matched 
draw games card kept deception purposes 
ffl late position particular betting round player act players acted 
see early position middle position 
ffl limit poker poker game amount bet fixed variable prescribed maximum 
antonym limit poker 
see fixed limit 
ffl loose playing hands norm 
antonym tight 
ffl middle position betting positions approximately halfway table player act 
see early position late position 
ffl hand receive cards improve hand 
see hit 
ffl receive card improve hand 
antonym hit 
ffl limit poker game maximum bet player amount minimum money table front 
antonym limit poker 
see fixed limit 
ffl npot tt acronym negative potential probability falling ahead approximately percentage upcoming cards help opponents 
npot card potential npot card potential 
compare ppot 
ffl suit suit 
held suit flop suit 
speaking cards suit flush 
ffl pair second weakest poker hand 
contains cards rank unmatched cards 
ffl open bet hand especially draw poker 
ffl open ended straight cards straight completed drawing card 
open ended straight 
compare inside straight 
ffl card improve hand substantially 
hand outs preferable hand 
flush draw diamonds diamond 
ffl folded ineligible bet win hand 
synonym fold ffl hold em pair hole larger community card board 
ffl pair cards rank 
ffl position location betting sequence relative players hand 
position act 
ffl post flop texas hold em rounds turning flop cards flop turn river 
compare pre flop 
ffl pot total amount money bet far hand 
ffl pot limit game maximum bet determined size pot time 
note player wanting raise calls bet totals pot determine maximum amount raise 
see fixed limit 
ffl pot odds ratio money pot amount money call 
respect potential hand determine pot offers reward pay see card 
ffl ppot tt acronym positive potential probability pulling ahead approximately percentage upcoming cards sure winner 
ppot card potential ppot card potential 
cases need quick estimate ppot crude 
uses fixed rules quickly determine estimate ppot compare npot 
ffl pre flop texas hold em round preceding turning flop cards community cards 
compare post flop 
ffl pure minimal chance winning usually final round cards come 
ffl raise minimum required call forcing players put money 
ffl raiser raises 
ffl represent implying betting style particular hand 
ffl raise opponent raised 
ffl reverse implied odds refinement pot odds includes extra cost play hand 
considers ratio pot estimated extra cost play hand 
ffl re weight tt process observed action action frequency applying transformation function adjust weight array represent distribution hands held opponent 
ffl river card dealt hand hold em 
ffl roll variants dealing extra cards rules may call players roll face cards turn face 
ffl round poker variant composed rounds 
round players take action dealt new card proceed betting series 
texas hold em rounds pre flop flop turn river 
ffl royal flush ace high straight flush best possible hand regular poker 
ffl playing strong hand weakly 
see check raise 
ffl script tt definition poker variant sequence events player receives cards face followed round betting 
ffl semi bet weak hand drawing potential win hits flush draw pair semi bluffing hand 
verb 
ffl session contiguous series hands games poker 
ffl short handed adv playing opponents usually players total 
opponent modeling important 
ffl showdown point hand active players reveal cards pot awarded winner 
ffl showdown odds refinement pot odds considers ratio estimated winnings estimated cost play hand 
ffl play strong hand weakly checking betting calling raising 
usually done win extra bets keeping players rounds betting 
see 
ffl small blind games blinds blind small blind usually half second big blind 
ffl som tt acronym specific opponent modeler version loki accumulates statistics opponents calculate action frequencies appropriately re weight observed actions 
som version uses additional betting strategies check raising 
compare gom 
ffl spread limit variation fixed limit minimum maximum bets different 
game allows bets early rounds round 
game allows bets early rounds round round 
ffl stake amount money player willing able play session 
compare 
ffl steal win pot bluffing 
ffl straight hand consisting cards sequence suit 
ffl straight draw card straight 
see inside straight straight 
ffl straight flush hand consisting cards sequence suit 
ffl suited cards suit 
antonym suit 
ffl table set players playing 
ffl tell personal reveal quality hand 
constantly looking hole cards tell poor hand 
players knowing times check hole cards great hand don need look 
ffl texas hold em hold em game players receive hole cards may zero board cards hands 
see hold em 
ffl kind cards rank 
ffl tight playing fewer hands average 
antonym loose 
ffl call amount current player call continue playing factor previous betting action round 
current player called bet raise call player 
compare go 
ffl go current betting level go meaning player contribute total drop 
raise pot go ffl top pair flop games having hole card matches highest card board 
ffl 
ffl trial tt self play tournaments loki uses trial particular instance hand 
particular distribution cards hand replayed times trials shuffling seating arrangement time reduce luck element 
ffl turn fourth community card hold em 
ffl pair poker hand contains pairs different ranks kicker 
ffl weight array tt component opponent model obtain weighted sum hand evaluation algorithms 
opponent weight possible combination hole cards 
weight approximately represents conditional probability played observed manner hand 
see re weight 
ffl wild card standard card player agreement dealer choice represent card desired 
ffl world series poker series different poker games relatively large entry fees culminating entry fee limit hold em tournament winner world poker champion 
sponsored horseshoe club las vegas 

