appeared proceedings th international conference distributed computing systems hong kong may 
dynamic resource migration multiparty real time communication riccardo department computer science texas university college station tx cs tamu edu amit gupta tenet group university california berkeley international computer science institute berkeley ca amit icsi berkeley edu long lived multi party connections resource allocation subsystems distributed real time systems communication networks aware dynamically changing network load order reduce call blocking probabilities 
describe distributed mechanism dynamically reallocate migrate resources adversely affecting performance established connections receive 
addition allowing systems dynamically adapt load mechanism allows distributed relaxation resources adjustment resources due conservative assumptions connection establishment time multicast connections 
describe dynamic resource migration incorporated tenet scheme protocols multiparty real time communication 

increasing speed computer networks improvement workstation capabilities enabling new class distributed applications involving multimedia data 
widely believed applications supported general framework real time communication provides predictable performance delay bounds data delivery typically clients negotiate network service provider obtain desired quality service qos provider guarantees 
number schemes protocols proposed provide real time communication services 
schemes connection oriented reserve resources bandwidth buffers route real time connection 
qos guarantees provided network check saturation accepting new channels 
network perform admission control ensure guarantees met 
resource reservation line process establishment new channel requested routing system computes best route optimality criteria may current workload residual capacity traffic characterization blocking probability computation 
signalling protocol contacts local resource managers server server refers node link channel route allocate resources 
services provide bounds delay distinct approaches possible ffl lrm allocates resources current workload 
amount resources allocated depend performance parameters client requires 
approach rsvp takes 
ffl lrm provides signalling protocol range feasible resource allocations separate pass signalling protocol chooses final resource allocation 
approach followed 
ffl pass lrm tentative resource allocation 
signalling protocol determines performance provided current allocation levels exceeds performance bounds requested clients signalling protocol second pass called relaxation pass inform lrm reduce relax resource allocations appropriately 
approach tenet protocols taken 
approach resource allocation decisions channel oblivious channel performance bounds 
may lead inefficiencies resource allocations network meeting performance bounds 
smart resource allocation mechanism understands perfor mance bounds principle better resource allocation decisions meeting performance bounds channels 
second approach key problem managing information limiting combinatorial explosion choices alternatives 
approach insist information provided function set parameters local delay bound form provided lrm provides bounds values 
signalling protocol accumulates information obtain feasible set performance parameters decides performance bounds channel obtain decision may interactions clients inform accordingly 
second third approaches critical problem network load changes dynamically desirable network able dynamically adapt resource allocation decisions dynamically varying workload lead significant reduction call blocking probabilities connection acceptance 
simpler initial resource allocation mechanisms attractive simpler mechanisms turn channel set fast scalable 
course dynamic changes adversely affect performance active channels receive desirable distortions small 
case distortions performance bounds specified client 
describe set mechanisms referred dynamic resource migration drm dynamically change resource allocations migrating resources node node network manner resources freed congested parts network migration adversely impact performance guarantees service clients 
organized manner 
section describes tenet approach real time communication particular multi party real time communication 
discuss basic mechanisms dynamic resource reallocation section 
section discuss mechanisms incorporated distributed schemes appropriate load balancing real time networks 
section describes results obtained series simulation experiments 
conclude discussion section summary outlook 

background illustrate approach dynamic resource migration drm framework tenet multi party real time communication protocols discussion limited tenet protocols underlying ideas techniques equally applicable multi party real time communication protocols 
previous describes relevant aspects tenet discussion limit discussing salient features 
describe tenet approach real time communication follow discussion description key issues arise multi party settings 
describe aspects tenet suite state information currently maintained channels set meet client specified performance requirements 
discussion sets stage describing proposed mechanisms dynamically migrating resources tenet suite 

tenet approach real time communication scheme tenet suite implements multicast real time channel abstraction 
communication abstraction defined simplex connection source set destinations capable guaranteeing possibly different quality service qos destination 
real time channel channel short characterized tenet schemes network layer set traffic specification parameters destination quadruple qos parameters specify desired performance 
scheme allows channels established source destinations describe brevity procedure 
client wants set channel invokes real time channel administration protocol rcap passes suitable identifiers source destinations source traffic parameters destination qos parameters 
rcap gets possible route channel routing server issues message source 
message follows route replicating branch node encounters path sending copy message branches subtree 
admission tests performed server reached copy message tests unsuccessful channel reject message return source tests successful copy message sent server path reaches destinations 
destination final decision establish request new channel returns channel accept message source 
messages types wait destinations subtree subtree branch node merged resulting message forwarded reverse path source 
resources tentatively reserved channel establish message replica traversed server 
receiving returning message generally contain accepts rejects various destinations corresponding subtree server cancels reservations replies channel reject type adjusts information received accepting destination 
process adjusting resource requirements reducing satisfy needs accepting destinations called resource relaxation 
adjustments reflected return message forwarded server immediately upstream amounts resources reserved server new channel 
process source receives results request single return message transmits client evaluation action 
newly created channel reaches destinations accepted establishment request ready immediate 
remains existence torn client 

multi party issues real time communication multi party applications involve large number recipients data stream clear multicasting reduce traffic network nodes links saving valuable network resources 
key component multi party communication presence multiple senders receivers 
strawman multicast scheme require connection establishment time sources specify list receivers 
unreasonable require large scale distributed multimedia application computer conferencing sender matter central application authority knows receivers equally unreasonable require receivers know potential senders conference 
important network service supports decoupling different participants network provide rendezvous participants interested common session 
realtime nature conference favors separation senders receivers 
expected different receivers heterogeneous vary ability handle data qos requirements may 
generally unreasonable expect senders specify properties possible destinations data stream scale larger conferences 
multi party conferences tend long lived participants may join leave session progress 
important network service provide support dynamic changes group participants 
supporting abovementioned aspects multiparty communication key abstraction real time multicast group referred target set abstraction 
target set abstraction real time analog ip abstraction ip members destinations interested listening common session target set members interested destinations requested bounds performance delay jitter variation delay 
channel logically transmit data particular sender target set amounts transmitting data sender members target set 
receivers dynamically join leave target set join target set start getting data channels sending data target set 
manner target sets support decoupling senders receivers provide rendezvous 
traditional real time network systems treat traffic different connections independently determining resource requirements 
multi party real time communication results inefficient resources 
example consider audio conference persons 
strawman proposal conference set establishing multicast channels speaker sender listeners destinations 
reasonable expect person speaks time 
common sub paths channels sufficient reserve resources audio channels allow speaking 
resource allocation reduced allocation efficiency increases network clients specify resource sharing properties network network information reduce resource allocation common sub paths 
tenet scheme provides channels groups resource sharing channel groups allow network clients specify resource sharing relationships network 
example application create new channel group inform network include audio channels channel group 
client inform network server network aggregate resource allocation channels exceed audio channels 
channel establishment channels server admission test system determine allocated resources audio channels accept new channel allocating resources 
mechanism fits especially rest tenet scheme fully distributed different servers decision independently 

resource allocation multiparty real time communication pass resource allocation procedure channel establishment described section proven effective settings unicast channels 
commitment resources establishment time inappropriate longer lasting multiparty sessions experience dynamically changing environment lifetime side load network changes number participants geographic distribution dynamically varies 
appropriate resource allocation scheme allow reconsider commitment resources channel establishment time adapt changes load underlying network participant population connected channel 
typically decision particular resource allocate new channel node local 
general resource requirements interdependent nodes 
additive behavior local delays simplest example interdependence decrease priority allocation node causing increase local delay compensated increase priority node decreases local delay node maintain delay 
generally interdependencies subtle 
instance priority assigned channel node defines amount jitter introduced packets channel particular node 
amount priority resource allocated channel node controls amount buffer needed nodes downstream introduced jitter 
discussion simple relation allocated priority resource node required buffer resource nodes directly downstream illustrate interdependence resource requirements nodes 
comes relaxing tentative resource allocations global relaxation scheme order account interdependencies resource requirements 
case unicast channels relaxation done locally combination information contained establishment flowing back source implicit global relaxation policy 
scheme multicast real time channels interdependence branch node descendants effectively introduces interdependence relations resource allocations subtrees 
specifically amount resources relaxed nodes subtree depends resource requirements subtree vice versa 
resolved pass scheme described earlier require larger number passes 
proper resource reallocation procedures place possible apply conservative relaxation scheme instance relaxation establishment 
channel established resource reallocation dynamically relax resource requirements 

mechanism dynamic resource reallocation scheme nodes able resource allocations point lifetime established channel 
example channel established number nodes heavily loaded due newly established channels require resources reallocated 
cases participants performance requirements session channel may change warrant reconsideration resources allocated channel establishment time 
order efficient reduce granularity change scheme adapt light weight 
number nodes involved renegotiation kept small 
example opposite approach dynamic channel management dcm renegotiation consists re establishment entire channel 
particular attention scheme minimizing transient allocation resources re establishment process dcm easily scalable particular multicast channels 
designing dynamic resource allocation scheme important ensure qos guarantees provided active channels including channel reallocated resources affected resource reallocation process reallocation 
section describe local resource reallocation mechanism allows dynamically reallocate resources involving small number nodes fact adjacent nodes participate unicast portions channel call primary secondary tertiary node respectively nodes participate primary secondary nodes degree involved 
addition dynamic resource reallocation affect qos guarantees provided receivers 
describe steps involved resource renegotiation 
sake simplicity argument assume rate controlled fixed priority scheduling discipline nodes 
appropriate modifications description valid scheduling disciplines jitter controlled earliest deadline edd go hierarchical round robin combinations thereof 
types resource reallocation distinguished depending location multicast tree 
resource reallocation unicast portion multi cast participating nodes branch node receiver node 

resource reallocation involving branch nodes participating node forwards data successor multicast tree 

resource reallocation involving receiver node participating node serves receiver 
describing reallocation steps detail define terms nodes particular path established channel labeled nm 
reallocation node allocated buffer space scheduling priority oe channel resulting worst case delay packets value depends scheduling algorithm typically determined time demand analysis 
amount buffer space allocated node defined gamma xmin xmin xmin worst case packet inter arrival time worst case packet length respectively 
describe reallocation process detail 
describe unicast case general idea procedure 
section show basic procedure extended branching portions multicast tree 
section illustrate procedure effectively trade excessive qos typically slack receiver allocated resources allowing realization resource relaxation dynamic reallocation 
descriptions omit formal proofs reallocation process violate qos guarantees active channels 
note easy verify time delay jitter increased reallocation 

resource reallocation unicast portion multicast tree simplest case resource reallocation case participating nodes branch node multicast tree 
illustrates case reallocation procedure consists steps describe case reducing load onn reducing priority oe increasing oe step increase priority set oe lowest priority guarantees local delay gamma denotes local delay bound priority reduction 
np ns 
unicast portion multicast tree 
step modify buffer size set xmin xmin step increase buffer size set xmin gamma xmin step decrease priority set priority oe step decrease buffer size set xmin xmin illustrates form resource reallocation reallocation packets channel served high priority node low priority node reflects local worst case delays buffer sizes local worst case delay buffer requirement smaller reallocation scheduling priority reduced causing worst case delay increase 
compensated increased priority increasing priority reduces buffer requirements reduced priority causes buffer requirements regulator increase 
offset decrease buffer requirements priority queue due priority increase example illustrates resource reallocation balance resource requirements 
conclude note resource reallocation case affects buffer requirements 
reallocation scheme works branch node multicast tree 

resource reallocation involving branch nodes branch node participates reallocation affects successors 
illustrated branch node primary node np ns oe oe oe oe reallocation 
np ns oe oe oe oe reallocation 

resource reallocation unicast portion multicast tree 
np 
branching portion multicast tree 
resource reallocation 
note example secondary nodes branch nodes 
define set secondary nodes set tertiary nodes 
words denotes set successors primary node set successors nodes resource reallocation procedure case reduction priority oe node looks follows step increase priority nodes set oe lowest priority guarantees local delay gamma denotes local delay bound priority reduction 
step modify buffer size nodes set xmin xmin step increase buffer size set xmin gamma xmin step decrease priority set priority oe step decrease buffer sizes nodes set xmin xmin illustrates procedure example primary branch node successors reallocation priorities assigned secondary nodes medium low primary node assigned high priority channel 
reduction priority primary node compensated appropriate increase buffer requirements primary node increase priority secondary nodes 
buffer requirements regulators secondary nodes may offset decrease buffer requirements priority queues due priority increase 

resource reallocation involving receiver node receiver nodes nodes host receiver channel play special role resource reallocation scheme 
remember final acceptance test establishment time receiver final decision acceptance channel testing performance provides 
instance receiver node tests delay comparing delay sum local delays path source difference positive called slack node jitter np oe oe oe oe oe oe reallocation 
np oe oe oe oe oe oe reallocation 

resource reallocation involving branch node 
channel established 
see slack traded channel active resource 
resource reallocation involving receiver nodes comes forms depending receiver primary secondary node 
describe simpler reallocation procedure case receiver node primary node case slack receiver node trade reduction priority primary node 
reallocation procedure case reduction priority oe looks follows step decrease slack set gamma denotes local delay bound priority reduction 
step decrease priority set priority oe notice reallocation procedure buffers reallocated 
illustrates reallocation procedure case receiver node reducing scheduling priority 
shows reduced scheduling priority increases worst case delay bound case receiver node 
compensated reducing available slack application 

resource reallocation protocol described resource reallocation procedure assumption necessary resources available procedure invoked 
insured appropriate 
addition resource reallocation abort properly case failures resources unexpectedly unavailable 
phase commit protocol ensure atomicity reallocation process 
phase participating nodes agree tentatively reserve required resources resource reallocation take place 
node necessary resources deny participate reallocation process force reallocation abort phase 
phase completes successfully participating nodes reserved necessary resources reallocation process proceed 
second phase reallocation process actual reallocation performed described earlier sections 
second phase newly allocated resources committed channels 
reallocation process confined adjacent nodes communication overhead caused scheme small 

policies goal mechanisms described section minimize number channel establishment requests accepted lack resources channel route minimize call blocking probability 
absence routing subsystem detailed knowledge location resources initial policy minimize call blocking probability evenly distribute available resources nodes network 
note load balancing np oe application oe oe reallocation 
np oe application oe oe oe reallocation 

resource reallocation receiver node 
schemes systems multiple resource classes bandwidth scheduling priorities buffers side multi metric performance requirements delay jitter loss probability area research needs investigation 
section simple policy illustrate example resource reallocation mechanisms described earlier 
spirit assume buffer space nodes limiting factor balance priority resource 
define residual capacity node amount available resources node 
residual capacity directly reflects blocking probability caused resource availability node 
balancing policy try equalize residual capacities adjacent nodes appropriately reallocate resources case priority resource 
simple scheme example node small residual capacity initiates resource reallocation round adjacent node larger residual capacity set nodes branch node established channel oe larger oe decreasing oe increasing oe agree migrating priority resources simple policy replace resource relaxation dynamic resource reallocation scheme 
approach establishment process relax resource allocations resources entire multicast channel 
results qos guarantees receiver nodes example slack exceed far performance requirements requested clients unduly low residual capacities nodes channel 
immediately establishment channel receiver nodes trade excessive slack reductions scheduling priority 
priority reduction receiver nodes generates gradient ripples back sender eventually spreading resource requirements multicast channel 
result repeated resource reallocation process channel fully relaxed resource allocations 

network simulated 
simulation experiments series experiments measured effects simple gradient dynamic resource reallocation policy call blocking probability multiparty connections 
experiments simulated multihop network mb connections nodes 
measured connection acceptance rate randomly generating multiparty connections 
connections carry cd quality uncompressed audio traffic mb bandwidth ms delay requirements 
packet size links kb 
nodes schedule traffic rate controlled static priority discipline 
priority queues output link node priorities guarantee maximum delay queue packet transmission times respectively 
node packet mb buffer temporarily store packets traffic regulator priority queues 
senders receivers randomly placed network 
consider effect acceptance prob avg 
real time utilization number connections accept prob relax accept prob drm rt util relax rt util drm 
simulation results connections receivers routing experiment simple incremental shortest path algorithm generate multicast route discard samples connection established due bandwidth limitations 
reallocation policy experiments geared resource relaxation new connection established resource requirements balanced gradient approach considering connections established earlier considering load nodes route 
shows acceptance probability increasing number connections receivers 
graph shows connection acceptance probability significantly increased compared relaxation 
shown decrease average real time utilization priority queues 
measure defined ratio worst case blocking time suffered packets priority level worstcase delay guaranteed level averaged priority levels priority queue 

described dynamic resource migration resource reallocation scheme real time connections internetworks 
approach allows reallocate resources having migrate nodes affecting timing guarantees provided clients active real time connections 
motivate drm illustrating need distributed schemes allow adapt resource allocation system changes load 
proceed show efficiently solve resource relaxation problem multicast trees 
scheme currently implemented component control subsystem tenet suite implementation tenet scheme protocols real time multiparty communication 
currently investigating performance simple gradient distributed load balancing approaches distributed real time systems 
ties larger framework load balancing schemes systems multiple resource classes multi metric performance requirements 
resource sharing schemes described section complicate design reallocation policies introduce interdependencies unrelated channels channels members sharing group 
explore combinations local gradient approaches global potentially offline techniques account interdependencies 

acknowledgment research supported national science foundation defense advanced research projects agency darpa cooperative agreement ncr national research initiatives bell laboratories digital equipment hitachi mitsubishi electric research laboratories pacific bell international computer science institute 
views contained document authors interpreted representing official policies expressed implied government sponsoring organizations 
david clark scott shenker lixia zhang 
supporting real time applications integrated services packet network architecture mechanism 
proceedings acm sigcomm pages baltimore maryland august 
domenico ferrari hui zhang 
network support multimedia discussion tenet approach 
computer network isdn systems pages july 
riccardo 
system support efficient dynamically configurable multi party interactive multimedia applications 
proceedings third network system support digital audio video pages san diego ca november 
kumar parekh 
generalized processor sharing approach flow control integrated services networks 
phd dissertation massachusetts institute technology february 
craig partridge stephen pink 
implementation revised internet stream protocol st 
journal internetworking research experience pages 
jean giorgio 
client network interaction real time communication environment 
proceedings pages orlando florida december 
lazar 
control resources broadband networks quality service guarantees 
ieee pages october 
bruce mah 
mechanism administration realtime channels 
tech 
report ucb csd university california berkeley ca march 
lixia zhang steve deering deborah estrin scott shenker daniel zappala 
rsvp new resource reservation protocol 
ieee networks magazine vol 
pages september 
riccardo domenico ferrari amit gupta wendy howe mark moran nguyen raj yavatkar 
connection establishment multi party real time communication 
proceedings th international workshop network operating system support digital audio video durham nh april 
scott shenker lee breslau 
aspects reservation establishment 
proceedings sigcomm cambridge ma august 
amit gupta howe mark moran nguyen 
resource sharing multi party realtime communication 
proceedings infocom boston ma april 
amit gupta 
channel groups unifying abstraction specifying inter stream relationships 
tech 
report tr international computer science institute berkeley ca march 
colin hui zhang domenico ferrari 
dynamic management guaranteed performance multimedia connections 
appear acm journal multimedia systems 
hui zhang domenico ferrari 
rate controlled static priority queueing 
proceedings ieee infocom pages san francisco california april 
domenico ferrari 
design applications delay jitter control scheme packet switching internetworks 
computer communications july august 
golestani 
go queueing framework congestion management 
em proceedings acm sigcomm pages philadelphia pennsylvania september 
charles kanakia srinivasan keshav 
rate controlled servers highspeed networks 
ieee global telecommunications conference pages san diego california december 
