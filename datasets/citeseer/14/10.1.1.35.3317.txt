fast software implementation arithmetic operations gf preprint erik de win vandenberghe peter de vandewalle katholieke universiteit leuven esat heverlee belgium tel 
fax 
vandenberghe peter esat kuleuven ac 
software implementation arithmetic operations finite field gf alternative representation field elements 
important application elliptic curve cryptosystems 
previously reported implementations elliptic curve cryptosystems standard basis optimal normal basis perform field operations represent field elements polynomials coefficients smaller field gf 
calculations smaller field carried pre calculated lookup tables 
results simple routines matching structure computer memory 
irreducible trinomial field polynomial proposed crypto extended representation 
implementation resulting routines slightly faster standard basis routines 
elliptic curve public key cryptosystems rapidly gaining popularity 
group points elliptic curve cryptography suggested victor miller neal koblitz 
main advantage particular group discrete logarithm problem harder candidate groups multiplicative group finite field 
reason various subexponential algorithms exist groups applied elliptic curves 
best known algorithm computing logarithms non supersingular see elliptic curve hellman attack ph 
difficulty discrete logarithm problem length blocks keys considerably smaller typically bits 
group points elliptic curve defined field finite fields gf characteristic particular interest cryptosystems give rise efficient implementations hardware research assistant sponsored national fund scientific research belgium 
software 
group operation consists number elementary arithmetic operations underlying field addition subtraction squaring multiplication inverse calculation 
speed elementary operations executed crucial factor throughput encryption decryption signature generation verification 
calculations finite field gf field elements represented basis 
implementations standard basis optimal normal basis 
standard basis field elements represented polynomials form delta delta delta gamma gamma elements gf addition done modulo 
field operations elements consist operations polynomials field multiplication calculated multiplication polynomials followed reduction result modulo fixed irreducible polynomial degree normal basis element represented fi fi fi delta delta delta gamma fi gamma fi fixed element field elements gf 
normal base allows fast squaring multiplication complex standard basis deteriorate efficiency optimal normal basis 
optimal normal basis representation appropriate hardware fastest software implementations reported standard basis 
implementation uses third representation field elements advantages software 
introducing representation sect 
describe elliptic curve operations little detail sect 

sect 
discuss field operations new representation compare standard basis sect 

conclude timing results 
part results dd 
elliptic curve group operation elliptic curve set solutions bivariate cubic equation field 
context public key cryptosystems field gf equation form xy ax elements field 
addition operation defined set solutions point infinity added set 
element inverse gammap 
second element gammap sum calculated see formulas valid little different point infinity serves identity element 
multiple multiplied natural number calculated repeated doubling adding 
inverse operation deriving kp elliptic curve discrete log problem considered hard operation running time approximately 
equations show elliptic curve addition calculated number additions multiplications inversions underlying field gf 
see addition squaring elements gf simple operations require negligible time relative multiplication inversion 
doubling point adding points elliptic curve takes approximately field multiplications field inversion 
actual implementation elliptic curve cryptosystem operations needed 
quadratic equation solved point compression mv applied 
cryptographic algorithms require order group known calculated algorithm improved versions lm 
concentrate basic arithmetic operations gf addition squaring multiplication inversion 
alternative representation field elements known field considered vector space subfields 
proper subfields gf fields gf implementations take choose basis ffl fl fl gamma ae gf field elements represented fl fl delta delta delta gamma fl gamma gf 
software implementations kind bases characterized large number bitwise operations testing single bit shifting word number bits 
operations available standard microprocessors suited word operations 
generally chosen divisor polynomial basis gf suggested 
examined slightly general case multiple 
limits possible values multiples large causes practical limitation 
principle restrictions kind basis polynomial normal 
done believe polynomial basis suited number advantages optimal normal bases disappear 
define element gf represented polynomial ff ff delta delta delta ff gamma gamma ff elements gf 
important benefit basis coefficient represented bits fits nicely computer word bit processors 
arithmetic polynomials identical ordinary polynomials operations coefficients carried gf 
calculate gf basis chosen simplified lookup tables 
choosing particular basis gf look generator fl calculate pairs ff ff fl ff gf nf gamma 
pairs stored tables log table sorted ff table sorted takes words bits resulting total memory requirement bytes kbytes 
option fortiori excluded excessive memory needs 
tables efficiently calculate gf product elements ff fi gf fffi log ff log fi mod gamma inversion operation calculated table lookups ff gamma gamma log ff mod gamma want polynomials represent finite field elements operations done modulo fixed irreducible polynomial degree principle polynomial coefficients gf find irreducible polynomial coefficients gf ae gf table lookups saved reduction operation 
search irreducible polynomial simplified fact th degree polynomial irreducible gf irreducible gf gcd ln 
limits odd numbers power 
show reduction operation speeded irreducible trinomial requirements middle term little different 
special irreducible polynomials easy find table lists irreducible bm 
field operations polynomial basis field operations reduced operations polynomials 
field multiplication consists multiplication polynomials representing followed reduction result modulo irreducible polynomial 
consider mainly operations polynomials 
easy show irreducible iff gammat irreducible 
table 
list irreducible bm 
corresponding field size 
degree field size trinomial representation polynomials memory natural store coefficients polynomial consecutive bit words computer memory 
keep routines general possible word store length polynomial 
summary th degree polynomial stored array length array element contains number coefficients degree contains constant coefficient aa contains coefficient highest power zero polynomial represented 
addition addition finite field characteristic easy just add corresponding bits modulo 
note addition subtraction modulo operations correspond binary exclusive exor phi operation 
multiplication multiplication polynomials done shift add method addition replaced exor 
algorithm computes product stores notation sect 

initialize zero gamma gamma phi log log mod gamma gamma simple algorithm look little complicated tests necessary log zero undefined 
bit manipulations needed 
complexity linear product lengths 
number optimizations possible actual implementation 
test line successful log stored register execution inner loop 
log words stored temporary array algorithm reduce number table lookups inner loop 
squaring square polynomial coefficients gf calculated efficient way multiplying 
reason square sum equals sum squares cross term vanishes modulo 
square polynomial gamma ff gamma ff results algorithm compute gamma gamma log mod gamma gamma gamma log aa mod gamma gamma complexity algorithm linear length argument 
practical lengths faster multiplication 
modular reduction cases result polynomial multiplication squaring reduced modulo irreducible polynomial 
general reduction polynomial modulo polynomial cancel highest power say adding subtracting multiple form gammab ff gamma operation repeated decreasing values degree smaller degree simpler algorithm obtained trinomial coefficients gf calculation ff ffb considerably simplified 
resulting algorithm 
polynomial reduced degree middle term irreducible trinomial zero bm 
downto gammam gammam phi gammam gammam phi update time loop executed bits cancelled 
word length processor denoted larger efficient eliminate bits time induces restrictions trinomial 
gamma eliminated loop operation overlap gamma gammam condition satisfied gamma inversion general gamma mod iff exists ba xm polynomials case 
computed extension euclid algorithm finding greatest common divisor high level description deg denotes degree polynomial 
initialize polynomials deg return deg deg exchange exchange deg gamma deg ff ff gg ffx ffx goto algorithm maintains invariant relationships ba xm ca ym need store 
iteration degree longer decreased adding appropriate multiple shorter 
invariant relationships preserved performing operation operations repeated constant polynomial 
step algorithm degree decreased unit chance second highest power cancelled considered random shown degree lowered gamma average size subfield 
number equals standard basis quickly approximates larger subfields 
hand fixed convergence faster larger step length decreased bits 
algorithm faster polynomial basis gf standard basis 
inverse algorithm proposed calculate inverses standard basis 
finds polynomial integer satisfying ba xm inverse dividing modulo algorithm generalized polynomials larger subfields 
high level description 
initialize integer polynomials contains factor cx deg return deg deg exchange exchange ff ffg ffc goto algorithm maintains invariant relationships ba xm ca ym need store 
line removes factor preserving invariant relationships 
note line factor line sure deg deg 
line crucial adds multiple multiple implicitly multiple preserve invariant relationships factor extracted loop 
analyzing inverse algorithm observe behaviour similar euclidean algorithm 
main difference cancels powers lower degree higher degree euclidean algorithm moves higher degree lower degree 
standard basis important benefits 
firstly bitwise shift operations saved line multiplication secondly deg deg line happens roughly cases addition decrease degree reduces number iterations execution time 
advantages inverse algorithm irrelevant polynomials larger subfields bitwise shift operations deg deg probability degree decreased line small approximately 
somewhat surprising euclidean algorithm inverse algorithm comparable speed polynomials gf slightly efficient division comparison standard basis important advantage working coefficients gf bit operations needed 
disadvantage word size limited memory requirements lookup tables 
limitation bypassed modular reduction final division step inverse algorithm multiplication inverse algorithm represent majority total execution time elliptic curve addition see obvious way handle bits step 
increase processor word size result larger speed gain standard basis implementations implementations polynomials gf 
compare multiplication algorithm little detail basic multiplication algorithm standard basis 


denote bitwise shift operation left right respectively line numbers start avoid confusion multiplication algorithm sect 

gamma th bit lower 
higher 
gamma phi lower gamma gamma phi higher lower 
higher 
gamma gamma gamma phi lower cb cb phi lower update loop formed lines iterated times 
test line successful cases average loop lines executed times 
loop runs values lines executed times 
multiplication algorithm sect 
loop line iterated times test line true probability gamma 
reasoning repeated lines inner loop line executed times 
state approximately algorithm sect 
faster executing line takes time executing lines times factor equals 
faster depends heavily programming language compiler microprocessor cache size 
similar comparisons inversion field operations constitute negligible part execution time elliptic curve operation 
note standard basis algorithm optimized 
important optimization timings table shifted versions avoid shift operations inner loop 
timings timed routines 
lookup tables take bytes fit level cache memory day microprocessor case number words smaller fixed considerably faster tests give timings case 
routines written ansi 
compiler executed tests protected mode pentium pc 
table gives detailed timing results gf standard basis gf polynomial basis gf 
irreducible trinomial modular reduction inversion 
standard basis word size equals bits 
listed figures fastest routines inverse algorithm standard basis extended euclidean algorithm polynomials gf 
routines comparable optimization level put little effort reduction squaring addition routines minor impact elliptic curve operations 
table contains timing estimates elliptic curve operations 
estimates calculated adding times needed various suboperations 
exponentiation repeated elliptic curve group operation simple double add subtract algorithm assumed 
algorithm average additions subtractions needed exponentiation 
figures table show small significant advantage representation field elements polynomials gf 
proportions change reversed depending implementation computer platform field size optimization level addition possible speed gain routines alternative representation tend readable error prone standard basis 
software implementation basic arithmetic operations finite fields characteristic 
shown representations table 
times basic operations polynomials gf gf 
lengths polynomials suited field operations gf gf respectively 
tests run pentium pc ansi compiler 
standard basis pol 
gf mult 
bits theta bits inversion bits mod 
red 
bits bits squaring bits addition bits ec addition est 
ec doubling est 
ec exponentiation bit exponent est 
ms ms standard basis optimal normal basis important benefits 
interesting result inverse algorithm offers advantages calculating inverses polynomials subfield larger gf 
acknowledgment helpful comments crypto 
mullin vanstone implementation elliptic curve cryptosystems ieee journal selected areas communications vol 
june pp 

bch brunner computing multiplicative inverses gf ieee transactions computers vol 
pp 

dd de win de en van gf master thesis leuven 
dutch harper menezes vanstone public key cryptosystems small key lengths advances cryptology proc 
eurocrypt lncs ed springer verlag pp 

koblitz elliptic curve cryptosystems mathematics computation vol 
pp 

lm morain counting number points elliptic curves finite fields strategies performances advances cryptology proc 
eurocrypt lncs quisquater eds springer verlag pp 

ln finite fields addison wesley reading mass 
menezes elliptic curve public key cryptosystems kluwer academic publishers 
miller elliptic curves cryptography advances cryptology proc 
crypto lncs williams ed springer verlag pp 

mullin vanstone wilson optimal normal bases gf discrete applied mathematics vol 
pp 

mv menezes vanstone standard rsa diffie hellman related public key cryptography working draft ieee standard elliptic curve systems february 
ph hellman improved algorithm computing logarithms gf cryptographic significance ieee transactions information theory vol 
pp 

elliptic curves finite fields computation square roots mod mathematics computation vol 
pp 

malley spatscheck fast key exchange elliptic curve systems advances cryptology proc 
crypto lncs coppersmith ed springer verlag pp 

vandenberghe voor op gf master thesis leuven 
dutch article processed macro package llncs style 
