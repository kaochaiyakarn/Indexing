probabilistic datalog logic powerful retrieval methods norbert fuhr university dortmund germany 
logical approach information retrieval ir retrieval interpreted inference 
query system searching documents imply query logically logical formula true 
due intrinsic vagueness imprecision ir logic allows uncertainty reasoning 
rijsbergen probabilistic approach discussed purpose document retrieval estimation probability 
approach sets framework probabilistic ir methods 
choice appropriate probabilistic logic open problem 
rijsbergen model regarded generalization logical model databases see ullman 
query processing considered finding objects database imply query implication true 
ir generalize model switching certain uncertain inference 
implementing logical model databases variant horn logic called datalog widely 
regarding ir generalization database retrieval quite natural develop probabilistic version datalog 
described pearl pp 
combination rule approach probability theory leads certain restrictions inconsistencies 
due fact extensional semantics requires intensional semantics order yield correct results 
new approach combining datalog probability theory overcomes difficulties 
achieved intensional semantics combination logical rules 
result probabilistic version datalog called datalog major advantages datalog rule approach allows easy formulation retrieval models specific novel applications combination thesaurus retrieval hypertext bases hierarchically structured documents 
classical probabilistic ir models formulated datalog appropriate rules just special cases general probabilistic inference mechanism 
copyright fl association computing machinery permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage new copies bear notice full citation page 
copyrights components owned ny acm honored 
abstracting credit permitted 
copy republish post servers redistribute lists requires prior specific permission fee 
request permissions publications dept acm fax delta datalog allows recursive rules provides powerful inference implemented probabilistic ir model 
datalog generalization deterministic datalog standard query language ir database systems integration types systems logical level 

informal description datalog probabilistic datalog extension stratified datalog see ullman ceri 
syntactical level difference ground facts probabilistic weight may indterm ir 
indterm db 
informally speaking probabilistic weight gives probability predicate true 
example document probability ir probability databases db 
retrieving documents dealing topics accomplished means rule usual prolog datalog variables start capital letters constants lower case letters indterm ir indterm db 
obviously document fulfills predicate certain probability 
assume index terms stochastically independent 
compute probability probabilistic combination example 
similar way combination produced rules indterm ir 
indterm db 
give probability 
interesting example datalog rules performing retrieval hypertext structures directed links single documents nodes 
assume link probabilistic weights link 
link 
idea weights link certain topic certain probability topic 
probability specified weight link predicate 
formulate rules indterm 
link 
note due recursive definition document may term indirectly linked document indexed term 
query db 
return documents probability probability delta probability delta delta 
example indicates idea combining datalog probabilities yields powerful retrieval methods 
want consequently apply probability theory soon run difficulties 
assume hypertext structure search documents ir db similar ir db 
simple multiplication probabilistic weights involved inference process give document delta delta delta 
correct probability link considered twice proper result delta 
counting probabilistic event twice simple approach unable consider disjointness complex events example search documents ir db 

indterm ir indterm db 
indterm db indterm ir 
assume probabilistic independence subgoals disjoint events invalid result gamma gamma delta delta gamma delta correct probability 
way overcome problem general switch extensional semantics intensional semantics see pearl pp 
comparison approaches uncertainty reasoning 
purpose keep track events contribute derived fact 
datalog classes predicates extensional database edb predicates ground facts rules intensional database idb predicates rules specified 
datalog assume fact edb predicate corresponds basic probabilistic event assign unique event key 
fact derived idb predicate relates boolean combination basic events edb facts fact derived 
assign idb facts additionally event expression consisting boolean combination event keys corresponding edb facts 
examples letter edb predicate argument constants event keys 
idb facts denote event expression brackets 
example ir db ir db ir db ir db denotes negation 
boolean expressions identify identical events occurring disjoint events complement event 
corresponding probabilities computed correctly means sieve formula 
remainder describe syntax semantics datalog approach evaluating datalog programs 
probabilistic logics probability derived formula interval point value 
reason consider special variant datalog basic events independent disjoint 
case point values computed briefly describe prototype implementation 
application examples approach compare related give final 

syntax semantics description syntax semantics datalog assume reader familiar prolog datalog 
briefly describe features deterministic datalog focus differences 
delta syntax basic elements datalog variables starting capital letters constants numbers alphanumeric strings starting lower case letters predicates alphanumeric strings starting lower case letters 
term constant variable 
note major difference prolog datalog allow functions terms 
ground term datalog constant herbrand universe datalog program set constants occurring 
atom consists ary predicate symbol list arguments term 
literal atom negated atom 
clause finite list literals ground clause clause contain variables 
clauses containing negative literals called negative clauses positive clauses positive literals 
unit clause clause literal 
horn clauses contain positive literal 
possible types horn clauses additional restrictions apply datalog facts positive unit clauses ground clauses 
rules clauses exactly positive literal 
positive literal called head list negative literals called body rule 
datalog rules safe variables occurring head occur body rule 
goal clause negative clause represents query datalog program answered 
datalog set predicates partitioned disjoint sets 
elements denote extensionally defined predicates predicates extensions facts datalog program elements denote intensionally defined predicates extension defined means rules datalog program 
furthermore built predicates discuss explicitly 
set positive unit clauses denotes extensional part set unit clauses predicates elements 
hand gamma denotes intensional part clauses predicate 
define datalog program finite set horn clauses edb safe rule predicate occurring head belongs 
far described syntax pure datalog 
order allow negation consider extension called stratified datalog 
negated literals rule bodies allowed restriction program stratified 
checking property dependency graph datalog program constructed 
rule arc predicate occurring rule body head predicate 
stratified iff rule head predicate negated subgoal predicate path dependency graph syntax datalog slightly different stratified datalog 
datalog program consists sets pe pe intensional delta part set stratified datalog rules syntax single rules shown examples 
extensional part pe set probabilistic ground facts form ffg ground fact ff probabilistic weight ff 
probabilistic weight omitted 
furthermore ground facts unique ffg pe ff pe implies ff ff semantics datalog describing semantics datalog herbrand semantics combination possible worlds 
herbrand base hb datalog program set positive ground unit clauses formed predicate symbols constants occurring program 
furthermore denote extensional intensional part hb 
extensional database edb subset finite set positive ground facts 
deterministic datalog herbrand interpretation subset herbrand base hb 
pure datalog herbrand model herbrand model superset model 
stratified datalog closed world assumption 
rules negation herbrand model possibly minimal herbrand models exists herbrand model proper subset minimal model 
different minimal models chosen constructed way evaluating rule negative literals body set predicates occur negatively rule body computed case edb predicates answer facts followed computation answers head predicate 
stratified datalog programs procedure yields unique minimal model details see ullman pp 
ceri 
call minimum model computed way perfect herbrand model 
turn possible world semantics datalog program order benefit semantics deterministic datalog consider set probabilistic facts pe removing probabilistic weights ground facts transform pe corresponding set pe deterministic datalog clauses exists herbrand model hl pe 
interpretation pe set possible worlds world subset hl pe 
order integrate intensional part go back single possible world corresponding deterministic datalog program 
datalog programs consisting extensional clauses relational databases mapping program herbrand model bijective set extensional clauses corresponding world uniquely defined 
construct deterministic datalog program combining extensional clauses original set intensional clauses 
corresponding possible world program perfect herbrand model hp 
important property model contains subset 
having described structure possible worlds datalog program turn interpretation probabilistic weights ground facts 
denote probability structure set possible worlds described discrete probability distribution furthermore denote valuation mapping variables constants ground fact rule delta form gamma ln recursively define notion extension probabilistic term valuation world notion truth oe formula oe valuation world means rules fw gg ffg iff ff iff positive fact negative fact jf gamma ln iff fl vg fln vg fl vg extensions defined rules 
rule states extension rational constant rational number represents 
second rule specifies extension fact computed sum probabilities worlds fact true 
rule truth probabilistic facts form ffg defined stating extension fact equal extension probabilistic weight ff 
rules define truth facts rules way deterministic datalog jf denotes positive counterpart case negative fact 
concepts define validity derived probabilistic fact 
theory datalog set phi formulae closed logical consequence phi oe phi oe true worlds oe true oe phi 
formula oe valid theory phi datalog written phi oe iff phi true worlds formulae phi true 
datalog described far special case probabilistic logic halpern nilsson 
defines precise probabilities ground facts datalog program 
facts semantics described yields certain constraints probabilities 
example program indterm ir 
indterm db 
indterm ir indterm db 
extension value depending overlap worlds indterm ir true indterm db true 
outcome reflects careful interpretation knowledge case 
possibility getting specific probabilities derived facts entering probabilities boolean combinations probabilistic facts indterm ir indterm db 
approach taken probabilistic logics mentioned 
extending syntax datalog order able specify additional probabilities prefer follow approach usually taken ir due fact impracticable impossible estimate probabilities arbitrary combinations single events uses additional assumptions independence events 
procedure described detail 
comparison probabilistic logics inference networks certain independence assumptions pearl pp 

delta 
evaluation datalog programs approach evaluating datalog programs event keys event expressions 
event regard probabilistic fact extensionally derived rules 
assume set ek event keys set unique identifiers plus special elements events facts true false respectively 
define mapping pe ek gamma assigns ground fact event key constraints pe 
pe pe rule states probabilistic facts weight assigned event key second rule requests different ground facts event key case probability 
mapping recursively define event expressions derived extensional fact lv lv lv rv rule head matches lv gamma ln ln lv pe rule states form disjunction valuations fact true 
similar way rule specifies rules head matches current goal lv applied final event expression formed disjunction event expressions resulting rules 
third rule describes forming event expressions datalog rules rule states event expression negative goals formed negation event expression corresponding positive goal 
event expression ground fact event key 
ee denote set event expressions formed way 
ee boolean operators forms boolean algebra 
set ee interpretation datalog program specify mapping ee event expressions sets possible worlds set worlds fact corresponding event expression true wg 
means rules define isomorphism boolean algebra ee set algebra see wg ground fact 
gamma jf 
shown fact derived datalog program corresponding event expression gives mapping set worlds true 
principle probability true computed 
approach compute probability event expression exploiting fact boolean algebra ee apply axioms delta algebra order transform event expressions 
general probability event expression ee computed formula case complex event expressions known sieve formula applied order compute probability 
transform event expression disjunctive normal form dnf kn event atoms conjunctions event atoms event atom event key negated event key number conjuncts dnf 
boolean algebra know boolean expression transformed dnf 
apply sieve formula kn gamma gamma computing probabilities combination conjuncts simplify corresponding expressions means axioms boolean algebra 
combinations containing event atom negation yield ignored 
furthermore duplicate event keys combination removed 
way probability event expression computed sum probabilities conjunctions event atoms 
example event expression section leads computation ir db ir db ir db ir db gamma ir db ir db ir db ir db discussed possibilities going probabilistic logics chose careful interpretation probabilistic information available 
compute point value probability event expression probabilities conjuncts formed sieve formula explicitly 
probability interval result 
additional assumptions independence events allowing compute point value 
follow second approach described detail section 
delta 
datalog independence assumptions basic assumptions mentioned major goal approach development probabilistic inference scheme ir powerful classic probabilistic ir models implemented 
reason consider special case datalog assume events general independent 
furthermore may sets events disjoint 
version probabilistic datalog called datalog pid probabilistic datalog independence disjointness 
independence events means probabilityof events equals product probability 
independent events keys delta assumption suitable ir applications 
respect eqn means compute probability conjunct event atoms product probabilities single event atoms 
event atom event key take probability corresponding probabilistic ground fact case negated event key complement probability taken 
get event expression example ir db ir db ir delta gamma db gamma ir delta db 
addition independent events consider case disjoint events 
example assume uncertain information publication years books 





publication year publication year certainly 
obviously facts relating document represent disjoint events 
databases situation called imprecise attribute values 
query books published 
yield event expression 
terms sieve formula gamma 
computing expression consider events disjoint probability conjunction get correct result sum event probabilities 
general events keys disjoint means possible delta world corresponding facts true datalog pid disjoint events may occur extensional predicate events relating different extensional predicates independent 
order identify disjoint events introduced fuhr concept disjointness key relations correspond extensions extensional predicates probabilistic relation attribute set disjointness key specified 
tuples represent disjoint events identical values attributes example argument disjointness key tuples document number represent disjoint events tuples different document numbers correspond independent events 
regard possible world semantics disjointness key relational key possible world 
datalog pid declare disjointness keys predicates similar way 
purpose assume datalog pid program contains probabilistic facts pe rules declaration section specifies disjointness keys extensional predicates 
accomplished marking argument position letter belongs disjointness key example exclamation mark order distinguish declaration probabilistic fact 
disjointness key specified assume arguments belong key disjoint events possible predicate 
disjoint events computation probability conjunct event atoms modified slightly eliminating conjuncts containing event key negation removing duplicate event atoms conjunct disjoint event keys considered 
conjunct contains disjoint event keys unnegated event atoms removed 
may negated event key set pairwise disjoint events identical values disjointness key plus possibly unnegated event key set 
combination event atoms corresponding probability computed follows unnegated event key probability equal probability key 
negated event keys probability computed complement sum corresponding probabilities 
example assume event keys denote disjoint events 
compute probabilities remove conjunct gamma prototype implementation version datalog pid interpreter implemented group described 
system modified prolog interpreter 
mention major concepts implementation 
derived fact system constructs parallel resolution process corresponding event expression 
query system computes complete delta set fact event expression pairs 
identical facts set disjunction corresponding event expressions formed probability expression computed output fact 
handling negation rules resolution method prolog modified yielding fail case negated goal succeeds negated goal treated similar unnegated goal case corresponding event expression negated 
example program indterm ir 
indterm db 
indterm ir indterm db 
query succeeds yields event expression ir db 
assigned term db negated goal yield event key giving event expression ir 
ir 
failing negated goals processed way prolog 
special difficulties arise interpreter runs cycles inference process 
current implementation cope left recursive rules avoided formulation datalog pid program 
may cycles caused facts 
example consider program indterm ir 
indterm db 
link 
link 
link 
indterm 
link 
query ir prolog interpreter run cycle due cyclic link structure 
order overcome problem implementation checks new subgoal subgoal occured current path derivation tree 
case subgoal fails 
regard event expressions formed correct ignore cycles due absorption law boolean algebra 
query consideration cycle yield ir ir ir implementation able evaluate datalog pid programs restriction left recursive rules allowed 

application examples addition examples previous sections want give examples illustrate strength approach 
far considered boolean combinations terms ir queries 
express probabilistic query term weighting datalog pid accomplished regarding terms query disjoint events program 
db 
ir 
indterm db 
indterm ir 
indterm 
example query yields event expression db db ir ir 
db ir disjoint result computed scalar product query delta document delta delta 
achieve weighting scheme example vector model inquery turtle croft 
hypertext structures consider structured documents retrieval 
simplicity assume documents tree structure predicate part stating part part may assigned index terms predicate indterm 
simple rule document part document term directly indexed term part term indterm 
part 
retrieval may return document part consisting parts parts current topic 
predicate logic formulated part part part part capital letters denote variables predicate names start lowercase letters 
formula written datalog follows part 
part 
added subgoal formula order rule safe 
datalog program stratified path vice versa 
problem solved considering restricted form negation datalog called local stratification see ceri pp 
ff 
currently investigating local stratification important concept ir applications 
examples illustrating strength datalog ir applications retrieval document type hierarchies thesauri terminological logics described fuhr 

comparison approaches approach development probabilistic relational algebra pra fuhr 
pra generalization ordinary relational algebra equivalences algebra hold pra 
due fact standard relational query languages sql combination pra 
pra languages allow recursion recursive structures handled approach 
major drawback recursive structures hierarchical thesauri hypertext link structures hierarchical document structures important ir 
similar combination datalog uncertainty values schmidt 
due fact approach extensional semantics cases results conform probability theory 
probabilistic inference networks intensional semantics inquery system turtle croft aims similar goal datalog pid system allows powerful probabilistic inference classic probabilistic ir models 
delta major difference inquery allow recursive rules 
furthermore built predicates handled 
hand probabilistic inference networks inquery allow combinations probabilistic events consideration complex dependencies 
think constructs available datalog pid sufficient ir applications 
croft turtle application inquery hypertext retrieval described 
starting description hypertext base logic program program transformed inference network computing extension predicates establishing corresponding links inference network 
limitations approach due general limitations inquery mentioned 
probabilistic terminological logic named sebastiani 
combines terminological logic probabilistic logic described halpern allows probability distributions elements domain 
expressive approach suffers general problem probabilistic logics giving probability intervals derived formulas 
furthermore evaluation method programs far 
large number papers dealing application rule approaches ir considering intrinsic uncertainty vagueness ir 
example textbook describes combination ir object oriented databases hypermedia knowledge bases production rules 
datalog rules forming queries hypertext model described garg 

outlook probabilistic version datalog allows formulation powerful retrieval methods 
examples demonstrated flexibility expressiveness approach 
implementation interpreter datalog pid available 
clearly implementation suffers certain restrictions inefficiencies 
developing better implementations benefit rich evaluation methods deterministic datalog see bancilhon ramakrishnan 
currently second implementation concepts development 
may argue comparison implementation classical models inquery system approach inefficient 
corresponding datalog pid programs full expressiveness languages contain recursive rules 
deterministic case expressiveness nonrecursive stratified datalog equivalent relational algebra 
type queries specialized query evaluation methods developed standard relational database systems 
furthermore typical ir queries examples section final probabilities computed correctly considering event expressions avoiding overhead comparison today experimental systems see fuhr discussion point 
ideas working development query optimization methods nonrecursive queries probabilistic relational databases 
order extend approach investigating possibility introducing probabilistic weights rules 
obviously lead probabilistic logic identical relational calculus turn forms basis sql 
delta elements domain 
fact classical probabilistic ir models type probability possible world semantics 
interesting compare different approaches version datalog 


entwurf und implementierung einer logischen fr eine algebra 
diploma thesis universitat dortmund fachbereich informatik 
bancilhon ramakrishnan 

amateur recursive query processing strategies 
proceedings acm sigmod international conference management data pages 
acm new york 
ceri gottlob tanca 

logic databases 
springer berlin croft turtle 

retrieval model incorporating hypertext links 
proceedings hypertext pages 
acm new york 
fuhr 

probabilistic relational algebra integration information retrieval database systems 
submitted publication 
fuhr 

modelling hypermedia retrieval datalog 

eds hypertext information retrieval multimedia pages 
konstanz konstanz 
garg 

abstraction mechanisms hypertext 
communications acm pages 
halpern 

analysis order logics probability 
artificial intelligence pages 
nilsson 

probabilistic logic 
artificial intelligence pages 
chignell khoshafian wong 

intelligent databases 
wiley new york 
pearl 

probabilistic reasoning intelligent systems networks plausible inference 
morgan kaufman san mateo cal van rijsbergen 

non classical logic information retrieval 
computer journal pages 


equivalences probabilistic relational algebra 
technical report university dortmund department computer science 
schmidt steger bayer 

combining deduction certainty power magic 
kim nicolas nishio 
eds deductive object oriented databases pages 
elsevier science publishers north holland 
sebastiani 

probabilistic terminological logic modelling information retrieval 
croft van rijsbergen 
eds proceedings seventeenth annual international acm sigir conference research development information retrieval pages 
springer verlag london turtle croft 

evaluation model 
acm transactions information systems pages 
ullman 

principles knowledge volume computer science press rockville md 
