syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
epistemic representation information flow security probabilistic systems paul syverson center high assurance computing systems naval research laboratory washington dc james gray iii department computer science hong kong university science technology clear water bay kowloon hong kong set logic reasoning multilevel security probabilistic systems 
logic includes modalities time knowledge probability 
earlier gave syntactic definitions multilevel security showed semantic interpretations equivalent independently motivated information theoretic definitions 
builds earlier ways 
substantially language model computation standard halpern tuttle framework reasoning knowledge probability 
second brings distinct characterizations security 
equivalent information theoretic security criterion system free covert channels difficult prove 
verification condition implied easily provable strong 
presents characterization syntactically similar previous verification condition proven semantically equivalent security criterion 
new characterization means security criterion expressible simpler logic model 
multilevel security aspect computer security concerned protecting information classified respect multilevel hierarchy unclassified secret top secret 
probabilistic system hardware software system probabilistic choices consulting random number generator execution 
probabilistic choices useful multilevel security context supported hong kong research council 
introducing noise reduce rate eliminate illicit communication processes different classification levels 
concerned definitions perfect information theoretic multilevel security sense definitions rule illicit communication relying assumptions 
model allows system unlimited computational power definitions sufficient ensure illicit communication 
motivation reasoning probabilistic behavior systems appeared examples discussions authors cf 
bro gra mcc mcl wj 
essentially motivation possible probabilistic system satisfy existing definitions security sutherland sut mccullough restrictiveness mcc contain probabilistic covert channels 
primary contribution earlier gs unification logical approach multilevel security developed glasgow panangaden gmp bieber cuppens bc security probabilistic systems done mclean mcl browne bro gray gra 
particular proved semantic interpretation logical formula due glasgow equivalent gray probabilistic noninterference equivalent browne stochastic non interference 
gave verification condition logic proved equivalent gray applied flow model closely related mclean flow model 
builds earlier fundamental ways 
new logic corresponding semantics designed substantially recast previous standard halpern syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
tuttle framework reasoning probability knowledge computing systems ht 
second give logical characterization security job security definition remaining similar form verification condition 
gives security definition terms simpler standard modalities definitions gs 
remainder organized follows 
set model computation 
xx set syntax semantics logic 
state definition security prove equivalent probabilistic noninterference 
give 
system model section describe system model 
model give semantics logic 
describe general system model taken halpern tuttle ht 
tailor model needs halpern tuttle terminology choosing adversaries 
impose additional structure model resulting application specific model 
general system model subsection review general system model halpern tuttle 
complete description model ht 
set agents pn local state 
global state tuple local agents states 
run system mapping times global states 
assume time discrete dealing security digital level system 
example addressing security issues analog channels hardware 
ht assume times natural numbers 
probabilities moving global states represented model means labeled computation trees 
nodes trees represent global states 
node tree children node represent set global states possibly come 
arc node children labeled probability moving state 
node sum outgoing arcs 
ht assume set outgoing arcs finite arcs labeled nonzero probabilities 
final assumption viewed convention probability moving state state zero state included child state certain events system may regarded nonprobabilistic nondeterministic 
typical example occurs user choose input analysis system wish assign probability distribution choice cases regard choice nonprobabilistic 
nonprobabilistic choices system lumped single choice treated adversary prior start execution 
choice system execution purely probabilistic 
halpern tuttle words nonprobabilistic choices factored 
model computation possible choice adversary corresponds labeled computation tree 
words system represented set computation trees corresponding different choice adversary 
indication adversary choice just prior start execution 
application specific system model section impose additional structure general model described previous section 
fix set agents fix model intuitions regarding communication place environmental constraints agents fix set choices available adversary 
agents purposes limit model agents system consideration denoted sigma covert senders alternatively high environment denoted covert receivers alternatively low environment denoted remainder tacitly assume global system comprised agents 
model communication model communication similar bc gra mil 
view sigma interface collection channels inputs outputs occur 
consider agent resp consist processing done high resp low environment including communication mechanism delivers messages sigma need model messages transit halpern tuttle terminology state environment components global state included part state 
systems interest timing events concern 
see lam early description covert communication channels depend timing see 
cases model passage time set times domain runs ticks clock independent covert senders receivers processing 
example may think clock sigma system clock 
way properly account covert channels depend time 
note considering worst case scenario 
means consider fastest way adversaries synchronize clock 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
find common clock communicate means depend timing 
mechanisms high level routines may introduce covert channels see mcc take low level view particular assume input output channel unit time 
time vector inputs channel vector outputs channel 
agent produces new data value time may fact serve signal covert channel exploitation 
treat new signal events inputs 
similarly consider possibility system prevent input occurring 
system merely chooses input ignore 
input received considered output 
considerations fix model communication follows 
assume basic sets symbols nonempty finite set input output channel names representing set input values representing set output values representing set positive natural numbers 
set set times 
input channel time talking vector inputs occurs time 
denote set vectors inputs 
typical inputs vectors denoted 
similarly denote set output vectors typical output vectors denoted 
talk history input vectors time introduce notation traces 
denote set input traces length mathematically shorthand set functions theta trace ff denote single input channel time ff 
need talk infinite traces inputs 
analogous notation shorthand set functions theta similarly denote set output traces length set infinite output traces naturally output trace fi fi represents output channel time context high level means highly highly classified 
situations want talk vectors traces inputs outputs subset channels cases natural generalizations notations viz environmental constraints agent able see inputs outputs subset channels 
precise restricting vectors traces subsets input vector set channels define input vector channels similarly input trace ff set channels define ff input trace channels ff ff assume set low channels denoted subset intuitively set channels low environment able directly see 
particular able see inputs outputs occur channels practice type physical procedural constraint agent prevent directly viewing inputs outputs channels gamma hand place constraints set channels able see 
particular worst case assumption able see inputs outputs channels 
considerations consistent called secure environment assumption previous gra gs 
assumption precise terms definition adversary 
adversary discussed halpern tuttle framework nonprobabilistic choices factored execution system fixing adversary start execution 
framework define set possible adversaries choice 
adversary application pair agents attempting send data high environment system sigma low environment 
fully general model agents mixed strategies game theoretic sense 
point execution system strategy gives probability distribution set possible inputs conditioned history current point 
section example motivate need generality 
doing adversary precise definitions 
definition adversary conditional probability function ff fi 
time time syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
ff fi 
indicates probability conditional restriction ff fi 
intuitively adversary describes environment conditional distribution input vector previous history inputs outputs 
example ff fi gives probability environment producing time unit empty history 
section describe adversary description particular system sigma construct corresponding computation tree ta definition say adversary satisfies secure environment assumption respect set channels iff exists pair conditional probability functions ff fi ff fi gamma ff fi delta ffl fil delta denotes real multiplication 
secure environment assumption intuitively understood saying input channels gammal time conditionally statistically independent input channels time input channels time depends previous inputs outputs channels remainder assume adversaries satisfy secure environment assumption 
tree possible adversary think set trees indexed adversaries 
write ta ta ta clear adversary satisfies secure environment assumption wrt conditional probability functions exist fact unique 
unique adversary probability functions satisfy corresponding constraint 
may write th th want refer parts adversary individually 
note definition adversary meant general adversary discussed halpern tuttle 
fact halpern tuttle give structure adversary 
adversary application specific particular reasoning multilevel security probabilistic systems designed outside domain 
hand particular adversary represents novel application halpern tuttle framework 
examples adversary represents possible things ffl initial input system ffl schedule certain events processors steps occur 
contrast adversary represent input system 
represents mixed strategy choosing inputs system 
sense think generalization item application fits framework set halpern tuttle 
state system point computation tree ta defined state system 
purposes state includes information 

inputs outputs occurred channels current time 

ht assumption points trees unique assuming state encodes adversary 
nodes tree ta encode note assume agent knows adversary just encoded state 
think high part adversary encoded high environment low part encoded low environment 

typically additional components global state representing internal state sigma 
example describing sigma convenient internal state variables 
state variables thought vector values value state variable 
internal state exists denoted history internal states denoted fl 
computation trees set possible states system points computations talk construction computation trees 
reachable point assume sigma probability distribution outputs 
example conditional probability distribution ff fi fl vector representing values internal state variables internal system state time vector outputs produced system ff fi fl give history inputs outputs internal state values respectively 
ff fi fl adversary construct corresponding computation tree starting initial state system point syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
root tree empty histories inputs outputs iteratively extending points follows 
point tree internal system history fl input history ff output history fi 
child iff 
formed modifying internal system state extending input history output history resp 
resp 
ff fi fl ff fi positive 
cases label arc ff fi fl delta ff fi system sigma environment choices independently 
runs system run system infinite sequence states path computation trees 
want talk particular run ae time point occurs denote point pair ae 
wish talk various components run trace inputs ff outputs fi variables fl denote run ff fi fl denote point ff fi fl 
tree denote set runs infinite sequences states formed tracing paths root runs 
security applications concerned information flow system information system se 
system model adequate represent internal states traces thereof subsequent sections adequate represent systems entirely terms input output 
example system behavior time represented ff fi ff fi fl 
syntax section set formal language describe simple systems 
give axioms rules logic 
formation rules describe operation system consideration viz sigma variant lamport raw temporal logic actions lam 
primary difference add modal operator pr allows specify reason probabilistic behavior system 
roughly speaking raw temporal logic actions lamport temporal logic actions tla treatment stuttering lam 
concerned refinement omit considerations stuttering 
previous section assume basic sets symbols nonempty members usual representation talking subjects agents system 
formally subject identified process view system set channels see inputs outputs 
formulae language built rules 
ffl constants set basic symbols terms 
ffl state variables representing value variable current state terms 
state variables reserved communication channel 
state variable takes values state variable takes values note implicitly inputs covert senders receivers system sigma outputs system covert senders receivers 
sigma system consideration respect reasoning security 
mechanism need specify communication agents including system consideration 
ffl primed state variables terms 
represent value variable state 
ffl standard operators terms delta addition multiplication respectively parentheses grouping subterms form composite terms 
ffl atomic predicate equation inequality terms containing primed state variables 
ffl atomic action equation inequality terms possibly including primed unprimed state variables 
note predicates actions 
ffl action subject pr real valued term representing subjective probability assigns formula 
ffl predicate temporal formula 
ffl action temporal formula temporal formula read intuitively 
ffl build composite predicates actions temporal formulae resp usual recursive fashion 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
specify reason security properties interest add finite sets modal operators formulae kn kn rn representing knowledge relatively weak subject knowledge powerful subject permitted knowledge respectively subject represented subscript operator 
add formation rules syntax 
ffl action temporal formula resp 
subject ks representing weak subject knows representing powerful subject knows representing permitted knowledge actions temporal formulae resp 
meaning operators precise 
merely mention weak subject knowledge operators standard semantics ht powerful subject knowledge operators semantics imply greater knowledge part subject viz knowledge probability certain events 
examples give simple examples describe systems language 
ultimately sufficient formal machinery show systems secure simply set formally 
descriptions meant give reader intuitive feel meaning expressions language 
precise meanings 
second examples motivate choice modeling adversaries strategies 
example example simple encryption box uses time pad den 
channels high low tick system clock inputs high channel outputs low channel 
low output computed exclusive denoted phi high input randomly generated bit 
known results output stream uniformly distributed 
describe system follows 
fh lg 
system specified formula 
pr pr formula state variable representing output low channel output time 
pr denotes probability output time 
entire formula says times probability sigma producing clock tick equal probability producing zero equal 
note specified probability distribution inputs part environment behavior system behavior 
example second example insecure version simple encryption box 
system described shannon sha 
example tick sigma computes exclusive high input randomly generated bit sends value low channel 
system randomly generated bit tick generated sent high output channel previous tick clock 
expressed formalism follows 
fh lg 
formula specifies system 
pr pr phi note second conjunct unprimed indicating output time exclusive current output input note high agent ignores output system acts exactly system previous example perfect encryption 
particular suppose model adversary input string input provided high agent 
easy see adversary high input string fixed prior start execution output low uniformly distributed fact contain information high input string 
bit time pad time available high agent time gamma 
due algebraic properties exclusive viz phi phi high agent information counteract encryption 
particular high agent employ game theoretic strategy send information desires system low agent 
example suppose high agent wishes send sequence bits 
ll denote high input resp output time resp 
appropriate strategy high agent follows 
high agent chooses input time phi output low time denoted computed follows 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
phi phi phi line follows system description second high strategy third properties phi 
employing correct strategy high agent transmit arbitrary message sigma low agent 
course motivates choice strategies adversary input strings 
sense formal language exception modal operators ks previously mentioned operators formalize security properties interest discuss section 
describe logical axioms inference rules prove properties systems 
logic give axioms logic 
refer formulae language 
propositional reasoning instances tautologies propositional logic 
temporal reasoning standard axioms temporal reasoning discrete systems 
logic constitute generally called dum 
see gol details 
note formulae abadi uses axiomatize lamport tla aba 
labeled axioms historical names 
formulae language 


interpreted roughly saying point true 
formally viewed notational shorthand formulae 
basically guarantees temporal operator respects modus ponens 
axioms captures feature time desire 
gets transitivity 
guarantees don run time points 
guarantees points time connected 
guarantees time discrete 
points time finitely points 
real number axioms standard field order axioms real numbers apply members function terms range 
enumerate axioms 
see elementary real analysis book enumeration mar rud 
epistemic reasoning nonredundant axioms lewis system 
cf 
che gol apply strong knowledge operators weak knowledge operators operators 
state strong knowledge operators 
temporal axioms give axioms historical names 
subject formulae language 
ks ks knowledge respects modus ponens 
ks knows true 
ks ks ks don know know don know 
axioms relating weak knowledge permitted knowledge permitted knowledge strong knowledge 
kr ks rs rk rs ks random variable axioms standard requirements random variables sense 
pm positive measure formula subject pr probability event greater equal zero 
nm normalized measure channel subject pr probability possibilities sums 
pr input output axioms powerful permitted knowledge inputs outputs 
subject channel visible input output real number 
ko pr ks pr ri pr pr intuitively ko say powerful subjects know distribution outputs conditioned previous history inputs outputs seen 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
ri says subjects permitted know conditional distribution inputs 
note powerful subject knows distribution inputs conditioned previous history inputs outputs seen follows trivially ri rk theorem ki analogous ri 
theorem ki axiom ko inductively show powerful subjects know probability events see finite time 
hand subject permitted know conditional distribution outputs system secure low subject knowing distribution reveal information distribution high inputs 
absence axiom ro corresponding ko syntactically captures 
axioms 
give rules logic standard 
mp modus ponens infer 
nec necessitation rule applies modal operators introduced ks rs 
called necessitation originally applied necessity operator 
set 
infer 
note indicates derivation axioms set premises 
derivations formally defined 
case knowledge strong weak example nec says theorem derivable premises subjects know 
sufficient machinery give characterization formal derivation 
definition gamma finite set formulae language 
finite sequence formulae called derivation gamma iff satisfies ffl gamma ffl axiom 
ffl follows theorem nec 
ffl results mp 
write gamma indicate derivation gamma write indicate derivation axioms 
completes statement formal system 
semantics section syntactic system 
far intuitive meanings attach formalism 
section provide semantics system terms halpern tuttle framework application specific model set 
semantic model model tuple form hr delta powerful powerful jp weak weak jp ffi ffi jp operations ordering relation gives real numbers set worlds global states set labeled computation trees nodes sets channels possible inputs possible outputs respectively assignment function assigns semantic values syntactic expressions world values particular world indicated projection powerful weak knowledge accessibility relations subject ffi permitted knowledge accessibility relations subject 
remainder generally denote accessibility relations corresponding subject powerful weak ffi 
explained come assignment function 
assigning meaning language fundamental importance associate probability space labeled computation tree 
particular labeled computation tree ta construct sample space runs ra event space xa subsets ra probability assigned probability measure assigns probabilities members xa construction probability space quite natural standard see sei ht instances 
go detail explaining basic concepts probability measure theory cf 
hal shi 
definition labeled computation tree ta associated sample space ra set infinite paths starting root ta set ra called generator iff consists set traces common finite prefix 
generators probability theoretic events corresponding finite traces 
define event space xa unique field sets generated set generators xa smallest subset ra contains generators closed countable union complementation 
denotes powerset 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
suppose generator corresponding finite prefix ae 
probability measure defined product transition probabilities root tree path ae time unique extension entire event space hal 
assignment function point assign truth values temporal formulae point 
addition assign values variables example input channel point 
assignment function denoted define vp need assign truth values action temporal formulae 
define functions points ae ae run assign truth values action formulae pair points temporal formulae run respectively 
define vp ae mutually recursively 
additional notation 
notation nodes unique trees node ambiguity referring tree contains 
tree denote tree 
correspondence trees adversaries refer adversary corresponding tree 
denote adversary 
notation succ denote set nodes succeed tree 
notation extensions denote set infinite sequences states starting tree 
discussed ht subject point need associate sample space sample space set points tree 
intuitively points tree contains current execution subject considers possible 
set sample spaces 
time simply notation refer 
abusive probability measures particular finite set points write denote probability assigned passing points technically wrong defined certain sets runs sets points 
mapping extremely natural set runs corresponding point set runs pass point 
construction probability spaces sets runs corresponding finite sets points 
danger abuse notation greatly simplifies presentation 
standard see ht accessibility relations subject points give semantics knowledge operators 
define relations 
time simply notation powerful refer powerful subject knowledge accessibility relation weak refer weak subject knowledge accessibility relation ffi refer permitted knowledge accessibility relation 
define ae point time execution ae ff fi fl computation tree ta ffl numbers assigned number names 
ffl members assigned syntactic identifiers 
ffl channel vp ff ffl channel vp fi ffl variable name excluding channel variables fl ffl assign truth values actions need assign values terms pairs points 
constants change values move pairs points 
primed unprimed variables evaluated differently 
state variable pair points vp contrast vp vp follows vp primed terms assigned ffl composite terms assigned values point pair points natural way 
example vp vp vp syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
ffl similarly predicates action formulae assigned truth values point pair points respectively natural way 
example true iff true iff true true ffl action formula true point iff true pairs points emanating precisely vp true iff succ true needed include quantification language free metalinguistic shorthand 
ffl interpret probability action point take set pairs points emanating points restricting set compute probability pairs evaluates true 
precisely action formula subject vp pr fp succ true ffl predicate run ae ae ae ffl action temporal formula run ae ae true iff ae true ffl temporal formula true point iff true runs extending point 
precisely temporal formula vp ae extensions ae ffl composite action formulae temporal formulae assigned truth values points natural way 
example true iff true true ffl knowledge operators modal operators semantics terms accessibility relations points standard way viz powerful subject knowledge true iff powerful true weak subject knowledge true iff weak true permitted knowledge rs true iff ffi vp true complete semantics probability formulae need choose sample spaces subject point 
approach quite straightforward 
choose set points tree history inputs outputs channels occur path point precisely definitions 
definition subject ae ff fi fl ae ff fi fl runs necessarily tree 
say ae ae history time ff ff fi fi definition subject ae ae points necessarily tree 
say history conditions hold 


ae ae history time definition subject point sample space point tree tree history general setting want consider possibility subject internal state variables finer distinctions points 
application internal processing relevant subjects viz encoded adversary factored syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
computation tree 
lose needed generality making definition 
complete description assignment function need describe relations powerful weak ffi definition definition weak definition weak subject knowledge standard definition knowledge distributed system 
particular points necessarily distinct trees subject say weak subject accessible denoted weak history 
definition powerful definition powerful subject knowledge novel 
analysis distributed protocols areas computer science typical weak subject knowledge relation roughly equivalent definition accessibility powerful subject knowledge require words definition subjects know 
particular subjects know probability distribution inputs outputs channels see 
probability output low channel assuming powerful subject low environment knows 
notion precise need definitions 
definition subject set runs fae necessarily taken computation tree 
say event exists time runs ae ae having history time ae iff ae event refer condition holds length intuitively event event finite time length determine occurred 
note general event contains runs computation tree 
events measurable probability spaces 
think meta events interested measure subset runs contained computation tree 
precise introduce definition 
definition computation tree ta event projection ta denoted runs ta clear context meant may occasionally confuse meta event projection write 
observation projection event measurable 
event computation tree ta xa due restriction events observable finite time 
particular projection event tree observable finite time finite number unions generators ready give definition knowledge accessibility relation 
definition points necessarily distinct trees ta ta respectively subject 
say accessible denoted powerful iff 
history 
event ejs ejs points powerful accessible implies points history conditioned current history probability distribution events including events 
mentioned previously definition subjects know standard definition 
view case adopted worst case scenario greatest conceivable knowledge point execution system 
see choice corresponds existing information theoretic definitions perfect multilevel security 
definition permitted knowledge novel 
viewpoint subject permitted knowledge change course system execution 
subject permitted knowledge set prior start execution 
subject knowledge changes system execution 
capture subject permitted knowledge defining accessibility relation computation trees 
say points accessible history containing trees accessible roughly speaking computation trees ta ta accessible parts adversaries correspond act trees 
precise follows 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
definition subject ta ta computation trees 
say ta delta accessible ta denoted delta ta ta iff point ta point ta 
history 
channel input pr pr 
definition subject points 
say ffi accessible denoted ffi 
history 
delta tree tree 
ffi relation reflects fact subjects permitted know conditional probability distribution inputs points ffi accessible far permitted know point conditional distribution inputs visible points 
definition permitted knowledge secure environment assumption combine isolate question interests low environment come know system interest sigma activity high environment 
see question captured consider subset interface sigma 
definition permitted knowledge low environment permitted know inputs chosen high inputs chosen 
secure environment assumption get information high inputs chosen means outside sigma 
low environment able gain information permitted know information high environment gained sigma 
remainder point formula set formulae gamma indicate true gamma indicate members gamma true gamma indicate true worlds members gamma true 
soundness give syntactic characterization security show semantic interpretation syntactic characterization security equivalent certain previously developed information theoretic characterizations 
significance results reduced logic sound 
soundness guarantee formal proof security give system implies independently motivated notion security 
soundness theorem gives just correspondence 
logic sound respect semantics 
proof set gs 
completes discussion logic 
remainder focus security applications logic 
formal definition security section give definition security call formal security condition fsc time knowledge operators logic 
definition subject 
suppose gamma set premises describe system sigma 
say gamma satisfies formal security condition fsc respect formula pr kl pr derivable gamma 
say gamma satisfies semantic interpretation fsc respect gamma pr kl pr intuitively fsc says times low environment knows probability distribution output 
relationship probabilistic noninterference subsection recall definition probabilistic noninterference pni gra prove semantic interpretation fsc equivalent pni 
definition adversaries satisfy secure environment assumption 
say agree behavior iff exist unique probability functions describe definition unique probability functions describe state definition pni terms model 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
definition sigma system computation trees sigma 
say sigma satisfies probabilistic noninterference pni respect subject iff trees satisfying secure environment assumption ta ta sigma event agree behavior pni equivalent browne independently developed stochastic non interference bro 
significance pni arguably necessary sufficient condition system free covert channels cf 
bro 
state main result section state lemma interesting right 
space limitations prevent inclusion proofs results 
lemma suppose ta ta trees agree behavior satisfy secure environment assumption 
suppose points ta ta low output vector history vp pr vp pr event state theorem relating pni fsc 
theorem gamma set formulae describing sigma subject 
sigma satisfies pni respect iff gamma satisfies semantic interpretation fsc respect significance theorem soundness proven gs verifying system satisfies fsc equivalent showing satisfies pni previously mentioned necessary sufficient condition system free covert channels 
examples continued note security encryption box example respect subject formally derivable 
fact assumptions written virtually prove 
recall system specification fh lg system specified formula 
pr pr recall subjects assumed know system description holds times 
gamma kl pr pr fsc respect system pr pr kl pr pr trivially derivable gamma 
observe insecure encryption box example gamma fsc gamma encompasses formulae embody system description assumptions knowledge thereof 
obvious insecure encryption box fails satisfy pni 
attack described original example easily find adversaries satisfy secure environment assumption agree low behavior disagree probability certain low events 
low environment assign probabilities output sent high part adversary 
theorem gamma ssc 
soundness follows gamma fsc 
relation previous results gs definition security called syntactic security condition ssc 
gs rendered framework powerful subject knowledge permitted knowledge operators logic 
definition definition causality bieber cuppens bc glasgow panangaden gmp 
ssc says system secure respect set low processes logical formula formula derivable premises describing behavior system sigma 
kl rl statement ssc syntactically identical bieber cuppens definition causality due differences semantics respective logics meanings ssc causality different 
fact straightforward show deterministic systems meaning ssc equivalent technical reasons bieber cuppens definition omitted operator 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
meaning causality 
ssc additionally applies probabilistic systems ssc viewed generalization causality 
ssc requires derivation formulae language having system limited value verification 
led develop syntactic verification condition 
syntactic verification condition originally gave gs appears somewhat complex formula gs called svc fsc 
difference svc subscript antecedent fsc subscript pr kl pr pr kl pr 
subtle difference important primarily svc strong 
recall example secure encryption box 
example exclusive high input bit taken bit key stream equally 
result output low clock tick 
consider variation 
result xor output high low tick high bit input 
value output low tick 
done auditing purposes 
sense example reminiscent mcl 
readily apparent encryption box example secure 
readily apparent example violates svc fsc 
svc strong criterion multilevel security 
fsc svc easier verify impossible say practical examination 
examples trivial taken representative 
writing examining verification conditions practical significance 
regardless condition ultimately proves practically useful fsc remains theoretical importance meaning equivalent pni ssc principal syntactically verifiable 
svc remains important tying logical characterizations security information theoretic characterizations 
true ssc version previous characterization security gmp bc 
order provide connection case ssc forced represent somewhat unusual modalities strong subject knowledge permitted knowledge 
required development complex accessibility relations capture meaning ssc equivalent pni gs 
proof result respect logical framework gs 
similarly connection svc information theoretic condition afm gs proven current framework gs 
semantically 
revealing interesting right fsc requires standard knowledge operator standard semantics 
advantage characterization 
note apparent effectively capture pni fsc reformulating earlier gs framework 
provides evidence framework introduced useful 
john mclean helpful discussions anonymous referees comments 
aba mart abadi 
axiomatization lamport temporal logic actions 
technical report src october 
bc bieber cuppens 
logical view secure dependencies 
journal computer security 
bro randy browne 
stochastic non interference temporal stochastic processes covert channels 
odyssey research associates ithaca ny november 
unpublished manuscript 
bro randy browne 
turing test flow 
proc 
ieee symposium research security privacy oakland ca may 
che brian chellas 
modal logic 
cambridge university press cambridge 
den dorothy denning 
cryptography data security 
addison wesley reading massachusetts 
gmp janice glasgow glenn prakash panangaden 
logic reasoning security 
proc 
computer security foundations workshop iii nh june 
gol robert goldblatt 
logics time computation nd edition volume csli lecture notes 
csli publications stanford california 
gra james gray iii 
mathematical foundation information flow security 
journal computer security 
preliminary version appears proc 
ieee symposium research security privacy oakland ca may 
syverson gray iii 
epistemic representation information flow security probabilistic systems 
proceedings eighth ieee computer security workshop ieee computer society press june 
gs james gray iii paul syverson 
logical approach multilevel security probabilistic systems 
proceedings ieee computer society symposium research security privacy pages oakland ca may 
gs james gray iii paul syverson 
epistemology information flow multilevel security probabilistic systems 
forthcoming technical report 
hal paul 
measure theory 
springerverlag new york new york 
ht joseph halpern mark tuttle 
knowledge probability adversaries 
jacm september 
lam butler lampson 
note confinement problem 
communications acm october 
lam leslie lamport 
temporal logic actions 
technical report dec systems research center palo alto ca december 
mar marsden 
elementary classical analysis 
freeman san francisco 
mcc mccullough 
noninterference composability security properties 
proceedings ieee computer society symposium security privacy oakland ca 
mcc mccullough 
theorem multilevel security 
ieee transactions software engineering june 
mcl john mclean 
security models information flow 
proc 
ieee symposium research security privacy oakland ca may 
mil jonathan millen 
security synchronous machines 
proceedings computer security foundations workshop iii nh june 
leo marcus timothy redmond 
model theoretic approach specifying verifying hooking security policies 
proceeding computer security foundations workshop nh 
rud walter rudin 
principals mathematical analysis 
mcgraw hill new york 
sei karen seidel 
probabilistic communicating processes 
technical report university oxford lady margaret hall 
phd thesis 
sha claude shannon 
channels side information transmitter 
ibm journal research development october 
republished david slepian ed key papers development information theory ieee press 
shi 
probability volume graduate texts mathematics 
springerverlag 
sut david sutherland 
model information 
proceeding th national computer security conference baltimore md september 
wj todd dale johnson 
information flow nondeterministic systems 
proceedings ieee computer society symposium research security privacy oakland ca 
john wray 
analysis covert timing channels 
journal computer security 

