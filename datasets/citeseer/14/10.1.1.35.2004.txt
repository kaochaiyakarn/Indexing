low latency loss tolerant architecture protocol wide area group communication yair amir jonathan stanton department computer science johns hopkins university baltimore maryland usa cs jhu edu group communication systems proven tools build fault tolerant systems 
demands fault tolerance increase applications require reliable distributed computing wide area networks wide area group communication systems useful 
building wide area group communication system challenge 
presents design transport protocols spread wide area group communication system 
focus aspects system 
value overlay networks application level group communication services 
second requirements design effective low latency link protocols construct wide area group communication 
support claims results live experiments conducted internet 
keywords group communication overlay networks reliable multicast wide area networks tcp ip 
exist fundamental difficulties highperformance group communication wide area networks 
difficulties include characteristics loss rates amount buffering performance latency bandwidth vary widely different parts network 
packet loss rates latencies significantly higher variable local area networks 
supported part national security agency nsa defense advanced research projects agency darpa 
easy implement efficient reliability ordering top available wide area multicast mechanisms top local area hardware broadcast multicast 
available best effort wide area multicast mechanisms come significant limitations 
group communication years high availability application domains stock markets command control systems 
area interest group communications involves wide area applications 
include distributed simulation distributed object applications large number active objects database replication network service monitoring collaborative design interaction 
create group communication service called spread provides high performance local area wide area networks 
spread provides services traditional group communication systems including unreliable reliable delivery fifo causal total ordering membership services strong semantics 
advances allow incorporation overlay network architecture group communication system development new point point protocol wide area network tailored architecture 
spread creates overlay network impose arbitrary network configuration including example point multi point trees rings trees subgroups combinations adapt system different networking environments 
coupled new pointto point protocol wide area network hop protocol designed environment 
spread architecture allows multiple protocols links sites site 
validate usefulness hop protocol environment compare tcp wide area links sites 
spread useful applications need traditional group communication services causal total ordering membership delivery guarantees need run wide area networks 
fact available group communication system fully support strong semantics wide area networks far know 
addition applications may find spread better fit compared different reliable ip multicast schemes technical differences scalability number collaboration sessions 
ip multicast supporting small number sessions broadcast large number clients 
spread hand support large number different collaboration sessions spans internet small number participants 
reason spread utilizes unicast messages wide area network routing spread nodes overlay network 
ip multicast related resources required network routers 
scalability number groups 
spread scale number groups application imposing overhead network routers 
group naming addressing longer shared resource ip address multicast large space strings unique collaboration session 
routing 
current ip multicast routing methods build routing trees incremental way 
able scale millions users session 
spread maintain membership requires little additional reconstruct routing trees time membership changes 
provides spread ability construct optimal routing trees 
note trees overlay network physical network 
ip multicast spread support pruning 
spread toolkit available publicly 
details spread system www spread org 
overlay network architecture wide area group communication goal multicast architecture facilitate efficient group communication services local wide area networks 
services include unreliable reliable dissemination messages process groups ordering guarantees messages membership services 
services usually adhere strict semantics virtual synchrony flavors 
range services easily develop fault tolerant applications ranging replicated database servers group collaboration tools streaming multimedia 
spread system uses generally long running daemons establish basic message dissemination network provide basic membership ordering services user applications link small client library reside network connect closest daemon gain access group communication services 
small cost daemon client architecture extra context switches inter process communication modern systems cost minimal comparison wide area latencies 
site spread consists collection daemons communicate broadcast multicast domain 
usually limited local area network 
term site refer collection locally connected daemons 
site selects daemon current membership acts gateway connecting members site sites 
spread architecture solves main problems endto reliability configuration overlay network forwarding high latency links high cost membership changes scalability 
reliability guaranteed reliability result properties separate protocols spread 
link guarantees packets sent eventually reliably received side long membership change 
second membership protocols detect lost links crashed daemons network partitions recover necessary state continue making progress report application messages able reliably delivered crashes partitions 
possible cases failures slow receivers 
eventual reliability link sufficient result messages getting recipients reliably 
failures slow receivers 
impose global window outstanding messages limit speed new messages generated rate slowest receiver handle 
combined link reliability produces reliability 
failures 
membership protocol takes recovers system state resends messages needed informs application messages guaranteed reliability semantics defined extended virtual synchrony model 
general spread decouples dissemination local reliability mechanisms global ordering ity protocols 
decoupling allows messages forwarded network immediately despite losses ordering requirements 
place messages delayed spread just delivering clients preserve semantic guarantees 
decoupling local global protocols permits pruning data messages sent minimal necessary set network components compromising strong semantic guarantees 
overlay networks define overlay network virtual network constructed link connects edge nodes underlying physical network internet 
virtual link overlay network translate hops underlying network cost attached virtual link aggregated cost underlying network links travels 
spread constructs overlay network sites currently active daemons 
network constructed information contained static configuration file spread current daemon membership list available network cost information 
sources produce network dynamically changes daemons started crash partitions merges occur 
configuration file provides information potential machines spread system constrain members currently running 
overlay network calculate source optimal routing paths source site site 
source routing shortest path produces best routes feasible 
application domain spread targeted calculations associated source routing feasible 
membership change new overlay network constructed routing trees recalculated new network 
membership service provides daemon identical view current global membership link weights current overlay network 
spread daemon independently calculates shortest path multicast tree site currently connected site 
daemon uses identical weights identical graph guaranteed compute routing trees 
presents sample set sites located united states overlay networks constructed different needs 
site may contain tens daemons serving clients 
shows real network experiments reported section 
overlay network labeled multicast tree network shows shared tree ucsb osu rutgers mae east hopkins cnds multicast tree network multicast chain network multicast fanout network clarity fanout network shown mae east 
exists sites 

network testbed network tree rooted site 
network labeled multicast fanout network shows pointto multipoint multicast network site direct connections sites 
major cost overlay network overlay constructed nodes underlying network inefficiencies exist routing paths 
disadvantage outweighed key benefits overlay architecture provides algorithms overlay network easily changed require changes basic network infrastructure routers 
second routers simpler faster complex protocols processing occur nodes abundant resources exist 
example result difficulties deploying upgrading ip multicast routers high level multicast services reliability overlay network approach 
low latency forwarding group communication applications latency sensitive low level membership ordering protocols high level applications built top group communication toolkit 
spread uses approaches solve problem 
global ordering protocols spread designed possible 
second sources added latency dissemination path data messages control messages removed 
significant change design point topoint reliability protocol delay packets order forward order higher level protocol deal delivering application order 
way messages delayed receiver transit 
latency added reliability routing 
latency incurred due flow control network preserve semantics receiver 
protocol discussed section 
membership costs spread uses daemon client architecture 
architecture benefits important widearea setting resultant ability pay minimum necessary price different causes group membership changes 
simple joins leaves processes translate single message 
daemon disconnection connection pay heavy cost involved changing wide area routes 
network partitions different local area components network require heavy cost full fledged membership change 
luckily strong inverse relationship frequency events cost practical system 
process daemon membership correspond common model lightweight groups heavyweight groups :10.1.1.121.1027
wide area membership service operational spread available download details wide area membership service scope 
scalability group communication system involves tradeoffs performance scalability services 
mentioned spread supports large number groups active time large number active spread configurations time unlimited 
spread uses architecture scale number daemons users tens hundreds daemons thousands users 
hierarchy spread uses consists levels sites 
sites 
site connected point point wan links forming multicast forest optimal trees 
daemons 
site contain daemons 
site uses ring protocol provide ordering reliability flow control daemons 
users 
daemon support theory users connected practice tested upto couple 
daemon accepts tcp unix domain socket connections client applications 
wide area link protocols framework link daemons directly connected overlay network formed protocols 
section discuss requirements wide area link protocol describe hop protocol addresses requirements 
dive wide area protocols worthwhile explain protocol site 
site spread daemons ring protocol provide data dissemination reliability flow control 
ring protocol uses unreliable multicast service provided ip ideas totem system achieves similar performance 
spread couples rings wide area protocol hop protocol order create complete optimized network connecting set local area networks 
requirements wide area link protocols wide area links protocols discussed tcp hop protocol 
compare tcp link protocol spread created multicast tree hop protocol spread multicast tree 
call protocol choices tcp multicast hop multicast 
provide global group communication services link protocols provide eventually reliable transport link level flow control 
tcp mature protocol provides reliable transport flow control 
tcp provides guarantees particular fifo ordering 
tcp deliver data order cause problems multiple tcp connections chained create overlay network 
specifically messages delayed delivered order losses cause delays forwarding data link tree 
furthermore data recovered burst buffered data immediately forwarded tree 
micro delays micro bursts cause latency increases increased burstiness network causes degraded performance 
issues call design protocol better fits requirements wide area link protocol overlay architecture 
hop protocol designed provide required services specifically reliability flow control 
hop protocol forwards packets soon received prior packets missing 
spread system provides standard group communication orderings higher level messages delayed just delivered application 
tcp multicast hop multicast protocols advantages emulated multicast links application instances 
utilize multicast trees avoid sending copies data sender network achieve localized recovery lost packets requiring original sender re send data 
localized recovery crucial high latency multicast networks large small groups members widely dispersed network 
unicast link spread multicast tree buffers sending side store data successfully reached link 
current reliable multicast protocols form localized recovery creating virtual local subgroups tree nack avoidance algorithms expanding ring nacks :10.1.1.121.1027
techniques create approximation recovering missing data closest node 
spread accurate knowledge current membership structure overlay network 
discussed section protocol provide reliability directly 
rely link reliability liveness global flow control guarantee reliability 
link guaranteed eventually transfer packet side 
failure recovery liveness guaranteed spread membership protocols 
discuss hop protocol mention global optimization allow packing small messages fragmentation large messages network protocols spread ring hop tcp operate packets constructed data fragments control messages 
control information protocols piggybacked data packets possible 
data available control messages sent separate packets 
hop protocol hop protocol operates unreliable datagram service udp ip 
core goal hop protocol provide lowest latency highest throughput possible transferring packets wide area networks 
key elements hop protocol non blocking packets forwarded despite loss packets ordered earlier 
lazy selective retransmits nacks sent specific lost packets short delay avoid requesting data lost merely arrived order sequenced lost data 
rate flow control rate flow regulator provides explicit support high delay bandwidth time message arrived message transit message lost 
data messages generated site 
req req 
hop protocol forwarding scenario networks 
addition rate regulator utilize bandwidth reservations services exist physical network 
hop protocol establishes bidirectional connection daemons directly connected overlay network 
daemons maintain list counters table open packets acknowledged 
establish reliable transmission presence losses hop uses selective nacks receiver requests specific data packets identified sequence number loss detected 
receiver continues request lost packets recovered 
lost packet received nacks hop protocol declares link failed membership protocol reconfigures system 
necessary eliminate failure receive problem occur networking fault deletes certain packets malicious attacker keeps removing particular packet network 
details hop protocol space limitations 
tech report version www cnds jhu edu 
presents case hop links data flows site sites messages assigned different sequence numbers different links arrival parent node 
message labels represent message identifier sequence number assigned link 
suppose shown packet lost link sites subsequently packet lost link note loss packet preclude forwarding packet 
shows nacks messages concurrent forwarding 
message recovered immediately forwarded message retransmitted note allow aggressive behavior order sequence numbers sites follows got link sequence got link sequence got link sequence got link sequence 
reason request triggered site section evaluate hop protocol tcp usefulness providing link protocol spread group communication system 
performance results conducted experiments internet test correctness implementation measure performance different protocols 
shows layout testbed consisted sites hopkins computer science department johns hopkins university maryland 
cnds lab center networking distributed systems johns hopkins 
ucsb ece department university california santa barbara 
mae east communications network internet main connecting hubs virginia 
osu math department ohio state university 
rutgers center information management integration connectivity rutgers university new jersey 
focus architectural support protocols wide area setting computer site participated experiments 
computers involved ranged sparc ultra workstations running solaris pentium ii workstations running linux 
tests computers normal user load changes operating system 
spread protocols wall clock time effort synchronize system clocks machines 
network characteristics particular connection internet may vary significantly depending time day users news events minimize effects variations experiments experiment conducted number times times depending specific experiment 
set measurements experiment run approximately time minutes 
separate experiments reported separate graphs tables run different times comparing results tables highly accurate 
variances data point may vary time believe aggregate trends graphs results valid 
overlay networks experiment created different overlay networks sites adjusting weights links configuration spread 
fanout network contains direct link sites source sends directly site 
created assigning equal weights link 
shared tree multicast network created shown 
tree constructed measurements network latency 
experiment shown table conducted tcp link protocol spread 
table 
throughput tcp network configurations 
sending site fanout tree mae east kbits sec cnds kbits sec rutgers kbits sec ucsb kbits sec tests run networks fanout tree test sites mae east cnds rutgers ucsb source stream reliable messages bytes 
sending application site messages available spread 
remaining sites running receiving application computed running time test site 
numbers table represent throughput slowest receiving site measured second 
difference fastest slowest receiver tests negligible 
reliable multicast system maximum sustained throughput limited throughput slowest link 
table shows fanout multicast tree overlay networks better different source sites 
cnds site source fanout network provides better throughput 
probably cnds extremely high throughput connectivity internet hops form bottleneck 
rutgers ucsb multicasting multicast tree network yields better throughput 
mae east site located close major internet backbone peering point providing better connectivity typical server multicast tree network percent better fanout network 
experiment validates usefulness described section source routing overlay networks 
example messages generated cnds sent fanout configuration messages sent ucsb sent tree configuration 
link protocols evaluate tradeoffs hop protocol versus tcp link protocol 
started evaluating overhead latency associated protocol link 
latency multi link network evaluated regards number links size packets load network 
throughput link full network evaluated varying levels additional packet loss 
latency tests done application level program multicasts reliable spread message group listens response message 
second application runs site acts echo response server sending receives immediately back sender spread 
sender application calculates round trip latency times difference time received echo response time sent original message 
latency tests repeated times back back minimum average maximum reported 
results reported round trip times include time transferring message client spread daemon processing time daemon network transfer time receiving daemon processing time transfer receiving application similar reverse path back sender 
tables figures reporting ping results standard ping program run daemons byte packets 
believe ping latencies provide effective lower bound 
table 
link latency mae east ucsb 
ping tcp hop min ms average ms max ms table shows single link latency link mae east ucsb byte messages 
clearly ping latency best tcp link protocol hop link protocol minimum times close ping 
hop protocol stable tests variance milliseconds ping tcp produced large variance milliseconds minimum maximum latency 
realistically evaluate latency wide area network constructed overlay network consisting sites chain 
chain shown running mae east ucsb osu rutgers cnds hopkins 
note realize practical setup efficient chain 
chain demonstrates protocols interact packets forwarded times performance protocols scales diameter multicast network 
table 
link throughput loss 
add loss rate mbits sec percentage table 
network throughput loss 
add loss rate mbits sec percentage experiments reported chain network 
sender application run ends chain 
receiver application placed sites latency tests byte reliable message run 
results tests averaged graphed 
ping line graph calculated adding individual ping times site site chain 
results show hop latency stays close ping latency number hops distance traveled increases tcp latency significantly higher 
clear graphs percentage overhead tcp hop comparison ping times 
tcp overhead percent number links hop overhead percent little percent 
shows chain network sender placed hopkins mae east 
improved latency hop tcp network latency increases clearer 
network ping latency increases significantly osu tcp latency increases hop latency stays small percentage ping latency 
shows percentage overhead hop decreases substantially network latency increases 
network latency small example local area networks connecting cnds hopkins application ipc overhead spread comparable actual network latency 
working spread configuration local area low latency networks ring protocol tcp mae east ucsb osu rutgers cnds hopkins latency milliseconds tcp hop ping 
chain latency mae east ucsb osu rutgers cnds hopkins overhead percent tcp hop 
protocol latency overhead mae east hopkins cnds rutgers osu ucsb mae east latency milliseconds tcp hop ping 
chain latency hopkins cnds rutgers osu ucsb mae east overhead percent tcp hop 
protocol latency overhead hopkins packet size bytes latency milliseconds tcp hop 
latency different size packets load kbits sec latency milliseconds tcp hop 
latency load hop 
ring protocol designed local area networks excellent performance 
evaluate latency various packet sizes 
results chain network 
test reliable messages varying sizes sent application 
larger message sizes sent packets physical network message sent previous received throughput test 
hop protocol large increase latency attributed size message comparison tcp significant increase latency packets byte 
evaluate latency load 
results chain network 
test load application spread flooding network mae east controlled level messages second 
concurrently latency test application measured reliable byte message latency mae east hopkins 
hop protocol constant latency background load increases second 
stability load attributed hop protocol forwarding policy delay packets loss application traffic 
tcp latency shows steady increase background load increases jump second latency grows second half 
evaluated hop protocol behavior various levels packet loss 
tests done single link mae east ucsb shown table multicast tree shown results reported table 
tests done dropping packets randomly uniform distribution side link 
losses addition actual packet loss occurred network 
tests done stream reliable spread messages bytes testing application section 
link experiment throughput decreases percent actual loss rate 
quite reasonable 
network experiment sites links system maintained percent throughput percent loss link 
degradation network double loss rate single link 
believe performance demonstrated experiments validate viability usefulness hop protocol real life system settings 
related group communication systems lan environment developed history isis systems transis horus totem rmp 
systems explored different models group communication virtual synchrony extended virtual synchrony 
newer area focuses scaling group membership wide area networks 
systems added type support wide area group communication multi lan group communication 
hybrid discusses difficulties extending lan oriented protocols dynamic costly wide area setting 
hybrid system group communication application switch token symmetric vector ordering algorithm depending communication latency applications 
system provides total order whichever protocol efficient participant hybrid handle partitions network provide support orderings total 
multiple ring totem protocol allows rings interconnected gateway nodes forward packets rings 
system provides substantial performance boost compared single ring large lan environments keeps assumptions low loss rates latency fairly similar bandwidth nodes limit applicability wide area networks 
transis wide area protocols pivots nabil provide ordering delivery guarantees partitionable environment 
protocols hierarchical model network level hierarchy partitioned small sets nearby processes set static representative member higher level hierarchy 
congress approaches problem providing wide area membership services separately actual multicast ordering services provides general membership service provide different semantic guarantees 
ip multicast actively developed support internet wide unreliable multicasting scale millions users 
reliable multicast protocols developed srm rmtp local group concept :10.1.1.121.1027
development reliable protocols ip multicast focused solving scalability problems ack nack implosion bandwidth limits providing useful reliability services multimedia isochronous applications 
protocols developed localized loss recovery protocols 
srm enhancements localize recovery ttl field ip multicast request lost packet nearer nodes expand request close 
variations localized recovery discussed :10.1.1.121.1027
reliable multicast protocols dis tribution tree localize retransmits local group leader root subtree 
rmtp uses designated receivers dr act head virtual subtree localize recovery lost packets provides reliable transport file sender multiple receivers located world 
rmtp ip multicast model created user level multicast udp modified software 
rmtp examine tradeoffs link protocols discussed handles reliability entire tree dr acting aggregators global protocol information 
reliable multicast protocol provides efficient local reliability ring standard tree protocols ack trees provide reliability rings 
theoretically analyzes predicted performance protocol shows better protocols utilizing ring tree 
architecture wide area group communications implemented spread system 
architecture takes advantage ability construct user level overlay networks efficiently disseminate reliable messages process groups 
described hop efficient point point reliable transport protocol connecting sites wide area multicast tree 
experiments conducted internet validated low latency high stability hop protocol various load loss conditions 
michal amir creators spread 
programming optimal routing computations spread 
wish nabil adam richard michael melliar smith louise moser alec peterson robert stanton allowing systems 
agarwal moser melliar smith 
totem multiple ring ordering topology maintenance protocol 
acm transactions computer systems may 
amir dolev kramer malki 
transis communication subsystem high availability 
digest papers nd international symposium faulttolerant computing systems pages 
amir moser melliar smith agarwal 
totem single ring ordering membership protocol 
acm transactions computer systems november 
chockler dolev keidar 
scalable group membership services novel applications 
merritt shavit editors proceedings workshop networks distributed computing dimacs series discrete mathematics theoretical computer science 
birman joseph 
exploiting virtual synchrony distributed systems 
th annual symposium operating systems principles pages november 
birman renesse 
reliable distributed computing isis toolkit 
ieee computer society press march 
fekete lynch shvartsman 
specifying group communication service 
proceedings th annual acm symposium principles distributed computing pages august 
floyd jacobson liu mccanne zhang :10.1.1.121.1027
reliable multicast framework light weight sessions application level framing 
ieee acm transactions networking december 
gu garcia luna aceves 
new error recovery structures reliable networking 
proceedings sixth international conference computer communications networking september 
guo rodrigues :10.1.1.121.1027
dynamic light weight groups 
proceedings th international conference distributed computing systems pages may 
hofmann 
generic concept large scale multicast 
plattner editor international zurich seminar digital communications number lecture notes computer science pages 

efficient ordering messages wide area networks 
master thesis institute computer science hebrew university jerusalem jerusalem israel 
lin paul 
rmtp reliable multicast transport protocol 
proceedings ieee infocom pages march 
moser amir melliar smith agarwal 
extended virtual synchrony 
proceedings ieee th international conference distributed computing systems pages june 
biersack 
performance reliable multicast transmission 
proceedings infocom april 
renesse birman maffeis 
horus flexible group communication system 
communications acm april 
rodrigues fonseca 
hybrid protocol total order large scale systems 
proceedings th international conference distributed computing systems may 
selected portions published 
montgomery kaplan 
high performance totally ordered multicast protocol 
theory practice distributed systems international workshop lncs page september 
