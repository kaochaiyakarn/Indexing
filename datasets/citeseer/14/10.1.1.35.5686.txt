learning remove internet advertisements nicholas kushmerick department computer science university college dublin dublin ireland nick ucd fully implemented browsing assistant automatically removes advertisement images internet pages 
related systems rely hand crafted rules takes inductive learning approach automatically generating rules training examples 
experiments demonstrate approach practical line training phase takes minutes line classification takes msec classification accuracy exceeds modest set training data 
internet sites draw income third party advertisements usually form images sprinkled site pages 
judged interesting relevant users click called banner advertisements jumping advertiser site 
users prefer view advertisements 
images tend dominate page total download time users connecting slow links find advertisements substantially impede browsing 
users dislike paying services indirectly advertisers preferring direct payment services rendered 
users disagree notion advertising public internet 
fully implemented browsing assistant automatically removes banner advertisements internet pages 
advertisements removed corresponding images downloaded pages download faster 
related systems see discussion rd int 
conf 
autonomous agents 
sec 
require hand crafted rules classifies advertisements rules automatically generated inductive learning algorithm 
fig 
shows action 
system continuous small user community july see www cs ucd staff nick research ae instructions running 
proceed follows 
describe architecture implementation sec 

main contribution formalization task learning advertisement removal rules sec 

go describe experiments designed evaluate system sec 

demonstrate approach feasible line learning online classification modules reasonably fast modest amounts training data yield high accuracy sec 

second systematically explore space possible encodings learning task sec 

discuss related plans summarize contributions sec 

system fig 
shows architecture system 
comprises modules 
preliminary line phase collection training examples gathered 
second line training phase inductive learning algorithm processes examples generate set rules discriminating advertisements non advertisements 
third module scans pages fetched user removing images classified advertisements learned rules 
remainder section describe central research issue encode candidate advertisements way suitable input inductive learning algorithm 
describe module turn 
internet sites processing 
advertisements replaced innocuous transparent images simply say ad 
desired non advertising images metacrawler logo photograph gerry adams left intact 
note small mistake irish times page navigational images top page near date incorrectly classified advertisements 
encoding instances treat generation advertisement detection rules inductive learning task see 
html page pages training examples generated pages ads removed browsing processed extract zero instances 
instance corresponds candidate advertisement html page 
set training instances preclassified advertisement ad ad goal learn classifier maps instances ad ad 
central research issue choose appropriate instance encoding 
enable rapid line removal encoding derivable directly raw html encode image features color download images removed defeating purposes speeding download time 
encodes instances fixed width feature vector 
fig 
shows example html file feature encoding candidate advertisements 
specifically set feature vectors extracted internet page url base procedure 

image enclosed tag candidate advertisement non anchor images rarely advertisements ignored 
dest url anchor points line advertisement line rule learner line example gatherer training examples rules internet proxy messages browsers messages sites architecture system 
img image url 

numeric features capture geometric information image height width aspect ratio ratio width height 
features drawn directly html file image 
features missing indicated corresponding img 
tag indicate height width 
example geometric features extracted instance 
single binary feature local 
indicates dest img servers internet domain 
example dest host com page html local 
img host com image jpg img org picture gif 

instance words occurring enclosing tag ignoring punctuation case 
set binary features encode word word phrase word phrases 
features discarded phrase occurs fewer times training set 
example feature funded instances contains word phrase instance example 
note specific features generated depend particular training instances feature vectors fixed width respect set training instances 

instance alt text set alternate words img 
tag 
captions encoding contains boolean feature phrase length 
occurs times 
sponsor alt click height width 
contact alt contact info height width 
funded alt free stuff www provider com index html feature height width aspect ratio local 
sponsor sponsor contact contact funded funded free stuff free stuff contact info contact info click click www provider com index index html www com sales sales html contact contact html www mega com marketing marketing html www com ads ads gif images contact images contact contact gif www mega com jpg ad ad ad classification features alt features base features target features img features example internet page encoding instances 

additional sets features provided base url base destination url dest image url img urls binary feature corresponds server name 
punctuation case discarded rest url alt text set binary features encode phrase length 
times training set 
word phrases ignored members list containing terms www jpg html note procedure generates family encodings value maximum phrase length minimum phrase count 
current implementation 
training data gathered described sec 
encoding consisted features height width aspect ra tio local features alt features base url features destination url features image url features 
sec 
discuss varying gathering examples previous section described encoding instances 
describe example gatherer module fig 
generates collection instances 
negative positive examples advertisements important effective learning needed generate instances classified ad ad 
ad generated browsing assistant 
identifies candidate advertisements 
leaves html visually intact user point advertisements simple mouse gesture 
vector encoding advertisements stored learning module 
process generate ad 
instances certainly chosen independently assumption computational learning literature deviations apparently small system works practice 
ad generated custom built internet spider extracted images randomly generated urls 
chose random urls instance space sampled fairly feasible 
random images manually classified ad ad yielding ad additional ad 
mentioned earlier deficiencies raw html mean features generated 
examples contained missing features 
possible examples misclassified 
attempted verify classifications anecdotal evidence suggests classifications certainly imperfect 
learning rules training examples generated inductive learning algorithm process rules resulting classifier maps new instances ad ad 
learning algorithm properties 
ffl learned classifier execute quickly invoked line remove advertisements 
contrast learning occurs line relatively long learning times acceptable 
ffl learning algorithm overly sensitive missing features classification noise task exhibits properties 
ffl encode instances thousands features irrelevant 
learning algorithm scale number features insensitive irrelevant features 
ffl specific urls phrases advertisements may evolve time 
example advertiser change urls images stored 
learned classifier eventually obsolete old training examples retired 
strategy simply classifier scratch 
ideally learning algorithm incremental classifier rapidly set updates training set 
desiderata selected rules learning algorithm ripper probably suitable 
algorithms exhibit desired properties 
nearest neighbor lazy algorithms incremental classification slow accuracy sensitive irrelevant features 
rules learns fast practice benefit outweigh cost 
rules learns set rules conjunction tests predicted classification tests satisfied 
numeric features tests form constant real number 
binary features tests form 
application rules learned set rules 
representative examples follows ffl aspect ratio alt doesn contain contain click dest doesn contain www instance ad 
ffl base contain dest contains redirect cgi instance ad 
note actual rules learned rules rules reformatted easier read learning algorithm person identifies relevant phrases click 
removing advertisements module users exposed browsing assistant removes advertisements internet pages fetched 
candidate advertisements identified fetched pages example generator 
learned rules consulted classify example ad ad 
advertisements removed internet page replacing img image url url low bandwidth image 
advertisement removal module implemented proxy server 
browser requests passed forwards requested url destination replaces img returned html files appropriate 
evaluation fully implemented 
anecdotal user feedback suggests system occasionally mistakes reasonably effective removing advertisements 
line training phase rules takes cpu minutes 
requires msec remove image line classification phase excluding network time downloading original html text 
note time download typical image 
conducted series objective experiments standard machine learning cross validation methodology 
randomly partitioned gathered instances training set containing instances test set containing remainder 
invoked rules training set measured performance rules test set 
cross validated results way times 
averaging trials learned rules accuracy 
understand limitations approach measured system learning curve 
second experiment designed validate particular features encoding 
learning curves calculate learning curve system gave learning algorithm 
training data calculated fold cross validated accuracy remainder 
fig 
shows results confidence intervals repetitions process 
observed accuracy asymptotically approaches reported earlier exceeds just training data 
important respect method calculating learning curve reflect true nature task 
recall specific set features depends training set 
example phrase click assigned feature phrase occurs times training data 
order replicate learning task faithfully re ran learning curve experiment feature set re calculated train test split see fig 

conclude approach feasible relatively training examples needed achieve high accuracy 
alternative encodings sec 
described features encode candidate advertisements 
natural question better encodings exist 
initial investigation question systematically explored encodings infinite space 
recall encoding technique parameters maximum phrase length minimum number times phrase occur assigned feature 
standard encoding 
encodings obtained varying holding constant just words encoding uses just word phrases considered long phrases uses 
holding constant phrases encoding uses phrases occurring considered freq phrases uses 
setting results phrases phrase features eliminated entirely 
encodings involve list stoplist ignoring local 
aspect ratio features local respectively 
fig 
lists encodings 
recall encoding process generates different features depending training instances 
shows number features generated training examples fold cross validated accuracy 
compare encodings quantified relative efficiency 
learning algorithm consumes resources space time depend directly number features encoding 
encoding preferable increase consumed resources compensated improved accuracy 
natural way measure encoding inherent efficiency encoding calculate ratio accuracy number features accuracy encoding number features encoding efficiency gain encoding second ratio preferable 
columns fig 
show encoding efficiency efficiency gain standard standard 
gains indicate encodings efficient standard 
conclude users demand high accuracy 
standard best encoding 
user tolerate making mistakes encodings substantially efficient 
remarkably minimalist phrases encoding achieves accuracy 
leave exploration possible encodings 
accuracy test set fraction instances training fraction instances training learning curves simple methodology realistic methodology 
encoding max 
phrase length min 
phrase count list 
local 
aspect ratio 
number features accuracy efficiency ee gain ee standard just words long phrases phrases freq phrases phrases stoplist local comparison variations standard encoding 
discussion related 
systems remove advertisements internet pages generally modify raw html specification examples include doit org math www uni paderborn de axel www 
org www com 
systems rely handcrafted filtering rules 
systems support centralized repositories manually generated rules internet grows learning approach way ensure scalability 
detects flames annoying mail messages 
mail filtering tools accompanying mail environments learns flame detection rules 
ultimate task different system simply classifies entire mail messages flames example passages 
machine learning applied numerous internet applications see just examples directly relates task learning identify advertisements internet pages form information extraction 
learning approaches taken tasks see earlier message understanding conference proceedings aaai workshop machine learning information extraction 
approaches rely linguistic regularities rarely kinds internet pages concerned address limitations 
summary 
described browsing assistant automati cally learns advertisement detection rules applies rules remove advertisements internet pages browsing 
controlled experiments achieves high levels accuracy consuming modest resources processing rime preclassified training examples 
user provided anecdotal confirmation results carry real world 
building working system priority interesting technical contributions 
formalized task inductive learning 
second systematically explored space possible features encoding examples 
fully implemented additional features ffl note mistakes bottom example fig 

result reasonable mistakes involve small navigational images important images intact advertisements removed 
problems repaired gathering training examples 
important step extend user interface users add misclassified images training set learner 
ffl second user prefer sided errors doubt leave images intact 
know easy way bias rules manner extending learning algorithm 
ffl mentioned task ideal exploring incremental learning classifier modified updates training instances scratch 
described nearest neighbor lazy learning algorithms incremental undesirable reasons 
incorporating incremental decision tree rule learning algorithm improve efficiency 
ffl encoding results features crude feature selection mechanism implicitly embodied values list 
useful exploit sophisticated feature selection strategies 

research conducted author stay dublin city university 
built top proxy server doit org rules learning algorithm 
barry smyth helpful discussion 
arpa 
proc 
th message understanding conf 
morgan kaufmann 
billsus pazzani 
learning collaborative information filters 
proc 
th int 
conf 
machine learning 
cohen 
fast effective rule induction 
proc 
th int 
conf 
machine learning 
craven dipasquo freitag mccallum mitchell nigam slattery 
learning extract symbolic knowledge world wide web 
proc 
th nat 
conf 
ai 
doorenbos etzioni weld 
scalable comparison shopping agent worldwide web 
proc 
autonomous agents pages 
freitag 
information extraction html application general machine learning approach 
proc 
th nat 
conf 
ai 
koller sahami 
optimal feature selection 
proc 
th int 
conf 
machine learning 
kushmerick weld doorenbos 
wrapper induction information extraction 
proc 
th int 
joint conf 
ai 
michalski hong lavrac 
multi purpose incremental learning system aq testing application medical domains 
proc 
th nat 
conf 
ai 
mitchell 
machine learning 
mcgraw hill 
quinlan 
simplifying decision trees 
int 
studies 
soderland 
learning information extraction rules semi structured free text 
machine learning 
spertus 
automatic recognition hostile messages 
proc 
conf 
innovative applications artifical intelligence 
utgoff 
incremental induction decision trees 
machine learning 

