coarsening sampling smoothing elements multilevel method shang hua teng 
multilevel method emerged effective methods solving numerical combinatorial problems 
multigrid domain decomposition geometric search structures optimization algorithms problems partitioning sparse matrix ordering 
presents systematic treatment fundamental elements multilevel method 
illustrate examples fields importance effectiveness coarsening sampling smoothing local optimization application multilevel method 
key words 
algorithm design paradigm coarsening combinatorial optimization delaunay triangulation domain decomposition eigenvalue problems gaussian elimination geometric methods graph partitioning hierarchical methods multigrid multilevel methods nested dissection sampling smoothing spectral methods 
ams mos subject classifications 
primary 


multilevel method class algorithmic techniques solving computational optimization problems 
trademark techniques solution problem define hierarchical set problems pl sense coarser approximation gamma range 
solution pi closely related solution pi gamma gamma easier solve gamma basic strategy find solution pi pl level level construct pi gamma pi key steps multilevel method 
coarsening defines hierarchical structure pl problem 
projection produces initial solution gamma solution pi applications multigrid transform solution gamma coarser neighbor call fine coarse transformation projection 
algorithms coarse fine projection 
certain applications partitioning eigenvalue approximation additional uses fine coarse projection may improve algorithms 

smoothing constructs solution pi initial solution department computer science university illinois urbana champaign urbana il department computer science university minnesota minneapolis mn usa 
cs umn edu www cs umn edu 
supported part nsf career award ccr alfred sloan research fellowship intel research 
shang hua teng write coarsen gamma 
denote projection operation gamma project smoothing operation smooth basic scheme multilevel method described procedure number levels coarsening hierarchy 
scheme basic multilevel 
bottom phase ffl coarsen gamma 
basis step find solution pi pl 
top phase step gamma ffl pi gamma gamma project pi 
multilevel method general algorithm design paradigm 
interesting illustration show express parallel prefix sum algorithm scheme 
prefix sum scan important primitive data parallel computing 
takes associative binary operator phi ordered set returns ordered set phi phi phi phi standard recursive description commonly parallel algorithm prefix sum 
simplicity presentation assume power 
algorithm parallel prefix 
gamma phi 
parallel prefix 
phi return algorithm fact simple multilevel algorithm 
coarsening operation array length reduces array length half original array ith element new array sum gamma st gamma nd elements original array 
definition coarsen coarsen 
projection operation generates array length twice length original array th entry new array equal ith entry original array entries odd indices equal 
example project 
smoothing operation takes arrays length returns array 
write 
multilevel description parallel prefix algorithm 
algorithm multilevel parallel prefix 
bottom phase log ffl coarsen gamma 
basis step log log multilevel method 
top phase log step gamma ffl gamma gamma project gamma 
examine interesting important applications multilevel method scientific numerical computing computational geometry combinatorial optimization 
give systematic treatment general purpose algorithmic design paradigm 
goals show importance coarsening sampling smoothing applications 
context parallel implementation multilevel method number levels coarsening hierarchy closely related longest critical path method 
reducing height coarsening hierarchy enhances parallelism 
example height hierarchy parallel prefix algorithm dlog ne elements length longest critical path log 
section review basic concepts graph theory 
section discuss techniques graph coarsening applications graph theory computational geometry numerical linear algebra 
section discuss role smoothing local optimization multilevel method 
section provably multilevel algorithm mesh partitioning 
algorithm algorithm delaunay triangulation illustrate effectiveness sampling multilevel method 
section examine general multilevel schemes multigrid example 
historically multilevel method recognized numerical scientific computing community largely success multigrid 
brandt wrote beautiful survey multilevel technique various numerical algorithms applications 
presents multilevel method broader spectrum includes important results obtained brandt survey 

graph theory definitions 
graph consists finite nonempty set vertices set edges vertices assume ng 
matchings independent sets fundamental concepts graph theory 
concepts defined term pairwise independence 
edges graph independent incident common vertex vertices independent connected edge 
matching set pairwise independent edges independent set set pairwise independent vertices 
matching perfect vertex incident exactly edge maximal edge gamma incident edge maximum matching largest cardinality 
similarly define maximal maximum independent sets 
bisection graph division vertices disjoint subsets sizes differ 
general shang hua teng positive integer way partition division vertex set disjoint subsets size dn ke bn kc number vertices applications graph partitioning need restrict way partitions divide vertices exactly evenly 
notation approximately balanced way partition 
fi real number positive integer 
fi partition fg decomposes disjoint range jv ke 
way partition partition 
set edges bridge different parts partition called edge separator 
related concept vertex separator set vertices removal divides rest graph disjoint subgraphs approximately equal size 
set separator ffi splits jcj vertices gamma partitioned sets edges jaj jbj ffi function ffi 
separator tree generated recursive application separator algorithm 
separator edge vertex separator 
root tree corresponds top level separator 
root children subgraphs induced top level separator 
subtrees root generated recursively subgraphs 
associated internal node separator tree subgraph subgraph resulting removing set separators path root internal node 
clearly graph associated root original graph 
call separator tree separator tree generated separator internal node tree subgraph size 
coarsening 
section examine techniques building coarsening hierarchy graph 
give concrete example technique 
graph coarsening problem stated graph construct sequence graphs gl coarsening approximation gamma solution problem efficiently extended gamma vice versa 

edge contraction planar embedding 
simplest operation construct coarsened graph edge contraction 
contraction applied edge graph removes replaces new vertex adjacent vertices adjacent denote resulting graph see 
apply contraction operation iteratively build graph hierarchy 
algorithm edge contraction multilevel method fig 
edge contraction 

jg large choose edge 


show hierarchy multilevel algorithm computing convex embedding planar graph 
graph planar drawn euclidean plane edges point vertex common 
tutte proved connected planar graph convex representation plane drawing face exterior face convex region 
tutte result extended embedding theorem planar graph straight line representation 
gave linear time multilevel algorithm computing tutte embedding 
connected graph vertices contains edge connected 
applied edge contraction build hierarchy gn gamma contracting edges gamma connected 
bottom phase multilevel method 
basis step simple easily find convex representation planar graph vertices 
explain projection smoothing operations 
suppose obtained convex representation pi edge denote vertex obtained identifying neighbors cyclic order pi gamma neighbors neighbors planar graph minor isomorphic kuratowski theorem set vertices gamma form consecutive segment cyclic order 
modify pi convex representation pi shang hua teng mapping point mapping point close segment induced gamma 
showed coarsening hierarchy built linear time 
multilevel embedding algorithm takes linear time 
fig 
matching contraction 
matching contraction tree width calculation 
reduce height hierarchy apply edge contraction set independent edges simultaneously see resulting procedure 
algorithm matching contraction 

jg large find maximal matching 
graph obtained contracting edge 

high level description multilevel algorithm bodlaender matching contraction compute treewidth graph 
notions tree decomposition treewidth proposed robertson seymour theory graph minors 
important part large number known np hard problems shown linear time solvable graphs constant treewidth 
tree decomposition see graph pair fx ji ig tree fx ji ig family subsets node tree ffl multilevel method fig 
tree decomposition ffl edges exists ffl path treewidth tree decomposition max jx gamma 
treewidth graph possible tree decompositions multilevel method bodlaender gave linear time algorithm problem constant determine treewidth graph find tree decomposition treewidth exists 
result built earlier result bodlaender provided linear time smoothing operator give linear time algorithm problem pair constants graph tree decomposition treewidth determine treewidth answer shang hua teng algorithm fact generates tree decomposition treewidth call procedure bk smoothing refer interested readers details result 
define multilevel method need define projection operation 
maximal matching 
graph obtained contracting edges define letting endpoint edge letting vertex resulting contracting edge suppose tree decomposition treewidth letting fv jf see tree decomposition treewidth vertex expanded vertices write project 
algorithm multilevel treewidth 
bottom phase gl matching contraction 

basis step find tree decomposition xl tl gl treewidth 
top phase step gamma ffl gamma gamma bk smooth project 
carefully handling vertices large degree bodlaender showed time complexity multilevel method linear jg 
forest contraction 
maximal matching graph viewed forest graph 
forest acyclic subset edges 
defines equivalence relationship vertices vertices equivalent path connects call equivalent class component 
matching forest component size 
connected spanning tree acyclic subset edges ae connects vertices spanning tree forest component size generate smaller graph contracting component defined forest single vertex 
denote graph components connected edge gamma joins vertex component vertex second component 
algorithm forest contraction 

jg large find forest 


forest contraction design efficient minimum algorithms 
weighted connected undirected graph weight specifying length multilevel method edge connecting total weight spanning tree minimum spanning tree problem find spanning tree smallest total weight 
simplicity assume edge weights distinct 
assumption ensures minimum spanning tree unique 
case distinct ordering edges breaking ties ordering 
boruvka designed multilevel minimum spanning tree algorithm worst case time complexity log 
algorithm uses forest contraction build hierarchy 
coarsening operation described vertex minimum weight edge incident fe forest assume edge weights distinct 
call minimum incident forest 
delete resulting isolated vertices loops lowest weight edge set multiple edges 
component vertices lemma 
jv vertices 
repeatedly applying coarsen result hierarchy log level graph vertices 
lemma 
minimum spanning tree coarsen 
minimum spanning tree proof lemma direct consequence known cut property minimum spanning trees proper nonempty subset vertices lightest edge exactly endpoint belongs minimum spanning tree 
define projection operation project smoothing operation null operation application 
algorithm boruvka multilevel mst 

bottom phase jg gamma ffl find minimum incident forest ffl gamma 
basis step 

top phase ffl gamma gamma gamma number vertices reduced factor complexity algorithm log graph vertices edges 
theorem 
weighted planar graph boruvka multilevel mst time complexity 
proof euler formula number edges planar graph upper bounded linear function number vertices 
edge contraction preserves planar shang hua teng graphs number edges boruvka multilevel mst reduces factor level coarsening hierarchy 
time complexity finding minimum incident forest upper bounded linear function number edges 
total complexity algorithm 
fig 
mis coarsening 
mis coarsening eigenvalue approximation 
coarsening technique uses maximal independent set mis graph 
graph mis define new graph pair vertices put iff exists vertex belong see 
write coarsen mis 
build coarsening hierarchy applying idea iteratively 
algorithm mis coarsening 

jg large choose mis 
coarsen mis 

mis coarsening useful approximation graph eigenvectors 
introduce basic concepts spectra graph 
adjacency matrix graph theta matrix th entry 
diagonal entries defined 
theta diagonal matrix entries degree ith vertex laplacian graph defined gamma ones vector eigenvector laplacian matrix associated eigenvalue 
laplacian matrices positive semidefinite eigenvalues non negative 
second smallest eigenvalue multilevel method laplacian associated eigenvector called fiedler vector graph particular interests applications graph partitioning 
simplest way fiedler vector partition graph divide graph median vertices entries smaller median assigned part partition vertices entries larger equal median assigned part 
strategy referred spectral bisection 
spectral bisection fail miserably graphs conceivably arise practice shown miller 
fortunately result spielman teng showed careful fiedler vector produce provably partition planar graphs finite element meshes body simulation graphs 
vector gamma fiedler value min minimum occurring fiedler vector 
general rayleigh quotient vector way approximate fiedler vector graph lanczos iterative method 
barnard simon showed experiments hierarchy generated mis coarsening approximate fiedler vector efficiently direct application lanczos algorithm 
introduce projection operation 
graph vertices mis coarsen mis assume vertices 
approximation fiedler vector define place vector fn assume 
set value corresponding entry set average projected values neighbors jn sj set neighbors denote project mis 
smoothing operation rayleigh quotient iteration procedure parlett 
algorithm rayleigh smoothing ffl 

ae gamma 
ae ffl solve gamma jjxjj shang hua teng ae gamma multilevel fiedler method algorithm multilevel fiedler 
bottom phase gl mis coarsening 

basis step find fiedler vector fl gl lanczos method 

top phase step gamma ffl gamma rayleigh smoothing project mis gamma 

dual mis coarsening point location 
mis coarsening graph constructing induced graph mis subsection examine way coarsen graph removing mis keeping 
illustrate idea point location planar division voronoi diagram delaunay triangulation 
xy planar division face triangle defined points 
vertex neighbors form simple polygon 
obtain triangular planar division removing triangulating simple polygon induced mis coarsen planar division obtained removing vertices triangulating simple polygons induced vertices 
see 
build coarsening hierarchy applying idea iteratively 
algorithm dual mis coarsening 

jm large choose mis 
coarsen 

existence coarsening hierarchy log levels triangle intersects constant number triangles gamma lemma kirkpatrick 
vertex planar division maximal independent set size triangle coarsen intersects triangles choose maximal independent set lemma step dual mis coarsen construct hierarchy log levels 
hierarchy allows apply multilevel method locate point planar division logn time locate point smallest planar division time takes time project location information finer mesh 
hierarchy generated dual mis coarsen multilevel method approximation fiedler vector graph multilevel method fig 
dual mis coarsening planar division 

multilevel view gaussian elimination 
basis direct methods solving linear systems gaussian elimination process zero certain entries coefficient matrix systematic way 
suppose want solve ax sparse theta symmetric positive definite matrix 
basic idea direct method factor product triangular matrices ll process called cholesky factorization 
nonzero structure matrix represented graph row represented vertex nonzero element edge 
graph reduced linear system schur complement eliminating row obtained deleting node row connecting graph neighbors complete graph 
ordering rows matrix equivalently ordering vertices elimination process defines shang hua teng denser graph called filled graph ordering 
filled graph constructed iteratively gamma stages number vertices 

ith stage add just edges complete graph neighbors vertex gamma numbers larger clearly fill graph chordal graph fact equal 
refer fill graph 
schreiber introduced elimination trees explain elimination process 
elimination tree transitive reduction define edge 
parent kg 
defines tree fi ff fl ff fl fi fl fi 
elimination tree dependent graph elimination vertex ancestor eliminate vertex context parallel factorization eliminate leaves elimination tree simultaneously 
height tree equal minimum number parallel steps factor matrix elimination ordering 
notice leaves elimination tree independent set fill graph independent 
elimination tree defines hierarchy process elimination coarsening process procedure 
initially eliminate tree algorithm elimination coarsening 

jg leaves 
matrix eliminating rows obtained removing vertex connecting neighbors complete graph 
tree obtained removing leaves show elimination tree 

factorization ordering obtained elimination coarsening 
matrix upper triangular factor solve linear system ax need solve linear system triangular matrix solution triangular linear system back substitution viewed terms projection smoothing multilevel framework 
coarsest level solve equation solution projected level obtain values variables associated rows independent set eliminated level 
level level calculate values variables linear system 
multilevel method key efficient gaussian elimination find elimination ordering framework need find independent set eliminate independent set form smaller denser graph 
repeat 
interesting question characterize condition elimination independent set 
commonly ordering heuristic minimum degree algorithm 
chooses vertex smallest degree vertex eliminated 
framework elimination coarsening ordering uses independent set single vertex formed vertex smallest degree 
liu introduced ordering algorithm called mmd chooses independent set vertices smallest degree level elimination 
berman schnitger showed selecting independent set elimination local choices give bad ordering 
alternative way provably way form sequence independent sets nested dissection 
uses vertex separators divide conquer node ordering 
vertex separator relatively small set vertices removal divides rest graph pieces approximately equal size 
nested dissection algorithm divides graph finding small separator 
vertices subgraphs ordered recursively placed ahead separator 
recursive procedure defines separator tree 
root tree corresponds top level separator 
root children subgraphs induced top level separator respectively 
subtrees root recursively generated subgraphs 
associated internal node separator tree separator internal node graph associated leaf separator tree vertex graph 
vertices form independent set separated separators internal nodes tree nested dissection chooses set vertices level independent set 
coarse graph removing vertices making complete graph neighbors respectively form independent set vertices leaves separator tree 
graph coarsened repeating independent set selection removal process 

smoothing local optimization 
smoothing algorithm key multilevel method optimization problems 
section multilevel partitioning technique illustrate effectiveness local optimization multilevel paradigm 
example local optimization section 
section multilevel method approximation fiedler vector graph 
fiedler vector find partition graph 
section give provably multilevel geometric partitioning algorithms finding way partition 
discuss multilevel partitioning methods 
shang hua teng bui jones propose multilevel method graph partitioning 
basic idea algorithm multilevel partitioning 
matching contraction build coarsening hierarchy gl 
find partition smallest graph gl 
step gamma project partition gamma 
apply kernighan lin improve language smooth partition gamma bui jones random maximal matching algorithm 
way construct random maximal matching permute edge randomly construct lexical maximal matching edge independent edges currently placed matching add matching 
approach randomly permute vertices graph scan vertex set permutation vertex unmatched choose random unmatched neighbor vertex insert edge matching 
projection gamma simple 
vertex single pre image gamma matched pre images partition divides pre image vertex obtain partition gamma partition key step multilevel partitioning method smoothing step 
basic intuition partition obtained provides initial partition gamma hopefully best partition gamma reachable sequence local optimizations 
candidate methods local optimization 
simplest method tries improve quality partition vertex swapping 
suppose form partition graph 
vertex number neighbors smaller number neighbors moving result better partition 
iteratively trade vertex subgraphs partition progress 
potential improvement try move vertex simultaneously subgraph 
restrict move vertices obtain opt swapping algorithm 
line improvement kernighan lin kl algorithm sequence swaps determine progress 
kl undoes sequence swaps lead better solution 
main difference kl swapping algorithm kl may swaps temporarily decrease quality partition 
covers large class swapping sequences 
combine kernighan lin idea opt algorithm 
bui jones multilevel partitioning algorithm standard kernighan lin algorithm improve partition level 
multilevel method iterative optimization techniques simulated annealing genetic algorithms smoothing resulting multilevel simulated annealing multilevel genetic methods 
addition extend multilevel partitioning algorithm compute way partition way iterative geometric sampling multilevel scheme 
refinements bui jones multilevel partitioning algorithm notably hendrickson leland karypis kumar 
hendrickson leland assigned edge vertex weights contracted super vertices super edges coarser graphs 
addition spectral bisection algorithm partition coarsest graph 
implemented variant software package called chaco 
karypis kumar added refined heuristics improvement hendrickson leland particularly improving matching contraction 
addition different partitioning algorithm divide coarsest graph 
modifications improve efficiency multilevel partitioning algorithm demonstrated experiments 
groups reported remarkable experimental results multilevel partitioning algorithm various graphs arise applications 
open mathematically improvements multilevel partitioning provide guarantee quality partition generate 

sampling 
section give examples sampling build coarsening hierarchies 
discuss multilevel algorithm compute delaunay triangulation important problem mesh generation computer graphics 
second sampling develop provably multilevel geometric multi way partitioning algorithm 

multilevel view random incremental methods 
suppose fp png point set dimensions 
triangle points forms delaunay triangle iff circumscribed circle triangle contains point interior 
triangulation delaunay triangulation triangles delaunay triangles 
denote delaunay triangulation dt 
delaunay triangulations important applications mesh generation computer graphics 
discuss multilevel method construction 
algorithm due guibas knuth sharir uses sampling coarsening build hierarchical structure 
simple local procedure test triangulation point set delaunay triangulation interior edge triangulation say satisfies angle property sum non adjacent angles smaller equal structural property delaunay triangulation iff interior edge satisfies angle property 
shang hua teng local test procedure suggests conceptually simple algorithm converting triangulation delaunay triangulation 
algorithm known flip 
worst case time complexity 
algorithm flip 
interior edge satisfy angle property prq psq triangles share 
replace edge pq edge rs algorithm guibas knuth sharir terms multilevel method 
fp png input 
oe random permutation ng 
fp oe oe gammai range gamma 
words coarsen problem sampling random permutation oe 
bottom phase multilevel scheme 
basis step simple delaunay triangulation pn gamma triangle defined points pn gamma define projection operation insert point oe gammai dt triangulate face dt contains oe gammai triangles oe gammai corner 
resulting triangulation project dt 
smoothing operation application flip project dt dt gamma flip project dt 
top phase 
guibas knuth sharir proved multilevel delaunay triangulation algorithm implemented random log time 
algorithm guibas knuth sharir example random incremental algorithms computational geometry 
shown subsection random incremental algorithms multilevel algorithms sampling induced random permutation generate coarsening hierarchy 

sampling provably multi way mesh partitioning 
miller teng thurston vavasis showed geometric structure shaped mesh develop guaranteed quality partitioning algorithm 
subsection discuss multilevel extension algorithm finding multiway partition 
example show random sampling help improving efficiency algorithm 

geometric partitioning high level review 
introduce basic notation meshes 
mesh decomposition domain collection simple simplex elements 
corners simplices mesh called vertices mesh 
associated mesh natural graph skeleton graph defined vertices mesh edge vertices iff contained simplex mesh 
finite element method meshes shaped multilevel method sense aspect ratio element bounded 
shaped meshes characterized spheres 
suppose xyz input mesh describes structure mesh 
point xyz ball centered radius equal distance nearest point xyz edge call gamma fb nearest neighborhood system xyz 
mesh linear number edges construct nearest neighborhood system linear time 
geometric partitioning algorithm divides mesh sphere 
suppose xyz input mesh 
finds gamma sphere ir divides nodes edges mesh subsets nodes edges interior ee exterior vo eo form vertex edge separator respectively induced gamma sphere boundary dimensional ball 
details theory implementation geometric partitioning algorithm 
give high level description algorithm necessary discussions remainder section 
algorithm geometric partitioning 
random subset xyz size 

project points ir unit sphere centered origin ir point ir projected sphere line north pole 
stereo graphic image unit sphere ir 
find approximate centerpoint special point interior unit sphere hyperplane contains point nearly evenly divides points see details 

conformally map sphere center see formula 
mapping represented theta matrix time 

choose random great circle 
transform back ir obtain compute vertex quality vertex quality separating sphere size vertex separator vo induced procedure 
gamma fb nearest neighborhood system xyz 
vo set vertices balls intersect ii smaller intersect magnified constant factor ff ff constant 
set vertices vo located exterior set vertices shang hua teng vo located interior theorem 
shaped mesh xyz exists constant ffi range ffi geometric partitioning algorithm finds gamma sphere jv jv ffi jv jv gamma gamma 
probability returned sphere satisfies quality conditions 

sampling multilevel geometric partitioning 
computationally major steps geometric partitioning algorithm 
centerpoint computation selection separating sphere 
testing quality returned sphere 
miller sampling reduce centerpoint computation step time 
show sampling test quality returned sphere 
sampling testing procedure leads multilevel geometric partitioning algorithm 
important lemma probability theory 
lemma chernoff hoeffding 
constant true suppose red balls set balls 
sample random balls set containing red balls prob gamma example lemma applied estimate number edges cut partition 
case red balls correspond edges cut partition 
want check cut size order ff need sample theta gammaff log edges amount samples approximate cut size small multiplicative factor high probability gamma 
argument prove lemma 
lemma 
xyz shaped mesh ir gamma fb nearest neighborhood system xyz section 
ff constant 
gamma random subset gamma 
probability geometric partitioning algorithm finds gamma sphere jv gamma jv gamma ffi gamma jv gamma gamma gamma gamma gamma 
gamma log high probability lemma induces partition satisfies condition theorem 
lemma suggests level scheme mesh partitioning 
algorithm level geometric sampling scheme 
choose random sample gamma gamma 
multilevel method 
geometric partitioning algorithm find sphere satisfies condition lemma 
construct partition gamma induced 
improve quality partition iterative techniques kernighan lin applied partition see section 
recursively apply sampling technique obtain geometric sampling multilevel schemes multiway partitioning 
algorithm recursive geometric sampling input shaped mesh xyz ir nearest neighborhood system gamma integer assume power simplicity 

choose sequence random sample gamma gamma gamma gamma theta log gamma gamma gamma range gamma log 
construct bisection gamma 
gamma project way partition gamma gamma 
apply kernighan lin heuristics enhance quality partition 
obtain way partition gamma partition part way partition parts 

project way partition gamma gamma apply kernighan lin heuristics enhance quality partition 
algorithm iterative geometric sampling input shaped mesh xyz ir nearest neighborhood system gamma integer assume power simplicity 

choose sequence random sample gamma gamma gamma gamma theta log gamma gamma gamma range gamma log 

construct way partition gamma 
gamma project way partition gamma gamma 
apply kernighan lin heuristics enhance quality partition 

project way partition gamma gamma apply kernighan lin heuristics enhance quality partition 
choice theta log justified lemma 
ff constant 
ff overlap graph gamma shang hua teng view coarsened graph coarsened graph words geometric sampling perform graph coarsening multilevel partitioning 
prove theorem lemma 
see details 
theorem 
shaped mesh xyz ir high probability iterative geometric sampling recursive geometric sampling find way partition total partition size gamma 
addition recursive geometric sampling generates gamma separator tree 

general multilevel schemes 
basic multilevel scheme section builds hierarchy bottom fashion solves problem top fashion 
obtains solution level solution coarser level directly projection local smoothing 
applications multigrid need general multilevel scheme 
particular need transform solution fine level coarser level solve original problem systematically iteratively moving solution hierarchy 
project denote projection coarse level fine level project denote transformation solutions fine level coarse level 
assume initial solution level 
transform solution level solutions level newly transformed solution plus solution transformation 
smoothing operation level takes solutions merges single solution locally improves resulting solution 
operation denoted smooth 
move solutions hierarchy systematic patterns refine solutions level 
basic multilevel scheme simplest move solutions hierarchy 
review commonly multilevel schemes 
scheme cycle multilevel 
bottom phase ffl coarsen gamma 
basis step find initial solution pi 
cycle phase gamma pi smooth pi project pi 
step gamma pi gamma smooth pi gamma project pi 
context called restriction operator multilevel method cycle scheme simply move solution hierarchy coarsest level move solution hierarchy generate solution original problem 
local optimization procedure improve solution level 
way improve cycle scheme simply repeat times 
refined efficient way improve cycle scheme called cycle positive integer scheme cycle multilevel 
bottom phase ffl coarsen gamma 
basis step find initial solution pi 
cycle phase cycle 
cycle 
pi smooth pi return pi 
times pi smooth pi project pi 
pi smooth pi cycle 

pi smooth pi project pi 

return pi hard see cycle scheme special case cycle scheme 
cycle scheme moves solution level level time solution comes back level recursive application idea moved gamma times moved level 
pattern called cycle 
effective scheme full cycle scheme 
finds solution coarsest level move solution level move solution level completion cycle level 
full cycle scheme shown effective multigrid 
basic elements enhanced multilevel schemes basic multilevel scheme defined 
section multigrid illustrate general multilevel schemes 

overview multigrid methods 
multigrid developed solve boundary value partial differential equations geometric physical domain omega gamma pde approximated linear system physical domain omega approximated mesh 
mesh omega defines linear system 
multigrid solves boundary value problem domain omega constructing sequence meshes finest mesh discretizes omega gamma range mesh geometric coarsening gamma shang hua teng main idea multigrid multilevel domain decomposition multilevel algorithms discussed far transformation partial solution mesh mesh gamma vice versa 
informally hierarchical methods solve pde omega obtaining initial vector solution improving quality vector transforming hierarchically hierarchy applying simple efficient iterative methods level 
transformation solutions levels goals 
coarse grids obtain better initial guesses finest grid top transformation 
coarse grids correct error solution obtained finest grid bottom transformation 

building coarsening hierarchy 
simplest form sequence meshes series nested regular grids 
brandt showed carefully restriction interpolation solution obtained efficiently multigrid 
see bramble xu 
nested structured mesh hierarchies attractive choices practice easily generated convergence structured multigrid understood 
structured regular grids limited problems domains simple solution functions small constant hessian 
unstructured meshes inevitable solution complex problems intricate domain geometry solutions 
effectiveness multigrid multilevel domain decomposition hierarchy unstructured meshes depends quality hierarchy 
particular chan zou provided sufficient condition multilevel additive schwarz methods unstructured meshes 
informally condition requires range shaped dimensions elements bounded aspect ratio approximates gamma numerical formulation 
miller teng developed optimal solution unstructured mesh coarsening problem shaped mesh threshold size construct hierarchy jm satisfies conditions 
section examine multigrid hierarchy nested regular grids 
extensions unstructured meshes 

projection 
support multigrid need define ffl operator transfer fine grid vector coarse grid vector 
ffl operator transfer coarse grid vector fine grid vector 
ffl corresponding linear systems coarse grids 
move solution coarse grid fine interpolation 
conversely move solution fine grid coarse apply restriction 
methods interpolation restriction multilevel method 
discuss simple ones commonly multigrid implementation 
simple ones quite effective practice 
denote interpolation operator takes coarse grid vector grid spacing returns fine grid vector finer grid spacing dimensional grid gamma points interpolation operator commonly gamma 
notice interpolation operator linear operator written sparse matrix 
denote transformation matrix 
dimensional grids interpolation operator defined similar way 
denote interpolation operator components gamma 
regular grids nested simplest way transfer vector fine grid coarse grid injection dimensional case 
alternative restriction operator called full weighting 
takes fine grid vector return coarse grid vector writing gamma gamma 
notice full weighting restriction operator transpose interpolation operator 
similarly define full weighting restriction operator dimensional regular grids components gamma gamma gamma gamma gamma gamma gamma 
theory convex combination values neighboring points restriction formulation 
shang hua teng interpolation restriction operators transfer vector errors grid 
effectiveness correctness depend assumption error smooth 
notice error highly oscillatory interpolation full weighted restriction may produce error vector accurate 
fortunately multigrid iterative smoothing process grid eliminates oscillatory components error vector produces error vector slowly changing 
processes interpolation restriction local smoothing complement 
intuition multigrid effective 
regular grids interpolation restriction involve values nearest neighbors written product sparse matrix vector 
supported efficiently parallel machines 

multigrid scheme 
simplify discussion notation 
ffl denote linear system associated grid spacing ffl vector name say denote vector grid spacing spacing finest grid linear system associated grid give simplest multigrid scheme uses coarse grid relax error 
scheme referred cycle scheme literature 
algorithm cycle mg omega coarsest grid solve directly small apply iterative method times relax equation initial solution obtain new 
apply iterative method times relax equation initial solution obtain new 
gamma 

cycle mg 


apply iterative method times relax equation initial solution obtain new suppose exact solution basic idea solve finest grid linear equation iteratively initial guess obtain new error solution gamma residual gamma know multilevel method fr finding finest grid transfer try approximate coarse grid recursively 
obtain approximation transfer back finer grid obtain approximation new approximation linear system cycle mg uses variant basic scheme 
moving solution coarsest level finest level finds approximation finest level moves solution error current solution coarsest level improvement transforming back finest level 

final remarks 
examples graph theory computational geometry numerical computing analyze basic elements multilevel method 
part focused basic multilevel scheme 
basic scheme find solution smallest problem coarsening hierarchy level level transform solution solution original problem 
improve solution multilevel optimization method repeat cycle times 
design recursive patterns cycle cycle cycle 
basic elements multilevel method remain coarsening projection smoothing local optimization collection examples mean complete 
multilevel technique various areas applications 
list just 
ffl fast multipole method body simulation 
ffl nearest neighbor graph construction 
ffl elimination ordering sparse matrices 
ffl parallel algorithm design 
ffl multi scale graphics 
ffl vlsi circuit layout 

parallel complexity multilevel method 
applications multilevel method efficient parallel implementations 
applications include problems discussed multigrid tree width calculation eigenvalue approximation multilevel partitioning geometric sampling multiway partitioning 
parallel complexity algorithm typically depends length longest critical path 
context multilevel method length critical path function number levels coarsening hierarchy parallel complexity projection smoothing 
support efficient parallel multilevel methods need reduce height coarsening hierarchy 
need develop efficient parallel algorithms smoothing projection 
shang hua teng 
general algorithm paradigm 
textbooks algorithms list divide conquer dynamic programming greedy branch bound general paradigms algorithm design 
example multilevel method relatives listed index textbooks cormen leiserson rivest brassard aho hopcroft ullman 
motivation show multilevel method broad spectrum applications 
multilevel method belongs class general recursive algorithms 
shares common design strategy divide conquer dynamic programming greedy methods solving problem reducing original problem set smaller ones 
acknowledgments edmond chow dan boley helpful discussions subtle difference terms multilevel methods hierarchical methods 
aho hopcroft ullman 
design analysis computer algorithms addison wesley 
barnard simon 
fast multilevel implementation recursive spectral bisection partitioning unstructured problems 
concurrency practice experience april 
berman schnitger 
performance minimum degree ordering gaussian elimination 
siam journal matrix analysis applications january 
bern eppstein gilbert 
provably mesh generation 
st annual symposium foundations computer science ieee 
blelloch 
vector models data parallel computing 
mit press cambridge ma 
bodlaender 
linear time algorithm finding tree decompositions small treewidth 
proceedings th annual acm symposium theory computing pages 
bodlaender 
better algorithms treewidth graphs 
proceedings th international colloquium automata languages programming 
springer verlag lcs 
boruvka 
em probl em aln im 
pr aca pr 
bramble xu 
convergence estimates product iterative methods applications domain decomposition 
math 
comput 
brandt 
multi level adaptive solutions boundary value problems 
mathematics computation 
brandt 
multilevel computations review developments 
third copper mountain conference multigrid methods april 
brassard 
fundamentals algorithmics prentice hall 
briggs 
multigrid tutorial siam philadelphia pa 
bui jones 
heuristic reducing fill sparse matrix factorization 
sixth siam conference parallel processing scientific computing 
chan smith 
domain decomposition multigrid algorithms multilevel method elliptic problems unstructured meshes 
contemporary mathematics pages 
chan zou 
additive schwarz domain decomposition methods elliptic problems unstructured meshes 
cam report department math ucla march 
cormen leiserson rivest 
algorithms 
mit press 
donath hoffman 
algorithms partitioning graphs computer logic eigenvectors connection matrices 
ibm technical disclosure bulletin 
donath hoffman 
lower bounds partitioning graphs 
res 
develop 
ary 
straight line representing planar graphs 
acta 
sci 
math 

fiedler 
algebraic connectivity graphs 
mathematical journal 
fiedler 
eigenvectors acyclic matrices 
mathematical journal 
fiedler 
property eigenvectors nonnegative symmetric matrices applications graph theory 
mathematical journal 
fried 
condition finite element matrices generated nonuniform meshes 
aiaa pp 
george liu 
computer solution large sparse positive definite systems 
prentice hall 
george liu 
evolution minimum degree ordering algorithm 
siam review 
gilbert miller 
teng 
geometric mesh partitioning implementation experiments 
siam scientific computing appear 
golub van loan 
matrix computations 
johns hopkins university press 
nd edition 
miller 
performance spectral graph partitioning methods 
proceedings second annual acm siam symposium discrete algorithms pages 

guibas knuth sharir 
randomized incremental construction delaunay voronoi diagrams algorithmica 
hagerup rub 
guided tour chernoff bounds 
information processing letters 
hendrickson leland 
multilevel algorithm partitioning graphs 
supercomputing 
karypis kumar 
fast high quality multilevel scheme partitioning irregular graphs 
siam scientific computing appear 
kernighan lin 
effective heuristic procedure partitioning graphs 
bell system technical journal pages february 
kirkpatrick 
optimal search planar subdivisions 
siam comput 
pp 
liu 
role elimination trees sparse factorization 
siam matrix anal 
appl 
miller 
teng 
optimal aspect ratio coarsening unstructured meshes 
th annual acm siam symposium discrete algorithms pp january 
miller 
teng thurston vavasis 
automatic mesh partitioning 
george gilbert liu editors sparse matrix computations graph theory issues algorithms ima volumes mathematics applications 
springer verlag 
shang hua teng miller 
teng thurston vavasis 
geometric separators finite element meshes 
siam scientific computing appear 
miller 
teng 
delaunay numerical method dimensions generation formulation partition 
proc 
th annu 
acm sympos 
theory comput pages 
mulmuley 
computational geometry randomized algorithms 
prentice hall 
parlett 
rayleigh quotient iteration generalizations nonnormal matrices 
math comp 

parlett simon 
estimating largest eigenvalue lanczos algorithm 
mathematics computation 
pothen simon 
liou 
partitioning sparse matrices eigenvectors graphs 
siam matrix anal 
appl 
robertson seymour 
graph minors ii 
algorithmic aspects treewidth 
algorithms 
simon 
partitioning unstructured problems parallel processing 
computing systems engineering 
simon 
teng 
recursive bisection 
siam sci 
comput appear 
spielman 
teng 
spectral partitioning works planar graphs finite element meshes 
ucb csd berkeley 

teng 
geometric approach parallel hierarchical adaptive computing 
fifth siam conference applied linear algebra pages june 

teng 
fast recursive separator decomposition finite element meshes 
siam matrix anal 
appl appear 
planarity duality finite infinite graphs 
journal combinatorial theory series 
tutte 
convex representations graphs 
proc 
london math 
soc 

tutte 
draw graph 
proc 
london math 
soc 

