strictly pretty christian lindig gartner gbr hamburger str 
braunschweig germany lindig de march pretty printers tools formatting structured text 
taken algebraic approach lead systematic design pretty printers 
wadler proposed algebraic pretty printer implementation lazy functional language haskell 
original design causes exponential complexity literally strict language 
note recalls properties wadler pretty printer operational level presents cient implementation strict functional language objective caml 
pretty printing problem finding layout structured text constraints 
john advanced design pretty printers considerably algebraic approach pretty printers set operators horizontal vertical concatenation obey algebraic rules 
lead consistent pretty printing library variant library part haskell implementations 
hughes philip wadler proposed algebraic pretty printer :10.1.1.19.635
uses operators uniform document model suited pretty printing tree structures source code 
hughes suggested implementation approach functional language haskell 
relies heavily lazy evaluation haskell easily ported strict language loss ciency 
note recalls properties wadler pretty printer operational level proposes implementation strict languages 
implementation uses strict functional language objective caml easily ported standard ml 
philip wadler pretty printer user perspective documents constructors shown 
simple documents consist string literals hello separated optional line breaks glued cons operator hello world 
moment line operator thought space character may replaced line break necessary 
documents structured groups stmt stmt stmt 
nest nil operator explained shortly 
doc nil string text line doc doc cons right associative int doc nest doc group constructors doc data type groups conjunction optional line breaks key di erent layouts available space 
pretty printing optional line breaks inside group turned space newline 
decision group ects line breaks group subgroups individually 
literal text hello simply printed nil constructor printed 
layout policy describes process group 
print optional line break current group subgroups spaces 
current group fits completely remaining space current line layout group 

fails optional line break current group printed newline 
subgroups line breaks considered individually reached pretty printing process 
applying policy document di erent line lengths yields results 
clarity groups output marked square brackets 
line width characters document fits single line 
optional breaks groups printed spaces stmt stmt stmt line characters wide outermost group print breaks newlines inner group spaces stmt stmt stmt characters wide line breaks inner group turned newlines stmt stmt stmt layout policy tries print document flat printing optional line breaks inside groups spaces 
possible outermost group printed breaks newline room inner groups 
inside flat group breaks printed spaces subgroups flat 
document layout lacks nice indentation indicate structure 
provided nest operator doc optional line break gets printed newline followed number spaces indent line 
line break comes space additional spaces added 
number spaces controlled nest operator breaks inside document printed newlines followed spaces 
course nest operator nests properly cf 
independent grouping operator pretty printers :10.1.1.19.635
achieve typical layout example add nest operator stmt stmt stmt inner group broken line breaks newlines gets indented spaces 
output document line width characters 
stmt stmt stmt stmt stmt stmt stmt stmt stmt nil operator hardly necessary documents constructed manually example 
essential implement optional output 
output mapped empty string pretty printer 
implementation section presents implementation pretty printer objective caml explains di erences original design 
aspects follow haskell implementation suggested wadler :10.1.1.19.635
constructors document captured doc 
add little flexibility breaks user defined representation 
pp ml preliminaries type doc doc doc string int doc string doc constructor functions provide help build documents easier 
infix operator right associative 
objective caml associativity precedence determined character operator extra declaration necessary 
pp ml empty text nest break group explicit implementation groups main di erence lazy implementation 
encodes groups implicitly unfolding group alternative documents flat breaks rendered spaces broken breaks rendered newlines 
expansion done lazily lead exponential growth strict language 
avoid exponential growth number nested groups strict implementation encode groups explicitly 
documents type doc printed directly transformed simpler documents type 
transformation layout group decided longer provide groups 
pp ml type string sline int newline spaces simple document empty consists string followed simple document newline followed number spaces simple document sline 
wadler shown complex document transformed equivalent simple document straight forward print pp ml rec function sline prefix string nl prefix objective caml concatenates strings string creates string characters transformation complex document simple document decide group broken line breaks newlines flattened line breaks spaces 
cient predicate fits checks flat document fits completely characters 
expanding document consuming characters goes 
line breaks regarded spaces width checked flat document layout policy holds line breaks subgroups 
fits predicate checks list triples cons operator unfolded list 
triple hold current indentation mode current group document function characters consumed document ended happens 
characters consumed 
group checked rendered flat contain break indicates newline 
pp ml mode group rec fits function false true fits fits fits fits strlen flat fits strlen break true impossible fits flat fits function lazy implementation complex documents simple documents 
laziness haskell permits transform alternative group variants simple documents check easier checking complex documents 
strict implementation expand groups check width complex documents 
formatting complex document simple document requires maintain indentation informations line breaks inside group printed spaces newlines 
element complex document part flat broken group captured mode 
mode group type mode flat break optional line break encountered turned newline line break part broken group know spaces printed newline indentation line 
actual mode indentation level paired element format function 
parameter denotes actual line length parameter characters current line consumed 
pp ml rec format function format format format format strlen flat format strlen break sline format fits flat format flat format break indentation cons ed elements di ers actual indentation distributed elements 
applies mode indentation changes entering nested document mode entering group 
fits predicate determines mode group elements 
line breaks turned spaces sline accordingly 
examples example document expression build 
pretty printing functions additional functions helpful 
infix operator connects documents optional line break binop builds binary left right expression 
pp ml match break binop left op right group nest group text left text op text right example doc contains quite number groups demonstration purposes result possible layouts 
flexible layout adequate debatable cases space constraints tight layout consistency important 
achieved fewer groups 
pp ml cond binop expr binop expr binop ifthen group group nest text group nest text group nest text doc ifthen cond expr expr di erent layouts shown width expression formatted 
minimal line width text element separate line 
formatting smaller line widths lead layout long lines 
implementation wadler pretty printer strict language avoid literal translation original implementation exponential complexity 
implementation implements groups documents directly price slightly complicated predicate checking width document 
additionally element document associated mode capture di erent behaviors group 
original implementation expands group alternative variants need distinguish explicitly 
noted wadler proposed pretty printer small predictable flexible 
previous version pretty printer grew joint andreas franz josef 
john hughes 
design pretty printing library 
jeuring meijer editors advanced functional programming volume lncs 
springer verlag 
xavier leroy 
objective caml 
implementation documentation objective caml system 
pauillac inria fr ocaml 
robin milner mads tofte robert harper david macqueen 
definition standard ml revised 
mit press 
philip wadler 
printer 
technical report bell labs lucent technologies 
available author home page cm bell labs com cm cs wadler 
philip wadler 
printer 
journal functional programming 
appear 
missing parts source code document complete objective caml source file 
previous sections definitions omitted clarity complete source code shown 
preliminaries strlen string length nl document doc printed enclosed outermost level virtual group breaks printed spaces 
document independent decision enclosed group 
parameter determines available line length document doc formatted 
pp ml pretty doc format flat doc str print str 
