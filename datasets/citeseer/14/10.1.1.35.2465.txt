lower bounds distributed coin flipping randomized consensus james aspnes examine class collective coin flipping games arises randomized distributed algorithms halting failures 
games sequence local coin flips generated combined form single global coin flip 
adversary monitors game may attempt bias outcome hiding result local coin flips 
show guarantee constant bias omega gamma local coins needed local coins arbitrary distributions ranges adversary required decide immediately hide reveal local coin game detect local coins hidden 
adversary permitted control outcome coin cases probability polynomial omega gamma log local coins needed 
combining fact extended version known fischer lynch paterson impossibility proof deterministic consensus show adaptive adversary resilient asynchronous consensus protocol requires omega gamma log local coin flips model simulated deterministically atomic registers 
gives non trivial lower bound total required wait free consensus tight logarithmic factors 
results divide naturally parts lower bound asynchronous randomized consensus wide variety models general lower bound large class collective coin flipping games yale university department computer science prospect street box new haven ct 
supported nsf ccr ccr 
email aspnes cs yale edu 
forms basis consensus lower bound interesting right 
consensus fundamental problem distributed computing group processes agree bit despite interference adversary 
additional condition forbids trivial solutions produce answer 
asynchronous setting long known adversary halt single process deterministic consensus algorithm possible powerful synchronization primitives cil dds flp 
contrast randomized algorithms solve consensus shared memory system processes adversary halt gamma processes 
algorithms called wait free process finish algorithm waiting slower possibly dead processes 
algorithms assumption failures timing events system control adaptive adversary observe react aspects system execution including internal states processes 
known algorithm solves sharedmemory consensus adaptive adversary exponential time algorithm abrahamson abr appearance numerous polynomial time algorithms appeared ah ads ssw asp br br aw 
algorithms built shared coin protocols processes individually generate random sigma local coin flips combined majority voting 
adversary may bias outcome voting selectively killing processes chosen vote wrong way reveal votes processes 
prevent adversary getting constant bias necessary collect votes hidden votes shift outcome constant number standard deviations 
gamma failures wait free case requires total omega gamma local omega gamma order communicate coin flips 
algorithms deviate slightly simple improvements aspects consensus algorithms steadily brought costs total ah log total br 
algorithms steadily approached omega gamma barrier broken 
proof known consensus solved omega gamma time barrier solely result apparent absence alternatives shared coins majority voting 
asked asp necessarily case consensus protocol contained embedded shared coin protocol shared coin protocol achieve better performance majority voting 
results answer questions answers simple hoped 
show resilient asynchronous consensus protocol shared memory model constant probability executes shared coin protocol bias minus polynomial carries expected omega gamma local coin flips avoiding shared coin protocol requires expected omega gamma log local coin flips 
follows resilient asynchronous consensus requires expected omega gamma log local coin flips 
protocols majority voting require local coin flips lower bound close tight 
counting coin flips operations lower bound affected deterministic simulations 
example continues hold message passing models process failures message channel simulated unboundedly large register shared memory model counters cheap atomic snapshots 
furthermore lower bound assumes local coin flips arbitrary ranges distributions may assume loss generality successive process separated deterministic operation models lower bound local coin flips fact implies lower bound total 
lower bound coin flipping games general holds model adversary may intercept local coin flips revealed matter deterministic synchronization primitives shared objects available 
furthermore tight sense shows constant bias shared coin omega gamma local coins bound achieved ignoring constants majority voting 
majority voting approach described 
algorithm aspnes asp votes generated deterministically 
algorithm saks shavit woll ssw protocols optimized different execution patterns run parallel 
algorithm aspnes waarts aw processes cast votes generate votes increasing weights order finish protocol quickly 
protocols costs simple majority voting terms expected total number local coin flips performed worst case 
related varieties collective coin flipping games studied starting ben linial bol 
games assume locations faulty coins fixed advance assumptions efficient games exist cl bol sak 
assumption greatly limits power adversary require locations values faulty coins fixed advance bit extraction problem cfg fri possible derive completely unbiased random bits 
limiting assumptions adversary gains considerably power 
excellent survey results wide variety models involving fair nearly fair valued local coins 
differs allow arbitrary distributions local coins 
restriction fair coins harper isoperimetric inequality hypercube har implies majority function gives power line adversary see coins deciding change lichtenstein linial saks lls shown majority optimal line adversary similar consider 
restriction best previously known bound bound omega gamma influence adversary hide coin easy corollary theorem gaps martingale sequences due cleve impagliazzo ci 
nice lower bound space shared memory consensus due herlihy shavit fhs 
show consensus protocol omega gamma distinct registers guarantee agreement 
unfortunately techniques appear generalize showing lower bounds 
coin flipping games collective coin flipping game bol algorithm combining local coins single global coin bias small local coins may obscured malicious adversary 
particular coin flipping games consider motivated application proving lower bounds distributed algorithms failures away details original distributed systems useful contexts 
assume local coins independent random variables ranges distributions arbitrary 
values variables revealed time adversary immediately choose reveal obscure value 
adversary chooses obscure value particular local coin effect replace default value 
repeating process yields sequence values original values random variable 
function applied sequence yield outcome may arbitrary usually require sigma 
adversary power limited upper bound coins may obscure 
note description assume adversary predict local coins base decision reveal obscure particular coin value values earlier coins 
addition adversary interventions visible 
coin flipping game may observe react fact adversary chosen obscure particular local coins access true values coins 
formally coin flipping game specified tree 
leaves tree specify outcomes game 
internal nodes correspond local coin flips 
games defined recursively follows 
fix set possible outcomes 
coin flipping game maximum length zero consists single outcome call game constant game abuse notation writing outcome simply coin flipping game maximum length constant game consists 
random variable representing local 
function mapping range random variable set coin flipping games maximum length subgames 
value ff range resulting subgame denoted ff 
default subgame 
maximum length corresponding effect adversary choice hide local coin flip definition represents coin flipping game tree think root tree children subgames ff value ff default subgame 
actual game tree corresponding playing game adversary bit complicated involves plies level may think states game pairs specifying current subgame limit local coins adversary may hide number faults 
execute local steps occur 
outcome ff coin flip determined 
second adversary chooses revealing ff leading state ff hiding ff leading state gamma 
order prevent adversary able predict game able deduce information obscured coins demand random variables path game tree independent 
adversary strategy specifies partial sequence local coin flips hide reveal coin 
write ffi random variable describing outcome run control adversary strategy game realvalued outcomes number faults exist adversary strategies maximize minimize expected outcome 
define mkg maximum expected outcome mkg minimum expected outcome 
values computed recursively follows ffl length mkg mkg ffl positive length mk eff max mkg ff mk gamma 
mk ff min mkg ff mk gamma 
time assume possible outcomes game sigma 
case quantities mk mk give measure influence adversary ability hide local coin flips get outcome 
necessary consider see possible find game maximum length minimum expected outcome mk value range gamma 
interested best game attains particular value mk minimizing mk symmetrically game maximizes mk particular fixed mk 
general turn quite difficult find game exactly shown structure necessary settle lower bound mkg function mkg 
structure optimal games fix maximum length number failures define range game interval mkg mkg 
strictly dominates just case range proper subset range words gives adversary control 
game optimal dominates games mkg mkg dominates games mkg mkg 
definition turn equivalent saying game strictly dominates game associate point dimensional space coordinates mkg mkg 
geometric perspective problem interested finding value curve corresponding set optimal games maximum length failures 
values task easy 
curve just diagonal running gamma gamma extreme holds mkg gamma mkg depending default outcome local coins hidden 
difficult see mng mng value gamma 
example set outcome value local coin coin flip hidden adversary wishes achieve outcome lower local coin go 
similar mng gamma mng value gamma 
optimal curve consists line segment gamma gamma gamma line segment gamma 
equations nice geometrical interpretation principle allows determine curves optimal games maximum length failures 
process depicted figures 
fix game subgame ff corresponds point mkg ff mkg ff lie curve optimal gamma games 
contribution ff position min mkg ff mk gamma max mkg ff mk gamma 
point intersection region gamma curve rectangle points dominated 
value average contributions correspond point convex closure intersection 
provided gamma curve concave easily proved induction gamma shown points convex closure dominated point lower right edge line segment optimal game mkg mk gamma 
optimal game mkg mk gamma 
geometrically edge right triangle inscribed gamma gamma gamma curves sides parallel axes right corner gamma gamma curve 
take account possible choices 
necessary consider triangles 
minimum triangles shown obtain curve optimal games maximum length subject failures 
note gamma curve nondecreasing concave true gamma true induction hypothesis larger gamma may extend containing line affecting minimum curve minimum concave functions nondecreasing concave 
summarize 
discussion constraints 
theorem coin flipping game maximum length failures dominates dominates 
non default subgames mkg mk gamma mkg mk gamma 
consequence theorem replace optimal equivalent local coin exactly outcomes adversary prefers hiding local coin revealing 
theorem applies recursively subgames may assume conditions fact hold additional power obtained allowing outcomes coin 
theorem imply require local coins fair optimal games 
addition shown shape curves corresponding optimal games theorem fix gamma smallest value mkg mkg nondecreasing concave 
unfortunately exception extreme cases gamma curves appear nice algebraic descriptions 
principle equations minimum construction constrain curves completely obtain useful bounds forced resort approximation 
lower bounds coin flipping games essential idea lower bound coin flipping games choose family functions act lower bounds optimal curves defined show repeating inscribed right triangle argument functions fact provide lower bounds optimal curves appropriate parameters 
particular family functions consists symmetric diagonal gamma gamma pass corner points gamma gamma 
conveniently tanh gamma gamma tanh gamma various values linear curve corresponds exactly curve limit goes infinity 
goal compute values function length games tanh gamma mkg gamma tanh gamma mkg gamma gamma gamma repeating inscribed right triangle construction resulting difficult exercise analytic geometry 
unfortunately finding particular point particular triangle minimizes bit involved details steps full 
ultimate result efforts conjecture slightly tighter lower bound proven curves phi gamma gamma phi gamma phi normal distribution function 
analog theorem phi tanh improve consensus lower bound theorem logarithmic factor 
default subgame min expected outcome max expected outcome graphical depiction constraints minimum maximum expected outcomes game point corresponds pair minimum maximum expected outcomes 
diagonal represents case values 
outer edges represent case 
inner curves represent optimal games gamma voters gamma failures 
default subgame 
lies gamma gamma curve 
subgames ff lie gamma curve 

fixed value lies convex closure intersection region gamma curve rectangle dominated 
points convex closure shown shaded picture dominated point right triangle inscribed gamma gamma gamma curves 
min expected outcome max expected outcome effect considering choices 
point gamma gamma curve corresponds possible default subgame 
right triangle corners point gamma curve gives set games dominate games fixed 
set optimal games voters failures minimum right triangles 
theorem game length outcome set gamma 
mkg mkg gamma tanh gamma mkg gamma tanh gamma mkg little bit algebra turn lower bound length general coin flipping game lower bounds probabilities distinct outcomes corollary coin flipping game outcomes range bullet adversaries 
ffl mina pr ffi ffl mina pr ffi ffl maximum length delta ln gamma ffl gamma delta truncation argument show similar result holds considering expected length maximum length 
theorem covers worst case expected length adversary trying maximize running time protocol best case expected length adversary trying minimize running time protocol 
worst case bound get lower bound consensus 
proof theorem full 
theorem fix range bullet adversaries 
coin flipping game outcome mina pr ffi ffl mina pr ffi ffl 
worst case expected length delta ln ffl gamma best case expected length delta ln ffl gamma constant bias corollary theorem imply need omega gamma local coin flips worst average cases 
true adversary power limited fact local coin flips may arbitrary ranges distributions adversary hide coins control adversary decide coins hide reveal immediately line fashion algorithm may observe react choices coins hide 
assumptions chosen minimize power adversary capturing essence powers distributed system failures 
contrast difficult see majority theta fair coins gives constant bias local coins required fair random bits adversary replace values new values choosing adversary may observe values local coins deciding ones alter changes adversary invisible algorithm 
omega gamma lower bound constant bias tight wide range assumptions powers algorithm adversary 
connection randomized distributed algorithms failures importance coin flipping games defined comes fact embedded inside randomized distributed algorithms 
discuss briefly embedding works 
consider randomized distributed algorithm model random events internal individual processes nondeterminism control adaptive adversary 
suppose adversary power kill processes 
randomized algorithm event depend states faulty processes occurs minimum probability maximum probability extract coin flipping game follows 
arbitrarily fix nondeterministic choices adversary decision kill process immediately internal random event 
step reduces options adversary increase decrease step coin flipping game corresponds execution distributed algorithm random event interpret local coin 
adversary choice hide reveal local coin corresponds power kill process executes random event preventing process learning value run may may eventually reveal value 
outcome coin flipping game determined occurs original system 
lower bound randomized consensus consensus problem group processes agree bit 
consider consensus models processes may fail halting 
theorem apply adversary observe local coin flips oblivious opposed usual adaptive adversary 
bound best case expected length imply impossible construct hybrid constant bias coin flipping protocol adapts strength adversary finishing quickly oblivious adversary additional prevent adaptive adversary control 
case consensus example chandra consensus algorithm cha weak adversary switches algorithm robust adaptive adversary finish usual time 
processes halt correct processes execute infinitely operations 
detailed description model full 
assumed process starts input bit eventually decides output bit stops executing algorithm 
formally consensus defined conditions ffl agreement 
correct processes decide value probability 
ffl non triviality 
value exists set inputs adversary causes correct processes decide probability 
ffl termination 
correct processes decide probability 
non triviality weak condition applications consensus protocols stronger condition useful ffl validity 
processes input correct processes decide probability 
non triviality implied validity show lower bound total protocol satisfies agreement non triviality termination shown fortiori lower bound protocol satisfies agreement validity termination 
concentrate consensus defined conditions 
agreement termination conditions violated probability zero exclude schedules violated affecting expected length protocol independence unpredictability local coin flips 
loss generality may assume agreement termination apply protocol apply conditions starting particular finite execution ff 
overview proof randomized setting concerned cost carrying consensus protocol terms expected total running worst case adversary 
show coin flipping lower bound show lower bound worst case expected cost resilient randomized consensus standard asynchronous shared memory model 
coin flipping bound measure cost consensus protocol total number local executed processes 
measure affected deterministic simulations results obtain shared memory model apply model simulated shared memory resilient message passing model 
adversary strategy finite execution ff fixed probability protocol decide conditioned event execution starts ff 
may speak confusion protocol deciding opposed individual processes deciding agreement condition 
set adversaries range probabilities running minimum maximum probability deciding 
ranges define probabilistic version conditions known fischer lynch paterson flp impossibility proof deterministic consensus flp 
define execution bivalent adversary force outcome high probability 
valent execution outcome forced high probability 
null valent execution outcome forced high probability 
notions valence defined formally full match corresponding notions deterministic algorithms flp proof null valence new occur deterministic algorithm probability deciding value exactly 
outline proof consensus expensive randomized algorithms retains structure flp proof 
shown constant probability protocol initial state bivalent null valent execution 
protocol bivalent execution show fair failure free extension leads local coin flip null valent execution 
result flipping local coin bivalent execution course random show high probability leaves execution bivalent null valent return bivalent null valent execution additional coin flips 
reach null valent execution coin flipping bound applies 
deterministic protocol possible randomized protocol escape local execution finish protocol quickly 
able show probability escaping way small average local coin flips occur happens 
details lower bound proof full 
result theorem worst case adaptive adversary resilient consensus protocol asynchronous shared memory model performs expected omega gamma log gamma local coin flips 
bound counts number local coin flips 
allow coin flips arbitrary values just local coin flips performed process intervening operations combined single coin flip increasing adversary influence 
lower bound local coin flips immediately gives lower bound total 
furthermore coin flip bound affected changing model deterministically simulated shared memory get lower bound total model simulated matter powerful primitives 
example wait free consensus requires omega gamma log model supplies counters cost atomic snapshots 
discussion working adaptive adversary randomization temporary consequences fischer lynch paterson impossibility proof deterministic consensus faulty processes 
theorem means solve consensus randomization hope solve quickly small upper bound number failures built synchronization primitives restrictions power adversary 
fortunately number natural restrictions adversary allow fast consensus protocols eliminating faults reasonably expect observe real systems 
plausible approach limit knowledge adversary register contents prevent discriminating coin flips dislikes 
various versions consensus chor israeli li cil abrahamson abr log total protocol aumann bender ab log process protocol chandra cha 
restrictions amount asynchrony large effect aat ssw 
acknowledgments author indebted russell impagliazzo fruitful discussions coin flipping problems steven rudich suggestion eventually truncation argument prove theorem mike saks encouragement pointers related faith wai kau lo eric ruppert eric schenk useful comments earlier version 
aat rajeev alur attiya 
time adaptive algorithms synchronization 
proceedings sixth annual acm symposium theory computing pages montr eal qu ebec canada may 
ab aumann michael bender 
efficient asynchronous consensus adversary scheduler 
proceedings rd international conference automata languages programming july 
abr abrahamson 
achieving consensus shared memory 
proceedings seventh acm sigact sigops symposium principles distributed computing august 
ads attiya danny dolev nir shavit 
bounded polynomial randomized consensus 
proceedings eighth acm symposium principles distributed computing pages august 
ah james aspnes maurice herlihy 
fast randomized consensus shared memory 
journal algorithms september 
noga alon moni naor 
coin flipping games immune linear sized coalitions 
proceedings st annual symposium foundations computer science pages 
ieee 
asp james aspnes 
time space efficient randomized consensus 
journal algorithms may 
aw james aspnes waarts 
randomized consensus log operations processor 
siam journal computing october 
bol michael ben nathan linial 
collective coin flipping robust voting schemes minimization banzhaf values 
proceedings th annual symposium foundations computer science pages 
ieee 
ben linial saks 
collective coin flipping models imperfect randomness 
combinatorics volume mathematic bolyai pages eger hungary 
br bracha 
approximated counters randomized consensus 
technical report technion 
br bracha 
randomized consensus expected log operations 
proceedings fifth workshop distributed algorithms 
cfg benny chor joel friedman oded goldreich johan hastad steven rudich roman smolensky 
bit extraction problem resilient functions 
proceedings th annual symposium foundations computer science pages 
ieee 
cha tushar deepak chandra 
polylog randomized wait free consensus 
proceedings fifteenth annual acm symposium principles distributed computing pages may 
ci richard cleve russell impagliazzo 
martingales boolean final value jumps constant probability 
unpublished manuscript 
cil chor israeli li 
processor coordination asynchronous hardware 
proceedings sixth acm symposium principles distributed computing pages 
cl jason cooper nathan linial 
fast perfect information leader election protocol linear immunity 
proceedings fifth annual acm symposium theory computing pages 
acm 
dds dolev dwork stockmeyer 
minimal synchronism needed distributed consensus 
journal acm january 
cynthia dwork maurice herlihy serge plotkin waarts 
time lapse snapshots 
proceedings israel symposium theory computing systems 
fhs faith maurice herlihy nir shavit 
complexity randomized synchronization 
proceedings th annual acm symposium principles distributed computing august 
flp fischer lynch paterson 
impossibility distributed commit faulty process 
journal acm april 
fri joel friedman 
bit extraction problem 
proceedings rd annual symposium foundations computer science pages 
ieee 
har harper 
optimal numberings isoperimetric problems graphs 
journal combinatorial theory 
maurice herlihy 
wait free synchronization 
acm transactions programming languages systems january 
michael loui 
memory requirements agreement unreliable asynchronous processes 
franco preparata editor advances computing research volume 
jai press 
lls lichtenstein linial saks 
extremal problems arising discrete control processes 
combinatorica 
sak michael saks 
robust non cryptographic protocol collective coin flipping 
siam journal discrete mathematics 
ssw michael saks nir shavit heather woll 
optimal time randomized consensus making resilient algorithms fast practice 
proceedings second annual acm siam symposium discrete algorithms pages 
umesh vazirani 
strong communication complexity theory generating quasi random sequences communicating slightly random sources 
proceedings ninth annual acm symposium theory computing pages 
acm 
