probabilistic state dependent grammars plan recognition david pynadath information sciences institute university southern california admiralty way marina del rey ca pynadath isi edu michael wellman artificial intelligence laboratory university michigan beal ave ann arbor mi wellman umich edu techniques plan recognition uncertainty require stochastic model process 
introduce probabilistic state dependent grammars represent agent plan generation process 
psdg language model extends probabilistic contextfree grammars pcfgs allowing production probabilities depend explicit model planning agent internal external state 
psdg description plan generation process inference algorithms exploit particular independence properties psdg language efficiently answer plan recognition queries 
combination psdg language model inference algorithms extends range plan recognition domains practical probabilistic inference possible illustrated applications traffic monitoring air combat 
problem plan recognition determine plan action underlying agent behavior partial observation behavior current time 
assume behavior product executing plan constructed serve agent objectives beliefs 
examples draw scenario traffic monitoring observed agent driving car lane way highway 
agent begins initial context consisting position highway presence cars mental state comprised preferences utility function speed beliefs reading discuss plan recognition framework pynadath wellman pynadath 
capabilities driving ability 
assume planning process rational procedure mental state 
generated plan determines uncertainty actions taken agent world 
traffic example observed driver may plan high level maneuvers change lane pass car ultimately executes low level driving actions turning steering wheel 
recognizer uses observations form generate hypotheses top level plan intermediate subplans agent selected low level actions perform 
resulting candidates possible evaluations plausibilities form basis decisions potential interactions observed agent 
traffic example recognizing driver observe car maneuvering nearby compute probability distribution possible plan interpretations actions part possibly decision theoretic maneuver selection process 
bayesian networks plan recognition modeling uncertainty inherent planning domains provides difficult challenges plan recognition 
approaches order logic typically appeal heuristic criteria distinguish possible explanations observed phenomena kautz allen lin goebel tambe rosenbloom 
support general decision making observations require account relative likelihood explanations 
comprehensive probabilistic approach plan recognition constructs plan recognition bayesian networks representing relationships events uses standard network inference algorithms compute posterior probability distributions possible interpretations charniak goldman :10.1.1.21.4744:10.1.1.21.4744
plan recognition bayesian networks represent probability distribution particular set observed events appropriate tended domain story understanding 
real world agent domains complete set observations enormous 
instance traffic domain observe cars positions highway repeatedly course minutes possibly hours 
eventually unable represent accumulating set observations bayesian network tractable inference 
dynamic bayesian networks dbns represent restricted window random variables compact belief state summarize past observations 
belief state sufficiently expressive support exact inference variables window 
generality dbn representation leads intractable inference plan recognition domains 
methods approximate inference answer queries sufficient precision efficiency domains lesh allen take minutes inference 
restricted language supports online inference answering queries matter seconds required air combat traffic domains 
probabilistic grammars pattern recognition research provides possible source representations plans descriptions action patterns 
grammatical representations generative modular providing appealing class languages specifying pattern generation processes 
model plan generation process particular grammatical formalism formalism inference techniques answer plan recognition queries 
candidate approach probabilistic contextfree grammar pcfg charniak gonzalez thomason represent distribution possible action sequences 
existing pcfg parsing algorithms support restricted set plan recognition queries 
grammatical models black schabes waters carroll weir magerman fewer independence assumptions pcfgs supporting wider class problem domains supporting efficient parsing algorithms 
typical parsing algorithm produces conditional probability particular symbol subplan parse tree plan instantiation complete terminal sequence sequence observations parsing algorithms unsuitable plan recognition queries occur execution entire sequence available 
addition entire sequence may available missing observations 
previous shown generate bayesian network answer general queries pcfg pynadath wellman 
bayesian networks suffer drawbacks existing plan recognition research represent entire set observations 
borrowing notion compact belief state dbn inference exploiting specific independence assumptions underlying grammatical model may able identify belief state compact practical inference supporting exact inference 
probabilistic state dependent grammars section defines probabilistic state dependent grammar psdg supports belief state inference 
psdg model adds explicit representation state underlying pcfg model plan selection 
state model captures dependence plan selection planning context including agent beliefs environment preferences outcomes 
state model represents effects agent planning choices states consequently planning choices 
section defines language model demonstrates ability represent plan generation certain domains 
section describes practical inference algorithm answer plan recognition queries psdg representation agent planning process 
psdg definition probabilistic state dependent grammar psdg tuple sigma disjoint sets sigma specify terminal nonterminal symbols respectively start symbol pcfg 
set productions form 
sigma probability expanded string time indexed random variable representing state space grammatical symbols domain psdg production probability function state 
production 
denotes conditional probability expanding sequence current state 
specify time particular nonterminal symbol position leftmost descendant terminal symbol terminal string terminal symbol 
define current state expanding symbol time gamma nonterminal symbol require states ranges production probability functions expansions psdg function specifies distribution initial values state variable pr 
function gamma specifies probability gamma gamma terminal drive stay drive delta delta delta drive left drive ae lane left lane drive right drive drive pass drive drive exit pass left right pass right left psdg representation simplified traffic domain 
symbol chosen intervening interval value conditionally independent past values symbols parse tree selected value gamma terminal symbol chosen interval gamma simplify psdg domain viewing state conjunction somewhat orthogonal features representing individual aspects context 
production probabilities functions features influence choice expanding particular symbol 
instance driver decision accelerate decelerate may depend preferred traveling speed current speed car front depending location intended exit 
likewise distribution particular feature depend certain features having depend driver position highway changes current speed depend current lane 
refer state single variable intelligibility section inference algorithms exploit factored state representations 
simple psdg example consider psdg representing simplified generative model driving plans 
state includes observable features driver position speed positions speeds cars highway 
state includes aspects driver mental state agent preferences driving speed distance cars intended exit presents possible instance agent plan generation execution illustration psdg parse tree generation 
picture labeled bottom left corner diagram represents observable portion initial state 
solid black rectangle driver planning process trying recognize 
white rectangles cars highway 
clarify specification certain plan events important describing generation recognition define random variables nonterminals productions sigma terminals represent entire path root node leaf node stack active plans 
index indicates time left right parse tree 
pass drive right left simple psdg parse tree traffic domain 
index represents distance symbol root node start symbol 
root node symbol nodes index parent nodes 
example driver plan originates start symbol drive 
driver chooses possible expansions shown 
production variable indicates production chosen symbol righthand side currently expanded 
parse tree driver selects production drive pass drive probability 
number production index second indicates currently active child symbol symbol right hand side pass 
production probability summarizes process conditioned context view set probability functions expansions drive decision tree state features inputs 
instance states driver preferred speed slower current speed car front passing 
likewise driver position highway close intended exit passing passing driver aggressive type 
chosen production continue plan expansion selected child pass 
compute determine probability passing left versus passing right 
example driver chosen pass left executes left action 
random variable sigma represents terminal symbol position final sequence case sigma left 
values symbol variables terminal nonterminal completely determined values production variables hierarchy 
particular suppose ha bi production delta delta delta ym case terminal symbol sigma having reached leaf node time apply state transition probability gamma sigma compute distribution possible values transition probability encodes world dynamics including effects observed agent actions state 
instance transition probability represents possibly uncertain effect making left lane change car lane position 
represents possible changes positions cars 
diagram shows possible value driver moved leftmost lane result selecting left action moved cars 
expansion top level plan drive complete time drive 
expansion pass complete pass 
level terminal symbol left completed execution time move symbol expanded level sigma right 
new nonterminal symbols arisen branch time state form context expanding 
determine state value applying state transition probability right 
relationship pcfgs traffic air combat finite state spaces 
finite state spaces represent psdg distribution corresponding pcfg 
equivalent pcfg symbol space contains tuples hq indicating psdg symbol expanded starting initial state final state new symbol sets construct context free productions probability psdg parse tree identical corresponding parse tree constructed pcfg 
constructed pcfg larger original psdg factor jqj maximum production length 
general allow state space infinite psdg generative model represent language distributions allowed pcfg model 
instance language fa represented context free grammar pcfg 
define state space theta record values specify productions deterministic state transition function represent language 
addition inference algorithms section support recognition queries generation mechanism 
omit psdg constructions general languages inference constructed possible impractical general 
implemented traffic air combat regardless potential computational advantage separation plan state spaces psdg model provide suitable modeling language dependency structure closely mirrors planning domains 
examination implemented psdg models traffic air combat domains illustrates language specific strengths weaknesses 
complete traffic psdg nonterminal symbols plans terminal symbols actions state features mean state space size elements 
state features correspond aspects driver mental state preferred speed intended exit aggressiveness rest state features completely observable 
total productions mean length symbols 
implemented psdg representation air combat domain existing specification tambe rosenbloom soar productions newell 
state models modeling planning agent environment mental state psdg state variable specification supports arbitrarily complex probabilistic dependency structures 
capture probabilistic sensor models uncertain noise agent beliefs 
agent beliefs unobservable section discusses number size unobservable state variables biggest impact complexity costs inference 
model agent noisy beliefs productions incurring inferential cost 
instance expansions drive nonzero probability passing driver intended exit 
probability captures possibility driver fails notice exit requiring explicit state variable driver belief 
model beliefs preferences persist agent lifetime production probabilities evaluated independently episode 
psdg state variables represent distributions arbitrary utility functions manner supports tractable inference 
model planning agent preferences finite set goals intended exit finite set utility function classes driver aggressiveness greatly reduce complexity psdg state variable representation 
plan model psdg production format supports plan generation execution models flexible 
psdg treats lane change left atomic action complete psdg traffic domain treats intended plan subcomponents 
subplan driver waiting conditions safe changing lanes 
production probability functions evaluate highway situation current observed state unobservable mental state driver degree aggressiveness 
conditions unsafe production probability stay high driver prefers stay current lane postpone lane change 
conditions safe driver stops waiting moveleft moveleft incremental shift expected left 
production probabilities capture termination condition relative likelihoods productions dependency current state 
expansion terminates driver goes expand produces series moveleft actions car fully new lane 
driver option abandoning lane change conditions evolve 
state driver longer desires move left lane car front moves different lane productions stay stay take highest production probabilities 
expansion left completes cycles driver free choose new maneuver 
conditional production probabilities allow great flexibility production structure require total order subplans 
example original soar specification air combat domain impose order subplans 
conditions particular soar productions implicitly serialize execution pre conditions particular child achieved execution sibling 
general unfortunately generate psdg productions possible sequences children 
production structure serializes execution plans actions precluding possibility concurrent actions 
traffic psdg mimics certain forms concurrency subsequences symbols 
instance simplified grammar includes action symbols lateral movements 
complete psdg additional symbols corresponding acceleration maneuvers symbols interleaved lateral movement symbols 
mechanism insufficient general concurrency plans separable orthogonal effects state 
world dynamics psdg state transition probabilities represent joint distribution world states conditioned past state low level action taken 
relationships expressed world dynamics traffic example straightforward 
instance value lateral position time left value time interposing moveleft action 
uncertainty exact change value expressed probability distribution complete psdg 
state transition probabilities represent effects subplan choices states 
instance explicitly represent dependency driver turn indicator high level decisions 
introduced terminal symbols representing signaling additional concurrent action 
state turn indicator completely determined signaling action 
general afford add indirect plan representations state dependent high level plan 
important note generative model capture dependency agent mental state plan choices 
observe evidence inference algorithms section capture conditional dependency updating recognizer beliefs agent mental state 
psdg inference perform inference psdg finite state space generating corresponding pcfg pcfg inference algorithms explosion size symbol space lead prohibitive costs 
addition described section existing pcfg algorithms handle plan recognition queries 
potentially perform inference generating dbn representation psdg distribution 
definition psdg language model supports automatic dbn generation algorithm 
resulting dbn supports queries symbol production state random variables 
unfortunately complexity dbn inference impractical belief state represent entire joint distribution possible combinations state parse tree branches 
instance complete psdg representation traffic domain dbn belief state entries 
section presents inference algorithms exploit particular structure psdg model answer set queries restricted provided dbns 
algorithms compact belief state described section answer queries observations state variables 
time recognizer observes features state represent evidence stating represents set possible states consistent observations 
evidence algorithm section computes posterior probabilities individual state elements posterior probabilities possible plans productions agent executed time gamma 
algorithm section computes posterior probabilities plans productions agent select time updating recognizer belief state 
pseudocode description algorithm available online appendix pseudocode proofs correctness www isi edu pynadath research psdg available pynadath 
compact belief state inference high connectivity dbn belief state arises reliance strict conditional independence structuring property 
dbn representation exploit weaker forms independence psdg model 
specify weaker independence conditions define expansion hx delta delta delta ym bi terminating time ym terminal symbol child expansion terminates time re examine relationship production variables previous time slice notice possibilities expansion gamma terminated 
possibility expansion child gamma terminated case continue expanding child time value parent expansion gamma change 
possibility child expansion terminated time gamma children expand right hand side parent expansion gamma hx delta delta delta ym bi case move child hx delta delta delta ym 
cases relationship deterministic 
parent expansion gamma terminated previous time slice choosing new production new left hand symbol gamma independent symbols productions previous time slice 
independence property determinism inherent psdg model treat beliefs plan variables separately different levels hierarchy 
addition dbn representation supports computation arbitrary conditional probabilities current window random variables 
problem domains direct evidence agent plan choices current state 
instance traffic example observe position speed cars directly observe aspects driver mental state subplan choices chosen passing maneuver 
support psdg inference dbn inference maintain distribution joint space variables time slice 
specialized inference algorithms maintain smaller belief state summarizes probability distribution exploiting independence properties psdg model restricted set psdg queries 
table lists probability tables form belief state time represents evidence received time belief component represents boolean random variable true expansion symbol level terminates time belief state pro function definition pr gamma gamma pr xje gamma gamma ha bi pr ha bi je gamma gamma sigma pr sigma xje gamma gamma pr je gamma gamma jn pr je gamma gamma table belief state structure psdg inference 
vides compact summarization observations probability distribution entire joint space 
productions introduce possible cycles psdg bound length parse tree branches infinite number possible hierarchy levels index belief state 
maintain finite belief state allow recursive productions form delta delta delta ym gamma children indices originally specified right hand side index left hand side 
expand right hand side choose new production longer record current branch levels nesting taken place 
long need lost information generate finite belief state representation psdg limited recursion 
belief state probabilities indexed individual states consistent observations 
specialized psdg belief state structure space complexity jr delta jp maximum depth hierarchy largest value maximum production length 
fully connected dbn belief state space complexity jqj delta jp 
compact belief state longer explicitly stores conditional probabilities production variables left hand symbols right hand symbols production variables 
extract immediately probabilities available belief state 
instance know probability production state ae hx delta delta delta ym bi zero symbol 
pr ae 
conditional probabilities symbols parent productions simpler deterministic nature 
instance nonterminals pr jp ae 
belief state initialization initial belief state begins pr easily obtained prior probability function 
top computing probability ha bi 
sigma 
step compute production symbol probabilities generative method computing probability sample parse tree section 
explanation probabilities new observation time form gamma gamma easily compute probability individual state instantiations gamma gamma gamma sigma example observations compute probability observed state initial state possible terminal symbols 
probabilities marginalize set terminal symbols determine probability observed general time complexity computing probability distribution jrj sigmaj 
proceed bottom subplan hierarchy compute probability evidence conditioned possible states nonterminal symbol nodes similar generalization transition probability function probability values reused times subsequent computations current time slice 
compute probabilities recursively starting base definition terminal symbols sigma 
proceed hierarchy level compute probability state transitions consistent prior beliefs new observations possible nonterminal symbols 
symbol compute transition probability examining possible expansions prior beliefs context transition probabilities symbols right hand side computed previous dynamic programming passes 
maximum production length depth hierarchy dynamic programming phase takes time jrj jp 
dynamic programming results obtain posterior probability distribution symbols productions time gamma conditioned evidence including time useful answering explanation queries 
computation requires constant time combination prior beliefs symbols transition probabilities symbols 
prediction probabilities completing explanation phase compute prediction probabilities time posterior probabilities variables time gamma 
marginalize possible termination cases gamma expansion terminated 
choose new production time production probability functions 
expansion terminated time gamma continue expansion time child symbol expansion terminated time gamma deterministically move symbol right hand side time continue expanding child symbol 
marginalize possible states time complexity computing prediction probabilities jm 
computation new belief state prediction phase specifies symbol production components new belief state straightforward definition termination compute required probability termination particular symbol single bottom pass symbol production probabilities level hierarchy 
marginalize result compute termination probability independent symbol 
compute probabilities single bottom pass hierarchy requiring time 
evaluation psdg inference algorithms compute prediction explanation probabilities low level actions complex plans intermediate plan states 
addition belief state continually updates distribution unobserved state variables allowing recognizing agent reason agent mental state 
psdg inference algorithms support queries desired recognizing agents multiagent environments 
algorithms exploit direct evidence plans 
evidence subplan choices usually comes form explicit communication 
instance driver convoy may radio intended lane change drivers 
evidence introduce new dependencies belief state structure greatly increase complexity inference algorithms 
inference algorithms single time step time complexity jrj delta sigmaj delta jqj jrj jm 
compute probability distribution state distribution necessary answering queries plans time complexity jrj jm 
entire inference cycle explanation prediction belief update takes cpu second full traffic monitoring psdg jqj theta jrj sigmaj jp inference algorithms running sun sparc machine 
inference air combat psdg jqj jrj sigmaj jp faster due complete observability state variables domain 
specialized algorithms save considerably dbn algorithms time space complexity quadratic number instantiations unobserved state variables 
cost potentially prohibitive number state instantiations grows exponentially number unobserved state variables 
complexity clearly limiting factor determining tractability psdg approach domain 
assumptions psdg model inference algorithms sacrifice generality existing probabilistic languages koller goldman 
restrictions psdg model produce independence properties algorithms exploit practical inference 
relax restrictions state transition probabilities depending nonterminal symbols longer partition belief state different levels hierarchy 
existing restrictions domains complex models unobservable mental states complexity inference prohibitive 
potential solution approximation methods similar dynamic belief models boyen koller ghahramani jordan :10.1.1.16.2929
learning algorithms analogous pcfgs potentially automatically generate psdg productions states probabilities labeled parse trees 
learning algorithms reduce effort required domain specification potentially supporting dynamic adapt changes agent behavior 
domains observed agent behavior depends significantly recognizing agent decisions clearly adversarial domain air combat dynamic psdg specification weak perform reflexive modeling required 
psdg language contributes new representation exploits partition plans state exists plan recognition domains 
successfully created psdg models planning agents domains requiring creation new specification scratch requiring translation existing specification psdg language 
able develop algorithms automatic generation dbn representation psdg domain model resulting networks impractical inference 
designed specialized algorithms compact belief state summarize entire sequence observations incurring time space complexity costs sublinear space possible plan instantiations 
psdg language model supports practical probabilistic plan recognition domains existing languages 
black jelinek lafferty magerman mercer roukos 

history grammars richer models probabilistic parsing 
proceedings darpa speech natural language workshop pp 

boyen koller 

tractable inference complex stochastic processes 
proceedings conference uncertainty artificial intelligence pp 

carroll weir 

encoding frequency information lexicalized grammars 
proceedings international workshop parsing technologies pp 

charniak 

statistical language learning 
mit press cambridge ma 
charniak goldman 

bayesian model plan recognition 
artificial intelligence 
ghahramani jordan 

factorial hidden markov models 
machine learning 
goldman geib miller 

new model plan recognition 
proceedings conference uncertainty artificial intelligence pp 

gonzalez thomason 

syntactic pattern recognition 
addison wesley reading ma 
kautz allen 

generalized plan recognition 
proceedings national conference artificial intelligence pp 



computational scheme reasoning dynamic probabilistic networks 
proceedings conference uncertainty artificial intelligence pp 

koller mcallester pfeffer 

effective bayesian inference stochastic programs 
proceedings national conference artificial intelligence pp 

lesh allen 

simulation inference plan monitoring 
proceedings national conference artificial intelligence pp 

lin goebel 

message passing algorithm plan recognition 
proceedings international joint conference artificial intelligence pp 

magerman 

statistical decision tree models parsing 
proceedings annual meeting association computational linguistics pp 

newell 

unified theories cognition 
harvard university press cambridge ma 
pynadath 

probabilistic grammars plan recognition 
phd thesis university michigan 
pynadath wellman 

accounting context plan recognition application traffic monitoring 
proceedings conference uncertainty artificial intelligence pp 

pynadath wellman 

generalized queries probabilistic context free grammars 
ieee transactions pattern analysis machine intelligence 
schabes waters 

stochastic lexicalized context free grammar 
proceedings international workshop parsing technologies pp 

tambe rosenbloom 

event tracking dynamic multi agent environment 
computational intelligence 
