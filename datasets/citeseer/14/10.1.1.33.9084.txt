appeared proceedings pacific graphics ieee computer society press pp 
framework interactive simulation surgical cuts practiced surgical treatment 
existing methods framework tetrahedral volume meshes providing topological flexibility 
order keep representation consistent apply adaptive subdivision schemes dynamically simulation 
detection collisions surgical tool tissue accomplished axis aligned bounding box hierarchy adapted deformable objects 
haptic rendering feedback devised mechanical scalpel model accounts important interaction forces scalpel tissue 
relaxation computed localized semi implicit ode solver 
achieved quality performance framework demonstrated human soft tissue model 
related past years surgery simulation emerged fascinating field research offering rich repository challenges computer graphics 
observe worldwide activities field spawned various systems surgical training planning partly instrumental tools 
matter fact realistic simulation tissue cutting deformation belongs important components surgical simulator 
research focus mainly directed design advanced computational models topological geometric representation deformation rendering soft tissue structures 
advanced surgery simulation environments ultimate goal manipulate high resolution tissue models real time premium quality visual feedback 
order approach goal concerned important issues geometric topological representation soft tissue mathematical concepts efficiently represent underlying geometry form essential component surgery simulation environment 
tolerate topological changes tissue manipulation keeping computational burden sufficiently low 
collision detection detection handling interactive simulation surgical cuts daniel markus gross computer science department eth rich switzerland email inf ethz ch contacts collisions surgical tools tissue inter tissue collisions critical provide realistic visual feedback 
collision detection algorithms extensively investigated robotics cad relatively concepts exist surgery simulation 
haptic modeling rendering tissue surgical tools form mechanical system various interaction forces arise simulation 
correct mechanical behavior devise mechanical model external internal forces 
especially internal tissue forces caused large deformations quickly lead nonlinear mechanics 
powerful approximations 
fast computational schemes fast computation underlying deformation force model essential 
applications large deformations occur direct vicinity surgical tool 
consequence governing equations adapted locally terms approximation quality resolution 
framework building core components surgical simulator addresses points raised 
due importance issues considerable related done graphics vision communities 
computationally accurate methods modeling elastic soft tissue finite element procedures solve governing equations 
rich literature subject confine survey convey fem model facial surgery simulation extend animating human emotions 
boundary element methods bem proposed condensing solution domain boundary 
condensation disadvantage stiffness matrix recomputed cutting surface elements 
expensive bem matrices usually sparse 
order soft tissue modeling real time different strategies proposed 
instance develops surface snakes represent human organs 
furthermore developed soft tissue model facial animation mass spring particle systems representation human muscles 
appeared proceedings pacific graphics ieee computer society press pp 
interesting approach introduced 
computing physical deformations fly method uses pass hybrid scheme pass mere geometric deformation fields applied 
second pass tissue iterative solvers 
topology discretization restricted tensor product grids 
employ surface mass spring systems real time simulators 
similar euler type methods regular grids reported 
pure geometric topological manipulations marching cubes techniques algorithms 
approaches force feedback devices utilized implement interface user 
concepts dynamically update volume meshes keep track topological changes representation 
instance presents dynamic splitting procedure tetrahedra modeling brittle fracture 
uses strategy determine duplicate vertices polyhedron close collision points line cut 
dynamic subdivision algorithm operator framework introduced authors 
eventually concept intelligent scissors volume cutting interactive definitions cut contour object surface 
related collision detection efficient collision detection method cloth simulation devised 
lately optimizes implicit numerical solution strategies efficient cloth modeling :10.1.1.40.3173
describe conceptual framework approach 
section addresses improved subdivision scheme tissue representation 
methods collision detection explained section 
section elaborate algorithms relaxation multiprocessor implementation 
introduce concept force haptic modeling examples human soft tissue model 
conceptual overview framework unstructured tetrahedral mesh generated preprocess 
option mesh aligned texture data provided ct mri medical imaging devices 
fig 
depicts major components simulation framework 
collision detection procedures detect interaction surgical tools scalpel hooks tissue structures 
point tissue tool intersections computed 
topology geometry update procedures carry modifications tetrahedral mesh enabling model 
compute resulting tissue deformations multi threaded relaxation procedure traverses simplices mesh calculates positional movements laws deformation 
comes haptics separate haptic server manages physical model scalpel determines resulting force output 
due elaborate haptic perception human hand update rates khz maintained haptic rendering 
framework designed enable tasks parallel 
current implementation geometry update collision detection form single process computational tasks programmed threads 
operating system distributes automatically available number processors balancing load 
achieve real time response visual haptic rendering actively controlling processes priority queue 
frame rate decoupled computational tasks rendering speed depends performance allocated processor graphics subsystem 
similar concept holds force feedback connects tpc ip order running separate haptic server 
collision detection geometry rendering frames haptics relaxation tcp ip khz parallel tasks simulation real time requirements different algorithms working data structure necessary avoid concurrent interactions 
solved defining exclusively atomic operations shared data segments 
crack free tetrahedral subdivision knowledge representation cut arbitrary tetrahedral meshes 
generalized subdivision scheme divides tetrahedron fixed number smaller simplices independent topology cut 
scheme works practice may lead rapidly increasing number tetrahedra large cuts 
addition cracks may arise physical representation tissue 
possibility solving problem inconsistent internal representations adjacent tetrahedra done remeshing techniques 
subsequently improved subdivision method solves problem having update adjacent tetrahedra 
method confines appeared proceedings pacific graphics ieee computer society press pp 
newly created simplices actual tetrahedron introducing cut specific subdivision patterns 
basic idea procedure subdivide edges faces part cut surface 
achieve consistent subdivision restricting permitted subdivisions tetrahedral face cases 
permitted face subdivisions case fig 
represents trivial situation face intersection cut surface detected 
second image depicts intersection face affecting edges 
subdivision scheme applied face partially cut 
case represents face having edges affected cut 
completely split faces 
cut algorithm simplified distinguishing topologically different cases 
cases represent complete split tetrahedron stand partially cut tetrahedra 
restricting subdivision patterns cases face subdivision patterns obtain final pattern fig 

subdivision patterns cases localization subdivision clearly visible 
faces edges intersected cut sur face kept intact desired 
note additional node inserted completely cut face see fig 
necessarily needed 
scheme provides advantages firstly leads symmetry subdivision patterns secondly creates additional degrees freedom cut surface improving results subsequent numerical relaxation 
elastic tissue behavior forces cut surface open relaxation 
order provide necessary degrees freedom newly inserted mass nodes edges faces cut surface belong boundary inserted twice 
extended look approach described adding subdivision rules 
described geometrical representation results replacing new vertices mass nodes previously calculated intersections see chapter 
utilizing described setup observed potential newly inserted tetrahedra deserves discussion 
illustrate possible intersections show fig 
slightly different case fig 

abc abd acd potential self intersection newly inserted tetrahedra fig 
edge connect nodes abc intersects triangle abd acd 
consequence tetrahedra containing edge penetrate tetrahedra containing face 
fig 
depicts case inserted edge acd abc solved problem 
patterns fig 
fig 
edges acd abc abd tested corresponding faces 
requires additional intersection tests tetrahedron worst case 
collision detection order achieve realistic physically correct visual feedback collisions surgical tool tetrahedral mesh detected 
detection collisions basically consists tasks 
find surface boundary elements interacting surgical tool 
second deals finding tetrahedra inside tissue cut acd appeared proceedings pacific graphics ieee computer society press pp 
scalpel 
call problem surface collision detection second volume collision detection 
surface collision detection earlier showed calculation interaction tool object surface may substantial computational burden 
extension approach constructed bounding volume hierarchy surface triangles 
opposed rigid body motion bounding volumes fixed relative objects shapes bounding volumes follow deformation object 
observe proposed collision detection methods tend apply sophisticated bounding volumes 
algorithms designed rigid objects bounding volumes calculated preprocess 
possible deformable objects decided simple bounding volumes keep update overhead small possible 
eventually axis aligned bounding boxes serve best building hierarchy surface elements deformable object 
case deformation bounding box tree updated 
done locally bottom traversal tree starting affected surface element 
decreasing computational cost updates added small tolerance size bounding box surface triangles 
gives algorithm certain grace period allows skip updating small positional changes child element 
particular tolerance box constructed node surface triangle size bounding boxes surface triangles scaled correspondingly fig 

positional update mesh node node compared tolerance box boundaries 
note test computed efficiently due axis alignment bounding boxes 
node leaves tolerance box bounding volumes adjacent surface triangle updated 
tol criterion face top view tolerances added node bounding box determination best suited box tol face min parent volume max overlapping special effort put construction best matching bounding box tree 
computing bounding boxes leaf level tree greedy bottom traversal group pairs bounding boxes assign parent boxes 
algorithm traverses direct neighborhood surface triangle breadth order 
avoids combinations faces belonging surface component 
combined criteria order find best pairs 
minimal volume parent box second accounts maximal overlapping volume 
employ difference volume measures illustrated fig 

having values equal provide optimal pair 
run time new bounding boxes computed groups new faces 
optimized generating predefined box structures 
order compute intersection surgical tool tissue surface perform bounding box tests hierarchically top traversal tree 
volume collision detection detection entry points surgical tool tissue tetrahedra affected scalpel time step simulation 
designing collision detection algorithms goal exploit spatial coherency confine search local traversal adjacent tetrahedra 
reason store list tetrahedra currently penetrated scalpel time step 
notation tetrahedra time named active tetrahedra tetrahedra penetrated time pre tn vious active tetrahedra 
assuming scalpel represented thin line length corresponds scalpel blade situations may occur 
tip scalpel ps inside outside tissue 
addition segments scalpel blade may penetrate tissue shown fig 

example tissue penetration scalpel tip ps inside tissue segment penetrated tissue analyzing topology penetrations consecutive scalpel positions obtain different situations depicted fig 
handled collision detection algorithm 
rows fig 
show different possible positions scalpel tn scalpel positions tn altered column 
find possible intersections appeared proceedings pacific graphics ieee computer society press pp 
tetrahedral mesh trajectory scalpel tip checked face intersections 
furthermore intersect tetrahedral edges lying consecutive scalpel positions swept surface spanned scalpel blade previous position respectively 
note significant improvement limitation detect directly adjacent tetrahedra 
previous scalpel position time inside scalpel position time part tissue build active tetrahedra list outside traverse trajectory tetrahedra active tip tetrahedron previous active tip tetrahedron traverse swept surface active tetrahedra list traverse swept surface previous active tetrahedra list cases different volume collision topologies algorithm manages depicted situations 
starting entry face initially searches active tetrahedra 
algorithm continues traversing trajectory scalpel tip computes face intersections tetrahedra lying active tip tetrahedron previous active tip tetrahedron 
pseudo code fragment describes recursive algorithm 
called active tip tetrahedron argument 
necessary see fig 
executed previous active tip tetrahedron input 
previous tetra tetra tetra valid entry face tetra face previous tetra tetra face neighbor tetra note cases fig 
exists valid active tip tetrahedron 
face intersection algorithm determine intersection trajectory scalpel tip object surface 
tetrahedron belonging entry face serve starting point find routine 
second step tetrahedra intersected swept surface traversed edge intersections calculated 
approximate swept surface triangles propose recursive procedure compute 
order handle cases fig 
call procedure active tetrahedra list previous active tetrahedra list 
recursively traverses adjacent tetrahedra long intersections detected 
avoid cycles tag visited intersected tetrahedron return tetrahedron providing intersection 
pseudo code gives overview algorithm 
tetra tetra state visited tetra active tetra list tetra tetra active tetra list tetra tetra tetra state visited tetra state visited edge tetra edge face tetra face contains intersected edge tetra state intersected face neighbor tetra relaxation computation physics soft tissue conventional mass spring system assigning springs edges masses nodes tetrahedralization 
relatively simple ordinary differential equations ode studied numerical analysis literature 
known mass spring systems may lead stiff odes imposing computational constraints solution strategies 
order better explain semi implicit solver start underlying ode type dx dt dt steady state solution system computed assembling stiffness matrix calculating solution vector system traversing different mass nodes iteratively processing individual equation 
simulation environment typically wants achieve relaxation smooth appeared proceedings pacific graphics ieee computer society press pp 
possible 
consequently procedures dense output reflecting dynamics system extent 
iterative methods useful cases implicit integration 
semi implicit integration method shown implicit integration methods superior explicit ones cases stiff equation systems 
sophisticated implicit solver enables large time steps focus simple method guarantee high update rates animation 
interestingly show subsequently equation allows find compromise stability implicit method simplicity density explicit iteration 
simplify notation consider governing equation single mass mk order derive method divide second order differential equation mk system order differential equations introducing velocity function vk dxk vk dt ext vk dt resulting spring force expressed operator incorporates spring forces adjacent mass nodes 
depends position affected mass nodes stiffness matrix yields sum spring forces invoked masses connected mk position mass node mi denoted xi jk xk jk xk xk spring forces computed multiplying elongation rest length jk spring spring stiffness jk assume time equation initial values introduce notation xk vk position velocity mass node mk time tn respectively 
implicit method describe calculation xk vk time tn tn depending states xk vk new unknown states xk vk note general solve nonlinear system equations variables time step 
vk xk ext vk xk vn xk jk jk xk xk xk bypass computation system partially substitute xk equation insertion upper equation solve lower equation variable vk case solution initially implicit approach expressed explicitly 
algebra equations transformed system xk vk vk equation depends variable vk computed evaluating second equation 
equation unfortunately depends xk magnitude operator nonlinear function turns expensive extract xk update step 
estimate xk explicit euler step leads semi implicit method solves direction mass motion implicitly magnitude explicitly 
iterative solutions preferable achieve smoother relaxation 
note cases values xk available computation new position xk mass mk xk xmax estimated equation 
parallel node traversal algorithm analysis various tissue manipulation procedures different surgical instruments learned major part tissue deformation occurs direct vicinity instrument 
words mass nodes away region take smaller influence nodal displacement 
observation suggests adaptive step size control 
efficient implementation feature quantize possible time steps values allocate lists store list mass nodes time step 
relaxation individual lists handed scheduler process nodes 
lists assigned smaller time steps passed larger ones 
scheduler multithreaded enabling handle mass nodes parallel 
mk vk ext xk mk jk xk kjk xk xk vk scheduler threads appeared proceedings pacific graphics ieee computer society press pp 
scheduling data structure algorithm dedicated thread controls individual nodes different distribution different threads 
dynamic adaptation node time step order guarantee meaningful distribution different commands implemented 
suggest averaged acceleration node fixed number previous time steps assignment criterion 
nodes higher acceleration updated slower ones 
fair assignment available threads stamp list time relaxation ti 
processing list incremented scheduler eventually picks list leading smallest increment actual time relation list list list min scheduling node lists different timesteps fig 
illustrates scheduling algorithm 
grey boxes stand passed relaxation time nodelist white boxes indicate estimation time required relaxation step 
example list scheduled lead smallest increment simulation time 
note storing time node essential prerequisite moving individual nodes lists 
computing positional update node different list difference actual time node time stamp serves new timestep integration 
haptic scalpel model haptic interaction surfaces arbitrary objects essential ingredient surgical simulator treated publications 
ghost api phantom force feedback device applied model rigid bone structures 
aware model describing haptic behavior scalpel cutting deformable tissue 
section novel haptics model scalpel interaction soft tissue 
due high update rates necessary realistic haptic rendering goal start force model independent actual tissue representation 
second step account interaction mesh communicating entry positions material parameters external forces haptics server 
force decomposition scalpel usually cuts direction blade admissible restrict scalpel motion plane spanned blade 
model behavior project external force vector plane 
illustrated fig 
accomplished decomposition force lying plane force perpendicular 
responsible constrained avoid movements perpendicular cut plane 
simplify calculation forces decompose component aligned blade component perpendicular 
decomposition scalpel forces ext force computations ones describe scalpel friction cut carried separately added obtain resulting forces 
compute external force positional data force feedback device think scalpel tip connected spring called proxy storing tip previous position 
turns meaningful approach related works 
appeared proceedings pacific graphics ieee computer society press pp 
modeling tissue forces blade scalpel enters piece tissue important interactions occur 
firstly scalpel separates tissue penetrates interior 
secondly forces imposed scalpel deform tissue 
relation phenomena established friction scalpel blade 
friction occurring cut separated different forces long force applied scalpel smaller tissue dependent threshold scalpel open tissue 
call force responsible effect static cut friction 
magnitude force exceeds scalpel start cutting 
note friction imposed case dynamic cut friction usually smaller static cut friction 
observe physical effects describing cut friction 
force cuts open molecular structure tissue called fopen constant time differs coefficient static dynamic case 
due inertia displaced tissue force causing displacement blade dependent blade velocity model process setting terms viscosity force 
addition exists surface friction friction arising friction scalpel blade tissue 
friction dependent magnitude force perpendicular cut surface 
entire phenomenon cut friction formulated sum forces projected unity vectors pointing opposite direction see fig 

calculating resulting force computed similar relations write corresponding equation generic placeholder cut tissue dn da cut cut open friction cut static cut friction considerations neglect tissue displacement 
result resulting static cut friction force compensate force static case velocity scalpel zero displacement force vanishes static cut friction modeled static fopen static friction static static tissue opening coefficient stiffness material sharpness blade edge 
small sharp edge static static friction coefficient penetration depth scalpel blade breadth scalpel blade values change simulation particular possibly material stiffness penetration depth scalpel calculated distance scalpel tip ps entry point scalpel pe breadth scalpel blade described function depending dynamic cut friction mentioned dynamic cut friction applies soon exceeds value cutting cut friction necessarily point exactly opposite direction difference applied force reacting cut friction force results eventually tion force fm scalpel 
fm case dynamic cut friction forces described earlier considered 
note fopen friction differ static case terms smaller coefficients new 
fopen dynamic displace dynamic dd vx friction dynamic dynamic dynamic tissue opening coefficient shape scalpel blade depth scalpel blade shape appeared proceedings pacific graphics ieee computer society press pp 
constraints blade movement order model correct interaction scalpel tissue movement scalpel blade constrained direction edge 
fact impose separate constraints 
firstly motion direction perpendicular blade penalized force pushing scalpel tip back plane 
force proportional distance scalpel tip plane 
establish force restricting proxy movement plane 
proxy modeling static cut tion 
proxy position fixed reached 
secondly exploit fact scalpel usually sharp edge 
assumed cut direction forward motion 
backward motions interpreted pulling tool back consequence force applied 
distinction cutting withdrawing obtained scalar product results obtain models realistic efficient compute generated adaptive tetrahedral meshes 
material properties physics system boundary conditions integrated model visual quality cuts improved making volume texture mapping 
mesh generation visual human data set served data source 
example limp segmented blue color computing thresholding voxel 
subsequently applied subsampling filtering initially high resolution data 
obtain model subdivided volume cell tetrahedra 
volume extracted marching tetrahedron type algorithm 
achieve consistent mesh representation tetrahedra intersected surface subdivided scheme allows symmetrical subdivision quadrilateral shown fig 

achieve adaptive mesh representations different resolutions initial mesh processed progressive mesh algorithm 
weighting function tuned collapse small edges interior mesh preserving details mesh surface 
resulting mesh structure seen fig 
fig 

texturing believe increasing texture memory graphics boards textures manageable adequate resolutions 
applied texture mapping enhance realism visual quality simulation 
initially node canonic texture coordinates associated spatial position data set 
filtering isosurface mesh construction generate positional drifts nodes register texture dataset explicitly mesh construction 
step performed preprocessing 
correctly aligned textures displayed simulation 
material properties boundary conditions texture volume framework supports volumetric material properties boundary conditions 
material volume generated segmenting texture volume assignment different stiffness values individual tissue types 
detailed description nontrivial problem scope instrumental tools proposed authors 
rigid bone structures left right boundaries knee model red nodes fig 
defined interactively displacement boundary conditions 
tissue boundaries accounting fact leg muscles strong longitudinal orientation 
examples fig 
shows frames sequence representing interactive surgical cut knee model performed phantom force feedback device 
relaxation thread ran parallel computations geometric updates 
observe tissue separates immediately scalpel force exceeds described thresholds 
due boundary conditions 
illustrate performance simulation elapsed time displayed frame 
example simulated silicon graphics onyx infinite reality mhz processors 
initial model consisting tetrahedra achieved frames second rendering speed 
elucidate geometric processing updates fig 
illustrates initial surface triangulation model fig 
depicts underlying mesh image fig 

order demonstrate performance methods fig 
illustrates capabilities concerning topological modifications fig 
geometrical accuracy 
examples initially tetrahedra 
system interactively cutting soft tissue models efficiently represents tracks arbitrary cut trajectories high degree detail 
collision detection fast stable relaxation appeared proceedings pacific graphics ieee computer society press pp 
methods system features model interaction scalpel tissue 
comprise improvements physical model including representation incompressibility refinements intersected tetrahedra insertion additional simplices 
acknowledgments ziegler implementation surface collision detection algorithms alexander beck integration scalpel model 
arthur gregory ming lin taylor 
framework fast accurate collision detection haptic interaction proceedings ieee virtual reality 
baraff witkin 
large steps cloth simulation siggraph proceedings pages 
basdogan chih hao srinivasan 
simulation tissue cutting bleeding laparoscopic surgery auxiliary surfaces medicine meets virtual reality pages 
ios press 
bey 
tetrahedral grid refinement computing volume pages 
gross 
interactive cuts dimensional soft tissue proceedings eurographics volume pages 
bro nielsen 
modelling elasticity solids active cubes application simulated operations ayache editor computer vision virtual reality robotics medicine lecture notes computer science 
springer verlag apr 
isbn 
bro nielsen cotin 
real time volumetric deformable models surgery simulation finite elements condensation computer graphics forum sept 
gibson 
fast algorithm deforming volumetric objects proceedings symposium interactive graphics pages apr 
gross 
graphics medicine visualization surgery simulation acm computer graphics volume pages 
wanner 
solving ordinary differential equations 
springer 

fast collision detection trees proceedings symposium interactive graphics pages 
james pai 
accurate real time deformable objects siggraph proceedings pages 
acm press 
koch gross von 
simulating facial surgery finite element models proceedings sig graph pages 
koch roth gross zimmermann 
framework facial surgery simulation technical report computer science department eth zurich 
koch gross 
emotion editing finite elements computer graphics forum volume pages 
kuhn krumm 
karlsruhe endoscopic surgery trainer example virtual reality medical education minimally invasive therapy allied technologies volume pages 
blackwell science 
lee terzopoulos waters 
realistic face modeling animation cook editor sig graph conference proceedings annual conference series pages 
acm siggraph addison wesley aug 
thalmann 
real time muscle deformations mass spring systems computer graphics international pages 
brien hodgins 
graphical modeling animation brittle fracture siggraph proceedings pages 
acm press 
medicine 
visible human project www nlm nih gov research visible visible human html 
spitzer johnson 
real time visually haptic interaction anatomical data editor medicine meets virtual reality pages 
ios press 
rush spitzer heath 
real time visually accurate surgical simulation morgan editors health care information age pages 
ios press 
ruspini khatib 
haptic display complex graphical environments sig graph proceedings pages 
technologies 
ghost software developer toolkit www com 
gross 
progressive proceedings ieee visualization pages 
suzuki kai 
surgical planning system soft tissues virtual reality medicine meets virtual reality pages 
volino thalmann 
versatile efficient techniques simulating cloth deformable objects siggraph proceedings pages 

wong 
siu 
heng sun 
interactive volume cutting technical report department computer engineering chinese university hong kong 
appeared proceedings pacific graphics ieee computer society press pp 
simulation time seconds seconds seconds frames sequence representing interactive surgical cut seconds initial triangulation mesh fig 

modification geometrical 
