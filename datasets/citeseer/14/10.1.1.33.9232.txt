regular expressions finite automata anne klein february established fact regular expression transformed non deterministic finite automaton nfa ffl transitions authors provide variant construction 
berry sethi bs shown construction ffl free nfa due glushkov glu natural representation regular expression described terms brzozowski derivatives expression :10.1.1.98.4378
glushkov construction plays significant role document processing area sgml standard iso widely adopted publishing houses government agencies syntactic specification textual markup systems uses deterministic regular expressions expressions glushkov automaton deterministic description language document types 
show glushkov automaton constructed time quadratic size expression worst case optimal 
deterministic expressions algorithm linear run time 
improves cubic time methods suggested literature asu bs 
major step algorithm consists bringing expression call star normal form 
concept useful characterizing relationship types unambiguity studied literature 
show modulo technical condition expression strongly unambiguous ss weakly unambiguous star normal form 
leads third result quadratic time decision algorithm weak unambiguity improves bi quadratic method introduced book 
institut fur informatik universitat freiburg 
freiburg germany 
regular expressions play prominent role practical applications 
syntactic specifications programming languages describe lexical tokens text manipulation systems describe textual patterns trigger processing actions asu 
basis standard utilities scanner generator lex text tools awk egrep sta 
regular expressions provide appropriate notation regular languages text user interfaces finite automata preferred data structure programming purposes 
distinct methods devised translate regular expression nondeterministic finite automaton nfa 
step approach standard method translates regular expression linear time non deterministic finite automaton ffl transitions 
ffl transitions eliminated quadratic time hu asu woo ss 
alternative method formalizes notion symbol word matched occurrence symbol expression glu asu bs 
fact word denoted expression possible spell word tracing appropriate path expression 
example word abba denoted expression corresponds path starts visits twice arrives third occurrence course structure expression restricts positions adjacent symbols word matched 
instance th symbol word matched second st symbol matched restrictions formalized glushkov glu 
noticed number authors regular expression defines natural way nfa glushkov automaton states correspond occurrences symbols transitions connect positions consecutive path asu 
berry sethi shown glushkov con struction related natural way brzozowski derivatives bs 
cited papers considers time complexity constructing straightforward implementation takes time cubic size expression opposed quadratic time standard construction 
provide quadratic time algorithm theorem worst case optimal output sensitive 
transform expression linear time expression ffl denote star normal form glushkov automaton identical theorem 
show expressions star normal form glushkov automaton constructed quadratic time lemma 
practical applications full regular expressions considered powerful syntactic restrictions imposed 
known examples unix tools vi grep 
text processing area iso standard sgml standard general markup language provides syntactic meta language definition textual markup systems 
markup systems facilitate electronic interchange electronic documents provide standard basis accessing displaying 
sgml context valid regular expressions glushkov automaton deterministic 
languages recognized deterministic regular expressions characterized bw 
show deterministic expression deterministic finite automaton constructed linear time theorem 
implies parsing tables linear size generated context free grammars sgml uses describe document types 
transforming language descriptions type say regular expressions finite automata applications point view important preserve unambiguity unambiguous representations language meaning word language derived representation 
motivation book investigate nfa showed regular expression unambiguous unambiguous 
ffl nfa unambiguous word path state diagram spells asu 
regular expression unambiguous word path matches 
unambiguous ffl nfas semantic procedures attached transitions unambiguous regular expressions semantic procedures attached occurrences symbols 
call kind ambiguity regular expressions defined weak opposed definition soininen ss 
strong unambiguity allows semantic procedures attached symbols operators regular expression 
give example expression trivially weakly unambiguous symbol occurs 
symbol word matched exactly position expression 
contrast word aa denoted single application outer star fold application inner alternatively fold application outer star single applications inner 
strongly unambiguous 
notions unambiguity related notion star normal form 
theorem show essentially expression strongly unambiguous weakly unambiguous star normal form 
turn decision problem weak unambiguity 
unambiguity ffl nfas reduced linear time lr property context free grammars quadratic time complexity ss 
strong unambiguity expressions reduced linear time unambiguity ffl nfas thompson construction asu 
quadratic time algorithm decide expression strongly unambiguous 
hand weak unambiguity reduced unambiguity nfas glushkov construction reduction quadratic time size yields bi quadratic decision algorithm weak unambiguity 
alternatively book suggest testing regular expression weak ambiguity transforming mealy automaton tested information 
done algorithm huffman evans example textbook hen 
algorithm boils testing different states reached initial state means common word state transitions common symbol essentially weakly unambiguous pair states 
straightforward implementation algorithm bi quadratic size 
applying technique developed quadratic time construction glushkov automaton transform regular expression ffl star normal form linear time 
transformation preserves weak unambiguity expressions star normal form weak strong unambiguity essentially 
provide algorithm deciding weak unambiguity quadratic time theorem 
definitions section define glushkov nfa regular expression straight forward implementation construction runs time cubic size show implementation modified run quadratic time provided star normal form 
section show regular expression transformed star normal form linear time leaving glushkov automaton intact 
implies glushkov automaton constructed expression quadratic time 
sigma finite alphabet symbols 
uppercase letters denote regular expressions denotes language specified regular expression indicate different positions occurrences symbols expression mark symbols subscripts 
ex ample regular expression ab written approach subscripted symbols called positions set subscripted symbols expression written form denoted pos 
subscripting implies expressions fg pos pos disjoint 
variables positions elements sigma 
position corresponding symbol sigma 
definitions due glushkov glu define dfa recognizing 
functions capture notion position regular expression matching symbol word 
functions set positions match symbol word dual set positions symbols follow set positions follow position path definition define inductively 
ffl 
fxg 

fg ffl ffl 

definition function follow maps positions subsets positions ffl positions 
follow 
follow follow pos follow pos 
fg follow follow pos follow follow pos 
follow follow pos follow 
functions follow authors defined glushkov nfa recognizing asu bs 
berry sethi shown natural representation bs 
definition define glushkov automaton qe fq sigma ffi fe follows 

qe pos states positions plus new initial state 
ffi 

ffi fy follow ag pos sigma 

fe fs ffl 
proposition 
inductive definition suggests computation follow cubic size describe canonical method 
refine method achieve quadratic time complexity 
size converting syntax tree 
external nodes labeled ffl occurrences symbols internal nodes labeled operators delta regular expressions generated ll grammar done time hu 
node syntax tree corresponds subexpression node syntax tree provide variables nullable boolean pos follow pos pos 
variable nullable indicates subexpression corresponding contains empty word hold positions follow holds positions perform postorder traversal syntax tree node variables computed 
precisely node code executed 
case node labeled nullable false node labeled ffl nullable true node labeled nullable false follow fxg fxg node labeled nullable nullable nullable 

node labeled delta nullable nullable nullable left child follow follow 
nullable left child 
nullable right child 
node labeled nullable true child follow follow child child 
child child case lemma invariant holds node visited 

nullable true ffl 



follow follow pos 
especially root note 


follow follow pos 
sets represented ordered lists union sets implemented time linear size sets 
sets size algorithm compute follow pos takes time 
observation way better time bound unions labeled 

disjoint 
pos pos fg subexpressions unions labeled 
necessarily disjoint 
starred subexpression adds elements follow elements may belong follow expression illustrates 
general strategy follows consider expressions unions including ones type disjoint 
expressions star normal form 
show algorithm runs time size expressions star normal form 
section show restriction star normal form justified 
definition regular expression star normal form starred subexpression snf condition holds follow lemma regular expression star normal form 
computed time size size 
proof star normal form 
look unions labeled 
general form disjoint 
furthermore referred program 
represent sets unordered lists implement union constant time list concatenation copying possibly destroying binding values process 
unions type 

form disjoint 
cases referred times loop preserved 
implement union copying elements run time proportional size estimate run time algorithm size crucial observation subexpression subexpression pos follow follow follow unions disjoint run time spent instruction 

node position proportional number positions follow subexpressions total run time spent 

proportional pos equal number transitions star normal form goal section transform regular expression linear time expression ffl star normal form ffl holds 
theorem regular expression regular expression ffl 
ffl 
ffl star normal form 

ffl computed linear time 
intermediate step show starred expression transformed expression ffi identical glushkov automaton snf condition definition fulfilled outermost level ffi crucial observation remove feedback transitions leading final states apart states directly connected non final resulting nfa glushkov automaton expression ffi follow ffi ffi ffi 
furthermore feedback transitions deleted ffi re introduced ffi ffi definition define ffi inductively follows 
ffl ffi 
ffi ffi ffi ffi fg ffi fg ffl ffl 
ffi ffl ffl 
fg ffi ffl ffl 
ffi ffi 
ffl ffl 
ffi ffi lemma 
length ffi length 

ffl ffi 

pos ffi pos 

ffi ffi 

follow ffi follow pos 

follow ffi follow especially follow ffi ffi ffi 

follow ffi follow pos 

ffi proof claims straightforward inductions claims proved induction show induction step concatenation 
fg case ffl ffl 
follow disjoint position 
implies follow ffi follow follow 
case ffl ffl 
follow disjoint ffl 
cases follow induction hypothesis 
case ffl ffl 
ffi ffi ffl ffi 
case ffl ffl 
case follows directly induction hypothesis 
claims follow directly 
substituting expression ffi leaves glushkov automaton intact 
furthermore follow ffi ffi ffi substitute starred subexpression ffi proceeding bottom expect get expression ffl star normal form ffl definition ffl ffl ffl ffl ffl fg ffl ffl ffl ffl fflffi lemma 
ffl 

length ffl length 

pos ffl pos 

ffl ffl 

follow ffl follow pos 

fe ffl fe claims imply part theorem ffl claim ffl star normal form 
proof induction length interesting case star induction step 
ffl fflffi snf condition holds fflffi lemma induction hypothesis implies star normal form 
complete proof show fflffi lemma 
ffiffi ffi 
fflffi 
fflffl ffl proof induction show induction step star 

ffiffi identical ffiffi definition turn ffi induction hypothesis ffi definition 

fflffi definition 
claim gives fflffi induction hypothesis definition 

fflffl definition 
claim gives fflffi induction hypothesis claim 
turn ffl definition 
show ffl computed linear time 
ffl built ffl fflffi subexpressions compute ffl fflffi simultaneously postorder traversal syntax tree lemma recursive definition ffl sure node constant amount time spent 
completes proof theorem 
lemma ffl fflffi ffl fflffi fflffi fflffi fflffi fflffi fg fflffi ffl ffl ffl ffl 
fflffi ffl ffl ffl 
ffl fflffi ffl ffl 
fflffi fflffi ffl ffl 
fflffi fflffi proof induction concatenation step observe ffl star step apply lemma 
example definition ffl fflffi glushkov automaton corresponding star normal form repeated application lemma yields fflffi fflffi fflffi fflffi fflffi star normal form expressions glushkov nfa shown 
putting results previous sections get theorem glushkov automaton computed regular expression time linear size size 
proof compute ffl linear time 
theorem ffl fulfills precondition lemma 
nfa ffl computed ffl time linear size ffl size ffl 
ffl identical transition leading state pos label size quadratic size result worst case optimal size minimal nfa equivalent omega gamma ss 
people writing document grammars sgml context especially interested regular expressions glushkov automaton dfa 
expressions glushkov automaton constructed linear time 
definition regular expression deterministic corresponding nfa deterministic 
theorem decided linear time regular expression deterministic 
deterministic deterministic finite automaton computed linear time 
proof deterministic expression size linear size ambiguity automata expressions types unambiguity regular expressions defined literature 
expression weakly unambiguous word traced uniquely path strongly unambiguous ss word uniquely decomposed subwords syntactic structure relationship concepts unambiguity investigated far 
turns section missing link star normal form defined 
modulo technical condition empty word expression strongly unambiguous weakly unambiguous star normal form theorem 
define weak strong unambiguity 
consider regular expressions don syntactic constituent consider non empty regular languages 
definition 
ffl nfa unambiguous word path initial state final state spells 
regular expression weakly unambiguous nfa unambiguous 
note path uniquely determined sequence positions pos passes transitions leading state pos labeled transition leads initial state 
definition define languages 
concatenation unambiguous vv ww imply 
star unambiguous imply definition define inductively regular expression strongly unambiguous 
ffl strongly unambiguous 
strongly unambiguous strongly unambiguous disjoint 
fg strongly unambiguous strongly unambiguous concatenation unambiguous 
strongly unambiguous strongly unambiguous star unambiguous 
strong unambiguity defined terms automata 
definition ffl nfa recognizing standard textbook constructions asu hu woo ss ao 
lemma strongly unambiguous unambiguous 
proof soininen shown construction ss 
variants similar 
lemma strongly unambiguous weakly unambiguous 
proof elimination ffl transitions algorithm ss transforms different paths spelling word correspond different paths doing 
unambiguity implies unambiguity lemma applied 
investigate circumstances weakly unambiguous expressions strongly unambiguous 
direct comparison facilitated inductive definition weak unambiguity 
lemma ffl weakly unambiguous 
weakly unambiguous weakly unambiguous empty word ffl 
fg weakly unambiguous weakly unambiguous concatenation unambiguous 
follow ffl 
weakly unambiguous weakly unambiguous star unambiguous 
proof glushkov automata ffl transitions path denoting empty word empty path 
furthermore path path non empty path different path fg assume weakly unambiguous 
non empty path completed path weakly unambiguous 
decomposition word form vw corresponds paths xm positions belong positions weakly unambiguous paths identical 
positions disjoint concatenation unambiguous 
proves direction obvious 
ffl empty word uniquely decomposed sequence words 
non empty path determined sequence positions consists sequence paths fulfills starting positions paths uniquely determined 
weakly unambiguous star unambiguous 
direction obvious 
weak strong unambiguity exactly inductive definition expressions star normal form provided subexpression denotes empty word ambiguously 
call condition epsilon normal form 
definition define induction epsilon normal form 
ffl epsilon normal form 
epsilon normal form epsilon normal form ffl 
fg epsilon normal form epsilon normal form 
epsilon normal form epsilon normal form ffl 
theorem strongly unambiguous 
weakly unambiguous 
star normal form 
epsilon normal form 
proof lemma implies expressions star epsilon normal form weak strong unambiguity identical 
remains show strongly unambiguous expressions star epsilon normal form 
crucial point induction dealt lemma 
lemma strongly unambiguous fulfills snf condition 
proof assume exist follow 
contain syntactic constituent final state reached initial state intermediate states final state reached intermediate states 
state sequence describes path follow 
path composition paths 
star ambiguous 
previous section transformed expressions star normal form linear time 
transformation preserves epsilon normal form 
theorem reduces weak unambiguity strong unambiguity linear time 
yields quadratic decision algorithm weak unambiguity expressions epsilon normal form 
theorem regular expressions epsilon normal form tested weak unambiguity quadratic time 
proof epsilon normal form 
transformed star normal form ffl changing glushkov automaton linear time 
furthermore ffl epsilon normal form 
unfortunately possible ffl contains syntactic constituent 
usual linear time elimination ffl resulting expression ffl preserves star epsilon normal form leaves glushkov automaton intact ffl ffl theorem applied free expression ffl weakly unambiguous ffl ffl strongly unambiguous 
strong unambiguity expressions decided quadratic time ss 
alfred aho brian kernighan peter weinberger 
awk programming language 
addison wesley reading massachusetts 
ao jurgen albert thomas ottmann 
sprachen und 
institut mannheim 
asu alfred aho ravi sethi jeffrey ullman 
compilers principles techniques tools 
addison wesley series computer science addisonwesley reading massachusetts 
ronald book shimon sheila greibach gene ott 
ambiguity graphs expressions 
ieee transactions computers february 
janusz brzozowski :10.1.1.98.4378
derivatives regular expressions 
journal acm october 
bs gerard berry ravi sethi 
regular expressions deterministic automata 
theoretical computer science 
bw anne klein wood 
parser generators document grammars 
submitted publication 
dale dougherty tim reilly 
unix text processing 
hayden books indianapolis 
glu glushkov 
theory automata 
russian mathematical surveys 
hen frederick 
finite state models logical machines 
john wiley new york 
hu john hopcroft jeffrey ullman 
automata theory languages computation 
addison wesley series computer science addison wesley reading massachusetts 
iso iso 
information processing text office systems standard generalized markup language sgml 
october 
international organization standardization 
ss soininen 
parsing theory 
volume languages parsing eatcs monographs theoretical computer science springer verlag berlin 
sta 
unix zur 
springerverlag berlin 
woo wood 
theory computation 
john wiley new york 

