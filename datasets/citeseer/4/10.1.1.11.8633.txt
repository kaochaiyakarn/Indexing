trends controversies jan feb issue ieee intelligent systems web services done 
don go flow web services composition standards exposed van der aalst dept technology management eindhoven university technology box nl mb eindhoven aalst tm tue nl released business process execution language web services bpel ws said combine best standards web services composition wsfl ibm xlang microsoft 
bpel ws allows mixture block structured graph structured process models making language expressive price complex 
bpel ws bad proposal remarkable attention standard receives fundamental issues problems semantics expressiveness adequacy get attention deserve 
having standard idea 
die mature 
simple indicator development increasing length acronyms pdl xpdl edoc bpml wsdl wsci ebxml bpel ws just acronyms referring various standards domain 
problem languages typically clearly defined semantics 
way overcome problems critically evaluate called standards web services composition don go flow 
web services composition trends coming world business creating opportunities pressures automate business processes organizational boundaries 
technology push created enabling technologies xml standards internet starting point 
trend need improve efficiency processes business perspective 
crash pressing need truly utilize potential internet technology automating business processes enterprise boundaries 
goal web services exploit xml technology internet integrate applications published located invoked web 
typical example web services application galileo system connects travel agency locations car rental companies hotels tour operators 
truly integrate business processes enterprise boundaries sufficient merely support simple interaction standard messages protocols 
business interactions require long running interactions driven explicit process model 
raises need web services composition languages author arthur ter hofstede dumas contributing results mentioned 
bpel ws wsfl xlang wsci bpml 
languages known web services flow languages web services execution languages web services orchestration languages web enabled workflow languages 
discussing bpel ws likes focus typical technology building 
web service composition bpel ws xlang wsfl publication discovery uddi service description layer wsdl xml messaging layer soap transport layer smtp ftp overview web services technology 
shows relation web services composition languages standards soap wsdl uddi 
soap simple object access protocol protocol exchange information decentralized distributed environment typed message exchange remote invocation 
xml protocol consists parts envelope defines framework describing message process set encoding rules expressing instances application defined datatypes convention representing remote procedure calls responses :10.1.1.37.8441
soap potentially build top transport layer infrastructure 
wsdl web services description language xml format describing network services standard messaging layer soap 
wsdl document defines services collections network endpoints ports 
wsdl definition endpoints messages separated concrete network deployment data format bindings 
allows reuse definitions messages descriptions data exchanged port types collections operations 
concrete protocol data format specifications particular port type constitute reusable binding 
port defined associating network address reusable binding collection ports defines service 
uddi universal description discovery integration definition set services supporting description discovery businesses organizations web services providers web services available technical interfaces may access services :10.1.1.37.8441
simply put uddi build yellow pages web services 
point time consensus soap uddi wsdl 
assume standards place remainder 
web services composition languages build directly top wsdl 
language bpel ws provides uses wsdl services 
note wsdl service composed ports provide operations 
operation receives message way receives sends message request response sends receives message solicit response sends message notification 
wsdl services corresponding operations glued provide composed services 
glue services process model needed specify order operations executed 
web services composition language provides means specify process model 
important difference wsdl language bpel ws revealed considering states 
wsdl essence stateless language aware states operations 
state notion supported state sending receiving message request response solicit response operation 
technology supporting web services composition language record states processes complex simple request response 
recording state possible determine done enabling long lived business transactions 
triggered development languages bpel ws wsfl xlang wsci bpml 
overview called standards released bpel ws specification builds ibm wsfl web services flow language microsoft xlang web services business process design 
xlang block structured language basic control flow structures sequence switch conditional routing looping parallel routing pick race conditions timing external triggers 
contrast xlang wsfl limited block structures allows directed graphs 
graphs nested need acyclic 
iteration supported exit conditions activity subprocess iterated exit condition met 
control flow part wsfl identical workflow language ibm mq series workflow 
may surprising fact workflow language different languages 
example called death path elimination allows called synchronizing merge pattern 
way routing restricted explicit joins xor joins workflow products 
nice feature quite exotic supported systems 
correspondence wsfl standard ibm workflow product may surprising people involved standardization process correspondence wsfl mq series workflow easily explained fact languages defined set people notably frank leymann 
similar comments xlang microsoft biztalk 
xlang completely current middleware solution microsoft hardly qualifies standard 
unfortunately bpel ws wsfl xlang standards proposed years 
sun bea sap introduced candidate web services composition wsci web service choreography interface 
initiated business process management initiative bpmi org developed bpml business process markup language 
oasis un support ebxml electronic business extensible markup language 
part ebxml business process schema specification standard having similar scope bpel ws wsfl xlang wsci bpml 
abundance overlapping standards web services composition overwhelming 
authors refer competing standards clear added value web services acronym hell 
outside web services domain initiatives standardize specification executable business processes 
notable initiative workflow management coalition wfmc 
wfmc active standardize workflow process definition language interfaces various workflow components 
august wfmc released xpdl xml process language version beta support exchange workflow specifications different workflow products 
jon wfmc chair cto staffware xpdl consistent bpel ws goes far standards web services composition 
clearly people working standards web services composition benefit experiences workflow domain 
comments done justified 
clear standards wfmc adopted workflow vendors 
systems export xpdl import xpdl system produce meaningful results 
reasons working workflow standards decade consensus workflow constructs need supported semantics 
remarkable different interpretations join construct exist contemporary workflow languages wait join wait reset xor join wait block arrived wait come comparing bpel ws xlang wsfl xpdl wfm products development respect web services composition languages mainly driven software vendors ibm microsoft sun bea sap 
resulted abundance standards having overlapping functionality 
looking standards detail clear existing products 
example wsfl copy ibm flowmark mq series workflow language 
standards involve multiple software vendors compromise competing viewpoints 
result standards tend imprecise unnecessarily complex 
wfmc xpdl example standard imprecise allowing vendors interpretation standard making standard useless 
bpel ws joins viewpoints wsfl xlang making language complex 
observations useful look objective measures comparing web services composition languages 
control flow aspect languages results workflow research 
way compare standards bpel ws xlang wsfl set workflow patterns available www tm tue nl research patterns 
patterns corresponds routing construct required designing workflow 
set patterns evaluate compare workflow management systems 
table comparison bpel ws xlang wsfl xpdl workflow products 
pattern sequence pattern parallel split pattern synchronization pattern exclusive choice pattern simple merge pattern multi choice pattern synchronizing merge pattern multi merge pattern discriminator pattern arbitrary cycles bpel ws xlang wsfl xpdl staffware mq series workflow flower pattern implicit termination pattern multiple instances synchronization pattern multiple instances priori design time knowledge pattern multiple instances priori runtime knowledge pattern multiple instances priori runtime knowledge pattern deferred choice pattern interleaved parallel routing pattern milestone pattern cancel activity pattern cancel case table shows comparison web services composition languages xpdl concrete workflow management systems 
patterns correspond basic routing constructs sequence find language 
patterns refer advanced constructs supported standards products 
refers direct support construct language directly supports pattern 
table refers direct support 
note mean possible realize pattern workaround 
constructs realized standard programming language 
imply direct support workflow patterns 
feature partially supports pattern construct imposes certain restrictions structure process support rated 
going details observations 
bpel ws combination xlang wsfl comes supporting patterns 
second wsfl mq series workflow identical comes process specification 
third appears xpdl expressive bpel ws 
way xpdl seen greatest common denominator existing workflow languages common multiple 
relevant differences web services compositions languages workflow management systems comes supporting routing constructs 
note workflow management systems listed flower block structured xlang 
systems staffware mq series graph wsfl xpdl 
lessons learned site bpmi org organizations proposing web services composition standard states bpmi org defines open specifications business process modeling language bpml business process query language bpql enable standards management business processes forthcoming business process management systems way sql enabled standards management business data shelf database management systems dbms goal obtain standards similar sql web services ambitious 
history shows standards originate vendors pushing products 
recall entity relationship model chen relational model codd enabled languages sql 
established process modeling techniques combining expressiveness simplicity formal semantics cf 
petri nets process algebras software industry chosen ignore techniques 
result world confronted standards mainly driven concrete products commercial interests 
way ignore standardization proposals established process modeling techniques 
force vendors address real problems creating new ones 

van der aalst van hee 
workflow management models methods systems 
mit press cambridge ma 

van der aalst ter hofstede kiepuszewski barros 
workflow patterns 
qut technical report fit tr queensland university technology brisbane 
appear distributed parallel databases see www tm tue nl research patterns 

van der aalst dumas ter hofstede 
pattern analysis bpml wsci 
qut technical report fit tr queensland university technology brisbane 

curbera goland klein leymann roller thatte weerawarana thatte 
business process execution language web services version 
ibm july 

leymann 
web services flow language wsfl 
ibm may 

thatte 
xlang web services business process design 
microsoft 

workflow managment coalition 
workflow process definition interface xml process definition language xpdl wfmc tc version beta 

van der aalst dumas ter hofstede 
pattern analysis bpel ws 
qut technical report fit tr queensland university technology brisbane 
