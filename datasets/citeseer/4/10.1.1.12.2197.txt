betting boolean style framework trading securities logical formulas lance fortnow joe kilian nec laboratories america independence way princeton nj develop framework trading compound securities financial instruments pay contingent outcomes arbitrary statements propositional logic 
buying selling securities thought betting particular outcome allows agents hedge risk profit expectation subjective predictions 
compound securities market allows agents place bets arbitrary boolean combinations events enabling closely achieve optimal risk exposure enabling market closely achieve social optimum 
tradeoff allowing expressivity complexity agents auctioneer optimization problems 
develop motivate concept compound securities market presenting framework series formal definitions examples 
analyze detail auctioneer matching problem 
show events matching problem np complete divisible case complete indivisible case 
show hardness result holds severe language restrictions bids 
log events problem polynomial divisible case np complete indivisible case 
briefly discuss matching algorithms tractable special cases 
categories subject descriptors theory computation analysis algorithms problem complexity algorithms problems computer applications social behav keeping computer science theory tradition authors listed alphabetically 
tradition artificial intelligence second authors listed magnitude contribution 
conducted nec laboratories america princeton nj 
permission digital hard copies part personal classroom granted fee provided copies distributed profit advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
electronic commerce san diego california usa copyright acm xxxxx xx xx xx 
david pennock services rd floor pasadena ave pasadena ca sciences economics general terms algorithms economics theory 
keywords michael wellman university michigan ai laboratory beal avenue ann arbor mi compound securities markets computational complexity matching combinatorial betting trading financial instruments logical formulas risk allocation information aggregation hedging speculating betting gambling 

securities markets effectively allow traders place bets outcomes uncertain propositions 
examples include stock markets nasdaq options markets futures markets cme derivatives markets insurance markets political stock markets sports betting markets horse racing markets idea futures markets decision markets market games 
economic value securities markets fold 
allow traders hedge risk insure undesirable outcomes 
example owner stock put option right sell stock particular price order insure 
owner house may purchase insurance contract hedge unforeseen damage house 
second securities markets allow traders speculate obtain subjective expected profit market prices reflect assessment likelihood outcomes 
example trader buy likelihood high price underlying stock go regardless risk exposure changes stock price 
traders stand earn profit effective probability assessments prices financial markets yield accurate aggregate forecasts events 
real securities markets complex payoff structures various triggers 
modeled collections basic atomic arrow debreu securities 
unit arrow debreu security pays dollar iff binary event occurs pays event occur 
example unit security denoted acme pay stock january 
acme stock option defined cial exchange portfolio atomic securities 
develop analyze framework trading compound securities markets payoffs contingent arbitrary logical combinations events including conditionals 
example binary events bid buy units security denoted pays iff compound event occurs cents 
trader may bid sell units security pays iff occurs cents conditional event occurring meaning transaction revoked occur payoff price security 
bids may divisible meaning bidders willing accept requested quantity indivisible meaning bids fulfilled completely 
set bids auctioneer faces complex matching problem decide bids accepted units price 
typically auctioneer seeks take risk matching agreeable trades bidders consider alternative formulations auctioneer acts market maker willing accept risk 
examine computational complexity auctioneer matching problem 
length description available securities 
events matching problem np complete divisible case complete indivisible case 
complete hardness holds bidding language significantly restricted 
log events problem polynomial divisible case np complete indivisible case 
section presents necessary background information motivation related 
section formally describes framework compound securities defines auctioneer matching problem 
section briefly discusses natural algorithms solving matching problem 
section proves central computational complexity results 
section discusses possibility tractable special cases 
section concludes summary ideas directions 

preliminaries background notation imagine world uncertain events consequence event house struck lightning december denoted struck event acme stock price goes january denoted acme 
world possible states possible combinations binary events outcomes struck acme struck acme struck acme struck acme hedging risk thought action moving money various possible states 
example technically option portfolio infinitely atomic securities approximately modeled finite number 
ing house transfers money states struck true states selling security denoted acme pays acme occurs transfers money states acme price january states 
speculating act transferring money states usually associated maximizing expected return reducing risk 
example betting football team moves money team loses state team wins state 
practice agents engage mixture hedging speculating clear dividing line 
possible outcomes form state space consisting mutually exclusive exhaustive states 
natural way think possible outcomes space linearly independent events may overlap arbitrarily 
toy example struck acme disjoint states struck events 
note set linearly independent events defines state space size consisting possible combinations event outcomes 
conversely state space factored log events 
suppose exhaustively covers meaningful outcomes covers eventualities agents may wish hedge speculate 
existence linearly independent securities called complete market allows agents distribute wealth arbitrarily states 
agent may create hedge speculation desires 
classical conditions agents trading complete market form equilibrium risk allocated pareto optimally 
market incomplete meaning consists fewer linearly independent securities general agents construct arbitrary hedges equilibrium allocations may nonoptimal 
real world settings number meaningful events large number securities required completeness intractable 
truly complete market exists exist 
motivation compound securities markets provide mechanism supports transfer risk number transactions possible 
compound securities allow high degree expressivity constructing bids 
tradeoff increased expressivity increased computational complexity bidder auctioneer point view 
related quest reduce number financial instruments required support pareto optimal allocation risk dates arrow original 
requirement stated linearly independent securities significant reduction straightforward formulation 
economy standard goods straightforward complete market contains securities paying state realization 
arrow showed market securities goods essentially separated securities paying plus spot markets standard goods complete 
purposes need consider linearly independent securities mean vectors payoffs states securities linearly independent 
securities market 
varian shows complete market constructed fewer securities replacing missing securities options 
number linearly independent financial instruments securities plus options guarantee completeness 
requirement financial instruments relaxed wants guarantee completeness circumstances pennock wellman explore conditions smaller securities market may operationally complete meaning equilibrium pareto optimal respect agents involved contains securities :10.1.1.42.8760
authors show cases market structured compacted analogy bayesian network representations joint probability distributions 
show agents risk neutral independencies agree independencies encoded market structure market operationally complete 
collections agents constant absolute risk aversion agreement markov independencies sufficient 
fine ledyard develop mechanism call combined value trading cvt allows traders order arbitrary portfolio securities bid breaking order sequence bids individual securities 
portfolio order accepted implied trades individual securities executed simultaneously eliminating called execution prices change middle planned sequence orders 
authors conduct laboratory experiments showing thin sequential trading breaks cvt supports efficient pricing allocation 
note cvt differs significantly compound securities trading 
cvt allows instantaneous trading linear combination securities compound securities allow expressive securities encode nonlinear boolean combinations events 
example cvt may allow agent order securities bundle pays linear combination cvt won allow construction compound security pays iff occur compound security related cvt combinatorial auctions exchanges mechanisms received quite economics computer science literatures 
combinatorial auctions allow bidders place distinct values possible bundles goods just individual goods 
way bidders express substitutability complementarity relationships goods expressed standard parallel sequential auctions 
compound securities differ combinatorial auctions concept 
compound securities allow bidders construct arbitrary bet possible compound events expressible logical functions base events conditional compound events 
agents optimize subjective probabilities risk attitude general beliefs agents beliefs utilities ad infinitum 
central auctioneer problem identifying arbitrage opportunities match bets risk 
combinatorial auctions hand specifically unit pays iff occur iff occurs 
low bids bundles goods 
typically uncertainty risk considered 
central auctioneer problem maximize social welfare 
note problems lie different complexity classes 
clearing combinatorial auction polynomial divisible case np complete indivisible case matching compound securities market np complete divisible case complete indivisible case 
fact problem deciding bids compound securities match divisible case np complete see section 
sense possible translate matching problem compound securities analogous problem clearing sided combinatorial exchanges exponential size 
specifically regard payoff particular state compound securities viewed bundles fractional quantities goods 
material balance constraint facing combinatorial auctioneer corresponds restriction auctioneer disallowed assuming risk 
note translation useful addressing compound security matching problem resulting combinatorial exchange exponential number goods 
hanson develops market mechanism called market scoring rule especially suited allowing bets combinatorial number outcomes 
mechanism maintains joint probability distribution states explicitly implicitly bayesian network compact representation 
time trader believes probabilities wrong change part distribution accepting lottery ticket pays scoring rule logarithmic scoring rule long trader agrees pay person change distribution 
limit single trader mechanism behaves scoring rule suitable polling single agent probability distribution 
limit traders produces combined estimate 
market essentially posted prices possible outcomes mechanism avoids problem thin markets necessarily plagues market containing exponential number alternative investments 
mechanism requires patron pay final person change distribution patron payment bounded 
hanson offers initial suggestions open problems remain including efficient methods representing updating joint distribution recording traders positions portfolios resorting exponential time space algorithms 
fagin halpern megiddo give sound complete axiomatization deciding sets probabilistic inequalities consistent 
bids compound securities thought expressions probabilistic inequalities example bid buy price isa statement probability greater 
set single unit bids correspond set inconsistent probabilistic inequalities match 
interested different framework fagin consider complicating factors specific securities market framework handling multi unit fractional bid quantities identifying matches choosing multiple matches optimizing probabilities risk attitudes 
address issues low 

framework trading com pound securities high level description common knowledge agents set events predefined securities 
agents offer buy sell securities design pay contingent logical combinations events event negations 
combination operators may include conjunctions disjunctions conditionals 
practical purposes impossible agents trade securities market agents devise best tradeoff number complexity bids extent risks hedged desirable bets placed 
general form game theoretic nature agent offer depends believes agents accept 
spectrum simplified version problem optimize bids currently available securities current prices 
formulations possible interesting optimization problems 
approximation algorithms pursued 
auctioneer faces nontrivial problem matching buy sell orders maximize surplus cash securities left accepted bids fulfilled 
example offers sell match offer buy surplus 
offer sell match offer buy surplus cash securities 
general single security qualify multiple matches 
auctioneer find optimal set matches maximizes surplus measured number ways 
approximation algorithms considered 
formulation auctioneer functions market maker willing take certain amount risk 
informally motivation provide mechanism allows high degree expressivity placing hedges bets capable approximating optimal complete market allocation risk trading number complexity securities needed 
formal description securities denote arbitrary boolean formulas logical combinations events denote securities securities pay iff true pay iff false true canceled price paid iff false 
define true event false 
abbreviate orders agents place orders denoted units price unit implies buy order andq implies sell order 
assume agents submitting buy sell orders accept price 
distinguish divisible indivisible orders 
agents submitting divisible orders accept quantity 
agents submitting indivisible orders accept exactly units 
believe nature traded state contingent dollars agents content trade divisible orders 
order translated payoff vector states 
payoff state equals iff zero 
recall states correspond possible combinations event outcomes 
index multiple orders subscripts oi 
set orders set corresponding payoff vectors example 
translating orders payoff vectors suppose 
consider order buy units price 
corresponding payoff vector matching problem auctioneer task called matching problem isto determine orders accept orders fraction order oi accepted auctioneer indivisible case divisible case range 
order oi considered rejected transactions take place concerning order 
accepted orders auctioneer receives money lost bidders pays money won bidders auctioneer payoff vector auc call auctioneer payoff vector surplus vector possibly state contingent money left accepted orders filled 
assume auctioneer wants choose set orders guaranteed lose money state auctioneer necessarily insist obtaining positive benefit transaction auctioneer content break 
definition 
matching problem indivisible case auc 
words exist nonempty subset orders auctioneer accept risk 
auc nonnegative surplus leftover processing match dollars 
min auc 
general processing match leaves dollars cash auc state contingent dollars translated securities 
example 
indivisible order matching suppose 
consider order buy unit price order sell unit price 
corresponding payoff vectors auctioneer payoff vector negative componentwise sum vectors auc components nonnegative orders match 
auctioneer process orders leaving surplus cash unit securities 
consider divisible case order partially filled 
definition 
matching problem divisible case auc example 
divisible order matching suppose 
consider order sell unit price order buy unit price order buy unit price 
corresponding payoff vectors clear inspection non empty subset orders constitutes match cases state sums positive amount negative auctioneer 
thenthe auctioneer payoff vector auc constituting match 
auctioneer process second orders third order leaving surplus units example match exists indivisible match possible examine distinction detail section separate matching problems distinct complexity classes 
matching problems defined decision problems task show existence nonexistence match 
may multiple matches auctioneer choose 
choices equivalent auctioneer perspective alternatively objective function find optimal match objective 
example 
auctioneer alternatives suppose 
consider order sell unit price order sell unit price order buy unit price order buy unit price order buy unit price 
corresponding payoff vectors consider indivisible case 
auctioneer choose accept bids auctioneer choose accept bids 
constitute matches fact yield identical payoffs auc cash auctioneer 
example 
auctioneer alternatives ii suppose 
consider order sell units price order buy unit price order buy unit price 
corresponding payoff vectors consider divisible case 
auctioneer choose accept unit bids yielding payoff auctioneer cash auc 
alternatively auctioneer choose accept units bid unit bids yielding payoff auctioneer units security constitute matches fact accepting number units bid part match depending auctioneer objective choice preferred 
example auctioneer believes occur may prefer accept units bid 
possible criteria auctioneer decide matches reasonable circumstances 
natural quantity maximize volume trade bidders auctioneer utility arbitrage constraint 
definition 
trade maximization problem set indivisible divisible orders choose constraint auc 
reasonable variation maximize total percent orders filled risk free constraint auc 
definition 
auctioneer risk free utility maximization problem auctioneer subjective probability state pr auctioneer utility dollars 
set indivisible divisible orders choose pr auc constraint auc 
definition 
auctioneer standard utility maximization problem auctioneer subjective probability state pr auctioneer utility dollars 
set indivisible divisible orders choose pr auc objective function drops risk free arbitrage constraint 
case auctioneer market maker beliefs likelihood outcomes auctioneer may lose money outcomes 
variations optimization criteria reasonable including social welfare reasonable suppose surplus shared bidders auctioneer retained solely auctioneer 
analogous choosing common transaction price double auction midpoint bid ask prices buyer paying bid price seller receiving ask price difference going auctioneer 
problem complicated dividing surplus securities part valued differently different agents 
formulating reasonable sharing rules examining resulting incentive properties rich promising avenue investigation 

matching algorithms straightforward algorithm solving divisible matching problem linear programming set appropriate linear program section 
straightforward algorithm solving indivisible matching problem integer programming 
events set appropriate linear integer programs simply writing payoff vectors straightforward way requires space 
hope specialized algorithms exploit structure bids perform better terms average case time space complexity 
example cases matches identified logical reduction techniques writing full payoff vectors 
bids sell sell buy identified reducing bids equivalent offer sell clearly matches third bid 
formalizing logical reduction algorithm matching algorithms exploit special structure bids promising avenue 

computational complexity matching section examine computational complexity auctioneer matching problem 
refers problem input size includes descriptions buy sell orders 
assume bounds number base securities 
consider cases parameters 
allow divisible indivisible orders 

number securities 
consider possibilities log yielding polynomial number states 
unlimited number base securities yielding exponential number states 
show results 
theorem 
matching problem 
computable polynomial time log base securities divisible orders 

np complete unlimited securities divisible orders 

np complete log base securities indivisible orders 

complete unlimited securities indivisible orders 
small number securities divisible orders build linear program definition 
variables wehave state constraint auc 
constraints maximize matching exactly 
log bounded solve linear program polynomial time 
note argue maximize linear combination surplus 
approach find matchings zero surplus 
large number securities divisible orders unlimited base securities linear program section exponential number constraint equations 
constraint short describe easily computable 
total number buy sell orders 
theory linear programming upper bound objective function forced collection constraints 
matching exists exist constraints force zero 
nondeterministic polynomial time constraints reduced linear program 
shows matching np 
show np completeness reduce np complete problem boolean formula satisfiability nonexistence matching 
fix formula 
base securities variables consider single security buy order 
formula satisfiable state payoff fractional unit security matching 
formula satisfiable state auctioneer payoff unit security matching 
argue formula satisfiable fully rational buyer want buy cost 
get problem adding auxiliary base securities securities separate buy orders 
satisfiable state corresponding satisfying assignment true auctioneer payoff divisible matching exist 
satisfiable unit matching state false 
small number securities indivisible orders case easily seen np just nondeterministically guess nonempty subset orders check state auc 
bounded polynomial verification polynomial time 
show matching np complete reduce npcomplete problem exact cover sets matching securities 
input consists set collection element subsets input contains exact cover subcollection element occurs exactly member np complete 
suppose instance cm 
set define securities labelled asfollows security true state state ek ci 
security true state security true state ek buy orders security buy order 
claim matching exists 
subcollection covers element exactly 
note claim collection consisting ci matching 
state ek auctioneer payoff 
states auctioneer payoffs 
suppose matching 
consider number matching number matching 
matching requires nonempty subset orders matching 
cases 
payoff 
payoff 
consider set consisting ci matching 
state ek ci 
auctioneer payoff ek 
large number securities indivisible orders second level polynomial time exists polynomial set suchthat 
class contains np np 
polynomial time hierarchy collapses class hierarchy 
considered problem complete contained np np 
show computing matching complete remains quite restricted types securities np np 
may np complete np complete hard practical consequences outside np np 
matching problem np heuristics search verify match exists heuristics fail worst case may succeed examples practice 
similarly matching problem np hope heuristically rule possibility matching 
problems outside np np framework verifying heuristically derived answer correct 
formally np np complete problems lucky complete problems tell lucky 
note existence matching choose subset orders represent ina set orders total nonpositive auctioneer payoff state 
prove stronger theorem implies matching sn set securities security si cost ci pays pi formula ci satisfied 
matching problem asks accepting security guarantee worst case payoff strictly larger total cost 
theorem 
matching problem complete 
furthermore problem remains special cases complete 
ci conjunction base events negations pi cj 
ci conjunction base securities negations 
hardness results hold promise subset securities guarantees worst case payoff identical cost 
prove theorem reduce standard problem call bf 
boolean formula variables xn yn formula true xn yn xn yn 
problem remains complete xn yn restricted conjunctions variables xn yn form bound conjunction size known disjunctive normal form dnf restriction conjunctions variables dnf 
reduce bf finding matching 
simplest reduction consider matching problem set arrow debreu securities payoff events conjunctions base securities negations 
auctioneer option accepting securities 
reduce case payoff events conjunctions arbitrarily base events negations 
standard trick reduce number base events conjunction slight twist ensure securities price payoff 
show problem remains hard conjunctions variables allowed securities deviate slightly arrow debreu securities may varying non unit payoffs 
basic reduction describing securities give intuition 
may viewed game selector adversary 
sets xi variables adversary sets yi variables formula 
matching problem auctioneer buyer buys securities corresponding disjunctions base events adversary sets values base events minimize payoff securities 
construct securities optimal buying strategy buy expensive securities set cheap securities negligible cost cases modify construction securities cost 
total cost securities just security pays adversary ensure securities pays 
expensive security forces adversary set variable xi particular value prevent corresponds setting xi variables original game 
cheap securities preventing securities paying equivalent falsifying original game 
technical difficulties face prevent buyer buying conflicting securities forces xi forces xi allowing 
secondly analysis need ensure trader spend get say spending securities property securities pay possible events 
variables xi yi base security labels 
existential variable xi add additional base securities ni zi 
base security basic construction expensive security costs cheap security costs require cn cheap securities andc 
buy expensive securities ofthe cheap securities buy expensive securities 
times refer security payoff clause 
may loosely think 
allow buy security pays worst case 
making hard distinguish portfolios guarantee positive profit risk positive loss 
setting allow show hardness results case securities cost 
payoff clauses xi ni securities payoff clauses xi zi ni zi 
clause negated variable xi ni add conjunction zn 
fora clause security sc payoff clause zn 
cheap security payoff clause 
argue matching exists iff xn yn xn yn 
successively constraining buyer adversary eliminating behaviors cause player win 
resulting reasonable strategies correspond exactly game version bf 
observe adversary sets base securities false pay 
buyer buy expensive securities guarantee profit 
problem buy expensive securities cheap securities setting base events security pay 
clearly adversary hold security pay 
claim auctioneer buy xi ni securities 
follow fact adversary sets xi ni zi false base event true xi ni securities pay 
auctioneer buy expensive securities buy exactly xi ni rest analysis assume auctioneer follows constraint 
suppose buyer buys xi 
adversary set xi true set true security pay 
set zi true xi zi pay 
buyer doesn buy ni bythe constraint securities pay ni false assume loss generality adversary sets ni false 
similarly buyer buys ni adversary set ni zi true assume loss generality adversary sets xi false 
note adversary event true 
summarizing preceding argument exact correspondence rational strategies buyer settings xi variables forced adversary 
furthermore adversary constrained set variables zn true loss generality may assumed set ni xi 
constraints securities corresponding clauses guaranteed pay 
adversary decides value ym base events 
recall clause corresponding security sc 
true ni xi loss generality follows construction sc setting pay iff satisfies establishes reduction bf matching problem securities constrained conjunction polynomially base events negations 
reducing variable conjunctions standard methods reducing dnf formulae dnf formulae trivially modifiable securities framework include reduction completeness 
security payoff clause vk variable negations irrelevant discussion cost payoff introduce new auxiliary variable replace security securities payoff clauses vk 
securities payoff positive values sum securities pay time 
security bought adversary set won pay auctioneer buy total cost allowed buy shares security 
may verified ability set arbitrarily adversary cause unsatisfied iff cause unsatisfied 
owning share equivalent owning share note variables variables 
applying transformation successively obtains equivalent set securities polynomial size clauses variables 
note basic construction clauses variables associated cheap securities cost 
subdividing costs simply resulting securities cost constraints reflect new larger number cheap securities 
ensure payoff clauses exactly variables construction 
security cost defining clause securities cost payoff defining clauses new auxiliary variable 
essentially analysis applies case 
case single variable payoff clauses handled applications technique 
reducing equi cost securities setting appropriately ensure basic reduction security costs polynomially bounded integer multiple call 
show reduce case case security costs 
recall expensive securities payoff clauses xi ni 
assume security payoff clause xi case handled identically 
replace security clause xi wr auxiliary variables fresh variables chosen clause sr payoff clauses wr wr wr 
clearly buying new securities equivalent buying original security 
show buying new securities equivalent buying original security buying proper nonempty subset securities irrational 
note buyer buys securities sr adversary set true securities pay 
see note wi set false wi wi true wi set false setting false forces adversary set wr false causing final clause true 
having set true adversary set wr false ensuring securities sr pays 
wi true xi xi 
buying replacement securities equivalent buying original security remains show buying proper nonempty subset securities irrational 
doesn buy adversary set variables sr pay money spent securities wasted 
doesn buy sr set variables false new clauses pay regardless value xi similarly doesn buy si adversary set wi true variables false payoff regardless value xi buying proper subset securities increase ones payoff 
note reduction combined trivially reduction ensures defining clauses fewer variables 
slightly argument defining clauses set exactly variables 
reducing clauses variables allow securities variable payoffs prices reduce case security payoff clause conjunction variables negations 
security payoff clause cost payoff introduce fresh auxiliary variables new variables clause replace securities securities respective payoff clauses 
securities payoff tiny positive quantity described 
simple case analysis 
observations 
securities pays 

setting securities pay 

false securities pay 

setting true cause exactly securities pay 
observation point buying nonempty proper subset securities adversary ensure bought securities pay securities pay sufficient cost buying single security 
observation buys securities guaranteed back ones investment case observations adversaries optimal strategy exactly true 
set cn cheap securities clauses 
accumulated losses spell difference making guaranteed profit making profit 
note making positive prevent existence break buying strategies buyer purchases securities 
summarizing previous argument may assume loss generality buys securities clauses clause adversary sets exactly clause auxiliary variables true 
rest discussion assume players follow constraints 
claim rational buyer buy 
doesn buy adversary true false pay regardless adversary sets point buying doesn buy 
applying argument establishes 
clearly buying negligible factors price payoff behavior buying argue subject constraints put players behaviors buying price payoff behavior ignoring factors buying regardless adversary sets cases cost adversary true pays assuming exactly true exactly pay 
false doesn pay adversary set true false ensuring pays 
argument holds false 

tractable cases logical question ask light complexity results severe restrictions space securities enable tractable matching algorithms 
systematically explored possibilities potential useful tractable cases certainly exists 
suppose example bids limited unit quantities securities forms 
disjunctions positive events ak 
single negative events price offered disjunction ak qi maximal price offered respective negated disjuncts 
disjunction bid part match iff qi evaluating condition satisfied bids quite straightforward 
example contrived application entirely implausible 
example disjunctions may correspond insurance customers want insurance contract cover potential causes asset loss 
atomic securities sold specialize different form disaster cause 

directions analyzed computational complexity matching securities logical formulas 
possible avenues exist including 
analyzing agents optimization problem choose quantities bid ask prices securities maximizes expected utility linear nonlinear utility functions 
choose securities deciding collection boolean formulas offer trade 
choices game theoretically sound way account choices traders reasoning traders 
matching intractable heuristics achieve matches cases approximate matching 

exploring sharing rules dividing surplus incentive properties resulting mechanisms 

may consider market computational equilibrium computationally bounded player find increases utility 
exceptions little known computational 
natural question determine market achieve computational equilibrium true equilibrium circumstances may occur 
acknowledgments rahul sami help section 
rahul joan feigenbaum robin hanson useful discussions 

kenneth arrow 
role securities optimal allocation risk bearing 
review economic studies 
peter leslie fine john ledyard 
inducing liquidity thin financial markets combined value trading mechanisms 
european economic review 
paul brewer 
decentralized computation procurement computational robustness smart market 
economic theory 
kay chen leslie fine bernardo huberman 
forecasting uncertain events small groups 
third acm conference electronic commerce ec pages 
bruno de finetti 
theory probability critical introductory treatment volume wiley new york 
sven de vries rakesh vohra 
combinatorial auctions survey 
informs computing 
sandip david pennock lee giles steve lawrence 
information incorporation online game sports betting markets 
fourth acm conference electronic commerce ec 
jacques 
market allocation uncertainty 
essays economic decisions uncertainty pages 
cambridge university press 
ronald fagin joseph halpern nimrod megiddo 
logic reasoning probabilities 
information computation 
robert forsythe russell 
information aggregation experimental market 
econometrica 
robert forsythe forrest nelson george neumann jack wright 
anatomy experimental political stock market 
american economic review 
robert forsythe thomas thomas ross 
wishes expectations actions survey price formation election stock markets 
journal economic behavior organization 
john william dare craig brown richard 
informed traders price variations betting market professional basketball games 
journal finance 
robin hanson 
decision markets 
ieee intelligent systems 
robin hanson 
combinatorial information market design 
information systems frontiers 
robin hanson 
gambling save science 
encouraging honest consensus 
social epistemology 
jens carsten mark rubinstein 
recovering probability distributions options prices 
journal finance 
joseph kadane robert winkler 
separating probability elicitation utilities 
journal american statistical association 
michael magill 
theory incomplete markets vol 

mit press 
mas colell michael whinston jerry green 
microeconomic theory 
oxford university press new york 
noam nisan 
bidding allocation combinatorial auctions 
second acm conference electronic commerce ec pages 
noam nisan amir ronen 
computationally feasible vcg mechanisms 
second acm conference electronic commerce ec pages 
pearl 
probabilistic reasoning intelligent systems 
morgan kaufmann 
david pennock steve lawrence finn nielsen 
real artificial markets 
science february 
david pennock steve lawrence finn nielsen lee giles 
extracting collective probabilistic forecasts web games 
seventh international data mining pages 
david pennock michael wellman :10.1.1.42.8760
compact securities markets pareto optimal reallocation risk 
sixteenth conference uncertainty artificial intelligence pages 
wit yang 
betting markets information aggregation devices experimental results 
technical report social science working california institute technology april 
charles 
markets information gathering tools 
southern economic journal 
charles sunder 
rational expectations aggregation diverse information laboratory security markets 
econometrica 
roll 
orange juice weather 
american economic review 
tuomas sandholm subhash suri andrew david levine 
winner determination combinatorial auction generalizations 
international joint conference autonomous agents multiagent systems aamas july 
carsten schmidt axel 
accurate markets predict outcome event 
euro soccer experiment 
technical report max planck institute research economic systems 
richard thaler william 
anomalies betting markets lotteries 
journal economic perspectives 
hal varian 
arbitrage principle financial economics 
economic perspectives 
robert winkler allan murphy 
probability assessors 
applied meteorology 
