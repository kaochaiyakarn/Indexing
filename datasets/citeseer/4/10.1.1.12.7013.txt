computation 
essays honor wolfgang bibel pp 
kluwer kreitz otten schmitt matrix constructive theorem proving 
formal methods program verification optimization synthesis rely complex mathematical proofs involve reasoning computations 
single automated proof procedure handle reasoning problems occurring program derivation verification 
usually relies proof assistants nuprl constable coq dowek alf altenkirch expressive logical calculi support interactive tactic controlled proof program development 
proof assistants suffer low degree automation inferences eventually sequent natural deduction rules 
proof parts rely entirely predicate logic seldomly automatically complete proof search procedures embedded systems 
desirable extend reasoning power proof assistants integrating understood techniques automated theorem proving 
matrix proof search procedures bibel bibel understood compact representations tableaux sequent proof techniques 
avoid usual redundancies contained calculi driven complementary connections pairs atomic formulae may leaves sequent proof logical connectives proof goal 
originally developed classical logic connection method extended variety non classical logics intuitionistic logic otten kreitz modal logics kreitz otten fragments linear logic kreitz mantel kreitz 
furthermore algorithms converting matrix proofs sequent proofs developed schmitt kreitz schmitt kreitz possible view matrix proofs plans predicate logic proofs executed proof assistant bibel kreitz 
viewing matrix proofs proof plans suggests integration additional proof planning techniques connection method 
rewrite techniques rippling bundy instance successfully proof planners inductive theorem proving relatively weak far predicate logic reasoning concerned 
extension kreitz demonstrated rippling techniques logical proof search combined successfully constructive theorem proving synthesis inductive programs 
coherent account matrix methods constructive theorem proving show extend integrating rippling techniques unification process 
non clausal extension bibel original connection method section 
adapt constructive logic section 
section 
describes conversion matrix proofs sequent proofs 
section 
discuss integration rippling techniques matrix methods 
conclude discussion possible applications program synthesis verification 

connection method non clausal form connection method bibel bibel originally designed proof search method formulas clause normal form 
normalization formulas costly non classical logics normal forms necessary develop connection methods formulas non clausal form 
bibel bibel describes non clausal version connection method 
version general 
wallen matrix characterizations logical validity wallen easily adapted variety logics 
matrix proofs viewed compact representations analytic tableaux notions tableaux calculi carry matrix methods 
main difference tableaux proofs rules decompose formula generate subformulae eventually close proof branches matrix methods operate directly formula tree search connections pairs identical literals different polarities close branch tableaux proof 
section introduce basic concepts matrix methods characterize logical validity terms concepts develop proof procedure basis matrix characterization 
formula tree representation formula syntax tree 
node corresponds exactly subformula marked unique name position 
label position denotes major connective formula atomic 
case called atomic position atom identified label 
tree ordering partial ordering positions formula tree root smallest position respect tree ordering 
position formula tree associated polarity principal type 
polarity position determined label polarity parent 
root position polarity 
principal type position determined polarity label 
atomic positions principal type 
polarities types positions defined table 
example position labelled polarity principal type successor positions polarity respectively 
formula denote sets positions principal type successor polarity principal type successor polarity principal type principal type successor polarity successor polarity quantifier multiplicity briefly encodes number distinct instances subformulas need considered proof search 
denote indexed formula formula multiplicity 
consider multiple instances subformulas multiplicity corresponding position formula tree extend tree ordering accordingly 
technical reasons substitute variables atomic formulas corresponding quantifier positions positions 
shows formula tree marked polarities principal types multiplicity formula multiplicity subformula 
formula tree matrix representation formula dimensional representation atomic formulas connectives quantifiers better suited illustration purposes 
matrix representation related positions appear side side related positions appear top positions related related denoted iff greatest common ancestor tree ordering principal type 
related related set positions matrix representation 
matrix formula matrix characterizations logical validity bibel bibel wallen kreitz depend concepts paths connections complementarity 
path formula maximal set mutually related atomic positions formula tree 
visualized maximal horizontal line matrix representation connection pair atomic positions labelled predicate symbol different polarities 
connection complementary atomic formulas unifiable admissible substitution 
precise definition complementarity depends logic consideration 
classical logic need consider quantifier order substitutions 
order substitution briefly mapping positions type terms induces relation way occurring relation expresses condition sequent calculus introduced assigned variables tree ordering relation determines reduction ordering definition complementarity classical logic oder substitution admissible respect iff induced reduction ordering irreflexive 
connection complementary iff label label paths matrices correspond branches tableaux proofs complementary connections closing branches formula valid path contains complementary connection 
theorem matrix characterization classical logic bibel formula classically valid iff multiplicity admissible substitution set complementary connections path contains connection set 
example matrix paths containing connections connections complementary order positions occur induced reduction ordering tree ordering irreflexive 
admissible valid 
characterization validity formula proven showing paths matrix representation contain complementary connection 
obviously efficient check possible paths complementary connections 
path checking algorithm driven connections complementary connection identified paths containing connection eliminated consideration 
technique similar bibel connection method classical logic bibel algorithm general useful proof search various non classical logics 
key notions path checking algorithm active paths active subgoals open goals 
active path specifies paths currently investigated complementarity 
paths contain element active subgoal proven contain complementary connection 
paths contain element open goal tested complementarity 
proven complementary paths containing active path complementary 
algorithm recursively check paths containing empty active path complementary 
denote set atomic positions formula subpath necessarily maximal set mutually related atomic positions 
subpath path iff subgoal set mutually related atomic positions 
proof search certain tuples consisting non complementary subpath subgoal called active goals 
active path active subgoal 
open goal respect active goal set atomic positions example sets subpaths formula subgoals 
open goal active active goals 
set goal empty set open goal call active goal provable respect formula iff open goal paths complementary 
definition leads algorithmic characterization validity 
theorem formula valid iff multiplicity admissible substitution active goal provable 
characterization holds uniformly variety logics leads general path checking algorithm coupled appropriate definition complementarity proof search procedure logics 
path checking algorithm implicitly described theorem gives sufficient necessary conditions provability 
prove initialize connections provable check connections unify check provable provable letrec letrec letrec may fail check connections check extension letrec may fail check connections check extension 
check extension provable prove prove theorem uniform path checking algorithm active goal active goal provable iff 
open goal empty open subgoal 
complementary connection active goal provable goal provable 
active describes simple uniform path checking algorithm theorems 
function provable checks provability active goal computed substitution returns new substitution succeeds fails 
denotes failure catching 
variable describes positions may extend active path 
empty provable succeeds theorem 
provable recursively checks possible values theorem 
function prove iterates multiplicity computes possible connections checks provability theorem 
initialized multiplicity 
path checking algorithm parameterized functions express specific properties logic consideration 
determines initial value substitution multiplicity tries compute substitution unifies unify check tends leads acyclic reduction ordering ex classical logic initialize computes pair unify check computes general term unifier label label induced reduction ordering returns irreflexive fails atoms unified 
stepwise increase multiplicity path checking mechanism described obviously efficient able decide order formula invalid 
efficient implementation multiplicity suitable position determined dynamically path checking process 
techniques theorem provers usual connection method applied 

proving theorems constructive logic program synthesis verification relies constructive arguments systems automated program development supported proof search procedures intuitionistic logic 
independently philosophical differences classical intuitionistic logic main distinction logics expressed different treatment classical sequent calculus quantifier rules affected condition permutable intuitionistic sequent calculus addition rules dealing succedent permutable 
matrix method intuitionistic logic check connected atomic formulae unified reached applying sequence sequent rules 
form leaf sequent proof 
matrix characterization reflected additional intuitionistic substitution prefixes connected positions identical prefix position string consisting variables constants essentially describes location formula tree 
purpose positions labelled atoms receive additional intuitionistic type table 
intuitionistic type atomic successor polarity intuitionistic type atomic successor polarity positions type correspond application non permutable sequent rules constants prefix string positions variables 
possible unification determine positions reduced position valid sequent proof develop matrix characterization intuitionistic validity formulation identical classical logic 
prefix pre atomic position string elements sets positions dominate formula tree 
intuitionistic substitution mapping positions type possibly empty strings induces relation way characters occurring definition complementarity intuitionistic logic combined substitution consisting order substitution intuitionistic substitution 
admissible iff induced reduction ordering irreflexive pre pre holds occuring 
connection complementary iff label label pre pre intuitionistic sequent calculus formulas type copied 
intuitionistic multiplicity encodes number distinct instances subformulas need considered proof search 
combined quantifier multiplicity leads indexed formula theorem matrix characterization intuitionistic logic wallen formula intuitionistically valid iff multiplicity admissible combined substitution set complementary connections path contains connection set 
example consider formula set positions set positions positions indicated capital letters 
denotes empty string 
connections show classical validity example pre pre pre pre pre pre pre pre pre pre pre prefixes connections unified terms unified 
combined substitution admissible induced reduction ordering irreflexive 
intuitionistically valid 
theorems hold accordingly intuitionistic definitions complementarity multiplicity 
path checking algorithm intuitionistic logic 
provide logic specific check 
intuitionistic logic computes pair combined substitution function computes general term unify check unifier label label general prefix unifier pre pre returns admissible fails unifications fails 
compute intuitionistic substitution apply specialized string unification algorithm otten kreitz 
string unification general quite complicated prefixes restricted class strings 
prefixes strings duplicates 
prefixes corresponding atoms formula equal symbols occur common substring restrictions enable efficient algorithm computing minimal set general unifiers 
unification algorithm series transformation rules repeatedly applied singleton set prefix equations empty substitution procedure stops empty returns resulting substitution general unifier 
transformation rules applied nondeterministically set general unifiers consists results successfully finished transformations 
unification algorithm parameterized set transformation rules order adaptable variety logics 
intuitionistic prefix unification peculiarities logic expressed set transformation rules see otten kreitz 
rules enable compute single general unifier linear time 
furthermore parallel application rules set prefix equations allows decide quadratic time general unifier 

reconstructing sequent proofs matrix proofs matrix methods efficient proving validity formula directly sequent natural deduction proof assistants 
principle possible embed connection method trusted external refiner technique supported upcoming release nuprl proof development system constable matrix proof establish truth formula 
formula part program derivation able extract piece code proof proofs program paradigm bates constable essentially providing constructive sequent proof 
order integrate matrix methods proof assistants necessary reconstruct sequent proof matrix proof 
matrix proofs compact representations sequent proofs converting matrix methods sequent proofs means re introducing redundancies avoided proof search 
obviously conversion performed additional search reconstructing sequent proof difficult finding proof place 
conversion algorithm describe section complements matrix proof procedures 
equally uniform design consults tables data represent peculiarities various classical nonclassical logics respect matrix sequent calculi 
basically traverses formula tree formula order respects induced reduction ordering generated proof search 
selects appropriate sequent rule visited node instantiates quantifiers substitution completely encode non sequent rules add wait labels dynamically conversion process 
labels prevent non invertible sequent rules applied early means proof relevant formulae deleted prematurely 
nodes cause sequent proof branch reduction ordering divided appropriately certain redundancies wait labels need eliminated order ensure completeness 
explain method small example 
consider formula matrix proof represented reduction ordering consists formula tree straight arrows induced relation curved arrows connections atoms curved lines 
reducing position reduction ordering split conversion continues separately 
guarantee completeness operation split splits reduction ordering removes positions arrows longer relevant corresponding branch sequent proof 
result splitting process shown right hand diagram 
proof reconstruction process traverses formula tree follows 
select position set open positions blocked arrow 
select sequent rule polarity label necessary instantiate variable 
mark visited remove add immediate successor position rule applied ax 
ax 
sequent proof corresponding traversal steps traversal process resulting sequent proof depicted 
note starting traversal prevented blocking arrows choice lead partial deletes sequent proof completed 
reducing applying relevant formula position 
reason conversion algorithm adds wait labels dynamically avoids deadlock traversal 
technical details conversion procedure efficient elimination redundancies splits quite subtle 
extensive discussion algorithmic description schmitt kreitz schmitt kreitz 

integrating induction techniques procedure converting matrix proofs sequent proofs suggests viewing connection method proof planner order logic extend reasoning capabilities proof assistants fully automated proof procedures 
formal reasoning programs requires inductive arguments methodology applied integrate techniques inductive theorem proving 
annotated rewrite technique called rippling bundy successfully plan reasoning steps induction hypothesis induction 
technique shows certain weaknesses dealing program synthesis inductive proofs case existentially quantified variables need instantiated 
fact program derivations require order inductive proof methods applied simultaneously techniques strong solve problem independently 
example formula specifies algorithm computing integer square root natural number top proof formula proceed induction lead subgoals base case induction solved standard arithmetical reasoning zero single rippling sequence able rewrite step case induction hypothesis choice strongly depends properties hypothesis 
order conjunct valid 
order satisfy second conjunct 
rippling able rewrite hypothesis cases requires logical inferences create case analysis instantiate existentially quantified variable 
hand logical proof methods able detect case distinction prove non trivial lemmata case second 
course easy prove step case induction provides crucial lemmata case analysis abbreviation matrix proof multiplicity shows 
guidance techniques try rewrite subformulae corresponding subformulae hypothesis search thousands lemmata arithmetics find ones complete proof proof procedure far efficient 
necessary combine logical proof search techniques controlled rewrite techniques rippling order improve degree automation reasoning inductively program specifications 
step direction kreitz shown combination rippling reverse rippling simple order techniques generate case analysis solve synthesis problems automatically 
approach decomposes induction hypothesis logical rules uses sinks wave fronts identify corresponding subformulae applies forward rippling rules rewrite components hypothesis uses reverse rippling matching find substitution rippling sequence connects result rippling performs consistency check merge individual substitutions conditional substitution 
search rippling sequence rippling distance strategy introduced bibel 
resulting rippling proof case analysis translated back sequent proof executed nuprl proof development system constable 
weakness approach lies sequent logical proof search suggests integration techniques matrix theorem prover 
essentially lead compact matrix characterization validity reductions search space inductive theorem proving 
outline fundamental steps combination rippling matrix theorem proving 
techniques described kreitz enable generate conditional substitutions solution synthesis problem 
conditions generated process lead case analysis step top sequent proof resulting subgoals proven conventional proof techniques 
justification approach comes observation formula valid set logical constraints 
formulae logically valid 
observation proven cut rule basis modified characterization theorem 
theorem formula intuitionistically valid iff set constraints 
valid multiplicity admissible combined substitution set complementary connections path contains connection comes observation pair connected atomic formulae necessarily equal substitution complementary connections correspond leaves sequent proof require negative atom occur left side sequent implies implication general logical implication proven standard decision procedures rewriting reasonable extension notion complementarity consider directed connections require imply respect theory denoted definition directed connection combined substitution pre pre label label label label complementary respect theory basing proof procedure definition characterization theorem enables prove inductive specification theorems existential quantifiers having provide domain lemmata case splits 
extend usual term unification process rippling reasoning techniques guarantee complementarity conditions satisfied extended unification succeeds 
efficiency improvement proof search comes observation sinks wave fronts establish strong relation individual subformulae induction hypothesis 
help identify connections relevant proof investigated path checking algorithm 
reduce search space particularly helpful searching connections involving rippling 
conclude section small example shows advantages extensions discussed 
example consider example unfolding tion reads matrix variables quantifiers denoted capital letters 
connections run atoms induction hypothesis corresponding axioms matrix contains useful connec tions constants connections unified rippling techniques described kreitz show complementarity 
case eventually leads substitution instantiated second connection describe valid implication easily checked arithmetical decision procedures add open goal prerequisite opposite polarity matrix established validity sequent condition 
complete proof try establish validity sequent negated condition connecting condition get connection arith valid implication 
theorem shown intuitionistic validity sequent 
technical point view proof synthesized case distinction added matrix increased multiplicity illustrated indexed matrix 
substitution indicated connections complementary theory arithmetic span indexed matrix conventional way 

coherent account matrix constructive theorem proving combines proof search procedures order intuitionistic logic induction techniques 
proving validity formulae combined method guide development proofs programs interactively controlled proof assistants 
enables greatly increase degree automation systems having sacrifice elegance expressiveness underlying logics interactive capabilities 
matrix methods central inference engine verification synthesis optimization programs 
key concept view matrix proof methods proof planners underlie typical limitations sequent natural deduction calculi searching solution problem 
derivation called trusted refiner mechanism generates proof plan executed proof assistant 
obviously concept restricted order inductive theorem proving 
similar way integrate proof procedures important logics modal logics kreitz otten linear logic kreitz higher level strategies program synthesis kreitz kreitz 
cases rely known successful techniques originally implemented independently view results plans actual derivation 
executing plan proof assistant nuprl coq alf eventually gain amount trust needed development reliable applications 
strengthen integration proof planning techniques matrix theorem proving investigate extent general planning search techniques generate proof plans explicitly 
intend embed known synthesis verification optimization techniques proof assistants methodology 
ultimate goal combine experience reasoning group communication systems kreitz techniques highly automated proof environment development systems 
christoph kreitz department computer science cornell university ithaca ny kreitz cs cornell edu jens otten stephan schmitt fb informatik darmstadt university technology darmstadt germany informatik tu darmstadt de brigitte department computer science carnegie mellon university pittsburgh pa bp cs cmu edu notes 
methodology inspired admissibility condition order substitutions definition determines positions reduced certain positions order satisfy condition 

concept resembles theory connections discussed bibel extended unary ary connections theory altenkirch nordstr von 

user guide alf 
university teborg 
bates constable 

proofs programs 
acm transactions programming languages systems 
bibel 

matrices connections 
journal acm 
bibel 

automated theorem proving 
vieweg verlag second edition 
bibel 

der logik 
oldenbourg 
bibel korn kreitz schmitt 

problem oriented applications automated theorem proving 
editors design implementation symbolic computation systems lncs pages 
bibel korn kreitz otten schmitt 

multi level approach program synthesis 
fuchs editor seventh international workshop logic program synthesis transformation lnai pages 
bundy stevens van harmelen ireland smaill 

rippling heuristic guiding inductive proofs 
artificial intelligence 
constable allen bromley cleaveland cremer harper howe knoblock mendler panangaden sasaki smith 

implementing mathematics nuprl proof development system 
prentice hall 
dowek 
coq proof assistant user guide 
institut national de recherche en informatique en automatique 
report rr 
kreitz 

formal mathematics verifiably correct program synthesis 
journal igpl 
kreitz otten schmitt 

guiding program development systems connection proof strategy 
editor proceedings fifth international workshop logic program synthesis transformation lncs pages 
springer verlag 
kreitz mantel otten schmitt 

connection proof construction linear logic 
mccune editor proceedings conference automated deduction lnai pages 
springer verlag 
kreitz 

program synthesis 
bibel schmitt editors automated deduction basis applications chapter iii pages 
kluwer 
kreitz hayden hickey 

proof environment development group communi cation systems 
kirchner kirchner 
editors deduction lnai pages 
springer verlag 
international conference automated kreitz otten 

connection theorem proving classical non classical logics 
journal universal computer science 


auf dem rippling kalk diplomarbeit darmstadt university technology 
mantel kreitz 

matrix characterization mell 
european workshop logics artificial intelligence european workshop jelia lnai pages springer verlag 
otten kreitz 

connection proof method intuitionistic logic 
baumgartner posegga editors proceedings workshop theorem proving analytic tableaux related methods lnai pages 
springer verlag 
otten kreitz 

string unification unifying prefixes non classical proof methods 
moscato editor proceedings workshop theorem proving analytic tableaux related methods lnai pages 
springer verlag 
kreitz 

instantiation existentially quantified variables inductive specification proofs 
international conference artificial intelligence symbolic computation lnai pages 
springer verlag 
schmitt kreitz 

transforming intuitionistic matrix proofs standard sequent proofs 
baumgartner posegga editors proceedings workshop theorem proving analytic tableaux related methods lnai springer verlag 
schmitt kreitz 

converting non classical matrix proofs sequent style systems 
slaney editors proceedings conference automated deduction lnai pages 
springer verlag 
schmitt kreitz 

deleting redundancy proof reconstruction 
de editor international conference tableaux lnai pages 
springer verlag 
wallen 

automated deduction nonclassical logic 
mit press 

