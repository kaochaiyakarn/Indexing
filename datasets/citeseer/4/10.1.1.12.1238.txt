parsing english link grammar daniel sleator davy temperley school computer science carnegie mellon university pittsburgh pa email sleator cs cmu edu music department columbia university new york ny email dt cc columbia edu define new formal grammatical system called link grammar sequence words language link grammar way draw links words way local requirements word satisfied links cross words form connected graph 
encoded english grammar system written program new algorithms efficiently parsing link grammar 
formalism lexical explicit constituents categories 
breadth english phenomena system handles quite large 
number sophisticated new techniques allow efficient parsing complex grammar 
program written entire system may obtained anonymous ftp 
researchers begun link grammars research 
sentences natural languages property arcs drawn connecting pair words relate arcs cross 
wellknown phenomenon call planarity basis link grammars new formal language system 
link grammar consists set words terminal symbols grammar linking requirement sequence words sentence language defined grammar exists way draw links words satisfy conditions planarity links cross drawn words 
connectivity links suffice connect words sequence 
satisfaction links satisfy linking requirements word sequence 
linking requirements word contained dictionary illustrate linking requirements diagram shows simple dictionary words cat snake mary ran chased linking requirement word represented diagram word 
daniel sleator davy temperley cat snake chased ran mary shaped labeled boxes connector connector satisfied matching compatible connector appropriate shape facing opposite direction exactly connectors attached black dot satisfied 
cat requires connector left connector left connector right 
plugging pair connectors corresponds drawing link pair words 
diagram shows linking requirements satisfied sentence cat chased snake cat chased snake unused connectors suppressed 
easy see mary chased cat cat ran sentences grammar 
sequence words mary chased cat language 
attempt satisfy linking requirements leads violation rules 
attempt cat chased mary similarly ran mary cat ran chased part language 
set links prove sequence words language link grammar called linkage 
ll simpler diagrams illustrate linkages 
simplified form diagram showing cat chased snake part language cat chased snake succinct computer readable notation expressing dictionary linking requirements 
dictionary encodes linking requirements previous example 
words formula snake cat mary ran chased linking requirement word expressed formula involving operators parentheses connector names 
suffix connector name indicates direction relative word defined matching connector lie 
formulas satisfied satisfying formulas 
formulas requires exactly formulas satisfied 
order arguments operator significant 
farther left connector expression nearer word connects 
cat object determiner connected connector closer verb connected connector roughly divide link grammars parts link grammar formalism properties construction link grammar english efficient algorithms techniques parsing link grammars 
touch briefly aspects 
link grammars new elegant context parsing english link grammar free grammatical formalism unique combination useful properties 
link grammar word lexicon definition describing sentence 
grammar distributed words 
system said lexical important advantages 
easier construct large grammar change definition word affects grammaticality sentences involving word 
grammar easily constructed incrementally 
furthermore expressing grammar irregular verbs english easy separate definition word 
nice feature lexical system allows construction useful probabilistic language models 
led researchers construct lexical versions grammatical systems tree adjoining grammars 
lafferty authors constructed probabilistic model link grammars 

phrase structure grammar parsing sentence link grammar words associated semantically syntactically directly linked 
easy enforce agreement gather statistical information relationships words 

english noun needs determiner independent subject object part prepositional phrase 
algebraic notation developed expressing link grammar takes advantage orthogonality 
lexical grammatical system human capability 
current line dictionary word cat different ways time number 
compact link grammar formula captures large number possibilities easily written comprehended human 

interesting property link grammars explicit notion constituents categories 
sentences parsed dictionaries constituents seen emerge contiguous connected collections words attached rest sentence particular type link 
example dictionary links attach noun phrase connected collection words left link verb right link 
links similar fashion 
cases links sentence viewed alternative way specifying constituent structure sentence 
hand way think link grammars see advantage perspective 
second result construction link grammar dictionary english 
goal set link grammar distinguish accurately possible syntactically correct english sentences incorrect ones 
chose formal newspaper style english model 
result link grammar roughly definitions formulas words captures phenomena english grammar 
handles noun verb agreement questions imperatives complex irregular verbs types nouns past noun phrases commas variety adjective types prepositions adverbs relative clauses coordinating conjunctions unbounded dependencies things 
third result described program parsing link grammars 
program reads dictionary form similar tables parse sentences grammar 
program exhaustive search finds way parsing sequence link grammar 
algorithm number words sentence parsed 
program effective data structures heuristics link grammars resemble dependency grammars categorial grammars 
significant differences 
light shed relationship section 
proof context freeness link grammars included appears technical report :10.1.1.12.1238
note context free systems differ ways including ease grammar expressed efficiency grammar parsed usefulness output parser processing 
daniel sleator davy temperley speed parsing 
program comfortably fast parsing typical newspaper sentences seconds modern workstation 
program written ansi dictionary available anonymous ftp internet 
having program available experimentation may easier understand 
organization section define link grammars formally explain notation terminology rest 
section describe workings small link grammar english 
algorithm described section data structures heuristics run fast described section 
section explain relationship link grammars dependency syntax categorial grammars 
show automatically construct link grammar categorial grammar 
construction allows efficient parsing algorithms heuristics applied categorial grammars 
section mentions research projects link grammars 
space limitations prevent presenting details number aspects 
paragraphs mention 
details matters contained technical report :10.1.1.12.1238
number common english phenomena handled current system 
technical report contains list reason state affairs 
reasons range fact preliminary system fact phenomena simply fit link grammar framework 
coordinating conjunctions pose problem link grammars 
sentence dog chased bit mary logically links dog bit chased mary links cross 
devised scheme handles vast majority uses conjunctions incorporated program 
existence conjunction sentence modifies grammar words 
parsing algorithm resulting modified grammar 
certain constructs difficult handle basic link grammar framework 
example non referential john go correct cat john go wrong 
possible awkward distinguish link grammar 
deal number phenomena extended basic link grammar formalism post processor begins linkage analyzes structure determines certain conditions satisfied 
allows system correctly judge number subtle distinctions including mentioned 
notation terminology meta rules link grammar dictionary consists collection entries defines linking requirements words 
requirements specified means formula connectors combined binary associative operators 
specified means parentheses 
loss generality may assume connector simply character string 
link connects word associated connectors formula word said satisfy connector 
links may satisfy connector 
connectors opposite ends link names match left right 
basic link grammars connectors match strings including final 
general form matching introduced 
connectors satisfied links serve satisfy formula 
define notion satisfying formula recursively 
satisfy formulas formulas satisfied 
satisfy formulas formulas satisfied connectors formula may satisfied 
directory usr sleator public host spade pc cs cmu edu 
technical reports available 
parsing english link grammar convenient empty formula satisfied connected links 
sequence words sentence language defined grammar exists way draw links words satisfy word formula metarules planarity links drawn sentence cross 
connectivity links suffice connect words sequence 
ordering connectors formula traversed left right words connect proceed near far 
words consider word consider links connecting word words left 
link connecting nearer word shorter link satisfy connector appearing left formula word 
similarly link right satisfy connector left formula longer link right 
exclusion links may connect pair words 
disjunctive form formulas specify link grammar dictionary convenient creating natural language grammars cumbersome mathematical analysis link grammars describing algorithms parsing link grammars 
introduce different way expressing link grammar called disjunctive form 
disjunctive form word grammar set disjuncts associated 
disjunct corresponds particular way satisfying requirements word 
disjunct consists ordered lists connector names left list right list 
left list contains connectors connect left current word connectors right list contains connectors connect right current word 
disjunct denoted 
lm rn rn gamma 

lm connectors connect left 
rn connectors connect right 
number connectors list may zero 
trailing may omitted connector names disjunctive form direction implicit form disjunct 
satisfy linking requirements word disjuncts satisfied links may attach disjunct 
satisfy disjunct connectors satisfied appropriate links 
words 
linked left current word monotonically increasing distance current word 
words 
linked right current word monotonically increasing distance current word 
easy see translate link grammar disjunctive form standard form 
done simply rewriting disjunct delta delta delta lm delta delta delta rn combining disjuncts operator appropriate formula 
easy translate formula set disjuncts 
done enumerating ways formula satisfied 
example formula corresponds disjuncts dictionary language streamline difficult process writing dictionary incorporated features dictionary language 
examples features section 
useful consider connector matching rules powerful simply requiring strings connectors identical 
daniel sleator davy temperley general matching rule simply table part link grammar specifies pairs connectors match 
resulting link grammar context free 
dictionary larger line dictionary matching rule slightly sophisticated simple string matching 
shall describe rule 
connector name begins upper case letters followed sequence lower case letters lower case letter subscript 
determine connectors match delete trailing append infinite sequence connectors 
connectors match strings match proviso matches lower case letter 
example matches sp ss sp match ss 
similarly matches dm dmc 
connectors match dm 
formula satisfied 
conceptually expression optional 
occurs frequently denote curly braces follows fa useful allow certain connectors able connect links 
easy example allow number adjectives attach noun 
denote putting connector name call result multi connector dictionaries consist sequence entries list words separated spaces followed colon followed formula defining words followed semicolon 
example best way understand write link grammar english study example 
dictionary cover complete grammar words contains handle number phenomena agreement adjectives questions infinitives prepositional phrases relative clauses 
ds john mary cl si dog cat park bone stick ds bs cl ss sis dogs cats parks bones sticks dm bp cl sp sip sis ss ev si ev may si ss bs sis ai mp touch chase meet sp bp ev touches chases meets ss bs ev touched chased met mor ev touching chasing meeting gi ev die arrive sp bp ev dies arrives ss bs ev died arrived ev dying arriving gi ev mp ev big black ugly ai ev cl ss simple connectors develop explanation works stages 
restrict attention connectors 
imagine dictionary connectors removed 
parsing english link grammar connect noun verb 
connector connect verb object 
connector connect adjective noun 
connecting determiner noun 
notice connector omitted proper nouns optional plural nouns mandatory singular nouns 
notice subscripts allow act determiner plural singular nouns singular nouns 
similarly connector subscripted ensure verb noun agreement 
ordering terms expressions important 
example fact nouns occurs left means adjective closer noun determiner 
judgements rendered described far mary arrived ugly black dog chased big cat ds ss ds dogs died sp dogs chase cats sp dog chase cat black dog died mary chased cat dogs died dog died prepositions ev connectors allow prepositional phrases 
connector connects preposition object 
notice nouns alternative 
means noun object verb preposition 
connector prepositional phrase modifies noun ev connector prepositional phrase modifies verb 
examples illustrate dog arrived bone ds ss ev ds dog bone arrived ds ss mp ds notice connectors nouns connectors nouns ev connectors verbs allowing multiple prepositional phrases john chased dog park stick participles connector chased allows act participle phrase modifying noun shown examples 
dog chased park arrived ds ss ev ds dog chased park arrived ds ss mp ds connector infinitives john meet mary notice connector alternative connector plural verb forms 
take advantage fact plural verb forms usually infinitive forms include single dictionary entry 
similar way connector past participles 
past participles forms verb 
gi connector participles 
participles gi connector forms verb daniel sleator davy temperley gi 
ai connector predicative adjectives 
adjectives ai connector forms ai connector 
questions si connector questions subject verb inversion 
nouns si alternative invertible verbs si alternative 
allows john chase dog si ds wh questions various different ways questions involving discussed 
subject type questions substituting subject simply connector 
allows chased dog ss ds object type questions substituting object connector 
transitive verbs connectors alternative connectors 
connector 
allows john chase si incorrect sentences rejected john chase john chase mary john mary chase chased john mary incorrect construction accepted 
line system post processing eliminate 
john chased relative clauses subject type relative clauses antecedent acting subject clause connector serves connect noun verb relative clause 
nouns connector 
notice optional ed si connectors meaning connectors noun takes relative clause 
verbs connector connectors verb subject type relative clause may connection 
subject type relative clauses relative pronoun mandatory 
purpose verbs connector anded connector 
connector fulfill need 
connector anded connector connect back connector nouns 
allows dog chased john died ds ss bs object type relative clauses connector nouns 
time connects connector verbs connector object type wh questions 
case relative pronoun optional 
notice nouns optional cl connectors anded connectors 
noun subject object type relative clause 
connector antecedent noun connects directly subject relative clause dog john chased died ds ss bs antecedent connects forces cl connect cl subject clause dog john chased died ds ss bs cl system successfully rejects parsing english link grammar incorrect sentences dog chased cats died dog chase cats died dog john chased cats died dog john chased cats died dog chased died incorrect constructions accepted post processing dog john chase died dog john died mary chased died algorithm algorithm parsing link grammars dynamic programming 
closest relative standard literature dynamic programming algorithm finding optimal triangulation convex polygon 
tries build linkage ll call solution section top fashion add link partial solution link partial solution 
algorithm easily explained specifying data structure representing disjuncts 
disjunct pointers linked lists connectors 
pointers denoted left right 
connector denote connector list 
field pointer list value nil 
example suppose disjunct notation section 
left point connector left point connector left nil 
similarly right nil 
give intuition algorithm works consider situation link proposed connector word connector word 
words sequence parsed numbered gamma 
convenience define respectively 
situation shown diagram square boxes words represent data structure node corresponding word 
rectangular box represents possibly disjuncts word 
small squares pointed disjuncts represent connectors 
go extending partial solution region strictly 
region denoted 

words region partial solution built certainly invalid nil nil 
nil region ok may proceed construct rest solution 
suppose region contains word 
order attach words region rest sentence link word region word region word region link word outside 
range connect words rest sentence 
connector solution constructed solution rest connectors disjunct resides 
holds connectors disjuncts involved 
region lists 
connector disjuncts region violate ordering requirement 
fact connectors lists region order satisfactory solution 
suppose moment nil 
know connector link disjunct word region 

link exclusion rule 
algorithm tries possible words daniel sleator davy temperley disjuncts 
suppose finds word disjunct connector matches left 
add link partial solution 
situation shown diagram 
left right determine partial solution extended full solution 
solving problems similar problem started 
particular ask solution extended word range 
connector lists left 
ask solution extended word range 
connector lists right notice case problem solving superficially different boundary words connected link 
difference consequence pair links play role direct link play separate region 
words serve connect words 
need consider possibility 
solution link words link words 
results solution word link graph cyclic 
algorithm handles possibility attempting form link right match third recursive call solving third problem analogous original problem 
problem word range 
connector lists satisfied right left 
similar analysis suffices handle case nil 
algorithm described exponential worst case running time function number words sequence parsed 
easily transformed efficient dynamic programming algorithm memoization 
running time bounded number different possible recursive calls multiplied time call 
recursive call completely determined specifying pointers 
uniquely determine 
cost call bounded total number disjuncts sequence words 
number disjuncts number connectors running time 
fixed link grammar running time 
technical reports describe algorithm detail 
contain pseudo code algorithm argument correctness elegant recurrence number linkages sentence :10.1.1.12.1238
algorithm implemented interested seeing sentences taken newspapers natural sources 
quickly clear needed algorithm run faster long sentences 
speeding pointed link grammar dictionary significant coverage english grammar number disjuncts words gets large 
constant analysis section quite large 
devised implemented schemes run conjunction algorithm previous section 
pruning approach observation particular sequence words parsed disjuncts irrelevant simple reason contain connector match connector word sequence 
precise suppose word disjunct connector right list 
word right connector pointing left matches disjunct linkage 
disjunct deleted changing set linkages 
deleting disjunct parsing english link grammar called pruning step 
pruning consists repeating pruning step longer applied 
set disjuncts left pruning complete independent order steps applied 
pruning operation church rosser property 
choose ordering efficiently implemented 
ideal achieve running time pruning linear number connectors 
scheme propose satisfies useful priori bound running time practice appears run linear time 
series sequential passes words alternately left right right left 
types passes analogous suffices describe left right pass 
pass processes words sequentially starting word 
consider situation words 
gamma processed 
set connectors computed 
set connectors exists right lists disjuncts words 
gamma deleted 
process word consider disjunct turn 
connector left list search set see contains connector matches connectors matches apply pruning step remove 
right connector remaining disjunct incorporated set completes processing word function computed left right pass idempotent way saying doing operation twice row doing 
alternate left right right left passes pass passes 
algorithm decides 
data structure set simply hash table hash function uses initial upper case letters connector name 
ensures connectors get hashed different locations definitely don match 
know non trivial bound number passes seen case requiring 
table 
shows typical example reduction number disjuncts achieved pruning 
fast match data structure inner loop algorithm described section searches word disjunct word left connector matches right connector matches fast way find disjuncts significant savings achieved 
data structure hashing precisely 
speed afforded technique roughly number different connector types roughly current dictionary 
power pruning power pruning refinement pruning takes advantage ordering requirement connectors disjunct exclusion rule properties valid linkage 
interacts fast match data structure beautiful way 
unfortunately details scope table 
shows outcome pruning power pruning typical sentence 
refinements described section significantly reduced time required search linkage 
operations pruning power pruning searching linkage take roughly amount time 
dependency categorial grammars dependency formalisms large body idea linguistic analysis done drawing links words 
variously called dependency systems dependency syntax dependency grammar word grammar 
dependency grammar grammatical sentence endowed dependency structure similar linkage 
structure defined consists set appear technical report :10.1.1.12.1238
daniel sleator davy temperley planar directed arcs words form tree 
word root word arc exactly word arc may pass root word 
linkage opposed dependency structure links labeled undirected may form cycles notion root word 
gaifman give formal method expressing dependency grammar 
shows model context free 
definition dependency structure gaifman proof dependency grammar context free imply close relationship systems link grammars 
case 
easy take dependency grammar gaifman notation generate link grammar accepts language 
correspondence linkage results parsing sentence corresponding dependency structure 
means algorithm link parsing easily applied dependency grammars 
number disjuncts resulting link grammar quadratic number rules dependency grammar 
algorithms described dependency parsing bear resemblance 
plausible conjecture algorithms techniques useful directly parsing dependency grammars 
gaifman result shows possible represent link grammar dependency grammar re context free 
correspondence little parsed structures result totally different 
problem constructing dependency grammar direct correspondence link grammar linkage link grammar cycles cycles allowed dependency grammar 
restrict acyclic linkages run problem 
exponential blow number rules required express grammar 
disjunct word link grammar requires separate rule dependency grammar 
gaifman model lexical 
method classifies words categories 
word belong categories 
roughly speaking disjunct occurs dictionary category words disjunct 
notation sense orthogonal link grammar notation 
aware notation dependency systems lexical terse suited natural language grammar link grammars 
creating dependency grammars english aware implementation dependency grammar natural language nearly sophisticated 
categorial grammars grammatical system known categorial grammar bears resemblance link grammars 
show express categorial grammar concisely link grammar 
appears difficult express link grammar categorial grammar 
just link grammar word categorial grammar associated symbolic expressions 
expression atomic symbol pair expressions combined types binary operators 
sentence language defined categorial grammar choosing expression associated word derivation transforms chosen sequence expressions single expression consisting special atomic symbol 
derivation proceeds combining neighboring expressions rules arbitrary expressions expressions built cases expressions combined ones shown line adjacent current sequence expressions 
combinational operation produces expression line reduces number expressions 
gamma operations applied sentence length reduced expression 
example consider categorial grammar harry np np likes np np parsing english link grammar np np np derivation harry likes harry likes np np np np np np np np set languages represented categorial grammars described set context free languages fact sheds light way formalism represents language 
get better understanding connection categorial grammars link grammars paragraphs explain way construct link grammar categorial grammar 
reverse constructing categorial grammar link grammar difficult know elegant way 
simplify construction ll modified definition link grammar called special link grammar differs ordinary link grammar ways links allowed form cycles special word sentence called wall wall viewed part sentence 
categorial grammar expression 
ll show build equivalent link grammar expression 
word set fd 
categorial expressions ll give word link grammar expression ore delta delta delta ore function delta defined recursively follows gamma gamma gamma gamma stands atomic symbol categorial grammar connector names link grammar formulas 
wall formula 
link grammar corresponding categorial grammar wall np np harry np np np np np likes np np np np np np np np np np np np np np np np np np replaced parentheses categorial grammar expressions brackets inside link grammar expression 
link grammar gives analysis sentence shown wall harry likes np np np notice construction size link grammar formula number disjuncts represents linear size original categorial grammar expressions 
suggests efficient way parse categorial grammar transform link grammar apply algorithms heuristics described 
remarks link grammars basis research projects 
john lafferty proposes build automatically tune probabilistic language model link grammars 
variants categorial grammars mildly context sensitive 
course construction languages 
daniel sleator davy temperley proposed model gracefully encompasses trigrams grammatical constraints framework 
andrew hunt developed new model relationship prosody syntax link grammars 
implemented model preliminary tests results better models 
tom modified parser detect kinds errors write english 
bar hillel language information selected essays theory application 
addison wesley 
cormen leiserson rivest algorithms mit press mcgraw hill 
fraser parsing dependency grammar ed 
ucl working papers linguistics university college london london pages 
fraser prolegomena formal theory dependency grammar ucl working papers linguistics university college london london pages 
gaifman dependency systems phrase structure systems information control pages 
hudson word grammar basil blackwell 
hudson computer testable word grammar english ed 
ucl working papers linguistics university college london london pages 
hudson english word grammar basil blackwell 
joshi natural language processing science volume sept pages 
dependency syntax theory practice state university new york press 
lafferty sleator temperley grammatical trigrams probabilistic model link grammar proc 
aaai fall symp 
probabilistic approaches natural language technical report cmu cs school computer science carnegie mellon university sept 
bach wheeler editors categorial grammars natural language structures reidel publishing 
schabes 
stochastic lexicalized grammars 
proceedings coling nantes france july 
sleator temperley parsing english link grammar technical report cmu cs carnegie mellon university school computer science october :10.1.1.12.1238
van probabilistic methods dependency grammar parsing proceedings international workshop parsing technologies carnegie mellon university pages 
personal communication 
