case learning design university centre cognitive science freiburg frg cognition iig uni freiburg de dietmar university centre cognitive science freiburg frg dietmar cognition iig uni freiburg de general framework adaptive user interactive design support system 
adaptability requires acquisition usage huge amounts highly structured knowledge 
ability perform react tight operation user special importance complex domains industrial building design 
case learning applied provide knowledge necessary support subgoaling pre organization case base similarity assessment adaptation 
prior focused structural similarity assessment adaptation 
main intention case subgoaling interaction relation appropriate knowledge representation 
gives underlying ideas basic algorithms framework 
practical evaluation framework partially implemented module knowledge system idea 
knowledge acquisition reasoning system development strong interactions tasks system ful reasoning methods chosen knowledge needed cf 
strube 
application domain delineate case learning design industrial building design 
actual problem solving state need suggest subgoals tackled set previous experiences give hints possible solutions ambitious provide adapted design solutions 
frequently architects browse old blueprints re ecting similar designs order solve new problems 
experience literature goel hinrichs hua faltings kolodner case reasoning cbr natural problem solving method 
tasks cbr main problem solving method force acquisition cases appropriate similarity measures case sets 
arising questions cases 
represent cases 
tode computational ective time structural selective manner 
acquire structure huge amount necessary support building design 
appropriate knowledge representation scheme integration learning promising way lessen burden knowledge elicitation system development 
intention framework system starts knowledge able learn incrementally knowledge needed support design buildings 
sections may summarized follows 
section provides application domain inclusive formalization 
section presents outline framework 
section heart provides basic learning reasoning algorithms applied 
nal part discusses relates framework 
research supported german ministry research joint project contract iw 
project partners german national research center computer science gmd sankt augustin bsr consulting gmbh munchen technical university dresden leipzig university university karlsruhe 
application domain formalization application domain delineate rationale incremental adaptive learning interactive case problem solving industrial building design 
focus installations buildings complex infrastructure 
main problem subsystems fresh air electrical circuits warm cold water computer networks phone cables introduce notions objects states task structures kinds case representations inclusive similarity measures 
formalizations slanted letters 
formalizations needed introduce algorithms case learning reasoning subsequent section 
objects represent cad drawings representation scheme 
allows represent objects concrete objects rooms pipes chairs objects areas entire house climate system graphically attribute 
main basis man machine interaction 
constitutes basis machine learning reasoning 
graphically objects represented geometrical objects 
di erent states design building correspond di erent con gurations objects restrict dimensional pictures readability 
attribute objects represented values xed set geometrical attributes fa type attributes amg 
geometrical attributes describe extension fx dx 
type object denoted attributes aspect morphology resolution size aspect relates subsystem building supply air 
morphology denotes general function area addressed linkage development connection 
third attribute speci es kind resolution employed area bounding box 
size relates part building envisaged hallway room areas room 
objects de ned geometrical type attribute values 
notions database theory denote attribute value object attribute object oi represented union set geometrical attribute values oi foi oi set type attribute values de ned oi foi ak oi amg oi oi zab zab zab objects states cases type attribute values state case ellipses substitute rectangles circumscribed ellipses 
ellipses rectangles useful trick ellipses overlap points 
readability essentially improved 
states cad drawings correspond snapshots states problem solving 
assume objects identical type grouped constitute state 
fig 
depicts design di erent states named fresh air system 
state represented anumber objects 
geometrical attributes objects represented graphically 
types represented attribute values 
example state type zab shows objects represent areas supply air linkage cover hallway 
states sj set objects oi identical type de ne sj set containing sets geometrical attribute values objects belonging sj sj njg certain state sj pair consisting set geometrical attribute values set objects belonging sj type attribute values 
approach holds oi oi 
loss generality state sj sj oi di set states named task structures task supported case reasoning creation new objects objects designed 
certain design state say fig 
design states may attacked 
designing rst basis basis may fig 
arrows denote predecessor relations states 
state transitions seen tasks tackled 
set states relations constitute called task structure 
task structures represent relation set states de ned si sj objects sj designed basis objects constituting state si 
states called immediately subsequent exists state 
weights wsi sj may state frequency preference possible state transitions 
cases aiming task oriented user support cases identical tasks 
di erent design steps tasks require di erent design strategies 
example return air accesses connected shortest path connections fresh air accesses take curved tracks achieve noise reduction 
task requires separate cases solution state dependent case base 
illustration see fig 

problem objects type zab case hs supports design objects 
objects problem solved designing objects type applying hs 
depending stage problem solving state take role problem solution 
attribute cases de ned geometrical type attribute values immediately subsequent states 
superscripts denote problem solution state case set cbs cases identical solution type de ned cbs fhs dg important di erence describing solution 
represents global intentional solution subgoal represents speci extensional solution design solution 
refers peculiarities states di erent case bases similarity relations 
contrary represents speci geometrical attribute values objects 
determine similarity cases represented attribute way wemay standard similarity measures cbr 
see vo di erent approaches 
attribute similarity problem states sp geometrical attribute values sp may simply de ned distance weights may denote relevance attribute values prefer geometrical extension objects opposed placement 
sp assuming identical number objects hamming distance de ned sp nx ji op ki distance may transformed similarity measure sp sp due application domain attribute object descriptions su cient determine similarity terms adaptability 
illustration states 
geometrical attribute values partial object arrangements identity rotation re ection hard determine 
geometrical attribute values single objects count 
relations objects belonging state considered 
reasoning proceed object relations attribute values single objects 
necessary topological structural representations states inclusive appropriate similarity concepts 
algebraic approach problems solutions ground terms terms containing variable appropriate signature 
structurally represented ground terms term algebra 
see detailed explanation 
assuming existence transformation function inverse automatically enables transform attribute representations structural representations vice versa 
structural representation problem solution state case hs de ned ts structural similarity assessment proceeds comparing actual problem common structure prototype set prior problem experiences 
reason need derive prototype prior problems rst 
storing modi cations lead common prototype know proper modi cations change actual problem prototype 
contrary standard approaches cbr modi cations represented structural similarity measure pt pt 

prototypes structural similarity pt de ned union proper modi cations relate set problems see fig 

pt satisfying unique term pt called prototype term set prototype exists inverse substitution pt example view similarity imagine prototypical room 
room exist representative rooms seen 
remembering prior rooms cases speci types forms usages able determine proper modi cation rules pt lead room prototype 
entering unseen space easily able recognize room 
simply apply proper modi cations compare result corresponding room prototype 
de nition syntactic similarity close concept syntactic cation 
terms searching term called anti uni er corresponding substitutions satisfying 
term called general anti uni er muggleton speci generalization plotkin anti uni er outline framework taken vo fig provides general outline framework :10.1.1.35.951
trace human system interaction feeds algorithms incrementally learn knowledge needed design support 
convention arrows employed denote knowledge processing squared boxes sketch knowledge examples 
trace user actions recorded previous design task structure task dependent attribute case bases task dependent structural case bases trace zab zab cb zab cb cc zab cc zab alg ts zab zab zab alg cb subgoal cc zab alg alg pt zab pt pt pt set candidate cases zab outline framework zab zab human adapted design solution support system task dependent attribute similarity relations task dependent structural similarity relations prototypes graphical surface employ knowledge cad system called dancer 
user employing system standard cad drawing tool designs objects assigns labels design steps objects designed recorded trace provides input support system 
actual support system may divided parts providing guidance select subgoal state tackled design 
second suggesting set candidate cases able give hint actual problem 
third generating adapted design solution ts selected subgoal 
settings user time position accept modify reject solution 
problem solved system allocated user 
successful solution user interaction inputs algorithm uence learning reasoning immediately 
closer look algorithms 
algorithm extracts preferred state sequences task structures traces 
corresponding type attribute values objects grouped states 
task structure consecutive states recorded weights frequency 
task structure support subgoaling elicit cases task oriented way 
algorithm uses cookie cutter stencil cases original trace 
cases stored cb representation attribute value pairs 
appropriate distance similarity measure algorithm alg learns attribute relevance 
applying measure enables determine set candidate cases cc case base cb 
adaptation relations objects account 
structural representations needed 
transform geometrical object representation topological algebraic representation assume existence transformation function knowledge representation algorithm alg pt extracts prototypes pt sets prior problems automatically 
new problems matched prototypes applying structural similarity measure pt structural similarity prototypical solution transferred 
applying inverse modi cations inverse transformation function leads adapted design solution 
algorithms introduced knowledge representation appropriate reasoning methods algorithms straightforward 
readability weintroduce responsible subgoaling alg cb alg alg pt responsible design separately 
task structures subgoaling algorithm learns preferred state sequences task structure user traces 
traces primarily sequence designed objects constituting states sj 
objects represented geometrical type attribute values 
traces may seen 
complete design building user may design 
starting state sequences speci buildings derive complex structures called task structures see subsection correspond alternatives peculiarities designing di erent buildings 
subgoaling refers capability subsequently state problem solving 
order show capability states aim subgoals created selected linked 
excluding interacting parallel ways want learn proper alternative state sequences 
building design di cult acquire preconditions ects certain design steps 
learn alternative state sequences sequences states traversed 
algorithm input sj sp sj repeat subgoal support sk sl wsp sk wsp sl sk output output subgoal input call alg alg pt alg cb wsp ss wsp ss abort 
algorithm support subgoaling algorithm see fig 
may seen main algorithms supporting activating 
subgoal support required human user takes objects input determines subgoal calls subsequent algorithms actual design solution learns weights state transitions order deal multiple choices 
obviously rst run empty knowledge base algorithm provides hint 
object supposed belong problem state sp oi actual solution consisting provided user 
long abort false algorithm repeats actual solution state new problem cases similarity measures design solutions actual design solution need derive geometrical attribute values type cbr stage similarity assessment gentner forbus widely accepted cient way case selection 
stance advocate combination fast preselection determine set candidate cases cc followed structural similarity assessment derive adapted solutions 
preselection proceeds comparing weighted attribute values structural similarity assessment adaptation prior actual geometrical attribute descriptions transformed term graph ones 
underlying term algebra graph algebra concept cation muggleton able learn inductively proper substitutions cc represented pt lead common prototype pt modi cation rules proper substitutions deletions objects geometrical transformations determine set cases new problem belongs 
structural similarity prototypical solution case set transferred actual problem 
adaptation proceeds applying substitutions lead common prototype 
discussed detail cf 

design support ccs fci ci cbs algorithm alg alg pt sp threshold output adaptation support ft cp cp pt tp pt pt pt pt cs output input input hs si algorithms support design solutions fig 
provides general algorithm support design 
called algorithm 
input geometrical problem description subgoal addressed 
user wants design support set candidate cases selected 
appropriate threshold strongly user domain task dependent 
user asks adaptation support candidate case structural similarity assessment adaptation proceeds 
actual problem problems candidate cases ft cp cp transferred structural descriptions 
prototype pt structural similarity measure pt derived 
structural similarity pt pt prototypical solution transferred adapted pt 
applying inverse transformation function leads geometrical attribute values design solution knowledge missing user wants solve certain task determine actual design solution actual case added appropriate case base 
algorithm continues fig 

implementation algorithm partially implemented generates task structures accuracy user traces heuristics 
implemented separately order cut cases unique automatically task oriented way 
algorithms constitute backbone program called synthesis graph knowledge representations fully implements algorithms alg alg pt similarity assessment adaptation 
design support system idea 
discussion cbr applied real world domains problems relate amount structural complexity knowledge needed addressed 
systems require immense ort knowledge elicitation hardly succeed 
filling large forms label save possibly useful experience suggested archie system kolodner 
simply time feed knowledge required 
believe highly user interactive frameworks manage knowledge elicitation system usage real challenge enable useful realizable computer aided support design 
close linkage knowledge acquisition problem solving learning support adaptive user peculiarities chosen domain 
basic approaches framework intense integration learning 
task oriented approach acquisition reasoning 
enables acquisition task structures cases determines knowledge exchange points user system 
reasoning strategies may di er solution exchange states exactly de ned 
second introduced conjunction subgoaling design representation states cases 
third level case representation basis computationally ective structurally selective reasoning 
want contrast cbc avila cbr component ofthe planning system caplan 
compare choice points ways subgoals cases operators right adaptations instantiations determined 
cbc solved plans control restrict search space 
approach choice task structure entire setof prior states inclusive predecessor relations 
caplan applies operators derive concrete solutions 
domain state transitions represented operators 
accessible knowledge concrete prior experiences cases 
operator choice cbc comparable selection appropriate candidate cases 
choice variable instantiation selected goal may compared concrete solution instantiation adaptation 
contrary done case explanation kass leake structural similarity assessment adaptation done basis entire set relevant cases 
indexes retrieve prior experiences applying adaptation rules separately 
deal structures determine similarity terms adaptability 
research strongly inspired done project general objective case model approaches knowledge systems 
detailed comments jurgen oliver prior draft 
re ects personal view 
anonymous reviewer detailed comments 
encourage think need special importance formalizations cbr 
avila 

controlling nonlinear hierarchical planner casebased reasoning nd european workshop case reasoning 


structural similarity guidance case design wess 
richter eds topics case reasoning selected papers european workshop case reasoning ewcbr vol 
lecture notes arti cial intelligence springer pp 



formalizations case reasoning synthesis aaai workshop case reasoning pp 

report 
vo 

applying machine learning improve innovative design support systems aid workshop machine learning design 
kolodner 

case design aid architecture proc 
second international conference onarti cial intelligence design kluwer academic publishers pp 

gentner forbus 

mac fac model similarity retrieval proceedings cognitive science conference pp 

goel 

integration case reasoning model reasoning adaptive design problem solving phd thesis ohio state university 
hinrichs 

problem solving open worlds case study design lawrence erlbaum associates 


digital building extensive computer support design construction management buildings futures proceedings fifth international conference computer aided architectural design futures north holland pp 

hua faltings 

exploring case building design cadre ai 
strube 

task oriented knowledge acquisition design support systems european conference science industry 
kass leake owens 

program explains schank ed explanation patterns understanding mechanically creatively lawrence erlbaum associates pp 

kolodner 

case reasoning morgan kaufmann 
muggleton 

inductive logic programming academic press 
plotkin 

note inductive generalization meltzer michie eds machine intelligence american elsevier pp 

vo 

similarity concepts retrieval methods report gesellschaft fur mathematik und mbh kunstliche intelligenz 
