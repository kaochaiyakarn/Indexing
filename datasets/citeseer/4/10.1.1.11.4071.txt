working version nov description logic programs combining logic programs description logic benjamin grosof mit sloan school management cambridge ma usa www mit edu mit edu show interoperate semantically leading semantic web approaches rules ruleml logic programs ontologies owl daml oil description logic analyzing expressive intersection 
define new intermediate knowledge representation kr contained intersection description logic programs dlp closely related description horn logic dhl expressive fragment order logic fol 
dlp provides significant degree expressiveness substantially greater rdf schema fragment description logic 
show perform dlp fusion bidirectional translation premises inferences including typical kinds queries dlp fragment dl lp vice versa dlp fragment lp dl 
particular translation enables build rules top ontologies enables rule kr access dl ontological definitions vocabulary primitives predicates individual constants rules 
conversely dlp fusion technique likewise enables build ontologies top rules enables ontological definitions supplemented rules imported dl rules 
enables available efficient lp inferencing algorithms implementations exploited reasoning large scale dl ontologies 
keywords semantic web rules ontologies logic programs description logic knowledge representation xml rdf model theoretic semantics inferencing interoperability translation information integration 
challenge address combine rules ontologies semantic web sw 
large topic doubtless papers written 
focus meeting key requirements key initial steps logical knowledge representation kr 
start currently leading draft standards sw ontologies ontology formally specified defined vocabulary 
copyright held author owner 
ian horrocks university manchester manchester uk www cs man ac uk horrocks horrocks cs man ac uk owl sw rules ruleml 
develop semantics combining rules ontologies translation respective krs 
semantics exploits correspondences classical order logic fol 
show translation semantics supports important patterns kr usage including querying discuss variety benefits 
point way interesting directions 
remainder section give detail motivation technical overview 
layering semantic web stack semantic web viewed largely kr meets web 
years broad consensus evolved semantic web community vision semantic web includes specifically rules ontologies 
key requirement semantic web architecture able layer rules top ontologies particular create reason mention vocabulary specified ontological knowledge bases semantically coherent powerful manner 
current version semantic web stack diagram reflects idea consensus view 
semantic web stack diagram 
fact special case rule 
relational database including queries viewed rulebase 
rule markup language www ruleml org ebusiness mit edu ruleml see relatively overview 
focus krs ontology language focus daml oil particular kr known description logic dl point departure formed web ontology working group current draft standard called owl 
owl dl close daml oil similar daml oil aspects including approach syntax rdf 
owl active development daml oil relatively stable focus particular dl daml oil 
rule language focus ruleml particular kr known declarative logic programs lp leading current standardization approach rules semantic web 
ruleml syntax rdf version non rdf xml version semantically 
tandem lp focus positive horn expressive fragment fol closely related positive horn expressive fragment lp motivation semantic web services task oriented motivation combining ruleml lp rules owl daml oil dl ontologies arises efforts design build semantic web services sws 
semantic web services web services semantic web techniques describe implement services knowledge manner 
knowledge service descriptions may variety purposes including discovery search selection evaluation negotiation contracting composition planning execution monitoring 
efforts develop semantic web services techniques explore application scenarios include daml services effort daml web service modeling framework effort wsmf contracting financial knowledge integration 
daml efforts specifically identified combining rules ontologies important requirement 
daml began daml oil main tool describing services 
daml identified lp rules desirable addition 
interestingly daml identified lp rules desirable specify ontologies partly lp rules familiar mainstream software engineers dl 
overview approach section give overview approach outline rest 
start goal understanding relationship logic kr formalisms able combine knowledge taken description logics decidable fragments fol closely related propositional modal dynamic logics logic programs see review turn closely related horn fragment fol 
focus def horn large fragment horn fol go show dl lp related def horn 
highly efficient lp reasoning engines provide reasoning services def horn 
approach driven insight understanding expressive intersection krs crucial understanding expressive combination union krs 
de description logic mean broadly family variant krs daml oil just member 
define precise dl kr focus 
expressive fragment means expressive subset special case www daml org services informatik uibk ac users index html fine new intermediate kr called description horn logic dhl contained intersection fragment fol closely related description logic programs dlp viewed dhl moderate weakening kind drawn 
expressive overlap dl lp 
illustrates relationship various krs expressive classes 
dl horn strict decidable subsets fol 
lp hand intersects fol includes fully included fol 
fol express positive disjunctions inexpressible lp 
expressive features lp frequently practical rule applications inexpressible fol 
negation basic kind logical non monotonicity 
procedural attachments association action performing procedural invocations drawing particular predicates 
description logic programs newly defined intermediate kr contained intersection dl lp 
full lp including non monotonicity procedural attachments viewed including ontology sub language dlp subset dl 
working intersection may directly address expressive union dl lp studying expressive union dl horn framework fol 
certainly interesting thing 
knowledge characterized theoretically unclear union differs full fol 
full fol significant practical expressive drawbacks kr combine dl rules 
full fol severe computational complexity undecidable general case intractable datalog restriction 
second understood basic research level expressively extend full fol provide non monotonicity procedural attachments crucial expressive features practical usages rules 
third full fol inferencing techniques unfamiliar great majority mainstream software engineers rules form sql type queries prolog familiar conceptually 
approach take avoids drawbacks avoiding directly tackling union dl horn fol 
dlp provides significant degree expressiveness 
large fragment intersection dl lp horn includes rdf schema rdfs fragment dl 
rdfs fragment dl permits stating class subclass class stating domain property class stating range property class stating property subproperty property stating individual instance class stating pair individuals instance property additional dlp expressively permits dl intersection connective conjunction class descriptions union connective disjunction subclass descriptions restricted form universal quantification superclass descriptions restricted form existential quantification subclass descriptions stating property transitive stating property symmetric stating property inverse property rdfs contrast classes atomic primitives may connectives quantifiers appearing 
dlp kr give new technique combine dl lp 
show perform dlp fusion bidirectional mapping premises inferences including typical kinds queries dlp fragment dl lp vice versa dlp fragment lp dl 
call dlp fusion fuses logical krs dl lp information 
dlp fusion technique promises benefits 
say promises mainly theoretical basis development detailed algorithms implementations remain 
particular dlp fusion enables build rules top ontologies enables rule kr access dl ontological definitions vocabulary primitives predicates individual constants rules 
conversely technique enables build ontologies top rules enables ontological definitions supplemented rules imported dl rules 
enables efficient lp inferencing algorithms implementations rule relational dbms engines exploited reasoning large scale dl ontologies 
organization rest section give formal preliminaries dl horn lp including typical kinds queries 
section give semantic mapping translation portion dl def horn 
section define resulting fragment fol dhl define dlp corresponding fragment lp slightly weaker dhl 
section give discussion process translating dl dhl dlp lp 
section show combine inter operate dl lp knowledge correspondence standard inference problems kr language 
section summarise achieved far discuss directions 

preliminaries section introduce horn logic description logic dl dl ontology language daml oil 
particular describe syntax formalise meaning terms classical order logic fol 
daml oil description logic daml oil ontology language designed semantic web 
daml oil syntactically layered top rdfs semantically layered subset rdfs 
subset include rdfs recursive meta model unrestricted type relation treats rdfs simple dl supporting atomic class names 
data base management systems sql query answering systems constructor dl syntax example intersectionof cn human male unionof cn doctor lawyer male oneof john mary haschild lawyer haschild doctor hasvalue usa np haschild lawyer np haschild male np female daml oil class constructors dls daml oil subset rdfs corresponds fragment classical fol making easier develop mappings rule languages dls 
talk rdfs referring daml oil subset rdfs 
daml oil equivalent expressive dl fact equivalent dl 
addition classes individuals daml oil supports concrete datatypes data values 
restrict attention part language corresponds dl 
page shows daml oil statements correspond axioms possibly subscripted class possibly subscripted property inverse transitive closure possibly subscripted individual abbreviation class general class called thing daml oil 
seen daml oil statements reduced class property inclusion axioms ground facts asserted instance property instance relationships 
case axiom taken equivalent asserting transitive property daml oil include transitive closure operator 
dl daml oil classes names uris expressions variety constructors provided building class expressions 
summarises available constructors correspondence class expressions 
formally built signature distinct sets class cn property rn individual names 
set properties equal set property names rn union set inverse properties rn 
addition distinguish simple properties simple property property transitive transitive sub properties inverse simple property 
set classes smallest set class name cn symbols classes classes individual name property simple property integer ns ns classes 
semantics interpretations interpretation consists nonempty domain interpretation function interpretation function maps classes subsets individual names elements property names subsets cartesian product equivalence axioms reduced symmetrical pair inclusion axioms 
daml oil calls classes properties normally called concepts roles dl avoid confusion class property 
axiom dl syntax example subclassof human animal biped man human male subpropertyof haschild cost price male female president bush bush john peter inverseof haschild ancestor ancestor range human domain human itype john man pi john peter 
compound class expressions interpreted equations see nr nr property inverse interpreted equation 
addition interpretation function satisfy transitive restriction property names axioms satisfied interpretation iff respectively ontology satisfied iff satisfies axiom iff respectively interpretation meaning seen terms correspondence fol classes correspond unary predicates predicates arity properties correspond binary predicates predicates arity subclass property axioms correspond implication 
precise individuals equivalent fol constants classes class expressions equivalent fol formulae free variable properties property expressions supported dl equivalent fol formulae free variables 
class property inclusion axioms equivalent fol sentences consisting implication formulae free variables universally quantified outer level 
dl axiom form equivalent fol sentence form 
dl axioms form correspond ground atoms 
dl axioms asserting transitivity property functionality property property inverse property equivalent fol sentences form respectively 
daml oil statements shiq axioms dl fol cn cn cn cn np yn 
yi yi yi yj yn yi yi yi yj dl fol equivalence summarises equivalences shows fol formulae corresponding dl class expressions described constants free variable 
formulae composed obvious way 
notational convention constants variables 
logic programs horn fol declarative logic programs lp kr semantics underlies ruleml large part families rule systems currently commercially important sql relational databases ops heritage production rules prolog event condition action rules 
mentioned earlier focus kr rules 
commonly expressiveness full lp includes features notably negation failure priorities procedural attachments expressible fol dl 
concentrate expressive portion lp 
see review ordinary normal lp set rules having form bm bm bn bi atoms atomic formulae 
note restriction placed arity predicates appearing atoms 
logical variables logical functions arity may appear atoms 
called head consequent rule bm bm bn called body antecedent rule 
read rule read head body body head 
body empty true notationally omitted 
fact rule body empty head ground atom 
stands negation failure logically non monotonic form negation semantics differs general significantly semantics classical negation 
intuitively bi means bi believed unknown false means bi false 
intuitively rule viewed universally quantified outer level 
precisely rule viewed standing set ground instantiations 
definite lp ordinary lp negation failure appear set rules having form bm bi atoms 
definite lp closely related syntactically semantically horn fragment fol horn clause logic 
clause fol form lk li classical literal 
literal form atom 
literal said positive case negative case 
clause said horn literals positive 
horn clause said definite exactly literals positive 
definite horn clause known horn rule 
definite horn clause horn rule written form bm bi atoms 
say horn rule corresponds definite lp rule syntactic form vice versa 
likewise say horn ruleset rh definite lp ruleset rp correspond rules 
say rp lp correspondent rh conversely rh rp 
mentioned implicit notation logical variables universally quantified outer level scope clause 
rule man human male written equivalently man human male 
note similarity fol equivalent dl inclusion sub axiom 
lp rule horn clause said equality free equality predicate appear 
likewise said datalog logical functions arity greater zero appear 
semantics ordinary lp defined set ground atom fact entailed lp 
note cf 
ruleml adopt founded semantics call general number frequently extensions 
lp literature set called model proposed semantics lp stable semantics differ cases negation failure interacts recursive cyclic dependencies lp 
formally semantics definite lp defined follows 
hb stand herbrand base set smallest set inclusion subset hb rule bm bm relationship lp semantics fol semantics relatively simple describe case definite equality free datalog lp call def lp 
syntactically corresponding fragment fol definite equality free datalog horn fol call def horn 
rp def lp 
rh stand corresponding def horn ruleset 
set rp coincides smallest set inclusion herbrand model rh 
discuss relationship 
def lp def horn ruleset entail exactly set facts 
def lp def horn ruleset 
relative def horn ruleset def lp sound complete fact form queries answers amount conjunctions facts 
def lp mildly weaker version def horn ruleset sense 
def lp form fact 
contrast entailments def horn ruleset restricted facts 
suppose rh consists rules sunny sunny 
entails non unit derived clause rp 
practical applications quite fact form desired application interested entailed 
def lp virtue conceptual computational simplicity 
analogy hard detective mid century cop story says give facts ma am just facts 
thinking terms expressive classes view def lp expressive subset def horn call expressive subset 
def lp mild weakening def horn dimension entailment power permitting fact form call weakening 
return weakening def lp quite attractive computational characteristics expressively extensible directions fol discussed earlier 
propositional case def lp exhaustive inferencing rp worst case linear time 
general case logical variables entire set def lp rp computed time constant bound number logical variables rule restriction call vb typically met practice 
inferencing def lp tractable worst case polynomial time vb 
contrast dls generally tractable typically exptime nexp time complexity key inference problems full fol decidable 

mapping dl def horn section discuss dl languages daml oil mapped def horn vice versa 
expressive restrictions rules predicates atoms 
founded semantics conceptually popular lp semantics basic research community increasingly prevalent academic commercial implementation virtue preserving computational tractability 
definite lp stable semantics equivalent founded semantics 
discuss expressive restrictions dl def horn constrain subset dl def horn complete mapping defined 
dls decidable subsets fol decidability due large part having form tree model property 
property says dl class model interpretation non empty iff tree shaped model interpretation properties defines tree shaped directed graph 
requirement severely restricts way variables quantifiers 
particular quantifiers relativized atomic formulae guarded fragment fol quantified variable occur property predicate free variable recall dl classes correspond formulae free variable 
example dl class corresponds fol formula property predicate acts guard 
obvious consequence restriction impossible describe classes instances related anonymous individual different property paths 
example impossible assert individuals live location 
easy horn rule live loc loc restriction dls unary binary predicates usually captured 
onerous restriction techniques reifying higher arity predicates known 
definite horn fol requires variables universally quantified outer level rule restricts logical connectives certain ways 
obvious consequence restriction quantifiers impossible assert existence individuals identity known 
example impossible assert persons father known unknown 
easy dl axiom person father 
negation may appear body rule head 
existentials may appear head 
impossible assert persons men women 
easy dl axioms person man woman man woman 
datalog restriction def horn issue mapping dl dl datalog restriction 
equality free restriction def horn significant restriction prevents representing partial functionality property prevents representing maximum cardinality 
prohibition existentials head prevents representing minimum cardinality 
mapping statements section show statements axioms dl dl languages daml oil owl correspond def horn statements rules 
expressive features transitive properties oneof constructor compromise tree model property extent transitive properties cause short cuts branches tree 
inherent restriction ary dls known dlr 
rdfs statements rdfs provides subset dl statements described section subclass subproperty range domain statements dl setting called tbox axioms asserted class instance type instance property instance relationships dl setting called abox axioms 
saw section dl inclusion axiom corresponds fol implication 
leads straightforward mapping class property inclusion axioms def horn rules follows class subclass class maps subproperty maps shown rdfs range domain statements correspond dl axioms form range domain 
see equivalent fol sentences true true simplified respectively 
fol sentences def horn form gives mappings range domain range property class maps domain property class maps asserted class instance type instance relationships correspond dl axioms form respectively abox axioms equivalent fol sentences form constants 
def horn form simply rules empty bodies normally omitted individual instance class maps individual related individual property maps note rules ground constants 
daml oil statements daml oil extends rdf additional statements classes properties tbox axioms 
particular adds explicit statements class property individual equality inequality statements asserting property inverses transitivity functionality unique inverse functionality unambiguous 
discussed section class property equivalence axioms replaced symmetrical pair inclusion axioms mapped symmetrical pair def horn rules follows class equivalent extension class maps property equivalent extension property maps saw section semantics inverse axioms form captured fol sentences form semantics transitivity axioms form captured fol sentences form 
leads direct mapping def horn follows property inverse property maps property transitive maps saw section dl axioms asserting functionality properties correspond fol sentences equality 
dl axiom functional property corresponds fol sentence kind axiom dealt current framework see section require def horn rules equality head rules form 
mapping constructors previous section showed dl axioms correspond def horn rules statements classes properties 
dls classes appearing axioms need atomic complex compound expressions built atomic classes properties variety constructors 
great deal power dls derives feature particular set constructors provided 
section show dl expressions correspond expressions body def horn rules 
usual denote classes denote properties denote integer 
conjunction dl dl class formed conjoining existing classes seen corresponds conjunction unary predicates 
conjunction directly expressed body def horn rule 
conjunction occurs subclass axiom simply conjunction body corresponding rule similarly conjunction occurs subclass axiom conjunction head corresponding rule easily transformed lloyd topor transformations pair def horn rules disjunction dl dl class formed disjunction existing classes seen corresponds disjunction unary predicates 
disjunction occurs note technically partial functionality requirement exist 
note feature supported rdfs subset dls 
subclass axiom simply disjunction body corresponding rule easily transformed lloyd topor pair def horn rules disjunction occurs subclass axiom disjunction head corresponding rule handled def horn framework 
universal restriction dl dl universal quantifier restrictions expressions form see section 
equivalent fol clause form see 
single primitive property may compound expression 
universal restriction occurs subclass axiom implication head corresponding rule easily transformed standard def horn rule 
universal restriction occurs subclass axiom implication body corresponding rule 
general mapped def horn require negation rule body 
existential restriction dl dl existential quantifier universal quantifier restrictions form equivalent fol clause form see 
single primitive property may compound expression 
existential restriction occurs subclass axiom conjunction body standard def horn rule 
existential restriction occurs subclass axiom conjunction head corresponding rule variable existentially quantified 
handled def horn framework 
negation cardinality restrictions dl constructors general mapped def horn 
case negation obvious negation allowed head body def horn rule 
seen cardinality restrictions correspond assertions variable equality inequality fol outside def horn framework 
cases possible simplify dl expression usual rewriting tautologies fol order eliminate offending operator 
example negation pushed inwards combination de morgan laws equivalences np 
simplifications possible equivalences 
sake simplicity assume dl expressions canonical form relevant simplifications carried 
defining dhl recursive mapping dl def horn saw section dl constructors conjunction universal restriction mapped heads rules occur inclusion axiom dl constructors conjunction disjunction existential restriction mapped bodies rules occur inclusion axiom 
naturally leads definition dl languages classes mapped head body lp rules refer languages lh lb respectively 
syntax languages defined follows 
languages atomic name class classes class 
lh ifc class property class lb ifd classes property classes 
mappings section define recursive mapping function takes dl axiom form lb class lh class maps lp rule form mapping defined follows th tb th th th th th th tb tb tb tb tb tb tb tb tb atomic class name classes property variables fresh variable previously 
saw section rules form rewritten rules rules form rewritten rules form rewritten rules example map dl axiom lp rule rewritten pair rules 
call intersection lh lb language atomic name class classes class 
extend deal axioms form classes saw section range domain axioms mapped def horn rules form respectively 
class instance instance property instance axioms mapped def horn facts rules empty bodies form respectively 
extend deal axioms case lh class th th th variables constants 
extend deal property axioms discussed section definition description horn logic description horn logic dhl ontology set dhl axioms form lb class lh class classes properties individuals 
relationships full dl fol discussed section especially straightforward show 
theorem translation semantics mapping preserves semantic equivalence 
dhl ontology def horn ruleset results applying mapping axioms logically equivalent semantics fol set models entailed dhl viewed alternatively precisely expressive fragment def horn range dhl 
expressive power dhl asymmetry dhl classes different sides axioms unusual dl standards easy see includes daml oil subset rdfs part daml oil corresponds simple frame language 
far rdfs concerned saw section rdfs statements equivalent dl axioms form classes properties individuals 
rdfs classes classes atomic class names set dl axioms corresponding rdfs statements clearly satisfy definition dhl ontology 
dhl includes subset daml oil corresponding simple frame language axioms axioms defining primitive hierarchy classes class defined frame 
frame specifies set subsuming classes set slot constraints 
corresponds neatly set dl axioms form lh 
dhl supports extension language include equivalence conjunctions atomic classes axioms corresponding daml oil transitive property inverse property statements 

defining dlp definition description logic programs say def lp rp description logic program dlp dhl ruleset rh 
dlp directly defined lp correspondent def horn ruleset results applying mapping semantically dlp weakening dhl ruleset recall subsection 
dlp expressive class expressive subset dhl 
theorem dlp viewed alternatively precisely expressive subset dl just def horn 
summary expressively dlp contained dhl turn contained expressive intersection dl horn 

translating discussion expressive relationships clear bi directional semantic equivalence dhl fragment dl dhl fragment def horn 
likewise bi directional semantic equivalence dlp fragment dl dlp fragment def horn 
far concentrated direction syntactic mapping dl syntax def horn syntax corresponding def lp def horn def lp dl 
elucidate reasons emphasis 
prime immediate goal semantic web enable rules lp horn top ontologies dl vice versa enable dl ontologies top lp horn rules 
second desirable exploit relatively numerous mature efficient scalable algorithms implementations engines available lp inferencing perform fragment dl inferencing vice versa perform lp fewer available dl engines designed handle expressive languages dlp may optimized dlp ontologies 
third compared def horn dl relatively detailed set quite specific syntactic expressive constructs easier go define translation mapping reverse direction invent structure forms 
space give detailed algorithms computational complexity analyses syntactic translations 
limit relatively high level observations straightforward show 
mapping dl syntax def horn def lp syntax corresponds immediately algorithm computational complexity tractable 
mapping invertible usual manner parsers def horn def lp syntax dl syntax tractably 

inferencing discussed previous section prime goals enable fragment dl inferencing performed lp engines 
section discuss kinds inference typically interest dl lp represented lp dl respectively 
emphasis performing dl inferencing mapping translation lp reasoning engine reverse mapping order perform lp inferencing dl reasoning engine 
particular show inferencing dhl fragment dl reduced translation inferencing lp vice versa inferencing dlp fragment lp reduced inferencing dl 
dl reasoning system different kinds query typically supported knowledge base include queries classes 
class instance membership queries class ground determine individual instance open determine individuals instances classes individual determine named classes instance 
class subsumption queries classes determine subclass 
class hierarchy queries class return named superclasses named subclasses 
class satisfiability queries class determine satisfiable consistent addition similar queries properties membership property subsumption property hierarchy property satisfiability 
call language defined kinds dl queries 
lp reasoning engines basic kind query supported ruleset atom queries 
include 
ground determine ground atom entailed 
open ground special case determine atom variables may appear tuples variable bindings substitutions atom entailed 
call language defined kinds lp queries 
discuss reduce querying dhl fragment dl querying dlp fragment lp mapping assume ruleset derived dl knowledge base queries ground open atom queries answer ground open class instance membership queries class lh class instance iff entails 
atomic class name mapping leads directly atom query 
conjunction result conjunction atom queries instance iff entails entails 
universal restriction mapping gives 
transformed atom query simple kind skolemization replaced constant new instance iff entails 
case property instance membership queries trivial properties atomic instance iff entails 
complete information class instance relationships answer open classes class instance queries obtained class instance queries possible combinations individuals classes note set named individuals classes known size worst case linear size knowledge rule base 
lh classes class subsumption queries reduced similar technique class instance membership queries subclass iff entails new property subsumption queries subproperty iff entails new efficient algorithms doubt practice 
complete information class hierarchy obtained computing partial ordering classes subsumption relationship 
dhl dlp fragment determining class property satisfiability non issue expressive power disposal def horn impossible class property unsatisfiable 
consider reverse direction 
dlp fragment lp predicate unary binary 
atom query viewed named class property 
generally lp open atom query formally reducible set ground atom queries instantiations 
reducible class instance property instance membership queries dl 
recap shown 
theorem inferencing inter operability lh classes querying dhl fragment dl reducible querying dlp fragment lp vice versa 

discussion shown interoperate semantically leading semantic web approaches rules ruleml logic programs ontologies owl daml oil description logic 
begun studying new krs description logic programs dlp defined expressive intersection approaches closely related description horn logic dhl 
shown dlp dhl capture significant fragment daml oil including daml oil subset rdfs simple frame axioms expressive property axioms 
ontologies daml ontology library inside fragment daml oil 
immediate result lp engines reasoning ontologies reasoning possibly large numbers facts web page annotations vocabulary ontologies 
represents step realising complete interoperability rules ontologies layering rules top ontology languages semantic web stack 
believe study expressive intersection provide firm foundation investigations expressive languages including expressive union rules ontologies 
tim berners lee harold boley dan connolly michael dean stefan decker richard fikes patrick hayes jim hendler deborah mcguinness jos de peter patel schneider raphael volz members daml oil joint committee helpful comments discussions 

baader calvanese mcguinness nardi patel schneider editors 
description logic handbook 
cambridge university press 
baral gelfond 
logic programming knowledge representation 
journal logic programming 
borgida 
relative expressiveness description logics predicate logics 
artificial intelligence 
guha 
resource description framework rdf schema specification 
candidate mar 
www org tr cr rdf schema 
calvanese de giacomo lenzerini 
decidability query containment constraints 
proc 
pods pages 
dean connolly van harmelen hendler horrocks mcguinness patel schneider stein 
owl web ontology language july 
www org tr owl ref 
donini lenzerini nardi nutt 
complexity concept languages 
proc 
kr pages 
dowling gallier 
linear time algorithms testing satisfiability propositional horn formulae 
journal logic programming 
madnick grosof 
financial information integration presence equational ontological conflicts 
proc 
wits 
madnick grosof 
knowledge integration overcome ontological heterogeneity challenges financial information systems 
proc 
appear 
gr del restraining power guards 
symbolic logic 
grosof 
representing business rules semantic web situated courteous logic programs ruleml 
proc 
wits 
grosof labrou chan 
declarative approach business rules contracts courteous logic programs xml 
proc 
ec 
grosof poon 
representing agent contracts exceptions xml rules ontologies process descriptions 
proc 
international workshop rule markup languages business rules semantic web 
horrocks sattler 
ontology reasoning shoq description logic 
proc 
ijcai pages 
horrocks sattler tessaris tobies 
decide query containment constraints description logic 
proc 
lpar 
horrocks sattler tobies 
practical reasoning expressive description logics 
proc 
lpar pages 
lloyd 
foundations logic programming second extended edition 
springer series symbolic computation 
springer verlag new york 
reeves wellman grosof 
automated negotiation declarative contract descriptions 
computational intelligence 
schild 
correspondence theory terminological logics preliminary report 
proc 
ijcai pages 
schmidt schau smolka 
attributive concept descriptions complements 
artificial intelligence 
vardi 
modal logic robustly decidable 
immerman kolaitis editors descriptive complexity finite models 
american mathematical society 
