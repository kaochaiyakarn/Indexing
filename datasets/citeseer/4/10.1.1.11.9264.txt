semantic model hypertext data caching kai cheng department social informatics graduate school informatics kyoto university kyoto japan db soc ac jp school computer university china 
propose semantic model capture semantic locality hypertext access client side caching 
characterize hypertext data perspective clients define semantic region cluster semantically related logical documents 
logical document defined sequence subsequently visited inter connected documents turn composed container file optionally set component files 
model easy deal temporal locality spatial locality semantic locality hypertext access 
verify proposed model experimental hypertext system called 
generate set workloads assess performance set caching algorithms synthetic workloads experimental hypertext system 
hypertext hypermedia data gained importance due suc cess world wide web hypertext transfer protocol 
salient feature hypertext system users search desired data primarily navigation links document query facilities just pruning navigation space 
inter active nature hypertext navigation poses challenges system performance especially client server architecture downloading document remote servers time consuming reading local disk 
caching widely alleviate performance bottlenecks com puter architecture network database systems 
particularly caching utilizes computational storage resources client machines key solution achieve high performance client server database systems 
semantic caching advanced form client caching suited client resources maintains semantic description cached data called semantic region capture semantic locality data usage 
seman tic caching gives higher priority data relevant frequently data believes semantically related data accessed near 
query retrieval database system semantic description cached data obtained formulas query constraint 
example fi om suppose want find employees salary exceeds age years old 
issue query constraint formula age 
caching data explicit semantic description easily query results serve subsequent query requests semantic containment remainder query issued get complimentary data 
navigation hypertext system explicit semantic description altogether user expresses information needs interacting system repeatedly choosing new data looking current data items 
result caching hypertext data utilize explicit semantic description capture semantic locality 
problem caching hypertext data hypertext documents inter connected hyperlinks document composed set small components media 
take advantage features suitable model essential 
modeling hypertext data researched hypertext community :10.1.1.27.7665
dexter model identifies relevant abstractions wide range existing hypertext systems providing common vocabulary meaning order talk hypertext systems 
fundamental open hypertext model fohm expands open hypermedia protocol data model describe broader set hypermedia domains navigational domain spatial domain taxonomic domain meet requirements interoperability hypertext systems 
protocol concerned navigational hypertext fohm capable expressing domains 
hypertext machine ham architectural description general purpose transaction multi user server hypertext storage sys tem 
stotts trellis model formal specification hypertext petri nets 
hypertext formalized graphs automata authors studied dynamic properties hyper text terms reader experience formalizing readers see interact hypertext system 
web machine web automata computation models querying web paid attention navigational nature web 
afore mentioned models aimed facilitating authoring activity system design attempted investigate computation mechanism designing suitable query languages 
capture temporal locality spatial locality semantic locality need model handle structural organization browsing semantics content relevance perspective user 
client cache see restricted fraction hypertext system tradeoff model complexity associated overhead current suitable caching purpose 
propose new semantic model capture semantic locality hypertext data caching 
define semantic region cache cluster semantically related logical documents 
logical document defined sequence subsequently visited interlinked documents turn composed container file optionally set component files 
verify proposed model implementing experimental hypertext database called 
generate set workloads assess performance set caching algorithms synthesized workloads simulated hypertext system 
rest organized follows 
section proposes semantic model 
section describes virtual hypertext database proposed model called workloads various kinds locality 
section gives set caching replacement algorithms take account various forms locality describing simulation results obtained synthetic workloads simulated hypertext system 
section concludes describes directions 
modeling cached hypertext data hypertext data collection documents nodes containing cross links aid interactive browser program allow reader move easily document 
extension hypertext include media sound graphics video termed hypermedia usually just called hypertext especially advent world wide web html 
section develop semantic model account structural semantic features hypertext data 
particularly define concept semantic region hypertext data caches 
model characterizes collection data hypertext cache abstraction levels physical documents logical documents semantic regions physical structure logical structure semantic structure respectively 
container fig 

document composed hypermedia components physical structure hypertext data capture spatial locality hypertext access cache understand physical structure hypertext documents basic elements hyper text system 
describe feature mainly dexter model 
document basic element hypertext system 
define hypertext document composition container file optionally set media component files represent media text image audio video fig 

container file consists textual content sequence terms sentences paragraphs anchors hold places media components 
anchor point document representing start point link 
anchor specifies valid range anchor text indicating part document belongs anchor 
anchor texts describe linked document navigation guide information user seeking 
anchor text denoted text 
anchoring provides mechanism addressing locations content document 
link basic element hypertext system 
link represents rela tions documents 
kinds links 
link anchor anchor called span span link link anchor document called span node link fig 

consider span node link represent link triplet source anchor document destination document link 
anchor anchor anchor span span link span node link fig 

types link documents evaluated terms size recency frequency refer ence 
measure relevance document interested topics call regions textual content terms sentences evaluated basis techniques information retrieval ir vector space model vsm tf idf scoring scheme 
content document expressed title sentence describes content document body sequence terms document 
media component files embedded hold places container files 
media component file shared documents component file deleted garbage collector determined caching schemes determined existing cached documents 
hypertext database modeled directed hypergraph documents nodes links edges 
model suitable client caches client cache see structure potential hypergraph see paths followed user hypergraph 
predict user uses hypertext database caching decision making model paths user traverses hypergraph 
logical documents logical structure hypertext data links created hypertext authors reflect readers think cache sees subset fraction paths sequences links traversed 
navigational access users apt travel data back forth accordance paths 
data visited just location content 
define path frequently traversed sonic users logical document 
logical representation user perspective hypertext data 
words authors created hypertext database thing client interested 
distinguishes hypertext created point view hypertext authors designers 
fig 

logical document repeating traversal paths fig 
depicts logical documents hypertext database 
starting user chooses follow link reasonable think user cache logical unit contains specific needs 
path logical called entry traversed path called 
logical documents measured terms size recency frequency 
size logical document length path number documents contained path 
logical document defined successful traversal starting entry document walking link second document path limited time interval reaching terminal document 
logical documents represent readers viewpoint hypertext data 
different paths leading document imply different perspectives user deal difference define content logical document title union anchor texts contained path title terminal document 
shown fig 
suppose document repeating paths logical document title text title body logical document fig 

link navigations imply semantic specificity logical document di documents repeating traversal path ai anchors leading subsequent document 
user follows link anchor follows link anchor 
text ai anchor text tile body title body document respectively 
define content logical document li text title ds body ds string concatenation operation typical programming language 
example anchor texts path logical document travel kyoto list bus stations kyoto station title terminal document access logical document logical title travel kyoto list bus stations kyoto station access 
note logical documents different sizes depending configuration implementation actual usage status 
special case size means document included logical document 
visited document logical document 
semantic region semantic structure hypertext data semantic regions concrete description user interests play important role identifying preference users 
denote semantic region radius semantic region 
semantic region cluster logical documents semantic centroid logical document belongs exactly suitable cluster closer cluster 
centroid cluster represented feature vector vector space model vsm tf idf scoring scheme 
example feature vector presentation respect bread butter salt knife 
semantic region id region logical document fig 

semantic region adaptive clustering logical documents new documents come continuously determining semantic regions hypertext caching requires efficient single pass clustering algorithms consume small amount memory 
fortunately exist number streaming data algorithms achieve high quality clustering 
general clus tering problem cane described follows number clusters clustering algorithm try find centroids data point assigned cluster defined centroid nearest 
known median problem 
suppose quality clustering measured sum square distance data points randomized algorithm lsearch usually find near optimum solution nm nk log time proportional number data points small number 
evaluate various clustering algorithms assume know suitable near optimum algorithm cluster new logical documents received 
concentrate exploring higher level semantic information help determine potential usage hypertext data 
content logical document parts title body need method combine 
terms title generally important body show stress title body 
suppose set logical documents hypertext cache 
li logical document content title body title vi tf idf feature vectors title body li respectively 
comprehensive feature vector li calculated weighted sum title body parameter larger 
combination feature vectors title part body part enable distinguish logical documents terminal document 
consider example access kyoto station 
reader may document list ntt western japan kyoto office location terminal document 
logical document general travelers second logical document suitable business travelers 
benchmarking hypertext semantic caching verify proposed model evaluate caching schemes consideration temporal spatial semantic locality set experimental hypertext database system testbed 
mentioned currently concentrate evaluate semantic information derived semantic model help better cache management 
virtual hypertext database need generate elements need employ hypertext database management system maintain 
simplify proposed model need maintain set features provide necessary data calculating logical documents semantic regions 
put aside real content documents logical documents dealing feature engineering done ir re searchers 
calculation involved content documents omitted time 
generating set component files different size media type 
generate set container files size corresponding set component files 
consider terms tf idf scores respect container file time need complicated implementation 

set components components element triplet id media type size 

set documents documents id set component id set terms corresponding tf idf 
set logical documents aid sequence linked documents id 
set semantic regions semantic centroid vector weighted terms threshold logical document generated choosing sequence documents container files 
sequence length indicating documents 
generating accesses hypertext database synthesize workloads 
method guarantee temporal locality request stream 
generate new request pick random number take different actions depending random number 
number higher certain constant new request issued 
number lower re issue request issued 
inherent hit ratio request stream 
workload temporal locality revisit basic objects workload spatial locality consider document composition workload spatial locality consider link structure workload semantic locality aware semantic regions table 
properties synthesized workloads need re issue old request choose request issued requests ago probability proportional 
determine maintain sum number requests issued 
time necessary issue old request pick random number call calculating chooses essence chosen probability issued requests re issued 
temporal locality combined hypertext structures semantic regions derives kinds locality spatial locality semantic locality spatially related semantically related data items re requested short period time 
apply method maintaining temporal locality component level document level path level semantics level obtaining groups request streams 
table lists primary profiles workloads 
workload generated basis locality basic objects considering structural semantic locality 
workload locality documents media components accessed container files accessed hand 
workload logical documents 
accessed logical document re accessed near due temporal locality logical documents 
logical document accessed member documents high probability accessed component files documents accessed consequently workload locality semantic regions 
semantic region referenced member logical document referred similar logical documents semantic region reused near 
semantic region logical documents reused 
call temporal locality semantic regions logical documents multiple temporal locality 
semantic caching semantic model developed far design algorithms cache management 
baseline algorithm lru proposed neil 
basic idea lru keep track atk time th infinitely large information estimate popularity data item 
usually called dynamic access fi data item 
cache algorithm try find fi data smaller access fi replace popular data larger access fi 
size adjusted lru lru basic objects hypertext databases identical sizes extend lru deal heterogeneous sizes hypertext objects 
idea normalize penalty data size ize normalized cost function measure potential data item 
consequently obtain size adjusted lru call lru 
structure aware caching lru hypertext data structure component data depend container container data item accessed component data automatically accessed 
conversely container data item replaced cache related components deleted shared containers 
far kind structure dependency addressed 
extend lru incorporate property assuming component file maintains indicating documents currently sharing component 
counter zero cache priority component depends container 
containers removed counter zero component file deleted similar idea garbage collection memory management 
way obtain structure aware lru call lru 
algorithm lru content sensitive lru require space unused cache space set semantic regions request data item cache return copy retrieve database po gets legion size space empty po po size space empty space size empty po lru popular path aware caching lru extension standard lru making frequently traversed paths logical document 
recall logical document larger granularity cache management 
care links maintain large collection links 
user perspective link may little interest visited near 
times traversals recorded dynamic access frequency logical document calculated 
time user visit document path cache manager give higher priority documents paths logical documents frequently 
popular path aware lru called lru 
content sensitive caching lru reach point develop semantic caching scheme 
semantic region navigational access built document clustering techniques 
define functions managing priori ty queues semantic regions logical documents documents basic objects single physical objects files including containers components 
returns documents embed object returns objects embedded document gets returns semantic regions document returns documents semantic region function selecting semantic region highest priority set semantic regions function selecting semantic region lowest priority set semantic regions returns document priority set returns object priority set experimental evaluation assess performance proposed algorithms synthetic workloads obtained section 
studies caching algorithms trace driven experiments event driven experiments choose event driven approach reasons 
best knowledge suitable benchmarks available purpose include collection hypertext data workloads respective data 
second algorithms especially content sensitive caching rely techniques research fields usage mining text clustering thorough evaluation specific techniques difficult address 
fig 

hit ratios workload fig 

hit ratios workload fig 
shows results hit ratios experiments workload spatial semantic locality considered 
plots show lru better including lru performed 
reason structure aware semantic aware algorithms try bias documents closer spatially semantically ones workload lacks characteristics 
explain results fig 
workload lru performed better workload logical documents semantic region tends referenced time 
semantic locality important feature data access exploited semantic caching schemes traditional query retrieval database systems 
navigation hypertext database system web advanced locality incorporated explicit description semantic regions form access 
proposed semantic model took account structural feature semantic feature hypertext data 
model especially suitable navigational access seeking desired data hyperlinked information space 
verified proposed model creating experimental hypertext database called generated workloads different locality 
workloads analysis semantic caching schemes hypertext data 
preliminary experiments done evaluate semantic caching schemes 
include textual content test efficiency verity clustering schemes parameterizing process constructing semantic regions 
acknowledgments authors zhang interesting discussions 

serge abiteboul victor vianu 
queries computation web 
proceedings th international conference database theory icdt pages january delphi greece 

afrati 
hypertext model supporting query mechanisms 
proceedings european conference hypertext pages 

aggarwal joel wolf philip yu 
caching world wide web 
ieee transactions knowledge data engineering 

paul bradley usama fayyad cory reina 
scaling clustering algorithms large databases 
proceedings fourth international conference knowledge discovery data mining kdd pages new york city new york usa august 
aaai press 

andrea 
matching hypertext models hypertext systems approach 
proceedings european conference hypertext pages 

brad campbell joseph goodman 
ham general purpose hypertext abstraction machine 
communications acm july 

chris clifton hector garcia molina 
indexing hypertext database 
pro ceedings th international conference large data bases vldb pages brisbane queensland australia august 
morgan kaufmann 

shaul dar michael franklin bjorn jonsson divesh srivastava michael tan 
semantic data caching replacement 
proceedings nd international conference large data bases vldb bombay india september 
www 
cs 
ud 
edu pro ect papers 
ps 
gz 

michael franklin 
client data caching 
kluwer academic press boston 

richard david stotts 
functional meta structure hypertext models systems 
electronic publishing 

frank halasz mayer schwartz 
dexter hypertext model 
communications acm 

alberto mendelzon tova milo 
formal models web queries 
proceedings cm ct sigmod sigart symposium principles database systems pods pages tucson arizona 

david millard luc moreau hugh davis siegfried reich 
fohm fundamental open hypertext model investigating interoperability hypertext domains 
hypertext pages 

luc moreau wendy hall 
expressiveness links hypertext sys tems 
computer journal 

nina mishra adam meyerson sudipto guha rajeev 
streaming data algorithms high quality clustering 
interna tional conference data engineering icde 

elizabeth patrick gerhard weikum 
lru page replacement algorithm database disk buffering 
proceedings cm mod international conference management data pages nev york 

park 
structural properties hypertext 
uk conference hypertext pages 

gerard salton christopher buckley 
term weighting approaches text 
karen sparck jones peter editors information pages 
morgan kaufmann 


systems modern architectures 
addison wesley 

marc jerzy jan van den bussche 
distributed computation web queries automata 
proceedings acm sigact sigmod symposium principles database systems pods pages madison wisconsin usa 

david stotts richard furuta 
programmable semantics trellis 
hypertext pages new york 

frank wm 
tompa 
data model hypertext database systems 
acm information systems 

santos maria cristina dc oliveira paulo cesar 
navigation oriented hypertext model statecharts 
hypertext pages 

tian zhang raghu ramakrishnan miron livny 
birch efficient data clustering method large databases 
gmod conference pages 
