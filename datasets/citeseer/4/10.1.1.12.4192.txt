uml semantic web transformation approaches sabou stuckenschmidt department multimedia human computer interaction cwi kruislaan box gb amsterdam netherlands cwi nl artificial intelligence department vrije universiteit de boelelaan hv amsterdam netherlands marta heiner cs vu nl 
perspective role uml conceptual modelling language semantic web important research topic 
argue uml key technology overcoming ontology development bottleneck wide acceptance sophisticated tool support 
transformational approaches promising way establishing connection uml web ontology languages 
compare proposals defining transformations uml web ontology languages discuss different ways handle conceptual differences languages 
identify commonalities differences approaches point open questions addressed existing approaches 
called semantic web aims enriching world wide web semantic information enable systems access information efficiently 
purpose number annotation languages developed order annotate information resources content related meta data 
order create interpret compare meta data annotations ontologies explicit definitions vocabulary information source needed 
meta data generated content information source development ontologies major bottleneck scaling semantic annotations 
overcoming modelling bottleneck requires large number professional ontology builders equipped powerful modelling tools 
current situation far required 
today ontologies built small number people cases researchers prototype tools provide basic functionality editing storing ontological models 
tools little common professional development environments know area software engineering 
admittedly tool support ontological modelling improved years editors available support consistency checking import existing ontologies visualization ontologies moment unrealistic claim give tools non experts ontological modelling expect modelling results 
unified modelling languages uml identified way providing partial solution modelling bottleneck 
standard modelling language software engineering uml received wide attention academia professional software development 
consequence uml better supported terms tools available expertise emerging semantic web languages 
wide acceptance uml ideal language critical mass people build high quality models information semantics semantic web 
number researchers recognized importance uml ontological modelling especially semantic web 
discuss approaches idea transforming domain models uml semantic web languages focusing actual transformation languages 
contrast different ideas uml semantic web languages concluding resulting differences languages 
high level discussion turn interest transformations languages 
identify slightly different cases employing transformations uml semantic web languages 
outline existing approaches specific solutions transformation problem 
discussion different choices different approaches identify number open issues respect transformation essential uml semantic web 
conclude outline research agenda effective uml semantic web 
uml semantic web languages common feature transformation approaches uml semantic web fact focus languages 
important aspects methodologies modelling tools reasoning support assumed addressed corresponding languages communities 
fact standardization uml owl hand stimulated developments languages take advantage transformed model respective language 
consequently central question transformation approaches concerned relation uml semantic web languages 
order understand technical differences important recall little bit history motivation underlies languages 
unified modelling language uml aim uml language designed order integrate competing proposals modelling languages area software engineering 
integration effort undertaken order push object oriented design methods industrial practice providing standard method development processes transparent 
principles uml primarily designed language humans document communicate software designs 
consequence main notation uml de uml semantic web fined terms graphical model formal language 
order capture formal constraints additional constraint language ocl 
integration different pre existing proposals uml union approaches intersection aims maximal expressivity 
order cover aspects system language uses different interacting diagram types covering specific aspect system 
semantics fact uml consists different diagram types interact difficult define uniform semantics 
approach define semantics uml covers diagrams meta model approach 
approach modelling elements language defined terms uml class diagrams ocl constraints 
attempts define formal semantics parts language class diagrams state charts 
validation transformation methods uml models defined basis partial semantics 
order capture various aspects complex software systems uml consists twelve different diagram types omg designed describe system specific point view 
diagrams describe static application structure different aspects dynamic behavior represent ways organize manage application modules 
class diagrams belong category center attention exists direct relation elements parts ontology classes hierarchies class attributes axioms 
language features especially system structure part mentioned description transformation approaches section 
complete description uml refer official specifications 
web ontology language owl aim goal web ontology language owl provide standard language representation ontologies world wide web 
standardized language support development web ontology infrastructure providing editors storages inference engines meta data annotation tools 
principles order fit general web architecture owl adopts number principles including xml encoding backward compatibility rdf schema current standard conceptual modelling 
language designed handled systems human users 
provision founded logical semantics design principle owl 
developers owl follow principle minimality including modelling features possible owl language restricted set features logical reasoning feasible 
semantics owl founded semantics spirit description logics established interpretation mapping domain :10.1.1.126.8320
language close specific description logic called 
existing sound complete reasoning procedures logic provide reasoning support owl models 
result ongoing process defining standard ontology web language number intermediate versions language defined 
languages differ features underlying design principles similar 
different transformation approaches refer different language versions briefly outline development point 
details differences languages refer original language specifications 
oil ontology inference layer oil developed knowledge project language support logical reasoning ontologies :10.1.1.29.1057
principle language different levels expressiveness lowest level equivalent rdf schema 
daml darpa agent markup language daml developed parallel oil 
goal provide common basis daml project 
daml primarily originated area frame knowledge representation systems influenced formal logic oil 
daml oil name daml oil resulted decision create joint language basis existing daml oil 
language replaced daml standard language daml project defined official committee 
versions daml oil exist march version widely supported december version 
owl web ontology language owl label daml oil undergoes process recommendation 
owl daml oil different levels expressivity included language 
exist versions language owl lite includes restricted vocabulary sufficient satisfy primarily user needs owl full complete owl vocabulary 
comparing natures languages draw 
hand complement 
uml designed model building human experts owl designed run time provide guidance intelligent processing methods 
complementary character justifies idea combining owl uml order overcome acquisition bottleneck 
hand see translation trivial differences languages 
challenge identify corresponding elements languages difficult uml biased implementation 
second sure translations backed semantics languages 
existing transformation approaches benefits uml daml oil led research uml modelling syntax knowledge representation languages daml standard uml models transformed oil daml oil ontologies :10.1.1.29.1057
direction arose due fact current ontology representation languages lack representation possibilities graphical front 
emerged language daml sufficient tool support uml commonly accepted graphical notation build daml ontologies 
discussed previous section uml ontology representation languages certain incompatibilities 
uml semantic web incompatibilities prevent representation elements ontology representation languages help uml 
order avoid number extensions uml proposed 
second direction addresses problem reusing previously specified knowledge 
uml models easily exchanged web reasoning possibilities uml models quite restricted see arguments section 
overcome difficulties propose transformations uml ontology representation languages 
directions induced need generate transformation rules uml ontology representation languages 
differently aimed matching languages caused differences proposed mappings 
direction requires uml suited representing daml ontologies second addresses question uml concepts represented ontology representation language preserving semantics possible 
rest section introduce approaches discuss transformation issues detail 
uml tools daml direction represented relationships uml daml investigated order provide support visualizing complex ontologies managing ontology development process :10.1.1.29.1057
proposes mapping languages gives solution problematic differences languages 
mapping done uml point view assuming uml represent daml ontologies 
consequence assumption number uml class diagram elements mapping table 
focused daml remains valid daml oil 
argued related investigations biggest obstacle way map uml ontology representation languages notion 
glance notion property knowledge representation languages corresponds notion association uml 
property class modelling element web knowledge representation languages starting rdf 
means exist independent element language attached constructs classes 
time uml associations connected classes association ends 
association exist explicit connections classes 
means association unique 
associations name connected different classes considered different 
uml associations express local restrictions instances classes daml properties combination elements express local global restrictions 
association domain range domain class 
difficult propose mapping correct conceptual level 
different approaches proposed tackle problem discussed 
handle difference notions uml association daml property proposes extension uml meta model :10.1.1.29.1057
suggests enrich meta object facility mof specification notions property shown 
property restriction modelled diagram uml nd toc restriction uml extension property restrictions classifiers enabling class modelling primitives uml 
property modelled aggregation zero association ends allowing exist connected class 
association described 
belongs erson pa rtm ent daml property restriction uml diagram diagram notions property association overlapping extent property relates daml element 
property constrained zero 
related classes 
corresponds daml construction property restriction class 
consider diagram 
represents restriction 
applying uml daml mapping daml translation uml diagram result section ontology depicted 
example gives short scenario transformation works 
daml class rdf id person rdfs label person rdfs label rdfs subclassof daml restriction daml onproperty rdf resource belongs daml rdf resource department daml restriction rdfs subclassof daml class daml class rdf id department rdfs label department rdfs label uml semantic web daml class daml property rdf id belongs inclusion proposed extension new uml mof specification impact existing tools authors believe impact bigger anyway caused new specification 
lead general acceptance uml modelling tool ontologies 
transformations standard uml models ontology representation languages discuss representative approaches direction proposes mapping supports ontology extraction uml diagrams second reports uml diagrams modelling domain specific knowledge 
extracting daml oil ontologies uml diagrams proposes transformation uml diagrams daml oil ontologies preserving semantics uml concepts 
emerged observation exist large sources ontological knowledge available design documents existing applications 
ontology extraction uml diagrams converting powerful ontology representation language enable reasoning ontologies allow knowledge interchange heterogeneous environments 
main contribution lays introducing way translating uml class diagrams rdf daml oil 
rdf considered subset daml oil uml rdf transformation discussed 
issues differences uml daml daml oil discussed relevant :10.1.1.29.1057:10.1.1.29.1057
purposes force look different perspective transformation task 
mapping proposed uml element possible map daml oil constructs 
complete mapping table reader referred 
order better understanding specificity mapping main issues discussed 
association unique uml mapped objectproperty unique identifier property name 
possible distinguish different associations name different daml oil properties 
uml attributes mapped similar way attribute local scope class 
attribute mapped datatypeproperty unique identifier attached 
rationale mapping attribute daml datatypeproperty daml objectproperty usually type range attribute data type 
uml attribute object type situation occurs infrequently 
mapping assumption properties object range modelled associations attributes 
order preserve semantics uml associations distinguish association ends taxonomy association types introduced 
notion association taxonomy divided subtypes binary association unidirectional association aggregation composition decomposed specific subtypes introduced mapping purposes 
lowest level decomposition association types name unnamed binary unidirectional association direction part opposite direction aggregation composition part taxonomy association types part part role names attached association ends 
associations particular diagram modelled sub properties corresponding association types taxonomy 
point form segm ent unnamed binary association role names multiplicity constraints binary association navigable ways mapped daml objectproperty elements inverse daml inverseof 
properties name association unique identifier attached just identifier serves property name case unnamed association distinguished adding underline symbol 
need distinguish comes need map possibly role names multiplicity constraints attached ends association 
roles give additional meaning roles classes relation role specified subclassof association attached 
cardinality constraints specified associations roles 
example clarifies issues 
daml class rdf id boundary point rdfs label boundary point rdfs label rdfs subclassof daml restriction daml mincardinality daml onproperty rdf resource daml rdf resource boundary segment daml restriction rdfs subclassof rdfs subclassof daml restriction daml mincardinality daml onproperty rdf resource daml rdf resource boundary segment daml restriction rdfs subclassof daml class daml objectproperty rdf id uml semantic web rdfs subpropertyof rdf resource daml objectproperty daml objectproperty rdf id rdfs subpropertyof rdf resource binary unnamed daml objectproperty daml class rdf id boundary segment rdfs label boundary segment rdfs label rdfs subclassof daml restriction daml cardinality daml onproperty rdf resource form daml rdf resource boundary point daml restriction rdfs subclassof rdfs subclassof daml restriction daml cardinality daml onproperty rdf resource daml rdf resource boundary point daml restriction rdfs subclassof daml class daml objectproperty rdf id form rdfs subpropertyof rdf resource daml objectproperty daml objectproperty rdf id rdfs subpropertyof rdf resource binary unnamed daml objectproperty unidirectional association mapped way difference navigable way sub properties association distinguished direction opposite direction 
sub properties inverse 
issues apply aggregation composition different sub property names distinguish ways readability 
domain specific transformations increasing interest distributed problem solving configuration tasks arose need represent configuration services web services 
deal simultaneously multiple service providers network interact commonly representation formalism required 
semantic web languages oil daml oil candidates formalism 
time configuration system modelling requires participation domain experts knowledge engineers 
knowledge representation languages difficult modelling stage 
provides set rules automatically transform configuration models represented uml oil representation 
research corresponds second direction existing transformation approaches 
uml elements mapping proposed constitute configuration ontology 
set elements required uml configuration profile consists classes generalizations associations aggregations part relationships 
compatibilities requirements introduced stereotype 
resources described produces dependencies component types 
mapping basic language constructs similar approaches 
specific issue discuss way treating uml part relationships oil 
example illustrates role computer role screen lbp part graphical representation part relationships taken slot def inverse domain range slot def inverse domain range slot constraint min cardinality slot constraint max cardinality slot constraint min cardinality lbp slot constraint max cardinality classes involved relation distinguished part 
roles attached part relation denoted part part names 
multiplicities represented lower upper bounds part 
aggregation composition considered disjoint 
additional restriction oil specified indicate part component connected component composition connected component 
source target classes relation mapped domain range oil elements occur due restrictive abilities oil respect daml oil 
distinctive feature daml oil ability define local constraints domain range correspond uml notion association see section 
uml semantic web discussion summary comparison introducing main features approaches sections underline differences similarities 
differences main difference approaches way treat semantics uml 
aims providing presentation syntax daml 
uses stereotypes mapping proposes extension uml meta model uml expressive 
extension closes gap languages uml suited representing daml ontologies 
approaches problem different manner 
semantics different kinds associations included taxonomy explicitly transformed daml oil ontology 
property corresponds certain kind association uml diagram defined sub property corresponding association type taxonomy 
way semantics associations preserved performing transformation language 
part resulting ontology example ask relation certain entities 
saw application transformation task configuration domain 
research shows specific way treating uml diagram elements representing configuration model oil 
problem correspondence uml association daml property introduced example part relationships 
part relationships important configuration domain proposes way explicitly represent intended interpretation relationships oil 
chooses specific ontological interpretation part relation suited domain hand 
similarities similarities mappings shown table 
table intersection mappings order specify set elements mapped similarly approaches 
comparing different approaches transforming uml models ontology languages semantic web recognized agreement translate subset uml class diagrams general see table 
common core different approaches take different decisions translate constructs 
actual choice specific translation result purpose translation 
think situation naturally evolved parallel different authors points successful strategy transformation task 
strategy start common core mentioned specific transformation choices intended resulting ontology 
apart general strategy transforming uml diagrams main insight got looking existing approaches fact open questions oil daml oil pure uml daml class def daml class class daml class class def rdfs label class name rdfs label subclass rdfs subclassof generalization rdfs subclassof slot def daml datatypeproperty attribute daml objectproperty daml datatypeproperty slot constraint cardinality daml attribute type daml slot constraint daml objectproperty binary unidirectional association daml domain daml class source class association daml class rdfs subclassof rdfs subclassof range daml target class association daml cardinality cardinality multiplicity cardinality min cardinality daml cardinality unique max cardinality daml cardinality absence absence absence min cardinality daml mincardinality daml mincardinality min cardinality max cardinality min cardinality max cardinality min cardinality max cardinality daml mincardinality daml maxcardinality daml mincardinality daml maxcardinality unique daml cardinality daml cardinality daml mincardinality daml maxcardinality table overview similar transformation choices :10.1.1.29.1057
daml mincardinality daml maxcardinality concerning transformation uml owl 
discuss open issues consider important 
implementation question implement transformations comes naturally report distinct approaches sense 
simple way perform transformations take advantage xml encoding xmi serialization uml daml write xslt file defines transformation tree structures 
method translate xmi rdf java files 
method transforming xmi daml oil 
spite simplicity implementation experience shows xslt quite cumbersome wants express complex mappings 
addition sensitive format input file 
exist initiatives provide plug ins uml editors extending functionality possibility export uml diagrams daml 
project plug developed rational rose uml editor argouml 
similarly tool suite includes module translating uml daml 
tools currently early development stages expect effort required developing robust tools translations 
reasoning existing uml editors offer basic services checking uml models syntactic errors 
range support checking correctness model gets considerably wider model translated formal language 
sylvester va com index html com www rational com uml semantic web check consistency models 
aspect especially important comes ontology development testing 
existing ontology editors offer consistency checking service 
project tool check consistency modelled ontologies 
prolog planned migrated jess tool returns parsing consistency errors 
theorem prover check logical inconsistencies 
similarly oiled ontology editor uses fact fast classification terminologies consistency checking 
fact description logic dl classifier modal logic satisfiability testing 
second formal representation allows deriving new knowledge inference engines built particular representation 
example fact derive new facts original model 
direct way assessing quality existent transformation schemes check quality output measure amount information derived outputs 
class diagrams mappings described address content class diagrams 
stated earlier uml richer 
class diagrams center attention exists direct relation elements parts ontology classes hierarchies class attributes 
types diagrams express different types information 
example state charts activity diagrams useful service process related ontologies 
sense proposal exists model daml uml diagrams doubt uml diagrams model various knowledge aspects semantic web 
rules uml provides language expressing rules ocl 
ocl complex diagrams suppose uml users experience ocl daml 
previously developed ontologies describe axioms ocl 
considerations imply translation ocl daml beneficiary supporting modelling exploiting existing models 
research direction hampered major problems 
ocl formal semantics difficult map formal language 
proposals formal semantics ocl 
second daml developed express rules 
research going develop rule language semantic web daml ruleml 
extended support modelling existent transformations guaranteed transforming uml model daml transforming daml file back uml lead diagrams 
transformation preserve information allow modelling inferencing parallel uml model transformed formal language new information derived back modeler uml format 
desirable functionality powerful modelling tools 
observation elements class diagrams model light weight ontologies 
enriching ontologies rules axioms possible ocl 
build complex ontologies uml modelling tools support transformations class diagrams ocl rules 
com uml mapping htm hardman martin gogolla valuable comments improvement frank van harmelen suggestions early stages 
hart smith holmes aronson :10.1.1.29.1057
extending uml support ontology engineering semantic web 
fourth international conference uml toronto october 
waldinger 
consistency checking semantic web ontologies 
international semantic web conference iswc sardinia italy june 
berners lee hendler lassila 
semantic web 
scientific american 
knapp 
formal semantics ocl 
martin gogolla cris editors uml unified modeling language 
modeling languages concepts tools 
th international conference proceedings volume lncs pages toronto canada october 
springer 

uml semantic web 
proceedings international semantic web working symposium swws 
www semanticweb org swws program full pdf 
dean connolly van harmelen hendler horrocks mcguinness patel schneider stein 
web ontology language owl version 
working draft november 
www org tr owl ref 
donini lenzerini nardi schaerf :10.1.1.126.8320
reasoning description logics 
gerhard brewka editor principles knowledge representation studies logic language information pages 
csli publications 

ontology extraction uml diagrams 
master thesis vrije universiteit amsterdam august 
friedrich 
uml domain specific language construction knowledge configurations systems 
international journal software engineering knowledge engineering 
fensel horrocks van harmelen mcguinness patel schneider 
oil ontology infrastructure semantic web 
ieee intelligent systems 
fensel van harmelen ding klein akkermans broekstra kampman van der meer sure studer krohn davies engels iosif kiryakov lau reimer horrocks :10.1.1.29.1057
knowledge nutshell 
ieee computer 
hendler mcguinness 
darpa agent markup language 
ieee intelligent systems november december 
horrocks 
fact system 
de swart editor automated reasoning analytic tableaux related methods international conference tableaux number lecture notes artificial intelligence pages 
springer verlag berlin may 
object management group 
unified modeling language uml 
www omg org uml 
object group 
meta object facility mof specification 
cgi omg org docs formal pdf april 
van harmelen horrocks 
description daml oil ontology markup language 
www daml org html december 
van harmelen patel schneider horrocks 
description daml oil march ontology markup language 
www daml org html march 
