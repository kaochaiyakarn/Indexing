xirql query language information retrieval xml documents norbert fuhr university dortmund germany fuhr ls cs uni dortmund de document centric view xml query language xirql 
current proposals xml query languages lack ir related features weighting ranking relevance oriented search datatypes vague predicates semantic relativism 
xirql integrates features ideas logic probabilistic ir models combination concepts database area 
processing xirql queries path algebra serves starting point query optimization 

steady growth www retrieval web documents important 
html provides visual semantic markup 
information systems need information logical structure prerequisite interoperability web information systems 
order overcome difficulties www consortium developed xml extended markup language standard 
standard step definition query language allows formulation queries respect logical structure 
different views xml supported document centric view focuses xml applications exchanging structured documents traditional sense markup mainly serves exposing logical structure document 
data centric view uses xml exchanging data structured form classical edi applications orders bills spreadsheets databases 
funded part german bmbf project carmen sfc 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigir september new orleans louisiana usa 
copyright acm 
kai gro johann university dortmund germany ls cs uni dortmund de comparing views clear query language data centric view line database query languages see document centric view supported language builds concepts developed area information retrieval ir 
roughly speaking kinds ir approaches deal retrieval structured documents structural approach enriches text search conditions relating document structure words occur certain parts document condition fulfilled document part preceding part satisfying condition 
gives survey approaches :10.1.1.21.2920
approaches restricted boolean retrieval weighting index terms ranking considered 
content approaches aim retrieval relevant part document respect query 
absence explicit structural information passage retrieval investigated researches see instance 
system determines sequence sentences original document best fit query 
researchers dealt combination explicit structural information content retrieval 
uses belief networks determining relevant part structural documents allows plain text queries structural conditions 
fermi multimedia model presents general framework relevance retrieval documents 
model formulates structured document retrieval principle system retrieve specific part document answering query 
describe refinements approach different logical models 
comparing approaches turns address different facets xml retrieval problem approach combines important issues data centric view structural approach ir deal structural aspects support kind weighting ranking 
hand content ir approaches address weighting issue allow structural conditions 
list requirements xml query language lists ability processing simple text conditions ir related feature features follow data centric view 
new query language combines structural content approach 
illustrate problems raised combination describe new concepts solving issues 
briefly describe xml query language xql 
discuss problem ir xml documents elaborate features missing xql 
discussion introduce new query language xirql describe algebra processing xirql queries 
give outlook 

xml retrieval xml text markup language similar sgml 
text enclosed start tags tags markup tag name provides information kind content enclosed 
exception rule pcdata elements plain text tags 
elements nested example author john smith author elements assigned attributes start tag date format iso date attribute name format value iso 
example xml document illustrates tree structure resulting nesting elements 
shows corresponding document tree dashed boxes explained 
book class author john smith author title xml retrieval title chapter heading heading text explains xml ir 
chapter chapter heading xml query language xql heading section heading examples heading section section heading syntax heading describe xql syntax 
section chapter book xml documents formed nesting elements correct forbidden 
addition document type definition dtd may specifies syntax set xml documents 
xml document valid conforms corresponding dtd 
starting point developing xirql chosen xql describe briefly details see 
xql retrieves elements subtrees xml document fulfilling specified condition 
query heading retrieves different heading elements example document 
attributes specified preceding class 
context considered means child operator element names section heading retrieves headings occurring children sections denotes descendants book heading 
wildcards element names chapter heading 
query refers root node documents book title 
filter operator filters set nodes left 
example chapter heading retrieves chapters heading 
contrast chapter heading retrieves heading elements chapters 
explicit context node possible means dot chapter heading searches chapter containing heading element descendant 
brackets subscripts indicate position children element chapter section 
order pose restrictions content elements value attributes comparisons formulated 
example book author john smith refers value element author book class compares attribute value specified string 
strings xql supports numbers dates data types additional comparison operators gt lt 
subqueries combined means boolean operators negated means 
features xql allow flexible formulation conditions wrt 
structure content xml documents 
result set elements original document 
xql follows document centric view 
xml query languages xml ql focus data centric view offering wide variety operators restructuring result aggregation operators similar standard database query languages sql oql 
xquery current working draft xml query working group consortium combines features xql xml ql supports document centric data centric view 
extending xql ir features step extending xquery direction 

xirql concepts requirements discussion shown xql starting point ir xml documents 
ir point view features missing xql weighting 
ir research shown document term weighting query term weighting necessary tools effective retrieval textual documents 
comparisons xql referring text elements consider index term weights 
furthermore query term weighting possible introducing weighted sum operator xml retrieval 
weights computing retrieval status value elements retrieved resulting ranked list elements 
relevance oriented search 
query language support traditional ir queries requested content specified type elements retrieved 
case ir system author john smith class title book chapter heading 
xml retrieval able retrieve relevant elements fermi multimedia model cited specific element fulfill query 
presence weighted index terms tradeoff weights answer considered example appropriate weighting scheme 
data types vague predicates 
standard ir approach deals data type name plain text xml provides way explicitly mark data items various data types 
way express vague searches data types 
example similarity search proper names supported xml elements containing person names 
numerical greater predicates provided elements containing technical measurements say 
supported data type come specific set search predicates vague 
semantic relativism 
xql closely tied xml syntax possible syntactically different xml variants express kind meaning 
example particular information item encoded xml attribute xml element 
cases user may wish search value specific datatype document person name bothering element names 
appropriate generalizations included query language 
remainder section describe concepts integrating features listed xirql 
due space limitations specify complete syntax xirql focus extensions xql 
weighting glance extending xql weighting mechanism straightforward 
assuming probabilistic independence combination weights different boolean operators obvious leading weight answer approach described 
major problems heading xml query language xql example xml document tree chapter section heading examples heading syntax section describe syntax xsl solved terms structured documents weighted 
probabilistic events term occurrences identical independent 
obviously answer second question depends partly answer 
said classical ir models treated documents atomic units xml suggests tree view documents 
possibility term weighting structured documents development completely new weighting mechanism 
long experience weighting formulas unstructured documents approach probably take big effort order achieve performance furthermore cope problem partial dependence events see 
alternative suggest generalize classical weighting formulas 
define atomic units xml documents treated atomic documents 
benefit definition twofold 
units apply kind tf idf formula say term weighting 

relevance oriented search type result element specified units returned answers elements considered meaningful results 
start observation text contained leaf nodes xml tree 
leaves obvious choice atomic units 
structure may fine grained markup item enumeration list markup single word order emphasize 
appropriate solution concept index objects fermi multimedia model hierarchic document structure nodes specific types form roots index objects 
case xml means specify names elements treated index nodes 
definition part extended xml dtd 
weighting point view index objects disjoint term occurrence considered 
hand allow retrieval results different granularity specific queries single paragraph may contain right answer general questions answered best returning chapter book 
nesting index objects possible 
order combine views start specific index nodes 
higher level index objects comprising index objects text contained index objects indexed 
example assume defined section chapter book elements index nodes example document corresponding disjoint text units marked dashed boxes 
method computing term weights relevance search 
solve problem combining weights structural conditions 
examples assume comparison predicate cw contains word tests word occurrence element 
consider query section heading cw syntax assume word occur heading multiple times index node section 
decide interpretation query content related condition user search occurrence specific string 
case reasonable view filter part boolean condition binary weights possible 
offer possibility means data types vague predicates see 
content related interpretation possibilities computing term weight compute weight specific structural condition weight corresponding index node 
case problem computing weight fly 
furthermore case query multiple structural conditions referring term difficult sure weighting mechanism considers term occurrence 
example applying query book heading cw xml section cw xml example document see elements fulfill structural conditions 
simple case just count total number occurrences fulfilling conditions applying weighting function general compute weights conditions 
probabilistic interpretation possible partial overlapping underlying occurrences imply partial dependence probabilistic events associated different query conditions possible specify correct combination function leads point probability result 
technical problems think context ignored content oriented searches structural conditions specified conditions additional filters 
take term weight index node 
index node determines significance term context node 
term weights defined way solved problem independence identity probabilistic events term index node represents unique possible solution define term occurrence probabilistic event deal dependence multiple occurrences term xml element 
probabilistic event occurrences term node refer event occurrences word syntax section example document represent event 
assuming unique node ids events identified event keys pairs node id term 
retrieval assume different events independent 
different terms independent 
occurrences term different index nodes independent 
idea retrieval results correspond boolean combinations probabilistic events call event expressions 
example search sections dealing syntax xql specified section cw xql cw syntax example document yield conjunction xql syntax 
contrast query searching content complete documents consider occurrence term xql different index nodes leading boolean expression xql xql syntax 
dealing boolean expressions adopt idea event keys event expressions described 
event expressions form boolean algebra transform event expression disjunctive normal form dnf cn ci event atoms conjunctions event atoms event atom event key negated event key number conjuncts dnf 
inclusion exclusion formula yields probability event expression follows cn cj cj example example expression transformed xql syntax xql syntax 
resulting probability computed xql syntax xql syntax xql syntax xql syntax 
note duplicate event conjunction eliminated due idempotency 
different events independent probability conjunctions expressed product probabilities single events resulting xql syntax xql syntax xql syntax xql 
ideas approach easily extended order allow query term weighting 
assume query sections xql syntax reformulated section cw xql cw syntax 
conditions combined weighted sum operator introduce additional event probability specified query sum probabilities exceed 
assume identify events pairs id referring weighted sum expression corresponding term 
furthermore operator mapped logical conjunction disjunction 
section example document result event expression xql xql syntax syntax 
order yield scalar product assume different query conditions belonging weighted sum expression disjoint events xql syntax 
section example document final probability computed xql xql syntax syntax xql xql syntax syntax 
due disjointness query conditions probability conjunct equals scalar product query document term weights xql xql syntax syntax 
relevance oriented search described method combining weights structural conditions 
contrast relevance search omits structural conditions able retrieve index objects levels 
index weights specific index nodes directly 
retrieval higher level objects combine weights different text units contained 
example assume document structure list weighted terms original text chapter xql section example section section xql syntax section chapter straightforward possibility combination different weights single term 
searching term xql example retrieve chapter top rank second section lower weight 
result contradicts structured document retrieval principle mentioned 
adopt concept augmentation 
purpose index term weights multiplied augmentation weight propagated upwards index object 
augmentation weights probabilistic events introduced means probabilistic rules 
case attach root element index nodes 
denoting events index node number retrieval example result event expression xql xql 
augmentation weight event corresponding probability computed xql xql xql xql ranking section ahead chapter 
paths leading index nodes denoted 
example query cw xql cw syntax searches index nodes xql syntax resulting event expression xql xql syntax 
principle augmentation weights may different index node 
compromise specific weights single global weight may definition type specific weights depending name index node root element 
optimum choice possibilities subject empirical evaluations 
data types vague predicates possibility fine grained markup xml documents exploit information order perform specific searches 
content certain elements structural conditions sufficient standard text search methods inappropriate 
example arts encyclopedia possible mark artist names locations dates 
markup imagine query give information artist name similar worked near germany retrieve article mentioning ernst darmstadt germany 
need vague predicates different kinds data types person names locations dates 
similarity vague equality additional datatype specific comparison operators provided near broader narrower related terms classification thesaurus 
order deal vagueness predicates return weight result comparison query value value document 
xml standard distinguishes datatypes text integer date 
xml schema recommendation extends types atomic types constructors tuple set typical database systems 
document oriented view data types useless 
order support ir xml documents core set appropriate datatypes 
furthermore mechanism introducing applicationspecific datatypes provided 
text classification schemes thesauri person names supported core set 
xml unicode allows coding language world different subtypes text provided support various languages 
operations stemming searching noun phrases compound words language specific 
vague predicates classification schemes thesauri allow automatic inclusion related similar terms 
person names searchable phonetic similarity compensate spelling differences due instance transliteration 
different documents provide different detail searching say jack smith find smith reduced weight 
application specific datatypes support similarity datatypes common area 
example technical texts measurement values play important role dealing different units linear ordering involved similarity vague equality supported show measurements taken room temperature 
texts describing chemical elements compounds possible search say elements compound search common generalizations search aluminum need enumerate 
framework dealing problems adopt concept datatypes ir datatype pair consisting domain set vague comparison predicates ct 
cn 
useful introduce inheritance hierarchy text western language english subtype restricts domain provides additional predicates 
www org tr xmlschema mechanism additional datatypes defined easily refining appropriate datatype introduce french refinement western language 
order exploit datatypes retrieval datatypes xml elements defined 
happen dtd level part extended xml dtd 
specification index nodes issues require extended dtd 
approach contrasts initial xql proposal dtd required xql handle formed xml xirql restricted valid xml documents 
natural consequence fact want enhance query semantics additional information impossible provide functions relevance oriented search vague predicates specific datatypes 
reason requiring valid xml documents order perform ir user guidance 
set formed xml documents hard formulate meaningful xml queries 
knowledge document structure element names queries retrieve documents 
hand dtd possible guide user query formulation process 
mention view role xirql similar sql plays relational databases 
typical users formulate queries language usually offered form entering query conditions user interface generates correct query syntax 
semantic relativism typical queries ir vague query language support vagueness different forms 
relevance search described relativism wrt 
elements attributes important feature 
xql distinction attributes elements may relevant users 
xirql author searches element author retrieves attribute author abstracting distinction 
possible form relativism induced datatypes 
example may want search persons documents specifying role author editor referenced author subject biography documents 
provide mechanism searching certain data types regardless position xml document tree 
example searches elements attributes datatype 

processing xirql queries section describe path algebra processing xirql queries 
due space limitation describe major concepts 
give formal specification transformation xirql queries algebra 
furthermore specific features xirql addressed indexes weighted sum 
major purpose description specification behavior different operators 
give basic definitions concerning datatypes document base event expressions 
please note additional assumptions internal structure text datatype subtypes representing text set list words 
mentioned notion ir datatypes datatype pair consisting domain set vague predicates ct subtype restricts domain extends set predicates 
definition 
data type pair ct domain ct 
cn set vague comparison predicates predicate function ci 
denote set data types union domains 
definition 
subtype relationship hierarchic relationship partial order fulfills condition ct ct 
denote top element types subtypes 
modeling xml document base modify fermi multimedia model appropriately 
drop distinction xml elements attributes refer elements 
database field document base consists schema instance 
case schema extended dtd 
information structure valid xml documents plus datatype information 
value retrieval interested leaf elements nonempty content assume elements assigned datatype 
structural constraints irrelevant topic assume set semantic constraints explained see definition 
definition 
document base pair schema instance 
definition 
schema document base tuple set element names occurring dtd name root element set element names index node roots mapping specifies data type element name set semantic constraints follows dtd 
specifying instance document base assume consists set xml elements having name possibly data content sequential relationships 
order keep model simple explicitly specify notion document 
definition 
document base instance tuple str seq set xml elements str relation defines hierarchical composition elements seq partial order describes sequential order elements mapping gives name element partial mapping content element restriction 
documents modeled disjoint subsets relations str seq contain pairs elements belonging document 
elements document base instance relation str models child parent relationship str child sequential relationship seq describes order children parent node seq children parent element follows function gives content leaf elements 
general idea processing xirql queries manipulation sets paths 
approach similar proximal nodes model 
give formal specification semantics different operators 
furthermore extend model dealing datatypes weighting 
path sequence elements pair subsequent elements relation str 
path starts dummy element introduced order simplify subsequent definitions 
definition 
document base instance str seq path list 
en dummy element 
hold ei addition ej str ej ej str str ej 
denote set paths formed furthermore lst en head 
en 
order deal weighting event keys event expressions 
identify probabilistic events describe boolean combinations events 
order distinguish event expressions ordinary boolean expressions underlined boolean operators 
definition 
event keys ek set identifiers contains special elements false true 
set event expressions ee defined recursively 
ek ee 

ee ee 

ee ee ee 
event expressions 
shorthand disjunction wn notation wi 
notion paths event expressions discuss notion xirql queries 
document base query produce result set consisting pairs path event expression 
path points xml element retrieved 
show need second path order handle intermediate results 
subsequent step event expressions computing probabilistic weight answer described 
xirql operators take result sets input produce result set output 
model similar query processing standard text retrieval close relationship xql proximal nodes discussed 
inverted list entries consisting document ids indexing weights combined order produce result list document ids weights 
path algebra approach flexible allow kinds processing different kinds access paths processing parts query scanning set preselected documents need transformation operator set paths query result definition 
denote set paths 
operator defined applying set paths get starting point operators 
classical text retrieval basic operator single term retrieval term returns set document ids weights 
case term corresponds triple datatype predicate comparison value 
dealing structured documents document id extended path describing element condition matched 
simple weight return event key associated weight order compute resulting probability correct way 
definition 
denote datatype value name predicate ct furthermore event denote function generates event key probability result applying value selection condition cv element value selection query result defined cv lst event query results consist triples processing path result path event expressions 
example consider simple query chapter section heading cw syntax 
example document value selection return paths book chapter section heading pcdata book chapter section pcdata examples relative indexes identifying elements :10.1.1.21.2696
order test structural conditions check bottom way 
process distinguish path leads result element case section elements position path test structural condition 
illustrating procedure enclose processing path parentheses full path represents current result path 
output value selection example paths processing result paths 
testing heading condition filter get result book chapter section :10.1.1.21.2696
test section condition moving result pointer giving book chapter section 
way test chapter condition condition yielding book chapter section :10.1.1.21.2696
consider variant query chapter section cw syntax 
value selection yield paths pass filter 
query result contains twice path book chapter section :10.1.1.21.2696
look event expressions event key syntax cases 
logically result paths equal form disjunction corresponding event keys eliminating duplicate element result case 
example consider query chapter cw xql value selection yield path event combinations book chapter section pcdata xql book chapter heading xql :10.1.1.21.2696
test structural condition chapter identify equal paths different event keys yielding result book chapter xql xql 
problem concerning evaluation structural conditions notation case consider possible subpaths argument path 
contrast operators conditions condition increases size result 
considerations give definition structural projection operator structural selection operator similar relational algebra projection modifies structure result selection filters elements input 
definition 
denote query result structural condition form denotes element name 
path 
en define function proj 
ej 
en en 
en 
define operations proj proj binary operators fairly straightforward combine elements contain identical result processing paths event expressions combined semantics operator 
variant intersection subpath operator considers equality processing paths takes result path right argument 
example consider query book class chapter heading cw xql example document filter condition produce path book second filter subsequent test chapter yield book chapter 
subpath operator produce second path result plus conjunction corresponding event expressions 
relational algebra negation xirql queries mapped difference intermediate results 
argument form difference complete database example query book title illustration purposes keep notation event keys simple required definition function event 
searching documents title transformed book book title definition 
denote query results 
define operations specify relevance selection operator relevance oriented search 
definition similar projection descendant operator yields paths leading index nodes adds events corresponding augmentation weights event expression 
definition 
names root elements index nodes rw denote function gives augmentation weight corresponding event 
relevance selection defined defined lst head rw 
specifications transform xirql queries combinations xirql operators 
give examples illustrating process book section title cw syntax pcdata cw xql mapped book section title text cw syntax pcdata text cw xql book class chapter heading cw xql expressed book class class chapter heading text cw xql obvious transformation step straightforward negation requires special attention 
terms database systems described logical algebra 
actual implementation query processing physical algebra operators additional assumptions availability access paths sorting order objects 
major task query optimization step mapping logical operators appropriate physical operators addition logical algebraic expression optimized 
purpose identify transformation rules path algebra keep result unchanged relational algebra rules hold direction rule tells move projection inside arguments intersection operator reducing size intermediate results vice versa 
second rule allows exchange processing order structural value selections may useful exploiting nature access paths available value oriented inverted lists vs structure oriented access paths 
developing complete path algebra apply standard query optimization techniques area database systems see users interested top ranking documents additional may necessary order modify query optimization step accordingly 

outlook described new query language information retrieval xml documents 
current proposals xml query languages lack ir related features weighting ranking relevance oriented search datatypes vague predicates semantic relativism 
new query language xirql integrates features described concepts necessary order arrive consistent model xml retrieval 
processing xirql queries described path algebra serves starting point query optimization 
parallel xirql extended include data centric features xquery 
implemented prototype retrieval engine accepts xirql queries transforms path algebra expression processes expression 
currently simple extension inverted files access method 
order achieve efficiency investigate different kinds access methods different processing strategies form basis query optimization 
part project develop open source retrieval engine xml retrieval especially digital libraries 
research necessary full functionality xirql accessible user form interfaces execute queries predefined structure easily built 

xquery query language xml feb 
www org tr xquery 
baeza yates navarro 
xql proximal nodes 
proceedings acm sigir workshop xml information retrieval 
www haifa il ibm com sigir xml final papers att htm 
billingsley 
probability measure 
wiley series probability mathematical statistics 
john wiley sons new york 
chamberlin fankhauser marchiori robie 
xml query requirements 
www org tr req 
chamberlin robie florescu 
quilt xml query language heterogeneous data sources 
webdb informal proceedings pages 
www almaden ibm com cs people chamberlin quilt lncs pdf 
chiaramella 
model multimedia information retrieval 
technical report fermi esprit bra university glasgow apr 
www dcs gla ac uk fermi tech reports reports fermi ps gz 
croft editor 
proceedings st annual international acm sigir conference research development information retrieval new york 
acm 
deutsch fernandez florescu levy suciu 
xml ql query language xml 
marchiori 
www org tr note xml ql 
fuhr 
data abstraction networked information retrieval systems 
information processing management 
fuhr vert 
system logic retrieval multimedia objects 
croft pages 
fuhr 
probabilistic relational algebra integration information retrieval database systems 
acm transactions information systems 
hearst plaunt 
subtopic structuring full length document access 
proceedings sixteenth annual international acm sigir conference research development information retrieval pages new york 
acm 
jarke koch 
query optimization database systems 
acm computing surveys 
lalmas 
dempster shafer theory evidence applied structured documents modelling uncertainty 
belkin narasimhalu willet editors proceedings th annual international acm sigir conference research development information retrieval pages new york 
acm 
maier 
relational database theory 
computer science press rockville md 
marchiori editor 
ql query languages workshop 
dec 
www org ql ql 
myaeng 
jang 
kim 

flexible model retrieval sgml documents 
croft pages 
navarro baeza yates 
proximal nodes model query document databases content structure 
acm transactions information systems 
robie lapp schach 
xml query language xql 
marchiori 
www org ql ql pp xql html 
theobald weikum 
adding relevance xml 
rd international workshop web databases webdb 
www dbs cs uni sb de papers webdb ps 
