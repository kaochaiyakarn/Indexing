envirotrack environmental computing paradigm distributed sensor networks abdelzaher blum cao evans george george luo son stankovic wood department computer science university virginia charlottesville va distributed sensor networks quickly gaining recognition viable embedded computing platforms 
current techniques programming sensor networks cumbersome inflexible low level 
introduces envirotrack object distributed middleware system raises level programming abstraction providing convenient powerful interface application developer geared tracking physical environment 
envirotrack novel seamless integration objects live physical time space computational environment application 
contains run time mechanisms efficiently groups sensors logical objects maintain aggregate environmental state 
objects may logically attached moving entities physical environment order monitor state tracked entity 
performance initial implementation system evaluated actual sensor network mica motes 
results demonstrate ability middleware track realistic targets overloading sensor network 
keywords sensor networks programming paradigms tracking qos distributed systems reported prompted increasing importance distributed sensor networks platform growing number applications habitat monitoring intrusion detection defense scientific exploration :10.1.1.117.697:10.1.1.20.6380:10.1.1.136.2762
advances hardware miniaturization economically viable develop embedded systems massively distributed disposable sensor nodes characterized coordination large number tiny wireless computing elements 
consider ad hoc sensor networks large number miniature sensor nodes dropped randomly area monitoring purposes 
prototypes nodes manufactured rene mica dot motes 
motes cost 
believed years price drop making massive replication viable 
approach applications defense implement low cost surveillance disaster relief wild habitat monitoring 
key assumption common applications nature environment prevents installation fixed infrastructure 
sensor network may operate large periods time isolation benefit external centralized workstations command centers 
order perform functions sensor network operating isolation host code 
application program distributed sensor nodes 
performs activities direct consequence particular events take place physical environment 
massive distribution concurrent interaction physical environment call new programming abstractions 
environmental tracking key application area tracking related abstractions particular interest 
envirotrack distributed system implements abstractions middleware runs sensor devices 
envirotrack library exports new class abstractions called tracking objects dynamically instantiated logically attached selected external entities physical environment tracking purposes 
object encapsulates tracked entity aggregate state 
performs user defined entity specific computation serves virtual communication port particular tracked physical entity application programmer world 
middleware library loads programmer details inter object communication maintenance tracking objects state 
abstracts away fact computation associated object distributed performed sensor nodes vicinity tracked physical entity 
tracked entity moves identity location sensor nodes neighborhood change tracking object reported supported part national science foundation removed anonymity darpa removed anonymity 
representing remains 
programmer interacts changing group sensor nodes simple object interface 
simple language support developed declare tracking objects 
envirotrack interface programs may include tracking static objects 
static objects conventional mentioned completeness 
model allows sensor network applications expressed natural efficient way abstractions correspond directly events environment 
implement abstractions provide run time system layer highly tailored sensor network environment supports dynamic resource tradeoffs 
envirotrack implemented tested popular sensor network platform mica motes :10.1.1.19.8136
initial implementation infrastructure uses compiled nesc programs tinyos operating system sensor networks :10.1.1.117.697:10.1.1.127.9488
advances programming support sensor networks development virtual machine significantly simplify code development dissemination effort :10.1.1.19.8136:10.1.1.19.8136
evaluation results illustrate typical sensor network applications envirotrack perform current hardware platform 
rest organized follows 
overview related section 
section defines tracking problem detail describes programming system architecture elaborates main abstractions provided envirotrack 
section illustrates sample tracking application written envirotrack 
section provides implementation details 
section presents performance evaluation 
concludes section 
related growing challenge facing distributed systems community develop programming paradigms run time support operation large scale embedded sensor networks 
sensor networks exhibit key differences wired networks traditional ad hoc wireless networks 
composed small resource constrained unattended sensor nodes set pcs laptops pdas possession users 
applications depend correctness availability particular node rely massive redundancy 
second ip 
feature data centric addressing routing protocols usually physical geography 
third sensor node density higher traditional ad hoc network models assumed sensor network nodes cheap economically mass produced mass deployed 
importantly sensor networks seamlessly embedded physical environment tightly interact 
difference motivates programming paradigm described 
classical distributed programming paradigms middleware corba group communication remote procedure calls distributed shared memory share common fact programming abstractions exist logical space represent interact objects activities physical world 
expected main goal distributed communication facilitate distributed sensory interactions external physical environment 
contrast offers new paradigm tailored sensor networks 
paradigm centered environmentally inspired abstractions aimed simplifying coding interactions physical world arise distributed deeply embedded systems 
progress integrating partial awareness physical environment computing system 
particular location awareness investigated length 
starting network layer location assisted routing protocols received attention lar dream 
real time version location routing called rap introduced 
networks relying identifier routing scalable location services proposed keep track locations identified destinations :10.1.1.140.3129
system prototypes developed location essential attribute system objects 
aforementioned protocols complementary research develop location aware addressing routing schemes communication objects system 
assume network nodes routing location aware 
reported closely related projects cricket sentient computing cooltown propose high level paradigms embedded distributed computing system able share humans perceptions physical world 
systems allow location entities external environment tracked 
major difference systems envirotrack assume cooperative users example wear beaconing devices interact location services infrastructure purposes localization tracking 
interest contrast situations cooperation assumed tracked entity 
absence cooperation research efforts proposed alternative addressing schemes rely having destinations specific identities contact sensor nodes vicinity phenomenon interest attributes data sense 
example dataspace exports abstractions physical volumes addressable locations 
similarly directed diffusion intentional naming system provide addressing routing data interests :10.1.1.117.1253:10.1.1.21.3642
attributed naming related notion content addressable networks proposed internet environment allows queries routed depending requested content identity target machine :10.1.1.20.6380:10.1.1.140.3129
adopt form attribute naming call context labels 
architecture context labels active elements 
provide mechanism addressing nodes sense specific environmental conditions host context specific computation tracks target entity environment 
research system software sensor networks seen distributed virtual machines designed provide convenient high level abstractions application programmers implementing low level distributed protocols transparently efficient manner 
approach taken exports illusion single java virtual machine top distributed sensor network 
application programmer writes single java program 
run time system responsible code partitioning placement automatic migration total energy consumption minimized 
mat example virtual machine developed sensor networks :10.1.1.19.8136:10.1.1.19.8136
implements bytecode interpreter built top tinyos 
interpreter provides high level instructions atomic message send machine interpret execute 
virtual machine instruction executes tinyos task 
somewhat different approach providing high level programming abstractions view sensor network distributed database sensors produce series data values signal processing functions generate data types 
database management engine replaces virtual machine accepts query language allows applications perform arbitrarily complex monitoring functions 
approach implemented cougar sensor network database 
middleware implementation general abstraction sina sensor information networking architecture abstracts sensor network collection distributed objects :10.1.1.18.2979
system different geared environmental tracking applications 
authors knowledge envirotrack programming support sensor networks explicitly facilitates coding tracking applications 
novel abstractions underlying mechanisms suited monitoring targets move physical world 
envirotrack major impact application development sensor networks 
system architecture envirotrack abstractions encourage programmer think terms tracked activities physical environment corresponding tracking actions need occur computing system 
programmer specifies constitutes activity 
specification enables system discover tag activities instantiate desired objects vicinity activities tracked 
formally defining environmental tracking problem 
environmental tracking consider entity physical environment sensor network 
set sensor devices sense entity time semantics sense application specific 
set formally defined set sensor devices boolean function sense sensory measurements evaluates true 
example detect fire consider function sense fire temperature light 
fire consists nodes function true time define exact aggregate state tracked entity function state sensory measurements devices set 
function state application specific 
example fire sensing scenario described state return average temperature sensors argument list 
general returned data structure vector different aggregate measurements 
membership may change dynamically fast rate message exchange distributed system takes non zero time generally infeasible maintain exact aggregate state real time 
define relaxed aggregate state semantics follows 
time define history set union sets called freshness horizon 
defines fresh sensed data 
intuitively history set includes sensor devices sensed tracked entity time units 
define approximate aggregate state function state applied random subset devices 
call approximate state representative subset includes fewer devices critical mass constraint 
approximate state computed applying state aggregation function devices sensed tracked event time units 
freshness critical mass may chosen domain expert accordance application semantics 
represent qos parameters environmental tracking process 
example fire sensing scenario may consider output sensors reporting fire second window 
critical mass fire freshness fire qos constraints fire tracking 
define environmental tracking entity process maintaining approximate aggregate state entity subject stated freshness critical mass constraints 
envirotrack facilitates developing tracking applications supporting abstraction context labels track physical entities environment 
context labels encapsulate maintain approximate state entities track 
code attached context labels perform context specific computation 
programming model abstractions envirotrack described 
programming model humans typically communicate set identifiers name objects physical world defined specific properties perceivable human senses 
communication impossible conventional computing systems due lack appropriate sensory devices relay information germane definition identification object 
sensor networks offer unique opportunity leverage myriad available sensing modes temperature pressure motion acceleration humidity light smoke sound magnetic field develop communicate perceptions physical world 
envirotrack takes advantage opportunity programming model 
programmer view application written envirotrack depicted 
sensors detect certain userdefined entities physical environment form groups entity 
network abstraction layer associates context label group represent corresponding tracked entity computing system 
context labels thought logical addresses virtual hosts contexts follow external tracked entity physical environment 
contexts context labels interchangeably 
objects attached context labels perform context specific computation 
attached objects called tracking objects 
executed sensor group context label 
actual location tracking object nodes physical vicinity target object perform local sensing actuation interact directly target locale 
example mine locator object sensing nearby mine cause node clearing threat mine sweeping application 
completeness envirotrack supports conventional static objects attached context labels 
context type car context type fire context label car context label fire vehicle tracking objects 
state fire tracking objects sensor network abstraction layer 
state group group sensing car sensing fire 
programming model context labels types depending entity tracked 
example context label type car created car observed 
declare context label type named tracked event type programmer supply pieces information 
programmer supplies sense function described section define environmental condition sensed context 
condition watch specified pattern environment create sensor group detected target pattern occurs 
maintain membership sensor group tracked target target moves 
second programmer declares constitutes approximate environmental state encapsulated context label 
state shared tracking objects attached 
approximate state declared defining function state described section 
envirotrack provides library common distributed aggregation functions choose 
underlying infrastructure includes data collection protocol collects sensor data arguments state function sensor group members freshness critical mass conditions defined section met aggregate state encapsulated context 
note protocol merely raw sensory data collection independent type aggregation function performed collected data 
programmer specifies objects attached context label 
attached object code approximate aggregate state maintained enclosing context 
describe detail network abstraction layer tracking objects approximate aggregate state 
network abstraction layer context labels sensor groups programmer 
programmer aware distributed computation associated context label executed multiple sensors vicinity tracked entity 
programmer involved managing membership sensor group 
sensor node joins sensor group particular context local sensor readings satisfy boolean 
leaves group condition longer satisfied 
sensor node part multiple groups time 
programs running different groups effectively independent 
sensor group associated context label maintains invariants group partitioned 
members sensor group communicate possibly multiple hops members group 
physical continuity constraint introduced ensure groups formed different entities type remain distinct merge long tracked entities physically separated 
members group time satisfy condition sense 
context labels created dynamically response environmental conditions 
node senses activation condition sense context neighbors detecting condition node creates new context label type initializes new sensor group group leader 
group management algorithm described detail section 
tracking objects tracking objects attached context label consist methods invoked passage time time triggered arrival messages carry method invocation requests 
object code executed single node 
current implementation node sensor group leader enclosing context 
object code may aggregate state maintained enclosing context returned state function 
state collected distributed data collection protocol constitutes distributed part objects computation 
note code independent number identity participants distributed data collection protocol 
assume aggregation results satisfy semantics approximate aggregate state accordance specified freshness critical mass requirements 
approximate aggregate state approximate aggregate state collected sensor group context label maintained set variables call aggregate state variables 
variables types statically declared definition context type 
replaced compile time calls middleware functions evaluate current values 
function state thought implicitly defined aggregate state variables declared context numeric value state variable derived aggregating measurements individual nodes sensor group 
aggregation functions provided system average sum center gravity 
definition state variable type enclosing context specifies important pieces information aggregation function 
aggregation functions produce scalar values sets sensor readings 
aggregation functions provided mechanisms programming custom aggregation functions 
freshness freshness threshold tells system long sensor readings considered stale 
readings taken prescribed freshness time compute value aggregate state variable 
critical mass critical mass integer denotes minimum number sensor nodes involved aggregation returned value valid 
readings produced freshness threshold contribute critical mass threshold 
alternatively separate deactivation condition may written 
protocol nodes join group sent freshness constraint aggregate variables 
members periodically send leader measurements period determined freshness constraint estimate maximum message delay processing time group 
ensures results aggregation sensor readings older leader maintains approximate aggregate state performing aggregation function periodically messages received sliding window time units 
state tagged valid valid flag messages received window 
application code running leader perform read operations aggregate state variables asynchronously protocol 
operations considered successful valid flag set accessed variable 
null flag set 
situation generally occurs sensors detected phenomenon satisfy critical mass constraint phenomenon positively confirmed 
programmer free handle situation application specific manner ranging action invocation application specific data analysis functions unconfirmed event 
aforementioned simple algorithm guarantees successful read operation aggregate variable returns value properties time value returned value computed aggregation function participants members sensor group sense true 
aggregate value function sensor readings measured freshness threshold variable 
number participants took part aggregation critical mass conditions satisfy qos requirement approximate aggregate state 
successful environmental tracking performed 
note selecting weak semantics approximate aggregate state able implement aggregations efficiently providing sufficient guarantees facilitate writing tracking objects 
language features application example facilitate middleware developed simple language support declaring context labels aggregate state variables 
preprocessor uses stated declaration emit appropriate code initializes middleware 
preprocessor replaces aggregate state variables middleware function calls evaluate runtime 
envirotrack program consists list context declarations shown 
context declaration includes activation statement specifying sense condition creating new instances declared context type 
activation statement followed aggregate state declaration created context 
declaration consists list variables freshness critical mass constraints 
declared aggregate state variables computed context run time described section 
computation performed independently application code 
list objects attached 
object may nesc functions optional invocation conditions 
invocation conditions may written terms aggregate state variables defined enclosing context 
state particular method invoked 
static objects declared separately default context type 
illustrate programming syntax application example 
typical sensor network application dense network motes deployed track location moving vehicles 
simplicity illustration assume presence vehicle determined magnetic sensor 
application sensors detect magnetic distortion caused vehicle form group abstracted context label 
note context labels may instantiated depending number vehicles sensed 
context label attached object periodically reports vehicle location preselected mote interfaced mobile pursuer 
pursuer laptop monitors vehicles times records tracks 
program shows vehicle tracking context defined 
pursuer code shown 
example defines context type tracker 
line specifies activation condition sense context type encoded boolean function magnetic sensor reading 
function written nesc 
returns true value vehicle detected 
envirotrack contains library functions programmer choose 
new userdefined functions easily added application developers 
line defines aggregate variable average position location 
specifies value location returned represent average sensor node readings measured earlier second ago 

deactivation condition defined defaults inverse activation condition 
lines describe attached computation 
line specifies computation invoked 
dictates report function invoked periodically period seconds 
followed code function 
code simply call turn calls routing layer send message pursuer 
assumes identity pursuer context tracker activation magnetic sensor reading location avg position confidence freshness object reporter invocation timer report function pursuer self label location context 
sample envirotrack code known compile time 
parameters passed message handle originating context label obtained self label aggregate state variable location indicating average position sensors currently detecting reported vehicle estimated position vehicle 
pursuer tracks locations reported vehicles identifying respective context labels 
observe example encourages programmer think terms context types 
may multiple vehicles field case code generate multiple instances tracker respective different locations 
vehicles move sensor nodes comprising corresponding objects change context labels 
significantly simplifies programmer interaction varying sensor group tracking vehicle 
partial grammar context definition language appendix implementation section describe implementation issues envirotrack 
implementation built tinyos operating system kernel developed exclusively sensor nodes :10.1.1.117.697
tinyos provides support communication multitasking code modularity 
geared communication intensive applications exports abstraction components integrated structures similar protocol graph 
component consists command handlers event handlers simple tasks 
communication protocols constructed easily modular manner developing appropriate handlers independently 
implementation envirotrack programming system consists main modules envirotrack preprocessor translates envirotrack declarations shown section nesc code calls run time libraries implementing group management data aggregation communication 
group management protocol protocol maintains membership sensor group associated context label 
object naming directory services services maintain lists currently active objects locations 
communication transport services services implement remote method invocation 
aforementioned services described subsections respectively 
envirotrack preprocessor input envirotrack preprocessor context description file shown section 
preprocessor patches set nesc program templates information gathered context description file produce target nesc programs 
programs compiled provided tinyos development tools 
outer loop tinyos program template code implemented timer handler 
handler invoked sensor group leader periodically executes iteration invocation 
handler maintains array contexts 
entry represents context provides access function pointers context activation condition sense object code status 
generic handler template simply goes array checking context satisfies activation condition 
compiler emits function sets array context description file 
run time sensor devices remain time triggered mode appropriate condition sensed 
activation conditions different contexts expressed terms boolean nesc functions access local sensory measurements 
functions sensor dependent 
written developer chosen common library 
activation condition sense satisfied context type group management services activated motes sensing condition 
execution services creates context label type maintains approximate aggregate state state current group leader 
subsequent invocations timer handler check method invocation conditions defined terms aggregate state post tinyos tasks execute methods invocation conditions satisfied 
current implementation objects permanently attached contexts 
methods attached context emitted names adding context name 
contents function parsed replace aggregate variables function calls return aggregate variable value accordance specified tracking qos 
possible aggregation sensor value available function call 
naming functions done known scheme allow compiler generate correct call 
aggregate variable associated attributes freshness critical mass functions return aggregate values patched right value freshness confidence produce specified qos 
group management services group management services maintain notion context labels 
services important goals 
maintain coherence context label abstraction 
group sensors identifying entity environment produce single context label 
label persist remain unique membership sensor group changes 
second services compute approximate aggregate state context label accordance freshness critical mass semantics 
reader reminded computation aggregate state context type requires critical mass sensors sense event respond group leader measurements satisfy freshness criterion function described section 
section focus function context label coherence maintained 
key design consideration group management services lightweight dynamic 
particular algorithms maintain consistent state consistent membership views may heavyweight 
architecture single entity know current group membership consistent distributed state assumed 
maintain context label coherence point time nodes sensing external entity maintain single majority leader 
architecture allow spurious minority leaders emerge 
leaders gather critical mass affect system behavior 
leader context label sensor group tracks external entity type definition member group sense true 
leader sends periodic heartbeats purposes 
flood group inform current members leader alive 
due broadcast nature wireless medium sensors group physically close single message transmission may flood group 
second needed may carry state persist different timer handler invocations leader 
state null default explicitly entered special envirotrack setstate command 
mechanism allows new leaders continue computations failed leaders committed state received 
heartbeats may propagated hops past group perimeter inform neighboring nodes existence context label informs nodes subsequently sense condition sense join group forming new context label 
parameter chosen depending ratio sensing radius communication radius 
communication radius large may zero neighboring non member nodes hear leader broadcast anyway 
group member hearing new heartbeat sets receive timer trigger leadership takeover timer expire receiving subsequent heartbeat 
implementation receive timer twice longer heartbeat period allow message loss 
timer serves backup additional leadership relinquish mechanism explicitly requests election new leader current leader longer senses event addition non members hear heartbeat context set wait timer 
subsequently sensed wait timer expires node form new context label considers new member current context label sensor group 
choice wait timer depends far maintain memory nearby events 
larger slower moving events 
spurious leaders emerge heartbeats get lost 
cases arise 
member receive timer expire generates second leader context label 
second case non member wait timer expire creates new context label 
case relatively harmless 
merely replicates computation approximate state redundant leader nodes 
unable collect critical mass show externally visible action 
context label appear produce reports frequently affect properly written application 
prototype persistent state implemented 
constitutes trivial extension current algorithm 
reduce redundancy leader hears leader heartbeat context label group leader immediately yields leader prevent confusion redundant behavior 
second case non member creates spurious context label severe tracked target may appear replicated application 
spurious context labels reduced making sure node hears leaders different context labels type ignore leader smaller weight 
new context label initially created leader weight zero 
leaders existing context labels carry weight equal number messages received leader members date 
counter increases sensors report measurements computing aggregate state 
passed leadership takeover context label 
leaders spurious context labels ignored 
collect members satisfy critical mass constraints 
receive heartbeat leader different context label context type larger weight delete context label regular members leader group 
precautions ensure smooth operation unreliable environment explicit knowledge current group membership consistent state 
object naming directory services order objects interact need able find objects 
system provides way retrieve objects context type 
similar current research content distribution networks hashing function hashes type name coordinate sensor network field 
nodes hop coordinate responsible maintaining active objects type 
call set nodes directory object 
directory maintains mapping context label provides unique object coordinate location active object type 
context label comes alive computes hash context type transmits location information directory object name 
directory object adds new context label list maintaining 
occasional updates objects help keep location information date 
directory object able answer queries fires 
tracking objects move leave temporary forwarding pointer message sent old location properly forwarded 
directory object updated forwarding pointers expire 
transport layer protocols context labels akin ip addresses internet environment 
group leader context sensor group communication address 
remote method invocation engages transport protocol communication leaders source destination objects 
protocol described detail prior publication summary source object passes message local context leader 
leader identifies location remote context directory lookup communicates message remote context leader turn invokes destination method 
past leaders act forwarding routers sensor group moves away 
message contains current leader group return messages forwarded close group possible 
connections identified context label port num pair 
port ids associated methods individual objects 
mtp addresses outgoing messages known leader remote context stored locally table 
outgoing messages identify source current leader message header 
receiving message endpoint updates table known leaders contained header 
traffic exchanged endpoints date leader information leadership information retained long possible limited table sizes 
replacement done basis 
ensures messages moderately date remote senders forwarded chain past leaders current leader 
observe directory services described previous section determine object contacted maintaining current information location communicating parties responsibility transport layer protocol 
optimization obviates additional trips directory server communication established connection 
evaluation section demonstrate efficacy envirotrack achieving primary objective track physical targets environment 
establish case viability middleware tracking practice 
proceed stress testing envirotrack explore limitations current prototype 
removed anonymity 
case tracking case study target tank russia moving road sensor field 
particular tank weighs tons maximum road speed km hr 
sensors field equipped 
honeywell advertises magnetic traffic monitoring sensors detect moving vehicles range meters :10.1.1.18.2979
sensors operate detecting disturbances earth magnetic field caused objects 
magnitude disturbance depends amount material tracked object 
tank weights times average vehicle matter presence detected larger distance meters 
magnetic effects attenuated cube distance 
set magnetic detection radius tank approximately amounts meters 
easy show geometrically tank detected meters away guaranteed range sensor long sensors put grid meters apart 
assume rectangular grid sensors hop distance meters 
note covering border area say km km spacing require roughly sensor devices right size envisioned sensor networks 
moving maximum speed tank cover hop seconds 
developed testbed provides scaled model scenario 
experiment variable sensor range readily replaced magnetic sensors light sensors installed mica motes 
magnetic field target emulated moving round object corresponding radius sensor field block strong light source appropriate sensors 
field arranged rectangular grid 
experiment tracked object moved speed seconds hop seconds hop emulate hop speed calculated 
values correspond emulated speed km hr km hr respectively 
single context type defined declaration shown 
run time context label generated 
group management maintained leader context label 
leader sent base station average position reported nodes sensing target current time 
run logs individual motes inspected produce message loss total throughput statistics 
message loss computed counting number messages sent received mote 
shows real tracked object trajectory reported base station representative run 
motes put integer coordinates 
horizontal line real target trajectory 
tracking error occurs sensors notion proximity target 
direction anomalies occur due message loss causes sensor position aggregation subset reporting sensors 
true magnetic sensor may possible improve results estimating proximity actual magnetic field measurements 
close proximity sensor identify target type magnetic signature :10.1.1.18.2979

tracked tank trajectory shows percentage successful context label handovers target speeds settings group management parameters 
successful handover means context label successfully follows tank location virtue leadership member node target path 
unsuccessful handover means new context label spawned new tank location realizing refers tank current context label 
case violates context label coherence 
group management parameter setting leader heartbeats propagated past sensing radius 
expected case multiple context labels generated target nodes sense target time aware existing context label 
shows fraction handovers fail case target speed slow 
second setting ensured leader heartbeats propagated hop past sensing radius 
case handovers successful emulated tank speeds 
agreement expectations group management algorithm section requires leader heartbeats propagated past sensing radius 
experiment demonstrates importance setting group management parameter defined section radio transmission radius way violate group management assumptions 
successful leader handovers km hr km hr propagate heartbeat past sensing radius heartbeats radius tank speed 
successful handovers table shows sample communication data collected experiments second correct case 
point averaged independent runs 
particular show measured percentage lost leader heartbeats hb loss lost sensor messages incurred data aggregation msg loss average useful link utilization link util 
compute divided total number bits sent second total link capacity kbs mica motes 
worst case estimate assumes broadcast model messages sent concurrently 
table demonstrates important points 
system operates correctly presence message loss necessary sensor network applications 
second message loss caused link utilization unreliability wireless medium reliability implemented mac layer mica motes 
note effect collisions increases target speed 
third communication requirements constitute tiny fraction available link capacity 
stressed limits system capabilities 
fourth link utilization increases slightly tank speed 
bandwidth requirements algorithm potential scale tracking difficulty 
speed msg loss km hr km hr table 
communication performance data aforementioned proof concept results show severe limitations memory cpu network bandwidth mica motes prevent performing communication protocol stack processing group management leader handoff aggregate state computation associated maintaining context label abstraction 
appropriate sensor selection parameter settings realistic targets successfully tracked 
analysis single case study explore limitations architecture 
recall fastest target speed hop seconds hop 
show speed limits envirotrack 
stress test architecture determine maximum trackable target speed function various parameter settings middleware 
testing maximum trackable speed important parameter affects maximum trackable target speed architecture heartbeat period group leader 
best results achieved receive wait timers described section set times leader heartbeat period respectively 
receive timer sets timeout value initiates leadership takeover current leader failure 
set slightly twice heartbeat period allow consecutively missed heartbeats starting takeover 
wait timer time elapsed heard leader heartbeat group member wait allowed start group 
prevent spurious groups formed external stimulus leadership takeover wait timer longer receive timer 
set experiments test effect group management timers trackable speed 
experiments change heartbeat period maintaining aforementioned timer ratios 
tests keep communication radius grids vary sensor radius grids 
determine maximum trackable speed different heartbeat periods sensor radius settings 
maximum trackable speed computed worst case scenario case current leader fails causing leadership takeover take place 
case slow heartbeat period allow target escape tracking leadership takeover 
consequently disconnected groups formed target rediscovered independently different points track 
opposed maintaining single group migrates target 
maximum trackable speed highest target speed single group abstraction maintained 
words highest speed context label coherence ensured 
results experiment shown 
shows trackable speed normal operation leader willingly relinquishes leadership target moves sensor range 
case labeled relinquish shows maximum trackable speed independent heartbeat period 

effect timers maximum trackable speed points graph 
large range parameter settings maximum trackable speed hops times faster speed tank previous section 
fast targets tracked alternatively sensors smaller sensing radius successfully track realistic targets 
second see communication radius fixed grids events larger sensory signature tracked higher speeds 
may intuitive larger targets easier track 
experiment explore effect ratio communication radius size target sensory signature sensor detection radius 
third see heartbeat period reduced sending frequent heartbeats faster targets tracked 
intuitive faster heartbeat group management mechanism responsive 
realizing heartbeats messages cpu communication bandwidth limited experiments stress tested heartbeat period determine overload occurs 
see achieve maximum speed heartbeat periods event radii respectively 
faster heartbeats lower periods trackable speed diminishes bandwidth overload restricts handoff process 
data shows breakdown occurs slightly earlier larger events conjecture just anomaly resulting coarse differences heartbeat periods 
number messages transmitted depend event size high speeds heartbeats reports sent constant rate leader updates sent node period leader updates longer time event detected node speeds expect breakdown point heartbeat period 
determine identity bottleneck resource causes decline maximum trackable speed small heartbeat periods repeated experiment presence substantial amount cross traffic 
cross traffic exchanged motes participate envirotrack protocol generate background noise 
shape presence cross traffic remained largely unaffected 
conclude communication bandwidth bottleneck 
bottleneck appears lie cpu processing 
experiment test effect varying ratio communication radius cr sensing radius sr trackable target speed 
leadership relinquish optimization previously discussed improve performance 
results shown 
important point note cr sr ratio may may controllable parameter system designers larger events trackable faster speeds 
direct cause number leadership handovers occur 
leadership relinquish optimization nodes communicate leadership handovers necessary leadership handover necessary old leader stops sensing target new leader assume role announce status 
constant speed event larger average time handovers decreases requiring bandwidth consuming messages 
fewer handovers result higher trackable speeds 
point note tracking architecture breaks cr sr ratio falls 
occurs nodes outside communication range leader sense event concurrently form spurious groups violating context label coherence 
note architecture provides mechanism extending awareness horizon forwarding leader local flooding restricted hop count leave testing mechanism affect network congestion communication 

effect sensory radius maximum trackable speed introduced design implementation experimental evaluation new distributed programming paradigm experimental prototype sensor network applications 
paradigm differs existing distributed computing models central focus abstracting interactions physical environment produced large array distributed sensors actuators 
key advantage paradigm lies considerable potential reduce development costs deeply embedded systems 
reduction comes loading application developer details managing dynamic groups redundant sensor nodes tracking applications attaching computation external events environment implementing non interrupted communication dynamically changing physical locales defined environmental events representing maintaining fresh state mobile external physical entities generally building information infrastructure tracking environmental conditions 
alleviating costs may removed fundamental deployment problems facing sensor network applications 
performance results show addition convenient abstractions efficient data possible architecture target tracking successful practical target speeds 
authors involve substantial experimental study refinement environmental tracking problem precise semantics failure models achieved 
refinements empirical understanding hope build predictable sensor network virtual machine exports reliable behavior defined semantics implemented unreliable unpredictable resource constrained hardware communication infrastructure typical sensor networks 
virtual machine hide complexity sensor network programming application developer making new robust dynamic realm sensor network applications impact defense surveillance habitat monitoring disaster management systems 
curwen hodges newman steggles ward hopper 
implementing sentient computing system 
ieee computer august 
adjie winoto schwartz balakrishnan lilley 
design implementation intentional naming system 
acm symposium operating systems principles kiawah island sc december 
basagni chlamtac woodward 
distance routing effect algorithm mobility dream 
acm mobicom pages october 
nelson 
implementing remote procedure calls 
acm transactions computer systems february 
bonnet gehrke 
sensor database systems 
nd international conference mobile data management pages hong kong january 
carter bennet zwaenepoel 
implementation performance munin 
acm symposium operating systems principles pages october 
elson estrin girod hamilton zhao 
habitat monitoring application driver wireless communication technology 
acm sigcomm workshop data communication san jose costa april 
chockler keidar 
group communication specifications comprehensive study 
acm computing surveys december 
crossbow products 
www com products wireless sensor networks htm 

uniform web presence architecture people places things 
ieee personal communications august 
estrin govindan heidemann kumar 
century challenges mobile networking smart dust 
acm mobicom seattle wa august 
need system level support ad hoc sensor networks 
operating system review april 
federation american scientists military analysis network 
www fas org man dod sys land row tank htm 
gay levis von behren welsh brewer culler :10.1.1.127.9488
nesc language holistic approach network embedded systems 
acm sigplan conference programming language design implementation san diego ca june 
silva intanagonwiwat govindan estrin ganesan :10.1.1.117.697
building efficient wireless sensor networks low level naming 
operating systems review december 
hightower borriello 
location systems ubiquitous computing 
ieee computer august 
hill szewczyk woo hollar culler pister :10.1.1.117.697
system architecture directions network sensors 
asplos cambridge ma november 
hoffman 
smart dust 
computer world march 
www com mobile story html 
horton culler pister hill szewczyk woo :10.1.1.19.8136
mica commercialization microsensor motes 
sensors online april 
www com articles index htm 
imielinski goel 
dataspace querying monitoring deeply networked collections physical space 
ieee personal communications october 
intanagonwiwat govindan estrin 
directed diffusion scalable robust communication paradigm sensor networks 
acm mobicom boston massachusetts august 

ko nitin 
location aided routing lar mobile ad hoc networks 
acm mobicom pages october 
levis culler :10.1.1.19.8136
mate tiny virtual machine sensor networks 
asplos san jose ca october 
li jannotti couto karger morris :10.1.1.140.3129
scalable location service ad hoc routing 
acm mobicom boston massachusetts august 
lu blum abdelzaher stankovic 
rap real time communication architecture large scale wireless sensor networks 
real time technology applications symposium san jose ca september 
magnetic sensors :10.1.1.18.2979
www com mark det html 
mainwaring polastre szewczyk culler 
wireless sensor networks habitat monitoring 
acm international workshop wireless sensor networks applications atlanta ga september 
priyantha chakraborty balakrishnan 
cricket location support system 
acm mobicom boston ma august 
ratnasamy francis handley karp shenker :10.1.1.20.6380:10.1.1.140.3129
scalable content addressable network 
sigcomm san diego ca august 
scales gharachorloo 
transparent efficient software distributed shared memory 
acm symposium operating system principles saint malo france october 
:10.1.1.18.2979
shen 
sensor information networking architecture applications 
ieee personal communications august 
sirer grimm gregory bershad 
design implementation distributed virtual machine networked computers 
acm symposium operating system principles pages kiawah island sc december 

corba integrating diverse applications distributed heterogeneous environments 
ieee communications magazine february 
wood stankovic :10.1.1.20.6380
denial service sensor networks 
ieee computer october 
appendix partial list bnf grammar new programming language shown 
program statements program statements program statement program statement program statement context identifier activation condition context statements context context statements context statements context statement context statement context statement aggr variable declaration object declaration activation condition boolean expression aggr variable declaration identifier aggr function sensor names attributes sensor names sensor names sensor name sensor name object declaration object identifier data declaration function declarations function declarations function function declarations function function invocation invocation conditions function statements attributes attributes single attrib single attrib single attrib identifier identifier 
