architecture building multi device thin client web user interfaces john grundy zou department computer science university auckland private bag auckland new zealand john cs auckland ac nz 
describe new approach providing adaptable thin client interfaces web information systems 
developers specify web interfaces high level mark language logical structure user interface 
run time single interface description automatically provide interface multiple web devices desk top html mobile wml systems highlight hide disable interface elements depending current user user task 
approach allows developers easily construct maintain adaptable web user interfaces current approaches 
web information systems require degrees adaptation system user interfaces different client devices users user tasks 
interfaces need provided conventional web browsers wireless pdas mobile phones pagers 
adapting different user user tasks required hiding update delete buttons user customer staff member doing information retrieval task 
building interfaces current technologies difficult time consuming systems hard maintain 
various approaches developed support forms user interface adaptation 
proxies web clipping portal go services automatically convert html content wml content wireless devices 
typically produce poor interfaces conversion difficult simple web interfaces 
systems take xml described interface content transform different html wml formats depending requesting device information 
degree adaptation supported generally limited interface type requires complex scripting 
intelligent adaptive component user interfaces support user task adaptation 
existing approaches provide thick client interfaces run client device server provide device adaptation capabilities 
proposals multi device user interfaces generic device banks 
eds caise lncs pp 

springer verlag berlin heidelberg architecture building multi device thin client web user interfaces independent user interface descriptions typically support user task adaptation application specific 
approach organisations want leverage increasingly wide spread access staff customers thin client user interfaces desktop laptop mobile pda phone pager devices developing versions user interface possible device user user task possible 
support user interfaces specified device independent mark language describing screen elements layout required dynamic content currently embedded java code 
screen element descriptions may include annotations indicating user user task elements relevant 
call adaptive user interface technology auit 
systems adopt tier software architecture illustrated fig 

wap devices wml html pdas web server auit pages https wap laptop desktop html browsers java beans java rmi protocol application server enterprise java beans sql jdbc protocol corba xml protocols fig 

tier web information system software architecture database server legacy application auit pages implemented java server pages containing special mark language independent device specific rendering languages html wml contain descriptions screen elements layout user task relevance 
developers implement thin client web screens mark language specifying device user task independent way screen application screens despite combinations user user task display device combinations possible screen 
run time accessed auit pages determine requesting display device type current user current user task 
display mark language suitable device generated account user user task 
dynamic page content javabeans connected enterprise javabeans accessing databases possibly legacy systems 
john grundy zou example auit illustrate auit system build adaptable web user interfaces collaborative job maintenance system 
fig 
shows examples job listing screen displayed user desktop web browser mobile pda device mobile wap phone 
web browser show jobs rows job details columns 
colour highlight information hypertext links 
pda device show job detail columns additional job details split set screens 
user accesses additional details hypertext links added sides screen 
interface splitting done automatically auit tag implementation uses logical structure screens ensure sensible re organisation 
wap phone similarly display columns rows links added access 
addition wap phone doesn provide degree mark scripting pda web browser buttons links colour client side scripts 
user accesses pages text menu listing 
customer job manager accesses job lists details change details staff member update buttons menus hidden 
similarly job manager accesses job details viewing job versus updating hidden 
job listing screen title heading jobs table job headings row id column job id label title column job title label fig 

examples job listing screen running multiple devices jobs iterator job info row id column job id text field title column job title link uri auit prefix auit page directive access auit tags jsp id job manager class jobs auit screen name job list sets user task device information auit heading level value getname job list auit table width border auit row auit column auit label width value num jobs job manager auit iterator name job data jobs auit row height auit column auit label width value job auit column auit column auit link width name job href job details jsp task detail job job auit column auit column auit label width value job auit column fig 

logical structure example auit description parts job listing screen architecture building multi device thin client web user interfaces fig 
shows logical structure job listing screen auit custom tags 
screen comprised heading list jobs 
table row displays column headings subsequent rows generated iterating list job objects returned java bean 
fig 
shows part auit java server page specifies interface 
auit tags generate html wml mark output adapting layout graphics highlighting available buttons menu items data fields shown requesting device user user task information supplied page accessed 
logical structure webbased interfaces essential approach related approaches 
carried empirical evaluation auit tag library experienced web developers auit generated user interfaces comparing interfaces custom written 
results encouraging developers able build quite sophisticated web information systems interfaces suitably adapt variety display devices users user tasks 
continuing refine extend custom tags properties allow complex layout highlighting client side scripting adapted 

moving organization convergent technologies business wireless proc 
th annual hawaii international conference system sciences maui hawaii jan ieee cs press 

ceri fraternali building multi device applications tool suite proc 
conceptual modelling business web lncs pp 


ceri fraternali web modelling language modelling language designing web sites computer networks 

eisenstein puerta adaptation automated user interface design proc 
conference intelligent user interfaces new orleans january acm press pp 


fox gribble chawathe brewer adapting network client variation infrastructural proxies lessons perspectives ieee personal communications 

grundy hosking developing adaptable user interfaces component systems appear interacting computers elsevier 

han naghshineh unified xml framework multi device collaborative web browsing proc 
cscw philadelphia dec 

adaptive collaboration wired wireless platforms ieee internet computing july august 

palm web clipping services www palm com 

adaptive support intelligent tour guide 
proc 
international conference intelligent user interfaces 
acm press 
john grundy zou 
van der limbourg synchronised model design multiple user interfaces proc 
workshop multiple user interfaces internet hci ihm september lille france 

architecture information system tourists proc 
workshop multiple user interfaces internet hci ihm september lille france 
