pattern analysis bpel ws wil van der aalst dumas arthur ter hofstede department computer systems sciences stockholm university royal institute technology sweden dsv su se department technology management eindhoven university technology netherlands aalst tm tue nl centre information technology innovation queensland university technology australia dumas qut edu au 
web services composition emerging paradigm enabling application integration organisational boundaries 
landscape languages techniques web services composition emerged continuously enriched new proposals different vendors coalitions 
little effort dedicated systematically evaluating capabilities limitations languages techniques 
reported step direction 
presents depth analysis business process execution language web services bpel ws 
framework analysis collection workflow communication patterns 
keywords business process modelling web services composition bpel ws web services rapidly emerging paradigm architecting implementing business collaborations organisational boundaries 
paradigm functionalities provided business applications encapsulated web services software components described semantical level invoked application programs services stack internet standards including xml soap wsdl uddi 
deployed web services provided various organisations inter connected order implement business collaborations leading composite web services 
business collaborations require long running interactions driven explicit process model 
accordingly current trend express research conducted queensland university technology 
technical report fit tr qut pattern analysis bpel ws logic composite web service business process modelling language tailored web services 
languages emerged including wsci bpml bpel ws little effort spent evaluation respect common benchmark 
comparative evaluation contribute establish overlap complementarities delimit capabilities limitations detect inconsistencies ambiguities 
step direction reports depth analysis emerging languages bpel ws business process execution language web services 
expected similar analysis conducted alternative languages 
reported analysis framework composed set patterns abstracted forms recurring situations various stages software development 
specifically framework brings set workflow patterns documented set communication patterns documented :10.1.1.37.8441
workflow patterns wps compiled analysis existing workflow languages capture typical control flow dependencies encountered workflow modelling 
commercial workflow management systems wfms uml activity diagrams evaluated terms support patterns 
wps arguably suitable analysing languages web services composition situations capture relevant domain 
communication patterns cps hand related way system modules interact context enterprise application integration eai 
structured dichotomies synchronous vs asynchronous point point vs multicast 
arguably suitable analysis communication modelling abilities web services composition languages strong overlap eai web services technologies 
frameworks analysing comparing business process modelling languages proposed green 
frameworks motivated problem motivates continuously increasing number process modelling languages need understand compare differ pattern framework target different audience managers business business stakeholders involved business process management 
accordingly adopt higher level granularity 
technical report fit tr qut pattern analysis bpel ws rest structured follows 
section provides overview bpel ws language 
sections bpel ws language analyzed set workflow communication patterns respectively 
section concludes 
bpel ws bpel ws builds ibm wsfl web services flow language microsoft xlang web services business process design combines accordingly features block structured language inherited xlang directed graphs originating wsfl 
language intended support modelling types processes executable processes 
executable process business protocol specifying message exchange behaviour different parties revealing internal behaviour 
executable process focus specifies execution order number activities constituting process partners involved process messages exchanged partners fault exception handling specifying behaviour cases errors exceptions 
bpel ws process kind flow chart element process called activity 
activity primitive structured activity 
set primitive activities contains invoke invoking operation web service receive waiting message external source reply replying external source wait waiting time assign copying data place throw indicating errors execution terminate terminating entire service instance empty doing 
enable presentation complex structures structured activities defined sequence defining execution order switch conditional routing looping pick race conditions timing external triggers flow parallel routing scope grouping activities treated fault handler 
structured activities nested combined arbitrary ways 
activities executed parallel execution order controlled usage links called control links guarded links allows definition directed graphs 
graphs nested acyclic 
technical report fit tr qut pattern analysis bpel ws workflow patterns bpel ws web services composition workflow management related sense concerned executable processes 
functionality workflow management systems relevant web services composition languages bpel ws xlang wsfl 
section consider workflow patterns discuss extent patterns captured bpel ws :10.1.1.37.8441
solutions simplified bpel ws notation rich capturing key ideas solutions time avoiding detailed representation 
wp sequence activity workflow process enabled completion activity process 
example activity order registration activity customer notification executed 
solution wp possible solutions pattern bpel ws operator sequence inherited xlang see listing concept control link inherited wsfl see listing 
case link needs defined lines activity executed specified source activity link line subsequent activity specified target link line 
activities embedded single flow activity 
listing sequence sequence listing flow links link name links source 
target 
flow wp parallel split point process single thread control splits multiple threads control executed parallel allowing activities executed simultaneously order 
technical report fit tr qut pattern analysis bpel ws example activity new subscription order activity insert new subscription home location registry application insert new subscription mobile answer application executed parallel 
wp synchronization point process multiple parallel branches converge single thread control synchronizing multiple threads 
assumption pattern incoming branch completed completed merge waiting branches completed 
assumed threads synchronized belong global process instance case workflow terminology 
example activity archive executed completion activity send tickets activity receive payment 
obviously synchronization occurs single global process instance send tickets receive payment relate client request 
solutions wp wp parallel split realized defining activities run parallel components activity type flow see listing lines 
control link defined flow activities flow executed parallel 
adding activity flow example activity line yields solution synchronization pattern 
similarly solution wp solution control links possible wp wp see listing 
solution links defined flow furthermore consists activities sources respectively lines target links activity lines 
execute completed successfully defined activity line 
listings illustrate styles process modelling supported bpel ws 
listing shows xlang style modelling routing structured activities 
listing shows modelling links structured activities 
possible mix styles having links crossing boundaries structured activities 
example listing sequences sa sb defined run parallel 
definition link lines implies activity activity sequence sb executed activity sequence sa order prevent deadlocks links allowed cross boundaries loops serializable scopes compensation handlers 
technical report fit tr qut pattern analysis bpel ws listing sequence flow flow sequence listing flow name links link name link name links source 
source 
target target 
flow completed execution 
words link captures intermediate synchronization point parallel threads sa sb 
inter thread synchronization expressed structured activities proof see 
illustrates example graphical form 
listing flow name links link name links sequence name sa source sequence sequence name sb target sequence flow sa sb legend flow activity flow sequence link wp exclusive choice point workflow process decision workflow control data branches chosen 
example manager informed order exceeds 
bpel ws provide graphical notation figures limited patterns 
technical report fit tr qut pattern analysis bpel ws wp simple merge point workflow process alternative branches come synchronization 
assumption pattern alternative branches executed parallel case see patterns multi merge discriminator 
example payment received credit granted car delivered customer 
solutions wp wp previous patterns solutions proposed 
relies activity switch inherited xlang listing 
case specifies activity performed condition fulfilled 
second solution uses control links see listing 
different conditions example specified corresponding link 
implies activities specified targets links example executed corresponding conditions fulfilled 
empty activity source links implying conditions evaluated soon flow initiated 
activity target links sources respectively capturing simple merge pattern 
difference solutions solution listing activity specified condition evaluates true 
solution listing multiple branches may conditions evaluates true 
ensure branches conditions disjoint 
case listing provides solution multi choice pattern described 
wp multi choice point process decision control data number branches chosen executed parallel threads 
example executing activity evaluate damage activity contact fire department activity contact insurance executed 
activities executed 
possible need executed 
wp synchronizing merge point process multiple paths converge single thread 
paths active executed 
path active activity merge triggered soon path completes 
path active synchronization active paths needs technical report fit tr qut pattern analysis bpel ws listing switch case condition case case condition case switch flow empty listing flow links link name link name link name link name links empty source source empty target source target source target target 
flow take place activity triggered 
assumption pattern branch activated activated merge waiting branches complete 
example activities contact fire department contact insurance completed depending executed activity submit report needs performed exactly 
solutions wp wp indicated solution wp wp identical wsfl style solutions wp wp listing 
follows dead path elimination principle states truth value incoming link propagated outgoing link 
example listing condition evaluates true activity receives positive value executed 
hand condition evaluates false activity receives negative value executed propagates negative value outgoing link 
particular executed conditions evaluate true 
technical report fit tr qut pattern analysis bpel ws case attached ensures executed provided activities executed 
wp multi merge point process branches synchronization 
branch gets activated possibly concurrently activity merge started action incoming branch 
example branches share 
activities audit application process applications running parallel followed activity close case executed twice activities audit application process applications executed 
solution wp bpel ws offers direct support wp 
xlang wsfl allow active threads path creating new instances process 
wp discriminator point workflow process waits incoming branches complete activating subsequent activity 
moment waits remaining branches complete ignores 
incoming branches triggered resets triggered important really context loop 
example improve query response time complex search sent different databases internet 
comes result proceed flow 
second result ignored 
solution wp pattern directly supported bpel ws 
structured activity construct implementing links capturing 
reason able link construct fact evaluated status incoming links determined required case positive link determined 
wp arbitrary cycles point portion process including activities connectors needs visited repeatedly imposing restrictions number location nesting points 
solution wp pattern supported bpel ws 
activity allows structured cycles possible jump technical report fit tr qut pattern analysis bpel ws back arbitrary parts process loops entry point exit point allowed 
restriction links cross boundaries loop links may create cycle disables support wp 
wp implicit termination subprocess terminated left termination require explicit termination activity 
solution wp implicit termination supported flow construct 
structured activity flows links completes outermost activity completes corresponds explicit termination 
flow construct links subprocess multiple sink activities activities source link requiring unique termination activity 
wp mi synchronization context single case multiple instances activity may created facility spawning new threads control independent 
instances created consecutively able run parallel distinguishes pattern pattern arbitrary cycles 
example booking trip activity book flight executed multiple times trip involves multiple flights 
solution wp multiple instances activity created invoke activity embedded loop see listing 
invoked process process attribute receive activity assigned see listing 
wp wp mi synchronization point workflow number instances activity initiated instances synchronized proceeding rest process 
wp number instances started synchronized known design time 
wp number known stage run time initiation instances started 
wp number instances created known advance new instances created demand instances required 
discussion non structured cycles unfolded structured cycles see 
technical report fit tr qut pattern analysis bpel ws example wp booking trip activity book flight executed multiple times trip involves multiple flights 
bookings invoice sent client 
bookings known runtime interaction user 
solutions wp wp number instances synchronized known design time wp simple solution replicate activity times needs instantiated run replicas parallel placing flow activity 
solution complex number instances created synchronized known run time wp known wp see listing 
solution pick activity loop enabling repetitive processing triggered different messages indicating new instance required indicating completion previously initiated instance indicating instances need created 
depending message received activity performed invoked iteration loop 
solution logic patterns directly captured bpel ws construct 
logic encoded means loop counter counter incremented time new instance created decremented time instance completed 
loop exited value counter zero instances need created 
listing cond invoke 
invoke process listing receive 
receive process listing true pick onmessage invoke onmessage onmessage onmessage onmessage false onmessage pick wp deferred choice point process alternative branches chosen information neces technical report fit tr qut pattern analysis bpel ws available point reached 
differs normal exclusive choice choice immediately point reached alternatives offered choice delayed occurrence event 
example contract finalized reviewed signed director operations manager available 
director operations manager notified contract reviewed available proceed review 
solution wp pattern realized pick construct 
semantics pick awaiting receipt number messages continuing execution received message captures key idea pattern choice immediately certain point pick activity reached delayed receipt message 
wp interleaved parallel routing set activities executed arbitrary order 
activity set executed exactly 
order activities decided run time activity completed decision taken 
case activities set active time 
example year bank executes activities account add interest charge credit card costs 
activities executed order 
update account executed time 
solution wp possible capture pattern bpel ws concept serializable scopes see listing 
serializable scope activity type scope attribute set guaranteeing concurrency control shared containers 
activities interleaved placed different containers write single shared container container listing 
activities placed different containers potentially executed parallel 
hand serializable scopes contain activities write container active simultaneously executed 
things worth pointing respect solution 
semantics serializable scopes bpel ws clearly defined 
bpel ws specification states semantics technical report fit tr qut pattern analysis bpel ws similar standard isolation level serializable database transactions specify similarity underlying transaction model deal prevent serialization conflicts 
second possible solution externally influence runtime order activities executed order fixed transaction manager underlying bpel ws engine 
serializable scopes allowed nested solution applicable occurrence interleaved parallel routing pattern embedded occurrence 
overcome limitations solution deferred choice pick proposed applied see listing :10.1.1.37.8441
drawback solution complexity increases exponentially number activities interleaved 
listing flow scope name sequence write container write container sequence scope scope name sequence write container write container sequence scope flow listing pick onmessage sequence activity activity sequence onmessage onmessage sequence activity activity sequence onmessage pick wp milestone activity enabled certain milestone reached expired 
milestone defined point process activity finished activity started 
example having placed purchase order customer withdraw time shipping takes place 
withdraw order customer complete withdrawal request form request approved customer service representative 
execution activity approve order withdrawal follow activity technical report fit tr qut pattern analysis bpel ws request withdrawal done activity place order completed ii activity ship order started 
solution wp bpel ws provide direct support capturing pattern 
solution see listing 
solution inspired ideas :10.1.1.37.8441
deferred choice executing activity executing activity 
loop guarantee long chosen executed arbitrary number times 
limitation solution activity restricted parallel 
listing completed false completed false pick onmessage onmessage onmessage mb sequence completed true sequence onmessage pick wp cancel activity wp cancel case cancel activity terminates running instance activity cancelling case leads removal entire workflow instance 
example wp customer cancels request information 
example wp customer withdraws order 
solutions wp wp wp solved terminate activity abandon execution business process instance terminate activity part 
currently running activities terminated soon possible fault handling compensation behaviour 
wp dealt fault compensation handlers specifying course action cases faults cancellations 
communication patterns bpel ws section evaluate bpel ws communication patterns 
communication realized exchanging technical report fit tr qut pattern analysis bpel ws messages different processes explicitly modelled sending receiving messages 
types communications distinguished synchronous asynchronous communication 
synchronous communication cp request reply request reply communication form synchronous communication sender request receiver waits reply continuing process 
reply may influence processing sender side 
cp way form synchronous communication sender request receiver waits reply acknowledges receipt request 
receiver acknowledges receipt reply empty delays processing sender side 
solutions cp cp way synchronous communication modelled bpel ws invoke activity included requesting process process see listing couple receive reply activities responding process process see listing 
furthermore different containers need specified invoke activity process outgoing data process stored input data communication output container incoming data stored output data communication 
way pattern differs request reply sending reply confirmation immediately message received processing performed receipt reply activities 
listing process name sequence 
invoke partner 
request response invoke 
sequence process technical report fit tr qut listing process name 
sequence receive partner 
container request receive 
reply partner 
container response reply sequence process pattern analysis bpel ws cp synchronous polling synchronous polling communication form synchronous communication sender communicates request receiver blocking continues processing 
intervals defined developer sender checks see reply sent 
detects reply processes stops polling reply 
example game session system continuously checks customer terminated game 
solution cp pattern captured trough utilization parallel flows receipt expected response sequence activities depending response see listing lines 
initiation communication done invoke action line 
able proceed invoke action specified send data wait reply 
indicated omitting specification output container 
communication responding process previous pattern listing 
listing process name sequence invoke partner request invoke flow sequence 
sequence receive partner container result receive flow access container result 
sequence process asynchronous communication cp message passing message passing form asynchronous communication request sent sender receiver 
sender request essentially forgets sent continues processing 
request delivered receiver processed 
example order received log notified system executes order 
technical report fit tr qut pattern analysis bpel ws solution cp solution pattern demonstrated part solution cp invoke activity line listing 
cp publish subscribe form asynchronous communication request sent sender receiver determined declaration interest receiver request 
example organization offers information products customers 
customers interested receiving information notify system lists interested customers 
product information going distributed customers organization requests current list including customers addresses 
cp broadcast form asynchronous communication request sent participants receivers network 
participant determines request interest examining content 
example system shut maintenance client connected informed situation 
solutions cp cp publish subscribe broadcast directly supported bpel ws 
framework existing workflow communication patterns depth analysis bpel ws 
summary results analysis table 
table shows comparison bpel ws xlang wsfl major workflow modelling languages staffware plc staffware ibm mqseries workflow 
ratings staffware mqseries workflow table taken analysis major commercial wfms provided :10.1.1.37.8441
xlang wsfl correspond subsets bpel ws ratings straightforward discussions provided 
note indicate staffware mqseries workflow assumed offer support communication patterns 
may entirely true staffware concept event step intended communication rated 
cell table refers direct support construct language directly support pattern 
technical report fit tr qut pattern analysis bpel ws table refers direct support 
feature partially supports pattern construct implies certain restrictions structure process 
cases support rated 
pattern product standard bpel xlang wsfl 

sequence parallel split synchronization exclusive choice simple merge multi choice synchronizing merge multi merge discriminator arbitrary cycles implicit termination mi synchronization mi priori design time knowledge mi priori runtime knowledge mi priori runtime knowledge deferred choice interleaved parallel routing milestone cancel activity cancel case request reply way synchronous polling message passing publish subscribe broadcast table 
comparison bpel ws xlang wsfl staffware mqseries workflow workflow communication patterns 
observations table patterns correspond basic routing constructs naturally supported languages 
contrast patterns referring advanced constructs poorly supported different languages 
ii bpel ws language integrating futures block structured language xlang directed graphs wsfl supports patterns supported xlang wsfl 
iii bpel ws technical report fit tr qut pattern analysis bpel ws web service composition language provides constructs communication modelling clearly distinguishes traditional workflow modelling languages 
positive remarks pose negative comments 
bpel ws complex language offers overlapping constructs 
simple fact patterns realized xlang style wsfl style illustrates complexity 
secondly semantics bpel ws clear 
precise semantics advanced concepts serializable scopes leave room multiple interpretations complicating adoption language 
disclaimer 
authors associated institutions assume legal liability accuracy completeness information bpel ws xlang wsfl ibm mqseries workflow staffware contained 
possible efforts ensure results best knowledge date correct 

van der aalst 
don go flow web services composition standards exposed 
appear 
ieee intelligent systems jan feb 
electronically accessible www tm tue nl research patterns pdf 

van der aalst van hee 
workflow management models methods systems 
mit press cambridge massachusetts 

van der aalst ter hofstede kiepuszewski barros 
workflow patterns 
technical report fit tr faculty queensland university technology july 
accessed www tm tue nl research patterns 
appear distributed parallel databases kluwer 

bpml org 
business process modeling language 
accessed november www bpmi org 

workflow management coalition 
terminology glossary 
document number wfmc tc document status issue february www wfmc 
org 

curbera nagy weerawarana 
unraveling web services web soap wsdl uddi 
ieee internet computing march 

curbera goland klein leymann roller thatte weerawarana 
business process execution language web services 
dev dev bea com bpel ws jsp 

dumas ter hofstede 
uml activity diagrams workflow specification language 
gogolla editors proc 
th int 
conference unified modeling language uml volume lncs pages toronto canada october 
springer verlag 
technical report fit tr qut pattern analysis bpel ws 
fischer editor 
workflow handbook workflow management coalition 
strategies lighthouse point florida 

net 
patterns home page 
net patterns 

kiepuszewski ter hofstede bussler 
structured workflow modelling 
bergman editors proc 
th int 
conference advanced information systems engineering caise volume lncs pages stockholm sweden june 
springer verlag 

leymann roller 
production workflow concepts techniques 
prentice hall ptr upper saddle river new jersey 

green 
developing meta model bunge wand weber ontological constructs 
information systems 

brown 
enterprise application integration wiley tech brief 
john wiley sons 

andersson 
framework comparing process modelling languages 
mylopoulos woo tamer zsu editors th international conference advanced information systems engineering caise volume lncs pages 
springer 

un oasis 
ebxml business process specification schema version 
accessed november www ebxml org specs pdf 


web service choreography interface wsci 
accessed november www org tr wsci 
technical report fit tr qut 
