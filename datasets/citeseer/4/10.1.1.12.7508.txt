managing data quality cooperative information systems massimo mecella monica roberto baldoni tiziana catarci carlo batini universit di roma la sapienza dis mecella baldoni catarci dis uniroma consiglio nazionale delle ricerche universit di milano disco batini disco 
current approaches development cooperative information systems services offered cooperating organizations opportunity building coordinators brokers top services 
quality data exchanged provided different services hampers approaches data low quality spread cooperative system 
time improvement comparing data correcting disseminating high quality data 
service framework managing data quality cooperative information systems 
xml model data quality data proposed design broker selects best available data different services 
broker supports improvement data feedbacks source services 
cooperative information system cis large scale information system interconnects various systems different autonomous organizations geographically distributed sharing common objectives 
different resources shared organizations data fundamental real world scenarios organization may request data organization trust data know quality data provide high 
example government scenario public administrations cooperate order fulfill service requests citizens enterprises administrations prefer asking citizens data administrations stored data quality data known 
lack cooperation may occur due lack quality certification 
quality cause deterioration data quality inside single organizations 
organizations exchange data knowing actual quality may happen data low quality spread cis 
meersman tari eds coopis doa odbase lncs pp 

springer verlag berlin heidelberg managing data quality cooperative information systems hand cis characterized high data replication different copies data stored different organizations 
data quality perspective great opportunity improvement actions carried basis comparisons different copies order select appropriate reconcile available copies producing new improved copy notified involved organizations 
cis designed service approach consider cooperation different organizations obtained sharing integrating services networks services commonly referred services web services exported different organizations defined operations allow users applications access perform tasks offered back business applications 
propose service framework architecture managing data quality cis architecture aims avoiding dissemination low qualified data cis providing support data quality diffusion improvement 
best knowledge novel contribution information quality area aims integrating specific context cis modeling architectural issues 
enforce vision presenting general architecture focuses specific elements problem consider primary importance 
specifically face problem lack quality certification proposing model organization export data associated quality information 
model xml order address interoperability issues existing cooperative information systems distributed design single architectural service model cited data quality broker allows organization involved cis retrieve data specifying quality requirements 
service offers data satisfies requirements notifies organizations highest quality values cis 
design distributed service takes account reliable communication issues shows feasibility approach practical scenarios 
structure follows 
section related research discussed 
section service framework cooperative information systems proposed 
basis framework section architecture specifically addressing quality related issues described 
section model exchanged data quality 
section distributed design data quality broker service described 
section concludes drawing 
related data quality traditionally investigated context single information systems methodological framework data quality mecella cooperative systems proposed consisting phases definition measurement exchange analysis improvement :10.1.1.103.1289
cooperative scenarios main data quality issues regard assessment quality data owned organization ii methods techniques exchanging quality information iii improvement quality cooperating organization iv heterogeneity due presence different organizations general different data semantics 
assessment heterogeneity iv issues results achieved traditional systems borrowed :10.1.1.31.109
methods techniques exchanging quality information ii partially addressed literature 
considering issue exchanging data associated quality model export data quality data needs defined 
conceptual models associate quality information data proposed extension entity relationship model data warehouse conceptual model quality features described description logic formalism 
models thought specific purpose introduce quality elements relational database design introduce quality elements data warehouse design 
aim enable quality exchanging generic cis independently specific data model system architecture 
problem quality web available information faced order select data high quality coming distinct sources source evaluate pre defined data quality parameters values available exposition meta data 
proposal different propose ad hoc service brokers data requests replies basis data quality information 
take account improvement features iii considered 
framework current business scenarios organizations need cooperate order offer services customers partners 
organizations cooperate business links relationships exchanged documents resources knowledge connecting 
specifically organizations exploit business services exchange data require services carried basis business links network organizations business links constitutes cooperative business system 
example supply chain enterprises offer basic products assemble order deliver final products customers cooperative business system 
example set public administrations need exchange information citizens health state order provide social aids cooperative business system derived italian government scenario 
cooperative business system exists independently presence software infrastructure supporting electronic data exchange service provisioning 
managing data quality cooperative information systems cooperative information systems software systems supporting cooperative business systems remaining definition cis considered cooperative information system formed set organizations org cooperate communication software infrastructure may provide software services referred infrastructure services organizations wells reliable connectivity organization connected gateway gi application services offered organizations deployed denote th application service offered 
difference application infrastructure services designed independently organizations 
application services perform different operations initiating complex transactions backend systems providing access data consider read access services application services returning application data stored inside organizations modifying 
assume definition application service generic application service offered cooperating organization set operations sn specified signature form si pn pn list parameters set data items returned si 
oi returned application services expressed xml documents convey application data items data quality data items see section 
architecture data quality typical feature cis high degree data replicated different organizations 
example government scenario personal data citizen stored administrations 
basis proposed definition cis organization implement application service 
assumption considering access data services organizations provide data different quality levels 
requester data may want data highest quality level provided ones 
highest quality data returned requester limiting dissemination low quality data 
comparison gathered data values enforce general improvement data quality organizations 
mecella context project propose architecture management data quality cis architecture allows diffusion data related quality exploits data replication improve quality cooperative data 
logical model cis previous section need define model organizations exchange data data quality data set infrastructure services realize quality management functions 
org data quality broker org communication infrastructure quality knowledge repository rating service notification service fig 

architecture data quality diffusion improvement model data quality propose called data data quality model 
includes definitions constructs represent data ii common set data quality properties iii constructs represent iv association data quality data 
model described section 
order produce data quality data model organization holds quality factory responsible evaluating quality data 
architecture depicted 
give description element data quality broker core architecture 
performs behalf requesting organization data request specifying set quality requirements desired data satisfy quality brokering function 
different copies data received responses request reconciled best quality value selected methodologies tools data quality cooperative information systems italian carried universit di roma la sapienza universit di milano politecnico di milano www dis uniroma dq 
managing data quality cooperative information systems proposed organizations choose discard data adopt higher quality ones quality improvement function 
quality brokering improvement described section 
requirements specified request satisfied broker initiates negotiation requester optionally weaken constraints desired data 
quality knowledge repository consists knowledge base components order perform functions 
example maintains interschema knowledge representing relationships schemas allow determine intensional extensional equivalence data different organizations ii historical quality knowledge including statistics related data quality ensured organizations past realize rating service source reliability 
notification service publish subscribe engine general message bus components organizations 
specifically allows quality subscriptions organizations notified quality changes data 
example organization may want notified quality data uses degrades certain acceptable threshold high quality data available 
rating service associates trust values data source cis 
data quality broker determine reliability quality evaluation organizations 
trust values dynamically updated statistics quality knowledge repository take account current availability data source 
detailed design components currently investigation focus architectural design data quality broker detailed section 
th model cooperating organizations export application data quality data data quality dimension values evaluated application data specific data model 
exported data quality data accessed organizations means application service operations cooperating organization available 
model exporting data quality data referred data data quality model 
section introduce data quality dimensions section describe model respect data features section quality features section 
data quality dimensions data quality dimensions properties data correctness degree updating 
data quality dimensions concern data values deal aspects concerning quality logical schema data format 
mecella section propose outline data quality dimensions cis stemming real requirements cis scenarios experienced 
reader refer complete definitions examples possible evaluation methods related :10.1.1.103.1289
general concept schema element corresponding instance entity entity relationship schema class unified modeling language diagram 
define accuracy 
distance value considered correct 
completeness 
degree values schema element schema element instance 
currency 
currency dimension refers data values may vary time example values address may vary time considered invariant 
currency defined age value 
currency distance instant value changes real world instant value modified information system 
internal consistency 
consistency implies values conflict 
internal consistency means values compared order evaluate consistency specific instance schema element 
semantic rule constraint hold values attributes schema element depending application domain modeled schema element 
internal consistency defined degree values attributes instance schema element satisfy specific set semantic rules defined schema element 
data model model inspired data model underlying xml ql :10.1.1.33.2943
database view xml adopted xml document set data items document type definition dtd schema data items consisting data quality classes 
particular xml document contains application data form data graph related data quality values form quality graphs quality dimension introduced section 
specifically nodes data graph linked corresponding ones quality graphs links shown 
operations offered application services return xml documents outputs 
xml document corresponds set conceptual data items instances conceptual schema elements schema elements data quality classes instances data quality objects 
data classes objects straightforwardly represented data graphs detailed section quality classes objects represented quality graphs detailed section 
data graph data graph managing data quality cooperative information systems internal consistency internal consistency quality graph quality graph accuracy accuracy quality graph quality graph completeness completeness quality graph quality graph currency currency quality graph quality graph fig 

generic structure xml document returned result service operation order clarify definition data class xml preliminary recall typical definition data class odmg 
data class consists name set properties namei namei name property basic type data class type set basic type data class 
define data graph follows data graph graph features set nodes node identified object identifier ii source different links quality objects different quality dimension link pair attribute value attribute represents specific quality dimension element tag value idref link basic types ones provided common programming languages sql integer real boolean string date time interval currency 
links explained section quality graphs introduced 
mecella set edges edge labeled string represents element tag xml document single root node set leaves leaves nodes identified ii labeled strings represent element tag values values element tags labeling edges 
data class instances represented data graphs rules 
data class properties data object instance data class 
instance represented data graph follows root labeled object identifier instance namei rules hold basic type connected leaf edge edge labeled namei leaf labeled property value namei data class connected data graph represents property value namei edge labeled namei set cardinality namei connected elements follows basic type elements leaves labeled property value set ii data class elements data graphs representing data object set edges connecting root elements labeled namei 
data graph shown object instance maria rossi data class citizen considered 
data class name surname properties basic types property type set property data class type data class properties basic types 
quality model far data portion model described 
organizations export xml documents containing data objects quality data concerning dimensions introduced section 
quality data represented graphs correspond set conceptual quality data items instances conceptual quality schema elements quality schema elements referred quality classes instances quality objects 
quality class models specific quality dimension specific data class property values quality object represent quality dimension values property values data object 
data object managing data quality cooperative information systems links quality objects values accuracy accuracy quality graph quality graph accuracy name name maria accuracy surname link data object value surname rossi street zipcode salaria roma italy accuracy street city country data graph accuracy city accuracy accuracy zipcode accuracy country accuracy accuracy accuracy quality graph fig 

example node value leaf data graph linked respectively quality objects values 
data class quality class consists name accuracy completeness currency set tuples typed mecella associated relationship corresponds quality dimension evaluated associated relationship corresponds quality dimension evaluated type basic type quality class set type structure data class 
order represent quality objects define quality graph follows quality graph data graph additional features node leaf linked element labels edges strings form name accuracy citizen labels leaves strings representing quality values leaves identified object identifiers 
quality class instance straightforwardly represented quality graph basis rules analogous ones previously data objects data graphs 
example quality graph concerning accuracy shown links highlighted instance accuracy maria 
service operations return result document consists graphs 
specifically data class instance data graph linked quality graphs expressing quality data objects dimension introduced section 
om set objects instances data class ad xml document graph consisting root node root md data graph gi representing data objects oi md quality graph gd representing quality graph related oi concerning quality dimension root connected md data graphs edges labeled name data class quality dimension root connected md quality graph gd edges labeled name quality class model proposed adopts graphs embedding metadata data graph 
decision increases document size hand allows modular fit design extending model new dimensions straightforward requires define new dimension quality graph ii specific applications requiring dimension values adopt appropriate subset graphs 
managing data quality cooperative information systems data quality broker section distributed implementation data quality broker component 
issues concerning high level design component examples possible usage real scenarios reader refer 
mentioned section service provides features quality brokering function organization invoke specifying data request constrained set data quality requirements 
data request performed invoking operation discovers quality knowledge repository application services cis offering operations equivalent invokes gathers responses returns data items satisfying requirements 
quality improvement function notifies organizations low quality data proposes highest quality value obtained previous step 
organizations may choose adopt highest quality data 
idea brokering function filters normal interaction client organizations cis adding possibility discover invoke equivalent services different organizations execute quality filtering results obtained 
improvement function feedback mechanism uses results brokering propagate highest quality data 
design specifying functions provided organizations copy service implemented distributed protocols 
distributed service inherently scalable robust service implemented centralized component request load automatically shared components implementing fault single component impact availability service 
features choice appropriate cis context 
details perform quality comparison determine highest quality value abstracted context assume provided architectural components 
preliminary assumptions order model communication environment cis assumptions application infrastructure services implemented software components 
software components fail crashing causing service context simply consider intuitive definition operational equivalence operations equivalent return equivalent data defined quality knowledge repository 
mecella communication infrastructure abstracted asynchronous distributed system communication links provided reliable message sent non component eventually delivered non recipient message transfer delay unpredictable 
service arbitrarily slow due unpredictable service workload 
basis assumptions impossible distinguish service extremely slow order guarantee service termination additional assumption required minority software components crash time 
service design preliminary definitions required specifying service 
define quality requirement constraint value specific dimension property data object represented data graph data quality requirement set qr op name property data quality dimension defined model op value defined domain data quality dimension eval function assesses quality data object say data object satisfies data quality requirement qr op contains property corresponds eval op true 
input primitive read defined set quality requirements qr qr satisfies qr satisfies qr 
functions provided primitives read qr invokes operation implement equivalent operation returns data satisfy set quality requirements qr 
represents way software system belonging organization access service propose proposes data object organizations 
mechanism uses order provide organizations quality feedbacks 
service invoked software system inside organization making call read primitive 
read return caller data objects satisfying requirements 
obtained objects chosen proposed organization propose primitive propose service give non invasive feedback quality data object allowing organization improve quality data maintaining autonomy decision 
implementation service relies function abstracted primitive realized cooperation architectural components managing data quality cooperative information systems compare qd returns data object highest quality set respect set quality dimensions qd 
org propose read org communication infrastructure propose read fig 

deployment data quality broker service compare primitive abstracts execution quality comparison set data instances 
comparison possible data objects instance equivalent classes returned result determined 
specify mechanisms criteria comparison 
issues scope 
just point comparison take account trust values provided rating service order avoid erroneous evaluations organizations low quality data propagate 
protocols service implemented set identical software components deployed inside different organization executed independently see 
locally implements primitives defined previous section 
access reliable multicast primitive denoted rm send message specific delivery guarantees :10.1.1.33.2943
informally reliable multicast ensures non crashed component eventually delivers set messages sent components 
primitive implemented asynchronous distributed system simple deterministic algorithms :10.1.1.33.2943
describe steps protocol executed components read qr 
sake simplicity assume operation implemented organization 
real world cases equivalent operations returning equivalent data discovered quality knowledge repository 
protocol works follows example run protocol depicted mecella rm reply compare 
reply rm propose rm propose ob fig 

example data quality broker execution 
invoking organization invokes application service issuing rm group application services implementing starts timeout 

returns xml document containing objects quality 

timeout expires application services replied waits till majority reached 
condition eventually occur previously supposed 

gathering replies return caller xml document including data objects satisfy quality requirements 

applies compare primitive order obtain highest quality data object ob ones 
invokes propose ob component issuing rm propose ob 
intuitively protocol terminates exploiting preliminary condition majority components reply 
reliable multicast primitive communication ensures components receive proposal 
note order ensure termination service guarantee best effort semantic return data satisfy requirements 
case negotiation start requester choose relax conditions quality data protocol parameters example specifying strict quality requirements higher timeout value 
managing data quality cis merges issues research areas computer science databases software engineering distributed computing security information systems 
implies proposal integrated solutions challenging 
framework support data quality management cis proposed 
specifically framework includes model data quality data exported cooperating organizations ii design infrastructure service brokering improving quality data 
complete development complex framework data quality management cis requires solution issues managing data quality cooperative information systems application services considered simple read data access services export data associated quality 
general application services encapsulating business logic able updates considered impact extensions quality data manage considered 
algorithms data quality improvement distributed settings investigated 
multiple copies data ways possible engage improvement actions reconciliation approach consisting reconciling differences multiple copies single representation ii selecting approach implies choice copy data best quality 
approaches widely considered literature framework opportunity rely available quality data adopting 
reliability cooperating organizations generally trust issues need taken account example considering happens organization provides data low quality certifies high quality 
acknowledgments 
supported project methodologies tools data quality cooperative information systems www dis uniroma dq 

batini mecella enabling italian government cooperative architecture ieee computer vol 


dayal hsu ladin business process coordination state art trends open issues proceedings th large databases conference vldb roma italy 

casati georgakopoulos shan eds proceedings nd vldb international workshop technologies services vldb tes rome italy 

introducing data quality cooperative context proceedings th international conference information quality iq boston ma usa 

galhardas florescu shasha simon extensible framework data cleaning proceedings th international conference data engineering icde san diego ca usa 

jarke lenzerini vassiliou panos vassiliadis eds fundamentals data warehouses springer verlag 

kon wang madnick data quality requirements analysis modeling proceedings th international conference data engineering icde vienna austria 

mihaila raschid vidal querying quality data metadata proceedings th international conference extending database technology edbt valencia spain 
mecella 
mecella baldoni catarci batini architectural support data quality cooperative information systems technical report project dipartimento di informatica sistemistica universit di roma la sapienza roma italy 

catarci lenzerini representing interschema knowledge cooperative information systems journal intelligent cooperative information systems vol 


data quality cooperative information systems doctoral poster th large databases conference vldb hong kong 

data quality information age 

deutsch fernandez florescu levy suciu xml ql query language xml proceedings th international world wide web conference www toronto canada 

cattell barry eds object database standard odmg morgan kaufmann publishers 

mecella batini data quality business proceedings workshop web services business semantic web foundations models architecture engineering applications conjunction caise toronto ontario canada 

schneider goods models models distributed systems mullender ed 
acm press 

fischer lynch paterson impossibility distributed consensus faulty process journal acm vol 


hadzilacos toueg fault tolerant broadcasts related problems distributed systems mullender ed 
acm press 
