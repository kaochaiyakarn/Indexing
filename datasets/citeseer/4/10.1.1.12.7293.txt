support multitasking background awareness interactive peripheral displays blair macintyre elizabeth mynatt stephen klaus hansen joe gregory corso college computing gvu center georgia tech atlanta ga blair mynatt cc gatech edu describe kimura augmented office environment support common multitasking practices 
previous systems rooms limit users constraining interaction desktop monitor 
kimura leverage interactive projected peripheral displays support perusal manipulation awareness background activities 
furthermore activity represented montage comprised images current past interaction desktop 
montages help remind user past actions serve springboard ambient context aware reminders notifications 
keywords context aware computing ubiquitous computing ambient displays office computing rooms 
advances technological capabilities enable new forms interaction suggest re examination previous interface concepts fully realized technology day 
research take starting point interactive projected displays individual offices 
discussed context ubiquitous computing augmented environments displays envisioned natural extension traditional computing setting 
particular interested leveraging projected displays peripheral interfaces compliment existing focal areas supporting natural flow setting 
believing effective design peripheral displays revolutionize human computer interfaces intuitive appeal displays rise assortment exciting research exploring possible ways take advantage people permission digital hard copies part fox personal classroom granted tee provided copies tbr commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific fee 
uist ol orlando fi copyright acm university aarhus aarhus denmark marius daimi au dk school psychology gvu center georgia tech atlanta ga gregory corso psych gatech 
edu augmented office environment including focal peripheral interactive displays 
ability utilize peripheral information comparatively little effort 
peripheral displays assist users managing multiple working contexts coherent sets tasks typically involving multiple documents tools communications 
goal supporting multi tasking new received considerable attention variety research communities 
awareness need support multiple simultaneous activities drove development multi windowed graphical user interface subsequent addition multiple virtual desktops interfaces 
unfortunately graphical user interfaces provide effective support managing multiple working contexts 
limited screen real estate impossible maintain awareness background activities 
constraining interaction desktop poor match common human behaviors large amounts physical space simultaneously organize monitor manage multiple activities 
goal research leverage large projected interactive surfaces support innate human abilities peripheral awareness human cognitive practices multi tasking loading information physical environment 
system kimura separates user desktop parts focal display desktop monitor peripheral displays projected office walls shown ibi uist montage design 
items spiral center relative importance 

user shifts working contexts background activities illustrated visual montages peripheral display 
kimura point view working context cluster documents related general activity managing project participating conference teaching class collection going interactions people objects related activity 
cluster numerous documents including text files web pages application files course activity plus indications going activity email messages replies outstanding print jobs 
kimura automatically tracks contents working context tagging documents relative importance 
previous systems rooms users demarcate boundaries working contexts manually operation light weight user perspective error prone left system 
contribution creating logs activity support awareness resumption background tasks 
background activities working contexts visualized montage images garnered activity logs 
montages analogous room overviews provided multi context window managers systems show exact layout current windows room goal show visualizations past activity context 
visualizations help remind user past actions see arrangement transparency component images automatically creates icon working context 
contribution design visualizations past activity 
montages displayed interactive projected surface help support common whiteboard practices 
users reposition montages example indicate respective priority background activities annotate informal reminders 
additionally montages serve anchors background awareness information gleaned context aware infrastructure 
supporting interaction montages integration background contextual cues represents key contribution research 
overview scenario highlights key interactions system 
illustration discuss substantial related area describe contributions respect previous efforts 
describe detail novel aspects interface design interaction montages 
discuss system architecture design decisions respect creating scalable flexible context aware architecture 
close describing plans research 
scenario charlie walks office monday morning whiteboard displays multiple montages consisting documents computer images 
glancing board charlie decides working new budgets wait wednesday quick reminder montage 
decides start day working advisory board briefing week 
selects montage desktop reconfigures contain applications left running worked briefing friday montage appears wall near monitors 
netscape browser contains agenda meeting initial set slides loaded powerpoint 
notices different netscape window prominently displayed montage showing part review year briefing studied carefully friday afternoon 
works slides decides email laboratory director ask include preliminary data presentation answer criticisms review 
sends message charlie wonders ll get reply busy director known timely responses 
charlie works slides hour sends copy printer 
checking printer queue finds large print jobs 
mentally reminding get printout decides shift gears review notes meeting 
selects project montage board briefing materials disappear desktop updated montage visible wall 
efforts writing project desktop notes design session month 
notes notices face laboratory director visible whiteboard layered top briefing notes 
ah director coffee area 
intercepts director gets quick answer needed 
finishes reviewing design notes charlie realizes meeting shortly 
charlie quickly saves notes grabs lunch 
comer eye notices briefing montage printer icon overlaid top 
printout 
charlie heads retrieve printout meeting 
uist november related research leverages extends efforts areas hci especially extensive past multiple workspace window managers especially rooms projected displays office settings especially 
influenced build research context aware ubiquitous computing ambient displays activity monitoring 
multiple managers long recognized fundamental problem desktop computer systems small amount display real estate available users 
starting rooms continuing systems task gallery windows virtually window desktop computer system virtual desktop managers help users manage large numbers application document windows small space desktop monitor 
mismatch small amount screen space common messy desk practices people engage working argued arguments observations formed basis subsequent virtual desktop managers 
systems differ refer rooms discussion follows 
rooms observation working specific task users typically interact small working set documents tools 
difficulties working multiple tasks overcome simply giving user desk screen space windows shared tasks making impossible arrange windows windows tasks near 
furthermore difficult navigate efficiently window groupings large flat virtual space additional navigation metaphors constraints 
rooms metaphor allows users collect windows representing documents tools screen sized rooms task navigate rooms switch working set windows 
rooms subsequent systems provide variety tools navigating rooms obtaining overview space sharing windows rooms clocks system monitors control panels 
rooms allows shared window different size configuration room feature subsequent systems 
discussed section extend notion task defined rooms subsequent systems activities include just documents application windows currently 
implication distinction portray past actions including completed tasks working closed application part activity 
additionally move iconic representation activity desktop physical office augmented whiteboard 
montages iconic representation activities designed convey done task just windows currently open 
montages constructed images important windows different measures importance possible 
furthermore collect additional information activities status print jobs email collaborators information generating montages support peripheral awareness state activities 
place activity icons montages augmented whiteboard support awareness background tasks see section detailed discussion augmented whiteboard 
navigation interface design issues rooms subsequent systems designed overcome fact focal desktop typically visible 
having representations activities continuously visible large interactive surface take advantage users spatial abilities organize monitor navigate directly desired activity 
attempts leveraging abilities standard display replacing desktop world containing documents 
task gallery gone furthest bringing live applications true world 
takes advantage input rendering redirection features custom version windows existing applications space 
task gallery effectively version rooms rooms laid hallway current room wall hall 
proposing number interaction metaphors support interacting documents environment display task gallery suffers limitations rooms stemming lack screen real estate 
collaborative workspace supplement traditional desktop uses ole activex containers capture images live applications windows desktop 
focuses supporting organization documents shared world analogous designers architects organize physical artifacts real world 
users select documents models working inclusion workspace arrange working contexts reopen time 
designed support multi tasking activities analogous file manager task manager 
number systems proposed moving documents desktop real physical world head mounted displays projectors :10.1.1.39.1129
systems aim increase apparently available screen space capitalize people spatial abilities leverage association virtual information physical objects 
limitation systems support people orchestrating areas focused activity require high resolution displays peripheral areas information require minimal attention interaction 
uist interactive wall sized displays influenced research augmented whiteboard interfaces particular support informal practices individual offices 
system designed compliment interface 
montages segment responds gestures moving annotating segment 
generally whiteboard interface designed support casual inspection organizational activities 
extends previous efforts whiteboard interfaces directly connecting interaction whiteboard interaction desktop 
extension traditional desktop computing whiteboard hosts montages act links back previous activities 
additionally whiteboard serves display medium background awareness cues 
substantial research augmented whiteboards conference rooms including tivoli 
interaction techniques large display surfaces throwing useful environment 
likewise advanced projector display techniques enable users paint interactive whiteboard surface office :10.1.1.39.1129:10.1.1.39.1129
related large number systems attempt capture information live desktop systems variety purposes share goals system share engineering concerns 
task gallery mentioned closest goal capturing information running applications possible 
lumiere closest current implementation uses windows system level hooks get access applications user activity 
lumiere information build model user activity applications far different 
mentioned section rely human perceptual abilities motivated ambient peripheral displays ambientroom 
montages act peripheral displays information background tasks non obtrusive manner 
novel aspect construction ambient displays actual images user contrast iconic imagery 
montage styles reminiscent piles conveyed age type items desktop folders 
system viewed context aware application function rely continued deployment context sensing aggregation infrastructure context toolkit :10.1.1.32.1627
know context aware applications combine detailed model user multi tasking activity external context way 
interaction design multitasking complex albeit common human activity 
piles periphery desk physical manifestation multitasking indicating repeated practice pulling materials center focused collapsing back pile periphery attention turned 
phrases keeping tabs things juggling fast need constantly monitor multiple activities 
intent design support common multitasking practices 
constantly available visual representations background tasks afford interactions support multitasking 
representations available perusal reminders large scale organization prioritization 
content representations serves remind users past actions 
new information background activity attached representations leveraging peripheral awareness capabilities 
sections describe interface design detail 
attempt consistent terms interchangeably 
notably design envision interactive wall display 
large display created projectors project left right desktop monitors 
currently display interactive projecting smart boards tm commercially available interactive whiteboard 
additionally research influenced interactive whiteboard 
refer wall displays whiteboards 
final version system include whiteboard functionality similar systems 
basic interaction wall display envision types interaction wall display 
importantly users treat wall display peripheral interface keeping track existence changes background activities 
second users directly manipulate montage images conjunction whiteboard tasks standing wall display 
selecting montage triggers task switch 
operation performed desktop wall display 
contents past activity disappear desktop reappear montage wall display 
simultaneously contents new task appear desktop 
montage current task displayed near desktop monitors 
near periphery display allows user remain aware contextual cues past browsing activity longer part active desktop 
additions montage annotations described available perusal 
montages retain position wall display background task return prior location user explicitly rearranges montages 
montages manipulated obvious ways wall display moved deleted 
simple gestures associated common behaviors montages segments react specified behavior gesturing adjust size fit contents 
currently behaviors uist november overview shot peripheral wall display desktop monitor 
montages include annotations red blue text due wed 
connected montages moving selected annotating de selected 
annotating montages example interaction suited wall display dry pens various colors provided smart boards user may annotate montages simple ink 
visualizing tasks montages montages peripheral representations user working contexts 
express semantics working contexts relationships non intrusive albeit suggestive way 
explored various visualizations information conveyed montages see figures 
montage prototypes images user actions working context manipulated provide quasi summary past activity 
point designs informal understanding key characteristics working context history characteristics primacy consumed user time recency actions user inter relationships parts tasks performed close concert highlighted 
combine literal representations working context application snapshots various visualization techniques convey history glance 
montages tried obtain sketchy look order suggest information wall displays peripheral active working context user montages shown sketchy backgrounds soft colors separate color montage 
visualization techniques common prototype designs 
example recency encoded transparency documents opaque 
levels transparency 
example watermarks highly translucent images 
cases low res images documents entirely readable visual utility montages arranged spiral decreasing significance contents 
visualization montages retaining original spatial layout documents 
ii iiii montage visualizations relative interdependence documents 
similar thumbnail image 
enhance recognizability images incorporate watermarks application icon major applications 
figures demonstrate major organization schemes montages 
spirals significance 
design documents organized significance task significant documents easily recognized 
shown document images organized spiral significant document placed front significant documents order decreasing significance 
sizes documents decrease significance 
current significance rating measure time spent particular item weighted 
uist preserving spatial relationships 
spatial organization documents desktop visually salient recall iconic rendering relationship may easily recognizable user 
shown document images montage placed akin desktop display sizes relatively 
additionally stacking order documents preserved document represented front 
montages retain aspect ratio desktop display case 
relative interdependence mapping 
complex activities include number inter related tasks different information sources different purposes sub groups emerge working context 
likewise documents may strong similarity ratings due common content 
exposing relationships may help characterize activity especially activities left untouched long periods time 
visualization tries take advantage relationships modified version automatic layout algorithm 
measure relative interdependence documents currently number times user switched documents 
algorithm creates graph nodes edges mechanical system simulation nodes edges tend stay nodes edges get 
edges may intensity higher intensity edge meaning nodes connected edge attracted 
case nodes documents edge documents user switched documents 
connectedness documents intensity edge calculated probability user switch documents 
measure calculated actual switches user documents 
top left document left montage lot connection documents 
right montage leftmost documents 
background awareness cues stated previously montages serve anchors background awareness cues related particular working context 
examples shown earlier scenario 
person deemed critical background activity available face shown montage 
current system notice emails sent individuals reply 
individuals available public place coffee room montage adjusted note availability 
faces extremely salient visual cues intention sparingly 
awareness cues associate montage example tools left operating background 
status jobs print request reflected montage 
illustrates completed print job particular activity 
currently conducting experiments determine relative different forms background cues 
working contexts desktop multi desktop systems rooms provide variety facilities controlling applications appear different desktops 
architecture windows minimized need facilities kimura 
small utility applications commonly shared desktops integrated taskbar automatically shared desktops 
importantly ignore programs old multiple document interface application opens large window creates subwindows document applications generally right thing documents opened context manager 
application running user tries open clicking icon documents applications shared instance messaging applications instant messenger mail readers outlook express attempt activate window 
applications window document word activate window opened documents create new windows new documents 
programs web browsers internet explorer create new window user tries open application 
windows multi desktop managers function win facilities hide windows current desktop 
desktop manager keeps track windows opened desktop hidden window created different desktop activated desktop manager reveals adds current working context 
part uist november oo external context agents monitor agent rp map monitor age zt button monitor agent tuple server interpretation agents augmented architecture kimura 
arrows indicate primary data flow 
system designed collection agents communicating shared tuple spaces 
current desktop continues exist desktops 
expect discover applications behave correctly introduce additional window management controls necessary deal special cases 
inferring working contexts problem inferring person working contexts non trivial 
person goes daily activities interact multitude documents files email messages web pages accomplish task 
view working context cluster documents relate particular task activity 
basic problem address tell documents associated working context 
example new web page accessed document opened part current working context start new working context signal shift existing working context 
stage research attempt solve problem 
chosen avoid automatic techniques unclear want success failure automatic techniques confound study utility peripheral information displays 
enlist help user having identify explicitly switch working contexts set lightweight tools create destroy manipulate working contexts time 
system architecture kimura architecture broken main components shown desktop monitoring management agents windows focal display external context monitoring agents tuplespace communication activity interpretation agents augmented whiteboard 
general terms desktop external context monitoring agents continuously collect information user activities store raw tuple spaces 
desktop agent keeps track windows belong activities switches windows visible user requests different working context 
activity interpretation agents collect information create representation user activities interpreted tuple space 
whiteboard process uses representation create montages augmented whiteboard display supports interactions whiteboard 
design considerations architecture designed flexible research exploration practical real 
satisfy goal majority system aside low level windows routines implemented java blackboard architecture communication 
system designed collection distributed agents communicating centralized tuple spaces implemented java tspaces 
approach understood systems open agent architecture interactive mural 
tuple spaces robust face process failure allow agent implemented independently 
ensure system practical real design decisions low level windows hooks api monitor control applications 
hooks applications provide information exactly form desire hard robustly acquire window images 
time expect add special handling applications see section 
change behavior windows desktop substantial way aside controlling windows visible 
approach contrasts sharply task gallery example replaced windows desktop entirely different metaphor 
desktop controlled asynchronously rest system 
cost activity monitoring data interpretation display augmented whiteboard impact performance desktop 
similarly user switches activities desktop reacts immediately regardless speed change whiteboard 
remainder section describe major components system close discussing engineering challenges creating system sort 
desktop monitoring management agents focal display windows computer 
win hooks lets intercept events ranging low level input window manager events windows system wide 
component running desktop system uses dll provides callbacks hooked events ibi uist detected operating system 
callback information hooked event packaged sent windows message desktop monitoring management agent written java stores information desktop raw data tuple space 
agent captures entire history layout windows desktop maintains list currently open windows activity 
time window moved resized focus changes window layout recorded 
time window acquires focus snapshot window taken stored networked filesystem 
strategy ensures relatively date image window overloading system capturing window update 
windows lets capture visible part window capturing window focus ensures window obscured 
desktop agent watches tuple space tuples see section signal user switched different activity 
tuple seen windows current activity hidden requested activity exposed 
desktop agent handles exposure hidden windows activity activated discussed section 
external context monitoring agents addition monitoring user interaction application windows want acquire relevant information provide clearer picture activity 
illustrate external context monitoring email web accesses status print jobs 
monitoring currently done instrumenting specific applications strategy may change time 
web access monitored proxy server web monitoring agent 
printer email monitor agents run unix mail print servers 
email monitor agent periodically scan user inbox sent mail folders new messages correlates message ids writes trail mail activity imap raw data tuple space 
printer monitor agent watches print queues jobs created user writes status information printer raw data tuple space 
kimura assumes operate general context system context toolkit cooltown :10.1.1.32.1627
currently java buttons trigger sorts external context events system generate arrival colleague 
ibutton events written ibutton raw data tuple space ibutton monitor agent various agents testing demonstration purposes 

hooked context toolkit infrastructure georgia tech plan soon 
tuplespace communication mentioned tuple spaces blackboard systems common current distributed interactive systems offers number advantages connection oriented event distribution schemes 
advantages include resistance isolated process failure global shared state simplicity unstructured data store 
tspaces provides persistent tuple spaces greatly simplifying debugging individual agents 
situations typically cause problems tuple spaces 
trouble dealing high volume updates need distributed low latency making inappropriate distributing data mouse motion events 
second performance event matching algorithms suffers tuple space large 
address concern sending high frequency data capture mouse motion actions button keyboard presses 
address second concern multiple tuple spaces shown 
raw data tuple spaces currently store transient data collected various monitors 
interpreted data tuple space contains processed data create montages 
data flow 
data flow shown arrows 
data flows monitor agents interpreter agents interpreted tuple space augmented whiteboard process 
whiteboard process monitors ibutton raw data space simulated context tuples uses generating montages 
control data flows direction whiteboard process interpreted data space 
whiteboard stores montage annotations tuples created user selects montage switch interpreted space 
monitor interpreter agent cares activity changes subscribe receive tuples 
example desktop monitor agent switches contents desktop windows specified activity receives tuple 
context interpretation context interpretation done java agents collect data raw tuple spaces merge data internal activity timelines store information needed augmented whiteboard interpreted data space 
principle agent desktop agent extracts representation current document activity desktop raw data space 
implemented agents examples potentially useful activities 
printer agent extract status print jobs current activity printer raw data space creates print job tuples associated current montage 
email agent extracts imap raw data space list email messages sent current activity uist november replies received creates tuples associated current montage 
current collection montages uses fraction data collect currently position size image window ignoring web access log architecture simple experiment alternative montage styles content 
interpreters maintain complete internal representations merged data access tuple spaces including interpreted data space desired 
modified relatively easily extract alternate collections activity information add interpreted data store 
augmented whiteboard augmented whiteboard implemented single process main components implemented separate threads graphical input output satin communication interpreted ibutton raw data spaces described section communication multiple smart boards 
whiteboard display class instance satin sheet montages implemented segments top satin patches annotations basic satin strokes montage image elements implemented satin image class 
standard custom satin interpreters recognizers control montages 
start whiteboard reads tuples existing montages interpreted data space creates initial display 
whiteboard process subscribes interpreted data space similar tuples reflects tuple space updates display 
tuples exist montage process monitors ibutton space appearance disappearance recipient email uses information discussed section 
whiteboard process talks directly smart boards office wall 
translates tool position messages coordinate system satin window id smart board provided smart board api sends synthetic mouse events satin sheet 
tool change messages blue pen picked sent satin sheet actions coloring montage annotations 
engineering challenges obstacles aside usual challenges associated building complex distributed application communicating huge amounts image data components dealing replicated distributed state significant engineering challenges related monitoring controlling activity windows desktop 
hooks api allows monitor window mouse keyboard activity allow see going inside applications files open windows associated application 
pointed standard application interface inspect applications resort dealing applications case base basis 
difficult example sort splash screens dialog boxes content windows 
feature foresee needing reopen documents 
assuming discover just window images selected set applications urls web page accesses folders message numbers email messages document details key applications large set problems dealt properly reopen document 
ensuring window correct place mention scrolling document correct location possible general case 
believe kimura important step unifying focal peripheral office displays way supports existing practices 
adding activity montages augmented whiteboard integrate peripheral awareness background activities existing area allow users organize annotate montages content whiteboard 
illustrates key ideas project currently useful managing multiple working contexts interesting research questions left explore 
example integrate ideas rekimoto time machine computing system system allow users scroll back time seeing older montages activities 
ideally allow users scroll time need allow users reopen old documents applications 
requirement means discover information open window application document represents discussed section 
goal deal common applications microsoft office netscape navigator add additional application support time 
key application need richer email reader 
currently monitor mail sent received know message folders commonly accessed activity partially written messages open addressed 
rich area engineering research lies augmented whiteboard 
intend integrate features whiteboard integrate features desktop applications 
feed information user activity typing recommender system space whiteboard display documents relevant current activity :10.1.1.16.9692
general better logs support current activity displaying collection images documents near focal display provide greater context user eventually give access documents 
uist major focus design interaction montages 
gain better understanding working contexts continue refine elements shown arranged 
example adjust montage contents length time activity conducted help users reacquire mental context memory events fade 
intend provide better support interacting annotations develop methods rearranging annotations montages change time 
acknowledgments supported nsf academic equipment sun microsystems software donation microsoft 
colleagues students feedback ideas 
mogensen shapiro wagner 
supporting practice landscape architecture 
proceedings sixth european conference computer supported cooperative ecscw copenhagen denmark pp 
buxton 
integrating periphery context new model telematics proceedings graphics interface pp 

cohen cheyer wang 
open agent architecture aaai spring symposium pp 
mar 
cooltown home page www cooltown hp com feiner haupt solomon 
windows world windows augmented reality proceedings acm uist symposium user interface software technology pages 
feiner 
hybrid user interfaces breeding virtually bigger interfaces physically smaller computers proceedings cm uist symposium user interface software technology pages hilton head sc 
henderson card 
rooms multiple virtual workspaces reduce space contention window graphical user interfaces acm transactions graphics vol 
july pp 

hong landay 
satin toolkit informal ink applications 
proceedings acm uist user interfaces software technology san diego ca pp 

horvitz breese heckerman 

lumiere project bayesian user modeling inferring goals needs software users proceedings fourteenth conference uncertainty artificial intelligence july 
hutchins 
cognition wild cambridge ma mit press 
ibutton home page 
www com 
ishii ullmer tangible bits seamless interfaces people bits atoms proceedings acm chi conference human factors computing systems pp 

fox hanrahan winograd 
event heap enabling infrastructure interactive workspaces available graphics stanford edu papers szl 
dynamic layout algorithm display general graphs 
heckbert 
ed 
graphics gems iv academic press pp 
feiner 
language level support exploratory programming distributed virtual environments proceedings acm uist symposium user interface software technology pages seattle wa 
mander salomon wong 
pile metaphor supporting casual organization information proceedings acm chi conference human factors computing systems pp 

norman 
psychological issues support multiple user centered design norman draper eds lawrence erlbaum nj pp 

moran chiu harrison kurtenbach minneman van 
evolutionary engagement ongoing collaborative process case study 
proceedings cscw 
mynatt igarashi edwards lamarca 
new dimensions office whiteboards 
proceedings pp 
mynatt 
writing wall proceedings interact 
pp 

raskar welch cutts lake fuchs :10.1.1.39.1129
office unified approach image modeling spatially immersive displays computer graphics proc 
acm siggraph annual conference series pp 

rekimoto time machine computing time centric approach information environment proceedings acm uist symposium user interface software technology pages 
rekimoto saitoh augmented surfaces spatially continuous workspace hybrid computing environments proceedings chi rhodes :10.1.1.16.9692
wearable remembrance agent system augmented memory personal technologies journal special issue wearable computing personal technologies pp 

robertson george van dantzich maarten robbins daniel czerwinski mary hinckley ken kirsten thiel david 
task gallery window manager 
proceedings ch pp 
salber dey abowd :10.1.1.32.1627
context toolkit aiding development context enabled applications appear proceedings acm chi conference human factors computing systems 
streitz holmer muller seitz steinmetz 
land interactive landscape creativity innovation 
proceedings chi 
pp wyckoff lehman ford 
spaces ibm systems journal vol 
uist november 
