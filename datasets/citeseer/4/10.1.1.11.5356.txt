meta patterns revealing hidden periodic patterns wei wang yang philip yu ibm watson research center ibm com discovery periodic patterns time series data active research area applications 
patterns hierarchical nature higher level pattern may consist repetitions lower level patterns 
unfortunately presence noise may prevent higher level patterns recognized sense portions data sequence support high level pattern may different layouts occurrences basic symbols 
may exist common representation terms raw symbol combinations high level pattern may expressed previous model defined raw symbols symbol combinations properly recognized existing method 
propose novel model meta pattern capture high level patterns 
flexible model number potential meta patterns large 
substantial difficulty lies identify proper pattern candidates 
known apriori property able provide sufficient pruning power 
new property component location property identified conduct candidate generation efficient computation mining algorithm developed 
apply algorithm real synthetic sequences interesting patterns discovered 
periodicity detection time series data challenging problem great importance real applications 
periodicity usually represented repeated occurrences list symbols certain order frequency :10.1.1.11.5358
due changes system behavior pattern may notable portion entire data sequence different patterns may different places different durations 
evolution patterns may follow regularity 
regularity great value understanding nature system building prediction models 
consider application inventory replenishment 
history inventory refill orders regarded symbol sequence 
brevity consider replenishment flu medicine 
shows history refill orders pharmacy weekly basis 
symbol stands refill order flu medicine placed corresponding week represents flu medicine replenishment week 
easy see replenishment follows pattern half year falls cycle second half year 
seasonal fluctuation forms high level periodic pattern period length year 
high level patterns may expressible previous model defined terms raw symbols due presence noise noise limited 
example major outbreak flu caused provisional replenishment th week 
replenishment frequency back week occurrences subsequent misaligned 
replenishment cycle notable quarters corresponding portions data sequence different layout replenishment occurrences 
characteristic determines representation twolevel periodicity expressive power traditional model periodic patterns takes raw symbols components 
traditional model symbol specified pattern uniquely matches counterpart data sequence occurrences pattern share unique common layout 
inherent limitation prevent interesting high level patterns captured 
note period length weeks annual pattern able generated traditional model pairwise comparison symbols corresponding week shown 
symbol denotes don care position match symbol corresponding position 
clearly little information conveyed pattern important level periodicity completely concealed 
tackle problem propose called meta pattern model capture high level periodicities 
meta pattern may take occurrences patterns meta patterns lower granularity components 
contrast refer patterns contain note applications seismic periodicity analysis period length usually unknown advance part mining objective 
introduced represent position pattern strong periodicity exhibits 
raw symbol basic patterns may viewed special cases meta patterns 
general noise occur various duration occur multiple times portion pattern notable long noise threshold 
allowance noise plays positive role characterizing system behavior noisy environment prevents meta pattern represented form equivalent basic pattern 
model meta pattern provides powerful means periodicity representation 
recursive nature meta pattern tolerate greater degree noises distortion capture hidden hierarchies pattern evolutions may expressible previous models 
previous example replenishment cycles easily represented respectively numbers brackets indicate offset component pattern :10.1.1.40.9892
level periodicity easily represented interpreted pattern repeats weeks pattern repeats week week 
shown rectangle box denotes portion corresponding low level pattern notable :10.1.1.40.9892
unfortunately flexibility meta pattern poses serious challenges discovery process may encountered mining basic patterns 
ffl basic pattern degrees freedom period number positions pattern choice symbol single position meta pattern additional degree freedom length component pattern 
incurred fact component may occupy multiple positions 
extra degree freedom increase number potential meta pattern candidates dramatically 
ffl patterns meta patterns may collocate overlap portion sequence 
result meta pattern mining process large number candidates component higher level 
aggravates mining complexities 
identify proper candidate crucial efficiency mining process focus algorithm part 
tackle problem employ called component location property addition traditionally apriori property prune search space 
inspired observation pattern may participate meta pattern notable portions exhibit certain cyclic behavior 
algorithm devised identify potential period meta pattern candidate period potential components lengths meta pattern 
set meta patterns categorized structures evaluated designed order pruning power provided properties fully utilized 
summary claim contributions 
ffl model meta pattern identified capture cyclic relationship discovered periodic patterns enable recursive construction exhibited cyclic regularities 
ffl component location property proposed provide pruning power addition traditional apriori property 
ffl computation algorithm designed identify verify potential meta pattern candidates 
remainder organized follows 
section gives brief overview related research 
general model section 
section outlines major steps algorithm 
section presents experimental results 
drawn section 
related previous mining sequence data fell categories discovering sequential patterns mining periodic patterns :10.1.1.11.5358:10.1.1.40.9892
primary difference models sequential pattern purely take account number occurrences pattern frameworks periodic patterns focus characterizing cyclic behaviors 
due space limitations give brief survey periodic patterns 
han algorithms efficiently mining partial periodic patterns 
practice portion time series may contribute periodicity 
example stock may gain couple points trading session may regularity time 
type looser periodicity referred partial periodicity 
see model allows partial periodicity 
accommodate phenomenon system behavior may change time flexible model asynchronous periodic pattern proposed :10.1.1.11.5358
model qualified pattern may subsequence occurrences may shifted due disturbance 
parameters min rep max dis employed specify minimum number repetitions required segment non disrupted pattern occurrences maximum allowed disturbance successive valid segments 
intuition pattern needs repeat certain number times demonstrate significance periodicity 
hand disturbance valid segments reasonable bound 
appropriate treat disturbance signal change system behavior random noise injected persistent behavior 
parameter week week week weekly replenishment schedule annual pattern captured traditional model periodic pattern annual pattern captured meta pattern model 
meta pattern max dis acts boundary separate phenomena 
example shows valid segments pattern set min rep :10.1.1.40.9892
valid segment indicated shaded region 
set max dis valid segments separated disturbance symbol form valid symbol subsequence valid segments form valid symbol subsequence :10.1.1.40.9892
obviously appropriate values parameters application dependent need specified user 
note due presence disturbance subsequent valid segment may synchronized previous ones 
position shifting occurs 
satisfying requirements longest valid subsequence pattern returned 
phase algorithm devised generate potential periods distance pruning followed iterative procedure derive validate candidate patterns locate longest valid subsequence 
concerns patterns constructed raw symbols address problem meta patterns 
pointed earlier due extra degree freedom possessed meta pattern massive amount potential candidate components direct generalization existing algorithm designed mining patterns consisting raw symbols applied mine meta pattern efficiently 
fact serious challenges exist quickly identify proper candidate meta patterns unnecessary computation avoided 
focus candidate meta pattern generation candidate meta pattern validation 
patterns may occur frequently nature importance applications 
frequently occurred periodic patterns statistically significant patterns mined 
occurrence probability associated pattern 
pattern occurrence expectation pattern called statistically significant surprising 
efficient algorithm proposed mining patterns 
model meta patterns fa set literals 
traditional periodic pattern consists tuple components literal 
usually referred period pattern 
substituted literal enable representation partial periodicity 
example sequence literals represents incident occurs time instances data sequence 
period pattern definition 
note third component pattern filled strong periodicity presents data sequence respect component 
pattern may start data sequence patterns component literal need considered 
refer type patterns basic patterns component pattern restricted literal 
contrast meta pattern may pattern meta pattern component 
enables represent complicated basic patterns concise way possibly reveal hidden patterns discovered ones 
formally meta pattern tuple consisting components choices augmented offsets starting positions component respect meta pattern symbol don care pattern meta pattern 
require position meta pattern correspond non component ensure non trivial pattern 
example component corresponds exactly symbol explicitly record offset component pattern information easily derived :10.1.1.40.9892
meta pattern components :10.1.1.40.9892
length component number positions component occupies meta pattern 
previous example component length :10.1.1.40.9892
say span meta pattern equal sum length components meta pattern 
pattern interpreted pattern true positions weeks previous example followed pattern positions gap position behavior repeats positions :10.1.1.40.9892
brevity omit augmenting offset component length component position 
example abbreviation equivalent :10.1.1.40.9892
obvious meta pattern flexible model basic pattern basic pattern viewed special simpler case meta pattern 
hierarchical nature meta pattern concept level introduced represent depth meta pattern 
setting level basic pattern level meta pattern defined maximum level components plus 
definition level level 
note components meta pattern level 
instance meta pattern level level component level component 
terminologies associated basic patterns level patterns generalized case higher level patterns :10.1.1.11.5358
give brief overview terms defined basic patterns :10.1.1.11.5358
symbol sequence basic pattern say supports iff called match pattern symbol sequence list disjoint matches called segment respect iff form contiguous portion referred number repetitions segment 
segment said valid segment iff greater equal required minimum repetition threshold min rep valid subsequence respect set disjoint valid segments distance consecutive valid segments exceed required maximum disturbance threshold max dis 
said valid pattern exists valid subsequence respect parameters min rep max dis essence define significance periodicity boundary separate noise change system behavior 
appropriate values min rep max dis application dependent specified user 
similarly symbol sequence meta pattern gamma supports iff component symbol gamma mata pattern gamma valid subsequence respect turn called match define segment subsequence validation similar manner basic pattern 
meta pattern symbol sequence list disjoint matches called segment respect iff form contiguous portion referred number repetitions segment 
segment said valid segment iff greater equal required minimum repetitions min rep valid subsequence respect set disjoint valid segments distance consecutive valid segments exceed required maximum disturbance max dis 
said valid pattern exists valid subsequence respect symbol sequence parameters min rep max dis aim mining valid meta patterns longest valid subsequences valid subsequence repetitions corresponding meta pattern 
meta pattern start sequence need consider starting non component 
algorithm outline great flexibility model poses considerable difficulties generation candidate meta patterns 
focus efficient candidate generation meta patterns remainder 
known apriori property holds set meta patterns span stated follows valid gamma meta pattern constructed replacing component valid 
example 
valid meta pattern pattern generated replacing valid 
note level meta pattern non components level meta pattern non components 
intuitively examined result prune search space 
hierarchical characteristic meta pattern apriori property render sufficient pruning power proceed high level patterns discovered low level patterns 
identifying valid meta patterns level brute force method powered apriori property mine patterns level generate possible candidates level valid lower level patterns component verify symbol sequence 
verification base pattern performed efficiently linear time respect length symbol sequence verification candidate meta pattern may cumbersome process typically complicated structure candidate meta pattern :10.1.1.11.5358
fact considerable difficulty lies determining certain portion raw symbol sequence corresponds valid subsequence component candidate pattern especially component meta pattern 
strategy speed process store valid subsequences valid low level pattern pattern verified 
procedure determining portion sequence valid subsequence component accomplished table look operations 
strategy requires additional storage space usually lead order magnitude performance improvement 
refer method match approach remainder 
match approach cumbersome specifically suffers major drawbacks 
number candidate patterns certain level say level typically exponential function number discovered lower level meta patterns 
basic pattern degrees freedom period choice symbol position component meta pattern additional degree freedom length component 
additional degree freedom dramatically increases number candidate patterns generated 
valid lower level patterns number candidate patterns span exactly components level order theta theta 
typically huge number valid subsequences associated valid pattern may eventually relevant 
generating storing consume significant amount computing resources storage space turn leads unnecessary inefficiency 
overcome drawbacks observation 
property component location property valid low level meta pattern may serve component higher level meta pattern presence symbol sequence exhibits cyclic behavior cyclic behavior follow periodicity higher level meta pattern sufficient number times min rep times 
example meta pattern serve component higher level meta pattern locations valid subsequences exhibits cyclic behavior period equal span 
serve component property suggests avoid generation huge number unnecessary candidate meta patterns deriving candidates qualified span component combinations component location property 
identify qualified span component combinations need detect periodicities exhibited locations valid subsequences low level meta pattern 
achieved generating valid subsequences meta pattern 
fact set maximum valid segments sufficient 
pattern valid segment maximum valid segment portion valid segment 
example min rep max dis fs set maximum valid segments basic pattern symbol sequence 
usually number maximum valid segments smaller number valid subsequences 
total number distinct valid subsequences symbol sequence order hundreds 
essence exponential function number maximum valid segments 
furthermore maximum valid segment need store pair location indexes indicating starting positions 
example segment occupies positions positions location indexes pair 
location indexes maximum valid segments provide compact ingenious representation necessary knowledge valid low level meta pattern motivated observations 
ffl set location indexes maximum valid segments pattern easy compute possible starting positions positions valid subsequences 
starting position valid segment starting position valid subsequence valid subsequence essentially list valid segments 
maximum valid segment containing repetitions pattern gamma min rep distinct starting positions derived specifically positions gamma min rep occurrences pattern respectively 
instance positions starting positions derived similarly possible positions computed 
ffl starting positions valid subsequences exhibit cyclic behavior periodicity positions 
shows set possible starting positions positions valid subsequences 
min rep careful examination potential periodicities possible spans meta patterns may participate component include 
periodic behavior discovered starting positions positions span shown respectively 
strategy compute set possible starting positions identify ones exhibit periodicity 
procedure performed positions 
periodicity exists starting positions positions examine pair starting positions valid subsequence exists possible format higher level meta pattern possible span meta pattern possible length component 
shows candidate components generated valid subsequences support 
important notice maintenance location indexes maximum valid segments leads double win situation 
positive role candidate generation symbol sequence maximum valid segments possible positions possible starting positions possible starting positions valid subsequences observed starting positions span candidate components supporting valid subsequences span observed positions span component length component length component length component length 
computation approach enables verification process accomplished efficiently expensive generation maintenance valid subsequences necessity resort raw symbol sequence 
result devise efficient computation algorithm opposite traditional match approach sense discovery valid meta patterns base patterns accomplished pure computation performed location indexes maximum valid segments resort back raw symbol sequence 
demonstrated advantage offers orders magnitudes speed comparing match approach 
component location property provide substantial inter level pruning effect generation high level candidates valid low level meta patterns traditional apriori property render pruning power conduct mining process meta patterns level 
meta patterns categorized levels number non components pattern shown pruning effects provided component location property apriori property indicated dashed arrows solid arrows respectively 
consequently algorithm consists level iterations 
outer iteration exploits component location property inner iteration utilizes apriori property 
specifically outer iteration discovers meta patterns certain level say level consists phases 

candidate component generation 
newly discovered valid pattern meta pattern level generate candidate components meta patterns level 
component location property employed phase 

candidate pattern generation verification 
phase generates candidate meta patterns level candidate components discovered previous step validates 
phase utilizes apriori property contains iteration loop 
iteration certain number say non components examined includes steps 
candidate singular meta patterns level generated candidate components derived previous phase 
candidate meta patterns level non components generated discovered level meta patterns gamma non components 
newly generated candidate patterns validated 
inner iteration continues new candidate patterns level generated 
entire procedure terminates new candidate components generated 
due space limitations elaborate details algorithm 
interested readers please refer 
experimental results meta pattern discovery algorithm implemented aix workstation mhz cpu mb main singular meta pattern meta pattern non component 
called complex meta pattern 
non components basic patterns basic patterns non components non component basic patterns patterns non component patterns non components patterns non components level meta patterns non component non component non components non components non components non components level level level level meta patterns level meta patterns level meta patterns level meta patterns level meta patterns 
pruning directions memory 
real trace log search engine net employed evaluate benefits meta pattern model synthetically generated sequences measure performance algorithm 
traces web search engine specialized multimedia content search url www net 
apply meta pattern discovery algorithm traces traces 
table shows number patterns discovered sequence respective thresholds 
exist interesting patterns 
min rep max dis set respectively level meta pattern 
level pattern describes phenomenon 
weekday am pm est exists pattern number hits pm am est pattern number hits 
furthermore pattern repeated weekday week level pattern exhibits weekly trend level pattern 
addition compute meta patterns expressed form basic patterns 
call patterns meta patterns number patterns shown table 
table see discovered level patterns expressed form basic patterns represented meta patterns 
understand behavior proposed mining algorithm constructed long synthetic sequences sensitive analysis algorithm sequences section 
synthetic sequences synthetic sequences generated follows 
sequence consists distinct symbols occurrences symbols 
synthetic sequence generated follows 
sequence level pattern determined randomly 
possible levels 
number segments pattern determined 
length segment selected geometric distribution mean number repetitions lower level pattern segment randomly chosen min rep span lower level pattern 
number symbols involved pattern randomly chosen span number valid segments chosen geometrical distribution mean valid segment length disturbance determined geometrical distribution mean process repeats length sequence reaches 
sequences generated values table 
data set ds ds ds ds table 
parameters synthetic data sets proposed algorithm component location property pruning reduce candidate patterns 
shows effects component location property pruning method 
pruning effect represented ratio candidate patterns pruning total number potential patterns level 
compute pruning effects data set individually average shown 
evident pruning effects increase min rep threshold patterns 
addition higher level pruning effects evident constraints involved 
approach store maximum valid segments pattern 
compare computation approach match approach 
match approach pattern valid subsequences stored mine higher level meta patterns 
level pattern track cpu time consumed computation approach match approach 
assume information stored main memory 
number possible subsequences larger maximum valid segments match approach ad min rep max dis level patterns level patterns level patterns meta patterns table 
patterns discovered trace min rep level level level min rep 
performance meta pattern algorithm assumption 
ratio cpu time computation approach match approach calculated table 
obvious computation approach save cpu time comparing match approach 
number maximum valid segments far valid subsequences explained section 
level ds ds ds ds table 
cpu time ratio response time important criteria evaluation algorithm 
mine meta patterns different min rep threshold 
min rep mine patterns data sets average response time data sets taken shown 
average response time decreases exponentially min rep increases 
average response time bit long min rep small tolerable hour due pruning effects component location property computation candidate pattern generation 
mining algorithm applied symbol sequences different lengths 
response time algorithm linearly proportional length symbol sequence 
meta pattern proposed capture hierarchical cyclic behavior exhibited data sequence 
meta pattern serve component higher level meta patterns 
accommodate noises data sequence parameters min rep max dis qualify subsequence 
number candidates meta patterns large 
minimize response time pattern mining process pruning algorithm component location property apriori property proposed greatly reduce number candidate patterns 
addition algorithm designed identify potential meta pattern candidates 
meta pattern mining algorithm real traces interesting results discovered 
agrawal srikant 
mining sequential patterns 
proc 
icde 
garofalakis rastogi shim 
spirit sequential pattern mining regular expression constraints 
proc 
vldb 
han dong yin 
efficient mining partial periodic patterns time series database 
proc 
icde 
han pei asl chen dayal hsu 
freespan frequent pattern projected sequential pattern mining 
proc 
sigkdd 
lin risch 
querying continuous time sequences 
proc 
vldb 
ma hellerstein 
mining partially periodic event patterns unknown periods 
proc 
icde 
mannila toivonen verkamo 
discovery frequent episodes event sequences 
data mining knowledge discovery vol 

padmanabhan tuzhilin 
pattern discovery temporal databases temporal logic approach 
proc 
sigkdd 
srikant agrawal 
mining sequential patterns generalizations performance improvements 
proc 
edbt 
wang yang muntz 
tar temporal association rules evolving numerical attributes 
proc 
icde 
yang wang yu :10.1.1.11.5358
mining asynchronous periodic patterns time series data 
proc 
sigkdd 
yang wang yu 
mining surprising periodic patterns 
appear proc 
sigkdd 
yang wang yu 
meta patterns revealing hidden periodic patterns 
ibm research report 
zaki 
sequence mining categorical domains incorporating constraints 
proc 
cikm 

