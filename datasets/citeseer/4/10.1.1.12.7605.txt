pathchirp efficient available bandwidth estimation network paths vinay ribeiro rudolf riedi richard baraniuk jiri les cottrell department electrical computer engineering rice university slac scs network monitoring stanford university presents pathchirp new active probing tool estimating available bandwidth communication network path 
concept self induced congestion pathchirp features exponential flight pattern probes call chirp 
packet chips offer significant advantages current probing schemes packet pairs packet trains 
rapidly increasing probing rate chirp pathchirp obtains rich set information dynamically estimate available bandwidth 
uses packet interarrival times estimation pathchirp require synchronous highly stable clocks sender receiver 
test pathchirp simulations internet experiments find provides estimates available bandwidth fraction number probe bytes current stateof art techniques 
keywords probing networks bandwidth available bandwidth chirp inference inferring unused capacity available bandwidth great importance various network applications 
knowledge available bandwidth path improve rate streaming applications admission control server selection optimal route selection overlay networks congestion control service level agreement verification 
obtaining useful estimates available bandwidth routers possible due various technical privacy issues due insufficient level measurement resolution accuracy 
necessary infer required information network edge active passive probing scheme 
ideally probing scheme provide accurate estimate path available bandwidth short time possible preferably round trip supported nsf ani doe scidac de fc er darpa afrl texas instruments leadership university program 
email vinay riedi rice edu jiri cottrell slac stanford edu 
web spin rice edu www slac stanford edu 
times rtts imposing light load possible network 
current schemes available bandwidth estimation fall broad classes 
class schemes statistical cross traffic models delphi methods proposed 
schemes potentially provide accurate estimates cross traffic date designed single hop bottleneck scenarios may robust multi hop networks common practice 
second class schemes concept self induced congestion relies simple heuristic probing rate exceeds available bandwidth path probe packets queued router resulting increased transfer time 
hand probing rate available bandwidth packets face queuing delay 
available bandwidth estimated probing rate onset congestion 
schemes equally suited single multiple hop paths rely probe packets path unusual delay 
examples self induced congestion approach pathload topp 
pathload employs long constant bit rate cbr packet trains adaptively varies rates successive packet trains effort converge available bandwidth rate 
adaptive search pathload long convergence times order rtts mb probe traffic estimate 
topp uses packet pairs different spacings separated time estimates available bandwidth spacing packets receiver 
result topp delay correlation information obtainable packet trains closely spaced packets 
propose new self induced congestion available bandwidth estimation scheme call pathchirp 
unique pathchirp exponentially spaced chirp probing train see fig 

chirp trains probe packets time fig 

chirp probe train exponential packet flight pattern 
highly efficient 
chirp packets packets packet pairs 
second exponentially increasing packet spacing chirps probe network range rates mbps just packets 
advantage chirps packet train packet pairs capture critical delay correlation information packet pairs 
pathchirp exploits advantageous properties chirps rapidly estimate available bandwidth packets 
avoid confusion emphasize commonality pathchirp delphi algorithm packet train 
delphi uses chirps estimate available bandwidth range different time scales multifractal tree model bandwidth time 
self induced congestion principle 
pathchirp concept algorithm section ii analyze performance function parameters section iii 
testing pathchirp multi hop scenarios section iv compare topp pathload sections vi respectively 
section vii overviews experiments real internet 
conclude section viii discussion directions research 
pathchirp tool available open source freeware spin rice edu software pathchirp 
packet spacings normally require ii 
pathchirp concerned single sender single receiver path communication network 
explicitly permit multiple queues model path series store forward nodes constant service rate equipped fifo queues 
accurate model today internet 
focus estimating available bandwidth path queuing delays probe packets transmitted sender receiver 
information relative delays probe packets allows require clock synchronization sender receiver 
available bandwidth denote capacity output queue router node total traffic probes entering times define path available bandwidth time interval minimum time packet sent sender take reach router delay includes speed light propagation delay packet service times intermediate queues 
reality probe packets suffer queuing delays addition minimum delay probes transmitted arrive router outside time interval exactly measure large rtt effect queuing delay inconsequential 
pathchirp overview pathchirp estimates available bandwidth path launching number packet chirps numbered sender receiver conduct ing statistical analysis receiver 
notation chirps see fig 

consider chirp consisting exponentially spaced packets size bytes 
define ratio successive packet inter spacing times chirp spread factor queuing delay packet sender transmission time packet spacing time packets instantaneous chirp rate packet inter superscripts subsequent discussion 
cbr fluid cross traffic scenario chirps drop leads simple estimate packet queuing delay begins increasing 
assume constant probe packet size implies constant packet service time 
clocks sender receiver unsynchronized stable difference receiver sender time stamps queuing delay plus constant 
queuing delay excursions packet sending time fig 

typical chirp queuing delay signature 
assumption cbr cross traffic clearly reality 
particular due bursty traffic queuing delays typically increase monotonically chirp probing train matter 
fig 
depicts queuing delays typical chirp train 
refer plot queuing delay signature 
typically signature consists excursions zero axis bursts cross traffic 
excursions queuing delays returning zero 
chirp rate bottleneck link speed path allows queues relax absence cross traffic 
excursion usually ends increasing queuing delays causes chirp packets fill intermediate queues 
consecutive packets caused pathchirp uses shape signature estimate packet available bandwidth takes weighted average corresponding chirp obtain estimates chirp available bandwidth estimates available bandwidth averaging estimates obtained time interval excursion segmentation order accurately compute pathchirp segments signature regions belonging excursions regions belonging excursions 
principle self induced congestion assume increasing queuing delays signify available bandwidth instantaneous chirp rate moment decreasing delays signify opposite single hop scenario exactly true need true 
example packets spaced far apart say hour fact packets possibly induce tion network provide independent samples path queuing delay 
correct segment signature excursion regions apply regions 
basic idea pathchirp excursion seg tells little mentation algorithm quite simple 
intuitively increases remains larger consecutive packets packets part busy period congested queue path 
case expect correspond self induced congestion validating 
find regions signature consecutive packets 
practice necessarily know clock set hosts running pathchirp 
combined machine added noise time stamps infeasible excursion detection 
pathchirp uses relative queuing delay chirp detect excursions 
avoids hard queuing delay thresholds magnitude queuing delay heavily dependent link speeds vary path path 
example basic queuing theory mbps link loaded utilization poisson traffic source constant packet size larger average queuing delay similarly utilized mbps link fed poisson traffic 
details pathchirp excursion segmentation algorithm follows 
goal identify potential starting packet numbers respectively excursion 
packet potential starting point excursion 
define excursion packet parameter called decrease factor 
queuing delay relative decreased factor maximum queuing delay increase busy period time interval queue idle 
signature region long packets form excursion 
excursion signature usually terminate packet holds replacing 
excursion treated differently setting describe 
computing packet estimates remains compute packet avail able bandwidth estimates chirp packet falls categories de case belongs excursion terminates set satisfies 
case belongs excursion terminate set start excursion 
reason case chirp rate particular excursion higher available bandwidth note leads conservative estimate case belonging cases set includes belonging excursions decreasing queuing delay belonging excursions 
case excursion signature terminate choose pseudo code pathchirp algorithm see figs 

pseudo code uses delay information single chirp drop superscript quantities 
implementation details pathchirp infers available bandwidth online udp chirp packet probes 
pathchirp parameters probe packet size spread factor decrease factor busy period threshold time instantaneous estimates smoothed 
average probe load network pathchirp algorithm procedure estimate denotes vector single chirp train queuing delays initialize denotes current packet number number chirp packets excursion case choose case case choose case computing case loop return fig 

pathchirp algorithm range instantaneous rates chirp user specified options 
pathchirp spaces chirps apart procedure excursion max max maximum max return return return max fig 

excursion segmentation algorithm 
time achieve specified average probing rate 
udp packet carries sender timestamp receiver uses local timestamp delay estimation process 
pathchirp probe packets travel way sender receiver receiver performs estimation 
prefer merely echo back information sender avoid problem echo probe traffic interfering sender receiver chirp probes 
occur links full duplex example shared lans 
pathchirp addresses practical problem context switching 
context switch takes place host receiving probe packets packets temporarily buffered cpu handles processes 
introduces delays packets reaching application layer just context switch 
addition buffered packets rapidly reach application layer context switch 
delays may mistakenly construed router queuing delays corrupt pathchirp network inference 
difference consecutive receive time stamps threshold detect context switch discard concerned chirp 
note value lower transmission time byte packet oc link 
expect packet arrival times receiver exceed link oc lower speed 
currently hardcoded program 
adaptively chosen suit machine question 
currently studying ways circumvent ing time stamp corruption due context switching 
time stamps generated nic cards application layer ones 
pathchirp discards chirps dropped packets 
iii 
performance parameter choice section simulations better understand role various pathchirp parameters 
experiments single queue capacity mbps fed poisson packet arrivals 
cross traffic packet sizes randomly chosen bytes equal probability 
internet traffic shown weak correlations time lags ms spite stronger correlations long range dependence lrd time lags greater 
duration chirp typically ms poisson crosstraffic model possess lrd suffices 
varied packet size spread factor decrease factor busy period threshold keeping total probing load constant kbps 
recall maintain average low probing rate spacing chirp trains far apart 
choice performance metric mean squared error mse estimate normalized second moment true dence intervals 
probe packet size assess impact probe packet size estimation performance 
obviously number bytes transmitted chirp decreases reducing send chirps average probing rate giving estimates time interval observe set probing rates small results proportionately small intuitively crosstraffic arriving time interval bursty smaller instance cross traffic process far smooth contrary binary process packet arriving 
shorter chirps exhibit erratic signatures give accurate estimates 
fig 
demonstrates effect probe packet size estimation performance 
set vary parameters link utilization 
observe cases larger values give better performance 
cases fig 
mse increases slightly results show pathchirp generally performs better larger packet sizes 
internet experiments bytes 
spread factor spread factor controls spectrum probing rates chirp 
smaller leads experiments report normalized mse normalized mse probe packet size bytes probe packet size bytes fig 

normalized mean squared error vs probe packet size utilizations 
cases mse decreases increasing packet size 
experiment 
normalized mse normalized mse spread factor spread factor fig 

normalized mse vs spread factor utilizations 
mse decreases decreasing dense spectrum rates potentially increasing accuracy estimates leads finer sampling network delay potentially improving pathchirp ability identify excursions 
increases number packets chirp reduces number estimates time interval possibly degrading estimate fig 
demonstrates effect spread factor estimation performance 
observe mse decreases improves decreasing experiment uses byte packets 
give errors high cbr scenarios excluded experiments 
default 
busy period threshold decrease factor pathchirp uses normalized mse normalized mse busy period threshold busy period threshold fig 

normalized mse vs busy period threshold utilizations 
error improves decreasing busy period threshold decrease factor influence pathchirp excursion segmentation algorithm 
recall estimates corresponding excursion region region marked belonging compare cases section ii 
increasing decreasing harder bumps signatures qualify valid excursions leading estimates available bandwidth 
conversely decreasing increasing lead estimation available bandwidth 
optimal choice busy period threshold decrease factor depend cross traffic statistics queues path 
figs 
observe single queue poisson cross traffic scenario small values large values give better performance 
internet experiments indicate optimum values obtained experiments provide overly conservative estimates available bandwidth 
possibly due noise real experiments absent simulations 
pathchirp tool uses default 
iv 
multi hop scenarios real internet paths multi hop 
unaware rigorous study number congested queues typical internet paths hypothesize congestion largely occurs edge network close source receiver 
data packets encounter congested queues paths 
fact supports argument congestion occurs edge normalized mse normalized mse decrease factor decrease factor fig 

normalized mse vs decrease factor utilizations 
error improves increasing queue queue mbps mbps cross traffic cross traffic fig 

multi hop experiment 
backbone isps reported low packet loss queuing delay networks 
possible paths congested queues possibly important tools pathchirp robust presence congested queues path 
section tests pathchirp hop scenario depicted fig 

competing cross traffic packet arrivals poisson packet sizes chosen random bytes equal probability 
parameters experiment consists scenarios 
load queues cross traffic queue available bandwidth tight queue slack queue 
slack queue essentially adds noise chirp packet delays 
second set cross traffic rate slack queue zero 
error comparable magnitude scenarios implies pathchirp robust noise slack queue case 
experiment cross traffic rate queue mbps second queue mbps 
sets available bandwidth queue tight mbps second slack mbps 
fig 
observe mse practically indistinguishable cases normalized mse normalized mse avail bw st queue mbps nd queue mbps avail bw st queue mbps nd queue mbps time interval seconds avail bw st queue mbps nd queue mbps avail bw st queue mbps nd queue mbps time interval seconds fig 

performance multi hop experiments 
mse case queues loaded comparable loaded implying pathchirp robust multi hop paths 
slack queue mbps cross traffic cross traffic 
second experiment queues fed mbps cross traffic sets available bandwidth queue mbps second mbps 
fig 
surprise observe mse marginally smaller slack queue loaded 
results show pathchirp robust multi hop scenarios 
comparison topp section compares pathchirp topp simulations probing bit rate probe packet spacings 
topp topp sends packet pairs separated time 
denote set unique packet pair spacings sender arranged decreasing order corresponding average spacings receiver assumption proportional sharing see details bandwidth queues path plot vs piecewise linear increas ing slope 
linear segment equals implying break point gives available bandwidth prac tice measured values noisy making statistical estimation available bandwidth necessary 
employ regression statistical estimation described 
compare pathchirp topp keep probing loads compute mse available bandwidth estimates time intervals length seconds ob tain topp estimate probes transmitted pathchirp estimates obtained described section ii 
pathchirp fix spread factor separate chirps time maintain desired average probing rate 
topp packet pairs inter spacing times chirp packets separation times consecutive packet pairs chosen independent exponentially distributed random variables 
single hop scenarios experiment uses single queue link speed mbps fed poisson cross traffic 
probe rate mbps pathchirp parameters set bytes fig 
displays mse experiments different utilizations 
observe pathchirp outperforms topp order magnitude 
multi hop scenarios compare pathchirp topp multihop scenario depicted fig 
average probing rate kbps 
experiment set poisson crosstraffic rates queue mbps available second mbps available 
queue tight 
second experiment rates set queue mbps available second mbps available making second queue tight 
fig 
observe pathchirp outperforms topp single hop scenarios 
pathchirp uses queuing delay correlation information signatures just average delay increase packet pairs results surprising 
theoretical analysis supporting empirical findings part research 
normalized mse normalized mse pathchirp topp time interval seconds pathchirp topp time interval seconds fig 

comparison pathchirp topp single hop scenario utilizations 
observe pathchirp performs far better topp 
vi 
comparison pathload compare pathchirp pathload version pathload simple test bed rice university depicted fig 

goal compare efficiency terms number bytes obtain available bandwidth estimates equal accuracy 
pathchirp pathload differ measurement methodology output quantities 
pathchirp provides single estimate available bandwidth specified time interval pathload provides minimum maximum bounds available bandwidth variable amount time estimate 
perform sets experiments compare tools 
measure efficiency tools experiment compute average number bytes runs tool takes provide estimates accurate mbps 
obtain bytes pathload set bandwidth resolution parameter mbps take average number bytes estimates 
count bytes pathchirp employ procedure 
denoting start experi normalized mse normalized mse pathchirp topp time interval seconds pathchirp topp time interval seconds fig 

comparison pathchirp topp multi hop scenarios 
queue available bandwidth second second available bandwidth 
observe pathchirp performs far better topp 
machine cbr poisson sender machine pathchirp pathload sender ethernet switch machine cbr poisson pathchirp pathload receiver fig 

testbed setup rice university 
ment time compute estimate different values define value difference percentiles obtained experiments mbps 
compute number probing bytes pathchirp sends time interval length experiment pathchirp default parameter values packets 
set experiments set available bytes bandwidth constant value iperf cbr udp traffic second set experiments employ poisson udp traffic 
iperf packet size bytes poisson traffic bytes 
results tables ii indicate pathchirp needs bytes pathload uses 
addition average number bytes tools achieve desired accuracy tables ii provide values pathchirp estimates average pathload minimum maximum bounds available bandwidth 
observe pathchirp estimates consistent negative bias implying measurements conservative 
results demonstrate pathchirp utility especially applications requiring rapid estimates available bandwidth light probing load 
vii 
internet experiments section describes internet experiments pathchirp 
experiments topology depicted fig 

pathchirp employed path stanford linear accelerator center slac rice university 
provide control estimated bandwidth introduce poisson traffic path caltech chicago rice 
time experiments caltech rice path consisted layer hops traceroute slac rice path consisted hops links shared 
rice path consisted hops common slac rice path 
experiment pathchirp parameters set follows bytes choose correspond chirp trans missions 
poisson traffic packets size bytes 
experiment sent bursts poisson traffic different rates study pathchirp ability track resulting changes available bandwidth 
success demonstrated figs 

observe estimates decrease proportion rate poisson traffic stronger dips corresponding larger poisson rates 
note subtracted poisson rates indicated arbitrary value sake clarity 
available bandwidth negatively proportional introduced cross traffic 
compared pathchirp pathload real internet obtained router data know true available bandwidth evaluate accuracy 
table efficiency comparison pathchirp pathload iperf cbr cross traffic 
available efficiency accuracy bandwidth pathchirp pathload pathchirp pathload avg 
min max bounds mbps mb mb mbps mbps mbps mb mb mbps mbps mbps mb mb mbps mbps table ii efficiency comparison pathchirp pathload poisson cross traffic 
available efficiency accuracy bandwidth pathchirp pathload pathchirp pathload avg 
min max bounds mbps mb mb mbps mbps mbps mb mb mbps mbps mbps mb mb mbps mbps viii 
discussion pathchirp active probing scheme uses novel packet chirp strategy dynamically estimate available bandwidth endto network path 
internet testbed experiments simulations reveal pathchirp provides accurate somewhat conservative estimates available bandwidth 
addition pathchirp outperforms existing tools terms estimation accuracy efficiency 
current algorithm pathchirp available bandwidth estimation mainly uses information delays increasing decreasing signatures 
investigate algorithms fully exploit rich information contained chirp delay signatures 
investigate ways adaptively vary range chirp probing rates reduce probing load network 
facilitate applications server selection modify existing tool provide fast estimates rtts available bandwidth network 
acknowledgments wish ryan king niels rice assistance packet timing issues creators code modified 
specially grateful allen mcintosh telcordia experiments pathchirp insightful comments 
chou rate distortion optimized streaming packetized media microsoft research technical report msr tr february 
breslau knightly shenker stoica endpoint admission control architectural issues performance proc 
acm sigcomm 
hanna natarajan levine evaluation novel step server selection metric proc 
ieee conference network protocols icnp oct 
andersen balakrishnan kaashoek morris resilient overlay networks proc 
acm sosp 
park multiple time scale congestion control self similar network traffic performance evaluation vol 
pp 

real time sla monitoring tools www com news tech tech html 
ribeiro coates riedi hendricks baraniuk multifractal cross traffic estimation proc 
itc specialist seminar ip traffic measurement sept 
hou exploiting long range dependency network traffic measuring cross traffic basis ieee infocom 
jain dovrolis available bandwidth measurement methodology dynamics relation tcp throughput proc 
acm sigcomm 
bj new endto probing analysis method estimating bandwidth bottlenecks global internet symposium 

zhang ribeiro moon diot scaling behaviors internet backbone traffic empirical study infocom 
moon tobagi diot analysis measured single hop delay operational backbone network ieee infocom 
caltech chicago mbps mbps slac internet internet poisson traffic internet pathchirp rice mbps minus poisson rate time mbps minus poisson rate time fig 

setup internet experiment 
available bandwidth estimates poisson traffic originates caltech 
available bandwidth estimates poisson traffic originates chicago 
observe pathchirp estimates fall proportion introduced poisson traffic 
bj available bandwidth measurements preprint 
iperf dast nlanr net projects iperf 
poisson traffic generator spin rice edu software poisson gen 
network measurements tool information see www cs umd edu 

