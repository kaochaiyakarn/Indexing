edutella networking infrastructure rdf wolfgang nejdl boris wolf qu stefan decker rn naeve mikael nilsson matthias palm metadata world wide web important metadata peer peer networks absolutely crucial 
discuss open source project edutella builds metadata standards defined www aims provide metadata infrastructure applications building announced jxta framework 
describe goals main services infrastructure provide architecture connect edutella peers exchange rdf metadata 
query service core services edutella services built specify detail edutella common data model basis edutella query exchange language rdf qel format implementing distributed queries edutella network 
shortly discuss registration mediation services introduce prototype application scenario current edutella aware peers 
categories subject descriptors database management languages query languages computer communication networks distributed systems distributed applications distributed databases general terms languages keywords semantic web peer peer query languages learning 
server client environment world wide web metadata useful important peer peer environments metadata absolutely crucial 
information resources learning lab lower university hannover hannover nejdl wolf qu germany de database group stanford university usa stefan db stanford edu dfki gmbh kaiserslautern germany sintek dfki de centre user oriented design royal institute technology stockholm amb mini matthias sweden nada kth se department information science uppsala university sweden tore risch dis uu se copyright held author owner 
www may honolulu hawaii usa 
acm 
michael sintek tore risch networks longer organized hypertext structures navigated stored numerous peers waiting queried resources know want retrieve peer able provide information 
querying peers requires metadata describing resources managed peers easy provide specialized cases non trivial general applications 
applications successful special cases exchanging music files 
retrieving songs need complex query languages complex metadata special purpose formats applications sufficient 
scenarios exchanging educational resources queries complex build standards ieee lom ims metadata metadata entries complemented domain specific extensions 
furthermore concentrating domain specific formats current implementations appear fragmenting niche markets developing unifying mechanisms applications 
great danger discussed unifying interfaces protocols introduced world wide web get lost forthcoming arena 
edutella project addresses shortcomings current applications building metadata standard rdf 
project multi staged effort scope specify architect implement rdf metadata infrastructure networks announced jxta framework 
initial edutella services query service standardized query retrieval rdf metadata replication service providing data persistence availability workload balancing maintaining data integrity consistency mapping service translating different metadata vocabularies enable interoperability different peers mediation service define views join data different meta data sources reconcile conflicting overlapping information annotation service annotate materials stored edutella network 
vision provide metadata services needed enable interoperability heterogeneous jxta applications 
application focus network exchange educational resources schemas ieee lom ims adl scorm describe course materials application areas follow 
sections describe background framework edutella architecture educational application scenario 
query service core services edutella services built specify detail section edutella common data model basis edutella query exchange language format imple distributed queries edutella network 
sketch translations edutella cdm different query languages section shortly discuss registration mediation services section introduce prototype application scenario current edutella aware peers section 

background jxta framework jxta open source project supported managed sun microsystems 
essence jxta set xml protocols cover typical functionality 
provides java binding offering layered approach creating applications core services applications see reproduced 
addition remote service access offered soap jxta provides additional protocols services including peer discovery peer groups peer pipes peer monitors 
jxta useful framework prototyping developing applications 
jxta layers layered approach fits nicely application scenarios defined edutella edutella services described web service languages daml wsdl complement jxta service layer building jxta core layer edutella peers live application layer functionality provided edutella services possibly jxta services 
edutella service layer define data exchange formats protocols exchange queries query results metadata edutella peers apis advanced functionality library manner 
applications repositories annotation tools gui interfaces connected accessing edutella network implemented application layer 
educational context single university usually large pool educational resources distributed institutions 
control single entities individuals entities give control explains approaches distribution educational media central repositories failed far 
furthermore setting maintaining central servers costly 
costs hardly justifiable server distributing educational material directly benefit sponsoring university 
believe order really facilitate exchange educational media approaches metadata enhanced peer peer networks necessary 
typical learning scenario university acts content provider content consumer includ ing local annotation resources produced sites 
content provider network lose control learning resources provide network 
content consumer teachers students benefit having access local repository network queries metadata distributed network retrieve required resources 
networks quite successful exchanging data heterogeneous environments brought focus services napster gnutella providing access distributed resources mp coded audio data 
pure napster gnutella approaches suitable exchange educational media 
example metadata gnutella limited file name path 
files titles virgin certainly algebra lecture 
furthermore special purpose services lead fragmented communities special purpose clients access service 
educational domain need richer metadata markup resources markup highly domain resource type specific 
order facilitate interoperability reusability educational resources need build system supporting wide range resources 
places high demands interchange protocols metadata schemata system technical structure 
want create special purpose solution outdated soon metadata requirements definitions change 
metadata peer peer system able integrate heterogeneous peers different repositories query languages functionalities different kinds metadata schemas 
find common ground essential assumption resources maintained edutella network described rdf functionality edutella network mediated rdf statements queries 
local user edutella network transparently provides access distributed information resources different clients peers access resources 
peer required offer number basic services may offer additional advanced services 

edutella services edutella connects highly heterogeneous peers heterogeneous uptime performance storage size functionality number users 
edutella peer metadata information available set rdf statements 
goal distributed nature individual rdf peers connected edutella network completely transparent specifying implementing set edutella services 
peer characterized set services offers 
query service 
edutella query service basic service edutella network described detail second part 
peers register queries may asked query service specifying supported metadata schemas peer provides metadata lom standards specifying individual properties values properties peer provides metadata form dc title peer provides metadata form dc title artificial intelligence 
queries sent edutella network subset peers registered service interested kind query 
resulting rdf statements sent back requesting peer 
edutella replication 
service complementing local storage replicating data additional peers achieve data persistence availability workload balancing maintaining data integrity consistency 
edutella mainly concerned metadata replication metadata initial focus 
replication data additional possibility complicates synchronization updates 
edutella mapping mediation clustering 
groups peers usually agree common schema scorm ims lom educational resources extensions variations needed locations 
edutella mapping service able manage mappings different schemata mappings translate queries schema queries schema mapping services provide interoperation rdf xml repositories 
mediation services actively mediate access different services clustering services semantic information set semantic routing semantic clusters 

edutella query service edutella query service intended standardized query exchange mechanism rdf metadata stored distributed rdf repositories meant serve query interface individual rdf repositories located single edutella peers query interface distributed queries spanning multiple rdf repositories 
rdf repository knowledge base consists rdf statements facts describes metadata arbitrary rdfs schemas 
main purposes various possible rdf storage layer query languages sql different user level query languages rql triple edutella query exchange language edutella common data model provide syntax semantics standard query interface heterogeneous peer repositories kind rdf metadata 
edutella network uses query exchange language family rdf qel datalog semantics subsets thereof standardized query exchange language format transmitted rdf xml format 
rdf type www lit edu types book rdf type www lit edu types ai book rdf type dc title www xyz com sw html dc title www xyz com ai html dc title software engineering artificial intelligence prolog www xyz com pl html knowledge base rdf graph start simple rdf knowledge base simple query knowledge base depicted rdf xml serialization lib book www xyz com sw html dc title software engineering dc title lib book lib book www xyz com ai html dc title artificial intelligence dc title lib book lib ai book www xyz com pl html dc title prolog dc title lib ai book evaluating query plain english return resources book having title artificial intelligence ai book get query results shown depicted rdf graph 
www lit edu types book rdf type www lit edu types ai book rdf type dc title www xyz com ai html www xyz com pl html query results rdf graph artificial intelligence query exchange architecture edutella peers highly heterogeneous terms functionality services offer 
simple peer rdf storage capability 
peer kind local storage rdf triples relational database kind local query language sql 
addition peer offer complex services annotation mediation mapping 
enable peer participate edutella network edutella wrappers translate queries results edutella query result exchange format local format peer vice versa connect peer edutella network jxta library 
handle queries wrapper uses common edutella query exchange format data model query result representation 
communication edutella network wrapper translates local data model edutella common data model described vice versa connects edutella network jxta primitives transmitting queries common data model rdf xml form 
order handle different query capabilities define rdf qel exchange language levels describing kind queries peer handle conjunctive queries relational algebra transitive closure internal data model levels 
datalog semantics edutella common data model datalog non procedural query language horn clauses function symbols 
horn clause disjunction literals positive non negated literal 
datalog program expressed set rules implications rule consists positive literal consequent rule head negative literals antecedent rule body set facts single positive literals actual query literals rule head negative literals 
additionally negation failure antecedent rule semantics literal proven knowledge base see 
literals predicates expressions describing relations combination variables constants title www xyz com book html artificial intelligence 
rule divided head body head single literal body conjunction number positive literals including conditions variables 
disjunction expressed set rules identical head 
datalog query conjunction query literals plus possibly empty set rules 
datalog shares relational databases rdf central feature data conceptually grouped properties contrast object oriented systems group information objects usually having object identity 
datalog queries easily map relations relational query languages relational algebra sql 
terms relational algebra datalog capable expressing selection union join projection relationally complete query language 
additional features include transitive closure recursive definitions 
example knowledge base datalog reads title www xyz com ai html artificial intelligence 
type www xyz com ai html book 
title www xyz com sw html software engineering 
type www xyz com sw html book 
title www xyz com pl html prolog 
type www xyz com pl html ai book 
rdf statement considered assertion 
view rdf repository set ground assertions binary predicates shown ternary statements include predicate additional argument 
examples binary surface representation query span abstraction level example query binary datalog notation 
title artificial intelligence type book 
type ai book 

query disjunction purely conjunctive subqueries datalog representation composed rules identical heads 
literals rules bodies directly reflect rdf statements subjects variable objects bound constant values artificial intelligence 
literals head rules denote derived predicates necessarily binary ones 
example query expression asks bindings conform datalog rules knowledgebase results www xyz com ai html www xyz com pl html edutella common data query exchange model internally edutella peers datalog model represent queries results 
visualizes data model uml class diagram 
classes rdf standard rdf concepts reflect usage stanford rdf api 
query represented instance aggregates arbitrary number views combined see extent rdfs specifies classes object oriented way introduce object identity easily extended see :10.1.1.115.3586
see discussion section negated boolean resource op operator arg arg subject resource predicate property object arg arg object subject predicate variable resource value value variable literal resource property edutella common data query exchange model objects 
binary predicates ternary statement literals corresponding reified rdf statements non ternary statement literals expressed ordinary rdf statements condition expression variables 
examples different surface notations data model switch predicate argument view query spans abstraction level see section 
technically sufficient define single instance query literal 
set objects query literals interpreted rdf result graph long query literals instances 
consists head arbitrary number body 
occur rule body allow reuse rules recursion 
database terms intensional predicates defined head rules 
extensional predicates stored explicitly rdf database 
expressed binary predicates ternary predicate statements arguments predicate 
results represented set edu objects depending results requested rdf graph tuple format 
case aggregates number objects variable query 
edutella wrapper api sketches current prototypical edutella wrapper api version blueprint current edutella wrappers enable edutella peers handle edutella common data model coherent manner 
api change subsequent versions structure gives overview functionalities api provide 
java binding available edutella project page composed packages note input format allow arbitrary order logic formulas body rules transformed set rules lloyd topor transformation 
edutella jxta org net jxta edutella util datamodel contains classes edutella common data model described 
common model transmitting queries edutella network 
net jxta edutella util contains classes rdf qel rdf qel importing queries respective formats internal query model turn export queries internal model syntaxes representations 
net jxta edutella peer contains general service implementations edutella peers edutella provider service consumer service hub service general interfaces edutella provider adapter hub adapter consumer adapter defined package 
net jxta edutella provider contains general edutella provider implementation runs edutella provider service 
various edutella providers realize different adapters correspond different back repositories embed adapters general implementation plug ins 
net jxta edutella hub contains general edutella hub implementation runs edutella hub service 
various edutella hubs adopt different mechanisms handle distributed query implement various query mediators form plug ins general edutella hub implementation 
net jxta edutella consumer contains general edutella consumer implementation runs edutella consumer service 
various edutella consumers realize different adapters provide different presentations query results 
rdf qel language levels definition edutella query exchange language important design criteria formulated standard semantics query exchange language sound rdf serialization 
simple standard semantics query exchange language important transformations language performed edutella peer wrappers preserve semantics query original query language 
sound encoding queries rdf shipped edutella peers provided 
expressiveness language 
want interface simple graph query engines sql query engines inference engines 
important language allows expressing simple queries form simple query providers directly allowing advanced peers fully expressiveness 
adaptability different formalisms 
query language neutral different representation semantics able predicates predefined semantics rdfs subclassof semantics built order applicable different formalisms edutella peers 
easily connect simple rdfs repositories relational databases object relation ones inference systems different base semantics capabilities 
query language 
basic query exchange language model easy translate different query languages importing exporting allowing easy implementation edutella peer wrappers 
edutella follows layered approach defining query exchange language 
currently defined language levels rdf qel differing expressiveness 
simple language rdf qel expressed rdf graph complex ones expressive rdf expressed reified rdf statements 
language levels represented internal data model 
rdf qel rdf qel syntax design driven simplicity readability qbe query example paradigm queries represented ordinary rdf graphs having exactly structure answer graph additional annotations denote variables constraints 
rdf graph query interpreted logical conjunctive formula proven knowledge base 
www lit edu types book artificial intelligence rdf type edu query rdf type edu ai query rdf type www lit edu types ai book dc title rdf type rdf type rdf type edu ai query edu variable example query rdf qel format disjunction expressed rdf qel example query split separate sub queries 
edu qel query rdf id ai query edu rdf resource edu qel query edu variable rdf id rdfs label rdf type rdf resource www lit edu types edu variable edu qel query rdf id ai query edu rdf resource edu qel query edu variable rdf id rdfs label rdf type rdf resource www lit edu types book dc title artificial intelligence dc title edu variable rdf qel extending rdf qel disjunction leads rdf qel 
language longer purely assertional expressed directly rdf talking rdf triples order combine logically 
purpose utilize rdf construct called reification 
reifying rdf statement involves creating model rdf triple form rdf resource type statement 
resource properties subject predicate object modeled rdf triple 
reified statements building blocks query rdf qel linked tree 
rdf qel example query reads edu variable rdf rdfs label edu rdf rdf rdf resource st rdf rdf resource st edu edu rdf rdf rdf resource rdf rdf resource st edu edu rdf st rdf subject rdf resource rdf object rdf resource www lit edu types rdf predicate rdf resource rdf type edu edu rdf st rdf subject rdf resource rdf object rdf resource www lit edu types book rdf predicate rdf resource rdf type edu edu rdf st rdf object artificial intelligence rdf object rdf subject rdf resource rdf predicate rdf resource dc title edu advantage rdf qel form queries easily visualized query graph 
conzilla query interface subset uml uml specialization relationship logical uml aggregation relationship logical 
shown current prototype uses graph view displayed ordinary rdf exception triplets searched reified rdf qel displayed dashed arrows indicating searched 
logical view displayed parse tree 
logical combination primitive statements showing combinations matched time order query succeed 
connections different views displayed highlighting corresponding parts 
edutella graph query interface queries stored reused library queries combined new queries 
queries templates sub strings numerical values filled 
details sub queries suppressed hiding detailed maps hierarchically 
rdf qel going step choose skip rdf qel favor rdf qel allows conjunction disjunction negation literals 
rdf qel essentially datalog 
query set datalog rules encoded easily reified statements rdf qel introducing additional constructs negation implication 
long queries non recursive approach relationally complete 
example query expressed rdf qel resembles internal datalog model described 
edu qel query rdf id ai book query edu rdf resource st edu rdf resource edu rdf resource edu qel query edu variable rdf id rdfs label edu rule rdf id edu rdf resource st edu rdf resource st edu rdf resource st edu rule edu rule rdf id edu rdf resource st edu rdf resource st edu rule edu rdf id st edu predicate rdf resource edu arguments rdf seq rdf rdf resource rdf seq edu arguments edu edu rdf id st rdf subject rdf resource rdf object rdf resource www lit edu types rdf predicate rdf resource rdf type edu edu rdf id st rdf subject rdf resource rdf object rdf resource www lit edu types book rdf predicate rdf resource rdf type edu edu rdf id st rdf object artificial intelligence rdf object rdf subject rdf resource rdf predicate rdf resource dc title edu rdf qel levels rdf qel rdf qel allows recursion express transitive closure linear recursive query definitions compatible sql capabilities 
relational query engine full conformance sql standard able support rdf qel query level 
rdf qel levels allow arbitrary recursive definitions stratified dynamically stratified datalog guaranteeing single minimal model unambiguous query results 
technically negation recursion ternary repre sentation statements static stratification guaranteed rdf qel support usual aggregation functions defined sql count avg min max denoted appending query language level rdf qel rdf qel rdf qel includes aggregation functions edu count edu avg edu min additional foreign functions edu substring conditions useful included rdf qel 
representing complex property semantics rdfs comes predefined semantics certain properties rdfs subclassof inheritance rdf type 
query includes pre defined predicates presume pre defined semantics 
valid daml oil pre defined predicates semantics definitions daml rdf id transitivity assumed 
having specified explicitly query 
want specify principle specify semantics datalog rule ship query 
add special annotations edu transitive closure denoting transitive closure properties edu inherited version inheritance properties subclassof hierarchy edu reflexive version reflexive version property properties directly edutella peer wrapper knows properties mean 
advantage wrapper infer correct semantics corresponding datalog rules predefined semantics properties directly 
keeps clear semantics rdf qel allow abbreviations easier write edutella peer wrappers 
querying schema information apparent rdfs schema definition discussed detail rdf model theory see axiomatic definition extension rdfs called telos rdf rdfs distinguish data schema level represents information uniform way graph 
discussed details principal difference entities different modeling levels objects classes meta classes represented uniform way queries rdfs schema difficult queries rdfs data 
internal query exchange model shown treats entities levels uniform way attributes entities different levels objects classes predicates 
representing queries different levels pose problems 
order express datalog queries ranging different abstraction levels writing properties binary predicates ternary predicate rely dynamic stratification depends actual instantiation literals switch founded semantics 
predefined edu properties seen macros take corresponding properties generate corresponding datalog definitions see discussion section 
switch triple syntax ternary predicate writing book artificial intelligence write book artificial intelligence 
enforce restriction predicate symbol denotes special ternary predicate mix notation binary predicate notation far examples 
generalizing query running example bit want ask additional property ai books getting query title artificial intelligence type book 
type ai book 
book property rdfs domain book 
ai book property rdfs domain ai book 
ai book attribute book property 
ai book attribute ai book property 
ai book attribute result formats standard result set syntax default represent query results set tuples variables bindings 
referring example bindings single variable 
shown closely follows convention returning substitutions variables occurring queries logic programs 
edu rdf id ai results edu rdf parsetype resource rdf type rdf resource edu edu rdf parsetype resource rdf type rdf resource edu edu rdf resource rdf value rdf resource www xyz com ai html edu edu edu rdf parsetype resource rdf type rdf resource edu edu rdf parsetype resource rdf type rdf resource edu edu rdf resource rdf value rdf resource www xyz com pl html edu edu edu rdf graph answers possibility explored web related languages focusing querying semistructured data overview see ability create objects query results 
simple case rdf qel return answer objects graph representing rdf qel query edutella specific statements removed variables instantiated 
results interpreted relevant sub graph rdf graph running queries see 
words answer graph contains sufficient information running query data answer graph returns result running query original database 
lib book www xyz com ai html dc title artificial intelligence dc title lib book lib ai book www xyz com pl html general rdf qel queries assume structure answer graph defined query literals provided binary predicates 
note variables query literals assumed existentially quantified instantiated query evaluation represented anonymous nodes rdf answer graph discussed 
allow skolem functions head literals rules able generate arbitrary complex objects skolem values object ids see 
skolem functions introduced proposals unifying logic object oriented formalisms informally discussed refined proposals 
rdf allow skolem functions return answer objects rdf graphs cases anonymous nodes substituted skolem value different anonymous nodes different skolem values 
existing resources group properties object resource uri directly introducing new skolem value previous example slight modification query literals ai book attribute 
case group resources type book properties return answer objects sets triples corresponding resource property value triples book query centered uris books 

wrapping different peer query languages sections meant complete characterizations mappings sketch mappings translate example query local query language 
details forthcoming report 
rql rql rdf query language described eu ist project knowledge 
rql focuses sql query expressions exploiting path expressions implicit explicit joins usual comparison operators 
examples expressed conjunctive queries formal rql specification includes set operations union intersect minus making relationally complete 
default queries including typeof subclassof transitivity subclassof defined rdfs 
queries translated simple typeof subclassof binary predicates transitivity subclassof reflected query engine query language 
additionally rql specifies variants typeof subclassof direct typeof subclassof defined datalog follows assuming subclassof reflexive advocated typeof typeof typeof subclassof 
subclassof subclassof subclassof subclass 
anonymous nodes existential variables rdf graph self handled usual lloyd topor transformation 
way assume local peer stores typeof subclassof facts subclassof subclassof 
subclassof subclassof subclassof 
typeof typeof 
typeof subclassof typeof 
alternatively predefined properties edu inherited version edu transitive closure rdf property rdf id typeof edu inherited version rdf resource typeof rdf property rdf property rdf id subclassof edu transitive closure rdf resource subclassof rdf property assumes corresponding datalog definitions 
translating special constructs typeof subclassof needs additional recursive definitions query exchange language rdf qel capability 
edutella wrapper rql peer understands edu inherited version edu transitive closure definitions automatically generated avoid shipped query stay rdf qel non recursive datalog queries 
example query rql select book title artificial intelligence union select ai book structurally syntactically query looks similar sql counterpart 
rql uses syntax come rdf xml serialization 
rdf type statements need explicit rdfs class concept inherent part rql 
sub queries linear path expressions 
case queries complex graph structures linear path expressions enumerated clause joined explicitly clause 
querying schema information possible rql translate rql query expressions edutella datalog programs ternary notation triples discussed section 
triple triple rdf query inference transformation language horn logic logic 
triple architecture allows semantic features defined various objectoriented rdf extensions rdf schema 
triple provides human readable prolog syntax syntax exchanging queries rules 
prolog syntax rdf statements written molecules subject object predicate multiple predicate object pairs subject subject pred pred obj peer need recursive datalog definitions directly simply translate properties typeof subclassof local versions implementing specified semantics 
obj sample knowledge base query mapped follows namespace abbreviations rdf www org rdf syntax ns 
dc purl org dc elements 
types www lit edu types 
xyz www xyz com 
sample knowledge base xyz sw html rdf type types book dc title software engineering 
xyz ai html rdf type types book dc title artificial intelligence 
xyz pl html rdf type types ai book dc title prolog 
sample query forall rdf type types ai book rdf type types book dc title artificial intelligence 
triple regards rdf data large heap partitions set rdf data different subsets called rdf models 
different subsets come different sources different semantics triple supports models parameterized models model expressions useful extensions rdf qel want concentrate data integration transformation different sources 
general rdf qel needed capture triple programs close internal data model horn logic 
currently unsupported rdf qel additional features triple functional terms rdf models sets statements 
sql keep discussion simple assume single state ments table triple oriented view ternary statements storing statements repository aware relational database 
table consists columns subject predicate object type character string column value interpreted concatenation namespace resource name literal value 
sophisticated database schemas provide view table schema 
mapping example query straightforward 
terms datalog representation query may satisfied rules conjunction literals second involving single literal 
disjunction rules mapped union sub queries 
query structure directly resembles rdf qel syntax internal datalog query model 
select subject statement statement predicate purl org dc elements title object artificial intelligence predicate www org rdf syntax ns type object www lit edu types book subject subject union select subject statement predicate www org rdf syntax ns type object www lit edu types rdf stores include additional information models neglect section 
complicated queries rules referencing rules bodies need modeled nested queries derived relations 
possible map queries containing recursive rules traditional sql sql sql maps queries rdf qel 
sql supporting linear recursion able map rdf qel queries 
familiar relational algebra expressions provide query relational algebra 
contrast statement centric view sql mapping predicate centric approach relation table predicate 
xpath open source native xml database provides natural way store xml learning resource meta data :10.1.1.34.7488
show example knowledge base stored meta data repository rdf xml binding xml version rdf rdf xmlns rdf www org rdf syntax ns xmlns dc purl org dc elements rdf description rdf www xyz org ai html dc title artificial intelligence dc title dc type book dc type rdf description rdf description rdf www xyz org sw html dc title software engineering dc title dc type book dc type rdf description rdf description rdf www xyz org pl html dc title prolog dc title dc type ai book dc type rdf description rdf rdf employs xpath language accomplish query service task content providers map rdf qel query representation xpath :10.1.1.115.3586
xpath provides xml specific features retrieving hierarchical substructures xml document 
features focus features comparable relational query language xpath basically provides select statements identifying specific tags xml documents 
conjunctive queries rdf qel mapped conjunctions xpath expressions 
case xml database supports disjunction xpath expressions translate rdf qel queries appropriate xpath queries boolean connectives 
translation xml rdf schemas ims lom learning resources especially easy schemas basically define hierarchically structured metadata differences rdf xml hardly matter 
example query written syntax xpath rdf rdf rdf description dc title text artificial intelligence rdf rdf rdf description dc type text book rdf rdf rdf description dc type text results rdf description rdf www xyz com ai html dc title artificial intelligence dc title rdf type book rdf type rdf description rdf description rdf www xyz com pl html dc title prolog dc title rdf type ai book rdf type rdf description note default behaviour xpath result sets different result sets defined rdf qel queries 
rdf qel queries return exactly tuples mention query xpath queries default return sub document located element selected xpath expression identify document matching expression 
mediators amos ii distributed mediator engine views data different data sources defined 
views defined object relational query language 
relationally complete 
relatively simple translate rdf rdf schema metadata descriptions schema manipulation statements 
rdf qel queries easily translated statements shown 
challenging represent mediators rdf rdf schema reasons amos ii rich object oriented data model data types mediation primitives needed mediation different kinds data sources 
types amos ii correspond classes rdf schema 
amos ii object classified types making object instance types 
set instances type called extent type 
types organized multiple inheritance supertype subtype hierarchy 
object instance type instance supertypes type conversely extent type subset extent supertype type extent subset semantics 
meta objects system objects amos ii mediators types function class queried objects 
straight forward represent rdf schema classes amos ii types 
transparent representation metaobjects mediators allows powerful queries capabilities structure mediator 
object attributes queries methods relationships modeled functions amos ii 
depending implementation functions classified kinds including stored functions represent facts correspond properties rdf derived functions represent views correspond rules datalog foreign functions implement algorithms external query language java 
wrapping external data sources amos ii multi directional foreign function facility provides primitive specify access paths capabilities sources 
general syntax queries select result domain specifications condition domain specification associates query variable type variable universally quantified extent type including indefinite extents integers restrictions 
different sql variables range tuples tables 
query compiler translates statements object calculus algebra expressions internal simple logic language called oo dialect datalog predicates typed overloaded 
internally amos ii relatively easy translate rdf qel 
certain conventions need introduced rdf qel order translation straight forward predicates second argument denotes types inserted rules rdf properties overloaded name spaces provide means unique 
problem represent rdf properties stored functions amos ii rdf specific classes properties mapped corresponding amos ii types 
permit recursive views transitive closure meta function provided handle situations requiring recursive views 

registration service query mediators wrapper mediator approach introduced divides functionality data integration system kinds subsystems :10.1.1.11.8981
wrappers provide access data data sources common data model cdm common query language 
mediators provide coherent views data data sources performing semantic reconciliation cdm data representations provided wrappers 
common data model common query language edutella network defined 
mediate distributed data sources layered approach simple wrapping mediators distribute queries appropriate peer restriction queries answered completely edutella peer 
complex integrating mediators able mediate distributed queries multiple repositories 
query syntax queries kinds mediator identical cases 
simple wrapping mediators layer functionality distributed queries edutella network simple query hubs wrapping mediation 
query hubs wrapping capability prototype peers registration query distribution peers edutella common data query model implement wrapping capability common model locally edutella peer wrappers discussed section 
edutella peer offers common query interface common model possibly different levels defined rdf qel network 
registration peer query capabilities instantiated property statements schema information telling network kind schema peer uses possible value constraints select conditions 
registration messages syntax rdf qel queries sent peer registration query distribution hub 
additionally peer announces hub query level handel rdf qel rdf qel hub receives queries uses registrations forward queries appropriate peers merges results sends back result set 
mediator peers handle distributed queries second layer introduces query mediators query hubs 
mediators bring extra intelligence required assemble distributed heterogeneous queries 
complex mediators submit subqueries different repositories able answer collect sub results join reconcile return outcome client 
mediator servers available communicating jxta 
mediator server mediator metadata schema accesses meta data mediators data sources 
views provided integrating mediators transparently rdf qel 
amos ii mediator server appears virtual database layer having object oriented data abstractions query language 
object oriented views provide transparent access data sources clients mediator servers 
conflicts overlaps similar real world entities modeled differently different data sources reconciled mediation primitives amos ii translated 
mediation services allow transparent access similar object structures represented differently different data sources 
representation integrating mediators rdf requires richer data model currently available rdf rdf schema 
alternatively various conventions introduced rdf meta data definitions convention needed represent type annotated generic datalog rules rules overloaded types 
somewhat inelegant way different name spaces type annotated properties convenient 
second rdf currently views represent mediators join data different sources 
named rdf qel queries provide way specify views 
derived amos ii functions correspond derived properties defined named rdf qel queries 
third mediation primitives reconciling overlapping conflicting information data sources need rdf bindings 
mediators cooperate defined terms mediators mediators composable 
composition mediators allows modularity reuse view definitions avoiding administrative performance bottleneck having single mediator system global schema 
different interconnecting topologies compose mediator servers depending integration requirements 

prototype scenario current prototype setup features set existing peers extended appropriate edutella wrappers connect edutella framework functionalities local query directly repository distributed query mediated simple wrapper mediator amos ii mediator peer update annotation peer 
peers connected edutella network edutella wrapper libraries olr repository peer subset ims lom metadata able translate rdf qel internal query language sql return results specified result format peer prototype xml db subset subset ims lom metadata simple mapping service translate rdf qel queries xpath queries appropriate xml lom schema amos ii peer local repository translate rdf qel simple query registration hub distribute queries schema information query capabilities complex mediation peer mediate queries amos ii mediation uses amos ii peer olr repository peer graphical query interface peer conzilla take graph translate query expression pushed edutella network visualize results rdf qel rdf qel functionality jxta shell peer textual interface implemented servlet direct query input rdf qel annotation peer ontomat query repository query update annotate results write back repository kaon server ontobroker see storage computation peer datalog capabilities rdfs telos rdf conceptbase server file repository peer jena toolkit corresponding query language rdql stores rdf data files :10.1.1.21.3877
source code edutella implementation downloaded edutella project page 

summary server client environment world wide web metadata useful important environments metadata absolutely crucial order describe resources managed peers 
far applications domain specific formats metadata schemas leading fragmentation worlds niche markets 
described current status edutella project addresses shortcomings current applications building metadata standard rdf 
project multi staged effort scope specify architect implement rdf metadata infrastructure networks announced jxta framework 
described main architecture services provided edutella framework discussed detail edutella query service defines common query exchange model language exchange queries query results edutella peers 
discussed basic registration mediation services distributed queries 
vision provide metadata services needed enable interoperability heterogeneous jxta applications 
application focus network exchange educational resources described prototype environment test edutella framework 
prototype environment running year concentrate refining existing architecture scalability edutella network add kinds peers services network 

lot fruitful discussions participants projects 
especially want steffen staab raphael volz aifb wolf siberski martin wolpers kbs neumann bernd simon vienna 

serge abiteboul peter buneman dan suciu 
data web 
morgan kaufmann publishers 
dan brickley guha 
resource description framework rdf schema specification 
www org tr wd rdf schema march 
candidate recommendation 
kaon aifb uni karlsruhe de jeen broekstra 
rql sesame rql 
aidministrator september 
version 
james clark steve derose 
xml path language xpath version 
technical report november 
recommendation 
ieee learning technology standards committee 
ieee lom working draft 
ltsc ieee org wg index html april 
group :10.1.1.34.7488
native database 
www org 
wolfgang nejdl boris wolf martin wolpers 
open learning repositories metadata modeling 
international semantic web working symposium swws stanford ca july 
dan brickley 
power metadata 
www openp com pub metadata html january 
book peer peer harnessing power disruptive technologies 
edutella project 
edutella jxta org 
li gong 
project jxta technology overview 
technical report sun microsystems april 
www jxta org project www docs pdf 
siegfried handschuh steffen staab :10.1.1.21.3877
authoring annotation web pages cream 
proceedings www 
acm press 
pat hayes 
rdf model theory 
technical report working draft september 
ims global learning consortium ims learning resource metadata specification 
www org metadata index html 
jarke jeusfeld staudt 
conceptbase deductive object base meta data management 
journal intelligent information systems 
risch 
optimizing queries distributed composable mediators 
th conference cooperative information systems coopis pages edinburgh scotland september 
www dis uu se publ coopis pdf 
risch 
functional query optimization object oriented views data integration 
journal intelligent information systems 
risch 
integrating heterogeneous overlapping databases object oriented transformations 
th conf 
large databases vldb pages edinburgh scotland september 
www dis uu se publ vldb pdf 
project jxta homepage 
www jxta org 
karvounarakis christophides plexousakis alexaki 
querying community web portals 
available www ics forth gr proj rdf rql 
submitted publication 
michael kifer georg lausen james wu :10.1.1.115.3586
logical foundations object oriented frame languages 
journal acm 
stefan roland :10.1.1.115.3586
expressing qualified dublin core rdf xml 
august 
org documents rdf xml 
ora lassila ralph swick 
resource description framework rdf model syntax specification 
www org tr rec rdf syntax february 
recommendation 
litwin risch 
main memory oriented optimization oo queries typed datalog foreign predicates 
ieee transactions knowledge data engineering 
lloyd topor 
making prolog expressive 
journal logic programming 
staab studer sure volz 
seal tying information integration web site management ontologies 
ieee data engineering bulletin march 
www aifb de sst research publications data pdf 
maier 
logic objects 
workshop foundations deductive databases logic programming pages 
brian mcbride 
jena implementing rdf model syntax specification 
technical report hewlett packard laboratories bristol uk 
www hpl hp com semweb index html 
sergey melnik 
rdf api draft january 
www db stanford edu melnik rdf api html 
wolfgang nejdl martin wolpers 
telos rdf resource description format enhanced meta modeling functionalities telos 
workshop knowledge markup semantic annotation international conference knowledge capture cap victoria bc canada october 
mikael nilsson matthias palm conzilla concept browser 
technical report cid na department numerical analysis computing science kth stockholm 
kmr nada kth se papers cid pdf 
przymusinski 
logic program natural stratification iterated fixed point model 
proceedings acm symposium principle database systems pods pages 
qu wolfgang nejdl 
interoperability reusability learning resources scorm conformant courseware computer science education 
technical report learning lab lower university hannover october 
risch 
distributed data integration object oriented mediator servers 
concurrency computation practice experience 
abraham silberschatz henry korth sudarshan 
database systems concepts 
mcgraw hill higher education edition 
michael sintek stefan decker 
triple rdf query inference transformation language 
deductive databases knowledge management october 
www dfki uni kl de triple pdf 
sun microsystems 
jxta protocols specification 
spec jxta org html 
adl technical team 
scorm specification 
www org scorm scorm cfm october 
wiederhold :10.1.1.11.8981
mediators architecture information systems 
ieee computer 
