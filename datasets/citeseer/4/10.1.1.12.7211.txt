prefixspan mining sequential patterns efficiently prefix projected pattern growth jian pei jiawei han asl helen pinto intelligent database systems research lab 
school computing science simon fraser university burnaby canada mail han cs sfu ca chen dayal mei chun hsu hewlett packard labs 
palo alto california mail dayal hpl hp com sequential pattern mining important data mining problem broad applications 
challenging may need examine combinatorially explosive number possible subsequence patterns 
previously developed sequential pattern mining methods follow methodology may substantially reduce number combinations examined 
encounters problems sequence database large sequential patterns mined numerous long 
propose novel sequential pattern mining method called prefixspan prefix projected sequential pattern mining explores sequential pattern mining 
prefixspan mines complete set patterns greatly reduces efforts candidate subsequence generation 
prefix projection size projected databases leads efficient processing 
performance study shows prefixspan outperforms gsp algorithm proposed method freespan mining large sequence databases 
sequential pattern mining discovers frequent subsequences patterns sequence database important data mining problem broad applications including analyses customer purchase behavior web access patterns scientific experiments disease treatments natural disasters dna sequences 
supported part natural sciences engineering research council canada nserc networks centres excellence canada nce iris hewlett packard lab sequential pattern mining problem introduced agrawal srikant set sequences sequence consists list elements element consists set items user specified min support threshold sequential pattern mining find frequent subsequences subsequences occurrence frequency set sequences min support :10.1.1.40.9892
studies contributed efficient mining sequential patterns frequent patterns data 
previously proposed methods mining sequential patterns time related frequent patterns property proposed association mining states fact super pattern pattern frequent :10.1.1.40.6757
heuristic typical method gsp adopts multiple pass test approach sequential pattern mining 
outlined follows 
scan finds frequent items form set single item frequent sequences 
subsequent pass starts seed set sequential patterns set sequential patterns previous pass 
seed set generate new potential patterns called candidate sequences 
candidate sequence contains item seed sequential pattern element pattern may contain multiple items 
number items sequence called length sequence 
candidate sequences pass length 
scan database pass finds support candidate sequence 
candidates support database min support form set newly sequential patterns 
set seed set pass 
algorithm terminates new sequential pattern pass candidate sequence generated 
similar analysis frequent pattern min ing method observe sequential pattern mining method reduces search space bears nontrivial inherent costs independent detailed implementation techniques 
potentially huge set candidate sequences 
set candidate sequences includes possible permutations elements repetition items sequence method may generate really large set candidate sequences moderate seed set 
example frequent sequences length 
algorithm gen erate candidate sequences term derived set 

second term derived set 
multiple scans databases 
length candidate sequence grows database scan find sequential pattern method scan database times 
difficulties mining long sequential patterns 
long sequential pattern grow combination short ones number candidate sequences exponential length sequential patterns mined 
example suppose single sequence length database min support threshold occurring pattern frequent re derive length sequential pattern method generate length candidate sequences length candidate sequences length candidate sequences 
obviously total number candidate sequences generated greater applications unusual may encounter large number sequential patterns long sequences dna analysis stock sequence analysis 
important re examine sequential pattern mining problem explore efficient scalable methods 
analysis thrust bottle neck sequential pattern mining method come step wise candidate sequence generation test 
develop method may absorb spirit avoid substantially reduce expensive candidate generation test 
notice cut substantial amount search space 
number length candidate sequences motivation examined fp tree structure proposed frequent pattern mining mining sequential patterns 
fp tree structure explores maximal sharing common prefix paths tree construction reordering items transactions 
items subsequences containing different orderings reordered collapsed sequential pattern mining 
fp tree structures generated huge benefit mining 
subsequent study developed sequential mining method called freespan frequent sequential pattern mining 
general idea frequent items recursively project sequence databases set smaller projected databases grow subsequence fragments projected database 
process partitions data set frequent patterns tested confines test conducted corresponding smaller projected database 
performance study shows freespan mines complete set patterns efficient runs considerably faster gsp algorithm 
subsequence may generated substring combination sequence projection freespan keep sequence original database length reduction 
growth subsequence explored split point candidate sequence costly 
study develop novel sequential pattern mining method called prefixspan prefix projected sequential pattern mining 
general idea examine prefix subsequences project corresponding postfix subsequences projected databases 
projected database sequential patterns grown exploring local frequent patterns 
improve mining efficiency kinds database projections explored level level projection bi level projection 
main memory pseudo projection technique developed saving cost projection speeding processing projected sub database associated projection processing structure fit main memory 
performance study shows bi level projection better performance database large pseudo projection speeds processing substantially projected databases fit memory 
prefixspan mines complete set patterns efficient runs considerably faster gsp algorithm freespan 
remaining organized follows 
section define sequential pattern mining problem illustrate ideas previously developed pattern growth method freespan 
prefixspan method developed section 
experimental performance results section 
section discuss relationships related works 
summarize study point research issues section 
problem definition freespan section define problem sequential pattern mining illustrate proposed method freespan example 
set items 
item set subset items 
sequence ordered list itemsets 
sequence denoted itemset called element sequence denoted item brevity brackets omitted element item 
element written item occur element sequence occur multiple times different elements sequence 
number instances items sequence called length sequence 
sequence length called sequence 
sequence called subsequence sequence super sequence denoted exist integers 
sequence database set tuples sequence id sequence 
tuple said contain sequence subsequence support sequence sequence database number tuples database containing denoted sequence database clear context 
positive integer support threshold sequence called frequent sequential pattern sequence database sequence contained tuples database sequential pattern length called pattern 
example running example running database sequence database table min support 
set items database sequence id sequence table 
sequence database sequence elements items appear respectively different elements 
sequence instances appearing sequence 
item happens times sequence contributes length sequence 
sequence contributes sub sequence sequences support sequence contain subsequence sequential pattern length pattern 
problem statement 
sequence database min support threshold problem sequential pattern mining find complete set sequential patterns database 
section outlined method gsp :10.1.1.40.6428
improve performance sequential pattern mining freespan algorithm developed study 
major ideas illustrated example 
example freespan database min support example freespan scans collects support item finds set frequent items 
frequent items listed support descending order form list list complete set sequential patterns divided disjoint subsets ones containing item ones containing item containing items list ones containing item items list ones containing item subsets sequential patterns mined constructing projected databases 
infrequent items example removed construction projected databases 
mining process detailed follows 
finding sequential patterns containing item scanning sequence database sequential patterns containing item 
finding sequential patterns containing item item list 
achieved constructing projected database 
se quence containing item subsequence derived removing items af ter list 
inserted projected database 
projected database contains sequences scanning projected database sequential patterns containing item item list 
finding subsets sequential patterns 
subsets sequential patterns similarly constructing corresponding projected databases mining recursively 
note 
projected databases constructed simultaneously scan original sequence database 
sequential patterns containing item pass 
process performed recursively 
freespan projects large sequence database recursively set small projected sequence databases currently mined frequent sets subsequent mining confined projected database relevant smaller set candidates 
freespan efficient gsp 
major cost freespan deal projected databases 
pattern appears sequence database projected database shrink removal infrequent items 
example projected database example original sequence database removal infrequent item length subsequence may grow position search length candidate sequence need check possible combination costly 
prefixspan mining sequential patterns prefix projections section introduce new pattern growth method mining sequential patterns called prefixspan 
major idea projecting sequence databases considering possible occurrences frequent subsequences projection frequent prefixes frequent subsequence growing frequent prefix 
section prefixspan idea mining process illustrated example 
algorithm prefixspan justified section 
improve efficiency optimizations proposed section section respectively 
mining sequential patterns prefix projections example items element sequence listed order loss generality assume listed alphabetical order 
example sequence sequence id running example listed stead convention expression sequence unique 
definition prefix projection postfix suppose items element listed alphabetically 
sequence sequence called prefix items alphabetically sequences subsequence subsequence sequence called projection prefix prefix exists proper super sequence subsequence prefix projection prefix called postfix prefix denoted denote sequence subsequence projection postfix empty 
example pre fixes sequence postfix sequence prefix considered prefix 
postfix prefix postfix prefix example prefixspan sequence sequential database table patterns mined prefix projection method steps 
step find length sequential patterns 
scan find frequent items sequences 
frequent items length sequential pattern 
support count 
represents pattern associated step divide search space 
complete set sequential patterns partitioned subsets prefixes ones having prefix 
ones having prefix step find subsets sequential patterns 
subsets sequential patterns mined constructing corresponding projected databases mine recursively 
projected databases sequential patterns listed table mining process explained follows 
find sequential patterns having prefix sequences containing col lected 
sequence containing subsequence prefixed occurrence subsequence considered mining sequential patterns having prefix notice means element prefix form considered 
example sequence element 
example subsequence sequence considered 
sequences containing projected form projected database consists empty postfix denoted items prefix projected postfix database sequential patterns postfix sequences table 
projected databases sequential patterns lemma completeness partitioning sequential scanning projected pattern mining problem 
database length sequential patterns having prefix 
lemma problem partitioning length recursively sequential having patterns prefix partitioned subsets having prefix having prefix 
having prefix subsets mined constructing respective projected databases mining recursively follows 
projected database consists non empty postfix subsequences having prefix hope generate frequent subsequence single sequence processing projected database terminates 
projected database consists postfix se length sequential pattern set sequential patterns having prefix complete set sequential patterns having prefix divided disjoint subsets 
subset set sequential patterns having prefix regard default sequential pattern sequence database 
lemma prefixspan partitions problem recursively 
subset sequential patterns divided necessary 
forms divide conquer framework 
mine subsets sequential patterns prefixspan constructs corresponding projected databases 
quences recursively mining projected database returns sequential pat terns projected database contains sequences leads finding sequential patterns having prefix projected databases constructed recursively mined similarly 
sequential patterns shown table 
similarly find sequential patterns having prefix respectively con projected databases mining respectively 
projected databases sequential patterns shown table 
set sequential patterns collection patterns recursive mining process 
verify returns exactly set sequential patterns gsp freespan 
prefixspan algorithm correctness justify correctness completeness mining process section 
concept prefix definition projected database sequential pattern sequence database projected database denoted collection sequences prefix collect counts projected databases definition 
definition support count projected database sequential pattern sequence database sequence having prefix support count number sequences projected database denoted please note general example holds running example 
lemma projected databases 
lemma projected database sequential patterns sequence database prefix 

sequence having prefix 
size projected database exceed reasoning algorithm prefixspan follows 
algorithm prefixspan input sequence database minimum support threshold output complete set sequential patterns method call prefixspan subroutine prefixspan parameters sequential pattern length projected database sequence database method 
scan find set frequent items assembled element form sequential pattern appended form sequential pattern 

frequent item append form sequential pattern output 
construct projected database call prefixspan analysis 
correctness completeness algorithm justified lemma lemma shown theorem 
analyze efficiency algorithm follows 
candidate sequence needs generated prefixspan 
algorithms prefixspan grows longer sequential patterns shorter frequent ones 
generate test candidate sequence nonexistent projected database 
comparing gsp generates tests substantial number candidate sequences prefixspan searches smaller space 
projected databases keep shrinking 
indi cated lemma projected database smaller original postfix subsequences frequent prefix projected projected database 
practice shrinking factors significant usually small set sequential patterns grow quite long sequence database number sequences projected database quite small prefix grows projection takes postfix portion respect prefix 
notice freespan employs idea projected databases 
projection takes string just postfix shrinking factor prefixspan 
major cost prefixspan construc tion projected databases 
worst case prefixspan constructs projected database sequential pattern 
number sequential patterns cost non trivial 
section section interesting techniques developed dramatically reduces number projected databases 
theorem prefixspan sequence sequential pattern prefixspan says 
scaling pattern growth bi level projection analyzed major cost prefixspan construct projected databases 
number size projected databases reduced performance sequential pattern mining improved substantially 
section bi level projection scheme proposed reduce number size projected databases 
introducing method examine example 
example re examine mining sequential patterns sequence database table 
step scan find length sequential patterns second step constructing projected databases length sequential pattern construct lower triangular matrix shown table 
table 
matrix 
matrix registers supports length sequences assembled length sequential patterns 
cell diagonal line counter 
example indicates sequence appears sequences cells counters respectively 
example means information cell symmetric triangle matrix sufficient 
matrix called matrix 
scanning sequence database second time matrix filled shown table 
length sequential patterns identified matrix immediately 
length sequential pattern construct projected database 
example identified length sequential pattern matrix 
projected database contains sequences scanning frequent items matrix projected database constructed shown table 
table 
matrix projected database 
cell support length pattern generated projection needed 
notice means possible generate pattern 
need look database 
mine complete set sequential patterns projected databases length sequential patterns constructed 
checked bi level projection method produces exactly set sequential patterns shown example 
example find complete set sequential patterns projected databases constructed 
example projected databases length sequential patterns needed 
total projected databases constructed bi level projection 
justify mining process bi level projection 
definition matrix sequence match matrix length length sequential pattern 
sequential patterns having prefix projected database 
matrix projected database denoted defined follows 

contains counter 
element item counter registers support sequence projected database 
counter set 
form counters 
element counter registers support sequence projected database 
counter set element item counter registers support sequence projected database 
counter set elements number items counter registers support item sequence projected database sequence inserting ele ment item element counter lemma length sequential pattern set 
matrix filled scans projected database 
length sequence having prefix sequential pattern matrix projected database says 
lemma ensures correctness bi level projection 
question need include item postfix projected databases consider projected database example 
matrix table tells sequential pattern 
property super sequence sequential pattern 
matrix exclude item projected database 
way checking prune items efficient construction projected databases 
principle stated follows 
optimization item pruning projected database way checking way checking employed prune items construction projected databases 
construct projected database length sequential pattern element prefix frequent item excluded projection 
formed substituting item frequent item excluded example suppose frequent 
item excluded construction projected database 
element element superset optimization applies way checking reduce projected databases 
fragments sequences necessary grow longer patterns projected 
pseudo projection major cost prefixspan projection forming projected databases recursively 
propose pseudo projection technique reduces cost projection substantially projected database held main memory 
examining set projected databases observe sequence appear repeatedly recursive projected databases 
example sequence projections projected databases respectively 
redundant pieces sequences 
sequence database projected database held main memory redundancy avoided pseudo projection 
method goes follows 
database held main memory constructing physical projection collecting pointers referring sequences database pseudo projection 
projection consists pieces information pointer sequence database offset postfix sequence 
example suppose sequence database table held main memory 
constructing offset set offset indicates projection starts position sequence postfix projected database projection sequence consists pieces pointer similarly projection projected database contains pointer offset set indicating postfix starts item pseudo projection avoids physically copying 
efficient terms running time space 
efficient pseudo projection disk accessing random access disk space costly 
observation prefixspan pursues pseudo projection projected databases held main memory 
experimental results show integrated solution disk bi level projection disk processing pseudo projection data fit main memory clear winner performance 
example suppose frequent 
construct projected database sequence projected omitted 
please note include second may fail find pattern having prefix 
experimental results performance study section report experimental results performance prefixspan comparison gsp freespan 
shows prefixspan outperforms previously proposed methods efficient scalable mining sequential patterns large databases 
experiments performed mhz pentium pc machine megabytes main memory running microsoft windows nt 
methods implemented microsoft visual 
compare performance methods follows 
gsp 
gsp algorithm implemented de scribed 
freespan 
reported freespan alternative level projection efficient freespan level level projection 
freespan alternative level projection 
prefixspan 
prefixspan prefixspan level level projection described section 
prefixspan 
prefixspan prefixspan bi level projection described section 
synthetic datasets experiments generated standard procedure described :10.1.1.40.9892
data generator studies sequential pattern mining 
refer readers details generation data sets :10.1.1.40.9892
test methods various datasets 
results consistent 
limited space report results dataset data set number items set sequences data set 
average number items elements set denoted 
average number elements sequence set denoted 
number long sequential patterns low support thresholds 
experimental results scalability support threshold shown 
support threshold high limited number sequential patterns length patterns short methods close terms runtime 
support threshold decreases gaps clear 
freespan prefixspan win gsp 
prefixspan methods efficient scalable freespan 
gaps freespan gsp clear focus performance various prefixspan techniques remaining section 
shown performance curves prefixspan prefixspan close sup 
prefixspan freespan gsp data set 
prefixspan prefixspan pseudo proj data set port threshold low 
support threshold low sequential patterns prefixspan requires major effort generate projected databases 
bi level projection leverage problem efficiently 
seen increase runtime prefixspan moderate support threshold pretty low 
shows pseudo projections projected databases held main memory improves efficiency prefixspan 
seen performance level level bilevel pseudo projections close 
bi level catches level level support threshold low 
saving projected databases overcomes cost mining filling matrix bi level projection wins 
verifies analysis level level bi level projection 
pseudo projection improves performance projected database held main memory related question method extended disk processing doing physical projection saving projected databases hard disk projected database form disk address offset 
explore alternative pursue simulation test follows 
sequential read reading bytes data file cost unit random read reading data offset file cost unit suppose write operation cost shows costs prefixspan prefixspan pseudo projection variations data set means sequences data set 
prefixspan prefixspan win variations clearly 
observed bi level projection wins level level projection support threshold low 
huge number random reads disk pseudo projections performance killer database big fit main memory 

prefixspan prefixspan pseudo proj large data set 
scalability prefixspan 
shows scalability prefixspan prefixspan respect number sequences 
methods linearly scalable 
support threshold set prefixspan performs better 
summary performance study shows prefixspan efficient scalable freespan gsp freespan faster gsp support threshold low long patterns 
prefixspan uses bi level projection dramatically reduce number projections efficient prefixspan large databases low support threshold 
projected databases held main memory pseudo projection leads efficient solution 
experimental results consistent theoretical analysis 
discussions supported analysis performance study prefixspan freespan faster gsp prefixspan faster freespan 
summarize factors contributing efficiency prefixspan freespan gsp follows 
prefixspan freespan pattern growth methods searches focused efficient 
pattern growth methods try grow longer patterns shorter ones 
accordingly divide search space focus subspace potentially supporting pattern growth time 
search spaces focused confined projected databases 
projected database sequential pattern contains necessary information mining sequential patterns grown mining proceeds long sequential patterns projected databases smaller smaller 
contrast gsp searches original database 
irrelevant sequences scanned checked adds unnecessarily heavy cost 
prefix projected pattern growth elegant frequent pattern guided projection 
comparing frequent pattern guided projection employed freespan prefix projected pattern growth progressive 
worst case prefixspan guarantees projected databases keep shrinking takes care 
mining dense databases freespan gain projections prefixspan cut length number sequences projected databases dramatically 
apriori property integrated bi level pro prefixspan 
apriori property essence methods 
bi level projection prefixspan applies apriori property pruning projected databases 
property bi level projection explores way checking determine sequential pattern potentially lead longer pattern items assemble longer patterns 
fruitful portions sequences projected new databases 
furthermore way checking efficient corresponding cells matrix checked assembling needed 
developed novel scalable efficient sequential mining method called prefixspan 
general idea examine prefix subsequences project corresponding postfix subsequences projected databases 
projected database sequential patterns grown exploring local frequent patterns 
improve mining efficiency kinds database projections explored level projection bi level projection optimization technique explores projection developed 
systematic performance study shows prefixspan mines complete set patterns efficient runs considerably faster gsp algorithm freespan 
different variations prefixspan bi level projection better performance disk processing projection best performance projected sequence database fit main memory 
prefixspan represents new promising methodology efficient mining sequential patterns large databases 
interesting extend mining sequential patterns time constraints time windows taxonomy kinds time related knowledge 
important explore develop pattern growth sequential pattern mining methodology effectively mining dna databases 
agrawal srikant 
fast algorithms mining association rules 
proc 
int 
conf 
large data bases vldb pages santiago chile sept 
agrawal srikant :10.1.1.40.9892
mining sequential patterns 
proc 
int 
conf 
data engineering icde pages taipei taiwan mar 
bettini wang jajodia 
mining temporal relationships multiple granularities time sequences 
data engineering bulletin 
garofalakis rastogi shim 
spirit sequential pattern mining regular expression constraints 
proc 
int 
conf 
large data bases vldb pages edinburgh uk sept 
han dong yin 
efficient mining partial periodic patterns time series database 
proc 
int 
conf 
data engineering icde pages sydney australia apr 
han pei asl chen dayal 
hsu 
freespan frequent pattern projected sequential pattern mining 
proc 
int 
conf 
knowledge discovery data mining kdd pages boston ma aug 
han pei yin 
mining frequent patterns candidate generation 
proc 
acm sigmod int 
conf 
management data sigmod pages dallas tx may 
lu han feng 
stock movement ndimensional inter transaction association rules 
proc 
sigmod workshop research issues data mining knowledge discovery dmkd pages seattle wa june 
mannila toivonen verkamo 
discovery frequent episodes event sequences 
data mining knowledge discovery 
ramaswamy silberschatz 
cyclic association rules 
proc 
int 
conf 
data engineering icde pages orlando fl feb 
srikant agrawal 
mining sequential patterns generalizations performance improvements 
proc 
th int 
conf 
extending database technology edbt pages avignon france mar 
