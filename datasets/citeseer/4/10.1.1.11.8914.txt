inheritance business processes journey visiting notorious problems van der aalst eindhoven university technology faculty technology management department information technology box nl mb eindhoven netherlands 
aalst tm tue nl 
new millennium characterized speed distribution aspect business organization undertaking 
organizations challenged bring ideas concepts products services increasing pace 
companies distributed space time capabilities come deliver products solutions need global marketplace 
creates new opportunities poses new problems 
address problems directly related changing business processes networked economy 
problems addressed surface existing workflow specifications changed dynamic change problem management information problem 
third problem refers coordination problems inter organizational workflows 
fourth problem relevant predefined workflow specifications customized particular business situation 
show problems common characteristics 
point approach inheritance dynamic behavior provides partial solution problems 
inheritance cornerstones object oriented programming object oriented design 
basic idea inheritance provide mechanisms allow constructing subclasses inherit certain properties superclass 
focuses workflow processes :10.1.1.30.3125
class corresponds workflow process definition routing diagram objects instances class correspond cases 
object oriented methods class characterized set attributes set methods 
attributes describe properties object instance class 
methods symbolize operations objects create destroy change attribute 
structure class specified attributes methods class 
note structure refers static aspects interface 
dynamic behavior class hidden inside methods modeled explicitly uml life cycle class modeled terms statecharts 
dynamic behavior intrinsic part class description explicit implicit inheritance dynamic behavior understood 
see elaborate discussion topic pointers related 
examples alternative approaches 
widespread inheritance concepts mechanisms static aspects remarkable 
object oriented programming language supports inheritance respect static structure class interface consisting attributes methods 
workflow management aims supporting business processes results useful context 
deals inheritance dynamic behavior comprehensive manner :10.1.1.33.2525:10.1.1.43.4850
particular class petri nets called sound workflow nets defined 
class petri nets corresponds workflow processes deadlocks livelocks anomalies 
inheritance approaches causal relations tasks methods control routing structure taken account 
workflow management systems available claim object oriented provide support inheritance 
example workflow management system inconcert allows building workflow class hierarchies 
unfortunately inheritance restricted attributes structure process taken account 
workflow management systems implemented object oriented programming languages 
systems offer object oriented mechanisms inheritance workflow designer designer program code benefit object oriented features provided host language 
think inheritance useful concept workflow management 
advocate inheritance notions workflow related problems mentioned :10.1.1.33.2525:10.1.1.43.4850
deal dynamic change problem 
avoiding consistency problems migrating cases process 

deal management information problem 
providing aggregate management information progress presence versions variants workflow process 

handle coordination problems inter organizational workflows enforcing local consistency rules 

measure difference processes 
delta analysis estimate effort required customize process 
goal demonstrate problems related workflow design analysis addressed principle inheritance 
provide new scientific results integrates existing results published papers 
way hope reveal commonalities show relationships practical problems inheritance 
problems focus business processes characterized workflow processes 
workflows case piece executed specific case order insurance claim tax declaration objective workflow management system handle cases executing tasks efficiently effectively possible 
workflow process definition specifies tasks need executed order 
task executed case usually done resources machine employee petri nets represent workflow process definitions indicated 
papers application petri nets workflow management refer 
petri net represents workflow exactly starting place source exactly place sink net obtained adding transition sink input place source output place strongly connected 
case nodes net path 
petri nets particular structure called workflow nets 
task modeled transition 
tasks connected places represented circles specify ordering tasks 
places may contain tokens represented black dots 
state called marking distribution tokens places 
transition task enabled input places contains token 
enabled transitions fire removing tokens input places putting tokens output places 
detailed description class workflow nets scope needed remainder 
basic knowledge petri nets needed fully understand concepts 
problem dynamic change moment workflow products commercially available organisations introducing workflow technology support business processes 
widely recognised workflow management systems provide flexibility 
today workflow management systems problems dealing changes new technology new laws new market requirements may lead structural modifications workflow process definition hand 
addition ad hoc changes may necessary exceptions 
inability deal various changes limits application today workflow management systems 
restrict changes process perspective 
process perspective basically types changes individual ad hoc changes ad hoc adaptation workflow process single case limited set cases affected 
example hospital enters hospital serious hart problems going ask id workflow process may prescribe 
ad hoc changes distinguish entry time changes changes occur case system fly changes system process definition case changes 
structural evolutionary changes evolution workflow process new cases benefit adaptation 
structural change typically result bpr effort 
example change change year curriculum university year 
executing change typically running cases system 
shows ways deal active workflow instances restart running cases rolled back restarted new process proceed changes restart proceed transfer change change fig 

handle running cases 
old process new process affect running cases allowing multiple versions process transfer case transferred new process 
term dynamic change refer policy 
restarting cases causes real difficulties difficult rollback tasks executed 
proceed policy causes hardly problems 
fact policy truly supported today commercial workflow management systems 
policy causes serious theoretical practical problems transfer cases 
term dynamic change refers problem handling old cases new process transfer cases new improved version process 
illustrates dynamic change problem 
sequential workflow process left changed workflow process tasks executed parallel right problems possible transfer case left right 
sequential process possible states states corresponds state parallel process 
example state token mapped state token 
cases tasks executed need executed 
consider situation parallel process changed sequential case moved right hand side process left hand side process 
states right hand side process problem token moved token token mapped single token token token mapped single token 
state token executed causes problems corresponding state sequential process possible execute 
simple example shows straightforward migrate old cases new process change 
authors proposed solution dynamic change problem 
solutions require human intervention restricted workflows particular structure 
ok fig 

dynamic change problem 
problem management information problem change typically leads multiple variants process 
evolutionary structural change number variants limited 
adhoc changes may lead situation number variants may order magnitude number cases 
manage workflow process different variants desirable aggregated view progress 
note manufacturing process manager get impression progress walking factory 
workflow process handling digitized information possible 
utmost importance supply manager tools obtain condensed accurate view workflow processes 
shows workflow process variants sequential left parallel middle 
numbers places indicate number cases specific state sequential process cases task task parallel process cases 
manager requires aggregated view view variant workflow process cases need mapped generalized version different processes 
solution find greatest common divisor gcd common multiple lcm processes shown 
finding gcd lcm set processes difficult different definitions cf 

states sequential process represented parallel process may choose parallel process management information 
choice possible 
assume gcd sequential process parallel process parallel 
shows aggregated view workflow processes right 
places right hand side process quite straightforward verify numbers correct 
number tokens place corresponds number cases 
sequential process cases 
parallel process cases brings total 
small example may trivial obtain information 
general variants processes may tasks far trivial aggregated information manager 
topic generating management information addressed 
despite relevance generation workflow management systems researchers working topic 
problem inter organizational interface agreements commerce refers enabling purchasing selling goods services communications network 
ability conduct business activities involved marketing finance manufacturing selling negotiation electronically commerce 
major objective adopting commerce strategies reduce costs improve efficiency business processes replacing business electronic alternatives 
commerce earliest incarnation known electronic data interchange edi traditionally larger corporations share exchange information business partners suppliers private networks 
edi enables exchange business data computer fig 

mapping cases different processes workflow process 
computer 
eliminates need re key information documents messages supporting creation electronic versions documents messages public standard formats transmitted received interpreted systems 
typical applications supply chain management processes order placement processing 
explosive growth internet couple years commerce able offer solutions broader range business processes edi previously addressed 
extensive availability internet enabled smaller companies hindered previously large financial investment required private networks conduct business electronically 
technologies bar coding automatic teller machines email fax video conferencing workflow world wide web continued impact success commerce 
term commerce frequently refers line involving businesses consumers experts predict commerce continues grow business business commerce continue enjoy lion share revenue 
business business commerce seen tremendous growth due globalization worldwide economy turn enabled large part internet 
corporations extending markets mergers strategic alliances companies world 
business processes business partners coupled way creating inter organizational workflow processes 
workflow systems enable automated management coordination tasks people resources involved performing business process way streamlines improves efficiency business process 
provide tools modeling enactment administration monitoring business processes 
useful managing complex workflow processes involve multiple organizations interorganizational workflows 
particular design workflow processes complex presents challenges 
third problem introduce problem caused malfunctioning coordination business partners participating common process 
describe problem terms total workflow inter organizational workflow executed 
public workflow referred contract workflow business process partners agreed 
workflow comprises tasks interest business partners involved abstraction real workflow 
private workflow part total workflow executed specific business partner called domain 
characteristics inter organizational workflow companies involved know processes enacted inside domains 
view abstraction specified public workflow 
business partners involved responsible part public workflow 
tasks local interest added informing business partners 
tasks related quality control internal bookkeeping storage management typical examples tasks local interest 
local extensions workflow may cause serious problems global level 
reordering tasks adding removing causal relations may cause deadlocks livelocks confusion anomalies 
consider example public workflow shown 
workflow partitioned domains tasks mapped domain left tasks mapped domain right 
input place private workflow domain output place domain 
fig 

public workflow illustrate problems resulting local change 
private workflows modified accommodate local needs 
domain causal relation added task task sure executed 
domain order executed reversed 
shows modified private workflows 
place added force execution 
local point view change cause problems 
domain perfectly acceptable reduce degree parallelism 
change leads global deadlock 
hand executed place hand executed causal relation 
circular dependency involving tasks causes workflow process deadlock state marking places 
shows modification private workflow domain task task reversed 
change alleviates problem caused addition place private workflows modified indicated deadlock 
modification private workflow domain acceptable 
public workflow partners agreed execution task may depend results task reversing order task task problems missing data task may executed task examples show local changes may cause global errors modifications harmless local perspective may cause deadlocks livelocks missing data note business partners know fragment public workflow take knowledge account anomalies described occur conflicting changes serializing tasks differently 
additional place causes global deadlock 
fig 

private workflows modified 
reversing order tasks may cause confusion 
problem customizing business processes today information systems support variety business processes 
information systems general purpose software packages workflow management systems domain specific support systems erp enterprise resource planning systems software specific type businesses call centers hospitals specific solutions 
avoid re inventing wheel companies sharing software standard solutions 
result business process supported may differ business process desired 
consider example today generation erp systems sap 
systems industry best practices 
best practices solution may apply specific 
assuming choice particular erp choices best practices solution despite shortcomings software customized reconfiguring reprogramming parts functionality 
choice costs customization need assessed 
process selecting standard system erp system costs customization different systems need compared 
suppose interested evaluating costs customization concise specification desired business processes current process model business processes supported standard system 
case challenge determine automatically difference models 
term delta analysis investigation 
delta analysis simple may 
consider example workflow processes shown 
difference processes 
just considering tasks supported sufficient 
routing differs processes differ 
sequential processes consisting tasks little common process tasks executed parallel tasks selected 
delta analysis necessary determine processes 
clear processes agree possible point differences 
consider workflow processes shown 
common 
way looking greatest common divisor gcd workflows cf 
section 
gcd workflow process part processes agree 
tasks processes appear gcd 
clear tasks processes appear gcd 
workflow processes shown agree role task task 
gcd comprise tasks 
tasks clear 
shows possibilities 
gcd reasonable put parallel execution sequences possible sequential process possible parallel process alternative 
argue alternative gcd processes agree ordering 
workflow processes agree role task relative task task may just add task gcd alternative 
holds task alternative 
choice alternative alternative arbitrary gcd fig 

gcd processes 
argue tasks alternative 
small example shows selection gcd far trivial 
note deliberations selecting gcd establishing differences workflow processes 
definition gcd crucial structured delta analysis 
fig 

alternative gcd note order delta analysis descriptions desired current process process supported standard software 
observation interesting point role models today erp systems 
example model aris ids prof scheer model sap functionality 
model describes business processes supported sap 
model clarify configure sap system 
event driven process chains epc specifying business processes aris sap similar petri nets 
tool aris model desired current workflow process ingredients delta analysis 
note apart issues determining gcd problems naming tasks 
ontology prerequisite form delta analysis 
inheritance dynamic behavior tackle problems identified previous section propose solution inheritance 
define inheritance notions workflow processes workflows specified workflow nets 
consider workflow processes 
subclass 
subclass superclass inherits certain features 
intuitively say subclass 
clearly tasks 
typically add new tasks 
reasonable demand respect tasks 
fact behavior respect existing tasks identical 
identified different notions inheritance protocol inheritance projection inheritance protocol projection inheritance life cycle inheritance :10.1.1.33.2525
protocol projection inheritance restrictive form inheritance 
subclass respect protocol projection inheritance subclass respect protocol inheritance projection inheritance 
life cycle inheritance liberal form inheritance protocol projection inheritance implies life cycle inheritance 
notion projection inheritance abstraction possible distinguish arbitrary tasks executed effects tasks considered subclass respect projection inheritance 
distinguishing projection inheritance consider tasks nets 
tasks renamed 
think tasks silent internal observable 
branching bisimulation equivalence notion transitions label deciding subclass tasks label different considered 
behavior respect tasks called observable behavior 
added tasks tasks executed observable outside world projection inheritance conforms hiding abstracting tasks new 
notion protocol inheritance encapsulation blocking new tasks possible distinguish tasks executed subclass distinguishing protocol inheritance tasks blocked 
new tasks simply disallowed executed 
formal definition forms inheritance scope 
definition builds branching bisimulation equivalence abstraction operator renames set tasks 
interested reader referred :10.1.1.33.2525:10.1.1.43.4850
shows workflow processes modeled terms workflow nets 
special symbols indicate source place sink place 
workflow process consists sequential tasks register handle archive 
workflow processes extends process additional task check 
workflow process task check executed arbitrarily times register handle 
workflow process subclass workflow process respect register handle archive check register handle archive check register handle archive check register handle archive check register handle archive fig 

routing diagrams describing variants simple workflow process 
projection inheritance task check abstracted processes behave equivalently branching bisimilar 
workflow process subclass workflow process respect protocol inheritance blocking task check yields equivalent processes 
workflow process subclass respect projection inheritance hiding task check introduces possibility skip task handle change actual behavior 
subclass respect protocol inheritance 
workflow process subclass workflow process respect projection inheritance hiding task results equivalent processes 
subclass respect protocol inheritance blocking task check results deadlock 
workflow process subclass workflow process respect projection inheritance detour task check hidden yielding observable behavior identical 
workflow process subclass workflow process respect protocol inheritance 
workflow processes subclass respect life cycle inheritance 
life cycle inheritance new tasks blocked hidden obtain equivalent processes 
workflow process subclass respect protocol projection inheritance 
proposed number inheritance preserving transformation rules :10.1.1.33.2525:10.1.1.43.4850
rules correspond frequently design constructs preserve inheritance notions 
detailed description rules scope 
give informal description inheritance rules pp pt pj pj 
protocol projection inheritance preserving transformation rule pp illustrated 
new transitions tasks places conditions added original workflow net tokens temporarily removed place original net 
added subnet may structure long guaranteed token taken place returned eventually tokens left subnet 
subnet behavior extended workflow net right subclass original workflow net left projection protocol inheritance 
abstracts newly added tasks blocks newly added tasks find differences nets 
pp fig 

inheritance preserving transformation rule pp 
illustrates transformation rule pt 
pt preserves protocol inheritance adds alternative behavior 
added subnet removes tokens original net execute tasks original net 
added subnet may structure long token taken place input place returned place output place eventually tokens left subnet 
requirements new tasks consuming tokens appear original net routes subnet create new states original net 
easy see pt preserves protocol inheritance added subnet activated new tasks blocked 
note pt preserve projection inheritance subnet bypass parts original net 
pt fig 

inheritance preserving transformation rule pt 
shows inheritance preserving transformation rule pj 
rule pj inserts new tasks task place original workflow net 
fact rule pj insert arbitrary 
added subnet may structure long guaranteed subnet activated firing eventually token put place tokens left 
easy see extended workflow net right subclass original workflow net left projection inheritance abstracting newly added tasks observable behaviors coincide 
projection inheritance preserving transformation rule pj add parallel behavior 
rule named pj historical reasons 
illustrates rule 
execution task activates subnet containing new tasks executed parallel 
task synchronizes original workflow net added subnet 
added subnet may arbitrary routing constructs long execution followed execution original net preceded activation subnet firing followed state marks input places subnet tokens left subnet firing 
requirements guaranteed extended workflow net right subclass original workflow net left projection inheritance 
pj fig 

inheritance preserving transformation rule pj 
pj fig 

inheritance preserving transformation rule pj 
formal definition rules refer :10.1.1.33.2525:10.1.1.43.4850
details subtle requirements omitted simplify presentation main ideas 
workflow nets shown illustrate rules 
rule pp introduces new tasks postpone behavior 
workflow process shown constructed applying rule task check execution handle 
rule pt introduces alternative behavior 
workflow process shown constructed applying pt 
rule pj inserts new tasks existing tasks 
workflow process shown extended workflow process rule 
extension single task complex containing tasks kinds causality relations 
rule pj adds parallel behavior 
workflow process shown extended workflow process rule 
rules pp pt pj pj correspond design constructs practice iteration choice sequential composition parallel composition 
designer sticks rules inheritance guaranteed 
solution 
remainder sketch way inheritance assist tackling problems identified section 
provide detailed solutions problems refer publications exploring alternative solutions 
problem dynamic change inheritance preserving rules avoid problem indicated 
rules enable designer establish syntactic semantic correctness compositional manner 
example soundness verified analyzing original part extension separately 
tackle dynamic change problem transfer rules 
suppose subclass constructed rules pp pt pj pj 
state workflow process possible transfer case transfer instantaneous needed introduce syntactic errors deadlocks livelocks improper termination semantic errors double execution tasks unnecessary skipping tasks 
possible transfer cases subclass superclass problems 
note transfer rules derived transformation rules introduced earlier 
transfer rules move case subclass see 
transfer rules trivial additional behavior alternative branches parts inserted existing parts introduced eliminating existing states 
transfer rule corresponding transformation rule pj complex pj adds parallel behavior additional behavior 
adding parallel behavior may necessary mark places newly added parts 
case choice put tokens parallel part conservative approach put tokens parallel part progressive approach 
choice depends desired policy 
transfer rules move case superclass tion rule pj simple simply remove parallel parts 
transfer rules transfer rule corresponding transforma move tokens extended part superclass part 
transfer cases superclass transformation rule pt choices conservative approach progressive approach 
choice depends desired transfer policy 
note long designer sticks inheritance preserving transformation rules transfer rules generated automatically 
means need design complicated migration schemes 
illustrate transfer rules workflow processes shown 
suppose case variant state corresponding case migrated variant need modify state state new process just token 
case migrated variant new state conservative mapping progressive mapping 
case variant state corresponding mapped state transferred 
case variant state corresponding mapped state transferred 
examples show long designer sticks inheritance preserving transformation rules possible migrate cases superclass subclass vice versa transformation rules avoid dynamic change bug illustrated 
problem management information transfer rules construct management information 
construct select appropriate workflow process variants subclass superclass processes inheritance preserving transformation rules applied direction 
workflow process called management information net case residing variants mapped management information net transfer rules 
aggregate management information obtained automatically 
consider example situation process template ad hoc variant subclass variant constructed rules pp pt pj pj 
template management infor mation net cases projected net see technical details scenarios showing inheritance concepts really help provide aggregate management information 
problem inter organizational interface agreements general modeling workflow processes span multiple organizations complex 
workflow modeling tools require complete details entire process fixed design stage 
approach bottleneck workflow design requires participating business partner understand nature partners local processes things complicated 
necessary desirable 
partners able agree business process level abstracts irrelevant confusing details 
furthermore organizations able participate completion business process time liberty construct private processes way places best advantage 
approach propose designing interorganizational workflows step process involves creation public process partitioning public process partners allowing modification individual partners parts process create private processes 
approach inheritance preserving transformation rules described detail 
steps 
design public workflow process 
step partners agree structure common business process 
key tasks identified interfaces 
interfaces specified control data dependencies 
process repositories may stage aid design process 
workflow process model resulting stage contain organization specific information role assignment resources assignment refer workflow process represented model public process 

partition public workflow process definition business partners 
step partners assigned responsible completing parts process 
workflow net partitioned organizational lines 
partitioning creates set workflow net fragments business partner 
set contains fragments public workflow net partner responsible 

create private workflow business partner 
partitioning stage creates sets necessarily workflow nets fragments workflow net 
fragment may multiple input output places input output places 
fragment may contain disjunct subsets unconnected 
words fragment may workflow net requirements mentioned earlier violated 
step automatically creates workflow net fragment set partners manage locally organization 
note step places solely dedicated message exchange fragments remove source places initial remove sink places fragment 
abstraction obtain workflow net additional modifications connecting fragments introducing arcs implicit places needed 
result sound workflow net behavior preserves interface original public process 
refer local workflows private processes 
modify private processes inheritance preserving transformation rules 
business partner modify private process created previous step accurately reflect business process incorporate details tasks implemented organization 
details added stage task implementation assignment roles tasks data objects mapping global data objects local data objects business rules deadline specification extensions modifications minimal workflow preserve behavior global business process 
guarantee local extensions modifications disturb behavior public process notion inheritance dynamic behavior 
purpose bring projection inheritance play 
private workflow processes modified preserving projection inheritance allowed transform local workflow arbitrary subclass projection inheritance 
purpose transformation rules pp pj pj 
result approach set private workflows form actual total workflow 
total workflow sound workflow net anomalies deadlocks dangling occur 
total workflow subclass private workflow projection inheritance 
means workflow executed consistent workflow business partners agreed place 
strong results show notion inheritance tackle problem 
see details 
problem customizing business processes fourth problem tackled inheritance notions defined earlier problem delta analysis workflow processes difference processes cost customize process coincides 
core problems decide processes agree determine gcd greatest common divisor 
showed possible candidates gcd workflow processes shown 
inheritance relations experiment various definitions gcd 
straightforward definition gcd workflow processes smallest superclass life cycle inheritance subclass gcd subclass gcd workflow process real subclass gcd superclass 
definition shown set workflow processes exists gcd 
cases may multiple gcd consider example workflow processes shown 
workflow process gcd processes process superclass processes shown smaller workflow process satisfying conditions 
similar reasons process gcd 
closely observe processes shown may reasonable gcd processes agree fact tasks executed tasks 
agree ordering 
added gcd 
concept gcd introduced detailed analysis concept 
inheritance relations lattice trade uniqueness existence 
weak notion gcd existence guaranteed may multiple gcd stronger notion existence longer guaranteed gcd exists unique 
tradeoff define notion maximal common divisor mcd 
mcd smallest superclass life cycle inheritance 
mcd workflow processes shown 
set mcd 
reserve term gcd stronger notion gcd subclass subclass subclass subclass subclass 
gcd stronger notion unique 
conditions mcd set workflow processes gcd unique 
research needed evaluate usefulness particular notion gcd delta analysis 
fact inheritance defines relation processes useful comparing workflows 
note inheritance relations defines partial order relation reflexive antisymmetric transitive 
inheritance sound basis defining notion gcd 
set workflow processes related inheritance relationships generally quite easy find gcd 
case computation gcd involved typically multiple candidates mcd 
pointed defining problem delta analysis computing gcd just ingredients needed calculate costs customization 
example naming tasks important ontology necessity may difficult establish suitable cost structure cost adding deleting causal relation compared adding deleting changing task 
see elaborate discussion aspects 
tool support visited notorious problems related design analysis workflow processes problem dynamic change migrate workflow instances old new process 
problem management information provide aggregate information context multiple versions variants process 
problem inter organizational interface agreements align workflow processes different organizations keeping local autonomy 
problem customizing measure differences commonalities different processes delta analysis 
goal journey integration previous area demonstrate diverse set problems addressed principle inheritance 
tool woflan supports notions inheritance 
workflow processes woflan decide process subclass process 
processes may created bpr tool protos workflow systems staffware cosa 
clearly provide complete solution problems 
fact woflan supports inheritance notions demonstrates tool support possible 
hope integrate ideas commercial run time systems workflow management systems enterprise resource planning systems business systems 

van der aalst 
application petri nets workflow management 
journal circuits systems computers 

van der aalst 
formalization verification event driven process chains 
information software technology 

van der aalst 
inheritance interorganizational workflows enable business business commerce 
van editors proceedings second international conference telecommunications electronic commerce pages nashville tennessee october 

van der aalst basten 
life cycle inheritance petri net approach 
az ma balbo editors application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

van der aalst basten 
identifying commonalities differences object life cycles behavioral inheritance 
editors application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

van der aalst basten 
inheritance workflows approach tackling problems related change 
theoretical computer science 

van der aalst basten verbeek 
adaptive workflow interplay flexibility support 
editor enterprise information systems pages 
kluwer academic publishers norwell 

van der aalst desel oberweis editors 
business process management models techniques empirical studies volume lecture notes computer science 
springer verlag berlin 

van der aalst de michelis ellis editors 
proceedings workflow management net concepts models techniques tools wfm lisbon portugal june 
lisbon 

van der aalst weske 
approach interorganizational workflows 
dittrich norrie editors proceedings th international conference advanced information systems engineering caise volume lecture notes computer science pages 
springer verlag berlin 

adam huang 
modeling analysis workflows petri nets 
journal intelligent information systems 

agostini de michelis 
improving flexibility workflow management systems 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

basten 
terms nets system design petri nets process algebra 
phd thesis eindhoven university technology eindhoven netherlands december 

basten van der aalst 
inheritance behavior 
journal logic algebraic programming 

lee 
designing trustworthy interorganizational trade procedures open electronic commerce 
international journal electronic commerce 

casati ceri pernici pozzi 
workflow evolution 
data knowledge engineering 


steps sound process models 
see volume 

ellis keddara 
ml modeling language support dynamic evolution workflow systems 
computer supported cooperative 

ellis 
information control nets mathematical model office information flow 
proceedings conference simulation measurement modeling computer systems pages boulder colorado 
acm press 

ellis keddara 
workflow change workflow 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

ellis keddara rozenberg 
dynamic change workflow systems 
ellis kling mylopoulos kaplan editors proceedings conference organizational computing systems pages milpitas california august 
acm acm press new york 

ellis nutt 
modelling enactment workflow systems 
ajmone marsan editor application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

wieringa 
comparing petri net activity diagram variants workflow modeling quest reactive petri nets 
see volume 

fischer editor 
workflow handbook workflow management coalition 
strategies lighthouse point florida 

grefen aberer ludwig 
crossflow cross organizational workflow management dynamic virtual enterprises 
international journal computer systems science engineering 

grefen 
level process specification dynamic service outsourcing petri nets ebxml 
see volume 

oberweis 
delta analysis petri net models business processes 
editors proceedings rd international conference applied informatics pages 

han sheth 
adaptive workflow modeling 
proceedings th international conference information systems analysis synthesis pages orlando florida july 

heckel 
open petri nets semantic model workflow integration 
see volume 

inconcert 
inconcert process designer guide 
inconcert cambridge massachusetts 

jablonski bussler 
workflow management modeling concepts architecture implementation 
international thomson computer press london uk 

whinston 
frontiers electronic commerce 
addison wesley reading massachusetts 

keddara 
dynamic evolution workflow systems 
phd thesis university colorado boulder colorado usa 

keller teufel 
sap process oriented implementation 
addison wesley reading ma 

martens reisig 
inter operability workflow applications local criteria global soundness 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

klein dellarocas bernstein editors 
proceedings cscw workshop adaptive workflow systems seattle washington november 

klein dellarocas bernstein editors 
adaptive workflow systems special issue computer supported cooperative 


composing abstractions coloured petri nets 
nielsen simpson editors application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

alonso schuldt schuler 
wise approach electronic commerce 
international journal computer systems science engineering 

lee 
distributed electronic trade scenarios representation design prototyping 
international journal electronic commerce 

lee 
soft coded trade procedures open edi 
international journal electronic commerce 

lenz oberweis 
inter organizational business process management xml nets 
see volume 

leymann roller 
production workflow concepts techniques 
prentice hall ptr upper saddle river new jersey usa 

merz liberman lamersdorf 
mobile agents support interorganizational workflow management 
international journal applied artificial intelligence 

merz liberman lamersdorf 
crossing organisational boundaries mobile agents electronic service markets 
integrated computer aided engineering 

pallas athena 
protos user manual 
pallas athena bv netherlands 

reichert dadam 
supporting dynamic changes workflow loosing control 
journal intelligent information systems 

reisig rozenberg editors 
lectures petri nets basic models volume lecture notes computer science 
springer verlag berlin 

reisig rozenberg editors 
lectures petri nets ii applications volume lecture notes computer science 
springer verlag berlin 

rumbaugh jacobson booch 
unified modeling language manual 
addison wesley reading ma usa 

scheer 
business process engineering models industrial enterprises 
springer verlag berlin 

software ley 
cosa user manual 
software ley gmbh germany 

staffware 
staffware user manual 
staffware plc united kingdom 

verbeek basten van der aalst 
diagnosing workflow processes woflan 
computer journal 

van der aalst 
conservative adaption workflow 
inm wolf reimer editors proceedings international conference practical aspects knowledge management pakm workshop adaptive workflow pages basel switzerland october 

van der aalst 
ad hoc workflow problems solutions 
wagner editor proceedings th dexa international workshop database expert systems applications pages toulouse france september 
ieee computer society press los alamitos california 


behavioural subtyping property preservation 
smith talcott editors formal methods open object distributed systems pages 
kluwer 


subtyping patterns active objects 
editors proceedings ter workshop des gi groom grundlagen objekt modellierung volume germany 
university 


electronic commerce structures issues international journal electronic commerce 
