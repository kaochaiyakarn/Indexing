supporting ontological analysis taxonomic relationships christopher welty nicola guarino computer science department college ny usa ladseb cnr padova italy taxonomies important part conceptual modeling 
provide substantial structural information typically key elements integration orts little guidance proper taxonomy 
adopted notions philosophical practice formal ontology adapted information systems 
tools identity essence unity dependence provide solid logical framework properties form taxonomy analyzed 
analysis helps intended meaning explicit improving human understanding reducing cost integration 
published elsevier science 
data knowledge engineering www elsevier com locate ontology discipline philosophy deals kinds structures objects properties aspects reality 
philosophical practice ontology dates back aristotle students called metaphysics term ontology coined rudolf apparently independently jacob 
oed rst recorded english 
today ontology includes questions castle hole way answer questions re ects way perceive interact world 
early researchers ai especially knowledge representation realized ontology relevant necessary process describing world intelligent systems reason act 
awareness integration grew spread areas half nal decade th century term ontology enterprise modeling commerce emerging xml meta data standards knowledge management reached top businesses strategic plans 
addition emphasis knowledge sharing interchange ontology application area right 
corresponding author 
tel fax 
mail address cs edu welty 
see front matter published elsevier science pii welty guarino data knowledge engineering general accepted industrial meaning ontology synonymous conceptual model nearly independent philosophical antecedents 
slight di erentiation terms shown fig 
conceptual model actual implementation ontology satisfy engineering trade running application design ontology independent run time considerations goal specify conceptualization world underlying application 
describe founded methodology ontological analysis called ontoclean strongly philosophical underpinnings description logic system support methodology 
methodology limited analyzing taxonomies focus aspect 
described published previously preliminary form noted speci sections 
extended version presents broader view methodology extended discussion system support 
note valid criticisms formalizations previously raised 
basic intuitions underlying notions remain formalizations follow updated light criticisms 
discussion needed fully address changes implications scope main purpose provide overview methodology developed conceptual modeling 

background fig 

overview methodology 
notions methodology subtle describing detail discuss basic intuitions related existing notions conceptual modeling 

taxonomies taxonomies central part conceptual models 
properly structured taxonomies help bring substantial order elements model particularly useful presenting limited views model human interpretation play critical role reuse integration tasks 
improperly structured taxonomies opposite ect making models confusing di cult reuse integrate 
clearly insights properly construct taxonomy useful 
previous orts providing insights focused semantics taxonomic relationship called class inclusion subsumption di erent kinds relations generalization specialization subset hierarchy constraints involved multiple taxonomic relationships covering partition taxonomic relationship general framework data abstractions structural similarities descriptions 
approach di ers focus arguments properties concepts involved subsumption relationship semantics relationship 
taken granted take statement subsumes arbitrary properties mean necessarily focus chapter verifying plausibility foundedness single statements basis ontological nature properties example description logics determine complex description subsume methodology help determine primitive property subsume 

basic notions welty guarino data knowledge engineering introducing important philosophical notions identity essence unity dependence 
notion identity adopted intuitions cognitive agents general interact particular recognize individual entities world 
despite fundamental importance philosophy notion identity slow making way practice conceptual modeling information systems goals analyzing describing world ostensibly 
rst step understanding intuitions identity requires considering distinctions similarities identity unity 
notions di erent albeit closely related confused generic notion identity 
strictly speaking identity related problem distinguishing speci instance certain class instances class means characteristic property unique instance 
unity hand related problem distinguishing parts instance rest world means unifying relation binds parts parts 
example ontological constraints shall introduce implicitly considered necessary true possible world 
believe modal necessity distinguishes particular conceptualization world ontological truth contingent assertion 
speci modal logic adopted clari ed 
welty guarino data knowledge engineering asking dog problem identity asking collar part dog problem unity 
notions encounter problems time involved 
classical identity change order account common sense need admit individual may remain exhibiting di erent properties di erent times 
properties change 
instance certain property time 
issue leads notion essential property base de nition rigidity discussed related distinction synchronic diachronic identity 
extensive analysis issues context conceptual modeling 
fourth notion ontological dependence may involve di erent relations existing persons parents holes pieces cheese cheese 
focus notion dependence applied properties 
distinguish extrinsic intrinsic properties depend objects instances 
intrinsic property typically inherent individual dependent individuals having heart having ngerprint 
extrinsic properties inherent relational nature friend john 
extrinsic properties assigned external agents agencies having speci social security number having speci customer id having speci name 
important note ontological assumptions related notions ultimately depend conceptualization world 
means shall examples clarify notions central analysis examples point 
say having ngerprint may considered identity criterion person mean claim universal identity criterion persons taken identity criterion conceptualization mean property instances relationships properties 
see intuitive notions consider instance bunch bricks 
bricks sit pile build castle 
castle time back pile bricks 
describe lifetime bunch bricks terms properties relationships objects 
represent bunches bricks di erent properties 
single object bunch bricks castle objects castle bunch bricks relationship 
analysis helps choices exposing certain assumptions underlying 
example agree bunch bricks identi ed bricks remove replace bricks di erent bunch 
castle hand property remove add bricks castle consider castle 
framework designed clarify exploit logical consequences decisions 
decisions ultimately result sensory system culture aim methodology clarify formal tools assumptions explicit reveal logical consequences 

related notions welty guarino data knowledge engineering identity analogies conceptual modeling databases knowledge bases objectoriented classical information systems completely captures notion 
discuss cases 
membership conditions 
description logics conceptual models usually focus suf cient necessary criteria class membership recognizing instances certain classes 
identity describe instances class told apart 
common confusion important keep clear membership conditions determine entity instance class answer question dog dog globally unique ids 
object oriented systems uniquely identifying object collection data critical particular data persistent distributed 
databases globally unique ids introduced commercial systems address issue 
solutions provide notion identity descriptions units data individuals objects records entities describe 
leaves open possibility descriptions may refer entity entity notion identity concerned 
words preventing descriptions dog created independently di erent times places having di erent ids records describe dog di erent pieces data 
globally unique ids provide identity criteria database records entities world records describe 
primary keys 
object oriented languages provide facility overloading locally de ning equality predicate class 
standard database analysis introducing new tables requires nding unique keys single elds combinations elds record 
similar notions closely approach notion identity er evidence determining descriptions refer entity 
subtle di erence attempt brie describe clear examples chapter 
primary candidate keys overloaded equality operators typically extrinsic properties required system unique 
cases information systems designers add extrinsic properties simply escape solving di cult identity problems 
notion identity mainly intrinsic properties interested analyzing inherent nature entities believe important understanding domain 
say type analysis uses intrinsic properties uses extrinsic ones merely question emphasis 
furthermore analysis information may represented implemented system primary key notion information 
example may claim part analysis people uniquely identi ed brain brains possession may appear nal system designing 
notion identity notion primary keys incompatible disjoint practice conceptual modelers need 
welty guarino data knowledge engineering 
formal tools ontological analysis section shall formal analysis basic notions discussed shall introduce set meta properties represent behavior property respect notions 
goal show meta properties impose constraints way subsumption model domain description logic system checking constraints 

preliminaries assume rst order language modeling language intended domain world modeled rst order language meta language constant symbols predicates 
meta properties represented predicate symbols 
primitive meta properties correspond axiom schemes 
certain axiom scheme holds certain property corresponding meta property holds 
correspondence seen system re ection rules allow de ne particular meta property meta language avoiding secondorder logical de nition 
meta properties analysis tools characterize ontological nature properties de ned respect conceptualization 
section representation 
denote primitive meta properties bold letters preceded sign notation indicate property meta property reading meta property signi cance described subsequent sections 
analysis adopt rst order logic identity 
occasionally extended simple temporal logic predicates temporally indexed means extra argument 
time argument omitted certain predicate predicate assumed time invariant 
note identity relation assumed time invariant things identical identical forever 
means leibniz rule holds exceptions 
modal notions necessary possibly operators quantify possible worlds means necessarily true true possible worlds means possibly true true possible world 
domain quanti cation 
extension predicates limited exists actual world exists possible world 
shall quantify constant domain possible world 
worlds considered histories snapshots shall consider equally accessible 
result shall adopt simplest quanti ed modal logic plus barcan formula 
example predicate unicorn empty world instance actual existence 
actual existence di erent existential quanti cation logical existence represented temporally indexed predicate meaning actual existence time 
order avoid trivial cases meta property de nitions shall implicitly assume property variables restricted discriminating properties properties 
words discriminating properties properties possibly property possibly property tautological vacuous 

rigidity welty guarino data knowledge engineering lowe de nes essential property object property necessary object object property possible world 
relationship individual property 
notion rigidity originally introduced related turns useful conceptual modeling de nition evolved somewhat re ect accurately way time modality related de nition 
rigid property property essential instances property xt 
de nition 
non rigid property property essential instances 
de nition 
anti rigid property property essential instances xt 
example normally think person rigid instance person instance person possible world 
student property hand normally non rigid easily imagine entity moving student property individual 
anti rigidity added restriction non rigidity 
constrains instances property simple negation rigidity informative 
anti rigidity attempts capture intuition instances certain properties possibly instances property 
consider property student example normal usage instance student necessarily 
modal necessity confused temporal permanence general 
example possible person student life violate assertion property person 
person student life accidental necessary possible worlds case 
impact information systems simple anti rigid property possibly change requirement individual change 
rigid property hand change 
non rigid property restrictions instances may essential change may change 
weakness non rigidity led stronger anti rigid meta property 
rigid properties marked meta property non rigid properties marked anti rigid properties note rigidity meta property inherited sub properties properties carry person student person know instances student necessarily instances person necessarily modal sense instances student 
case assert student indicate instance student cease student welty guarino data knowledge engineering instance student cease person 
hand show anti rigidity inherited property subsumed student anti rigid 
rigidity intuitively tied existence leave philosophical discussion 

identity philosophical literature identity condition ic arbitrary property usually de ned suitable relation satisfying formula example ic property person may having ssn having thesame fingerprints relations assumed satisfy 
relation satisfying exists property say property carries ic 
goal nd relation instances property tantamount identity 
information systems typically provide arti cial extrinsic criteria making determination section ontology basic question explaining existence classes entities know entity exists identi ed 
discussed detail formulation problems opinion 
rst problem related need distinguishing supplying ic simply carrying ic non rigid properties student carry ics inheriting supplied subsuming rigid properties person 
intuition person student di erent times di erent schools ic allegedly supplied student say having registration number may local certain experience 
second problem regards nature relation ic index respect time account di erence synchronic diachronic identity 
deciding property carries ic may di cult nding necessary su cient identity hard especially natural kinds artifacts 
believe practical approach required information systems 
reasons de ned follows de nition 
ic sameness formula satis es excluding trivial cases assuming predicate actual existence discussed section sameness formula logical formula expresses ics property usually terms identity related parts properties 
example ic person may formula fingerprint fingerprint 
correctly pointed kaplan carrara giaretta possible trivial formulae satisfy formal requirements ic informative 
may exclude logically trivial cases useful point valid ics informative 
ic necessary satis es su cient satis es need 
mentioned weaker reliance actual existence indicating formulae may heuristics identity believe practical information systems 
de ne meta properties de nition 
property carries ic subsumed property supplying ic including case supplies ic 
de nition 
property supplies ic rigid ii ic iii ic carried properties subsuming 
means inherits di erent compatible ics multiple properties counts supplying ic 
de nition 
property carrying ic called sortal 
property carrying ic marked meta property 
property supplying ic marked meta property 
letter mnemonic identity 
de nitions obvious implies example person student carry identity supplies 
property red normally carry identity necessary su cient formula identify re identify red things simply red 
note red property trivially true instances red legitimate ic 

unity welty guarino data knowledge engineering previous extensively discussed formalized notion unity notion part 
formalization intuition exists division members connected 
assume axiomatization part relation shown table means proper improper part time brie de ne de nition 
object relation members certain division linked linked table axiomatization part relation adapted simons pp def proper part def overlap anti symmetry transitivity pp pp weak welty guarino data knowledge engineering de nition 
property carries unity condition exists single relation instance necessarily depending ontological nature relation understood generalized connection may distinguish main kinds unity concrete entities having spatio temporal location 
brie topological unity kind topological physical connection relationship parts piece coal apple 
morphological unity combination topological unity shape ball morphological relation wholes constellation 
functional unity combination kinds unity notion purpose artifacts functional relation wholes artifacts 
examples show prevents having parts wholes di erent uc 
foundation theory scope 
rigidity situations may important distinguish properties carry common uc instances properties instances necessarily wholes 
shall see example kind may legal agent instances wholes di erent ucs legal agents may people companies 
amount matter usually example kind instances wholes necessarily 
de ne de nition 
property anti unity instance property necessarily 
property carrying uc marked meta property 
property anti unity marked meta property course implies 
dependence nal meta property employ formal ontological tool notion dependence 
mentioned section focus ontological dependence applied properties 
formalization simons de nition notional dependence 
aware approximation general notion extrinsic relational property needed see instance 
de nition 
property externally dependent property instances necessarily instance exist part constituent part relation discussed section 
relation denote constitution 
constitution di ers subtly part refers substance entity 
castle bricks statue marble 
constitution usually relates concrete entities essential wholes collections masses 
constitution important notion grasp commonly confused subsumption 
discuss constitution rigor give examples section 
clearly discount parts constituents nearly properties denoting classes concrete entities dependent non atomic concrete entities parts constituted material 
addition excluding parts constituents rigorous de nition exclude qualities colors things necessarily exist universe cases subsumed dependent 
intuitively say example parent externally dependent child parent having child person externally dependent heart body person heart part constituted body 
externally dependent property marked meta property 

constraints assumptions rst observation descending immediately de nitions regards subsumption constraints 
properties constraints hold subsume subsume subsume subsume subsume properties incompatible ics ucs disjoint constraints follow directly meta property de nitions see discussion examples obvious discussion identity unity largely overlooked practical cases 
see section example shows practical constraints 
assumptions regarding identity adapted lowe sortal individuation 
domain element instantiate property carrying ic 
way satisfy quine dicto entity identity 
sortal 
entities instances di erent properties instances property carrying condition identity 

methodology welty guarino data knowledge engineering speci goal methodology modeling assumptions clear 
important ways methodology analyzing taxonomies form founded taxonomies discussed section 
methodology number formal analysis tools grouped distinct layers notions techniques layer welty guarino data knowledge engineering notions techniques layers 
fig 
methodology depicted layers support process person group conceptualization evolves concrete conceptual model 
section brie outline purpose layer tools followed brief discussion system support methodology 

layer foundations lowest foundational layer methodology meta properties described section 
discussed meta properties correspond axiom schemes modeling language properties meta language 
properties modeling language correspond constant symbols meta language 
proves important support system implements meta language 

second layer useful property kinds second layer methodology contains ontology useful property kinds originally 
formal ontology properties discussed distinguishes di erent kinds properties valid useful combinations meta properties discussed section 
shown table fig 

property kinds enrich modeler ability specify meaning properties ontology de nition property kind includes intuitive domain independent description kind property ontology 
table possible combinations meta properties welty guarino data knowledge engineering fig 

taxonomy properties 
discussed deciding identity criteria instances property subtle task requires training experience engaging discussion team members questions practice illuminating 
methodology requires knowing property ic system contains examples common kinds identity criteria ad hoc meta properties assist experienced modelers decisions 
example meta property designates countable property 
important specialization sortals 
cases carrying identity countable properties carry unity 
countable property subsume countable properties indicates instances counted 
example property water ordinarily countable count water lling cup property cup countable 
course imply property water identity property may non countable ic 

third layer ontology modeling principles third layer methodology contains notions backbone property stratification 
backbone taxonomy 
principal roles taxonomies impart structure ontology facilitate human understanding enable integration 
natural result analysis identi cation special properties taxonomy best ll role 
call properties backbone properties constitute backbone taxonomy 
backbone taxonomy consists rigid properties divided kinds discussed categories types quasi types 
categories subsumed kinds properties represent highest level general properties taxonomy 
usually taken primitive properties 
types critical analysis assumptions section instance instantiates properties 
backbone provides basic structure entire domain 
welty guarino data knowledge engineering notions give rise idealized view ontologies structured taxonomically shown fig 

strict adherence idealized structure may possible believe degree possible grow important design principle conceptual modeling pay understandability ease integration 
stratification 
important result analysis recognition multiple entities incompatible identity unity criteria usually entity conceived 
classical example statue clay count di erent objects analysis 
view results stratified ontology entities belong di erent levels depending unity identity assumptions properties carrying extensional ic 
certain properties discussed section concerning masses plural entities necessary identity condition parts members instances instances change parts 
example group people members change di erent group 
properties subsume properties ut properties carrying topological unity 
see section 
properties ut unity subsume properties ut addition properties normally dependent properties due constitution 
brick example constituted clay 
um 
properties carrying morphological unity 
see section 
properties um unity subsume properties um 
addition properties normally dependent properties ut due constitution 
garden path example may constituted non touching bricks scattered particular pattern 
uf 
properties carrying functional unity 
see section 
properties uf unity subsume properties uf 
addition properties normally dependent properties ut um due constitution 
castle example may constituted bricks function castle 
distinguish meta properties levels ontological strati cation physical level functional level addition types identity unity conditions conceived de ne biological level living things social level fig 

ideal taxonomy structure 
general property group subsumed property group 
tions entities higher levels constituted located entities lower levels 
properties level disjoint properties levels 
advantage view better semantic account taxonomic relation better account hidden ontological assumptions general better ontologies 
costs moderate proliferation constant factor corresponding number levels number entities domain necessity take account di erent relations dependence spatiotemporal localization constitution 

fourth layer top level ontology highest layer methodology top level ontology designed notions techniques layers 
steps layer methodology discussed 

question answer system captured notions techniques layers knowledgebased system guides conceptual modelers analysis process 
approach similar described fully section 
system implements meta language providing consistency checking constraints outlined section 
knowledge support methodology techniques requires assignment meta properties properties ontology performed hand 
analysis cases requires modeler clear property means 
developed support system help modelers analysis verify consistency taxonomy constraints described section 
modeler enters information properties conceptual model proposed taxonomic structure 
meta properties assigned consistency taxonomy checked automatically 
section describe aspects system section walk simple example system 

overview welty guarino data knowledge engineering system implements constraints inferences described previous sections meta language 
basic modes operation question answer mode batch mode 
intention modes system available online 
mode system designed assist modeler choosing appropriate properties asking series questions 
general questions asked rst property carry identity modeler may respond unsure 
unsure meta property speci questions asked instances property countable possible leave answers unknown course cases system verify correctness properties 
properties entered information far checked consistency inferences 
example modeler answers question assigns meta property system infer property modeler assigns welty guarino data knowledge engineering property asserts subsumed property system immediately raise appropriate error 
system implemented classic description logic system developed bell labs 
classic chosen mainly familiarity implementors rationale choice 
reasoning required metalanguage provided code needed 
classic description logic full explanation system implemented included making possible generate explanations constraint violations opposed simply saying violation 
total system meta property de nitions lisp code 
system works rst loading de nitions allowing add modify 
modeler may invoke system simply load batch le consisting properties tags 
example meta properties de ned fig 
example property speci cation batch mode 

reasoning reasoning required system fairly rudimentary description logic 
addition obvious implications property kind taxonomy shown fig 
type sortal rigid sortal system designed redundant information need speci ed making job modeler bit easier 
system uses open world assumption regarding meta properties properties modeler enters 
property assumed meta properties asserted modeler 
accomplish description logic framework provide possibility unknown answers binary truth valued logic possible meta property assignment represented concept 
example concept corresponding rigid meta property concepts non rigid anti rigid concepts shown fig 

opposite meta properties handled making corresponding concepts disjoint assert property rigid system knows non rigid 
anti rigid asserted subsumed non rigid property assigned known 
leave meta property unknown modeler basically answer questions property rigid property non rigid important keep mind properties modeler ontology constant symbols meta language modeler properties represented individuals system instantiated modeler enters names 
allowed relations generalization specialization relation name characteristic relation 
relation modeler asked values 
fig 

example meta property de nitions 
modeler properties individuals description logic provide special reasoning services subsumption 
classic provides automatic relation inverses asserting property specialization causes generalization inverse asserted 
addition generalization specialization relations individuals de ned transitive expected 
requires special machinery classic support transitivity easily accomplished standard way primitive version relation transitive version canonical parent ancestor relations prolog 
constraints obvious ones provided disjointness expressed necessary conditions concepts representing meta properties 
example constraint section represented necessary condition anti rigid properties anti rigid property anti rigid property generalization properties 
inference constraint checking done soon information available modeler 
explanation system provided classic particularly important batch mode modeler bene context having just answered question know inconsistency generated 

evaluation welty guarino data knowledge engineering system designed particularly usable evaluated dimensions ectiveness questions scalability 

scalability tested system randomly generated hierarchies nodes batch mode 
reasoning system performs trivial experimental results indicate dimensions complexity number properties number parents 
dimension complexity observed linear system performing reasoning fast batch les load 
combining dimensions large datasets multiple inheritance resulted polynomial increases 
concerned result arti cial data di cult generate experiences correspond real systems 
fact believe important result methodology drastic reduction multiple inheritance links properties 

ectiveness questions people done lot conceptual modeling aspects methodology sense 
fact methodology companies conceptual modeling integration projects document development 
main di culty applying understanding identity unity conditions apply properties domain 
attempted gather examples common identity unity criteria system designed incorporate additional information sub concepts existing meta property de nitions 
welty guarino data knowledge engineering modeler unsure particular meta property answers questions disjoint concepts represent system moves hierarchy concepts 
modeler sure meta property answers question system ask questions 

example section provide brief example way analysis 
complete version example available 
set properties arranged taxonomy shown fig 

table provide basic explanations intended meaning properties 
taxonomy chosen intuitive sense prima facie cases taxonomic pairs taken existing ontologies wordnet cyc :10.1.1.83.1823
see similar examples intuitive taxonomic orderings existing ontologies inconsistent analysis 
modeler making initial decisions meta properties taxonomy starts system 
brevity assume modeler enters rst properties batch mode system responds shown fig 

nal error indicates modeler wrong having amount matter subsume living general concept extensional unity living biological unity 
common modeling mistakes methodology reveal living beings amounts matter constituted matter 
constitution subsumption 
correction living subsumed directly entity 
modeler correction proceeds 
property red show interaction system fig 

interaction see modeler unsure property carries uc answering questions 
system fig 

messy taxonomy 
table meta properties assigned initial properties welty guarino data knowledge engineering property meta properties kind notes entity category entity location type generalized regions space 
locations mereological extensional ic uc way isolate location amount matter type mass sortal unstructured scattered stu clay bricks 
uc red formal attribution intended red thing 
common ic uc agent formal role active participant event 
agents common ic uc condition holds instances group type unstructured collections wholes note groups represents particular physical object type ontological choice modeler ignores mathematical sense groups isolated material objects 
ic spatial location topological uc living type ic dna necessary biological uc group people quasi type groups elements people 
group ic people change di erent group social entity category groups people brought social reason 
common ic 
uc social connection fruit type pieces fruit 
ic necessary plant shape 
topological uc food material role amounts edible stu 
dependent things eat food necessarily animal type ic brain 
biological uc legal agent material role legally recognized entities 
local ic common unity dependent legal body recognizes apple type ic necessary shape color skin pattern 
topological uc country phased sortal places recognized convention 
ic government regions 
countries countable uc 
place country exist red apple mixin inherits ic uc apple 
apple necessarily red caterpillar phased sortal ic spots cocoon 
biological uc entity anti rigid butter phased sortal ic wing pattern 
biological uc entity anti rigid vertebrate quasi type vertebrate animals 
biological classi cation adds membership conditions probably ic uc organization type groups people reason roles de ne structure 
ic mission necessary functional uc person type ic ngerprint su biological uc cient welty guarino data knowledge engineering fig 

sample output rst properties batch mode 
fig 

sample output red mode 
asks question regarding countability indicator unity 
modeler indicates instances red counted consider number red patches red carpet system concludes property carry unity 
gives avor systems works 
skip problematic property ontology 
modeler enters information physical object system raises error trying combine disjoint primitives uc prop non uc prop explanation amount matter subsume physical object welty guarino data knowledge engineering example constitution confused subsumption 
physical objects amounts matter constituted matter 
solution physical object subsumed directly entity 
problem occurs property animal declared subsumed agent trying combine disjoint primitives independent prop dependent prop explanation agent subsume animal di erent kind problem subsumption represent type restriction 
modeler intends mean animals agents animals agents 
common misuse subsumption object oriented programmers 
correct way represent kind relationship covering agent social entity animal 
clearly di erent notion subsumption 
solution remove subsumption link animal agent represent information 
modeler proceeds xing problems nished 
system uncovers errors regarding butterfly caterpillar country 
phased sortals require common subsuming property sortal principle added taxonomy 
original choice meta properties country reveals phased sortal requires phased sortal phase 
modeler forced justify decision realizes di erent properties country social entity country fig 
country location geo graphical region fig 

initial choice common misuse multiple inheritance representing multiple meanings word 
fig 

nal taxonomy highlighted backbone 
welty guarino data knowledge engineering nal corrected taxonomy shown fig 

detailed descriptions errors initial taxonomy solutions 
addition checking constraints performing simple inference system supports methodology simple procedures displaying useful slices ontology backbone taxonomy role taxonomy phased sortals phased sortals cause special consideration 
attempt describing wiggins analysis clari cation needed 
remains open issue 
real phased sortals appear rarely experience isolating checking correct useful practice 

discussed notions formal ontology ontological analysis philosophy identity unity essence dependence 
formalized notions way useful conceptual modeling introduced methodology ontological analysis founded formalizations 
methodology supported system helps conceptual modeler study deep ontological issues surrounding representation properties conceptual model shown methodology analyze individual taxonomic links taxonomy understandable 
particular shown identify backbone taxonomy represents important properties ontology subsume instance 
previous orts clarify taxonomies methodology di ers focuses nature properties involved subsumption relationships nature subsumption relation take granted 
founded formal notions drawn ontology discipline centuries older database design augmented practical conceptual design experience opposed founded solely 
focuses validation single subsumption relationships intended meaning arguments terms meta properties de ned opposed focusing structural similarities property descriptions 
important note examples providing way meaning properties certain conceptualization clear 
example mean claim person legal agent wrong 
trying point particular conceptualization legal agent certain meta properties anti rigid person certain rigid inconsistent person subsumed legal agent 
supported part eureka project italian national project cognitive la con arti research committee college 
claudio masolo giaretta alessandro bill andersen useful comments 
welty guarino data knowledge engineering bergamaschi taxonomic reasoning conceptual design acm transactions database systems 
brachman isn analysis taxonomic links semantic networks ieee computer 
brachman mcguinness patel schneider resnick borgida living classic kl language sowa ed principles semantic networks morgan kaufmann los altos ca pp 

calvanese lenzerini nardi description logics conceptual data modeling chomicki saake eds logics databases information systems kluwer dordrecht pp 

giaretta identity criteria sortal concepts welty smith eds formal ontology information systems acm press new york 
gangemi guarino masolo understanding top level ontological distinctions proceedings ijcai workshop ontologies information sharing 
goldstein storey data abstractions data knowledge engineering 
guarino carrara giaretta ontology meta level categories sandewall torasso eds principles knowledge representation reasoning proceedings fourth international conference kr morgan kaufmann san mateo ca pp 

guarino formal ontology information systems guarino ed formal ontology information systems 
proceedings fois trento italy june ios press amsterdam pp 

guarino role identity conditions ontology design proceedings ijcai workshop ontologies problem solving methods lessons learned trends 
stockholm sweden ijcai 
guarino welty identity unity individuality formal toolkit ontological analysis proceedings ecai european conference arti cial intelligence ios press berlin germany 
guarino welty formal ontology properties dieng ed proceedings th international conference knowledge engineering knowledge management springer verlag lncs berlin germany 
guarino welty ontological analysis taxonomic relations lander storey eds proceedings er international conference conceptual modeling vol 
springer verlag lncs berlin germany 
guarino welty ontology driven conceptual analysis aaai tutorial presentation 
austin texas notes available www cs edu faculty welty aaai 
guarino welty identity subsumption green ed semantic relations kluwer dordrecht 
hirst existence assumptions knowledge representation arti cial intelligence 
hughes cresswell new modal logic routledge london 
intrinsic extrinsic synthese 
kaplan consistent logical framework ontological analysis welty smith eds formal ontology information systems acm press new york 
knight luk building large knowledge base machine translation proceedings american association arti cial intelligence conference aaai 
seattle wa pp 

lenat guha building large knowledge systems addison wesley reading ma 
lewis new theory universals australasian journal philosophy 
lowe kinds 
study individuation identity logic sortal terms basil blackwell oxford 
miller wordnet lexical database english communications acm :10.1.1.83.1823
mccarthy circumscription form non monotonic reasoning arti cial intelligence 
quine ontological relativity essays columbia university press new york london 
simons parts study ontology clarendon press oxford 
storey understanding semantic relationships large databases journal 
storey dey sundaresan ontology expert system database design data knowledge engineering 
strawson individuals essay descriptive metaphysics routledge london new york 
wieringa de jonge roles dynamic subclasses modal logic approach proceedings european conference object oriented programming bologna 
wiggins sameness substance blackwell oxford 
welty guarino data knowledge engineering chris welty associate professor college consulted real world large small companies including ge ibm 
holds ph computer science rensselaer polytechnic institute 
editor chief intelligence magazine steering committee chair automated software engineering conferences acm distinguished lecturer program chair conference formal ontology information systems fois 
research interests include ontology ontological analysis ontologies information digital libraries software understanding general improving information retrieval representing knowledge 
nicola guarino senior research scientist institute system theory biomedical engineering italian national research council ladseb cnr 
years actively promoting study ontological foundations knowledge representation knowledge engineering interdisciplinary approach centered logic philosophy linguistics 
chairman international conference formal ontology information systems fois associate editor international journal human computer studies edited journal special issues ontology related topics published papers international journals books conferences 
research activities regard ontology design conceptual modelling knowledge sharing integration logical modeling physical objects ontology driven information retrieval 
