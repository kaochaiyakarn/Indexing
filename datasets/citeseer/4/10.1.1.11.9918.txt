distributed unsupervised learning machine giuseppe marco russo institute computer science telecommunications faculty engineering university catania viale catania italy infn section catania corso italia catania italy mail ai department physics university messina messina italy infn section catania corso italia catania italy mail marco russo ct infn marco russo department physics university messina messina italy mail marco russo ct infn distributed unsupervised learning machine unsupervised learning means techniques successfully employed application elds 
training set number vectors increases computational ort prohibitive computers 
illustrates parallelization clustering techniques machine commodity supercomputer built university messina 
particular management policy machine implementation techniques shown interesting results speedup increases complexity problem solved 
key words unsupervised learning vector quantization clustering parallel multicomputers 
clustering important family algorithms widely employed scienti disciplines lot successful applications 
radial basis function networks pattern recognition computer vision classi cation tasks 
papers demonstrate cases clustering equivalent vector quantization vq technique employed telecommunications signal compression 
reason remainder term unsupervised learning ul indicate approaches 
symbology terminology typical vq 
algorithms means clustering technique 
useful family algorithms fuzzy hard generally speaking require hardware resources 
deal large codebooks large training sets 
cases necessary powerful computers multiprocessor ones 
know kinds machines generally expensive 
intermediate choice multicomputers 
particular solution spreading fast consists commodity supercomputers 
deals parallelization standard means algorithm known lbg algorithm enhancement elbg algorithm machine 
name cheap powerful farm personal computers pcs implemented university messina 
literature nd parallel algorithms clustering treated di erent way 
example proposed genetic algorithm clustering 
sun sparc stations simple iris problem obtained speedup 
ancona described parallel implementation nns vector quantization 
toroidal mesh architecture composed transputers family inter transputer links mbit reached speedup ranged 
divided di erent parts 
rst part authors go detail regarding management machine 
policy adopted permits fast increase number processing elements pes number pcs 
completely centralized administration system particular care taken order minimize network bandwidth required normal operative conditions 
similar machines exist world centralized administration quota interconnection network bandwidth needed sharing le system 
aspect important machines total bandwidth low 
generally interconnection network multicomputers bottleneck implemented distributed algorithms utilization directly ects maximum value achievable speedup 
second part manuscript authors describe implementation parallel version lbg elbg algorithms 
methodology adopted behaves poorly case simple clustering problems 
lack true broadcasting function communication system worse 
number required computations grows making clustering task complex results encouraging speedup signi cantly increases 
means commodity supercomputers suitable complex unsupervised problems 
machine hardware organization machine see fig 
cluster pcs linux os 
consists processing elements pes hosts server duplicated redundancy acting gateway external lan 
pes mono processor machines pentium ii mhz called celeron mhz 
endowed mb ram hard disk ranging gbytes fast ethernet network card 
server server bi processor computer pentium ii mhz network cards server mono processor pentium ii mhz 
pes interconnected dedicated fast ethernet network share bus 
physical connections realized means port hubs distributed levels shown fig 

electrical topology hosts placed bus 
highest level hub connected switch servers directly connected 
inter process communication realized parallel virtual machine pentium machine employed applications regarding genetic programming described www 
com machine html pvm software allows user see computers large single virtual machine process task pvm nomenclature unique identi er task identi er tid inside virtual machine 
pvm uses transport functionality provided tcp udp ip directly implemented inside kernel linux 
pvm graphic tool named employed allows visualization diagram activity tasks versus time 
useful debugging testing parallel algorithms 
allows distributed algorithms described shown 
management management system high number hosts sharing con guration authors thought suitable pursue centralized policy allowing administrator quickly modify con guration system having operate single machine 
system expands want able quickly set new machines 
rst solution considered realization system similar described 
hosts disk machines remote boot network file system nfs employed 
way host shared le system physically stored server hosts 
files shared stored server kept distinct directories host 
les containing information related identi cation status single host peripherals processes running 
di erent reason shared 
policy allows quick update system modi cation ected shared portion le system host automatically immediately regards hosts 
hand changes regarding unshared portions frequent 
centralized solution adopted consider main problems 
rst concerns access nfs slower local le system 
second arises increase network trac consequent signi cant reduction bandwidth available inter process communication 
basis considerations authors apparently opposite requirements centralization information order simplify available free www netlib org pvm section protocols management system nfs nis dhcp cited 
authors suggest visit www linux org docs index html useful theoretical practical details topic 
management system maximization performances saving bandwidth completely disposal inter process communication 
solution chosen hybrid centralized local management 
normal conditions working hosts le system stored local disk 
copy le system physically stored server 
downloaded hosts completely automatic way 
operation downloading necessary modi cations failures hosts occur 
need take care con guration machines server host 
fact generic host con gured upgraded le system transferred server automatically downloaded hosts 
describing greater detail policy adopted management system important point terminology employed host operate modalities managing 
rst installation failure occurs 
service 
update hosts 
operative 
normal modality working 
host enters certain modality boots 
necessary change modality con guration modi ed reboot enters desired modality 
host operate modality console keyboard monitor mouse 
server console 
modalities transitions modality represented means finite state machine fsm reported fig 

signals host change remain state start rst installation host 
indicates new pe physically logically added system existing pe recon gured ex novo failure 
power failure pf reboot represents normal reboot host sync force host download server version le system related operative modality host failure hf indicates host working correctly 
operations ected modality transition modality occurs detailed 
operative modality 
modality host normally op 
boots works local operative le system hosts 
information related host identi cation network name ip address di ers 
data physically stored host server communicates host boots means protocol dhcp 
host works local le system auditing user accounts ected server nis protocol 
home directories users shared means nfs 
users personal local directory host choose shared local directory 
host state reboot power failure occur reboots remains state 
signal sync raised host modi es con guration reboots service modality 
service modality 
transitory modality 
hosts download le system operative modality server 
state kernel mounts reduced le system identical hosts previously downloaded server exactly happens operative le system 
case information identifying host network assigned server boot phase 
service le system contains les necessary host download operative le system server store local disk 
power failures generic failures occur host modi es con guration reboots operative modality 
operations executed automatically 
power failure occurs host reboots service modality generic failure occurs rebooted managing modality inserting proper disk 
managing modality 
host operates modality able local disk disk machine 
les necessary ect remote booting stored disk 
kernel loaded host mounts lesystem related modality nfs 
point operations relating initialization local disk partitioning formatting necessary hold service operative le system executed 
service le system downloaded server con guration modi ed host reboot service modality 
reboot gets hosts service modality failures occur automatically enters operative modality 
power failure generic failure occur host reboots managing modality 
updating system previous subsection modalities host system operate described 
procedures related updating explained 
necessary example program upgraded installed ex novo 
modi cations host working operative modality 
operative le system compressed transferred server 
raise sync signal hosts reboot service modality 
previously described download version operative le system server nish reboot operative modality 
easily transfer changes single machine system completely automatic way remember possible hosts mount le system nfs previously said system slowly consume transmission bandwidth 
method proposed allows automatically update system overloading network works normal operative modality 
vector quantization vq de nitions 
vector quantizer function represents set feature vectors set fy vectors called codebook elements codewords 
vectors called input patterns input vectors 
previous de nitions obtain partition constituted subsets called cells fx nc quantization error qe value assumed generic distance operator vectors 
performance vector quantizer mean qe 
functions adopted distortion measures 
widely adopted euclidean distance 
input data sets constituted nite number dimensional vectors considered 
lbg 
lbg proposed linde gray original name generalized lloyd algorithm gla extended lloyd technique mono dimensional cases 
name lbg comes initials authors 
algorithm iteration generates quantizer equal previous 
obtained process optimization best partition codebook best codebook partition alternatively obtained 
techniques calculating initial codebook exist interested phase 
assume random choice initial codewords starting algorithm 
lbg summarized follows initial codebook codebook best partition calculated voronoi partition 
obtained assigning pattern nearest codeword termination condition check current quantizer compared previous iteration 
decreases pre xed threshold algorithm ends continues partition calculated point best codebook calculated 
elements geometrical cells demonstrated optimal choice euclidean distance adopted distortion measure 
return step 
enhanced lbg elbg 
authors tried explain lbg su ers problem local minima deriving bad initialization codebook 
illustrated technique employed solve problem 
consists pursuit equalization total distortions introduced cell 
total distortion cell sum vectors belonging 
operations executed try obtain equalization stochastic process selecting cells split joined 
executed inside step called elbg block placed points lbg 
reason algorithm called elbg 
interested reader see 
parallelization section implementation parallel versions lbg elbg described 
authors saw overhead introduced traditional lbg execution elbg block quite low 
pro ling executed software written implement lbg allowed see calculation time spent determine voronoi partition point lbg algorithm 
precisely time spent calculate distance input pattern codewords order choose nearest 
focused parallelization operation trying share load hosts 
authors describe parallel implementation lbg parallel version elbg identical lbg addition elbg block 
lbg previously said calculation voronoi partition input pattern assigned nearest codeword 
done comparing input vector codewords means distance euclidean case dimensional vectors calculated nc times 
processors disposal launch processor process task pvm nomenclature executes np nc distance calculations 
practice task keeps memory di erent portion input patterns codebook 
nd nearest codeword portion input patterns assigned 
equal hosts master slave policy adopted 
iteration master calculates slaves voronoi partition collects results nally calculates new codebook 
new iteration new codebook distributed broadcast slaves 
fig 
screen shot taken 
reports part diagram tasks activity versus time 
refers run parallel lbg hosts input data set dimensional vectors codebook elements 
input data set obtained image lena pixels grey levels 
divided blocks pixels way dimensional vectors generated 
gure illustrates periods activity inactivity tasks exchange messages overhead introduced transmission 
graphic tracing broadcast messages algorithm messages relating transmission codebook master slaves 
scale times divided parts labeled operations executed summarized follows 
preliminary phase 
master spawns slaves waits start correctly 
distribution input data set 
phase master distributes just slave portion input patterns pvm provides function sending data broadcast tasks real broadcast function implemented sending copy data tasks time 
calculate nearest codeword 
voronoi partition calculation 
heart parallel algorithm 
rst operation phase distribution broadcast codebook master slaves 
see graphic tracing broadcast message see considered example transmission codebook introduces negligible delay respect phase 
fact carefully looking segments labeled see slaves practically start working phase 
true rst iteration segment picture see delay consequence messages transmitted phase occupying network 
phase ends master completes calculation quota voronoi partition 
collection results slaves calculation new codebook 
critical part parallelization fact execution master works slaves sent results wait new codebook master 
opportune try minimize duration 
tests algorithm ected change results analyzed graphic ones numerical ones pro ling master 
concluded implementation parallel lbg machine better minimize information transmitted network case loading master calculation euclidean distance 
calculated master phase determines portion voronoi partition 
considerations information transmitted slave master constituted pattern index nearest codeword qe related 
slave sends results completes calculation portion voronoi partition 
values collected master able calculate total distortion new codebook 
master calculate new codebook data received 
order minimize periods inactivity operates follows checks results slave received executes operations execute data checks results receives 
pro ling master ected authors saw time employs calculate new codebook results collected considered negligible 
fig 
refers input data set employed example fig 
case nc 
see periods inactivity tasks increase increases 
due greater quantity data transmitted network 
reaches certain value adding processors produce bene speed saturates 
elbg previously said implementation parallel elbg substantially identical implementation lbg addition elbg block 
executed serial mode master 
fig 
reports part diagram activity tasks versus time case elbg 
problem considered fig 
lbg 
meaning segments fig 
di erence case inside phase new codebook calculation master executes elbg block 
order visualize greater number iterations fig 
di erent scale axis times respect fig 
chosen 
take time computing slaves iteration lbg elbg 
rst di erence notice figs 
periods inactivity slaves longer 
attributed execution elbg block master operation segments longer lbg 
authors veri ed periods inactivity reduced complexity problem increases 
cases analyzed increase complexity consists increase nc xed 
see fig 
length segments xed elbg block computing time deterministic calculation voronoi partition 
di erence diagrams authors opinion pair pvm tcp ip related segments 
lbg elbg transmit new codebook slaves dimensions codebook cases quantity data send network 
time required transmission negligible fig 
fig 

runs repeated times result change 
authors opinion derive di erent behaviour pair pvm tcp ip situations examined 
consequence elbg period inactivity master segments longer lbg 
results section performances parallel lbg elbg terms speedups reported 
performances terms nal number iterations required convergence identical ones obtained corresponding serial versions 
subject comparisons existing techniques hard fuzzy means competitive learning reported 
comparisons elbg obtained results better equal considered techniques regards nal number required iterations 
di erence favour elbg increases complexity clustering problem increases nal elbg obtains practically independent initial conditions 
reporting numeric values related considerations validity results obtained regarding times calculation worthwhile 
lbg deterministic algorithm initial codebook xed develops way 
deterministic behaviour followed serial parallel implementation lbg 
utilization fast ethernet network management deterministic produced slightly variable results 
regarding elbg consider non deterministic behaviour elbg block 
order allowance factors results mean value runs 
tab 
performances lbg elbg reported terms time required iteration input data set adopted previous section 
considerations regarding results follow 
see examined cases lbg presents higher value elbg 
obvious serial execution elbg block master time activity slaves lbg 
number processors equal generally increases complexity problem increases 
case complexity determined dimensions codebook nc input data set xed 
trend justi ed decrease time inactivity slaves 
cases trend inverted 
example look lbg change nc nc nc nc nc nc 
authors saw behaviour derives increase overhead transmission codebook master slaves 
nc xed increases saturates 
occurs increase periods inactivity slaves practice contribution algorithm longer increases 
lbg elbg nc increases saturation occurs higher values case trend parallel algorithms considered perform better high complexity problems 
developments preliminary study regarding parallelization algorithms unsupervised learning machine commodity supercomputer 
particular techniques vq analyzed lbg elbg 
see points calculation voronoi partition easy implement system described improved 
regarding elbg authors thinking developing new version elbg block executed parallel hosts order increase speed algorithm 
improvement bene ts interest lbg elbg introduced inter process communication utilization real broadcast function 
fact current implementation algorithms broadcast transmission codebook master slaves ected pvm simply sending copy data time 
policy broadcasting speed tends decrease number pes increases lot 
number pes considered behaviour take place 
function real broadcast provided udp fast ethernet network master transmit codebook network just iteration slaves read time making speed higher 
improvement regards possibility eciently distributed system pes processors di erent speed types machine conditional fuzzy clustering design radial basis function neural networks ieee transaction neural networks vol 
pp 
july 
fukunaga statistical pattern recognition 
oval road london nw dx academic press limited second ed 
meer robust clustering applications computer vision ieee transactions pattern analysis machine intelligence vol 
pp 
aug 
pal bezdek sequential competitive learning fuzzy means clustering algorithms neural networks vol 
pp 

cherkassky learning data concepts theory methods 
john wiley sons 
jain duin mao statistical pattern recognition review ieee transactions pattern analysis machine intelligence vol 
pp 

paliwal atal ecient vector quantization lpc parameters bits frame ieee transactions speech audio processing vol 
pp 

gray vetterli vector quantization image subbands survey ieee transactions image processing vol 
pp 

mcqueen methods classi cation analysis multivariate observations proceedings fifth berkeley symposium mathematical statistics probability pp 

linde gray algorithm vector quantizer design ieee transaction communications vol 
pp 
jan 
bezdek pattern recognition fuzzy objective function algorithms new york plenum 
lee sung modi ed means algorithm vector quantizer design ieee signal processing letters vol 
pp 
jan 
russo improving lbg algorithm proc 
mira anchez andr es eds vol 
lecture notes computer science barcelona spain pp 
springer june 
russo comparisons fuzzy hard clustering techniques proceedings wilf june 
press 
russo enhanced lbg algorithm neural networks press 
russo elbg implementation international journal knowledge intelligent engineering systems press 
jain chung clustering coarse grained parallel genetic algorithm preliminary study ieee proc 
computer machine perception 
anderson irises bull 
amer 
iris soc vol 
pp 

ancona parallel architectures vector quantization proc 
ieee int 
conf 
neural networks vol 
texas houston pp 
june 
bennet iii koza shipman sti elman building parallel computer system performs half flop day proceedings genetic evolutionary computation conference gecco 
lloyd squares quantization pcm bell telephone laboratories murray hill 
munson jr note lena ieee transactions image processing vol 
jan 
optimal adaptive means algorithm dynamic learning rate ieee transaction neural networks vol 
pp 
jan 
fritzke lbg method vector quantization improvement lbg inspired neural network neural processing letters vol 
pp 

pin pai fuzzy algorithms learning vector quantization ieee transaction neural networks vol 
pp 
sept 
list tables speed lbg elbg list figures structural machine fsm describing os organization machine task vs time diagram lbg nc 
scale times iteration task vs time diagram lbg 
scale times iteration task vs time diagram elbg 
scale times iteration lbg elbg nc 

table speed lbg elbg switch hub hub hub hub host server server host 
external lan fig 

structural machine managing service operative pf pf reboot pf start reboot sync reboot hf fig 

fsm describing os organization machine fig 

task vs time diagram lbg nc 
scale times iteration fig 

task vs time diagram lbg nc 
scale times iteration fig 

task vs time diagram elbg nc 
scale times iteration 
