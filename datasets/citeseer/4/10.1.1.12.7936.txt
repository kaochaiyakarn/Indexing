integrity change modular ontologies benefits modular representations known areas computer science 
concentrate benefits modular ontologies respect local containment terminological reasoning 
define architecture modular ontologies supports local reasoning compiling implied subsumption relations 
address problem guaranteeing integrity modular ontology presence local changes 
propose strategy analyzing changes guiding process updating compiled information 
currently research area semantic web state ontologies ready applied real applications semantic web portals information retrieval information integration 
order lower effort building ontology applications clear need representational computational infrastructure terms general purpose tools building storing accessing ontologies 
number tools developed ontology editors reasoning systems storage query systems 
tools treat ontologies monolithic entities provide little support specifying storing accessing ontologies modular manner 
modularization reasons thinking ontology modularization 
mainly driven arguments 
bias solution propose aimed improving current situation respect aspects 
distributed systems highly distributed systems semantic web modularity naturally exists terms physical location 
providing interfaces mechanisms extensive overview provided deliverable available www org download deliverables zip 
heiner stuckenschmidt michel klein vrije universiteit amsterdam de boelelaan hv amsterdam heiner michel klein cs vu nl connecting natural modules prerequisite easy maintenance heflin hendler 
large ontologies modularization helps manage large ontologies find example medicine biology 
modularity helps maintain reuse parts ontology smaller modules easier handle complete ontology rector 
efficient reasoning specific problem occurs case distributed large models problem efficient reasoning 
modules local semantics clear interfaces help develop efficient reasoning methods mcilraith amir 
requirements couple requirements modular ontology architecture fulfill order improve ontology maintenance reasoning way suggested 
requirements main guidelines design solution proposed 
loose coupling general assume ontology modules common 
refers conceptualization specific logical language interpretation objects concepts relations 
self containment order facilitate reuse individual modules sure modules selfcontained 
especially result certain reasoning tasks subsumption query answering single module possible having access modules 
integrity having self contained ontology modules may lead inconsistencies arise changes ontology modules 
provide mechanisms checking relevant knowledge systems changed updating modules accordingly 
approach describe approach ontology modularization level 
emphasize main design decisions motivate basis requirements defined 
technical details approach sections 
view mappings adopt approach viewbased information integration 
particular ontology modules connected conjunctive queries 
way connecting modules expressive simple mappings concept names expressive logical language describe concepts 
decide sacrifice higher expressiveness sake conceptual simplicity desirable semantic properties independence ontology langauge 
compilation implied knowledge order local reasoning independent modules knowledge compilation approach 
idea compute result mapping query line add result axiom ontology module result 
reasoning axioms replace query enabling local reasoning 
change detection automatic update query compiled correctness reasoning guaranteed long concept hierarchy queried ontology module change 
order decide compiled axiom valid propose change detection mechanism taxonomy ontological changes impact concept hierarchy 
rest organized follows 
section provide definition ontology modules minimal notion ontologies fixes important properties leaving freedom specific implementations possible 
section introduces approach self containment terms compiled knowledge 
remainder devoted problem detecting changes preserving integrity modules system 
modular ontologies start investigating problem change integrity define notion modular ontology basis technical results 
modules queries number languages encoding ontologies web proposed see gomez perez corcho overview 
order get general notion ontological knowledge define general structure ontological module instantiation independent concrete language 
definition ontology module module triple set concept definitions set relation definitions set object definitions 
define signature module triple cn rn cn set names concepts defined rn set relation names set object names occurring queries ontological knowledge defined conjunctive queries conjuncts predicates correspond concepts relations ontology 
variables query may instantiated objects ontology 
definition ontology queries set variables disjoint ontology query module expressions form qm qi query terms form cn rn form fact conjuncts relate elements ontology allows determine answer ontology queries terms instantiations query logical consequences knowledge base 
internal external definitions notion module query quite standard ones 
modular ontology possibility ontology queries order define concepts module terms query module 
purpose divide set concepts module internally defined concepts ci externally defined concepts ce resulting definition ci ce ci ce internally defined concepts specified concept expressions spirit description logics baader 
require particular logic 
definition internal concept definition internal concept definition axiom forms cn concept expression form tn terms ti concept names concept expressions ary concept building operator 
standard way defining concepts consider externally defined concepts assumed equivalent result query posed module modular ontology 
way connecting modules spirit view information integration standard technique area database systems halevy 
choice conjunctive queries connecting different modules motivated trade expressiveness mapping conceptual computational simplicity 
approach expressive simple mappings having complex mappings contradict principle loose coupling different modules 
definition external concept definition external concept definition axiom form module ontology query signature modular ontology simply defined set modules connected external concept definitions 
particular require external definitions contained modular system 
note may include data type expressions type considered concept actual value member concept comparison operator special relation 
definition modular ontology modular ontology mm set modules externally defined concept mi mi member notion modular ontology investigate problem integrity logical reasoning modules 
semantics logical consequence define model semantics modular ontologies notion distributed interpretation proposed borgida serafini context distributed description logics definition distributed interpretation distributed interpretation index modular ontology consists interpretations individual module mi domains concept definitions ci relation definition ri object definitions oi function associating pair indices binary relation rij rij denotes set rij rij denotes rij 
assumption disjoint interpretation domains reflects principle loose coupling underlying approach 
notion distributed interpretation define model modular ontology interpretation satisfies constraints imposed internal external concept definitions 
contrast borgida serafini introduce special operators defining relations different domains interpret external concept definitions constraints relation domains definition logical consequence distributed interpretation model modular ontology module mi concept definition mi defined follows 
iff iff mj iff rji 
denotes interpretation set answers query axiom logically follows set axioms implies model 
denote fact actual definitions concepts impose constraints interpretation modular ontology 
case internally defined concepts constraints provided definition concept building operators description logics 
case externally defined concepts situation complicated discussed details section 
compilation local reasoning notion logical consequence defined turn attention issue reasoning modular ontologies 
sake simplicity consider interaction modules order clarify basic principles 
assume modules contains externally defined concepts terms queries module 
implied subsumption mentioned interested possibility performing local reasoning 
case ontological reasoning focus task deriving implied subsumption relations concepts single module 
case internally defined concepts done established reasoning methods donini 
externally defined concepts cause problems defined terms query module local reasoning procedure fail recognize implied subsumption relation concepts 
consequently subsumption externally defined concepts requires reasoning external module theorem shows 
theorem implied subsumption concepts module mi externally defined module mj queries 
proof rji rji result implies necessity decide subsumption conjunctive queries order identify implied subsumption relations externally defined concepts 
order decide subsumption queries translate internally defined concepts module refer 
corresponding sound complete translation described horrocks tessaris 
resulting concept definition refer query concepts decide subsumption externally defined concepts local reasoning external ontology 
compilation integrity avoid need perform reasoning external modules time perform reasoning local module idea knowledge compilation cadoli donini 
idea compilation perform external reasoning add derived subsumption relations axioms local module 
new axioms reasoning external definitions concepts 
set additional axioms computed algorithm 
want compiled axioms external definitions sure invalidate correctness reasoning results 
call situation compiled results correct integrity 
formally define integrity follows algorithm compile require module ci ce require external module mj cj rj oj mj ce cj return definition integrity consider integrity ontology modules mj mj result replacing set external concept definitions compile mj 
time applying compilation guaranteed theorem integrity guaranteed complete life cycle modular ontology 
problem changes external ontology module invalidate compiled subsumption relationships 
case perform update compiled knowledge 
change robustness principle testing integrity costly requires reasoning external ontology 
order avoid propose heuristic change detection procedure analyzes changes respect impact compiled subsumption relations 
determining impact changes ontology reported heflin hendler 
goal determine changes external ontology invalidates compiled knowledge analyze actual impact changes individual concept definitions 
want classify changes harmless harmful respect compiled knowledge 
determining harmless changes compiled knowledge reflects subsumption relations query concepts harmless change set modifications ontology change subsumption relations 
finding harmless changes matter deciding modifications affect subsumption relation query concepts 
look effect set modifications individual concepts assuming represents concept consideration concept change ways old version may relate new version 
meaning concept changed change part ontology syntactical 
meaning concept changed way concept general 
meaning concept changed way concept specific 
meaning concept changed way subsumption relationship observations relation change denoted respectively 
question different types changes influences interpretation query concepts 
take advantage fact tight relation changes concepts external ontology implied changes query concepts concepts lemma monotonicity effect set concept names set relation names occurring query changing impact interpretation interpretation particular query interpreted changing analogously change effect complete query 
proof sketch idea proof queries contain conjuncts form 
conjuncts form interpreted 
directly follows changing interpretation concept referred conjunct type leads change interpretation conjunct conjunction interpreted set intersection query 
conjuncts second type interpreted 
variable constraint conjunct type 
changes interpretation concept restricts effect possible interpretations interpretation conjuncts second type 
argument see making general specific allowing tuples relation conjuncts second form general specific 
basic proof lemma induction lengths path dependency graph query nodes represent conjuncts arcs occurrence variables 
exploit relation interpretation concepts queries order identify effect changes external ontology subsumption relations different query concepts 
result directly generalizes multiple changes effect query general specific stays elements specific general 
subsumption relation query concepts change general specific query general specific stay 
combining observations derive characterization harmless change 
theorem harmless change change harmless respect compiled knowledge compiled subsumption relations ci defined query qi proof assume 
applying lemma respect derive 
assume 
lemma get 
leads 
theorem established transitivity subsumption relation 
theorem provides correct incomplete method deciding change harmless 
basic method refined analyzing overlap combination relations restrict 
accurate method topic relies idea theorem 
characterizing changes able determine consequence changes concept hierarchy integrity mapping need know effect specific modifications interpretation concepts general specific 
goal determine integrity mappings having classification describe theoretically happen concept result modification ontology 
listed possible change operations ontology owl lite knowledge model style done banerjee 
list operations extendable knowledge models chosen model simplicity expected important role semantic web 
apart atomic change operations ontology add range restriction delete subclass relation list contains complex change operations consist multiple atomic operations incorporate additional knowledge 
complex changes useful specify effects basic changes 
example operations concept moved domain enlarged specify effect accurately atomic operations subclass relation changed domain modified atomic changes detected knowledge ontology knowledge knowledge model language 
changes detected structural level 
identify complex changes need content ontology 
currently working rules heuristics distill complex changes sets atomic changes klein noy 
table contains examples operations effect classification concepts 
table shows examples full ontology change operations contains operations 
number growing new complex changes defined 
snapshot change ontology online 
specification effects complete sense describes worst case scenario operations effect unknown unpredictable 
contrast franconi provides complete semantics changes prefer heuristics order avoid expensive reasoning impact changes 
seehttp www org tr owl features 
complete list see wonderweb man ac 
uk deliverables shtml 
org changes operation effect attach relation concept specialized complex change superclass concept concept lower hierarchy specialized complex restrict range relation specialized effect restriction specialized remove superclass relation concept generalized change concept definition primitive defined generalized add concept definition unknown complex add specified subclass effect define relation functional specialized table modification ontology effects classification concepts hierarchy 
update management elements described section complete procedure determine compiled knowledge modules valid external ontology changed 
complete procedure follows 
create list concepts relations part subsuming query compiled axiom 
create list concepts relations part subsumed query compiled axiom 
achieve modifications performed external ontology 
modifications determine effect interpretation concept relations 

check concepts relations subsuming list specific concepts relations second subsumed list general concepts relations lists unknown effect integrity mapping preserved 
algorithm update require ontology module require ontology module mj compiled axioms effect generalized unknown compile mj effect specialized unknown compile mj describe procedure structured way algorithm 
algorithm triggers re compilation step require order resume integrity 
action taken previously compiled knowledge valid 
steps automated 
tool helps automate step described klein 
tool compare versions ontology derive list change operations necessary transform 
able detect complex operations 
tool annotate definitions ontology effect change place hierarchy 
growing need applying principle modularity representations ontological knowledge order facilitate creation maintenance re knowledge 
contributes development theory modular ontologies focussing issue reasoning modular ontologies change time 
contributions fold 
propose architecture modular ontologies analyze role mappings logical reasoning modules 

describe knowledge compilation approach local reasoning modules possible define notion integrity 

develop update strategy preserves integrity identifying changes ontology modules deciding compiled knowledge updated 
think approach described meets practical needs creating ontologies missing formal underpinning 
uses established representations ontological knowledge simple intuitive representation mappings 
supporting methods described automated order assist ontology engineers developers ontology systems 
deliberately chose simplifications order able develop concise methods 
simplifications concern restriction system modules weak heuristic determining effect changes compiled knowledge 
investigate impact simplifications try develop complete theory interaction complex systems modules impact changes derived knowledge 
imagine external definition relations conjunctive queries free variable reducing implied subsumption general problem query containment constraints calvanese 
baader baader calvanese nardi patel schneider editors 
description logic handbook theory implementation applications 
cambridge university press 
banerjee jay banerjee won kim kim henry korth 
semantics implementation schema evolution object oriented databases 
sigmod record proc 
conf 
management data may 
borgida serafini borgida serafini 
distributed description logics directed domain correspondences federated information sources 
proceedings conference cooperative information systems 
cadoli donini cadoli donini 
survey knowledge compilation 
ai communications 
calvanese diego calvanese giuseppe de giacomo maurizio lenzerini 
decidability query containment constraints 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
donini donini lenzerini nardi schaerf 
reasoning description logics 
gerhard brewka editor principles knowledge representation pages 
csli publications 
franconi enrico franconi fabio 
semantic approach schema evolution versioning object oriented databases 
computational logic number lecture notes computer science pages 
gomez perez corcho gomez perez corcho 
ontology semantic web 
ieee intelligent systems january february 
halevy halevy 
answering queries views survey 
vldb journal 
heflin hendler jeff heflin james hendler 
dynamic ontologies web 
proceedings seventeenth national conference artificial intelligence aaai pages 
aaai mit press menlo park ca 
horrocks tessaris horrocks tessaris 
conjunctive query language description logic aboxes 
aaai iaai pages 
klein noy michel klein noy 
component framework ontology evolution 
technical report ir department computer science vrije universiteit amsterdam march 
klein michel klein kiryakov dieter fensel 
ontology versioning change detection web 
th international conference knowledge engineering knowledge management ekaw sig spain october 
mcilraith amir mcilraith amir 
theorem proving structured theories 
nebel editor proceedings ijcai pages san mateo august 
morgan kaufmann 
rector rector 
modularisation domain ontologies implemented description logics related formalisms including owl 
proceedings th international flairs conference 
aaai 
