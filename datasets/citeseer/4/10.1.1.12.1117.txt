semi automatic composition web services semantic descriptions sirin james hendler parsia university maryland computer science department college park md usa cs umd edu university maryland mind lab baltimore ave college park md usa hendler cs umd edu isr umd edu 
web services prevalent tools needed help users find filter integrate services 
composing existing services obtain new functionality prove essential business business business consumer applications 
developed prototype guides user dynamic composition web services 
semi automatic process includes presenting matching services user step composition filtering possibilities semantic descriptions services 
generated composition directly executable wsdl grounding services 
tested system generating semantic descriptions common services available web translator dictionary map services 
applied approach prototype sensor network environment sensor provides data network service 
web services designed provide interoperability diverse applications 
platform language independent interfaces web services allow easy integration heterogenous systems 
web languages universal description discovery integration uddi web services description language wsdl simple object access protocol soap define standards service discovery description messaging protocols 
web service standards deal dynamic composition existing services 
new industry initiatives address issue business process execution language web services bpel ws focus representing compositions flow process bindings services known priori 
challenging problem compose services dynamically demand 
particular functionality realized existing services required existing services combined fulfill request 
dynamic composition services requires location services capabilities recognition services matched create composition described 
full automation process object ongoing research activity accomplishing goal human controller decision mechanism achieved 
main problem goal gap concepts people data computers interpret 
overcome barrier semantic web technologies 
semantic web extension current web information defined meaning better enabling computers people cooperation 
realized marking web content properties relations reasonably expressive markup language defined semantics 
web ontology language owl forthcoming specification language supersede earlier darpa agent markup language daml oil 
owl extension xml resource description framework rdf enabling creation ontologies domain instantiation ontologies description resources 
daml services language daml set language features arranged ontologies establish framework web services may described semantic web context 
uses owl daml provide semantics needed service filtering composition 
remainder organized follows explain examples web service composition problems address section describe semantic service descriptions examples 
section describes details prototype algorithms service composition 
section talks related conclude section discussion possible enhancements system 
motivating examples focuses composition web services previously annotated semantics discovered system 
example composition suppose web services line language translator dictionary service translates text language pairs second returns meanings english words 
user needs service satisfy requirement 
input translated french english fed english dictionary translated back french 
dynamic composition services difficult just wsdl descriptions description designate strings input output necessary concept combining input strings name languages strings representing user inputs translator outputs 
provide semantic concepts language french ontologies provided semantic web 
service composition linking web semantic web concepts services provided network environments 
example sensor network environment includes types services basic sensor services sensor processing services 
sensor related web service returns sensor data output 
sensor processing services combine data coming different sensors way produce new output 
sensors properties describe capabilities sensitivity range non functional attributes name location attributes taken tell sensor service relevant specific task 
example task environment involve retrieving data sensors relevant fusion services process soap calls 
example data acoustic infrared sensors combined applying filters special functions data may identify objects environment 
setting need describe services available combining sensors attributes sensors relevant services 
importantly user needs flexible mechanism filtering sensor services combining realistically fused example set representing particular geographic area shown latitude longitude box 
creating semantic service descriptions daml partitions semantic description web service components service profile process model grounding 
serviceprofile describes service specifying input output types preconditions effects 
process model describes service works service atomicprocess executed directly combination subprocesses 
grounding contains details agent access service specifying communications protocol parameters protocol serialization techniques employed communication 
similarities daml technologies may expressed follows profile description similar functionality yellow pages uddi process model similar business process model bpel ws grounding just mapping daml wsdl 
main contribution daml ability express entities concepts defined semantic web ontologies provide expressive constructs suitable automatic discovery composition services 
daml service descriptions link ontologies describe particular service types features 
example ontology written owl specialized description sensors 
ontology contains top level class sensor define sensor concept 
sensor subclasses 
semantics owl subclasses inherit properties superclass may extend attributes additional ones 
profile description daml services hierarchy 
example service provided constitutes subclass sensor service 
profile hierarchy ontology describes relationship information filtering services composed 
service type non functional attributes specific type 
attributes defined extensible service parameter mechanism daml primarily relate service associated sensor 
service composition architecture developed service composition prototype basic components composer inference engine 
inference engine stores information known services knowledge base kb capability find matching services 
composer user interface handles communication human operator engine 
inference engine owl reasoner built prolog 
ontological information written daml converted rdf triples loaded kb 
engine built axioms owl inferencing rules 
axioms applied facts kb find relevant entailments class inheritance relation classes may directly encoded subclass relationships 
composer lets user create workflow services presenting available choices step 
user starts composition process selecting services registered engine 
query sent kb retrieve information inputs service inputs new query run get list possible services supply appropriate data input 
composer shows different service classes available system filters results constraints user may specify attributes service 
functionalities explained detail subsections 
matching functional properties composer presents options composition services output fed selected service input 
matching services done information service profiles 
service profile describes inputs outputs range parameters 
parameter descriptions profile allow defining different types matches services exact match generic match 
exact match defined parameters restricted owl class serviceprofile descriptions 
services supply output exact match preferred composition services displayed top matching services list 
match services output type subclass service input type called generic match 
output service subsumed input output type viewed specialized version input type services chained 
generic matches put list chosen composition 
inference engine orders generic matches priority matches lowered distance types ontology tree increases 
filtering non functional attributes number services displayed list possible matches extremely high cases 
example power grid telephone network thousands sensors providing services 
infeasible scroll list choose services simply name 
number services low service names may mnemonic user know short text descriptions uddi services descriptions fully describe services 
name service help distinguish services non functional attributes service location useful determine relevant service current task 
sensor description linked particular service queried sensors locations type deployment date sensitivity prototype filtering provided profile descriptions services 
profile hierarchies mentioned section section defines classification level filtering 
profile subclass inherits attributes container class extends attributes apply category 
attributes user constraints entered properties constitutes second level filtering 
consider example sensor network want select service input retrieved sensor service 
restriction system possible matches number sensor services environment 
user chooses filter results services type decreases number matches significantly 
composer queries inference engine non functional parameters selected service type 
answer returned engine composer creates gui panel user enter constraints properties services shown 
user constraints translated prolog queries sent inference engine 
engine simply applies new query previous result set removes consideration services satisfy current constraints 
generating composed services composition generated user existing prototype realized daml allowing advertised discovered composed services 
composer generate exactly description create corresponding serviceprofile user added non functional properties 
description immediately available system named service filtered fig 

filtering see omnidirectional acoustic sensors located latitude longitude 
seen services satisfy constraints composed normal way 
way user quickly build set complex compositions piece meal fashion tasks hand demand 
execution composed services current implementation system executes composition invoking individual service passing data services flow constructed user 
method primarily dictated daml wsdl specification describe web services interaction request response notification messaging parties 
consequence design client program serves central control authority handles rpc calls invoke individual services 
centralized coordination suffers scalability availability problems 
require passing redundant messages coordinator parties causing quite inefficient bandwidth severe problem consider output sensor readings acoustic sensor may provide large wav files 
efficient execution dynamically created composite process need special framework node set system rules conduct execution process directly passing result service 
prototype address adding functionality generating xml workflow description passed non system soap forwarded necessary standards area web services settled easy adapt system new interface 
related different industry efforts create standards web service composition tasks business process execution language web services bpel ws important ones 
bpel ws supersedes ibm web services flow language wsfl microsoft xlang 
bpel ws provides language formal specification business processes business interaction protocols 
extends interaction model wsdl define process provides consumes multiple web service interfaces 
process thought composing set web services web services 
bpel ws supports static binding services composition discovering possibilities demand implemented prototype described 
son proposed approach building agent technology notion generic procedures customizing user constraints 
argue augmented version logic programming language golog provides natural formalism programming web services 
contributions realized development congolog interpreter communicates web services open agent architecture oaa service procedure ontologies written order logic 
system directly supports existing web services able ground directly existing wsdl workflow expressed soap call creating separate execution system semantically described services 
daml matchmaker system augment current uddi architecture semantic service descriptions 
matchmaker aims improve discovery process allowing location services capabilities return support composition task 
basic idea matchmaker making subsumption relation classes find flexible matchings capabilities uddi 
system able incorporate matchmaker functionality available online service currently assumes service definitions available runtime 
filtering set previously discovered services dynamic matchmaking loading 
scalable allow service crawlers find semantic service descriptions support usable compositions services 
shown semantic descriptions aid composition web services 
developed prototype system shown compose actual web services deployed internet providing filtering capabilities large number similar services may available 
prototype system directly combine daml semantic service descriptions actual invocations wsdl descriptions allowing execute composed services web 
working incorporation planning technology inference engine result automation system 
investigating possibility learning past user activity 
generating richer ontologies specific descriptions improve performance engine 
ontologies widely semantic web expect find increasing number cross related concepts different ontologies owl supports directly impact semantic information apparent 

benatallah dumas 

patterns web services composition 
editors patterns skeletons parallel distributed computing 
springer verlag uk nov 

berners lee hendler lassila 
semantic web 
scientific american may 

brickley guha 
resource description framework rdf model syntax specification 
recommendation submitted february www org tr rec rdf syntax 
current may 

christensen curbera meredith weerawarana 
web services description language wsdl 
www org tr 

curbera goland klein leymann roller thatte weerawarana 
business process execution language web services version july 
www ibm com developerworks webservices library ws bpel 

daml services coalition 
daml web service description semantic web 
international semantic web conference iswc june 

dean connolly van harmelen hendler horrocks mcguinness patel schneider stein 
web ontology language owl version 
working draft november www org tr wd owl ref 

horrocks van harmelen patel schneider berners lee brickley dean decker fensel hayes heflin hendler lassila mcguinness stein 
daml oil 
www daml org daml oil index html 

mao brewer katz 
fault tolerant scalable wide area internet service composition 
berkeley tr ucb csd jan 

mcilraith son 
adapting golog composition semantic web services 
conference knowledge representation reasoning april 

paolucci payne sycara 
semantic matching web services capabilities 
international semantic web conference 

sheng benatallah dumas 
mak 
self serv platform rapid composition web services peer peer environment 
demo session th intl 
conf 
large databases sept 

uddi 
uddi technical white 
www uddi org 


soap working draft 
www org tr wd soap part 
