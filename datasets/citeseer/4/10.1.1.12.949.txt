applying semantic relation extraction information retrieval edward submitted department electrical engineering computer science partial ful llment requirements degree master engineering computer science engineering massachusetts institute technology may edward mm 
rights reserved 
author mit permission reproduce distribute publicly electronic copies thesis document part 
author 
department electrical engineering computer science may certi ed 
boris katz principal research scientist thesis supervisor accepted 
arthur smith chairman department committee graduate students applying semantic relation extraction information retrieval edward submitted department electrical engineering computer science may partial ful llment requirements degree master engineering computer science engineering people want search large number articles web pages naturallanguage documents nd answers speci questions 
currently best techniques performing searches treat document unordered collection words disregard information words relate 
approach quite successful number fundamental limitations 
order explore potential bene advanced linguistically motivated techniques built squire semantic question answering information retrieval engine 
squire uses number independent transformations process individual sentences converting sets semantic relationships 
search semantic relationships response user question 
squire signi cantly performs traditional ir techniques task returning individual sentences answer question 
thesis supervisor boris katz title principal research scientist acknowledgments boris katz sue helped shape thesis topic 
read commented early drafts thesis emil sue boris 
contents searching natural language databases 
traditional information retrieval techniques 
limitations traditional information retrieval 
semantic information retrieval 
overview 
background information information retrieval techniques 
removing functional words 
stemming 
weighting 
vector space model 
measuring information retrieval performance 
linguistics 
syntax trees 
arguments modi ers 
thematic roles 
alternations 
verb classes 
predicate logic 
semantics 
semantic trees 
exploring semantic ir squire task 
design criteria 
response criteria 
system properties 
squire semantic information retrieval engine weights 
parser 
classi cations parser layers 
advantages layered architecture 
parsing parallel 
representations 
strings 
syntax trees 
semantic trees 
relations 
parser layers 
layer 
stemmer 
clause handler 
conjunction handler 
trace resolver 
semantic tree maker 
pronoun resolver 
property adder 
theta 
synonymy layer 
relation maker 
database 
indexing 
retrieval 
testing test materials 
test corpus 
test questions 
test indexes 
methodology 
control 
results 
ects word parameter 
ects ur parameter 
ects fr parameter 
ects pro parameter 
ects syn parameter 

directions improving existing parser layers 
creating new parser layers 
fundamental changes squire 
list figures sentence retrieval indexing sentences simple structures 
example syntax tree 
semantic phrases lexical heads 
semantic phrases functional heads 
illustration syntactic traces 
illustration pro 
commonly thematic roles 
example semantic derivation 
example semantic tree 
example parser 
indexing relations sentence 
indexing words relations 
squire parser layers 
example templates semantic tree maker 
example template theta 
database structure 
database indexing 
database retrieval 
precision recall curve control ir system 
comparison control ir system squire indexing words 
precision recall curve squire pronoun resolution synonymy layers index words 
precision recall curve squire indexing underspeci ed relations 
precision recall curve squire indexing words underspeci ed relations 
comparison indexing underspeci ed relations indexing tagged relations 
precision recall curves illustrating ect pronoun resolution parser layer 
precision recall curves illustrating ect synonymy layer relations indexed 
precision recall curves illustrating ect synonymy layer words indexed 
comparison performance squire features enabled performance control ir system 
chapter searching natural language databases people want search large natural language source encyclopedia nd answers speci questions 
nding answers daunting task 
relatively certain answer contained may apparent answer stored 
especially dicult nd answers large contain wide variety information de ned organizations 
example source properties world wide web 
general dicult extract speci information web large varied unorganized source data 
examples include news wires scienti journals encyclopedias 
traditional information retrieval techniques task automatically searching large answers speci question known information retrieval ir 
information retrieval systems classi ed types answers return process queries arrive answers 
traditional ir systems divide sources sets articles small word self contained documents discusses speci topic 
question return set articles nd contain answer question 
decide articles answer question model question articles database unordered bags words 
return articles bags words similar question 
approach exempli ed smart ir system 
limitations traditional information retrieval traditional ir approach successful number important limitations 

treating document unordered set words traditional ir approach throws away information words relate 
result return documents don answer question similar word content 
examples phrases di erent meanings similar word content man ate dog dog ate man meaning life meaningful life bank river bank near river 
set words answer question necessarily ask 
result traditional approach fail return documents answer question di erent words question 
example pairs questions answers di erent words color sky 
viewed surface earth atmosphere looks pale blue 
european discovered america 
columbus new world 
pigs eat 
hogs feed corn 

individual sentences contain words pronouns devices refer previously mentioned concepts 
fact word content question rarely similar word content sentence answers 
exacerbates rst problems means traditional ir techniques poor deciding sentence paragraph article answers question 
example traditional ir system hope discovering answers questions implicit objects question invented basketball 
initially conceived james 
people live washington 
city population people 
grown republic 
fertile ground produce oranges rice 
limitations fundamental consequences fact traditional ir techniques treat queries documents unordered sets words 
order overcome information structure documents queries extracted stored 
semantic information retrieval intuitively able index knowledge source 
questions turned knowledge templates matched indexed knowledge 
construct index answer related questions 
represent knowledge questions 

extract representation source question 

index eciently search knowledge extract 
representation sentences sense basic unit knowledge sentence representation 
sentence represented single complex structure set simpler structures 
larger structures tend capture information original content sentence simpler structures usually easier index search 
semantically information retrieval systems represent articles unordered sets sentences encode information sentences relate 
knowledge representation optimally satisfy properties canonical representation di erent sentences basic meaning representation 
generalization sentence implies knowledge representation rst contained second derivable retrieval algorithm 
assuming knowledge representation satis es properties simply represent questions partial sentences sentences variables 
note knowledge representation complex nested structure deciding sentences answer question may require individually processing sentence database 
parsing parsing process constructing representation corresponds sentence 
basic approaches parsing sentence deep parsing sentence rst converted linguistically motivated tree shaped structure 
structure explicitly encodes di erent parts sentence relate removes ambiguity original sentence 
structure construct knowledge representation sentence 
surface parsing sentence treated sequence words knowledge representation constructed directly sequence 
usually construction involves matching sequences parts speech sentence 
example surface parser encounters adjective followed noun encode adjective modi er noun 
indexing retrieval representations source sentences indexed way eciently searched 
particular searching index require question compared sentence 
problem complex knowledge representations hard index returned just questions answer 
reason sentences usually broken sets simple structures indexed separately 
nd answers question index searched structures match question structures 
source sentences matching structures returned possible answers question 
source sentences contain matching structures rated correct answers 
process illustrated 
overview semantic information retrieval techniques promising traditional techniques continually performed 
order explore limitations potential semantic ir techniques designed built squire semantic question answering ir engine 
squire uses deep parsing techniques convert sentences sets simple structures representing individual semantic relationships comprise 
relationships separately indexed database 
user asks squire question squire bill thinks mary hit bill joe thinks bill hit source sentences question thinks mary hit bill john saw mary hit bill thinks mary hit bill joe saw bill hit john saw mary hit bill bill thinks mary hit bill joe thinks bill hit joe saw bill hit score index john saw mary hit bill bill thinks joe thinks bill hit joe saw 
example sentence retrieval system sentences indexed simple structures 
case sentence reduced subject verb object triples 
question rst broken relations 
relations looked index sentences contain returned 
converts set semantic relationships searches database sentences best match relationships 
thesis describes design implementation squire examines performance test set questions 
chapter provides background information traditional information retrieval techniques linguistics 
chapter describes speci problem squire tries solve properties solve problem 
chapter describes squire design implementation 
chapter describes tests ran compare squire traditional ir techniques discusses results 
chapter explores directions research semantic ir take 
chapter background information information retrieval techniques traditional information retrieval systems treat articles questions unordered sets words 
question return articles representative sets words best match question 
general description true traditional ir systems leaves number details unspeci ed words put unordered sets represent articles 
system decide sets words match 
weights associated words set 
represent 
number answers questions 
sections describe answers maximize performance traditional information retrieval systems 
techniques standard incorporated traditional ir system 
removing functional words words give information semantic content sentence 
important traditional ir systems word convey semantic content correlate questions answers 
words divided roughly classes presence question correlates presence article answers question content words fern carpet elect correlate question content word article believe article answers question 
functional words correlate presence question functional word article gives information article answers question 
functional words provide traditional information retrieval techniques information usually included sets words represent articles questions sets words represent articles contain content words 
usually accomplished list lists functional words 
word list included representation article question 
note unclear words placed list words intermediate correlation words correlations depend domains questions articles 
example asking question australia probably inappropriate eliminate words appear lists 
stemming english words sentence ax es nouns ing ed verbs 
axes part semantic content word 
give indication word relates words sentence 
unreasonable traditional ir systems treat axes part word 
articles words contain axes question returned 
example return cow eats grass response cows eat axes cow eat match 
reason ir systems root words stems encode articles questions throw away axes 
process known stemming 
di erent types axes english clear discarded 
axes cars ing walking serve modify basic concept 
discarded stemmers 
axes un unwanted ize er hunter fundamentally change meaning stem 
di erent stemmers di erent decisions axes kept discarded 
clear decide stem word decide axes wish remove 
example stemmer want strip sux tive administrative give shouldn strip sux additive give adjective give 
stemmers number heuristics produce stems words 
typically stemmers error rate 
simple approach simply maintain large list word encounter stem 
disadvantage approach stem words encountered including specialized words type whale 
possible combine techniques table stems words revert heuristic stemmer words table 
lemmatization proper stem word dependent sentence 
technique improving performance stemming rst derive part speech word information decide stem word 
technique known lemmatization 
order nd part speech words article statistical algorithm usually 
popular algorithm nding parts speech words brill tagger 
weighting addition storing set words comprise article information retrieval system assigns weight word 
weight generally re ects word tells content article 
ir system weights decide question matches article 
weighting frequency article reducing article set words information word occurs article lost 
order preserve information ir systems weights words re ect frequency article 
representing frequency absolute number occurrences unfairly give higher weights larger articles 
frequency represented percentage total number words article 
id number occurrences word document number words document id weight word document id id weighting inverse frequency general common word help decide article answer question 
example question heart de answered article containing word de containing heart de common word heart 
reason ir systems take account common word decide weight receive 
word measured frequency corpus indexed 
number documents 
word ij measured independant corpus 
word de ned nd weight word document id id weighting schemes variety weighting schemes possible may take account frequency term number documents occurs information 
commonly weighting scheme cornell ltc weighting id log id log log ij log number documents term appears 
weighting article value possible determine external means reliable informative useful document case return articles score higher criteria 
way accomplish scale weights term article representation measure value article 
example google search engine uses heuristic pages people links useful 
modify weights articles re ect information articles people link returned articles people link returned 
vector space model thinking article set weighted word stems think mapping word stems weights 
weight word stem article simply zero 
de ning vector containing word stems corpus word word word de ne representation article question simply vector hw im id weight word document representation reduces document single high dimensionality vector 
vectors convenient representation manipulated reduced standard linear algebra techniques 
example words tend vary articles nd minimal basis vector space minimal set perpendicular axes allow encode vectors 
cuts space vectors take time takes compare 
measuring information retrieval performance early research gone nding metrics measure information retrieval performance 
alternative metrics proposed 
widely accepted 
widely accepted metrics contingency table divides sentences original corpus categories answer question retrieved response question answers question doesn answer question retrieved retrieved table de ne commonly metrics precision recall 
precision percentage responses retrieved answer question 
recall percentage correct answers retrieved precision ja bj jbj recall ja bj jaj information retrieval systems tradeo precision recall 
particular increasing number documents returned generally increases recall expense precision decreasing number returned increases precision expense recall 
extremes returning document give recall precision returning documents give precision recall 
tradeo precision recall nature tradeo varies widely di erent ir systems 
nature tradeo varies widely clear reduce quantities single value indicates performance system 
researchers report performance ir system graph precision function recall 
linguistics sentences may simply consist simple strings words linguists long recognized sentences complex underlying structure 
structure explicitly indicates constituent words sentence relate combine give meaning sentence 
order get idea sentence means cp ip np john aux vp np np mary det book give example syntax tree sentence john give mary book answers question need extract underlying structure sequence words sentence 
syntax trees linguists agree sentences best represented tree structure known syntax tree 
leaves syntax tree words sentence nodes represent phrases groups words sub phrases combine form single functional unit 
example syntax tree 
phrases phrase consists head contains main semantic idea sentence number adjuncts modify head way 
addition phrase assigned type type head 
example phrases headed nouns noun phrases np phrases headed verbs verb phrases vp phrases headed adverbs adverbial phrases advp 
example phrases 
windows noun phrase big man talked yesterday noun phrase eat cake verb phrase walk store buy verb phrase quickly adverbial phrase phrase consists head zero arguments 
head bold face argument underlined 
phrases lexical head head represents independent semantic concept 
moon prepositional phrase carpet prepositional phrase man determiner phrase john walk dog ection phrase phrase consists head zero arguments 
head written bold face argument underlined 
phrases functional head head represent independent semantic concept 
heads heads divided classes lexical heads functional heads 
lexical heads represent independent semantic concept 
phrases lexical heads 
functional heads heads represent independent semantic concept 
functional heads generally take exactly adjunct serve modify adjunct 
examples phrases functional heads movement traces phrases sentence moved original positions 
example consider sentences john likes mary mary liked syntax trees shown parts 
sentences mary relates verb way sentence mary adjunct likes sentence mary adjunct linguistic research suggests sentence mary originated position sentence subsequently moved position 
syntax trees corresponding sentence pre movement tree post movement tree 
post movement tree known surface structure sentence re ects ordering words pronounced 
pre movement tree known deep structure sentence closely re ects semantic relations concept expressed sentence 
phrase moved original location marked special entity called trace 
traces directly pronounced detected number means including monitoring timing speech 
displaced phrase called trace antecedent 
connection maintained trace antecedent trace antecedent said corefer 
parts illustrate deep structure surface structure sentence 
non overt pronouns pro phrases contain adjuncts pronounced part sentence overt marking 
traces example called empty categories 
example pro pronoun implicit sentence 
consider sentences john wants eat 
john considering talk 
run away 
sentences contains verb overt subject sentence verb eat sentence verb talk sentence verb run away 
verbs non overt pronoun known pro subject 
traces pro pronounced 
syntax tree detected timing speech means 
positions pro sentences john wants pro eat 
cp ip vp likes cp ip vp liked cp ip np mary vp liked cp ip vp liked mary np mary np john np mary np illustration syntactic traces 
syntax tree representing sentence john likes mary 
simpli ed version syntax tree representing sentence mary liked 
syntax tree include traces 
deep structure sentence mary liked 
structure encodes fact mary originally adjunct verb 
surface structure sentence mary liked 
trace indicates original position noun phrase mary indexing trace noun phrase indicate corefer 
arrows indicate coreference 
cp ip vp wants john np ip vp eat pro syntax tree representing sentence john wants eat 
sentence pro acts subject verb eat 
pro non overt pronoun 
john considering pro talk 
pro run away 
syntax tree 
arguments modi ers syntactic phrases take distinct types adjuncts arguments modi ers 
intuitively arguments necessary complete meaning verb modi ers just provide auxiliary information 
consider verb phrase forcefully gave apple mary wednesday head written bold face adjunct underlined 
phrase adjuncts apple mary arguments complete meaning verb give 
contrast adjuncts forcefully wednesday modi ers simply provide auxiliary information 
head take xed number arguments roles arguments ll dependent head 
heads take zero arguments heads take 
way express di erence arguments modi ers modi ers give type auxiliary information independent head attached type information arguments give head depends directly head 
example consider sentences john watched mary park 
john greeted mary park 
semantic role played adjunct mary di erent role 
contrast adjunct park serves purpose sentences identi es location event described 
sentences mary argument verb park modi er 
addition intuitive functional distinctions arguments modi ers syntactic reasons believe di erent 
example arguments receive case modi ers 
distinction arguments modi ers important trying determine adjunct relates head 
adjunct modi er way relates head implicit type modi er location modi ers specify location event time modi ers specify time event size modi ers specify size object 
relation argument verb derived argument explicitly encoded 
thematic roles common way encoding relation head arguments thematic roles 
thematic roles roles symbolic labels di erent relations argument head 
commonly thematic roles listed 
dispute set labels thematic roles 
exact set labels important ir system long argument head assigned unique thematic role 
ensures thematic role example john gave mary book 
theme john gave mary book 
experiencer murder mysteries please john 
source john took book mary 
domain president france theme proud pig commonly thematic roles 
argument role speci ed underlined head written bold face 
phrases matched proper arguments compared occur di erent positions sentences john gave mary ball park 
john gave ball mary park 
linguists thematic roles encode relationship head phrase technically argument head 
example sentence john give book mary john said ll agent thematic role give argument give 
practice assigning theta roles phrases arguments common research suggests may accurately re ect way humans process language 
alternations semantic notion expressed number alternations syntactic variants 
case thematic roles assigned arguments sentence location argument di erent 
example consider sets sentences john gave ball mary 
john gave mary ball 
mary ball john 
took john hand 
took hand john 
threw ball park 
park threw ball 
sets sentences basic idea expressed words di erent word orders 
order semantic information retrieval system successfully decide sentence understands question capable determining thematic roles assigned arguments 
verb classes di erent verbs allow types alternations 
example verbs throw toss smash undergo alternations 
building intuition beth levin evidence english verbs divided relatively small number distinct classes de nes alternations possible verbs 
verb classes speci es xed set thematic roles verbs class take 
additionally speci es alternations verb arguments undergo 
semantic ir system greatly reduce possible ways verb thematic roles assigned arguments decide class verb belongs 
accomplished simply looking verb table 
single verb belongs multiple verb classes 
example verb take belongs di erent verb classes sentences john took mary store 
john took apple 
john took walk river 
multiplicity verb classes single verb occurs commonly word multiple meanings 
detecting correct verb class requires advanced techniques simple table look 
possible verb class information allow disambiguate verb sentence structure consistent possible verb classes alternations 
beth levin restricted discussion word classes verbs 
principle lexical head assign thematic role 
notion verb classes easily extended cover lexical heads 
lexical head assigned semantic class describes set thematic roles head assign set alternations undergo 
note words di erent parts speech share semantic class 
example reasonable assign semantic class destroy destruction phrases assigns set thematic roles arguments john destroyed city john destruction city predicate logic relationships heads sentence adjuncts gives great deal information semantic content sentence 
relationships fail capture think meaning sentence 
example mentioned subject sentence argument verb clearly serves complete meaning verb 
example adjunct level relationships failing capture think meaning sentence relationship determiners nouns modify 
approach nding relations predicate logic 
predicate logic assumes verb corresponds predicate describes verb 
arguments predicate include proper arguments verb external arguments phrases serve complete meaning verb proper arguments 
example sentence john gave book mary expressed predicate give john book mary predicate form useful task information retrieval compar john john mary mary likes likes likes mary likes mary likes mary likes mary john likes mary likes mary john likes mary john likes john mary example semantic derivation 
gure illustrates semantic derivation predicate corresponding sentence john likes mary 
operator nds semantic value syntactic phrase 
functions expressed lambda calculus 
rst lines give de nitions values words sentence 
note value likes function 
values combined functional application yield nal predicate likes john mary 
ing question predicate predicates corpus sentences give information sentences answer question 
semantics common way deriving predicates describe sentence known semantics gottlob frege late nineteenth early twentieth centuries 
semantics notion derivation predicates sentences best modeled functional application 
node syntax tree value object predicate function 
value node simply derived applying value head function values arguments 
example derivation sentence john likes mary 
semantics allows syntactic trees compositionally combined yield logical expressions containing predicates describe sentences 
types transformations allowed semantics quite complex powerful account linguistic phenomena including quanti ers pronouns 
number obstacles dicult systems information retrieval 
system designed handle simple sentence functions represent words complex 
able develop system assign set predicates english sentences 
second system requires individual word de nition 
fact dicult build high coverage system 
systems method recovering inputs don know process 
example system words de nitions words ways system designed handle system simply fail 
analyses language advanced dicult information retrieval systems 
semantic trees practical approach information retrieval system hybrid predicate logic syntax trees 
hybrid retain original structure sentence include internal external arguments head children 
propose simple structure call semantic tree 
semantic tree tree structured representation sentence composed semantic phrases semantic phrase consists single lexical head modi ers internal external arguments 
phrase arguments labelled thematic role 
example semantic tree 
think likes john tall happy agent idea agent theme semantic tree sentence think john likes tall happy 
semantic phrase consists lexical head arguments modi ers 
arguments connected solid lines labeled thematic role 
adjuncts connected dotted lines 
chapter exploring semantic ir researchers agree possible semantic information improve performance information retrieval systems 
unclear possible methods incorporating semantic information information retrieval system yield substantial improvements 
order explore methods promising designed built squire semantic question answering information retrieval engine 
squire intended test bed explore ects variety semantic improvements traditional ir systems 
squire task task chose squire nd individual sentences answer natural language question large corpus order sentences 
types questions squire speci questions answered single sentences 
examples questions whales eat 
capital norway 
factories located honolulu 
chief crops grown guinea 
invented football 
squire optimized answer general questions ask information single entity tell monkeys 

shah 
questions contain semantic relationships best answered traditional information retrieval techniques 
ideally squire perform traditional systems faced questions 
chose task sentence level ir task traditional ir performs poorly task semantic ir techniques show promise 
ir important task preferable article ir easier skim sentences nd answer question skim articles 
additionally cost returning incorrect sentences decreased user usually determine immediately sentence returned answer question 
contrast returning incorrect articles requires user skim article determine answer question 
design criteria precision recall provide simple metrics measuring performance system criteria squire designed satisfy 
criteria divided properties system question answering behavior response criteria properties system system criteria 
response criteria wide coverage semantic systems built perform limited domain perform poorly outside domain 
usefulness information retrieval systems comes fact applied novel situations 
squire information designed squire behave reasonably operating outside known domains perform traditional ir systems 
example squire determine structure sentence tries index constituent pieces sentence 
high precision amount textual information available electronic sources including internet increasing phenomenal rate past years 
information necessary answer question available di erent sources 
users usually interested retrieving answers question 
amount information available grows precision important recall 
designed squire primarily maximize precision secondarily maximize recall 
linguistic normalization single idea formulated di erent words constructs 
linguistic variation dicult decide sentence answers question 
task easier linguistic variants idea reduced normalized form 
designed squire detect linguistic variation produce normalized representations input possible 
rapid query response unreasonable ask users wait seconds response question 
squire indexes large amount information important search information time responds query 
reason squire designed provide rapid responses questions indexing large corpora 
system properties modularity squire designed explore impact number di erent semantic improvements traditional ir techniques 
order place minimal restrictions types improvements tested squire framework modular design 
improvement implemented self contained module 
modules communicate simple speci ed interface 
allows squire easily extended test semantic improvements 
additionally allows squire test interactions various potential improvements 
domain extensibility order information retrieval system ectively extract meaning sentence information syntax semantics language 
particular speci information words types words syntactic constructs 
task encoding information words types words constructs english daunting task 
designed squire ensure new information speci words constructs easily added 
addition criterion wide coverage designed squire reasonable default information encountered unknown words word types constructs 
simplicity simple model easier understand reason implement maintain 
eciency squire performance ected large number parameters values best determined experimentation 
changing parameters requires entire index rebuilt 
allow rapid exploration ects changing parameters squire designed eciency mind 
chapter squire semantic information retrieval engine squire system divided modules parser database 
parser converts sentences questions weighted sets relations partially encodes semantic concept 
database maintains index weighted relations represent corpus 
user asks squire question parser converts weighted set relations database uses relations retrieve sentences answer user question 
weights squire extensive weights 
weights indicate squire con dence piece information useful 
con dence derived number sources including valuation original source information 
example information derived encyclopedia carry higher weight information derived unknown web page 
likelihood information correctly represents original source 
squire performs transformation incorrect priate adjusts weight output accordingly 
number independent sources converge information 
example squire performs multiple transformations give result weights resulting individual transformations combined 
uniqueness information 
information sources lower weight information sources 
weights represented oating point numbers range 
weights combined number ways commonly combined operators weights combined represent di erent ways piece information useful 
particular multiple independent sources converge information weights individual sources combined operator 
weights combined independent valuations piece information 
operator parser layers combine weights inputs valuation information 
parser parser responsible converting strings words relations 
consists set parser layers transforms input produce output 
transformations serve extract semantic content input reduce linguistic variation convert form allow easy indexing 
clause handler stemmer trace resolver conjunction handler sp maker pronoun resolver property adder relation maker head rel obj head rel obj head rel obj sentence example parser 
parser constructed attaching number parser layers series 
weighted output layer feeds input layer 
parser layer transforms individual weighted input zero weighted outputs 
weights outputs re ect original weight input ect transformation weight 
parser constructed attaching number parser layers series weighted outputs layer feed layer 
indexing original input parser simply sentences indexed weighted valuation source nal output weighted set relations indexed database 
question answering input parser questions answered weight output weighted set relations looked database 
example parser constructed parser layers shown 
classi cations parser layers parser layers divided basic classes relation input representation output representation representation shifting layers input information representation transform representation 
source source layers representation input output 
parser layers divided subclasses transform input layers transform input exactly output 
oneto layers modify weight input 
splitters split complex structures simpler structures 
splitters produce outputs input 
weights outputs generally equal weight input 
layers squire determine possible representations best encodes input 
case layer outputs possible representations representation weight adjusted squire con dence correct 
filters selectively remove class inputs pass remaining inputs 
filters generally modify weight input 
filters remove items sucient weights 
advantages layered architecture simpli ed testing prototyping dividing parser set modular layers simple interface number advantages 
new semantic processing techniques easily tested simply adding new layers squire parser 
second interactions layers examined running tests varying layers order 
especially true source source layers 
third di erent algorithms accomplishing semantic task easily compared encapsulating separate module examining system behavior changes modules swapped 
graceful degradation fact piece information squire assigned weight allows parser layer process input unable reliably determine proper output 
example consider sentence mary likes man roof 
parser layer diculty deciding interpretations mary likes man roof 
roof mary likes man case simply output possible outputs weighted parser layer estimate probability correct transformation 
incorrect interpretations low weights subsequent parser layers completely eliminated lter layers 
incorrect interpretation original sentences database low weight 
cognitive underpinnings addition having useful prototyping properties division parser modular layers may provide model human language processing 
research cognitive science suggest humans process aspects language number simpler steps simple interfaces steps 
exact set steps squire system doubtless di erent humans general architecture may allow examine ects processing language series discrete steps 
additionally come understand human language processing faculty may nd new ways improve layered model squire 
example human language faculty inspired consider ways allowing information ow directions layers allowing information layers ect earlier ones 
parsing parallel humans process sentences consider promising interpretations rst process promising interpretations promising ones eliminated reason 
example hearing sentence man pushed john named harry people rst interpret words man pushed john mean man doing pushing 
encountering phrase named harry interpretation eliminated go back construct new interpretation rst part sentence 
order give squire similar behavior placed small bu ers parser layers 
bu ers sort outputs prior layer feeds layer descending order weight 
layer processes information greatest weights rst 
addition allowed parser layer run parallel threads apply back pressure layers 
layer process inputs output bu er full 
point continue processing output bu er 
promising interpretations needed computed prior layers promising interpretations available 
unfortunately overhead running parser layer parallel threads exceeded bene disabled feature 
believe feature useful parser layers designed generated large number outputs 
representations discussing individual parser layers squire parser describe representations communicate layers 
squire uses distinct representations encode semantic content sentences questions strings syntax trees semantic trees relations transforming sentences questions sequence representations remove linguistic variation normalize input form suitable indexing 
strings original input squire sequences characters 
string rst broken individual sentence 
sentence consists string letters spaces punctuation 
sentences divided terminating punctuation marks periods question marks 
syntax trees syntax tree tree shaped structure consisting phrases words traces antecedents 
phrases represent syntactic phrases 
phrase assigned type vp verb phrase np noun phrase child 
words represent words sentence 
word surface form may stem 
example word walking surface form walking stem walk 
words may children 
traces represent syntactic traces result movement syntactic phrases 
trace assigned numerical identi er speci es antecedent moved location trace 
antecedents represent moved syntactic phrases 
antecedent numerical identi er speci es antecedent trace moved syntactic phrase single child 
pro represented special word 
simpli es representation syntax trees allows parser layers treat pronoun 
syntax trees classi ed properties constituents 
syntax trees contain antecedents traces surface structure syntax trees 
syntax trees contains antecedents traces deep structure syntax trees 
syntax trees words stems stemmed syntax trees 
semantic trees semantic tree tree shaped structure consisting nested semantic phrases 
semantic phrases consists head arguments modi ers set properties 
heads represent words head semantic phrases 
head consists surface form stem semantic class 
semantic class head need speci ed available 
arguments represent arguments semantic phrase 
argument consists semantic phrase thematic role 
thematic role argument need speci ed available 
modifiers represent modi ers semantic phrase 
modi er consists single semantic phrase 
properties semantic phrase keep track number features semantic phrases 
features include syntactic information part speech head prepositions prepositional phrases determiners nouns 
semantic head semantic class adjunct relation type see observational verb agent see observational verb give observed object give transference verb john agent give transference verb book transferred item give transference verb mary recipient relations index sentence saw john give book mary 
note heads stem form semantic phrases derived stemmed syntax trees 
include semantic information noun animate 
properties currently decide thematic roles arguments assigned purposes 
semantic trees containing heads semantic classes unspeci ed arguments thematic roles unspeci ed called underspeci ed semantic trees 
semantic trees containing heads semantic classes unspeci ed arguments thematic roles unspeci ed called full semantic trees 
relations order allow partial semantic trees indexed matched broken simpler component 
squire breaks semantic trees number relations encodes relationship single head adjunct 
relation consists semantic head head semantic class head adjuncts thematic role relation type relates head adjunct 
example showing relations relate sentence 
relations encode relations semantic class relation type unknown 
case semantic class relation type just left blank 
allows squire index relations doesn information semantic head semantic class adjunct relation type john feed bone dog relations index words sentence john feed bone dogs 
note lexical words indexed relations extracted semantic phrases semantic phrases contain functional heads 
note heads stem form semantic phrases derived stemmed syntax trees 
determine thematic role relation type 
relations semantic class relation type unspeci ed underspeci ed relations 
relations semantic class relation type full relations 
relations encode individual words 
relations way head eld elds left blank 
indexing words semantic tree addition relations squire gains bene ts traditional ir techniques 
shows words semantic tree indexed 
parser layers squire currently de nes eleven parser layers combined variety ways give di erent parsing behavior 
parser layers de ned squire listed individually described sections 
layer rst stage processing sentence constructing syntax tree 
number syntactic parsing programs various properties freely available research purposes 
chose dekang lin program construct syntax trees squire 
fairly simple matter adapt squire di erent parser appropriate parser 
principles parameters model syntax layer name input output description layer string syntax tree parses strings syntax trees 
stemmer syntax tree stemmed syntax tree stems words syntax tree 
clause handler syntax tree syntax tree splits modifying clauses syntax trees 
conjunction handler syntax tree syntax tree turns single syntax trees contain conjoined phrases simpler syntax trees 
trace resolver surface structure syntax tree deep structure syntax tree moves antecedents back original location semantic tree maker stemmed deep structure syntax tree semantic tree turns syntax trees semantic phrases 
pronoun resolver semantic tree semantic tree replaces pronouns antecedents 
property adder semantic tree semantic tree adds properties semantic phrases head 
synonymy layer semantic tree semantic tree uses synonyms generate synonymous syntax trees 
theta semantic tree semantic tree assigns thematic roles semantic tree arguments 
relation maker semantic tree relation converts semantic phrases relations 
squire parser layers developed early 
chose fast gives fairly accurate parses returns best guess parse 
property important allows squire index parts sentence unable nd correct structure entire sentence 
unfortunately program provide information certain parse 
information modify weight output 
stemmer stemmer source source parser layer nds stem word syntax tree 
currently uses large table nd stems known words versions squire employ advanced stemming algorithms 
clause handler semantic phrase representation capable encoding sentences constructions dicult directly encode semantic phrases 
syntactic trees translated semantic phrases constructions handled 
construction dicult represent semantic phrases relative clause 
relative clauses type subordinate clause modify noun phrase 
consider sentences relative clauses underlined nouns modify written bold face 
saw box sitting hill met man know song thinking short sentences noun bold face lls semantic roles 
sentence box experience verb saw agent verb sitting 
sentence man agent met theme know 
sentence song idea thinking agent nouns ll separate semantic roles separate verbs semantic phrase structure allows phrase ll single semantic role 
sentences directly encoded semantic phrases 
simple solution split sentences separate sentences 
separated sentences corresponding sentences saw box 
box sitting hill 
met man know man 
song short 
thinking song 
transformation distort meaning original sentence 
example consider sentence sentences derived splitting john think man table 
john think man man table 
distortion problematic semantic systems inference engines generally interfere task information retrieval 
reason task information retrieval engine directly answer question return sentences relevant answering 
sentence directly answer question man table relevant question certainly returned response 
clause handler source source splitter parser layer responsible breaking relative clauses sentences 
takes syntax trees input syntax tree inputs inputs syntax trees representing sentence relative clauses 
currently clause handler modify weights syntax trees processes 
conjunction handler construction dicult directly encode semantic phrase conjoined phrase 
conjoined phrases phrases combined conjunction produce single phrase 
consider sentences child conjoined phrases underlined head modify written bold face 
saw cat mouse 
john likes matthew mary 
green red favorite colors 
sentences underlined phrases ll semantic role bold faced head 
sentence cat mouse ll experience role verb saw 
sentence matthew mary ll theme role verb 
sentence assignee role lled red green 
semantic phrases allow single phrase ll semantic role 
situation analogous relative clauses phrase lled semantic roles 
solution handle conjoined phrases simply split sentence simpler sentences 
separated sentences corresponding sentences saw cat 
saw mouse 
john likes matthew 
john mary 
green favorite color 
red favorite color 
note relative clauses transformation preserve semantic meaning input sentence 
example consider sentence sentences derived splitting john met mary library kitchen 
john met mary library 
john met mary kitchen 
conjunctions distortion meaning interfere task information retrieval resulting syntactic phrases contain relationships relevant original sentence 
analysis simple conjoined phrases applies complex conjoined phrases top level conjoined phrases conjoined phrases arguments head appositives illustrated examples monkeys eat eggs fruit grass insects 
monkeys eat eggs 
monkeys eat fruit 
monkeys eat grass 
monkeys eat insects 
bell rang tower fell 
bell rang 
tower fell 
ei el tower located paris capital france 
ei el tower located paris 
ei el tower located capital france 
conjunction handler source source splitter parser layer responsible breaking sentences conjoined phrases appositives simpler sentences 
takes syntax trees input syntax tree inputs inputs syntax trees representing combination conjoined phrases 
currently conjunction handler modify weights syntax trees processes 
trace resolver surface structure syntax tree converted semantic trees restored deep structure tree originated 
deep structure tree properly captures sentence semantic relationships 
converting tree deep structure tree simple matter replacing trace antecedent removing antecedent moved position 
example sentence john book converted john book 
trace resolver source source parser layer responsible converting surface structured syntax trees deep structured ones 
currently trace resolver modify weights syntax trees processes 
semantic tree maker semantic tree maker representation shifting parser layer 
responsible converting syntax trees underspeci ed semantic trees 
assumes syntax trees stemmed deep structured contain relative clauses conjoined phrases 
np vp np np vp np np np word word syntax tree matcher semantic tree filler example templates semantic tree maker 
templates allow squire convert syntax trees semantic trees 
template speci es syntax tree matching template syntax tree matcher replaced semantic tree obtained lling semantic tree ller variables 
order convert syntax trees semantic trees semantic tree marker uses set templates describe relationship syntax trees semantic trees 
exact set templates depends primarily phrase classi cations syntactic parser 
currently semantic tree maker uses set templates designed handle syntactic structures generated 
example templates shown 
template consists syntax tree matcher semantic tree ller syntax tree matcher representation small piece syntax tree 
structurally identical syntax tree contain variables place syntax phrases words 
syntax tree matcher said match syntax tree set values lled matcher variables give syntax tree 
set values ll syntax tree matcher variables called variables bindings 
semantic tree ller representation small piece semantic tree 
structurally identical semantic tree contain variables place heads adjuncts 
semantic tree llers construct semantic trees replacing variables values 
process known lling semantic tree ller variables 
template speci es valid way transforming piece syntax tree semantic phrase 
particular set steps convert syntax phrase semantic phrase 
find template matcher matches syntax phrase 

match template syntax tree matcher syntax tree 

variable stands word construct head consisting variable binding 

variable stands syntax phrase nd semantic phrase represents variable binding 

fill template semantic tree ller values obtained steps 
note step recursive entire process described repeated convert variable bindings syntax phrases semantic phrases 
recursion terminate syntax trees nite depth 
multiple template matches occasionally template match syntax phrase 
happen example possible interpretations phrase 
case template applied separately generate outputs matching templates 
allowing multiple templates match syntax phrase avoided possible number outputs grow exponentially number ambiguous syntax phrases sentence 
example sentence contains ambiguous syntax phrases described templates semantic tree maker output separate semantic trees 
template weighting semantic tree maker templates assigned weight represents probability template describes correct transformation 
weights example templates match syntax phrase distinguish relative probability matches correct 
template construct semantic phrase weight combined syntax tree weight operator 
syntax phrases semantic tree maker may encounter syntax phrase match templates 
usually happens unable nd correct syntactic parse sentence 
situation semantic tree maker uses heuristics recover syntax phrase exactly child semantic tree maker tries nd semantic phrase representing child 
successful returns semantic phrase 
decreases weight phrase combining xed weight account fact transformation may incorrect 
currently xed weight 
syntax phrase multiple children semantic tree maker returns special value unknown represents fact value semantic phrase unknown 
semantic tree maker tries nd semantic phrases representing child 
successful semantic phrases returned separately 
account fact transformation may incorrect weights phrases decreased combining xed weight 
currently xed weight 
advantages template architecture chose implement semantic tree maker template architecture reasons domain extensibility template architecture natural formalism describing relationship syntax trees semantic trees 
construction set templates fairly easy task 
easy matter add new templates account new syntactic constructs 
parser squire changed constructing entirely new set templates handle new parser done matter hours 
wide coverage template architecture allows semantic tree maker transform parts syntax tree sucient information transform entire tree 
dicult process sentences partially indexed 
pronoun resolver pronouns signi cant source diculty application traditional ir systems sentences 
pronouns carry semantic information human reading traditional techniques just treat functional words don contribute sentence meaning 
clearly ir system decide accurately sentence pronouns answers question rst determine semantic values pronouns 
semantic value comes pronoun antecedent word pronoun refers 
ir system antecedent pronoun sentence substitute copies antecedents place pronouns 
substitution process called pronoun resolution 
get preliminary idea possible bene ts pronoun resolution wrote pronoun resolver 
task pronoun resolver nd antecedents overt pronouns non overt pronouns pro replace pronoun antecedents 
source source parser layer 
number linguistic theories centering theory algorithms nd correct antecedents pronouns high degree bility 
designed pronoun resolver rst wanted get idea worthwhile full blown pronoun resolving engine 
simpler algorithm took hours implement 
algorithm sucient demonstrate pronoun resolution gives signi cantly better performance replaced advanced algorithm 
current algorithm pronoun resolver assumes antecedent pronoun subject sentence containing pronoun pronoun subject subject preceding sentences 
possibilities weight re ect fact possibilities equally subject current sentence weight pronoun subject subject previous sentences weights 
algorithm crude easy implement sucient signi cantly improve performance squire 
property adder deciding arguments head receive thematic roles useful determine properties arguments 
consider pair sentences plane ew mexico 
ew plane 
argument plane lls vehicle thematic role sentences subject object 
order properly assign correct thematic roles arguments know properties 
example know animate plane determine functions agent plane 
furthermore decide mexico destination assign destination thematic role 
remaining thematic roles verb takes plane ll vehicle role concrete non animate destination 
argued sentence presence preposition serves distinguish distinction sucient allow ir system assign thematic roles 
argument apply similar sentence pair plane ew 
ew 
objects sentence omitted 
property adder parser layer uses database word properties determine properties argument 
semantic phrase semantic tree looks properties phrase head adds properties semantic phrase 
currently database uses quite small extended 
property adder change weights semantic trees processes 
source source parser layer 
theta theta source source parser layer 
responsible splitting semantic phrase adjuncts arguments modi ers assigning thematic roles argument 
semantic tree maker theta set templates 
example template shown 
templates encode possible ways thematic roles assigned semantic phrase adjuncts 
templates divided semantic class describe semantic class described templates encode possible syntactic alternations semantic class 
template consists semantic tree matcher thematic ller semantic tree matcher representation small piece underspeci ed semantic tree 
structurally identical semantic tree contain variables place semantic phrases 
variable semantic tree matcher theta filler agent theme move verb noun animate noun concrete example template theta 
example represents type templates allow squire assign thematic roles semantic trees 
template speci es underspeci ed semantic tree matching template semantic tree matcher replaced full semantic tree obtained lling thematic ller variables 
parametrized set properties 
semantic tree matcher said match semantic tree set semantic phrases lled matcher variables give semantic tree 
value semantic phrase lled variable properties consistent variable 
set values ll semantic tree matcher variables called variables bindings 
thematic ller representation small piece full semantic tree 
structurally identical semantic tree contain variables place arguments contain modi ers 
thematic llers construct semantic trees replacing variables values 
set modi ers optionally added semantic tree 
process known lling thematic ller variables 
addition database templates theta maintains list possible semantic classes head may take 
example nouns take semantic class simple noun semantic classes verb get include action got camera verb got better 
list word possible semantic classes assigned weight represent relatively likelihood word ll semantic classes 
template speci es valid way assigning thematic roles semantic tree adjuncts 
particular set steps convert underspeci ed semantic phrase full semantic phrase 
find possible semantic classes underspeci ed semantic phrase head 

semantic class nd template semantic class matches underspeci ed semantic phrase 

template convert bindings template variables underspeci ed semantic phrases full semantic phrases 
fill template thematic ller values obtained step 
note step recursive entire process described repeated convert variable bindings 
recursion terminate semantic trees nite depth 
de ning semantic classes dicult aspects building theta construction set semantic classes 
great deal research supports notion words divided semantic classes successfully constructed complete consistent set semantic classes 
semantic classes test theta hand constructed described small set words 
classes designed help squire answer test questions order provide indication potential gains theta provide 
complete set semantic classes developed layer provide wide coverage bene ts 
synonymy layer important type linguistic variation prevent information retrieval system deciding sentence answers question synonymy 
example consider question answer pigs eat 
hogs feed corn 
sentence answers question set words 
way nding words synonyms information retrieval system chance nding answers 
preliminary investigation potential bene synonymy implemented simple synonymy parser layer 
layer uses table words synonyms generate equivalent sentences 
synonym table weight re ects probability synonym accurately re ect meaning original word 
order reduce chance synonymy layer generate inappropriate synonyms information semantic classes words synonyms included table 
example listed synonym action sense get synonym verb sense 
synonymy layer encounters sentence outputs sentence plus sentences obtained replacing word synonyms 
sentence weights decreased weights synonyms 
order prevent generation sentences limits may placed total acceptable decrease weight original sentence 
synonymy layer indexing corpus doing greatly increase size index 
better approach synonymy layer processing questions 
example user asks question pigs eat 
synonymy layer add questions pigs feed 
hogs eat 
hogs feed 
weights questions decreased slightly re ect fact may accurately model original question 
currently table synonyms synonymy layer small entries entered hand 
entries designed help squire answer test questions order provide indication potential gains adding full edged synonymy layer 
small table eventually replaced larger table constructed existing database synonyms wordnet 
plan extend synonymy layer allow mapping thematic roles synonyms speci ed 
example give receive listed synonyms specifying mapping thematic roles give receive agent source beneficiary agent theme theme relation maker relation maker representation shifting splitter converts semantic trees relations 
operate basic modes word extraction mode outputs single relation word semantic tree 
underspeci ed relation extraction mode outputs single relation head adjunct pair semantic tree 
semantic class head thematic role argument left unspeci ed 
full relation extraction mode outputs single relation head adjunct pair semantic class thematic role known 
relation maker operate combination modes 
example instructed extract words full relations 
database squire database consists large table relations 
relation database table contains list locations sentences containing relation 
sentence location database contains weight indicating 
see hit see john hit mary weight weight weight weight weight weight think bill weight hit bill weight weight think hit weight weight think joe weight hit bill weight weight hit weight weight location location location location location location location location location location location location location location location location database structure 
database consists table relations locations sentences containing relations 
weights associated location indicate likelihood location contains relation 
gure relations written containing head thematic role adjunct 
weight location stand actual weights locations 
strongly location associated relation 
illustrates structure database 
indexing squire indexes sentence rst uses parser convert set weighted relations 
relations pointer sentence inserted database weight relation 
process illustrated 
joe thinks bill hit source sentence john saw mary hit bill bill thinks mary hit bill john saw bill hit 
hit mary hit bill think bill think hit hit mary hit bill think joe think hit hit bill hit see john see hit hit bill hit see john see hit see hit see john hit mary think bill hit bill think hit think joe hit bill hit database database indexing 
parser convert sentence set weighted relations 
relation sentence entry added relation database specifying location sentence came 
retrieval user asks squire question rst uses parser convert set weighted relations 
weights relations re ect squire degree certainty relations relevant question 
squire looks relation database nd locations sentence contains relation 
weights locations combined weights relations generated operator 
accounts fact location relevant question location relevant relation relation relevant question 
weights divided number times relation appears corpus give higher weights common relations 
squire generated list weighted locations relation weighted locations merged 
relations independently generate location weights locations combined operator 
accounts fact location relevant question relations indicates relevant 
process retrieval shown 
weight source sentence john saw mary hit bill bill thinks mary hit bill john saw bill hit 
hit mary hit bill think bill think hit hit mary hit bill think joe think hit hit bill hit see john see hit hit bill hit see john see hit see hit see john hit mary think bill hit bill think hit think joe hit bill hit database question thinks mary hit bill think think hit hit mary hit bill database retrieval 
database rst constructed indexing relations source sentences 
squire query relation query looked database resulting locations returned ordered answer question 
weights example assume question relations weight indexed relations weight 
chapter testing performance squire system tested encyclopedia set questions animals countries 
test materials test corpus encyclopedia collection articles wide variety topics 
average article words long article length varies widely 
encyclopedia chosen consistently uses proper english sentences rich source answers common questions 
test questions squire tested set questions animals countries including questions seals eat 
squirrel monkeys eat 
lions live 
capital 
answers questions hand reading articles relevant 
average question answered separate sentences number sentences answering question varied widely ranging eighteen 
test indexes tested squire system di erent indexes constructed di erent set parser layers 
indexes explored possible combination boolean parameters pro indicates pronoun resolution layer 
syn indicates synonymy layer 
word indicates individual words extracted semantic phrases included index 
ur indicates underspeci ed relations extracted semantic phrases included index 
fr indicates full relations extracted semantic phrases included index 
note word ur fr true index empty 
test cases stemmer clause handler conjunction handler trace resolver semantic tree maker property adder relation maker parser layers 
methodology test con guration parameters rst constructed necessary indexes 
ran squire index asked question test set 
precision recall control ir system precision recall curve control ir system question rst responses recorded compared known set correct answers 
precision recall graphs constructed varying number squire responses considered 
calculated precision recall value ja jb ja jaj set sentences correctly answer question rst sentences returned squire 
note method give precision recall pairs point jaj imply jb squire returned sentence 
precision recall graphs area jaj shaded indicate data available area 
control precision recall graphs highly dependent exact test set generate 
ran test set information retrieval system uses traditional techniques perform sentence ir 
system subset strata ir engine developed jimmy lin 
precision recall curve control system shown 
results parameters interacts form resulting precision recall curves informative consider individual ects parameter curve 
examine ect parameter precision recall curves independently discuss ects interact 
ects word parameter indexing words corpus similar performing traditional ir 
shows performance compares 
squire slightly outperforms control ir system achieves precision higher 
examined squire outperforms control ir system indexes words may result di erences weighting algorithms squire control ir system 
retrieval words gives low performance performance augmented somewhat pronoun resolution synonymy layers shown 
con guration squire gives fairly low precision precision decreases gradually results relatively recall characteristics rst answers returned squire contain half correct answers 
precision recall control ir system squire pro syn word ur fr comparison control ir system squire indexing words precision recall pro syn word ur fr pro syn word ur fr precision recall curve squire pronoun resolution synonymy layers index words precision recall pro syn word ur fr pro syn word ur fr precision recall curve squire indexing underspeci ed relations 
ects ur parameter indexing underspeci ed relations corpus signi cantly increases squire precision shown 
indexing just underspeci ed relations squire achieves precision augmented pronoun resolution synonymy layers achieves precision 
high precision re ects fact matching relations reliably indicates sentence answers question 
fact squire indexes underspeci ed relations rarely returns incorrect answer returns answer 
high precision comes cost sentence relations match question answered identical word content 
precision drops quickly recall increases squire retrieved correct answers indexing just underspeci ed relations 
cost overcome indexing words addition relations 
indexing words underspeci ed relations squire achieve excellent performance high initial precision drops slowly recall increases 
shows squire performance indexing words underspeci ed relations precision recall pro syn word ur fr pro syn word ur fr pro syn word ur fr precision recall curve squire indexing words underspeci ed relations 
compares indexing individually 
ects fr parameter indexing full relations gives similar behavior indexing underspeci ed relations 
parameter setting indexing full relations indexing underspeci ed relations gives equivalent performance 
addition indexing types relations gives equivalent performance 
compares full relations underspeci ed relations number parameter settings 
failure full relations improve performance squire probably stems sources 
squire algorithm deriving semantic classes relation types relatively primitive may reliable 
second fundamental reason full relations signi cantly improve squire performance 
relation type primary additional information distinguishes full relations underspeci ed relations unnecessary task information retrieval 
see consider sentence elephants live africa 
composed relations precision recall pro syn word ur fr pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr pro syn word ur fr comparison indexing underspeci ed relations indexing tagged relations semantic head semantic class adjunct relation type live location verb elephant agent live location verb africa location relation types explicitly listed derived independent semantic constraints exceptional circumstances africa agent verb live elephant location 
corpus question encounter contain head adjunct pairs di erent relation types 
relation types give additional information decide relations match 
type relation reliably predicted head argument nding relation type improve ir performance 
sentences john likes mary arguments easily exchanged full relations improve performance 
research necessary determine type relation predicted head argument 
research give better indication constructing full relations worthwhile 
ects pro parameter pronoun resolution layer increases squire precision recall regardless parameter settings 
ect parser layer squire performance number parameter settings shown 
uniform increase performance expected pronoun resolution replaces pronouns matching useful values 
allows squire match sentences wouldn indexing words full relations underspeci ed relations 
shown pro parameter stronger ect full relations underspeci ed relations indexed words indexed 
may result decrease weight assigning value pronoun 
decrease stronger ect word ir relation ir individual words common individual relations 
sentences words higher weights give precision recall pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr precision recall curves illustrating ect pronoun resolution parser layer precision recall pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr precision recall pro syn word ur fr pro syn word ur fr precision recall curves illustrating ect synonymy layer relations indexed better matches question 
ects syn parameter synonymy layer increases squire precision recall full relations underspeci ed relations indexed shown 
ect nearly dramatic pronoun resolution layer 
fact synonymy layer slightly decreases squire performance words indexed shown 
fact synonymy layer signi cantly improve performance re ection fact algorithms layer advanced reliably nd useful synonyms 
advanced algorithms allow synonymy layer yield signi cant improvements performance 
precision recall pro syn word ur fr pro syn word ur fr precision recall curves illustrating ect synonymy layer words indexed possible obstacle synonymy layer generation inappropriate synonyms 
generation leads squire retrieve articles relevant simply contain correct set synonyms 
problem reduced associating weights synonyms indicate correctly represent original word 
compares performance squire semantic ir techniques control system 
squire signi cantly performs traditional ir system 
parameters provide greatest bene squire performance underspeci ed relation indexing word indexing pronoun resolution 
underspeci ed relation indexing provides squire high precision answers question relations matched sentence 
word indexing provides squire fall back mechanism sentences relations match exhausted 
gives precision gentle drop recall increases 
precision recall control ir system pro syn word ur fr comparison performance squire features enabled performance control ir system pronoun resolution allows squire match sentences explicitly contain concepts discuss 
contrast full relation indexing synonymy detection signi cantly improve squire performance 
lack improvement may caused inadequate implementations may stem part fundamental limitations techniques 
chapter directions squire shown semantic techniques far perform traditional techniques task sentence level information retrieval 
great deal room improved performance research necessary explore potential semantic ir techniques 
squire layered parsing architecture provides useful platform exploration 
improving existing parser layers parser layers currently squire primitive techniques provide accurate results 
techniques layers rapidly developed potential tested 
layers demonstrated usefulness updated advanced techniques 
particular improvements algorithms parser layers stemmer currently large pre generated table stems words 
result unable stem novel words 
stemmer re implemented rule probabilistic techniques combination 
pronoun resolver currently assumes pronoun refers subject current sentence past sentences 
currently check matching features gender number 
clearly vast cation pronoun behavior 
algorithms pronoun resolver replaced accurate techniques derived centering theory 
synonymy layer currently contains handful synonyms allow user specify synonyms di erent semantic classes 
synonymy layer updated existing source wordnet derive set synonyms 
updated allow synonyms di erent semantic classes 
set semantic classes employed theta needs signi cant improvement truly useful parser layer 
creating new parser layers new semantic processing techniques easily incorporated squire layered architecture simply constructing new parser layers 
new parser layer constructed ects squire performance easily tested 
interactions new layer existing layers explored 
example parser layer constructed simple semantic implicatures 
semantic implicatures encoded form rules 
example consider rule gave implies received rule squire decide sentence mary gave john apple answers question john receive 
addition rules improve squire performance speci domains hindering performance outside domains 
fundamental changes squire squire architecture allows rapid prototyping testing semantic ir techniques fundamental problems current representations 
problems arise fact tree structured representations treated atomic units 
piece tree structured representation ambiguous structure duplicated possible interpretation 
especially problematic sentences ambiguous multiple locations 
consider sentence wanted give didn know want 
sentence contains pronouns 
pronoun resolver currently assigns possible values pronoun convert sentence possible sentences 
sentences processed parser layers 
clearly great source ineciency squire 
problem goes mere question eciency 
cases inability assign di erent weights di erent parts tree causes fundamental problems 
consider sentence john likes mary ann 
currently sentence broken separate sentences john likes mary 
john likes ann 
unclear weights sentences 
currently squire assigns weight sentence derived 
means broken relations relation john likes words john higher weight squire just indexing sentences 
especially problematic highly conjunctive sentences feed animals monkeys snakes sheep dogs 
sentence word feed weighted times strongly 
result sentence returned response question animal feeds 
solution assign derived sentences half weight original sentence 
give john likes proper weight result likes mary likes ann receiving weights small 
way circumvent problem change squire representations allow individual parts tree structured representation multiple possible values weight 
bibliography andrews 
development fast con ation algorithm english 
phd thesis university cambridge 
avi th van der weide koster van 
evaluation linguistically motivated indexing schemes 
technical report csir university nijmegen netherlands december 
bookstein 
pertinent document retrieved analysis swets model 
information processing management 
brennan friedman pollard 
centering approach pronouns 
proceedings conference acl 
eric brill 
simple rule part speech tagger 
proceedings third conference applied natural language processing pages trento italy 
sergey brin lawrence page 
anatomy large scale hypertextual web search engine 
proceedings th international world wide web conference www brisbane australia 
brookes 
measure information retrieval ectiveness proposed swets 
journal documentation 
buckley salton allan 
ect adding relevance information relevance feedback environment 
proceedings th annual inter national acm sigir research development information retrieval pages dublin ireland 
google homepage 
www google com 
barbara grosz sidner 
attention intentions structure discourse 
computational linguistics 

government binding theory 
blackwell publishers cambridge ma edition 
benjamin han rohini srihari 
text retrieval object vectors 
technical report state university new york bu alo 
irene heim angelika 
semantics generative grammar 
blackwell publishers ma 
jones 
role nlp text retrieval 
strzalkowski editor natural language information retrieval 
kluwer academic 
boris katz beth levin 
exploiting lexical regularities designing natural language systems 
proceedings th international conference computational linguistics coling budapest hungary 
angelika 
severing external argument verb 
editors phrase structure lexicon 
kluwer academic publishers 
beth levin 
english verb classes alternations preliminary investigation 
university chicago press chicago il 
jimmy lin 
strata system natural language information access 
master engineering thesis proposal 
william grady michael mark linguistics 
st martin press new york ny 
parsons 
events semantics english chapter 
mit press cambridge ma 
robertson 
parametric description retrieval tests part measures 
journal documentation 
salton editor 
smart retrieval system experiments automatic document processing 
prentice hall 
smeaton 
nlp nlp resources information retrieval tasks 
strzalkowski editor natural language information retrieval 
kluwer academic 
swets 
information retrieval systems 
science 
vivien 
language normal processing 
sage publications london uk 
van rijsbergen 
information retrieval 
butterworths london uk 
ellen voorhees 
wordnet text retrieval 
fellbaum editor wordnet electronic lexical database chapter 
mit press cambridge ma 
encyclopedia homepage 
www com 

