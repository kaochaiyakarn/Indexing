loglog counting large cardinalities marianne durand philippe flajolet 
auxiliary memory smaller size loglog algorithm possible estimate single pass percents number di erent words shakespeare works 
general loglog algorithm small bytes auxiliary memory order estimate single pass number distinct elements cardinality le accuracy order small bytes order count cardinalities till nmax comprise log log nmax bits cardinalities range billions determined kilobytes memory 
basic version loglog algorithm validated complete analysis 
optimized version super loglog engineered tested real life data 
algorithm optimally 

problem addressed note determining number distinct elements called cardinality large le 
problem arises areas data mining database query optimization analysis trac routers 
contexts data may large core memory massive stored huge continuous ow data packets 
instance estan report traces packet headers produced rate gb hour compressed data collected trying trace worm code red august necessary count number distinct sources passing link 
propose loglog algorithm estimates cardinalities small amount auxiliary memory memory units memory unit small byte comprises close log log nmax bits nmax priori upperbound cardinalities 
estimate sense mean values asymptotically unbiased relative accuracy estimate measured standard deviation close best version algorithm super loglog 
instance estimating cardinalities till nmax di erent records achieved memory units bits corresponds kilobytes auxiliary storage total error observed typically 
algorithm operates incrementally single pass applied data ows provides line estimates available time 
advantage taken low memory consumption order gather simultaneously large number statistics huge heterogeneous data sets 
loglog algorithm fully distributed parallelized optimum speed minimal interprocess communication 
embedded hardware design involve strictly minimal resources 
motivations 
traditional application cardinality estimates database query optimization 
complex query typically involves variety settheoretic operations projections joints 
context knowing free cardinalities associated sets provides valuable guide selecting ecient processing strategy best suited data hand 
date april 
submitted european symposium algorithms esa 
marianne durand philippe flajolet problem simple merging large les duplicates treated various combinations sorting straight merging ltering duplicates les cost function possible strategy determined number records cardinality le 
probabilistic estimation algorithms nd large data recording warehousing environments 
goal provide approximate response time orders magnitude computing exact answer require see description aqua project gibbons 
analysis trac routers mentioned bene ts greatly cardinality estimators exposed estan 
certain types attacks denial service port scans high counts certain characteristic events level routers 
situations usually resource available store search line large number events take place relatively small time window 
probabilistic counting algorithms algorithms nal answer cardinality large set small tolerance quality answer acceptable 
palmer describe algorithms extensive connectivity analysis internet topology 
instance tasks needed determine distance number pairs nodes distance internet graph 
graph studied close nodes number pairs considered costly list operations performed exact algorithms 
contrast algorithm suboptimal coupled adapted probabilistic counting techniques provide reliable estimates 
way authors able extract extensive metric information internet graph keeping reduced collection data reside core memory 
report reduction run time factor 
algorithms 
loglog algorithm probabilistic 
similar algorithms rst idea appeal hashing function order randomize data bring form resembles random uniform independent binary data 
hashed data set distilled cardinality estimates algorithm 
various algorithms perform various tests hashed data set compare observables probabilistic analysis predicts nally deduce plausible value parameter interest 
case loglog counting observable linked cardinality totally independent nature replications ordering data le information available 
depending context collisions due hashing neglected ect estimated corrected 
whang zanden taylor developed linear counting distributes hashed values buckets keeps bitmap indicating buckets hit 
observing number hits table leads estimate cardinality 
number buckets smaller cardinalities estimated say nmax algorithm space complexity nmax typically nmax bits storage 
linear space drawback large cardinalities multiple counts limited hardware rule 
estan varghese fisk devised multiscale version principle hierarchical collection small windows bitmap kept 
simulation data multiresolution bitmap algorithm appears loglog counting large cardinalities 
loglog algorithm shakespeare works table small bytes bits 
estimate number distinct words run true answer represents relative error 
accurate probabilistic counting discussed amount memory 
best algorithm ows routers adaptive bitmap reported times ecient probabilistic counting multiresolution bitmap disadvantage universal de nite statistical assumptions stationarity regarding data input algorithm 
recommend thorough engineering discussion 
closer probabilistic counting algorithm flajolet martin :10.1.1.12.7100
uses certain observable excellent statistical properties relatively costly maintain terms storage 
probabilistic counting estimates cardinalities error close table words size log nmax possible idea sampling 
may may lter hashed values selectivity store exactly duplicates data items ltered return estimate times corresponding cardinality 
wegner adaptive sampling described analysed elegant way maintain dynamically varying values words memory word refers space needed data item accuracy ecient probabilistic counting 
insightful complexity theoretic discussion approximate counting provided alon matias szegedy 
authors discuss class frequency moments statistics includes statistics 
loglog algorithm principles evoke intersection earlier contrary develop complete eminently practical algorithmic solution provide precise analysis including bias correction error risk evaluation complete dimensioning rules 
estimate loglog algorithm outperforms earlier probabilistic counting algorithm similarly performing multiresolution bitmap factor replaces words bits small bytes typically bits observable slightly higher dispersion algorithms expressed formul loglog super loglog 
places algorithm category adaptive bitmap 
compared adaptive bitmap loglog algorithm great advantage universal assumptions statistical regularity data 
believe loglog improved version super loglog best general purpose algorithmic solution currently known problem estimating large cardinalities 
marianne durand philippe flajolet algorithm loglog multiset hashed values initialise rank rst bit left 
set hb 
value rst bits base set max 
return mm cardinality estimate 

principle basic loglog algorithm 

basic loglog algorithm computing practice deals multiset data items belonging discrete universe instance case natural text may set alphabetic strings length double represented bits 
multiset elements problem estimate cardinality number distinct elements comprises 
shall assume hash function available transforms elements suciently long binary strings way bits composing hashed value closely resemble random uniform independent bits 
pragmatic attitude justi ed knuth writes theoretically impossible de ne hash function creates random data non random data actual les 
practice dicult produce pretty imitation random data 
formalize basic problem follows 
take universe data endowed uniform product probability distribution 
ideal multiset cardinality random object produced rst drawing sequence independently random replicating elements arbitrary way nally applying arbitrary permutation 
user provided extremely large ideal multiset goal estimate unknown value small computational cost 
information available statistical assumption regarding behaviour replicator shu er daemon 
fact consider nite data convenient abstraction stage discuss ect needed adjustments section 
basic idea consists scanning observing patterns form occur hashed records 
string denote position rst bit 


clearly expect distinct elements value equal words quantity max reasonably hoped provide rough indication value log observable sense totally independent order theoretically inclined reader may prefer draw random family universal hash functions see general discussion speci 
loglog counting large cardinalities replication structure multiset fact probabilistic terms quantity precisely distributed way plus maximum independent geometric variables parameter extensively researched subject see 
turns estimates log additive bias standard deviation 
sense observed value estimates logarithmically binary orders magnitude 
notice expectation nite fact estimate idea consists separating elements groups called buckets design parameter 
easily done rst bits representing binary index bucket 
compute parameter bucket discarding rst bits 
random value parameter bucket number arithmetic mean legitimately expected approximate log plus additive bias 
estimate returned loglog algorithm accordingly mm constant comes analysis log dt precisely corrects systematic bias asymptotic limit 
may hope greater concentration estimates better accuracy result averaging values 
main characteristics algorithm summarized theorem 
letters denote expectation variance subscript indicates cardinality underlying random multiset 
theorem 
consider basic loglog algorithm applied ideal multiset unknown cardinality estimated value cardinality returned algorithm 
estimate asymptotically unbiased sense ii standard error de ned vn satis es vn log summary apart completely negligible uctuations amplitude algorithm provides asymptotically valid estimator standard error measures mean quadratic sense proportion deviations expected closely approximated formula standard error denote asymptotic expansions usual mathematical sense reserve informal approximately equal 
marianne durand philippe flajolet 
distribution observed register values pi le 
left distribution bucket register 
right 
instance give standard error respectively 
gures compatible observed shakespeare data 
observe log euler constant practical implementations replaced detectable bias soon say 
proof theorem occupy section 

basic analysis note number distinct values data set denoted loglog algorithm provides estimator unknown value rst provide formul expectation variance asymptotic analysis performed subsection introduces poisson model unknown cardinality allowed vary poisson law subsection shows poisson model asymptotically equivalent xed model need 
expected value estimator asymptotically minute uctuations 
establishes asymptotically unbiased character algorithm asserted theorem 
standard deviation estimator proved order proportionality coecient providing value standard error accuracy algorithm asserted ii theorem 
start examining happens bucket receives elements 
random variable recall maximum random variables independent geometrically distributed consequently probability distribution characterized bivariate exponential generating function family probability distributions varies loglog counting large cardinalities shown simple calculation 
starting point analysis expression terms mean variance unnormalized version estimator expression representing coecient power series state lemma 
expected value variance estimator mn vn proof 
multinomial convolution relations corresponding mth powers generating functions imply probability generating function 
multinomials enumerate ways distributing elements buckets 
expressions rst second moment obtained substituting 

proving theorem reduced estimating asymptotically quantities 


subsection problem computing expected value variance 
way calculations take advantage powerful properties mellin transform 
subsection dedicated results obtained 
poisson law rate law random variable class probabilistic models indexed integers means considering model chosen poisson law rate 
poisson model large parameter predominantly mixture models vicinity poison law concentrated near mean expect number circumstances properties xed model mn re ected corresponding properties poisson model taken rate useful feature expressions moments probabilities poisson model closely related exponential generating functions xed models 
owes fact fn exponential generating function expectations parameter quantity fn 
gives corresponding expectation poisson model 
way sees quantities en mg vn 
mg 
respectively mean variance cardinality underlying multiset obeys poisson law rate marianne durand philippe flajolet lemma 
poisson mean variance en vn satisfy en log 
vn log log 
bounded proof crucially relies mellin transform de ned real function complex function dt particular transform gamma function 
major properties mellin transform follows correspondence asymptotic properties original function singularities transforms ii harmonic sums de ned sums form transform factorizes 

conjunction properties renders possible analysis fairly intricate combinatorial sums see extensive survey szpankowski book applications analysis algorithms 
property results mellin inversion formula residue theorem property ii re ects action mellin transforms rescaled functions 
proof 
rewrite quantities en ma vn harmonic sums results expression equation 
mellin transform consequence action mellin transform harmonic sums nds expectation 
fundamental strip strip integral giving transform converges absolutely mi 
singularities vertical line located mod log 
singularities induces contribution asymptotic expansion 
main contribution arises singularity located real axis 
near log mellin transfer theorem gives corresponding contribution ax asymptotic expansion nity 
non real singularities located ik log local expansions ak ak ik log log loglog counting large cardinalities singularities adds contribution asymptotic form ik log fast decrease function vertical line implies constants ak small 
instance log 
log 
consequence value en ma asymptotic ma nn uctuation amplitude proves mean value estimate 
variance 
variance observe fundamental strip mi 
major pole holds log contribution singularity bx neglecting tiny uctuations mellin transfer theorem shows bx variance estimate direct consequence 


asymptotic forms rst moments loglog estimator transferred back poisson model xed model underlies theorem 
process involved known 
various options discussed chapter szpankowski book 
choose method called analytic jacquet szpankowski underlying engine saddle point method applied cauchy integrals see 
essence values exponential generating function large arguments closely related asymptotic form coe cients provided generating function decays fast away positive real axis complex plane 
lemma 
rst moments loglog estimator asymptotically equivalent poisson xed model en vn vn proof 
de ne cone fz arg zj basic lemma rephrased expected value follows 
assume exists inside cone holds jzj outside cone holds jzj 
zn en generating function rewrites 
condition clearly satis ed 
second condition observe equivalently exists 
proof variance entirely similar 
conclude proof theorem 
unnormalized estimator grows lemmas 
normalized estimator mz asymptotically unbiased 
standard error neglecting small uctuations asymptotic virtue lemmas fluctuations tiny values inherent problem 
completely set statistical uctuations analysis intrinsically non elementary 
marianne durand philippe flajolet 
quantity displayed precisely notations theorem 
easy numerical calculations straight asymptotic analysis conclude evaluations stated 

space requirements correctness absence bias accuracy basic loglog algorithm established remains see performs promised consumes log log bits storage counts till needed form section loglog algorithm operates potentially unbounded integer registers consumes 
call restricted algorithm registers bits store integer 
state shallow result meant phrase mathematically log log property basic space complexity theorem 
function tends nity arbitrarily slowly consider function log log restricted algorithm loglog algorithm provide output probability tending tends nity 
auxiliary tables maintained algorithm comprise small bytes size 
words total space required algorithm order count till log log denominator unnecessary kept consistency developments 
hashing function needs hash values original data universe exactly log bits 
observe discrepancy value restricted algorithm automatically provides right answer values proof 
standard properties multinomial distribution probability bucket receives elements exponentially small 
cases discarded 
probability single bucket register value exceeds 
consequently probability failure bounded 
quantity closely approximated 
probability failure decreases faster negative power assume instance wish count cardinalities till accuracy 
theorem adopt bucket visited roughly times 
log log 
adopt register size counting algorithm exhibiting log log feature di erent context morris approximate counting analysed 
loglog counting large cardinalities bits value 
applying upperbound shows restriction little incidence result probability discrepancy lower 
summary basic loglog counting algorithm possible estimate cardinalities till standard error registers bits table bytes total 

algorithmic engineering section describe concrete implementation loglog algorithm incorporates probabilistic principles seen previous sections 
time propose optimization bene cial ects increases extra cost accuracy results decreases dispersion estimates mean value ii allows smaller register values improving storage utilization algorithm ect length restriction discussed section 
fundamental probability distribution value register bucket receives elements 
maximum geometric random variables mean close log tails distribution exponential relatively soft holds log estimate returned involves exponential arithmetic mean bucket registers exceptional values may distort estimate produced algorithm tame data induce ect 
altogether phenomenon lies origin natural dispersion estimates produced algorithm places limit accuracy cardinality estimates 
simple remedy situation consists truncation truncation rule 
collecting register values order produce nal estimate retain mc smallest values discard rest 
real number producing near optimal results 
mean registers computed estimate returned indicates truncated sum 
modi ed constant ensures algorithm remains unbiased 
truncation rule applied accuracy increase 
empirically determined formula standard error truncation rule employed 
serendipitous consequence technique larger values registers play ole nal estimate 
consequently length restrictions sense section pushed considerably 
instance table maximum value registers taken account restriction rule simulations random data log empirical studies justify fact register values may value dlog detectable ect 
words may freely combine algorithm restriction follows addition correction factor calculated principles section easily built algorithm order compensate small bias induced restriction marianne durand philippe flajolet 
evolution estimate divided current value provided super loglog shakespeare works left words right pairs consecutive words 
standard error 
restriction rule 
register values interval log nmax instance data section value encoded bits sucient 
probability length restriction ects estimate algorithm drops tremendously 
fact 
combining basic loglog counting algorithm truncation rule restriction rule yields super loglog algorithm estimates cardinalities standard error small bytes 
small byte size log log nmax bits maximum cardinalities nmax length hash function collisions 
length hash function bits produce guided previous considerations 
log bits reserved bucketing bound register values large quantity 
accordingly value satisfy log log nmax case value close adopted say ect hashing collisions compensated 
achieved inverting function gives expected value number collisions hash table see analogous discussion 
estimator changed log mm detectable degradation performance results modi cation estimator function safely cases 
loglog counting large cardinalities 
frequency estimates returned super loglog algorithm corresponding standard error runs random data 
risk analysis 
pure loglog algorithm estimate empirical mean random variables approximately identically distributed statistical uctuations bucket sizes 
proved quantity numerically closely approximated gaussian 
consequently estimate returned roughly gaussian rate exponentially decaying tails 
principle full analysis feasible 
similar property expected super loglog algorithm principles 
nearly gaussian character con rmed 
consequence obtain pragmatic fact 
estimate exact value cardinality respectively cases 
topic don space discuss correction small nonlinearities feasible 

super loglog performs quite practice con rmed data simulations log random shall pi note 
refers standard error estimated extensive simulations compared empirical formula lines display absolute value relative error measured 
random refers averages runs data single runs pi formed 
records consecutive digit slices rst shall shakespeare works 
name says 
demonstrate loglog algorithm optimized version performs quite 
table grossly summarizes accuracy measured standard error relation storage major methods known 
note di erent algorithms operate di erent memory units 
marianne durand philippe flajolet algorithm std 
err 
memory units adaptive sampling records bit words kbytes prob 
counting words bits kbytes 
bitmap bits kbytes loglog small bytes bits kbytes super loglog small bytes bits kbytes column rough indication storage requirement accuracy le cardinality 
formula multiresolution bitmap crude extrapolation data 
distributing parallelizing algorithm trivial suces di erent processors sharing hash function operate di erent slices data max merge tables registers 
optimal speed clearly attained interprocess communication limited just kilobytes 
requirements embedded hardware design absolutely minimal addressing register comparisons integer addition needed 

partly supported european union emerging technologies programme fifth framework alcom ft project ist 
authors grateful cristian estan george varghese liberally sharing ideas preliminary versions works 
alon matias szegedy space complexity approximating frequency moments 
journal computer system sciences 
estan varghese new directions trac measurement accounting 
proceedings sigcomm acm press 
ucsd technical report cs february available electronically 
estan varghese fisk bitmap algorithms counting active ows high speed links 
technical report cs ucsd mar 
flajolet approximate counting detailed analysis 
bit 
flajolet adaptive sampling 
computing 
flajolet dumas mellin transforms asymptotics harmonic sums 
theoretical computer science 
flajolet martin probabilistic counting algorithms data base applications 
journal computer system sciences 
gibbons poosala acharya bartal matias muthukrishnan ramaswamy suel aqua system techniques approximate query answering 
tech 
report bell laboratories murray hill new jersey feb 
jacquet szpankowski analytical applications 
theoretical computer science 
knuth art computer programming nd ed vol 
sorting searching 
addison wesley 
morris counting large numbers events small registers 
communications acm 
motwani raghavan randomized algorithms 
cambridge university press 
combinatorics geometrically distributed random variables left right maxima 
discrete mathematics 
szpankowski average case analysis algorithms sequences 
john wiley new york 
whang zanden taylor linear time probabilistic counting algorithm database applications 
tods 
address algorithms project inria rocquencourt le chesnay france 
