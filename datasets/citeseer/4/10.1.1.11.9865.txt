stanford interactive workspaces framework physical graphical user interface prototyping jan borchers meredith joshua tyler armando fox computer science department stanford university overview smart homes created evolutionarily adding technologies existing home developed single occasion building new home scratch 
incremental addition technology requires highly flexible infrastructure accommodate extensions legacy systems requiring extensive rewiring hardware extensive reconfiguration software level 
stanford istuff interactive stuff provides example hardware interface abstraction technique enables quick customization reconfiguration smart home solutions 
istuff gains power combination stanford interactive room operating system iros creates flexible robust software framework allows custom legacy applications communicate user interface devices dynamically configurable way 
stanford interactive room iroom see residential environment characteristics smart home wide array advanced user interface technologies abundant computation power infrastructure coordinate resources information iroom interactive workspaces project please visit stanford edu 
result aspects iroom environment strong implications intuitively translated smart homes 
particular rapid fluid development physical user interfaces istuff iros demonstrated iroom equally powerful concept designing living smart homes 
focusing details istuff describe software infrastructure considerations went designing infrastructure 

stanford iroom contains wireless keyboard visible table touch sensitive non touch sensitive tabletop display custom built opengl hi res graphic mural 
room networked ieee wireless ethernet 
hi res mural tabletop hardware shelf operating systems unmodified windows various flavors linux software written user level 
iros application coordination ubiquitous computing environments software requirements rapid integration evolution ability continually integrate new technologies handle failures non catastrophic manner essential smart homes related ubiquitous computing environments 
experience working stanford iroom enables identify important requirements software infrastructure ubiquitous computing environment heterogeneity software infrastructure accommodate tremendous variety devices widely ranging capabilities 
implies lightweight assumptions client devices effort port necessary software components new devices small 
robustness software system robust transient partial failures particular components 
failures cascade failure unexpected behavior component able infect rest working system 
evolvability application program interface api provided sufficiently flexible maintain forward backward compatibility technology evolves 
example possible integrate new type pointing device provides higher resolution additional features older devices breaking compatibility older devices existing applications 
compatibility easy leverage legacy applications technologies building blocks 
example web technologies user interface ui prototyping accessing remote applications bringing rich content small devices desktop productivity applications microsoft powerpoint contain elements rich content display server 
furthermore technology smart spaces tends time today new hardware software rapidly tomorrow legacy hardware software problem go away 
prototype meta operating system iros interactive room operating system meets criteria 
call meta os consists entirely user level code running unmodified commodity operating systems connecting various iroom entities system systems 
discuss main principles iros give reader understanding facilitates building new behaviors istuff 
iros application coordination frame discussion context stanford iroom prototype environment constructed believe representative important class ubiquitous computing installations 
iroom intended dedicated technology enhanced space people come collaborative problem solving meetings design reviews brainstorming applications prototyped deployed driven scenarios 
basis iros application coordination 
original formulation gelernter carriero coordination languages express interaction autonomous processes computation languages express calculations processes proceed 
example procedure calls special case caller process suspends pending response callee 
carriero argue computation coordination orthogonal benefits expressing coordination separate general purpose coordination language problem constraint integrating existing diverse components heterogeneous platforms leads directly separating computation existing applications coordination behaviors linked 
iros coordination layer called event heap 
name chosen reflect functionality viewed analogous traditional event queue single computer operating systems 
event heap enhanced version tuplespace generalpurpose coordination languages identified gelernter carriero 
tuple collection ordered fields tuplespace blackboard visible participants particular scope case software entities iroom entity post tuple entity retrieve subscribe notification new tuples matching wildcard matching template 
identified important advantages coordination approach rendezvous rmi jini simple client server techniques done tcl tk approaches advantages include improved robustness due decoupling communicating entities rapid integration new platforms due extremely lightweight client api support major programming languages including html posting retrieving tuples ability accommodate legacy applications simple hooks written visual basic java connect existing productivity web desktop applications iroom 
criterion making new device application iroom aware ability post subscribe tuples event heap create web pages device enters room running web browser minimally iroom aware 
fly user interface generation iros event heap core iros built iros services provide higher level functionality 
notably interface framework generate uis dynamically virtually iroom entity virtually iroom aware device 
extends previous important ways including integration service discovery robustness ability create uis ranging fully custom main role scenarios serve abstraction layer devices uis 
briefly follows controllable entities beacon presence depositing self expiring advertisements event heap 
advertisements contain description service controllable behaviors methods parameters expressed sdl simple xml markup language developed 
device capable displaying ui web browser handheld request ui specific service query interface manager tracks advertisements request list available services 
initial request request response technology available client visiting known dynamically generated web page possibility 
desired ui created feeding sdl contained service advertisement interface generators 
may local remote downloaded demand web may specialized service device 
interface manager determines policy selecting generator 
part process includes integrating contextual information separate context database relevant workspace making static ui description portable installations 
example workspace large wall mounted displays preferable ui refer left center right generic names screen screen screen see 
note step client device service need establish direct connection client server style 
robust failure 
need able name lower level names network addresses tuple matching mechanism application level names attributes service retrieve advertisements devices type 
service controlled variety different devices knowing advance types devices involved sdl description processed quite different uis different interface generators 
ability insulate service ui ways critical rapid prototyping new ui behaviors 
istuff builds ability uses indirection enable rapid prototyping physical uis 

screen projector control uis customized various devices incorporating installation specific information context database 
fragment projector html interface rendered web browser 
ui generated html generator 
symbolic names iroom server stored context database appear sdl markup machine machine 
room control applet room generated java swing ui generator 
geometry information drawing widgets comes context database generator installation specific 
users drag drop web pages screen widgets cause documents appear corresponding room screens 
ui different geometry information different room context database 
palm ui rendered modal lacks drag drop feature 
istuff physical devices ubiquitous computing istuff motivation definition istuff toolbox wireless platform independent physical user interface components designed leverage iros infrastructure allows custom designed physical devices send receive arbitrary commands devices machines applications iroom 
capability connect physical actuator software service fly appeal users ubiquitous computing environment smart home 
residents ability flexibly set sensors actuators home designers homes able prototype test various configurations technology final installation 
characteristics crucial istuff completely autonomous packaging wireless connection rest room battery powered operation seamless integration devices iros existing available cross platform ubiquitous computing environment devices machines services talk pass information control easy configuration mappings devices application functionality customizing application source code just updating function mappings web interface simple affordable circuitry 
various research projects looked physical devices past ishii tangible bits project introduced notion bridging world bits atoms user interfaces greenberg represent advanced novel project physical widgets 
designed isolation single computer tethered multiple platforms 
device classification implementation range potentially useful user interface components unlimited really useful devices go standard toolbox identified time 
ideas devices categorized input output devices amount information handle examples bit input devices push buttons toggle buttons binary sensors light gates multiple bit discrete input devices rotary switches digital joysticks packaged complex readers deliver identification data result example barcode readers fingerprint scanners near continuous input devices sliders analog joysticks various sensors light heat force location motion acceleration streaming input devices microphones small cameras bit output devices control status light power multiple bit discrete output devices led arrays lcd displays near continuous output devices motors dials streaming output devices speakers small screens 
far students lab designed built types prototype istuff devices spanning categories 
hardware designs proven surprisingly powerful proofs concept simple reproduced easily see sidebar 
implementation details sidebar transmitting devices buttons sliders contain ming tx mhz fm rf transmitter ht encoder send bits data receiver board contains ming re rf receiver ht decoder 
receiver board sends data pc parallel usb port listener program running pc posts appropriate tuple id received iroom event heap 
receiving devices leds opposite manner listener program receives event intended istuff sends target device id parallel usb port rf transmitter 
data received wirelessly rf receiver device resulting desired behavior 
different architecture rf technology employed sufficient handling streaming media 
listener program pc waits speaker targeted events response streams sound files fm transmitter small portable fm radio broadcasts 
inch 
various types istuff created far buttons speakers 
developed successful setups istuff stanford iroom new users coming iroom familiar environment need entry point learn room features 
istuff configuration web interface programmed ibutton send events turn lights room switch large touch sensitive displays interactive table display bring web room smartboard show overview document directories various user groups second smartboard open brainstorming sketching application third smartboard 
worth setting iroom starter took fifteen minutes configuration web interface 
provide inconvenient way issue right clicks touch sensitive board input users press right click mode key tray front board touch board interpreted 
study having right click modifier closer actual input location board interaction fluid built specialized ibutton shaped fit inside hollow pen prototype plastic product design student model shop 
button pressed sends event event heap received listener application running computer associated smartboard 
listener tells smartboard driver interpret tap right click 
users simply press button pen tap issue right click 
conveniently control multi screen version classic video game pong described 
extended provide verbal feedback user actions pong game started means text speech program applications simply send event containing ascii text spoken 
experimenting provide feedback status devices room 
discussed event heap core component iroom operating system possible decouple sender receiver contents message 
architecture allows great flexibility prototyping interfaces instance application controlled traditional mouse graphical slider widget long devices sends event type event containing new application listening 

system architecture istuff 
green actual physical devices blue couple examples applications istuff iros event heap 
istuff server translates wireless device transmissions software events consumed interested applications 
example potentiometer moved sends radio signal received server turned 
event posted event heap subsequently received application listening 
iroom demonstrated utility combination event heap software istuff hardware developing multi machine version video game players control vertical position virtual contact virtual bouncing ball 
game written listen events contained information new position target 
input method generate event control position 
mapped standard mouse touch panel input istuff widget drive 
application physical source events irrelevant 
way decoupled link hardware software components physical user interface 
reconfigurable dynamically web interface lets users enter arbitrary events send specific button pressed 
intend provide flexible interactive mechanism mapping applications events istuff fly service discovery tools iros described section 
result general virtual patch panel allows users map events services map conversions related event types 
istuff makers send receive types events button events slider events concern exact names events desired user applications application developers send receive types events event prior knowledge possible type device user choose interface application 
istuff event heap combination direct applications smart home incrementally acquires new technologies 
residents acquire new device wish reconfigure existing devices simply utility patch panel map event type sent new device event type expected target application 
smart home applications istuff originally designed iroom space meetings brainstorming design sessions mind technology infrastructure useful smart home environment 
particular ability create task oriented user interfaces interfaces reflecting user task opposed technical features appliance istuff particularly compelling smart home applications dynamic task remote controls currently user wants watch movie dvd need remote controls control dvd player control home surround sound system third control television set user get dim lights 
today device event heap architecture allows decoupling devices messages able istuff construct task remote controls 
gathering appropriate istuff components patch panel application ensure appropriate istuff events converted events appropriate target devices dvd player speakers tv set lights user construct task oriented controller device controls appliances relevant viewing dvd movie regardless physical connectivity 
analogous manner dynamically create gui controllers household appliances transforming pda task universal remote control 
monitoring house state user way door smart home head 
display near door shows status devices home instrumented leave stove 
lights bedroom 
thermostat high 
burglar alarm 
setting house state user create ibutton similar device set house state leaves everyday mount button door 
configure lower thermostat switch lights activate security system example 
type button analogous start iroom button mentioned earlier 
smart home design architects interior designers istuff fine tune placement controls speakers interactive elements smart home 
researchers technology developers istuff quickly prototype test products putting market addition smart homes 
discussion summary technology advancements original vision ubiquitous computing feasible 
software framework integrates heterogeneous technologies dynamic robust legacy aware fashion provides seamless user experience missing 
created stanford iroom physical prototypical space ubiquitous computing scenarios constant years address need 
iros iroom operating system runs meta os coordinate various applications room 
iros tuplespace model leads aforementioned desired characteristics 
failure robustness better average induced real faults 
ability leverage extend existing applications critical rapid prototyping research 
istuff project builds iros tackles problem customizing prototyping physical user interfaces ubiquitous computing scenarios smart homes arduous process 
offers toolbox wireless physical user interface components combined quickly create nonstandard user interfaces experimentation 
iros infrastructure proven invaluable making software integration custom devices straightforward 
flexibility technology developed stanford iroom potential benefits smart home scenario example enabling users quickly create customized task interface system home 
hope approach building software hardware framework ubiquitous computing environments various building blocks implemented deployed general useful find value 
information stanford interactive workspaces project access istuff documentation download iros software please visit project homepage stanford edu 
authors maureen stone michael hans anderson jeff contributions foundation www org financial support 
keith edwards rebecca grinter 
home ubiquitous computing challenges 
proceedings ubicomp atlanta ga pp 

gelernter carriero coordination languages significance communications acm vol 
number february 
saul greenberg 
easy development physical interfaces physical widgets 
proceedings uist th annual acm symposium user interface software technology orlando fl usa november pages acm new york 
todd hodes randy katz edouard servan schreiber larry rowe 
composable ad hoc mobile services universal interaction 
proceedings third int symposium mobile computing communication acm mobicom budapest hungary sept 
hiroshi ishii ullmer 
tangible bits seamless interfaces people bits atoms 
proceedings chi conference human factors computing systems atlanta ga usa march pages acm new york 
brad armando fox 
event heap coordination infrastructure interactive workspaces 
appear proceedings th ieee workshop mobile computer systems applications wmcsa new york june 
armando fox 
dynamic mediation integrate cots entities ubiquitous computing environment 
proceedings second international symposium handheld ubiquitous computing huc lecture notes computer science springer verlag 
toby lehman modal mobile document application language 
see www almaden ibm com cs tspaces modal shankar brian lee armando fox pat hanrahan terry winograd 
service framework ubiquitous computing environments 
proc 
ubicomp atlanta ga authors jan borchers acting assistant professor computer science stanford university 
works human computer interaction stanford interactivity lab studies user interfaces hci design patterns new interaction metaphors music types multimedia 
holds ph computer science darmstadt university known turn research public interactive exhibits 
reached borchers cs stanford edu 
meredith year ph student computer science stanford focus human computer interaction 
received bs computer science brown university 
reached cs stanford edu 
joshua tyler second year masters student computer science stanford specialization human computer interaction 
received bs computer science washington university 
reached cs stanford edu 
armando fox joined stanford faculty january 
research interests include design robust internet scale software infrastructure particularly relates support mobile ubiquitous computing user interface issues related mobile ubiquitous computing 
armando received university illinois ph uc berkeley 
founder 
division commercialized thin client mobile computing technology developed uc berkeley 
reached fox cs stanford edu 
