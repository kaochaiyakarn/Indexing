semantic treemaps categorize visualize bookmark files ying feng computer science department indiana university bloomington usa rner information science cognitive science indiana university bloomington usa information available internet search engines bookmark tools popular 
search tools character level matching semantic analysis users manually organize bookmarks favorite collections convenient tool help identify subjects web pages 
introduce interactive tool automatically analyzes categorizes visualizes semantic relationships web pages personal bookmark favorites collections semantic similarity 
sophisticated data analysis methods applied retrieve analyze full text web pages 
web pages clustered hierarchically semantic similarities 
utility measure recursively applied determine best partitions visualized call semantic treemap 
various interaction methods scrolling zooming expanding selecting searching filtering provided facilitate viewing querying information 
furthermore hierarchical organization semantic similarities web pages exported visualized collaborative environment allowing group people compare share bookmarks 
keywords semantic treemap spring embedding semantic similarity bookmark cluster hierarchy interaction information visualization 
millions documents rapidly expanding world wide web exacerbate information overload problem 
web today classification system web sites formal indexing policy controlled vocabulary systematic way name web pages assigning authorship particular catalogue 
currently web surfers rely browser search engines yahoo google find specific information web 
typical search engine allows user type certain keywords simply retrieves web pages containing words character level matching analyzing semantic relationships query retrieved pages 
result irrelevant web pages may retrieved especially case words different meanings bank different words similar meanings dad pa 
big part identify relevant information left user information searching web remains challenging frustrating task 
strategy deal problem develop personal information systems consisting focused subsets web sites highly relevant particular user 
bookmark favorite collections convenient popular way achieve goal 
web browsers nowadays netscape internet explorer provide embedded tools user bookmark favorite urls organize folder structures featuring different categories 
efficiency categorization totally user archiving experience knowledge web pages 
cases user bookmarks web page having chance read hard label category page 
problem bookmark archive management completely manual user reorganize folders adds deletes changes bookmarks 
size archive grows pool scalability current tools hard browse retrieve bookmarks deeply nested hierarchy 
introduce interactive tool aims automatically analyses categorizes visually displays collections web pages 
tool take personal bookmark archives bookmark collections different individuals parse linked web pages 
advanced data mining techniques latent semantic analysis analyze semantic similarities pages :10.1.1.108.8490
semantic information clusters web pages generated labeled semantic topics 
visualization technique call semantic treemap utilized visualize bookmark hierarchy generated clustering division original folder organization making easy users quickly locate relevant web pages 
avoid information overflow improve focusing zooming expanding enabled area inside semantic treemap 
various searching filtering methods provided help users quickly identify web pages satisfying requests 
spatial layout web pages exported utilized create visualization web pages virtual reality environment shared collaboratively examined 
rest organized follows section introduces related section explains data analysis process semantic similarity analysis categorization web page collections section describes semantic treemap visualize bookmark hierarchies various embedded interaction methods facilitate information viewing retrieval section gives application examples semantic treemap visualize bookmark collections section summarizes discusses 

related appearance latent semantic analysis lsa widely induce semantics textual documents especially content information retrieval semantic similarity comparison :10.1.1.108.8490
technique explained section 
visualize similarity results force directed placement fdp algorithms frequently 
kumar implemented version fdp 
huang extended fdp system uses logical frame subgraph entire graph smoothly migrates frame 
fdp pathfinder network scaling utilized chen layout documents semantic similarity 
similarity matrix determined citation patterns large set papers citation networks displayed minimal spanning trees preserve important links 
visualize hierarchical data treemaps shown great powers applications including micro logic software code viewer bell labs electronic product catalogs hive group stock 
efforts space filling technique effective 
introduced dynamic queries analytic hierarchy process treemap allowing users interactively change see influence different factors 
van wijk developed cushion treemaps improve visibility nesting depth shadows cushion 
stasko zhang proposed focus context display navigation techniques enhancing radial space filling hierarchy visualizations 
bederson proposed ordered quantum treemaps organize screen space horizontal vertical strips square aspect ratio time maintaining original ordering satisfying need accommodate fixed shape items 
empirical studies carried bookmark usage web information space 
survey web users reported respondents cited bookmarks strategy locating information organizing bookmarks top web usability problems 
survey web users abrams addressed people create organize bookmarks necessity improve organization visualization representation integration bookmarks 
user studies provide scientific basis design bookmark visualization management systems 

data mining clustering bookmark visualization tool works phases data analysis phase data visualization phase 
phase divided steps bookmark file parsing semantic similarity modeling lsa bookmark clustering labeling 
second phase divided steps bookmark layout semantic treemaps graphical display user interaction 
procedure illustrated explained detail sections 
bookmark parsing bookmark parsing step visualization process 
input bookmark parser comes existing bookmark files purpose set folder hierarchy representing original categorization manifested files 
formats input 
type contains personal bookmarks organized folder archive usually maintained owner web browser saved standard html file 
format bookmark parser runs recursive procedure parse html document build folder tree containing bookmarks document maintaining owner original folder hierarchy 
root tree corresponds unique top level folder non leaf node bookmarks leaf nodes 
folder bookmark label original owner suggesting definition semantics 
url link kept bookmark referred web page downloaded semantic analysis folder tree created way exactly represents user manual organization bookmarks 
course collaboration advantageous share bookmark files 
support second input file format resembling list bookmarks collected different people 
bookmark owner name url link 
bookmarks arranged linear order need create hierarchical structure folder tree 
assign root tree bookmark pool containing bookmarks file 
level divide bookmarks owners owner build root containing bookmarks 
divide owner bookmarks url fields build second level field 
example url fields edu categorized educational urls com go commercial 
develop folder tree adding layers categorized fine grained features 
folder tree generated way roughly follows categorization implied bookmarks features specified input file 
formats bookmark files imported multiple combined case bookmark pool set people bookmarks represented folder tree root owner root bookmarks categorized defined bookmark features available 
similarity modeling latent semantic analysis need download parse web pages linked bookmarks folder tree apply lsa 
lsa variant vector space model converts representative sample documents term document matrix cell indicates frequency term row occurs document column :10.1.1.108.8490
case valid web pages documents distinct words terms pages results term page matrix regarded column vectors dimension 
lsa extends vector space modeling term page relationships reduced approximation column row space computed singular value decomposition svd shown formula respectively diagonal matrix singular values 
care needs taken choosing appropriate value ideally large fit real structure data small noise sampling errors unimportant details modeled 
sort singular values cut point value greatly drops take highest singular values omitting 
web page represented dimensional vector matrix fr shown formula 
way dimensionality greatly reduced important reliable patterns underlying original data maintained 
fr sm fn fn sm ij ds ij sm ij similarities web pages comp dot products column vectors reduced matrix reflecting degree web pages similar term usage pattern 
formula sm similarity matrix fn obtained normalizing column vectors fr 
simplify clustering visualization sm converted distance matrix ds subtracting absolute value element sm formula resulting symmetric matrix elements range zeros diagonal 
terms lsa collected textual part downloaded web pages including titles labels html elements terms substantial meanings counted 
numbers special names excluded 
build small dictionary stopwords filter grammatical commonly phrases tend appear document 
speed text parsing hashtable record frequencies term occurrences web page 
web pages valid 
bookmarks urls pages aren accessible due network failures just don contain useful terms 
invalid bookmarks recorded special marks considered semantic analysis 
web pages parsed term page matrix generated valid terms web pages 
text html page may contain various multimedia executable elements images audio video applets semantic analysis scope 
maintain statistics number audio files video clips applets linked web page information type size access frequency statistics useful data filtering searching users want hide highlight web pages certain features 
data analysis phase data visualization phase bookmark parsing lsa modeling bookmark file folder tree page term matrix similarity matrix clustering labeling cluster tree st algorithm export file st layout graphical display user interface interaction user operation 
phase bookmark visualization 
hierarchical clustering web pages hierarchical clustering similarity results lsa categorize bookmarks create hierarchy clusters grouping web pages similar semantic contents nearest neighbor agglomerative hierarchical unsupervised clustering algorithm 
clustering starts set singleton clusters containing web page 
similar clusters entire set merged new covers 
complete linkage measurement applied determine distance inside clusters distance matrix 
merging clusters repeats single inclusive cluster remains binary hierarchy clustering sequence produced 
shows example web pages clustered 
clustering layers shown left corresponding partitions right 
obviously display different clusters hierarchy treemap lead cluttered display 
developed combination traditional treemap spring embedding algorithm called semantic treemap sm 
sm utilizes treemap display best partitions hierarchical organization bookmark categories clusters folders slice dice fashion see 
subcategory web pages laid semantic similarities embedding algorithm 
consequently similar bookmarks positioned close bookmarks similar topics clustered category 
obtain best cluster partitions recursively select partitions minimize average intra cluster distance aad maximize average inter cluster distance aed 
starting initial singleton clusters cluster merging goes inter cluster distance merged clusters grows bigger 
easy infer algorithm described aad keeps growing bigger aed grows bigger maximum starts drop 
define utility measure ratio aad aed partition lowest utility selected 
example shown layer bottom layer selected level partition 
contains clusters 
partition cluster level applying utility recursively eventually build cluster tree bookmark set root cluster non leaf node bookmarks leaf nodes 
factors considered deciding cluster partitioned 
utility measure cluster 
best minimal value quite small ll see bookmarks inside cluster show tendency cluster smaller subclusters sense partition 
factor current cluster size number bookmarks inside cluster 
size big treemap visualize see section crowded size small space efficiently 
third factor current depth cluster 
cluster deep treemap divided small areas hard identify individual bookmark 
balance factors define threshold time give users option interactively adjust level clustering 
speed clustering procedure implement algorithm computes intra inter cluster distances iteratively starting individual clusters time 
assume layer partition pq cp cluster ck contains set bookmarks ck bi inter cluster distance ck cl utility measure dij bi bj ck ck ck ck pq sad san ck pq aad sad san dij bi ck bj cl ck cl ck cl pq sed sen ck cl pq aed sed sen ck cl pq aad aed total distance number edges inside ck respectively dij distance bi bj ck size ck sad san total intra cluster distance number edges inside pq respectively aad average intra cluster distance pq total distance number edges ck cl respectively sed sen total inter cluster distance number edges inside pq respectively aed average inter cluster distance pq 
algorithm described follows 
bottom layer partition cp ck bk bk valid bookmark bookmark pool 
formulas dkl ck cl sad san sed dij bi bj sen 
current layer partition pq select cluster cm cn minimum ck cl pq merge new cluster ch 
calculate layer partition sad sad san san sed sed sen sen aad sad san aed sed sen aad aed pq pq cm cn ch 

repeat step times cluster pp bp contains bookmarks pool 
obtain layers partitions 

create cluster tree root 
select partition po optimal minimal utility uo uq add clusters level nodes cluster tree 

regard cluster ck po root subtree ck knowledge partition layers formulas similar step calculate optimal utility ck obtain level subclusters add cluster tree 

repeat step thresholds utility measure cluster size cluster depth reached 

put invalid bookmarks pool cluster label invalid cluster add level node cluster tree 
construction cluster tree complete 
purpose adding invalid bookmarks cluster tree keep consistent folder tree contain complete set bookmarks 
see step recalculating cluster distances scratch layer partition reuse results current layer 
clusters affected merging process need recalculated 
greatly reduces computation complexity 
cluster labeling cluster needs label represent semantic category web pages contains 
ideal label cluster keywords popular web pages inside frequently outside 
factor web page size count term frequencies normalize term page matrix dividing element norm column vector 
time label cluster remove label set selectable terms label subclusters cluster uses label ancestors 
root cluster represents bookmark pool label name folder tree root set selectable terms contains terms term page matrix 
starting root recursively label clusters top order 
suppose cluster labeled term chosen term set ancestors labeled step label subcluster ck select term set term tk maximum frequency measure note frequencies normalized weighted sum factors tk ck tk ck tk ck tk ck weights tk ck average frequency tk appears web pages ck tk ck standard deviation tk frequencies ck tk ck average frequency tk appears subclusters factor favors terms highest frequency ck 
second factor penalizes terms uneven frequency distribution ck terms frequent web pages preferred frequent certain pages 
third factor penalizes terms appear frequently outside ck terms uniquely representative ck chosen labels different subclusters dis 
factors important usually set bigger 
visualization interaction data analysis phase acquire kinds bookmark hierarchies original folder structure inherent input bookmark files comes semantic similarity clustering results 
semantic treemaps visualize tree structure hierarchies semantic properties individual bookmarks similarities 
semantic treemap semantic treemaps visualize folder tree cluster tree respectively 
sts traditional treemap space filling technique represent tree structure best partitions alternatively dividing rectangles horizontal vertical direction resulting set nested rectangles showing layers nodes tree 
spring embedding called force directed placement fdp algorithm layout web pages treemap rectangle semantic similarities 
associating semantic distances data items spring force coefficients similar items drawn close vice versa 
note fdp takes long time stabilize large data sets 
divide conquer strategy applying fdp algorithm data set take advantage hierarchical data structure calculate layout subcategory smaller size manageable reasonable amount time 
final visualization folder cluster called category tree represented rectangle treemap 
nesting rectangles represents relationships subcategories 
bottom level rectangles serve containers web pages represented small dot inside corresponding rectangle 
area rectangle ratio size total number bookmarks subcategory wh ich helps maintain density rectangles avoid big categories 
inside rectangle semantic similarities web pages approximated euclidean distances semantically similar ones placed closer 
compute semantic treemap layout run recursive procedure calculate positions sizes rectangles composition hierarchy innermost rectangles calculate spring embedding layouts subset distance matrix 
huge number web pages pool web pages cluster limit cluster size threshold discussed section 
result need compute positions limited number nodes fdp iterations 
visual cues color size coding visualize properties bookmark folders clusters 
example thickness rectangle frame size header proportion rectangle size upper level categories assuming importance usually thicker frames bigger headers obvious 
rectangles different levels displayed colors different brightness nesting level darker color 
gives clearer view hierarchy plain rectangles frames color coding 
bookmarks different dot shapes represent different types web pages size dot encodes size html document 
popularity web page modeled saturation color hue 
naturally bigger web pages correspond bigger dots pages frequently accessed appear saturated colors 
levels bookmark hierarchy semantic treemap get crowded space labels hard users identify hierarchical structure glance 
help users obtain overview hierarchy provide expandable textual node link tree site map left side semantic treemap 
non leaf node tree represents subcategory leaf node represents bookmark 
invalid bookmarks clusters shown semantic treemap shown special marks textual tree reminding users delete obsolete links reload temporarily failed ones 
ensure consistency textual tree semantic treemap operation apply 
views chosen display folder cluster hierarchy choices independent users views displaying folder hierarchy textual tree show folders treemap show clusters 
choice achieve special query functions discussed 
interaction techniques various interaction methods provided facilitate navigation information including scrolling zooming expanding collapsing filtering searching selection 
interactions selection expanding collapsing apply textual tree semantic treemap time scrolling apply independent zooming filtering searching apply treemap 
textual tree semantic treemap displayed scrollable panel 
hierarchy big shown frame user scroll horizontally vertically move part view port 
zoom treemap see details overview 
important feature semantic treemap rectangle expandable 
avoid user collapse lower level rectangles hide structure clearer 
vice versa expand path rectangles see internal structure subcategories bookmarks 
user expand collapse nodes textual tree operation automatically apply treemap 
user opens dot bookmark displayed special fill pattern web browser brought show corresponding web page 
rectangle semantic treemap pointed mouse path sequence ancestors root highlighted detailed information popped header 
node selected tree treemap highlighted tree path highlighted treemap 
user wants see bookmarks certain range filters hide unwanted ones 
kinds filters provided select web pages domain type size 
filters separately 
example user filter see pure text web pages mb top hottest web pages 
user searching tools find certain bookmarks certain features 
ways searching names keywords terms appear frequently web page url links 
le user type name folder retrieve bookmarks folder search keywords may represent cluster directly type url 
bookmarks retrieved search highlighted 
search tolerant sense partial matching user doesn need know exact string 
course complete input user submits accurate result get 
interesting way combine selecting searching bookmark hierarchy views help user evaluate accurate organizes bookmarks 
achieved way 
user show cluster hierarchy textual tree folder hierarchy semantic treemap 
select cluster tree issue special search selection command enable bookmarks selected cluster retrieved treemap 
distribution highlighted bookmarks user find folder organization matches computed semantic clustering 
vice versa show folders tree clusters treemap test accurate automatic categorization match original manual 
enable input output data tool provides file operations 
user import bookmark files urls local file systems export semantic treemap layout specially formatted text file 
reload updated web pages broken links due network failures 
bookmark trees interaction status semantic treemaps saved binary file enabling users resume particular visualization session point time 

application examples shows screen shot visualizing lead author personal bookmark archive 
left side view gives cluster hierarchy link node tree structure partly expanded displaying names subclusters 
right side view semantic treemap folder hierarchy 
root bookmarks ying feng see folders represented light green rectangles 
inside folder personal tool bar smaller header channels top darker green rectangle inside bookmarks represented small blue dots 
folders collapsed personal bookmarks computer course inside hidden expanded research just right see shown 
called visualization selected highlighted pink 
inside bookmark avl currently pointed small yellow dialog window popped near showing detailed information parent folders highlighted white borders showing path root 
toolbar near top screen see web pages size kb kb shown filtered hidden 
hand links indiana university related visualization highlighted purple result search keywords visualization url link indiana 

visualization personal bookmark file 
shared collaborative bookmark space enable sharing collaborative browsing web page collections exported visualized desktop virtual reality environment browser shown 
bookmark represented small frame linked original web page 
horizontal layout web pages identical layout bookmarks similar topics close space 
users enter virtual bookmark landscape collaboratively navigate freely click frame display corresponding web page web browser answer questions give advice built chat facility 

today bookmark favorite collections create personal web information spaces help people remember retrieve interesting web pages 
introduced applied semantic treemaps support users better organize view bookmark space maintain large bookmark pool mutual sharing user groups 
advantage spring embedding treemap algorithm semantic treemaps efficient limited screen resource possible display large hierarchical bookmark sets showing semantic similarities individual bookmarks time 
user interface facilitates browsing retrieving 
aspects need improved 
variable shaped treemaps applied avoid long narrow areas spring embedding layouts better displayed approximate squares 
currently semantic treemaps visualize inter cluster hierarchies intra cluster similarities 
hope develop visualize inter cluster similarities 
may achieved applying spring embedding cluster level accommodate layout similar strictly slice dice layout 
eventually want bring bookmark visualization tool online users submit modify bookmarks browse bookmark pool internet achieving free sharing communities real sense 
jason baumgartner useful suggestions html parser 
berry computing singular value decomposition 

deerwester dumais furnas landauer harshman 

indexing latent semantic analysis 
journal american society information science 

berry dumais brien 

linear algebra intelligent information retrieval 
siam review 

schreiner wolfe laham landauer kintsch 

latent semantic analysis assess knowledge technical considerations 
discourse processes 

rner dillon 

digital library visualizer 
information visualization symposium digital libraries london england july pp 


battista eades tamassia tollis 

algorithms drawing graphs annotated bibliography 
computational geometry theory applications pp 


kumar fowler 

spring modeling algorithm position nodes undirected graph dimensions 
technical report department computer science university texas pan american 

huang eades wang 

line animated visualization huge graphs modified spring algorithm 
journal visual languages computing academic press volume pages 

chen 

visualizing semantic spaces author citation networks digital libraries 
information processing management 

shneiderman 

tree visualization treemaps space filling approach 
acm transactions graphics jan 

shneiderman 

treemaps visualize analytic hierarchy process 
technical report car tr department computer science university maryland college park md 
van wijk van de 

cushion treemaps visualization hierarchical information 
ieee symposium information visualization infovis 

stasko zhang 

focus context display navigation techniques enhancing radial 
space filling hierarchy visualizations graphics visualization usability center georgia institute technology atlanta ga technical report git gvu august 

vernier 

modifiable treemaps containing variable shaped units 
imag fr visu vernier pdf 

bederson shneiderman jones ordered quantum treemaps making effective space display hierarchies 
published acm transactions graphics 

pitkow 

gvu th www user survey 
www cc gatech edu gvu user survey 

abrams baecker chignell information archiving bookmarks personal web space construction organization 
acm sigchi conference human factors computing systems chi los angeles california april 

rner twin worlds research digital cities evolving communities 
second kyoto meeting digital cities digital cities international symposium workshop kyoto japan october 
