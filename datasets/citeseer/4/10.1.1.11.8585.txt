student built algorithm animations learning aids typical application algorithm animation assist struction involves students viewing prepared tions alternative strategy students selves construct animations algorithms 
samba algo rithm animation tool fosters student built animations 
samba undergraduate algorithms course students constructed algorithm animations regular class assignments 
article describes samba docu ments experiences algorithms course 
stu dent reaction animation assignments positive students appeared learn pertinent algorithms extremely 
algorithm animation dynamic graphical depiction data operations algorithm 
animation purpose algorithm functions seeking learn algorithm student computer science class 
algorithms chal learn understand hoped graphical depiction algorithm concrete easier comprehend student 
number algorithm animation systems built years 
just better known systems include balsa tango sj zeus aace 
systems typically create animations accompany lecture elec classroom prepare animations students observe interact outside classroom 
tions utilized education usually prepared priori shipped system prepared instructor class animations 
copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
sigcse ca usa acm john stasko graphics visualization usability center college computing georgia institute technology atlanta ga stasko cc gatech edu algorithm animation systems schools instructional aids manner fair say algorithm animation achieved appli cation instructional settings hoped system developers 
certainly reason tech nical requirements availability computing equipment presenting algorithm animations 
reason may reluctance part instructors adopt algorithm animations classes 
may stem time re quired prepare deploy animations questions pedagogical value added animations 
correspondingly research conducted empirically evaluate pedagogical value students view ing interacting prepared algorithm animations 
re sults ranged quite positive relatively little ben animations 
jn studies pure numbers direction results favored 
unfortunately majority positive result animation small statistically 
results prior algorithm animations classes motivated seek alternative ways ing algorithm animations instructional settings 
believed having students fundamentally involved animations beneficial 
belief led question students built tions algorithms opposed simply inter acting animations prepared 
students benefit constructing mapping new unfamiliar algorithm concrete presentation operation 
article describes system built fosters student creation algorithm animations describes system past years 
alternative ap plication algorithm animation provides new opportunities instructors variety computer science classes 
animation system algorithm animation system designed foster student construction animations involves certain key requirements 
animation system easy learn 
building animation complex burden construction process overwhelm students learning algorithm primary goal simply implementing animation 
second key require ment developing animation intimately tied algorithm operations 
constructing tion students uncover fundamental attributes characteristics algorithm 
created samba algorithm animation tool meet requirements 
samba interactive animation interpreter generator batch mode 
takes input sequence ascii commands command line 
command number different fields 
field command type simple string uniquely defines number trailing fields command 
set commands create graphical objects animations 
commands example create line circle respectively 
line green thin circle red half second field commands specifies unique string identifier graphical object cre ated 
necessary subsequent commands refer ence modify object 
trailing fields specify visual attributes object 
example circle command provides center coordinates radius color fill style order 
flexibility samba animations car windows floating point world coordinates mapped pixels samba lower left upper right 
commands exist modify window coordinates supporting panning zooming 
second set commands modify existing graph ical objects 
commands provide action ani mation 
commands move line change color circle created earlier 
move color blue object movements samba discrete jumps new position smooth continuous actions 
command default interpolates intermediate frames traverse distance specified command 
continuous motions assist viewers monitor animation track changes display sj 
samba includes commands support ing rich complex animations 
example animations utilize multiple views windows 
groups com mands batched execute concurrently 
primary goal designing samba lan guage keep simple possible learned understood quickly 
believe samba successful regard 
samba command set continu evolves 
new command added sufficient request new functionality long primary goal simplicity compromised 
samba just application program polka algorithm animation system 
samba provides simpler accessible front polka requires ctt pro gramming steeper learning curve 
samba supports base functionality available polka 
samba currently runs top window system motif 
ports pc windows java way 
details system functionality commands see www 
cc 
gatech 
gvu samba html 
developing samba animations students utilize samba build animations algorithms 
essentially student annotate implementation algorithm print statements generate commands drive samba 
program executes print statements output order corresponding execution comprise trace operations 
print annotations correspond interesting events animation systems 
output trace forwarded samba generates specified animation 
transmission commands samba interactive stored trace file 
example program named shellsort implemented program pipe output samba shellsort samba alternatively shellsort program run output stored file 
file samba input 
method advantage samba tion repeatedly viewed exiting system 
shellsort tracer samba tracer samba user interface allows viewers step command time desired pause point 
key strength samba simple ascii com mands input 
students need learn complex animation methodology system 
importantly algorithm implemented language animated implementation simply needs output ascii commands 
critical early undergraduate com puter science courses students may know language pascal 
curriculum samba predecessor tool program system times help teach algorithms cs design analysis algorithms required course computer science majors georgia tech 
course primarily composed class filled typical enrollment students zj 
zi ip value value partition called array view student created quicksort animation 
offering 
course material quite theoretical conceptual focusing analysis techniques asymptotics recurrence relations summations design methodologies divide conquer greedy approaches dynamic programming 
course introduces algorithms particular focus graph algorithms 
grading weekly homework assignments mid term final examination 
theoretical mathematical course usually particular favorite students struggle nature material 
students course reacted bit uncertainty told course involve programming construction animations 
weeks week quarter introduced samba tool minutes class 
students appeared easily grasp basic concepts short time 
students documentation primarily com mand summaries page document 
animation assignments course times taught cs 
assignment called flying logos students built animation involved names flying amidst creative interesting graphics 
assignment really algorithm animate designed gentle help students learn samba works began true algorithm animation 
assignment worth final grade 
assignments involved actual algorithm ani mations 
students required implement algo rithm language choice build animation algorithm 
assignment worth final grade vice value weekly homework assignment graded imation illustrated algorithm expressive ness insight creativity animation 
students told develop animation help explain algorithm person familiar 
gorithms animated students quicksort algorithm view prim minimum tree algorithm created student 
minimum spanning tree mst algorithm 
mst assignment half class utilized algorithm half utilized prim algorithm 
animations created students varied quite bit quite clever informative 
substantial num ber animations provided basic imagery sim ple graphical objects representing program data 
significant involving scenes flying spacecraft describing algo rithm works 
time taught course animations produced students exhibited noticeable jump prior offering 
probably animations part local culture students aware prior 
explicitly avoid showing students class animations prior class obviously students ways seeing tions desired 
particular class available best animations prior assignment class examine 
quicksort students utilized traditional blocks view supplemented illustrations indices comparison 
frame student animation shown 
particularly interesting facet quicksort animation students illustrated algo rithm recursion 
noteworthy techniques included drawing boxes subarrays walls lines subarrays lowering subarrays window 
mst assignment virtually students utilize traditional vertex edge graph representation way 
particularly ambitious student illustrated prim algo rithm illustrating priority queue implemented heap algorithm view 
frame animation shown 
quicksort assignment students imple mented algorithm added output statements drive animation 
changed bit mst assignment 
number students added output statements implementing program 
algo rithm sufficiently complex students samba animation form visual debugging aid 
provided feedback program executing 
student reaction animation assignments universally positive 
students appeared enjoy change pace theoretical course 
georgia tech un generally enjoy coding stu dents suspect 
animations fed interest 
offerings course students com survey course 
responses anonymous 
students responded questions integer strongly disagree strongly agree 
results responses shown table 
general students felt animations ful helped understand algorithms difficult create fun 

animation assignments valuable learning experience 

animation helped understand algorithms better 

animation assignments fun 

creating animation difficult 
winter responses winter responses table results student surveys 
responses ranged strongly disagree strongly agree 
informative student replies free response questions survey 
number responses taken directly surveys 
please note responses exceptions representative cumulative set replies 
general opinion animation assignments 
fun 
definitely helped understand algorithms clearly put position having explain start frustrating runs space screen useful informative challenging doable 
com gave sense system cool think assignments appropriate theory course great 
wish theory courses approach student felt animations helpful asked follow questions aspects things algorithms animations help learn better 
got better understanding pivot chosen migrated middle know code think relate person really understand mul tiple dimensions helped visualize going 
lose track try trace stuff mind 
animations kept losing track didn real understand algorithm try explain test dummy animations help understand algorithms better 
misconception recursive nature fore quicksort assignment easier understand things see visually provide view algorithm seen code level student responses positive 
num ber students requested animation assignments 
students ask assignments instructors take note 
interesting responses view set replies 
student feel assignments appropriate theory course 
number students unhappy subjectivity animation grading strong con trast grading mathematically oriented homework problems number students noted felt understood algorithm animation ered inaccuracies understanding 
noted positive benefits having explain teach illustration algorithm works 
discussion assignments classes stands students enjoyed tions class described students dry full theoretical useless stuff animations provided change pace class analysis animations able engage students creativity expressiveness fundamental educational process 
fact students quite competitive ob serving friends animations seeking top peers 
clearly evident animations helped students truly learn understand algorithms study 
feedback student surveys indicated students noted felt stood algorithm discovered early conceptions incorrect 
likewise infor mal measure student performance final exam questions regarding algorithms nearly perfect 
possible explanation enhanced understanding students simply spent great deal time working algorithms algorithms animation assignments 
certainly true 
accompanying question assignments activities gamer amount time atten tion students achieve level enthusiasm 
assignment write report algorithm equally 
animation assignments provided forum encouraged study creativity students engaging way 
fundamental objective education 
reflecting animation assignments allows hy assignments helpful 
building animation algorithm forces student identify fundamental operations algorithm portrayed vi 
student think data manipulated algorithm interactions occurring algorithm important high level design concepts manifested 
forces student move worrying semi colons go conceptual fundamental rea 
student concepts concrete graphical depiction 
student constructs algorithm animation mapping determines unique algorithm deserves communicated visually 
fundamentally building gorithm animation forces student teacher brief time 
instructors certainly know best way learn concept teach 
experiences student built animations courses animations promoted learning students assignments valuable due enthusiasm interest sparked stu dents 
happily animations appear foster learning comprehension making doubly useful 
important follow needed formal empirical study better identity learning benefits building algorithm animations characterize benefits occur similar results occur students implemented algorithms 
happen fully implemented programs provided students simply required animations 
creating bare bones animation provide benefits creating elaborate intricate animation 
types learners students benefit activity animation design process adapted domains physics engineering biology 
answers questions help educators best utilize new technology maximal advantage instructional settings 
acknowledgments irwin coleman assisted implementing samba 
greatly appreciated 
brown exploring algorithms balsa ii 
computer may 
pi pi brown zeus system algorithm animation multi view editing 
proceedings ieee workshop robe japan oct pp 

byrne stasko algorithm animations aid learning 
tech 
rep git gvu center georgia institute technology atlanta ga aug 

aace algorithm animation com puter science education 
proceedings ieee workshop ual languages seattle wa sept pp 

stasko tango framework system algorithm animation 
computer sept 
wi stasko kraemer methodology building application specific visualizations parallel programs 
journal parallel distributed com puting june 
interesting note experiences best students class traditional measures usually create best animations 
