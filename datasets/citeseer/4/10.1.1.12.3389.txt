local search mechanism peer peer networks hewlett packard labs palo alto ca hpl hp com important problem peer peer networks searching retrieving correct information 
existing searching mechanisms pure peer peer networks inefficient due decentralized nature networks 
propose mechanisms information retrieval pure peer peer networks 
modified breadth search bfs mechanism extension current protocol allows searching keywords designed minimize number messages needed search network 
second intelligent search mechanism uses past behavior network improve scalability search procedure 
algorithm peer autonomously decides peers answer query 
algorithm entirely distributed scales size network 
implemented mechanisms middleware platforms 
show advantages mechanisms experimental results middleware implementation 
categories subject descriptors information storage retrieval information search retrieval search process information storage retrieval systems software distributed systems general terms algorithms management design keywords peer peer distributed information retrieval 
peer peer networks increasingly popular offer opportunities real time communication ad hoc collaboration information sharing permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
cikm november mclean virginia usa 
copyright acm 
dimitrios gunopulos computer science eng 
univ california riverside dg cs ucr edu computer science eng 
univ california riverside cs ucr edu large scale distributed environment 
peer peer computing defined sharing computer resources information direct exchange 
distinct characteristic computing symmetric communication peers peer client server role 
advantages systems multi dimensional improve scalability enabling direct real time sharing services information enable knowledge sharing aggregating information resources nodes located geographically distributed potentially heterogeneous platforms provide high availability eliminating need single centralized component 
network creates virtual point multipoint network peers built top physical infrastructure 
basic characteristic network group nodes type interests connected communication system 
network self organized self administrative nodes autonomously discover peers self healing nodes automatically try find new peers current peers temporarily permanently disconnected network 
peers connected ad hoc manner restriction number peers network 
node connects network peers establishing relationship peer currently network 
connections driven interests peers 
example clip shows number peers gnutella network weekday peers shared files 
peers arrive disappear dynamically arrival times known priori 
contrasts web majority web pages statically allocated change frequently 
advantage peers join leave group dynamically explicit knowledge memberships need group membership algorithms 
topology resulting network arbitrary various connectivity degrees peers searching retrieving correct information difficult problem 
current peer peer applications sharing resources music files consecutively support rudimentary search mechanisms 
typically user specifies name file looking searches file brute force mechanism described previous section 
clearly support higher level resources databases sophisticated applications efficient query mechanisms required 
mechanisms accommodate distinctive characteristics peer peer computational model attractive scalability centralized control fluidity 
consider information retrieval problem networks 
assume peer database collection documents available peers connected network represents knowledge peer 
node searches information sending query messages peers 
assume queries collections keywords 
querying peer interested find documents contain keywords 
peer receiving query message evaluates constraint locally collections documents 
evaluation successful peer generates reply message querying peer includes documents correspond constraint 
receives responses peers querying peer decide documents download 
document associated unique example hash function uniquely identify documents different peers 
note searching file contents possible current systems :10.1.1.105.3673
systems searching done file identifiers 
allows efficient search indexing techniques limitation restricts ability users share documents network 
techniques efficient searching networks proposed :10.1.1.123.8939
solve search problem current systems rely centralized control broadcast query messages 
second approach broadcasting query easily extended solve problem consider searching keywords modify query message include query terms desired file identifier 
approach works best pure peer peer networks functionality including indexing resource sharing decentralized 
systems peers special functionality 
gnutella example system 
hybrid peer peer networks possibly peers additional functionality partial indexes contents peers 
peer joins network uploads list files index server 
commercial information retrieval systems web search engines google yahoo approach indexing web 
centralized processes exploit large databases parallel approaches process queries extremely 
information retrieval context disadvantages index useful needs inverted index documents peers indexes 
means index node sufficient resources large bandwidth available serve queries 
hardware performance cost improved centralized repositories expensive set hard maintain 
require efficient human intelligence build keep information contain relevant current 
difficult capture information available information updated daily basis current search engines perform periodic crawling typically number days old 
furthermore fail capture information available private databases access private repositories maintained peers 
example current search engines show reservations flight 
systems assume continuous availability peers information 
yang compared different hybrid architectures centralized index nodes 
experimental results suggest distributed centralized index efficient scalable choice 
consider fully decentralized distributed systems 
contribution consider fully distributed technique addressing information retrieval problem pure networks 
consider pure peer peer network gnutella network propose new techniques efficient gnutella search 
modified breadth search bfs mechanism extension current protocol allows searching keywords minimizes number messages needed search network 
mechanism runs locally peer automatically selects random subset peer neighbors forward query message 
second technique intelligent search mechanism improves having peer network build profile peers profile find query peers answer 
forwards query peers 
profiles aggregated collected real time 
mechanisms distributed avoid problems single points failure systems napster 
time minimize number messages avoid scalability problems systems gnutella broadcasts 
system implemented middleware platform extends gnutella protocol 
reason wanted existing infrastructure investigate behavior limitations 

information retrieval pure peer peer network consider network nodes peers average degree peer directly connected peers 
peer peers nodes network direct connection shows example peer topeer network 
node represents peer edge corresponds direct communication peers 
peer possesses maintains set documents available peers 
set represents knowledge peer 
assume document stored semi structured form document set attributes title author keywords history owner text 
loss generality assume queries xml format 
documents may replicated peers 
note data possessed peers necessarily unique 
replicated edges network documents files fully replicated replicated equal number times 
generally documents files searching peer peer network peer forwards query neighbors 
show messages original peer sends messages peers receive query sends 
requested users available peers highly replicated 
allowing replication documents important reasons 
distributes workload multiple peers eliminates burden single node 
second reduces network traffic minimizes latency data replication edges closer location users 
peers generate queries search data 
queries include attributes characterize documents 
examples queries american airlines banks 
node sends messages peers 
node receives message different peers discards duplicated messages replies message receives 
extending gnutella search searching keywords fully distributed peerto peer network search protocol peer peer network works follows 
node issues search messages wants search data information peers 
node generates query message search query propagates message peers 
peer receives query request searches local repository relevant matches 
match peer generates message reply result 
message results includes address peer network connectivity 
example node receives data peers may choose obtain data peer best network connection 
messages sent path carried incoming query messages 
addition peer propagate search peers 
current search mechanisms disadvantage propagate queries network including nodes high latencies network easily bottleneck 
avoid flooding network messages gnutella protocol search message associated time live ttl field determines maximum number times message propagated network 
ttl decremented time message reaches peer 
ttl message longer forwarded 
modified random bfs search mechanism consider intermediate search technique modified bfs search 
technique peer forwarding search message peers randomly selects subset peers propagate search request 
fraction peers selected parameter mechanism 
experiments fraction peer propagated request half peers selected random 
advantage technique network random graph topology peer search nodes graph efficiently smaller number messages brute force gnutella protocol 
hand algorithm probabilistic 
intelligent search net works section new mechanism information retrieval networks 
objective help querying peer find relevant answers query quickly efficiency 
keys improving speed efficiency information retrieval mechanism minimize communication costs number messages sent peers minimize number peers queried search request 
achieve peer estimates query peers reply query propagates query message peers 
intelligent search mechanism intelligent search mechanism distributed information retrieval consists parts 
search mechanism send query peers 
mechanism node communicate peers 
mechanism employed gnutella protocol communications peers 

profile mechanism peer uses keep profile peers 
profile keeps past replies peer 

peer ranking mechanism peer runs locally profiles peers specific query ranks peers order send search query peers 

similarity function peer uses locally find similarity different search queries 
search mechanism assume peer initiates search find documents specific topic 
initiating search call querying peer 
querying peer generates query message describes request finds peers provide answer profile mechanism peer ranking mechanism broadcasts query message peers 
peer receives query message call receiver peer 
receiver peer provide answer intelligent searching peer peer network peer uses knowledge obtains monitoring past queries propagate query messages subset peers 
returns document requesting querying peer propagates query message peers considers provide answer 
provide termination condition messages propagated indefinitely network querying peer sets bound depth recursion 
reply sent back querying peer peers answer path query path record query name peer provided answer query peer table 
peer sets bound number pairs recorded uses strategy allow space new queries 
peer profiles decide peers query sent peer ranks peers respect query 
number peers query sent parameter defined user 
rank peers node maintains profile peers 
profile contains list past queries specific peer provided answer 
logically consider profile distinct list queries implementation single queries table query node entries keeps queries peer recorded 
node accumulates list past queries different mechanisms 
mechanism peer continuously monitoring recording query corresponding messages receives 
second peer replying query message broadcasts information neighbor peers 
operation increases accuracy system expense extra messages average degree network answering node 
node keeps list queries local repository 
node list incomplete node record information queries routed 
node uses size limit limits number queries profile 
repository full node uses lru policy keep queries repository 
node keeps profiles neighbors total size repository 
peer ranking query receives receiver peer uses profiles peers find ones documents relevant query 
compute ranking receiver peer compares query previously seen queries finds similar ones repository 
find similarity queries uses function provided described 
reason employ nearest neighbor classification technique simple shown accuracy different settings 
shown nearest neighbor classification asymptotic error rate twice bayes error rate independent distance metric 
peers associated similar queries compute aggregate similarity peer query 
similar queries aggregate similarity peer pi query peer pk computes pi qsim qj answered sum qj similar queries parameter limits influence similarity similar queries 
addition parameter allows add weight similar queries 
example large sim reduces nearest neighbor 
sim reduces neighbor 
sim adds similarities queries answered peer 
consider example assume 
peer wants send query peers 
similar queries ones information sim sim sim sim sim 
peer answered peer answered queries peer answered queries compute aggregate similarities peers query follows simp simp simp 
chooses send query peers 
receiver peer sends query peers user defined constant higher rank 
distance function cosine similarity order find peers answer query need function qsim query space compute similarity different queries 
queries sets keywords number different techniques effectively information retrieval 
assumption peer document relevant query documents relevant similar queries 
reasonable assumption peer concentrates set topics 
cosine similarity metric extensively information retrieval distance function setting 
set words appeared queries 
define dimensional space query vector 
example set words query vector corresponds query 
similarly vector corresponds query 
cosine similarity model similarity queries simply cosine angle vectors 
random perturbation problem technique outline possible search messages get locked cycle 
issue search fail explore significant part peer peer network may discover results 
consider example case peer sends query peers answer considers best peers considers best peers considers best peers query go peers 
solve problem pick small random subset peers peer experiments add set best peers query 
result best peers form cycle high probability mechanism explore larger part network learn contents additional peers 

performance proposed techniques section describe characteristics proposed techniques comparison gnutella protocol 
performance modified bfs search consider performance modified random bfs technique peer randomly selects subset peers propagate request profile peers 
network random graph topology mechanism searches nodes graph efficiently sends fewer messages gnutella protocol 
consider random graph nodes edges average degree node nk set nodes distance node starts gnutella search ttl time live gnutella search protocol sends approximately messages neighbors propagated times 
bfs mechanism explores edges graph number messages send gnutella protocol nk nk assume hand node propagates message randomly chosen subset neighbors size suitably chosen 
ttl nk smaller expected total number messages sent expected number vertices modified bfs process visits nk smaller nodes visited iteration new nodes 
consider node distance nk high probability edge connected node ni 
setting nk modified bfs needs fraction number messages gnutella protocol visit approximately number vertices 
nk performance intelligent search mechanism previous discussion indicates propagating query random subset peers efficient searching nodes network random graph topology gnutella protocol respect total number messages 
approach approximate guarantee nodes nk 
consider example case large subgraphs connected edge 
node attached edge choose edge subgraph explored 
intelligent search technique outlined previous section attempts identify edges information 
accuracy mechanism clearly depends accurately peer compute peers answer query 
distributed information retrieval shown current techniques database selection give performance 
shows incomplete knowledge sufficient achieve results :10.1.1.21.787
experiments show requesting random set documents collection sufficient obtain accurate estimates word frequencies collection 
results directly applicable case peer full statistical information peers 
setting different information collect queries peers reply documents actual replies 
certainly useful similar queries repeat 
large number queries gives approximation peer collection documents 
note efficient search allows larger ttl compared gnutella protocol having smaller number messages 
result mechanism visit nodes gnutella protocol visit 
explore trade experimental evaluation technique 
summary intelligent search mechanism distributed information retrieval propose characteristics 
algorithm uses fewer messages compared standard gnutella strategy scales better respect size network search larger network number messages 
size profiles proportional number direct connections peer 
remain small constant large networks 

scheme uses combined knowledge peers adapts modifies behavior peer learns information peers 
hand peers export information databases 

experiments illustrate intelligent search mechanism built decentralized online newspaper application 
newspaper organized network peers peer maintains set articles 
peer uses information retrieval mechanism efficiently search articles newspaper 
user uses graphical user interface give keywords system retrieves articles contain keywords 
system internal hp network implemented top gnutella network java 
experimental study compared performance intelligent search mechanism gnutella search modified bfs mechanism peer forwards query random subset half peers 
evaluation metrics recall rate fraction num messages gnutella mechanism modified random bfs number queries number messages queries gnutella mechanism modified random bfs ttl 
documents search mechanism retrieves compared mechanisms efficiency technique ratio number messages different techniques search 
simulation testbed experiments middleware implementation easier simulate large numbers peers running large numbers gnutella clients small number machines 
simulation computes metrics exactly 
document collection reuters dataset set documents available various peers 
partitioned dataset documents relevant country metadata information available collection 
different countries documents total number documents countries documents belonged country 
created network peers 
topology random graph average degree random graphs log average degree certainly connected 
peer assigned collections countries large country collections split groups documents leading average documents peer 
objective simulate situation peer sets documents specific topics 
brevity set experiments ran user requests arriving sequentially system 
time interval peer submits query network 
queries generated automatically include query sets keywords documents dataset 
generate query sets set keywords 
queries generated peer 
ttl query set 
experiment measured number messages query techniques generate time live ttl field request messages set 
intelligent search mechanism peer query path determines best peers send query requests 
addition sends query request randomly chosen peer 
indicates brute document ratio mechanism modified random bfs number queries ratio documents intelligent search mechanism modified bfs mechanism find ttl 
force algorithm sends messages modified random bfs algorithm sends messages average regardless responses requests 
figures values shown averages consecutive requests 
shows number messages mechanisms significantly smaller gnutella algorithm 
shows situation mechanism discovers half documents brute force algorithm modified bfs mechanism finds 
important note recall ratio improves time peer profiles learned modified bfs mechanism 
second experiment show improve results substantially increasing ttl parameter 
shows increasing value time live field search requests ttl intelligent search mechanism discovers documents gnutella search finds ttl 
experimental results figures show mechanism achieves recall rate number messages gnutella search 
recall rate increases number queries increases time 
results modified bfs mechanism consistent analysis show possible search majority network significantly fewer messages brute force algorithm 
justifies hypothesis pure network large number peers receive unnecessary messages 
number messages intelligent search mechanism increases time 
reason nodes accumulate knowledge peers peers provided answers past queried subsequent queries 
peers queried continue explore network propagating requests peers 
preliminary experimental results show 
performance intelligent search mechanism improves time peers learn num messages gnutella mechanism modified random bfs number queries number messages queries gnutella ttl mechanism modified random bfs ttl 
formation peers better modified bfs algorithm initial performance similar 
second get recall rate gnutella smaller number messages 

related directed dfs search freenet technique searching network proposed node propagates query peers aggregated statistics including peer answer query random peer 
peer reply requesting peer selects new peer 
technique similar intelligent search mechanism propose uses simpler information peers optimized find documents efficiently fixed finding documents depth search approach breadth search approach 
freenet uses intelligent dfs search mechanism find files network 
approach keeping local caches pairs document keys peer contain document 
technique improved 
approach general freenet allows searching file identifiers file contents 
addition breadth search approach messages propagated network concurrently depth search approach node sends message peer waits reply forwarding peer 
advantage dfs search small set peers queried quickly efficiently nature take long time want find results query happen distributed peers 
local indices hybrid technique peer builds indices aggregate information contents documents peers 
technique essentially push update technique peer sends peers information documents send updates time update happens com document ratio mechanism modified random bfs number queries ratio documents distributed information retrieval mechanism modified random bfs find ttl gnutella ttl 
approach profiles get updated peer answers query 
distributed information retrieval distributed information retrieval main problem assuming want submit information retrieval query subset databases available decide databases contain relevant documents 
number algorithms proposed experimental results show algorithms achieve results 
shows performance achieved setting collections conceptually separated 
algorithms assume querying party statistical knowledge contents database example word frequencies documents global view system 
addition techniques assume environment 
metrics technique similar ones techniques 
collaborative filtering technique similarities collaboration filtering approaches 
particular number approaches proposed collaboration filtering algorithms web 
general techniques assume documents public known participants difficult peer peer environment 
exploiting peer peer network structure improve search performance approaches improve search performance peer peer networks consistent hashing scheme distribute objects peer peer network efficient location algorithm implemented 
approach possible searching keywords unique identifier object name 
result want find documents contain keywords may contain different information 
approach uses gossiping protocol propagate searches peer peer network 
problem approach rate gossiping slow messages propagated fast peers 
different approach local search strategies take advantage structure power law networks employed 
algorithm explores nodes high connectivity 
essentially directed depth search mechanism 
centralized approaches include commercial information retrieval systems web search engines google yahoo centralized processes models provide centralized indexes 
techniques represent altogether different philosophy directly comparable 
general trades simplicity robustness improved search time expensive resources 
centralized approaches faster guarantee find results decentralized approaches allow fresh contents index databases costly 

peer peer networks offer advantages simplicity robustness scalability 
propose implement middleware platform extends gnutella protocol support information retrieval peer peer network 
intelligent search mechanism uses knowledge peer collects peers improve efficiency search 
scheme fully distributed scales size network 
plan address problem actively changing topology network order improve performance search 
plan consider problem security privacy considerations affect quality search networks 
plan deploy mechanism experiment larger networks 
plan consider problem efficiently maintaining profiles peers combining information different queries updating profiles document collections peers change 

adamic lukose huberman 
search power law networks 
phys 
rev 
breese heckerman kadie 
empirical analysis predictive algorithms collaborative filtering 
proc 
fourteenth annual conference uncertainty artificial intelligence uai 
san francisco ca pp 
callan powell french connell :10.1.1.21.787
effects query sampling automatic database selection algorithms 
technical report ir center intelligent information retrieval department computer science university massachusetts 
chakrabarti srivastava tiwari 
memex archive mine community web browsing experience 
computer networks pp 
clip 
www clip net crespo garcia molina 
routing indices peer peer systems 
proc 
int 
conf 
distributed computing vienna austria 
duda hart 
pattern classification scene analysis 
john wiley sons 
freenet freenet sourceforge net french powell callan viles prey mou 
comparing performance database selection algorithms 
proc 
acm sigir research development information retrieval 
gnutella gnutella wego com 
gravano garcia molina 
generalizing gloss vector space databases broker hierarchies 
proceedings st vldb conference zurich 
kazaa www kazaa com lieberman van dyke 
browse collaborative web browsing agent 
mit media lab tech report 
lu mckinley 
effect collection organization query locality information retrieval system performance design 
book chapter advances information retrieval kluwer new york 
bruce croft editor 
melnik raghavan yang garcia molina building distributed full text index web 
th world wide web conference kong 
napster www napster com 
powell french callan connell viles impact database selection distributed searching 
sigir proceedings rd international acm sigir conference research development information retrieval pages 
reuters dataset 
www research att com lewis stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm 
yang garcia molina comparing hybrid peer peer systems 
proc 
th int 
conf 
large data bases rome 
yang garcia molina efficient search peer peer networks 
proc 
int 
conf 
distributed computing systems 
wu meng yu li highly scalable effective metasearch engine 
th world wide web conference hong kong 
xu callan effective retrieval distributed collections 
proc 
th annual international acm sigir conference research development information retrieval melbourne australia pp 

zhang goel govindan 
small world model improve freenet performance 
proc 
ieee infocom 
