analysis random walk algorithm random cnfs mikhail laboratory computer science mit cambridge ma theory lcs mit edu eli ben deas harvard university cambridge ma eli eecs harvard edu may analyze eciency random walk algorithm random cnf instances prove rst polynomial time upper bound small clause density 
complement proving exponential lower bounds running time algorithm planted sat distribution large constant clause density 
rst polynomial upper bound running time local improvement algorithm random instances conforms empirically observed eciency algorithms random cnfs 
understanding complexity sat solving algorithms various natural instances fundamental problem computer science 
current research analyzes running time simplest sat solving algorithms simplest instance distributions 
motivation understand interesting observed phenomena ecient performance random walk algorithm random cnfs small clause density satis ability threshold 
random cnfs extremely interesting focus research 
algorithm investigate simplest sat solving heuristics heavily practice 
theoretical perspective lower upper bounds known algorithm exponential see problem lower bounds upper bounds 
explains rwalksat performs random instances 
tries er explanation 
proceed check eciency algorithm holds large clause densities satis ability threshold 
case examine random planted sat distribution assures random formula satis able 
case show rwalksat inecient typically requires exponential time nd satisfying assignment 
sat random walk sat famous np complete problems 
input problem cnf asked decide exists assignment variables satis es clauses sets 
assuming np ecient algorithm exits problem 
years di erent solutions proposed investigated theoretically empirically see survey related results 
algorithms local concentrating small part formula usually constant number clauses variables making local assignment variables information hoping local decisions eventually produce satisfying assignment 
particularly simple elegant local method starts assignment variables long assignment unsatis ed clause selected assignment literals changed 
creates new assignment satis es may ruin situation clauses 
repeat procedure hopefully clauses satis ed 
cnf may unsatis able usually put time limit number iterations limit reached give 
simplest variant local approach originally introduced center current investigation 
algorithm denoted rwalksat relies randomness decisions 
initial assignment picked random step random unsatis ed clause picked clause corrected ipping random literal clause 
surprisingly rwalksat behaves better expect 
proved succeeds nding satisfying assignment expected quadratic time satis able cnf 
sat solvable polynomial time obvious simple local heuristic rwalksat solve 
interesting result satis able cnf expected running time rwalksat substantially number variables 
point similar case sat algorithms hard nd speci instances rwalksat requires exponential running time see problem 
clause density ratio number clauses number variables 
random cnfs random cnf clause density 
variables cnf formula obtained selecting 
random clauses size set possible clauses 
distribution received interest years natural distribution np complete instances empirically theoretically computationally hard wide range parameters 
distribution investigated diverse elds physics combinatorics proof complexity algorithm analysis hardness approximation mention just 
basic properties random cnfs small density 
see formulas satis able large density 
see unsatis able 
interesting property threshold satis ability unsatis ability sharp 
conjectured threshold constant exists empirical experiments estimate 
settling satis ability threshold conjecture determination satis ability threshold constant exists important open problems combinatorics see information 
interesting algorithmic question performance sat solving methods random cnfs 
question extensively researched empirically random cnfs commonly test cases analysis comparison sat solvers 
theoretical point view lower upper bounds dll type algorithms distribution 
upper bounds algorithms imply lower bounds satis ability threshold fact lower bounds threshold far come analyzing speci sat solving algorithms 
algorithms average case analysis applied far classi ed myopic algorithms known non myopic algorithms 
hope increase understanding non myopic algorithms random instances 
point lack analysis rwalksat lack interest inherent diculty approaching problem 
myopic algorithms owe name fact view small portion formula assigning variable importantly backtrack 
allows analyze algorithms assuming unobserved formula random 
rwalksat far myopic 
cnfs expected running time quadratic variables reassigned di erent values satisfying assignment 
analyzing algorithm new techniques required 
observed eciency rwalksat long period time sat solving market dominated dll type algorithms 
algorithms extremely popular operate xing value variable time recursively solving sat problem restricted formula backtracking contradiction reached 
new players entered scene form local improvement algorithms rwalksat simplest variant 
algorithms famous walksat gsat compete successfully times outperform best dll type algorithms 
today families algorithms recognized advantages limitations nal verdict best sat solver reached fact annual sat solving contests 
particularly striking example rwalksat local improvement perform extremely random cnf 
instance experiments random cnfs variables rwalksat appears require linear time random cnfs clause density 
advanced algorithms walksat gsat rwalksat subroutine appear empirically solve random instances clause density quadratic time data indicating polynomial running time density recall empirical threshold 
performance largest theoretical lower bound satis ability threshold best conjectured density dll algorithms ecient 
observed eciency algorithms suggests analysis may push satis ability threshold constant currently known results viewed initial step direction 
results proof techniques main results polynomial upper bound running time rwalksat small clause density exponential lower bound large clause density 
upper bound show clause density rwalksat succeeds high probability nding satisfying assignment random cnf variables 
clauses time theorem 
notice di erent notions randomness statement 
rst randomness picking xed randomness choices rwalksat claims deal dual randomness clarify meaning 
say easy rwalksat succeeds high probability whp nding satisfying assignment time claim 
negligible fraction cnfs 
clauses easy rwalksat 
theoretical claim coincides observed eciency rwalksat 
point large gap observed explained 
observed density rwalksat ecient observed running time better prove 
mile walk starts single step 
word proof techniques 
heavily rely show small clause density random cnf onion structure 
partitioned log layers layer cnf easily satis ed rwalksat assuming outer layers satis ed 
running time rwalksat onion formula exponential number layers 
immediately leads upper bound log look closely innermost layers onion show combined layer rwalksat succeeds quickly 
reduces number layers log giving polynomial upper bound 
discussion showing optimality technique presenting onion formulas running time rwalksat exponential number layers 
lower bound rwalksat sided error unsatis able formula gives right answer 
interesting investigate behavior rwalksat satis able formulas 
clause density greater formulas unsatis able 
analyze behavior rwalksat satis able portion random formulas alas characterization 
investigate closely related planted sat distribution 
distribution starts random assignment sure formula obtained satis es assignment 
distribution studied empirically theoretically dual role played randomness studied statistical mechanics models study spin glass model variants closely related planted np instances planted clique planted bisection received attention years 
distribution negative results 
show large constant density formulas hard rwalksat require exponential time satisfying assignment theorem 
order prove rst investigate full cnf comprising clauses satis ed planted assignment 
show rwalksat performs poorly cnf 
standard concentration theorems show behavior random cnf similar behavior full cnf 
outline giving necessary formal de nition section start upper bound small density section 
followed lower bound large density section 
conclude open problems section 
preliminaries boolean variable literal negation called positive literal negative 
clause disjunction literals cnf formula set clauses 
reserve calligraphic notation cnf formulas 
cnf ars denote set variable appearing assignment boolean vector ars weight denoted number ones 
coin toss independent valued random variable success probability 
distribution universe notation denote random element picked distribution cherno bounds see theorems 
theorem np additionally standard bound 
ln ln entropy measure 
random cnfs upper bound distribution 
de nition 
probability distribution obtained selecting 
clauses uniformly random set 
clauses size variables 

means selected random distribution 
call random cnf rwalksat rwalksat operates follows 
input cnf variables time bound starts selecting random initial assignment time step checks satis ed satis es algorithm succeeds 
case random clause selected set clauses satis ed locally corrected satisfy done selecting random literal appearing ipping assignment literal 
new assignment denoted process repeated times 
times algorithm satisfying assignment gives declares failure 
algorithm notation unsat set clauses unsatis ed rwalksat select random initialize return input satisfied select unsat random select literal random flip assignment 
return failed find satisfying assignment steps 
notation denote assignment rwalksat time called initial assignment 
denote rwalksat single execution rwalksat cnf time bound number execution steps 
upper bounds small density section prove high probability rwalksat nds polynomial time satisfying assignment random cnf low clause density 
theorem 
proof shows low clause density random cnf partitioned constant number layers layer easily satis ed rwalksat higher layers satis ed 
expected running time exponential number layers get polynomial upper bound 
low clause density simple pure literal heuristic nds high probability satisfying assignment 
proof uses heavily elements original proof pure literal heuristic layers sets clauses removed single application pure literal rule 
pure literal rule literal called pure appears positive literal negative literal clause said pure contains pure literal 
seeking satisfying assignment natural strategy start assigning pure literals satisfying assignment remove pure clauses 
removal pure clauses may result emergence new pure literals restricted cnf process may repeated 
pure literal heuristic heuristic applies removal process pure clauses remain 
remaining cnf empty pure literal heuristic satisfying assignment failed 
introduce notation 
cnf de ne set pure literals set pure clauses recursively de ne respectively set pure literals pure clauses minimal 
notice pure literal succeeds 
say pure 
showed high probability pure literal heuristic nds satisfying assignment clause density 
particular implicitly proved theorem 
theorem 
exists integer high probability 
jc 
eciency rwalksat pure cnfs claim running time rwalksat pure formula clauses high probability 
immediately give quasi polynomial upper bounds running time random cnfs 
theorem pure cnf formula clauses initial assignment rwalksat 
fails 
proof induction notice clauses pure clause unsatis ed selected rwalksat time satis ed probability pure literal correct value clause unsatis ed execution algorithm 
indicator random variable clause considered time satis ed pure literal case 
rwalksat terminates time independent coin toss success probability 
notice de nition algorithm fact clauses pure independent coin toss success probability 
cherno bound get pr rwalksat fails pr induction step notice cnf pure pure cnf variable set ars ars 
view rwalksat operating occasional noise 
time clause selected things may happen 
satis ed xing pure literal satisfying assignment 
case permanently satis ed removed removal ect ars ars 
satis ed literal view perturbation current assignment main point high probability number perturbations 
apply induction claim perturbation rwalksat take time nd satisfying assignment formally divide execution rwalksat epochs 
epoch starts clause picked satis ed literal number epochs maximal time epoch 
claim pr proof similar case 
number clauses considered execution rwalksat set clauses ordered order picked algorithm repetitions 
indicator random variable satis ed pure literal 
independent coin toss success probability 
apply cherno bound 
pure induction know assignment rwalksat 
fails 
claim get rwalksat 
fails 


theorem follows 
quasi polynomial upper bounds theorem immediately implies quasi polynomial upper bounds random cnfs low clause density 
fact follows theorem 
theorem 
exists constant high probability 
log pure 
proof need standard de nition claim context random cnfs see 
de nition cnf say expander jc jv ars 
jc boundary denoted set variables appear exactly clause called boundary expander jc 
jc fact random cnf decent boundary expander lemma proof follows immediately 
lemma 

constant 
whp 

boundary expander 
complete proof 
theorem exists constant whp cnf 
clauses 
lemma know whp jc boundary expander 
notice boundary set pure literals variable boundary appears single clause linearly pure literals clause contain pure literals 
exists linear fraction clauses pure 
removing clauses apply lemma remove linear fraction clauses 
log repetitions removed clauses log pure cnf 
proof lemma note expander decent boundary expander lemma cnf expander 
boundary expander 
proof follows immediately lemma slightly stronger version lemma 
lemma 

constant 
whp 

expander 
proof set event exists set clauses having variables 
bound probability bad events union bound 


known inequality en 
bad 
ck ck 
en ck ck ck 


inequality holds 
polynomial upper bounds improve upper bound running time rwalksat polynomial giving main theorem 
theorem main upper bound 
exists constant whp rwalksat fails exp proof shall need theorem lemma 
lemma proved immediately proof theorem occupy attention deferred 
theorem jcj expander initial assignment rwalksat fails lemma 
constant exists integer whp jc expander 
original lemma needed expansion factor need constant fraction 
proof essentially 
proof need lemma 
lemma constants 
exists constant whp 

expander 
constant promised lemma 

theorem jc 
constant lemma jc boundary expander 
observed proof theorem jp jc lemma proved 
proof theorem proof intuition 
theorem shows log pure 
take innermost layers view single layer 
layer pure cnf large expansion claim rwalksat terminates quickly initial assignment 
constant promised lemma 
whp jc expanding cnf 
proceed proof theorem 
def notice de nition pure formula 
split execution rwalksat epochs epoch starts clause considered 
theorem proof number epochs whp theorem whp jc expander theorem epoch terminates cubic time 
theorem follows union bound 
rest subsection devoted proof theorem 
words intuition 
highly expanding cnf easy way nd satisfying assignment nding matching clauses variables unique variable clause satisfying assignment 
mean rwalksat nd assignment short time 
notice cnf expanding exists assignment satis es literals clause rwalksat terminate polynomial time unsatis ed clause probability heading direction 
unfortunately lemma gives expansion need new technique show rwalksat succeeds instance 
show highly expanding cnfs exists restriction satis es cnf step probability heading 
proof theorem cnf restriction assignment ars called support 
say satis es clause literal satis ed 
clause disagreement number literals xed belong support satisfy notice satisfying restriction disagreement 
maximal disagreement maximum disagreement clause 
lemma expander clauses exists satisfying restriction maximal disagreement 
lemma cnf variables having satisfying restriction maximal disagreement rwalksat fails exp theorem follows immediately previous lemmas 
proof lemma form bipartite graph left hand put vertex clause right hand side put distinct vertices variable appearing connect vertex labeled clause vertices labeled variables appearing care appearance positive negative literals 
expander expansion factor subsets left hand side jn 
jsj set neighbors hall matching theorem conclude matching left hand side right node left hand associated set neighbors right hand side denoted clauses 
de ne 
variable exists clause members labeled set value satis es leave unassigned 
vertices labeled clause de ned 
lemma follows pair claims 
claim clause satis es proof variables jn 
pigeonhole principle variable appearing representatives de nition satis ed assignment claim clause disagree literal 
proof assume sake contradiction disagrees variables 
de nition variables representatives clauses intersection conclude jn 
contradicts fact jn 
lemma follows 
proof lemma restriction 
hamming distance measured support support set variables xed 


random variable indicating th step execution closer bad neutral 
notice maximal disagreement get probability neutral step conditioned step non neutral probability step 
standard arguments theory random walks show probability failure time exponentially small see chapter pp 
similar analysis 
lemma proved 
tightness bounds may hope case formula satis able simple pure literal heuristic better upper bound rwalksat 
subsection show method encapsulated theorem essentially tight 
theorem shows separation rwalksat pure literal heuristic 
theorem arbitrarily large exist formulas size satis able polynomial time pure literal heuristic rwalksat succeeds 
proof formula slight variation dag contradiction 
de nition cnf variables fx fx fx zg unique satisfying assignment 
pure appears clause satis ed removed appear clause remaining formula 
repeatedly remove formula satis ed 
immediately implies pure literal heuristic succeeds polynomial time 
claim rwalksat requires exponential time succeed number ones assigned variables whp rwalksat succeeds know 
step probability decreasing 
theorem follows standard arguments theory random walks 
lower bounds large density section show rwalksat algorithm random cnfs large clause density 
de nition rwalksat gives correct answer unsatis able formula 
large clause density 
formulas 
unsatis able 
may argue rwalksat operates densities 
second thought distribution constant time algorithm fails input reading operates 
sense discuss performance rwalksat uniform distribution satis able formulas 
clauses denoted sat 
problem small densities sat characterized don know analyze 

sat characterized see details 
propose look pair planted sat distributions satis able cnfs 
distribution highly interesting right 
studied empirically analog planted clique planted bisection distributions studied 
de nition planted sat 
distribution obtained selecting random selecting random 
clauses clauses size satis ed denote random formula distribution 
distribution obtained selecting random clause satis ed select independent probability 
denote random formula distribution 
theorem main lower bound exists constant 


may function whp 
rwalksat succeeds constant depending 
simplicity proof distribution 
point analysis carried distribution 
rest section devoted proof theorem 
warm discussing case maximal size cnf satisfying apply insights case random cnf 
rest section assume loss generality random planted assignment zero vector denoted 
full cnf size clauses size satis ed 
subsection analyze behavior rwalksat cnf show ineciency 
generalize analysis 
claiming random piece full cnf behavior rwalksat close behavior simple formula 
analysis rwalksat full cnf de nition full cnf cnf containing clauses size exactly repetition literals satisfying 
theorem rwalksat succeeds proof theorem need lemma 
line length graph ng ng 
lemma random walk line length starting position assume interval vertices fa bg probability making move direction standing vertex constant 
reaches steps proof position time random variable move time formally assume reaches time time interval 
means recalling get 








exp exp possible selections setting union bound completes proof 
proof theorem set clauses having literals satis ed unique satisfying assignment 
number clauses satis ed de ned depends actual assignment set clauses having exactly negative literal literal assigned remaining positive literals assigned 
clauses 
analogous calculations performed yield 

satisfying assignment characterize moves rwalksat bad 
move reduces weight bringing closer satisfying assignment bad move increases weight 
calculate probability making move assuming current assignment weight denote probability elementary analysis shows increasing function range lim lim happens 
done 
whp assignment probability move depends probability rwalksat succeeds steps probability random walk line starting distance reaches steps probability moving direction standing position get 
lemma completes proof 
generalization section complete proof theorem 
previously mentioned lower bound follows observation obtained small piece expect behavior rwalksat similar behavior points need careful 
rst may satisfying assignments 
argue lemma true large 
assignments small hamming distance 
second problem small weight assignments probability making step large 
show lemma large 
whp happen 
rwalksat operates 
poorly operates proofs lemmas follow proof theorem 
proof theorem event satisfying assignment hamming distance greater planted assignment 
lemma exists constant 

probability 
property exponentially small 
de ne move rwalksat decreases weight current assignment 
call clause negative literals 
clause selected move probability bad clause having negative literal move probability 
claim numbers bad clauses tightly concentrated expected values probability move roughly move fix recall de nition equations 
number clauses negative literals satis ed xed random random variable depending independent particular assignment sum independent coin tosses probability completely independent disjoint 
denote binomial distribution coin tosses success probability de nitions def 
plugging values get 


event number bad clauses satis ed smaller similarly probability number clauses greater 

notice de nition larger 
bad event exists assignment occurs numbers bad clauses far expected 
lemma shows large 
happen 
lemma exists constant 

probability 
property bad exponentially small 
attempt optimize constants 
set lemmas exists 
bad exponentially small 
fix 
whp satisfying assignments weight 
notice increases weight lemma number bad clauses unsatis ed 


similarly assuming true number clauses unsatis ed 



move 

whp initial assignment rwalksat weight greater satisfying assignment weight 
assignment having weight probability rwalksat making move close 
lemma completes proof theorem 
proof lemma assuming wlog bound probability event xed having weight 
clauses satis ed exp 
union bound standard inequality get 

exp 
exp 

ln get exp constant 
proof lemma bound probabilities individually start 
plugging value cherno bound get exp exp 
deal 
notice 
assuming plugging value cherno bound get exp exp 
notice value maximal minimal 
union bound assignments weight get bad 

exp 

minf notice xed select 

minf lemma follows 
open problems 
largest 
prove rwalksat polynomial running time 
rst step prove polynomial upper bounds 
similar bounds known myopic algorithms 
largest 
prove rwalksat polynomial running time 
ecient algorithm nds whp satisfying assignment 
large constant 

connection 
sat constant 
bounds distribution imply bounds 
characterize instances distributions rwalksat performs instances correspond cnfs encountered practice acknowledgments madhu sudan useful discussions 
second author rocco helpful discussions 
bart selman andrew parkes valuable information empirical results regarding rwalksat 
chinese proverb 
fortune cookie chang sho restaurant cambridge ma 
achlioptas beame molloy 
sharp threshold proof complexity 
proc 
stoc pp 
achlioptas sorkin 
optimal myopic algorithms random sat ieee symposium foundations computer science pp 
alon 
finding large hidden clique random graph random structures algorithms 
ben 
size space tradeo resolution 
stoc 
ben 
finding randomly planted assignment random cnf 
preparation 
ben wigderson 
short proofs narrow resolution simple 
proceedings st acm stoc pages 
broder frieze upfal 
satis ability maximum satis ability random cnf formulas 
proceedings fourth annual acm siam symposium discrete algorithms pp 

cha 
performance test local search algorithms new types random cnf formulas proc 
ijcai th international joint conference arti cial intelligence vol 
pp montreal august 
chv atal szemer edi 
hard examples resolution 
journal association computing machinery 
vol 
pp 

cook 
complexity theorem proving procedures 
proc 
rd ieee focs pp 

cook mitchell 
finding hard instances satis ability problem survey 
dimacs series discrete math 
theoretical computer science vol 
pp 
crawford auton experimental results crossover point random sat 
arti cial intelligence 
feige 
relations average case complexity approximation complexity 
proc 
stoc montreal 
feige finding certifying large hidden clique semi random graph random structures algorithms 

sharp thresholds graph properties sat problem 
amer 
math 
soc 

janson 
bounding unsatis ability threshold sat 
random structure algorithms pp 
jerrum sorkin 
simulated annealing graph bisection 
proceedings th annual ieee symposium foundations computer science november 
gelatt vecchi optimization simulated annealing 
science 
koutsoupias papadimitriou 
greedy algorithm satis ability 
information processing letters august 
luby mitzenmacher shokrollahi 
analysis random processes andor tree evaluation 
proceeding acm siam symposium discrete algorithms 
motwani raghavan 
randomized algorithms 
cambridge university press 
papadimitriou selecting satisfying truth assignment 
proceedings nd annual ieee focs pages papadimitriou computational complexity 
addison wesley 
parkes easy predictions easy hard easy transition 
proc 
aaai 
parkes personal communication 
pavel michael saks francis improved exponential time algorithm sat ieee symposium foundations computer science 
probabilistic algorithm sat constraint satisfaction problems proc 
focs pp 
selman personal communication 
selman kautz local search strategies satis ability testing dimacs series discrete mathematics 
appear selman kautz empirical study greedy local search satis ability testing 
proc 
aaai 
selman kautz cohen local search strategies satis ability testing 
dimacs series discr 
math 
theoretical computer science vol 

selman levesque mitchell new method solving hard satis ability problems 
proc 
tenth natl 
conference arti cial intelligence aaai san jose ca 

