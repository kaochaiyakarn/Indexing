peer peer information systems damien berry ralf student uq edu au university queensland october innovative type technology flexible scalable providing communication autonomy system 
environment examined broad ranging evolution ary procedure addresses previous field current information system conceptual design potential workflow technology improve efficiency 
study proposes global sub schema new conceptual schema defining information systems data allocation algorithm optimizes information transfer information system scheduled workflow management system 
contents outline 
literature review local relational model 
data management peer peer computing 
locating data small world 
peer peer scientific col 
dynamic replica placement scalable content delivery complex queries dht peer peer networks 
erasure coding vs replication 
defining topologies 
distribution 
heterogeneity 
autonomy 
analysis implementations napster 
gnutella 

freenet 
morpheus kazaa 
groove networks 
development platforms 
distributed information management 
information system 
definition information system 
read queries 
update querying 
replication 
scalability 
schemas 
global schema 
multiple local schemas local relational model 
proposed schema 
semi autonomous schemas 
workflow scheduling 
scenario information system scheduled workflow 
dynamic data allocation information system sched workflow 
pseudo code data allocation algorithm 
chapter internet largest decentralized computer system world ironically systems built internet com pletely centralized 
peripherals internet increas ingly imposed second class membership new methods explored allowed outer lying entities communicate 
peer peer applications prevalent couple years unique information sharing techniques 
technology communication method enables entities ity internet communicate may dynamic ip computing achieved interaction independent peers peer client server 
computing popular advent napster 
napster true network fact brokered network 
means server finds relevant peer looking informs ip address 
napster popularized idea file sharing peers soon pure file sharing applications gnutella morpheus arose 
instant messaging big success 
similar email conversation direct responsive 
lot interest technology moment little conducted database perspective 
research done serafini local relational model lrm provides foundation base research 
research formally establishes validity multiple local schemas proposes theoretical method establish mappings schemas propagating queries database 
totally concept multiple local schemas possibility database existing single global schema ruled fact study show working products currently utilize schema 
outline domain investigated aim pro feasible information systems 
chapter reviews current information system literature provides critique current approaches 
chapter summarize define current technol ogy identify standard information system approach auton heterogeneity distribution relates domain 
chapter analyze existing systems classify systems conventional information system domains discussed chapter 
chapter describe practical model information systems particular investigate various types schemata propose new schema believe applicable domain 
chapter examine possibility integrating information systems workflow concepts 
chapter summarize findings discuss potential current information system environ ment 
chapter literature review database community idea peer peer information systems relatively new untouched subject 
majority papers point time tentative steps addressing issues modern information systems classical information systems perspective 
unfortunately viewing domain classical computing viewpoint 
chapter examines research material available order determine proposed solutions issues confronting current information systems 
local relational model local relational model describes peer peer open ended network distributed computational peers peer set acquaintances peers exchanges data services 
major requirement computing peer maintains full autonomy local resources choose times participates network activities 
global control form global registry global services global resource management global schema global repository data contained network 
main focus propose conceptual model architectures 
argues current global conceptual approach design inadequate new model needs introduced der take full advantage concepts 
new model proposed local relational model lrm 
model describes schema definition pair wise grouping interacting information stores system 
groupings definition coor formulas domain relations system 
goes formally prove viability conceptual design declaratively illustrates query system lrm operates 
major drawbacks concept schema defi nition peer 
relationship peer determined individually dynamism network drastically reduced 
result network schema utilized static 
issue schema conceptual guideline schema 
allowing participants complete design autonomy enforcing theme system increased opportunity focus drift 
focus drift occurs system primarily designed purpose unrelated topic 
focus drift explained greater detail chapter 
querying method concern lrm forced recursive query propagation method 
forced method system subjective devastating effect network 
recursive query prop method explained detail chapters 
data management peer peer com puting data management peer peer computing describes practical application lrm investigates practical chal addressed lrm utilized conceptual schema 
particular local mapping schemata posed largest problem approach authors suggest potential solution data mining techniques automate formalization coordination formulas domain relations 
possible utilize datamining achieve goals incredibly difficult 
datamining algorithm forced address syntactical differences potentially disparate schemata deal potential semantic differences 
fails address ramifications algorithm making mistakes just assumes algorithm accurate 
locating data small world 
peer peer scientific collaborations file sharing habits collaboration locating data small world 
peer peer scientific collaborations illustrates researchers tend collaborative groups demonstrate certain characteristic file sharing patterns 
patterns demonstrate researchers share overlapping data interests share information 
illus access habits collaboration group hundreds physicists countries share large quantities data 
realization method optimize information sharing academic groups clusters increasingly relevant 
highlights benefits self configuring network specialized scientific data scientific groups 
addition illustrate mechanism improve search retrieval performance data sharing specialized scientific collaborations 
relevant concepts applicable current applications 
dynamic group topology effective implementing scheme 
dynamic replica placement scalable content delivery dynamic replica placement dissemination tree dynamic replica placement scalable content delivery proposes replica placement protocol called dissemination tree optimizes placement replicas network 
idea order offer network provides higher throughput users tree structure created 
structure contains data source root node replicated data 
leaf nodes tree users cache located 
concept nodes contain replicas nodes network high degree participation system available time 
system uses directional heartbeat track users system idea algorithm maintain optimal structure enables large scale access data resource 
illustration dissemination tree showing detail interaction system 
major issues concept designed network exhibits high connectivity 
proposed solution environment luxury high connectivity assumed 
basic concept organize network structure object distributed system 
data tion attributes system highly efficient setup maintenance costs quite prohibitive especially dynamic environment 
complex queries dht peer peer networks complex queries dht peer peer networks proposes distributed hash tables conjunction fuzzy matches hash table index facilitate superior querying method 
dht shown provide stems greatly increased scalability exact match capability 
opinion authors sub strings able accommodate spelling anomalies slight variations resource names slight increase false positives 
long term goal provide complete set complex query mechanisms assist users obtaining relevant results systems 
viable concepts applications 
complex queries dht peer peer net works examines depth query resolution issue directly augments techniques proposed 
erasure coding vs replication erasure coding vs replication quantitative comparison introduces idea self repairing systems 
order achieve approaches studied replicated system erasure resilient system achieved erasure codes 
erasure codes codes ones raid system 
study shoes system built erasure codes exhibits mean time failure orders magnitude higher bandwidth requirement order magnitude replicated system 
erasure shown effective study dy namic characteristics topology haven considered 
study assumed average peer connectivity network percent 
assumption may relevant tradi tional approach peers exhibit communication autonomy hardly relevant standard network 
chapter defining common definition computing computing achieved interaction independent peers peer client server 
computing relatively simple applications today take advantage benefits computing order provide services simply aren possible standard centralized systems 
largest benefits systems communication control empower users system 
chapter current applications investigated 
investigate applications need gain appreciation decentralized topology central understanding applications 
section provide brief descrip tion critique common communication topologies 
illustrate theoretical aspects current computing classi cal information management dimensions 
describing computing domain dimensions hope portray computing distributed information system 
topologies 
internet today topologies 
com mon topology currently internet centralized client server approach 
complex applications running internet single topology majority hybrid current topologies allows incorporate benefits system possi ble 
widely known file sharing programs napster hybrid system 
combines centralized search structure topology handle file distribution 
important understand topologies avail able order develop large scale program overcome challenges interconnected computing presents 
order understand topologies need explore topologies depth 
topological structures internet focus main ones 
pure topologies examine centralized ring hierarchical decentralized 
examined detail proceed examine common hybrid systems centralized ring centralized decentralized 
centralized topology 
centralized systems far simplest network topologies understand 
centralized system consists single server supports clients 
approach simplistic inherent benefits drawbacks 
graphical example seen 
sheer simplicity system offers advantages terms data consistency security manageability 
system located physically location problems information remote sites date obsolete 
system point connection securing system far simpler multiple points access 
addition fairly obvious managing centralized system far easier managing system distributed locations 
drawback centralized system centralized topology place 
hard felt ramifications dealing issues fault tolerance scalability 
centralized server fails services provides 
drawback having located place fault tolerance 
addition centralized systems hard expand 
means capacity server reached ability support clients services 
respect easy state centralized systems scalable 
ring topology 
topology consists collection computers connected ring structure 
ring system offers complete duplication mem bers ring 
graphical example seen 
system offers built redundancy 
circumstance failure occurs node loss data information replicated nodes system 
simple fall logic provides system excellent recoverability ability 
major benefit ring system scalability 
order increase capacity simple process add node ring consequently capacity increase nearly linearly 
addition ring system offers ring topology benefits centralized system including manageability security coherency 
users system utilizing topology usually require owners mission add data ring 
reason system extensible 
issue ring systems participating ring access ring means data accessible large audience 
hierarchical topology 
hierarchical topologies take form tree structure control node head tree 
node tree responsible nodes directly 
structure scalable whilst having control 
graphical example seen 
hierarchical systems fairly high degree manageability sense clear chain command exists 
hierarchical systems extensive mean node add data main benefit hierarchical systems scalability node add sub nodes wish 
major drawbacks hierarchical system security concerns 
node system subverted entire topology suffer information flows downward upward 
hierarchy topology hierarchical topologies take long time propagate message participants system 
decentralized topology 
decentralized topology synonymous peer peer architecture consists nodes predetermined interconnectivity 
graphical example seen 
decentralized topology decentralized systems incredibly fault tolerant ble 
fault tolerance network attributed unpredictability individual nodes 
types systems normally designed function environment nodes connect disconnect failure node little impact functionality system 
regards extensibility system attributed autonomy nodes system 
system nodes ability add information see fit 
contrast excellent advantages centralized systems provide major challenges 
generally speaking decentralized sys tems tend security concerns lack authoritative influence 
probably concerning issue facing systems algorithms available data query propagation 
overhead query propagation algorithms require grows proportional size system 
early stages gnutella overhead attributed failing system 
scalable algorithms decentralized approach really attractive topological choice 
centralized ring topology 
centralized ring topology topology favored data hosting organizations internet 
centralized ring topology consists ring servers clients graphical example seen 
centralized ring topology combining centralized ring topologies gain benefits systems 
ring provide scalability fault tolerance standard centralized servers lack centralized topology provide manageability security data consistency 
real issue extensibility autonomy system users general free add new content disconnect system discretion 
centralized decentralized topology 
centralized decentralized topology contains underlying decentralized system extremities system acting centralized servers clients 
graphical example seen 
centralized decentralized topology partially centralizing form system gain coherency system 
addition scalability system far superior purely decentralized system 
probably promising architectures available 
decentralized approach issues security message propagation control 
distribution information system differ dramatically conventional systems distribution dimension 
unique components highlighted network mobility topology query propagation content propa gation 
network mobility ip transparency attribute synonymous applications network mobility 
net mobility applications ability function distributed network dynamic ip address 
usually means abstraction away ip system 
example jxta sys tem users ip addresses mapped jxta peer id identifier application usually significantly larger standard ip address applications pc peer addresses 
topology pure networks currently functioning nant types topologies group topology mesh topology 
topologies usually hybrid traditional topologies topologies 
mesh topology mesh topology domain consists node con neighbors shown nodes connected neighbors mesh pattern formed 
topology potential unlimited scalability node keep adjacent nodes participating entities network 
problem design data searches con propagating requests wave centered node 
request propagates sender possible flood large networks quickly especially large numbers nodes simultaneously issuing queries 
method combat problem allow requests propagate hops terminated 
limits possibility flooding effect adverse effect re network visibility node 
restrictions number messages network approach uncontrollable 
approximation size order number connections node power number propagations message allowed multiplied number simultaneous messages system 
group topology group topology seen lot conceptualize peers network partic group 
type topology support unlimited expansion peers need stored num ber peers need send query requests prohibitively expensive time consuming 
aside benefits scheme offer 
benefits completeness searches 
search guarantee nodes cur rently participating network receive message network errors aside 
query propagation main forms query propagation information systems recursive method direct method 
recursive method query reaches node query reissued node waits response nodes queried 
direct method node receives query immediately answer query pass query adjacent nodes 
contrasts different methods query propagation 
content propagation major benefits content propagation cost savings provides information distributors 
economical disperse information cost dispersed network 
networks freenet data returns query caches return path subsequently retrieved locations 
case open cola multiple users trying obtain information concurrently receivers servers receiving content pass nodes request information 
illustration technique action 
bandwidth main limiting factor scalability networks bandwidth 
request query network carried portion network reach participants network significant impact performance network 
attempt reduce impact data available bandwidth current networks try redistribute data parts network needed 
clearly solve problem go way impact queries 
heterogeneity information system world major categories need addressed protocol application heterogeneity 
het refers existence 
complement heterogeneity refers existence 
protocol protocol refers situation standard pro tocol developers free implement applications utilize protocol 
example gnutella 
gnutella just protocol applications utilize protocol participate gnutella network 
application application refers participation net requires standard application 
obviously application requires protocol order function efficiently 
autonomy autonomy extremely relevant aspect information systems avail able today 
attractive attribute information systems exhibit degree communication autonomy equally important aspects autonomy need considered design resource execution replication autonomy 
design design autonomy refers ability database change con ceptual schema 
issue close heart databases relevant databases 
file sharing applications utilizing benefits loosely defined global schemas inception 
storing mp searching music audio files file names prim itive implementation global schema 
possible application participate multiple networks networks may schema 
go step participants unique schema entities communicate 
communication application choose participate network 
file sharing applications today communication autonomy 
applications may difficult disconnect environment minimizing instructed close forcing terminate process manually possible exit network causing adverse effects network 
possible applications fail participants connected 
systems suffer unacceptable degradation perfor mance members network 
instances systems communication autonomy required participate network ensure efficient network performance 
resource resource autonomy participating member network total autonomy local resources 
items comprise local resources disk space cpu files local devices 
applications currently focus shared data reason local resources shared 
shared data illustrated current file sharing applications user share files wants 
example current file sharing application local resource autonomy freenet 
application local files encrypted stored users computer user idea stored computer 
execution execution autonomy giving permission remote application execute code local system 
point time popular concept current systems 
alternatively hand concept execution autonomy especially agents receiving large amount attention academia 
replication process control amount timing positioning repli cas said replication autonomy 
networks data replication occurs independently peer owns information 
leads interesting question consistency replicas 
cases consistency issue addressed left user determine replica 
query propagation chapter analysis implementations purpose section show exists number implementations 
implementations operating successfully thought information repositories classical information systems perspective 
vast number file sharing applications today include applications gnutella napster groove freenet open cola morpheus 
list comprehensive new products emerging daily 
main reason applications obtained popularity overcome restrictions dynamic temporary ip connections places user 
development environments share conceptual topology interesting note file sharing applications share similar fundamentally different topology development en 
development environments logical group file sharing applications logical mesh 
structures advantages disadvantages 
main advantages mesh approach potentially limit scalability 
major advantage file sharing systems want reach large audience possible 
trade increased scalability completeness searches reduced 
products information systems widely academic community 
napster napster may application certainly known 
pure program definitely started revival 
napster written author shawn aimed create online community shared music 
achieving internet users perceived new era communication previously restricted accessing centralized components internet 
distribution 
ingenious part napster content distribution aspect program 
napster works having centralized index server utilizes technology file transfers users 
uses centralized directory dynamic list enables users take full advantage network mobility 
far topology goes classic hybrid centralized decentralized network approach 
approach attitude users system drastically reduces costs napster system 
making users contribute cost running system created current demand 
lets consider costs involved running napster system 
actual napster contributes partially cost system maintain directory files shared system 
average file napster system mp music file roughly mb 
location file transmitted times file downloaded 
simplicity lets assume audio file details transmitted times downloads file response kb napster effectively paying price providing song sharing community considering bandwidth saving space saving involved storing files napster system 
heterogeneity 
application authentication napster network ex application protocol 
autonomy 
napster network room design autonomy 
primarily single protocol index servers napster network uses 
case execution autonomy provision type activity napster protocol 
communication resource autonomy hand completely left participant napster network 
participant com pletely free disconnect connect 
likewise participant complete control local resources services 
napster vast amounts replication occurs system fact essential overcome users communication autonomy 
unfortunately replication controlled system leads naming inconsistencies searches 
user control metadata decides modify metadata sense problems arise 
exhibited current file sharing systems including napster 
gnutella 
new protocol gnutella emerged market 
gnutella large growth popularity partly due napster pending legal action indirectly affected napster users 
revolutionary difference gnutella offered users completely decentralized approach file distribution 
appeals sections community ways 
firstly difficult network put business due legal action gnutella protocol central administration 
advan tage eliminating running costs centralized server 
advantages unfortunately disadvantage gnutella limitations regards completeness searches increased network traffic 
distribution 
gnutella system provides user complete ip transparency network mobility 
gnutella application people think protocol 
protocol freely provided wishing develop system participate gnutella network 
protocol works creating mesh interconnected nodes participate share information 
nodes allowed join leave system mesh just dynamically adjusts accommodate 
queries system propagated broadcast system 
node usually nodes system 
node issues query passes query nodes 
query query identification node know passed particular query 
node answer query responds directly node issuing query metadata object contains 
query results start come back query issuing node free contact request objects directly node question 
network grows bandwidth taken queries grows constantly 
situation acceptable large networks majority networks bandwidth consumed propagation queries transfer data 
solution implemented gnutella restrict number hops query allowed 
solution effectively puts restriction impact single message reducing percentage network bandwidth consumed query constant manageable 
heterogeneity 
main gnutella protocol enforces sense protocol restriction developers conform tightly gnutella protocol 
fact currently variations gnutella protocol developed different developers 
applications usually offer basic features specified gnutella protocol plus additional features offered standard gnutella protocol 
application heterogeneity obviously protocol het application heterogeneity 
autonomy 
element design autonomy gnutella system 
primarily developers restricted implementing standard features gnutella protocol 
allowing developers ability expand protocol gnutella effect allowing evolution ary process occur 
means advances domain gnutella protocol grow absorb beneficial innovations 
unfortunately addressed system tion aspect potentially disparate designs modifications may visible participants network 
communication autonomy main principal system designed 
concept having dynamic mesh inter connecting nodes facilitates users ability join leave discretion 
addition control participate network node complete control local resources 
network need allowing entities execute appli cations remote nodes complete execution autonomy 

ways similar gnutella 
provides ip transparency network mobility user 
network topology constructed mesh pattern allows dynamic joining leaving nodes network 
distribution 
noticeable deviation standard file sharing applications seen query propagation techniques 
physically queries propagate standard fashion initiated standard manner 
standard fashion propagating central point wave gnutella 
difference standard applications folders 
search conducted similarity users folders search target folder taken account determining relevance search results 
addition program adapts reactions search results order provide relevant results 
ingenious system called system reduces communication burden hosting computer multiple computers want data 
sets tree structure interconnected nodes level computer hosting information sits root node 
computers higher bandwidth internal nodes 
content passed root node lower nodes pass information children participants acquire information 
important thing note structure totally dynamic flexible 
flexibility possible approach actual content distribution method employed 
firstly data divided packets percent redundancy 
means receiver potentially need receive thirds transmitted message achieve suc download 
receiver sources supplying data allows utilize available bandwidth incur percent overhead 
heterogeneity 
software allow clones network 
mind ability application protocol heterogeneity 
autonomy 
little room design autonomy system 
primarily nature software 
infor mation sharing networks today communication autonomy paramount 
aimed sharing information 
shared user responsible data share system complete resource autonomy 
freenet 
freenet initially arose resistance censorship laws imposed western societies internet access 
freenet aims create network contribute fear recourse 
distribution 
freenet system provides complete ip transparency user applications coupled freenet strong network mobility creates powerful private system 
basic architecture mesh design 
participants required donate portion hard disk network 
space encrypted users see information contributing network 
user uploads data network data migrates random location 
frequently piece data accessed copies appear network 
piece data accessed period time removed 
network allows users contribute anonymous fashion addressing significant problem content servers encounter popular piece data available query propagation freenet substantially different applications 
main goal system provide complete anonymity users content providers system 
re markable feat achieved forcing queries propagate standard fashion don return address attached 
return ad dress forces answers return way came doing ensuring users system provided complete anonymity 
content returns path actively replicates return path 
doing ensures content valued requested volume available increases proportionately 
heterogeneity 
order fully participate ensure anonymity system important discourage modifications application ensure type application 
mind easy understand application 
similar reasons clear see protocol system forcing protocol 
autonomy 
design autonomy allowed freenet system primarily ensure privacy nodes maintained 
file sharing applications room communication autonomy user decide participate network 
freenet file sharing applications complete resource autonomy 
freenet allocates available information network encrypted form node hosting information aware content hosting 
order requires fixed portion users hard drive 
execution autonomy applicable system processes run local sites 
likewise system controls replication process replication autonomy 
morpheus kazaa 
morpheus kazar file sharing application uses standard file sharing principals 
morpheus kazaa thought different programs utilize component section treating program 
distribution 
morpheus similar file sharing applications avail able today 
basic underlying architecture mesh topology 
furthermore system provides ip transparency mobility fashion systems 
sets morpheus apart file sharing programs improved metadata system 
implements extremely crude database file system 
example download audio file folders created group artist group category 
folders populated artists name links placed file 
ultimately creators morpheus trying achieve file relation artist relation music genre 
basically database implemented extremely crude way 
beneficial aspect morpheus downloading system similar mojo nation swarm distribution 
system enables users maximize incoming bandwidth supplies content users faster potentially optimizing data distribution internet 
heterogeneity 
morpheus kazaa software applications don allow clones network 
mind protocol het application heterogeneity shown existence applications 
autonomy 
system similar applications standard communication autonomy lacking design autonomy replica tion autonomy execution autonomy 
groove networks 
groove networks advantage ideas incor shared workspace 
groove networks sequel lotus notes aims facilitate collaborative workspace includes things version control document locking messaging simple environment employees 
thing users really notice compared similar products lack program administrators attributed open collaborative environment programming 
distribution 
entirely falling group mesh topology groove similar group topology 
peer groove networks registers presence server allows peers aware peer ip address 
mechanism similar group topology group topology group leader presence server completely dynamic 
groove networks peer presence server presence server fails 
concept persistent messages groove networks enables reliable communication face communication auton 
achieved having relay servers hold information target registers presence server 
heterogeneity 
groove networks product little room appli cation protocol heterogeneity 
autonomy 
communication autonomy central design groove networks enables users connect disconnect shared workspaces 
groove networks provides users replication autonomy 
allows user identify devices wish maintain replica working environment 
completed system maintain synchronize replicas network 
development platforms 
developer applications current information technology market little way development platforms choose 
choice microsoft sun relatively 
aren environments choose moment differ greatly offer programmer 
jxta basic closest thing true environ ment small bootstrapping process 
applications join jxta group connect centralized server ip associated unique identification number jxta system 
process complete applications system participate logical addresses 
way jxta operates group approach 
peers participate application collected group 
members group group 
enables participants static point dynamic ip address 
main benefits jxta offers completeness searches 
completeness searches refers ability search propa gate members jxta group 
massive impact viability databases need concise answer database world 
comparatively microsoft dot net distributed application development environment approach considerably different 
dot net hybrid design having lot features centralized 
tightly coupled microsoft passport system security created managed user microsoft 
development platform offers centralized services predefined constructs aid developer producing applications 
basically conceptual structure similar jxta addition centralized services 
third development platform system implemented web browser 
system highly structured allows programming application migration 
chapter distributed information management 
information system 
interestingly little theoretical conducted far information systems having said particular provides model certain section information systems 
serafini describes open ended network distributed com putational peers peer set acquaintances peers exchanges data services 
major requirement computing peer maintains full autonomy local resources choose times participates network activities 
global control form global registry global services global resource management global schema global data contained network 
serafini continues show multiple relational schemas conjunction provide global access method data system 
believe stage de velopment information systems rule existence global schemas 
fact research shown global schemata current information system 
base investigation information systems similar definition 
definition information sys tem 
information systems dynamic open ended networks peers operate collaboratively facilitate large data resource 
global control global services 
single important aspect technology ability individual peers participate 
local relational model provides strong theoretical foundation information systems 
don entirely agree concepts lrm utilize contrast information systems 
read queries 
greatest challenges system today responsiveness 
lack responsiveness exhibited current systems entirely attributed way queries handled systems 
query system number hops nodes system aware query 
time hop total time taken query increased 
ideal able communicate query node time 
unfortunately concept sending node network message feasible large scale networks 
reason impractical fold 
firstly required keep date list peers network practical space required store list 
dynamics peer network having current list including peer infeasible 
secondly need send separate message node network practical due potential bandwidth limitations network congestion place querying node 
mind resulting reads systems sim ple 
existing technologies utilize technology comes initiating queries 
standard approach primarily due underly ing architecture 
hand comes responding queries couple methods available nodes system 
describe method query propagates network 
outline discuss possible methods available respond query 
queries propagating outwards wave node originated query 
node receives message pass message node connected 
message system contains unique identifier allows nodes identify discard duplicate messages sent 
unique identifier usually comprised peer address message number 
size message number bits number messages node transmit determine upper limit messages theoretically allowed exist system 
message allowed remain system period time approaching limit possibility message values increases 
clarify procedure message passing provide example illustrates passing message nodes 
nodes connected sequentially na nb nc addition node nd connected nb nc 
message propagates outwards na travel adjacent nodes nb 
nb obtains message propagate message adjacent nodes nc nd 
lets assume connection node nb nd slow message node nb node nc arrives 
node nc transmit message node nd message arrives node nd message node nb nd node nd accept message nc discard message nb duplicate 
system methods respond query directly recursively 
direct return method propagating query contains infor mation enables nodes direct communication path originating node 
direct communication path ip address peer id able respond node question 
method communication preferred option file sharing development platforms utilize approach 
alternative direct return method recursive approach 
recursive approach works having node propagated query hold response nodes forwarded re quest responded 
method similar way freenet mls works 
ways benefits drawbacks 
recursive method greatly reduces network traffic querying node decrease traffic 
problem recursive method delay significantly increased 
actual time times longest delay level tree 
difference direct replies information isn returned comes soon possible matching nodes 
shortest possible time data returned direct approach just hop 
course drawbacks receiving node handle replies 
largest issues recursive methods increased susceptibility increased propagation times increased quantity messages network point time 
occurs network messages pass ing network congestion increases point messages lost long time outs occur 
networks rely propagation messages network systems ex answers immediately considerably longer usual time outs 
recursive return approach lengthy time outs longer 
users flood network requests buffers computers overflow underlying network overloaded 
result way system starts slow lose connectivity 
loss connectivity attributed fact nodes time multiple times assumed longer connected try obtain new handle network 
continues happen network fragmented communication protocol overhead increases 
summation re sult slow disconnected network 
reducing average message time reducing number intermediate communications reduce possibility 
words direct return method recursive approach reduce chance allow nodes participate network 
update querying currently commercial products facilitate updating information peers 
leaders field groove networks 
grove networks able provide shared workspace complete version control distributed peers 
main reason system able facilitate deals relatively small sized networks utilizes primary copy approach data management 
groove networks handles update queries forcing peer acquire lock primary copy server process distributed agreement 
node disconnected system time entity updates distributed copy rejoins system obtain latest version data 
server specifically designed ensure entities sync performs synchronizing step maintains consistency group primary copy approach 
clear see approach true approach 
true approach maintain data integrity system compensate random peer provide system enables remote peers update information system accordance conceptual view system relying servers 
systems writes locally generally controlled user example inserting new file shared gnutella folder 
enforcing user centric updating system easily avoid conflicts deadlocks enforce unambiguous versioning files local site 
process limits database domain ability propagate update central functionality database system 
information system assume updates take place similar fashion traditional information systems method takes advantage message architectures 
leads potential update methods directed broadcast 
directed method system data store stores wishes update 
obtained ways querying remote peer information result query propagated data store dynamic list 
advantage direct query update method uses far bandwidth perform update time takes message travel computers plus processing time target system 
broadcast method utilizes standard propagation characteristics network order propagate update nodes network possible 
method bandwidth consumption issue number messages created system potentially equal number nodes system minus 
addition time taken complete operation sort proportional log number nodes system multiplied constant 
advantage approach order update systems network updating node needs send message 
replication system comprised autonomous nodes reasonable expect time participants system un 
poses problem system data resource 
common solutions unreliability introduce concept replication order increase likelihood replica requested data available time 
popularity information systems increases aca community papers addressing data management persistence issues emerged 
systems try actively encourage replica tion system fail effectively manage replication taken place 
section new solutions proposed direction current research questioned 
point time repli cation management applications 
current approaches replication management data persistence conveniently ignore autonomous nature peers system assume level connectivity high percent 
approaches aim achieving high standard data management widely accepted networks perfect users fact expect high standard 
example look gnutella network 
instances applications gnutella network try encourage replication adding retrieved file immediately available library user 
addition partially downloaded file available user share network 
user queries network reality compiling list potential objects match search 
perfect time conduct replication management user potential replicas system 
examining metadata conducting bit wise comparisons files determine potential matches replicas 
introduce additional metadata field object uniquely identifies system time stamps versioning control manage replicas system 
approaching problem fashion replica management issues improved autonomous system 
compared proposed methods section operating autonomous environment shown approach superior 
reduction performance methods mainly attributed increase communication overhead involved methods operate autonomous environment 
hand semi autonomous environment methods provide greater provide improved repli cation overhead 
scalability 
system shows greater promise scalable solution compared conventional distributed information solutions 
sys tem scale problems overcome implementing hierarchy groups 
concept groups observed easily looking jxta specifica tion applications concept called slightly different 
groups grouped larger group form structure 
struc ture provide address mappings similar dns system allow node system contact group nodes 
feasible implemented jxta system node member multiple groups 
allows node roles system simply classifying groups member 
schemas 
schemas basic building blocks information system 
databases deal schemas explicitly applications implicitly apply concept schemas order achieve consistency system 
applications schemas deal large quantity data handle 
schemas systems explicitly stated 
lets consider file sharing applications 
applications focused sharing files retrieve file 
option search file name 
option search type file example music video executable file 
files stored systems cataloged potentially characteristics schema information system exists 
concept global schema embraced file sharing community standard approach distributing information 
global schema describes entities relationships relevant instance universe discourse represented information system 
multiple local schemas concept introduced local relational model 
basic principle model separate schema defined pair interacting nodes system 
details model provided section 
form schema investigating idea global sub schemas 
node participating system shares common component schema 
common component defined additional functionality defined peers wishing utilize extensions 
approaches share common strengths weaknesses current programming 
scalability dynamic connectivity nodes don centralized cost component 
main difference approaches way handle conceptual schemas 
global schema set structure hard change 
reason need update schema include extra entity hard achieve entities network need updated 
answer form multiple local schema ap proach 
approach explained detail section involves entity defining schema entity commu 
sounds perfect solution easily adaptable new situations 
unfortunately subtle drawback ap proach topic drift 
lets consider medical database database comprised patients doctors chemists fine sys tem easily handle interactions entities 
problem comes doctor example uses information system exchange data hobby group doctor interested member hobby group uses exact information system connect system investigates sports cars 
illustrated topic shift 
example best information system find information performance cars medical database 
obviously desirable feature 
beneficial able constrain scope information system 
global sub schema somewhat middle ground previous schemas 
basic concept approach central core information system shares 
utilizing global schema par share additional schema mappings nodes required basic principal global sub schemas 
global component ensures information system contains shared focus addi tional mappings provides flexibility achieved local relational model global schema 
autonomous global schema database preserves com munication autonomy entity system modeled global schema 
graphical example schema provided seen popularity current information sys tems need community share global schema 
fact nearly current file sharing applications kind schema 
reason immense popularity kind structure lies simplicity 
entities network tual design able enter leave network associated configuration costs 
global schema unfortunately current trend applications ignore previous gone relational databases past 
point schema exists concept generally ignored 
cases attributes stored file simply read directory 
file sharing systems advanced point file directory structure mimics relational database directory names interchangeable attribute headings 
autonomous global schema impact communication autonomy substantial 
communication autonomy implies existence replicas order effectively operate 
simplest way tackle issue replicas primary copy approach 
primary copy approach involves having copy re reads writes copies read ability 
update initiated update firstly propagated master copy update take place 
update occurred job primary copy distribute change system case time stamps identify update propagated fact latest change distributed network 
potential flaw system dynamic nature hosts involved 
means master copy potentially leave network 
solution dynamic list contains master server backup servers piece information 
course list require considerable amount bandwidth maintain trade complete cor system functionality system terms available bandwidth system availability 
feasibility primary copy approach validated large scale application introduces opportunities 
primary copy existing system handles files data objects streamlined reduce number duplicate entries inserted system 
simple search identify probable duplicates thorough comparison probable candidates 
stage identified data inserted system duplicate existing data renamed match existing information system 
respect reads copies read order obtain requested information 
autonomous global schema enjoys ability implementing read strategies 
primarily entity system contains schema query propagated site site identical query propagated queries transitive property true need queries recursively propagated 
global schema mean 
site aware entire global schema participate select part schema 
answer system global schema force member participate level 
entity contain information pertaining certain entity contribute answer relating entity 
mechanism enables resulting system flexible 
order understanding topic area example domain practical environment contrasted similar example standard database approach provided 
lets consider system responsible keeping personal con tact details date acquaintances 
addition system available open world 
means able handle sort information traffic clearly point internet access 
achieve conventional client server database technique straightforward 
step develop schema 
authentication verification system required 
need construct information system store information shared name address home phone access rights need determined system name user id 
achieve information system process resulting schema little different 
system identification handled underlying system don need include schema 
need information wish share list participants wish share case system just list addresses 
lets analyze greater detail consider cations 
comparison remain impartial possi ble 
order examine aspects including performance query update system maintenance cost availability durability 
performance small system handled far efficiently centralized database 
issue talking large size information system 
cen system hard limit number connections potentially support 
information systems num ber simultaneous users limited number propagating queries system excluding queries sent directly destination 
system gnutella architecture need propagating queries discovery queries sent appro priate group response indicate presence group sent back group coordinator 
updates centralized system update transaction swiftly efficiently 
system hand confronted daunting challenge 
communication autonomy system obviously information replication 
replicated information able updated master replica line simultaneously utilizing complicated mobile master copy stays active system moving nodes disconnect 
multiple local schemas local relational model 
local relational model new data management mechanism designed replace concept global schema conceptual view database 
local relational model designed exist environment constant dynamic change relations data stores relational space 
local relational model crux local relational model databases grouped pair wise grouping defined coordination formulas domain relations shown 
essentially mesh database groupings built coordination formulas domain relations forms database 
achieved structure queried 
query recursively propagate domain relations retrieving relevant information pass results way query propagated entire domain 
benefits system global schema information sys tem completely dynamic flexible 
important result schema ability system expand initial schema 
pair nodes connected system contains potentially unique schema defines connection 
interconnection nodes achieved dynamic schema relations tion formulas 
process modify existing schema accommodate changed business requirement straightforward 
underlying database changed coordination formulas updated reflect schema level change 
procedures completed identify participants system suitable communicate 
main areas concern model time taken participant join system reliance recursive query propagation method focus drift occur type system 
order participant communicate system relation ship established point participant wishes access system 
process establishing relationship auto mated process furthermore possible automate process cause conceptual challenges regards identifying semantic meaning attributes syntactic characteristics data types involved 
mentioned section recursive query method susceptible average query time increased 
occurs resulting network confusion devastating network 
concerning issue model ability focus information system skewed information sources joining system 
lets consider information system aid medical community 
doctors drugs help clients clients buy drugs pharmacy 
point time information system operating effectively focus happens entities join system 
pharmacy buys drugs supplier supplier buys chemicals chemical plant chemical plant sells chemicals car factory car factory sells sports cars public 
started medical information system turned car database 
course focus shift exaggerated point 
realistically focus shift gross needless say concerning issue 
proposed schema 
global sub schema 
autonomous global sub schema gss short fundamentally hybrid global schema autonomous multiple local schemas 
combining designs hope establish fundamentally sound model flexibility connectivity detrimental aspects 
autonomous global sub schema consists centralized schema constitutes core information system independent rela tionships defined externally dynamically central core 
illustration basic principle shown 
autonomous global sub schema detailed examination aspects autonomous mul tiple local schema aim show system viable surpasses previous information system schemata 
mentioned section types read queries system direct recursive 
direct return recursive return messages advantages shortcomings 
ideal situation system ability choose response type applicable time conceptual systems allow return types 
lrm described depth section ability return answers fashion recursive method 
recap shown section time required perform recursive query shown twice direct return method 
clear material earlier reads responsiveness system important desirable system able utilize direct response mechanisms regard reads 
gss fundamentally global schema able utilize direct return recursive query method queries global schema 
provides instance flexibility global schema 
query local relations recursive method available fill needs 
envisaged availability global schema reliance recursive queries greatly reduced 
writes gss conducted manner global local relational schemata 
scalability gss greatly increased global schema lrm 
global schema clearly design scalability 
shown simply possibly nodes system wish expand schema provision new information storage schemas entire network need modified consensus semantics change 
issue main driving force creation lrm designed integrate disparate information sources ing distributed schema semantic agreement 
superficially lrm addresses issue unwittingly exposes system higher probability system 
gss utilizes dynamic local schema approach direct return method scalable global schema lrm approach 
scalability attributed ability utilize lrm dynamic schema global schema message pass ing method 
admitting gss forced propagate messages recursive method majority transmitted direct method issue somewhat mitigated 
wish raise focus drift issue section 
particular drawback utilizing lrm 
gss takes advantage dynamism lrm potential affected fashion 
central component design really pays 
centralized component existing entities system focus held tight 
components capacity relationships centering functionality common focus 
semi autonomous schemas 
required participation semi autonomy transforms architecture fundamentally data distribution solution operates similar lines multi database management system 
main moti vation transformed architecture provide common interface data stores utilize hasten integration process achieving high scalability 
major benefits scalability reduction centralized management centralized cost simplicity join network increased fault tolerance 
drawbacks system query throughput time taken complete query reduced control improved replication control 
benefits drawbacks illustrated example video store database 
scenario large number ated video stores wishing participate global system increase efficiency provide greater interoperability geographically close stores order provide higher level service customers 
goals distributed system local data repositories local stock stock contained store 
interoperability stores obtain closest resource available store 
scalability needs able handle videos globally tens thousands stores 
dynamic structure allow stores quickly join robust store part network system halt 
semi autonomous solution involve schema containing information making videos available system 
nodes system maintain complete control participation system 
centralized control nodes utilize architecture communicate 
compare conventional solution late 
largest impacting factors choice system systems inter database commu nication statics 
stated section message traffic system dramatic impact 
video stores inter store communication usually low slow 
usually video stores communication takes place phone 
example ask store video ring store find 
case system easily able fill requirements system 
case high volume traffic far greater choice message propagation sys tem significantly faster chance section 
terms scalability system potentially offers far better lution 
provisional network traffic system reaching point solution 
terms centralized management benefits draw backs 
centralized component provides system large amount control 
centralized control important databases provides simplicity system 
circumstances centralized control beneficial cially participating data store exhibits large degree auton 
implementing database video store information system easily represent business model 
need pay third party hosting managing centralized component 
stores potentially greater control entire database 
briefly discuss replication control 
essentially system func tions communication autonomy replication longer vital 
interestingly previous academic papers replication little value due inability address systems tion autonomy bearing domain 
papers studied section valid proposals handle replication control 
unfortunately compared centralized system efficient mainly due overhead involved distributing data thought system 
bring discussion fault tolerance 
shown system exhibits greater degree fault tolerance tive system 
primarily due centralized component 
component fails inter system communication rendered 
system node fails effect system minimal failed node unable participate system 
important note example contrast different architectures heavily biased solution results typical scenario 
main motivation biasing discussion demonstrate ability solve small subset problems database domain 
chapter workflow scheduling 
large issue information systems lack control 
utilizing workflow management system wfms sense structure order realized information system 
current products available utilize architecture communication workflow activity instances unfortunately fail take advantage distributed information management architecture improve system performance 
consider system utilized wfms requires data tasks moved different sites 
wfms schedule distributed information management system optimize data allocation distribution 
order system function effectively data question available system 
types data availability considered system availability node item processed availability system data allocation algorithm transfer data node 
scenario information system scheduled workflow 
imagine structured learning course university wishes distribute internet 
course modular nature 
course run independently university server results updated server completion module 
target market unstable internet connection limited bandwidth 
scenario major connections remote cities lim bandwidth fail regularly similar happen third world countries 
isolated communities remaining pockets connectivity limited connection main server 
preferable students working just inter net connection fails limited bandwidth 
addition advantageous university expend resources required run maintain servers multiple positions world 
assume pockets number nodes wish continue operating pockets limited speed 
proposes underlying system retrieve infor mation current progress workflow including items accompanying data system 
goal dy acquire resources required consuming lowest possible amount storage bandwidth reducing burden centralized authoritative server 
dynamic data allocation formation system scheduled flow 
best possible way fully explain example 
consider connectivity problems university course distributed vast area section 
need store copy data workflow network site 
required portion data needs reside site time 
order maximize utilization nodes data transferred relevant node 
detailed justification outlined 
system exists quantity nodes 
nodes workflow template fj 
instance workflow template wf controls system 
transaction workflow template instance ti contains applications 
application transaction ti represented ai requires data di 
connection nodes pipe represent nodes system pipe allows transfer applications data 
application ai requires data di order complete operation 
completion operation going require process application ai application reside locally doesn need transferred local site 
addition application ai require data di 
workflow specifies possible application executed result completion ai set applications ai ai required order facilitate execution applications 
data required set data items di di process sourcing applications related data items called preemptive data acquisition 
order determine level preemptive data acquisition required maintain continuously processing transaction availability data reliability node determined 
addition level reliability required system determined 
nodes hold data acquired preemptive data acquisition process levels acquire front 
ensure physical requirements clients computers increase time client participating system hold portion data system 
probability client contains piece data client wishes amount data items clients computer divided total number items set system shall run level fault tolerance represents chance group contain requested information 
order determine size amount preemptive data acquisition level fault tolerance size set number nodes network 
converts size known possible define algorithm allocate data items nodes 
workflow template wf specify application ai associated data items di required completion current application ai 
order retrieve data node na broadcast message group nodes requesting location application ai di 
broadcast propagated members isolated group 
reply received node nb pipe established transfer data 
pseudo code data allocation algo rithm section summarize algorithm previous section 
process define characteristics system 
formula level fault tolerance data items node preemptive data set total number data items network number nodes pocket communication process data allocation algorithm set size 

process starts data node na 

application retrieved repeat steps 
wf specifies application ai 
na broadcasts message locate application ai 
nb nz replies offers connection 

nb chosen largest available bandwidth 

nb establishes pipe transfers ai 
ai identifies required data items di 
di retrieved fashion ai method shown infrastructure controlled wfms minimize bandwidth requirements con server optimize throughput retrieving data fastest available source 
chapter innovative type technology flexible versatile 
observations contributions informa tion system domain 
environment examined evolutionary procedure addressed previous field current information system conceptual design components investigated potential integrating workflow technology im prove efficiency 
results study listed 
exists number successful implementations 
current systems clearly recognized information systems lessons learnt information systems domain generally ig 
commercial applications available today implementing functionality exists simple database system 
highlighted systems influenced heavily query propagation style 
direct recursive styles benefits recursive return style limitations particularly query time increased failure potential 
proceeded examine current schemata identifying strengths weaknesses 
comparing schemata able define new schemata advantages current models 
autonomous global sub schema gss fundamentally hybrid global schema autonomous multiple local schemas 
combining designs able establish fundamentally sound model flexibility connectivity limited detrimental aspects exhibited existing schemata 
concept semi autonomous information sys tems introduced comparison conducted sys tem 
benefits identified scalability re duction centralized management centralized cost increased fault tolerance 
drawbacks identified query throughput time taken conduct query reduction control 
shown infrastructure controlled wfms minimize bandwidth requirements controlling server optimize throughput retrieving data fastest available source 
chapter study clearly identified range issues need tion 
chapter outlined major issues confronting area research 
query propagation algorithms 
largest drawbacks current technology query prop algorithms 
small improvement algorithms large impact performance network 
detailed study information system implementa tions 
information systems domain little con practical implementations systems 
order fully explore viability information system required 
information systems controlled wfms 
apart brief provides area research completely untouched subject 
issues need addressed 
potential concepts unexplored optimizing time prioritizing tasks architecture 
bibliography ripeanu adriana iamnitchi ian foster 
locating data small world peer peer scientific collaborations 
elec proceedings st international workshop peer peer systems iptps mar 
cited oct www cs rice edu conferences iptps pdf 
bernstein giunchiglia kementsietsidis mylopoulos ser 
data management peer peer computing vision 

cited oct www citeseer nj nec com bernstein data html 
don box 
framework 
live dec 
cited april ftp mp 
don box 
security 
live dec 
cited april ftp mp 

jxta takes position 
reilly open online apr 
cited february www openp com pub jxta position html 

learning jxta shell 
reilly open online apr 
cited february www openp com pub learning jxta shell html 
dan brickley 
power metadata 
reilly open online jan 
cited february www openp com pub metadata html 
ian foster 
peer peer architecture case study gnutella network 
uni versity chicago dec 
cited march www cs uchicago edu files tr pdf 
richard 
free radical 
reilly open online nov 
cited february www openp com pub ian html 
richard 
solution 
reilly open online may 
cited february www openp com pub beta html 
jennifer lewis 
searches networks bots 
reilly open online aug 
cited february 
ryan huebsch boon loo scott shenker matthew harren joseph hellerstein ion stoica 
complex queries dht peer peer networks 
electronic proceedings st international workshop peer peer systems iptps 
cited oct www cs rice edu conferences iptps pdf 
nelson minar 
distributed systems topologies part 
reilly open online dec 
cited february www openp com pub topologies html 
nelson minar 
jxta chat sans server 
reilly open online may 
cited february www openp com pub html 
nelson minar 
distributed systems topologies part 
reilly open online jan 
cited february www openp com pub topologies pt html 
angela 
desktop pcs take center stage 
peer peer com puting online may 
cited february business cisco com app changing erik nilsson 
napster 
reilly open online dec 
cited january www openp com pub network magazine napster html 
andy oram 
workflow peers 
reilly open online nov 
cited march www openp com pub oram html 
andy oram 
tackles name service file caching 
reilly open online nov 
cited march www openp com pub html 
andy oram 
distributed systems topologies part 
reilly open online jan 
cited february www openp com pub topologies pt html 
serafini giunchiglia mylopoulos bernstein local rela tional model 
istituto di cultura technical report dec 
stephen 
waiting 
reilly open online dec 
cited april www openp com pub network magazine napster html 
clay 

reilly open online nov 
cited january www openp com pub html 
clay 
got groove back 
reilly open online nov 
cited january www openp com pub interview html 
andrew tanenbaum 
distributed systems principals paradigms 
prentice hall pty dec 
cited march 
kelly andrew 
morpheus 
reilly open online nov 
cited march www openp com pub morpheus html 
hakim weatherspoon john kubiatowicz 
erasure coding vs replication quantitative comparison 
electronic proceedings st international workshop peer peer systems iptps 
cited oct www cs rice edu conferences iptps pdf 
randy katz yan chen john kubiatowicz 
dynamic replica place ment scalable content delivery 
electronic proceedings st international workshop peer peer systems iptps 
cited oct www cs rice edu conferences iptps pdf 

