super peer routing clustering strategies rdf peer peer networks wolfgang nejdl martin wolpers wolf siberski christoph schmitz mario schlosser ingo rdf networks number advantages compared simpler networks napster gnutella approaches distributed indices chord 
rdf networks allow complex extendable descriptions resources fixed limited ones provide complex query facilities metadata simple keyword searches 
previous papers described edutella infrastructure different kinds edutella peers implementing network 
discuss rdf networks specific example new type networks schema networks describe super peer topologies networks 
super peer networks provide better scalability broadcast networks provide perfect support inhomogeneous schema networks support different metadata schemas ontologies crucial semantic web 
furthermore show able support sophisticated routing clustering strategies metadata schemas attributes ontologies 
especially helpful context rdf functionality uniquely identify schemas attributes ontologies 
resulting routing indices built dynamic frequency counting algorithms support local mediation transformation rules sketch ideas implementing advanced functionalities 
categories subject descriptors network protocols routing protocols information storage retrieval web services knowledge representations formalisms methods semantic networks general terms design algorithms keywords peer peer semantic web schema routing distributed rdf repositories learning lab lower university hannover hannover germany nejdl wolpers siberski schmitz schlosser de computer informations systems institute technical university berlin berlin germany cs tu berlin de copyright held author owner 
www may budapest hungary 
acm xxx 
alexander ser 
super peer networks dis tributed rdf repositories peer peer networks important infrastructure years networks evolved simple systems napster gnutella sophisticated ones distributed indices distributed hash tables chord :10.1.1.11.5917:10.1.1.140.3129
new systems provide efficient topologies early networks address complex metadata sets support complex queries 
semantic web important aspect design exchange data computer systems need explicit consumer producer relationships 
rdf rdf schema annotate resources web providing means computer systems exchange comprehend data 
resources uniquely identifiable uri 
annotations resources various schemas built rdfs possible extensions stored call rdf repositories possibly schema 
important characteristic rdf metadata ability distributed annotations resource 
contrast traditional database systems necessary annotations resource stored server 
server store metadata include properties name specific resources possibly dublin core metadata standard 
servers hold metadata provide properties resources possibly metadata standards schemas 
ability distributed allocation metadata rdf suitable construction distributed repositories 
furthermore rdf schemas flexible extendable schemas evolve time rdf allows easy extension schemas additional properties 
rdf capable overcoming problems fixed metadata schemas occur peer peer systems 
current systems support limited metadata sets simple filenames easy example search gnutella music composed beethoven retrieving difficult :10.1.1.2.3962
solve shortcomings networks restricted fixed metadata elements order enable distributed repositories resources move sophisticated networks called networks 
schema networks build peers explicit schemas describing content metadata peers heterogeneous schemas 
research groups investigated schema networks far 
group working schema network called edutella see edutella jxta org source code aims ing access distributed collections digital resources network :10.1.1.11.5917:10.1.1.11.5917
resources edutella network described ad hoc metadata fields napster rdf schemas rdf metadata description 
order access content stored edutella network query language rdf qel 
rdf qel datalog semantics compatible existing query languages supporting query functionalities extending usual relationally complete query languages 
interesting approaches ones investigated bernstein aberer 
bernstein propose local relational model lrm enabling general queries translated local queries respect schema supported respective peer concept local translation coordination formulas translate different schemas 
aberer proposes schema peers local translations accommodate sophisticated information providers connected gnutella topology 
approaches focus providing improved search functionalities networks 
schemas describe content stored peers query precise flexible schemas 
simple broadcast topologies networks queries broadcast peers consume network bandwidth processing power peer 
obviously investigate efficient approaches query peers capable understanding answering query 
schema networks schema information providing improved query capabilities support sophisticated routing queries 
queries answers queries represented rdf metadata rdf metadata describing content peers build explicit routing indices facilitate sophisticated routing approaches 
queries distributed relying routing indices contain metadata information plus appropriate pointers neighboring peers indicating direction specific metadata schemas 
routing indices rely single schema contain information arbitrary schemas network 
general routing indices located peer require considerable amount processing power network bandwidth peer 
processing power needed construct routing indices network bandwidth needed sending queries respective answers 
furthermore peers tend behave unpredictably joining leaving network random resulting constant reorganization network topology 
suggest super peer topology schema networks peer connects super peer 
super peer connect super peers build backbone super peer network see general characteristics super peer networks kazaa morpheus existing super peer systems 
schema networks super peers manage routing indices determine query forwarded peer super peer 
remainder describe general topology schema super peer network section discuss necessary kinds routing indices sections 
sketch ideas construct routing indices dynamically query characteristics query distribution section 
discuss sections information mediation different schemas 
section discusses simu lation framework prototype implementation 

schema routing networks networks broadcast queries peers don scale 
take semantic heterogeneity schema networks account propose super peer topology networks indices super peers address scalability requirements 
super peer network constitutes backbone network care message routing integration mediation metadata 
peers connected super peer backbone assume super peers network arranged hypercup topology 
solutions propose realized super peer topologies lead interesting extensions derived ideas 
focus hypercup topology implemented super peer network second efficient broadcasts partitioning quite suitable super peer topology 
scaling network large number super peers maintaining certain properties low network diameter requires guiding evolution network topology peer joins departures 
hypercup algorithm described capable organizing peers network recursive graph structure family cayley graphs hypercube known topology 
organize super peers network hypercube topology hypercup protocol 
new super peer able join network asking integrated super peer carries peer integration protocol 
messages sent order integrate new super peer maintain hypercube topology 
number super peers accommodated network peers missing order construct complete hypercube topology consists nodes dimensional binary hypercube super peers network occupy position hypercube 
new super peers join network fill gaps hypercube topology possibly extend dimensionality hypercube 
hypercup enables efficient query broadcasts guarantees non redundant broadcast 
broadcasts node thought root specific spanning tree network 
topology allows path length number neighbors total number nodes network number super peers case 
topology vertex symmetric features inherent load balancing super peers 
topology carry effi cient communication message forwarding super peers certain updates communicate broadcast super peers executed efficiently message overhead 
path length exists super peers distinct schemas reached short number hops 
peers connect super peers star fashion providing content content metadata see small hypercup topology 
super peers combination routing indices reduces workload peers significantly distributing queries appropriate subset possible peers see discusses routing indices various aggregation strategies content indices 
sections discuss routing indices detail 
routing super peer peer queries responses kind indices needed super peers called super peer peer routing indices sp ris 
indices super peer stores information metadata usage peer 
includes schema information schemas attributes possibly conventional indices attribute values 
registration peer provides super peer metadata information publishing advertisement 
advertisement encapsulates metadata description significant properties peer 
may involve quite large amount metadata build schema approaches successfully context mediator information systems :10.1.1.11.8981
ensure indices date peers notify super peers content changes ways trigger update index 
example peer announced uses dublin core schema dc connection superpeer uses learning object metadata schema lom describe resources needs announce super peer 
peer leaves network peer removed indices 
contrast approaches indices contain content elements peers chord 
super peer elements query matched sp ris order determine local peers able answer query see similar approach 
match means peer understands answer specific query guarantee non empty answer set 
indices contain information peers super peers different granularities schema identifiers schema properties property value ranges individual property values 
illustrate index usage sample query find lectures german language area software engineering suitable undergraduates 
semantic web context query probably formalized dc schema document specific properties title creator subject lom schema provides learning material specific properties combination classification hierarchies acm computing classification system acm ccs subject field 
line rdf xml conventions identify properties name schema expressed namespace dc subject denotes property subject dc schema 
written formal manner query find resource property dc subject equal ccs dc language equal de lom context equal undergrad 
granularity query schema dc lom property dc subject dc language lom context property dc subject ccs sw engineering value range property value lom context undergrad dc language de table contents sample query different granularities table shows values requested query different granularities query asks dc lom schema level requests lom context value undergrad property value level routing example network order clarify things consider scenario shown 
network various resources described different peers turn attached super peers 
peer sends sample query mentioned superpeer example query answered peers attached respectively 
contain metadata resources match query 
paragraphs explain routing indices different granularities facilitate routing query right peers 
super peer peer routing index schema index 
assume different peers support different schemas schemas uniquely identified dc lom namespaces uniquely identified uri 
routing index contains schema identifier peers supporting schema 
shows sample index 
queries forwarded peers support schemas query 
super peer forward sample query attached peers dc lom annotate resources peer 
mediation different schemas supported super peer level discuss supported subsection 
property sets properties index 
peers choose parts schemas certain properties describe content 
unusual conventional database systems data stores semistructured data common rdf systems 
kind index super peers properties uniquely identified namespace schema id plus property name sets properties describe peers 
sample query sent peers dc subject dc language lom context send query contains properties 
sets properties useful characterize queries sets properties index characterize route common queries 
property value range index 
properties contain values predefined hierarchical vocabulary index specifies taxonomies part taxonomy properties 
common case edutella context semantic web quite applications standard vocabularies ontologies 
example peers characterized possible values dc subject field query forwarded peers managing ccs networks ccs artificial intelligence content sub hierarchies disjoint ccs software engineering sub hierarchy forwarded peers mesh vocabulary peers manage medical content 
note subsumption hierarchy taxonomy acm ccs aggregate routing information order reduce index size 
property value index 
properties may advantageous create value indices reduce network traffic 
case identical classical database index exception index entries refer resource peer providing 
index contains properties compared rest data stored peers 
example index string valued properties dc language lom context 
routing super peers routing indices peers want avoid broadcasting queries super peers 
achieve goal introduce super peer superpeer routing indices route super peers 
sp sp indices essentially extracts summaries possibly approximations thereof local sp indices 
contain kind information sp indices refer direct neighbors super peer shown 
queries forwarded super peer neighbors sp sp indices sent connected peers sp indices 
table gives full example sp sp routing index different granularities 
example knows schema level neighbors dc namespace contain information described lom schema 
sample query routed requires dc lom 
granularity index schema dc lom property dc subject dc language lom context property dc subject ccs networks value dc subject ccs software range engineering property lom context undergrad value dc language de table sp sp index different granularities applies levels granularity 
special case property value range level note ccs networks common super concept ccs ethernet ccs clientserver acm ccs taxonomy 
making topic hierarchy routing index contain aggregate information order reduce index size 
super peer super peer routing index update sp sp indices registration update messages connected peers 
assume moment peer connect arbitrary super peer define index update procedure follows new peer registers superpeer announces necessary schema possibly content information super peer 
super peer matches information entries sp index 
new elements added order include peer sp index superpeer broadcasts announcement new peer super peer network hypercup protocol reaches super peer exactly 
super peers update sp sp indices accordingly 
broadcast optimal costly 
number super peers number peers 
second peers join super peer frequently send summary announcement containing new elements pre specified intervals sending separate announcement new peer 
third announcement necessary sp index changes integration new peer 
soon super peer collected significant amount peers hopefully characteristics see discussion clustering section announcements exception 
similarly indices updated peers disconnect super peers 
process super peers joining network consists parts appropriate position hypercup topology announcing neighbors update sp sp indices accordingly 
hypercup protocol handles proper positioning bookkeeping regard topology super peer network 
announcing new super peer neighbors updating sp sp indices works similarly construction sp indices described section 
super peer fails connected peers register super peer chosen random find contains similar peers described section 
respective sp sp indices entries super peers removed dynamic optimizations described chapter 
obviously arbitrary distribution peers super peers majority queries sent superpeers 
investigate clustering techniques peer characteristics discuss section 
dynamic routing indices section described queries routed schema routing indices 
routing problem queries broadcast peer distribution arbitrary 
order avoid broadcasting possible sp sp sp routing indices extended additional frequency information queries 
allows adapt network topology peer clustering frequency information discussed paragraphs 
similarity clustering peers 
clustering super peer network idea integrating peers locations populated peers similar characteristics 
contrast randomly assigning peers super peers reduce amount messages sent network 
hypercup deterministic topology partitions sub partitions network regular way 
connections super peer neighbors viewed connections partitions 
forwarding query subset neighbors results distribution query subgraph 
small serialized hypercube partitions discussed hypercup partitions connected redundantly links different dimensions broadcast messages arrive dimension forwarded links dimension assume example super peers manage peers characteristics super peers query characteristics just forwarded right cluster dimension link broadcast super peers partition 
query uses characteristics peers attached super peers just reach cluster distribute query appropriate peers super peers sp indices 
obviously define kind similarity measures want partitions 
discussed partition hypercup network topic ontology shared peers 
dynamic way take characteristics queries account deciding clustering parameters 
query characteristics large possibly heterogeneous network defined advance propose frequency counting algorithms streams ones discussed identify commonly schemas properties sets properties sent queries :10.1.1.19.8594
means add frequency property sp sp routing indices focus including frequently index items indices statistics define similarity measures responsible clustering peers superpeers 
queries covered possibly incomplete sp sp indices broadcast super peer hypercup network forwarded appropriate peers sp indices 
algorithms estimating frequencies specific items discussed sticky sampling lossy counting context scan input stream need temporary storage hold frequency counts :10.1.1.19.8594
scenario items counted schemas schema properties value entries taxonomy clustering peers schemas schema properties taxonomy entries super topics commonly queries 
algorithm estimating frequencies item sets single items difficult space requirements useful characterize queries sets properties value ranges cluster peers accordingly :10.1.1.19.8594
mediation different schemas outlined section peer registers super peer called advertisements contain metadata schema peer 
schema approaches model correspondences successfully context mediator information systems apply approach super peer networks :10.1.1.11.8981
approach uses rules describe query capabilities peer 
example table assume peer provides query result schema schemas equal 
cases peer provide different query schemas result schema 
case query result rules published super peers peer network valid advertisement 
peer answer queries corresponding rule super peer route relevant queries peers 
moment distinguish relevant roles peers network information provider role information consumer role 
peers acting consumers able respond kind queries need considered super peers looking suitable advertisements 
typically super peers collect advertisements related peers 
super peer receives query tries identify relevant advertisements matching schema query 
distinguish cases 
query exactly matches advertisement potential peer 

query exactly matches advertisements peers homogeneous schema set 

query resolved combining results peers heterogeneous schemas 
case investigate sophisticated methods transform schemas different peers mediation different query schemas 
discuss transformation rules different schemas called correspondences 
contrast correspondences rules translate global local schemas super peer networks typically assume translations different local schemas 
correspondences rules describe translations property names arguments query literals concise notation 
example administrator super peer defines query schema lectures lecture identifier lecture language lecture subject lecture return documents identified url 
define correspondences attributes peer schema corresponding attributes lecture schemas 
lectures identifier dc title lectures language dc lang lectures subject dc subject 
lectures identifier lom general identifier lectures language lom general language lectures context lom educational context mentioned correspondences create views peer specific schemas 
lectures identifier lectures language lectures subject dc dc title dc lang dc subject 
lectures identifier tures context lectures language lec lom lom general identifier lom general language lom educational context describe attributes super peers lectures schema answered local peer schemas 
lectures lectures identifier lectures language lectures subject lectures identifier lectures language lectures subject 
lectures lecture identifier lecture language lecture context lectures identifier lectures language lectures context combining correspondences results main schema correspondences bridging heterogeneity peers 
peer correspondence lectures lectures identifier lectures language lectures lectures identifier lectures language lectures context lom lom general identifier lom general language lom educational context peer correspondence lectures lectures identifier lectures language lectures subject lectures identifier lectures language lectures subject dc dc title dc subject dc lang super peer store relations correspondences peers indices 
super peer receives query lecture lecture identifier lecture language lecture subject lecture super peer identifies correspondence correspondence combination relevant correspondences semantically included user query able compute correct results 
query forwarded peers peer peer 
results collected combined super peer 
identified query correspondence assertions model correspondences moca flexible mechanisms express correspondences heterogeneous schemas 
previous paragraphs described network explore tasks 

implementation currently process verifying performance protocol routing mechanisms 
simulate system protocol implemented algorithms current edutella framework 
jxta framework sun www jxta org basic infrastructure 
existing edutella framework extended areas area consists support construction network superpeers topologies hypercup topology discussed section 
second area introduces components super peer construction including services peer registration query routing table management 
shows uml collaboration diagram super peer configured sending queries registered provider peers super peers 
super peer uml collaboration diagram example wants integrate edutella network sends message arbitrary super peer collaboration 
super peers registration service adds peer schema information included message described section sp indices 
queries sent consumer peer received superpeer query service routed locally registered provider peers super peers superpeer network 
example provider peers selected targets query sp tables shown 
routing query super peer network sp sp indices shown described 
currently working implementation sp sp indices current prototype november broadcasts queries super peers hypercup protocol sp sp functionality available shortly 
example super peer selected neighboring super peers 
super peers constructed new framework built small functional elements call services 
communication done sending events monitoring listeners observer design pattern 
service endpoint jxta communication pipe way receiving messages peers 
public interface public iterator public class string service public iterator string service public string service 
public class service private vector listeners public void svc 
public void svc 
public void event event 
example shown query service distributing queries peers network 
initialization super peer system iterates services instantiates appropriate services class 
additionally system iterates services connected query service method registers query service method 
way queries received passed routing services sending event message listeners method 
simulations attempt accurately model traffic patterns observable real world systems 
studies existing networks important characteristics typical traffic patterns content distribution networks observed :10.1.1.160.7346
simulations algorithms carried environment closely reflects findings order yield sensible results 
briefly simulations exhibit important characteristics data objects assigned different reflect degree queried possibly replicated network 
second peers interested subset available content network 
shown data objects file sharing network classified number content categories 
observed peers interested data objects content categories 
example domain educational resources users certain affinity learning materials related course study undertake :10.1.1.11.5917:10.1.1.11.5917
observed document storage systems including www exhibit zipf distributions popularity documents 
reflects fact popular documents widely copied held documents held far fewer peers popularity th popular data object network proportional close uniform 
distributions fit frequency counting techniques discussed means rely techniques identifying incorporating popular queries query characteristics routing indices 
simulations combine characteristics peers join network pick content categories interested 
content category picked peer probability total number content categories network assume zipf popularity distribution content categories 
set schemas peer uses mark content chosen way schemas widely popular network peers 
peer assigned number shared data objects distribution measured gnutella network peers share large part data objects network :10.1.1.160.7346
real world networks data objects different peer picks data objects set content categories interested picks data object probability proportional popularity governed zipf distribution 
model reflects observable traffic content patterns real world networks closely example random distribution documents far popular assumption simulations networks 
simulations popular queries yield responses peers popular queries answered peers 
peers usually common schemas mark data top peers data marked exotic common schemas 
emulate dynamics network distributions measured determine uptime session duration bandwidth peers :10.1.1.160.7346

rdf networks number important advantages previous simple networks 
discussed rdf networks prime examples new kind networks schema networks 
peers provide explicit possibly heterogeneous schema descriptions content infrastructure ideally suited networks consisting heterogeneous information providers 
proposed super peer topology suitable topology schema networks discussed additional schema information routing clustering network 
super peer indices exploit rdf ability uniquely identify schemas schema attributes ontologies routing super peers peers super peer backbone network 
identified sketched possible algorithms constructing indices dynamically implementing local transformation rules super peers discussed current implementation simulation environment 

aberer hauswirth 
semantic gossiping 
database information systems research semantic web enterprises workshop university georgia falls state park georgia april 
adamic lukose huberman 
search power law networks 
physical review 
bernstein giunchiglia kementsietsidis mylopoulos serafini 
data management peer peer computing vision 
proceedings fifth international workshop web databases madison wisconsin june 
busse 
model correspondences continuous engineering thesis 
logos verlag september 
chawathe garcia molina hammer ireland papakonstantinou ullman widom 
tsimmis project integration heterogeneous information sources 
proceedings ipsj conference tokyo japan october 
crespo garcia molina 
routing indices peer peer systems 
proceedings international conference distributed computing systems july 
harren hellerstein huebsch loo shenker stoica :10.1.1.2.3962
complex queries dht peer peer networks 
kaashoek rowstron editors proceedings st international workshop peer peer systems iptps march 
korfhage 
information storage retrieval 
john wiley new york 

query planning mediator information systems thesis 
tu berlin june 
manku motwani :10.1.1.19.8594
approximate frequency counts data streams 
proceedings th international conference large data bases hong kong china august 
nejdl wolf qu decker sintek naeve nilsson palm risch :10.1.1.11.5917:10.1.1.11.5917
edutella networking infrastructure rdf 
www conference proceedings hawaii usa may 
ratnasamy francis handley karp shenker :10.1.1.11.5917:10.1.1.140.3129
scalable content addressable network 
proceedings conference applications technologies architectures protocols computer communications 
acm press new york ny usa 
saroiu gummadi gribble :10.1.1.160.7346
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn january 
schlosser sintek decker nejdl 
hypercup hypercubes ontologies efficient search networks 
international workshop agents peer peer computing bologna italy july 
semantic overlay networks november 
submitted publication 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proceedings conference applications technologies architectures protocols computer communications 
acm press new york ny usa 
wiederhold :10.1.1.11.8981
mediators architecture information systems 
ieee computer 
yang garcia molina 
designing super peer network stanford edu pub 
