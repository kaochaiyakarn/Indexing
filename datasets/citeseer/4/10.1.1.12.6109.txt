generating context management infrastructure high level context models karen henricksen indulska rakotonirainy school information technology electrical engineering university queensland distributed systems technology centre karen itee uq 
edu au 
trend pervasive computing driving need applications highly autonomous responsive changes environments user requirements 
applications commonly termed context aware reliant accurate information aspects surroundings location goals activities users 
unfortunately construction context aware applications difficult task reason various infrastructures supporting construction applications assisting gathering processing dissemination context information re appeared 
models context lack formality expressiveness offer little support design tasks associated context aware applications 
context modelling approach offers means developers describe program context high level need consider issues related context gathering management representation 
describe mapping process transforms high level context models management systems capable maintaining supplying context information applications run time 
modelling context information context modelling approach describe came result observations 
firstly models context currently context aware systems typically lack formality expressiveness primarily concerned representing context form suitable applications query means little application designer basis exploring specifying types context information required context aware application 
described problems detail motivated need expressive modelling approach basis experiences cc pp build context aware systems 
addition commonly conceptual modelling approaches uml er suited capturing special features context information reported funded part operative research centre program department industry science tourism commonwealth government australia 
histories information uncertain incomplete information range different classes information diverse characteristics including sensor derived user supplied information dependencies different types information modelling approaches exist able capture aspects temporal er modelling languages quality modelling approaches aware single approach capture features natural way 
initial attempt define set modelling concepts appropriate describing context information avoided aligning existing data modelling approaches 
gave flexibility explore natural way capturing aforementioned aspects context 
results described 
subsequently decided reformulate modelling concepts extensions object role modeling orm approach 
choice orm alternative approaches largely motivated suitability orm fact types abstraction concepts histories quality annotations built close alignment association abstraction original model 
benefits orm include ability express variety constraints important specific context modelling problem ability leverage straightforward mapping widely relational model 
remainder characterise orm set extensions orm accommodate special characteristics context information described 
outline issues involved mapping context modelling concepts context management system built relational database 
core concepts orm basic modelling concept orm fact consequently modelling domain orm involves identifying appropriate fact types roles entity types play 
diagrammatically entity types represented ellipses containing name optional scheme describes representation instances entity type 
entity types simple value types require scheme shown dashed ellipses 
fact types shown sequences role boxes box attached entity type 
fact type label de semantics natural language 
bars double headed arrows placed roles fact type indicate roles combinations roles contain duplicate values 
notations illustrated example 
orm supports variety advanced constraint types mandatory roles value subtype constraints 
information reader referred 
capturing different classes context 
extend orm allow fact types categorised persistence source 
broadly classify vice person timestamp 
engaged 
activity name fig 

modelling binary ternary fact type orm fact types static dynamic 
static fact types populated facts remain unchanged long entities describe persist example device type fact type true facts type remain true 
defining static fact type set roles facts invariant declared annotating roles shown diagram left refer set roles base set 
marking fact type way constraints implied fact instances modified ii fact instances deleted entity participating roles base set deleted 
dynamic fact types classed profiled sensed derived types depending source facts populated 
profiled facts supplied users sensed facts supplied hardware software sensors derived facts obtained facts derivation function 
notations introduce distinguish classes dynamic fact type shown diagrams left 
capturing histories 
histories captured orm involving times fact types ternary fact type 
frequency histories occur context modelling prompted introduce special temporal fact type capture time indexed data 
shown 
annotation fact type temporal constraint similar semantically richer including timestamps representing start times roles participate uniqueness constraints fact type 
capturing fact dependencies 
fact dependencies represent special type relationship exists facts 
fact fl considered depend second fact change state lead change state fl 
state change may involve change role values deletion fact altogether 
existence dependencies captured binary transitive dependson relation 
represent dependencies diagrammatically drawing dashed arrow dependent fact type type depends annotating arrow predicate describes particular instances fact types linked dependson relation shown 
capturing quality 
dynamic facts varying quality depending factors source age 
approach dealing problem static fact type profiled fact type sensed fact type derived fact type person located located near located near iff located located temporal fact type engaged erson activity fact dependency engaged personname view corresponding tile sql create view select personname 

personname starttime endtime activity view corresponding tile sql create view select personname current timestamp starttime engaged pl dependson located iff pl quality annotation personname fig 

modelling examples allow facts associated quality indicators help users decide trust place information 
designer context model determine dynamic fact type dimensions quality relevant accuracy certainty term quality parameters appropriate ways concretely measuring quality fact dimensions metrics 
shows annotation fact type quality parameters freshness accuracy possess single metric 
mapping context management system mapping context model context management system leverage orm relational mapping procedure 
benefit approach majority constraints expressed orm enforced run time relational database remaining context management tasks performed lightweight management infrastructure built database 
section describe mapping management issues associated modelling concepts described previous section 
mapping context classes 
mapping static profiled sensed context relations performed defined procedure fact type mapped unique examples mappings shown relational representation fact type shown right hand side 
derived context types mapped views 
illustrates view corresponding simple derived fact type defined sql 
additionally context management system maintains catalogue classification static sensed derived profiled fact types base set static fact type 
information manage updates example ensure constraints associated static fact types violated 
mapping histories 
temporal fact types mapped described addition attributes named starttime endtime type timestamp participate key relation 
addition view defined temporal fact type supports easy querying capturing facts applicable time 
shows example mapping 
uniqueness constraint role played person implies time person engaged activity 
constraint fully expressed key constraint corresponding relation enforced separately context management system 
implicit constraint starttime precede endtime enforced 
contrast groups fact types identical keys table 
chosen preserve fact abstraction relational representation sup port straightforward logic querying simple boolean queries ann library easily applied relations 
mapping fact dependencies 
fact dependencies explicit relational representation stored managed separately context management infrastructure 
dependencies recorded capturing fact types involved predicate evaluated respect pair instances fact types determine related dependson relation 
context management system exploits knowledge dependencies trigger updates dependent facts example invoking sensor refresh sensed fact ii notifications event listeners possible changes dependent facts actions appropriate 
mapping quality annotations 
quality annotations fact type mapped type relational representation additional attributes 
attribute included quality metric 
quality measures queried updated manner context information describe 
ex ample mapping shown 
concluding remarks proposed context awareness infrastructures built models context implicit informal largely lacking expressive power required accommodate features varying information types quality temporal characteristics 
described context modelling approach orm designed overcome shortcomings 
modelling approach sufficiently allow application developers specify program context high level formal support straightforward mapping context management infrastructure relational model 

dey salber abowd context infrastructure smart environments 
st international workshop managing interactions smart environments 

schmidt advanced interaction context 
st international symposium handheld ubiquitous computing huc karlsruhe 
harter anatomy context aware application 
mobile computing networking 

indulska experiences cc pp context aware systems 
proceedings mdm appear melbourne 
jensen temporal entity relationship models survey 
ieee transactions knowledge data engineering 
wang reddy kon quality data attribute approach 
decision support systems 
henricksen indulska rakotonirainy modeling context information pervasive computing systems 
proceedings pervasive zurich 
halpin information modeling relational databases conceptual analysis logical design 
morgan kaufman 
