review networking multiplayer computer games university turku department computer science fin turku finland timo university turku department computer science fin turku finland oy ericsson ab telecom fin turku finland turku centre computer science tucs technical report april isbn issn networking forms essential part multiplayer computer games 
review techniques developed improving networking distributed interactive real time applications 
survey relevant literature concentrating research done military simulations networked virtual environments multiplayer computer games 
discuss resource management consistency responsiveness networking application level 
keywords computer games networked virtual environments online entertainment distributed interactive simulation tucs research group algorithmics laboratory past years distinct classes distributed interactive real time applications prominent military simulations networked virtual environments multiplayer computer games 
focus scientific research shifted military simulations currently see 
entertainment industry investing seriously mobile gaming online gaming general 
terminology encountered literature diverse 
example usually called distributed virtual environments gave way collaborative virtual environments cves 
adopted term encompasses cve 
military terminology prefers word simulation logistical simulations 
relationship games simulations straightforward 
granted games simulations football manager games games especially happening flight simulators person 
games get abstracted simulations see 
networking dominating position consider mcg 
physical platform induces resource limitations bandwidth latency reflect underlying infrastructure hardware 
normally physical platform invest new hardware 
logical platform builds physical platform choices logical platform play pivotal role design mcg 
provides architecture communication data control 
communication architecture defines logical connections nodes network 
example peer peer architecture set equal nodes interconnected client server architecture node acts server communication nodes handled 
data control architecture defines information stored updated nodes 
example centralized architecture node holds data replicated architecture node replica 
concentrates features logical platform 
cast look back review research done past years 
tries sum story far sense includes tutorial techniques section survey literature section 
discuss resource management consistency responsiveness networking application level section 
concluding remarks military academic entertainment mud amaze dis hla stow cve rb dive spline massive doom online battle net history distributed interactive real time applications 
simulations flight simulators virtual environments sports games computer games puzzles person manager games real time strategies board games relationship simulations virtual environments ves computer games 
ves simulate possibly real world environments computer games necessarily belong simulations ves 
appear section 
techniques reiterate common techniques reduce bandwidth requirements distributed interactive real time application details see 
packet compression aggregation purpose compression reduce number bits needed represent particular information 
compression network packets offers intuitive approach minimize network traffic 
compression techniques classified ability preserve information content 
lossless techniques preserve information reconstructed data exactly data compression 
rule thumb lossless compression techniques shrink size data approximately half 
achieve higher compression ratio lossy compression techniques employed 
idea leave relevant information distortion reconstructed data remains unnoticeable 
widely technique example audio image compression 
compressing network packets worth noticing different compression techniques relate data packet format 
internal compression concentrates information content packet previously transmitted packets 
suits cases unreliable network transmission protocols user datagram protocol udp 
hand external compression may utilize information transmitted assumed available receivers 
example transmit delta transition information require bits absolute information 
give pointers previously transmitted data data occurs 
external compression consider large amount data time better observe redundancy information flow 
consequently allows better compression rations internal compression 
previous packets external compression requires reliable transmission protocol 
packet aggregation reduces bandwidth requirements merging packets transmitting content larger packet 
overhead caused packet headers smaller 
bandwidth savings considerable depending size data original packets size packet headers number merged packets 
example udp ip tcp ip packet headers take bytes respectively 
basic approach determine number merged packets timeout approach quorum approach 
timeout approach packets initiated fixed time period merged 
approach guarantees upper bound delay caused aggregation 
bandwidth savings depend packet initiation rate worst case savings gained packets initiated period 
quorum approach fixed number packets merged 
transmission merged packet delayed packets initiated guarantee transmission delay 
bandwidth savings predictable long transmission delays hinder user experience 
limitations approaches compensated combining 
hybrid approach packets merged conditions fulfills time period expires packets merge 
interest management entities usually produce update packets relevant minority nodes 
obvious way save bandwidth disseminate update packets nodes interested 
interest management includes techniques allow nodes express interest subset information relevant 
expression data interest called aura area interest usually correlates sensing capabilities system modeled see 
simply put aura subspace interaction occurs 
players intersect aware actions 
interest management symmetric intersect parties receive messages 
aura divided focus nimbus represent observer perception observed object 
awareness requires player focus intersects player nimbus 
foci possible construct finer grade message filtering awareness needs symmetric see 
foci modified adapters order customize player interaction 
example offer infrared tools 
area interest filtering scheme nodes transmit state changes subscription managers 
managers receive subscriptions express nodes information interests foci 
manager transmits formulae aura expressed precisely circle indicates observable range 
implementation complex required computation hard 
space divided static discrete cells 
interested cells intersect aura 
cell filtering easier implement discriminating formula 
cell grid hexagonal 
extents approximate actual aura rectangles bounding box 
computation simpler formulae filtering better cells 
areas interest expressed formulae cells extents 
nimbus focus seeker focus seeker nimbus hide seek nimbus hiding person smaller seeker seeker aware 
observe seeker seeker nimbus larger intersects focus 
node relevant information matches node subscription 
area interest filters called intrinsic filters application specific data content update packet determine nodes need receive 
filtering provides fine grained information delivery packet processing may require considerable amount time 
extrinsic filters determine receivers packet merely network attributes address 
extrinsic filters faster process intrinsic filters network provide 
multicasting network protocol technique realizes approach 
multicasting application transmits packets multicast group identified multicast address 
receive packets multicast group node subscribe join 
multicasting comparatively efficient network dissemination protocol 
challenge design application categorize transmitted information multicast groups 
packet sent multicast group relevant subscribers 
multicast groups achieve fine grained information supply maintenance problematical addressed collide applications internet network adapters support limited number multicast subscriptions 
group object allocation strategy object multicast group object transmits updates 
assigned servers keep record multicast addresses nodes subscribe relevant groups 
multicast groups object provide fine grained update dissemination subscribers better approxi mate foci 
group region allocation strategy virtual environment divided regions multicast groups 
objects region transmit updates corresponding multicast address 
typically objects subscribe groups corresponding region neighboring regions 
object crosses region boundary receive information currently relevant multicast groups directory servers 
categorizing objects location attributes possible object type team 
dead reckoning approach reduce bandwidth send update packets frequently 
maintain consistency reasonable compensate lack information packet updates 
especially case position information dead reckoning methods proved successful 
dead reckoning missing information computed approximation technique 
previously received information node predicts movement particular object 
predicted state object application new information received source node 
depending accuracy prediction technique approximated location distance actual location 
avoid jerky movements new location information applied convergence algorithm smooth transfer 
dead reckoning consists parts prediction technique convergence technique 
common prediction technique derivative polynomials 
case positions natural interpretations velocity acceleration jerk 
zero order derivative polynomials position information transmitted achieve gain 
case order derivative polynomials velocity object transmitted addition position 
velocity improves prediction accuracy 
improve accuracy add acceleration transmitted terms 
second order polynomial prediction popular technique 
higher derivatives increase risk inaccurate prediction prediction sensitive high order terms small inaccuracy may result significant errors 
high order derivative polynomials increase computational burden prediction 
additional terms consume limited bandwidth resources 
balance bandwidth requirements risk inaccurate hybrid systems dynamically select order second order prediction 
example entity acceleration changes probable wrong value applied prediction point 
safer content order prediction time 
transmitting higher polynomial terms approximated receiving node 
position history dead reckoning protocol transmits absolute positions object instantaneous velocity acceleration approximated position updates 
source node apply prediction technique destination node 
source node determines distance real state predicted state exceeds threshold source transmits update packet 
threshold dynamically changed distance objects 
idea farther object frequent updates needed 
update lifetime considered time interval consecutive state updates 
rationale specified level set update lifetime limits rate sent messages 
node receives update message object predicted position differ position latest information 
object needs moved new position convergence technique defines correction performed 
convergence technique corrects error quickly see 
simplest technique zero order convergence object just moved new predicted position 
cause annoying jerky movement 
better method linear convergence convergence point determined new prediction path 
object moved direct path current position convergence point 
convergence period 
linear convergence clearly better zero order convergence unnatural turns leaving previous predicted path entering new predicted path 
smooth problems sophisticated curve fitting techniques applied 
idea select addition current position convergence point number points previous predicted path new predicted path 
curve fitted go selected points path move entity new predicted path 
example case third order curve cubic spline pick additional point previous path current position additional point new predicted path convergence point 
high order curves provide smooth transition old path new path computationally intensive applications 
including object specific information dead reckoning technique achieve accurate natural movement 
current predicted path linear convergence path received received new predicted path convergence point illustration dead reckoning 
closed circles represent received information object position velocity time open circles represent object predicted position time 
time object position predicted new information received time latency object actual position velocity 
moving object new predicted position immediately convergence point calculated new predicted path seconds 
convergence period object rendered smoothly linear converge path new predicted path follows 
design specialized dead reckoning techniques object type 
time consuming maintenance algorithms requires special care 
dead reckoning introduce side effects need considered carefully 
example nodes need share view entities states collision detection algorithms difficult 
related divided literature distributed interactive real time applications subsections classification 
military simulations united states department defense developing networked military simulations 
developed protocol sim net intends provide interactive networking real time loop battle engagement simulation war gaming 
achieve aims providing functional fidelity accurate physical reproduction 
networking utilizes distributed architecture central server allows participants join leave simulation time 
objects interact broadcasting events network receiver responsible calculating effects everybody expected fair play 
updates object position information extrapolated dead reckoning 
distributed interactive simulation dis issued ieee standard attempts formally generalize extend protocol 
purpose allow type player type machine participate simulation 
dis allows model different kind vehicles airplanes consequently specialized systems stow 
current military research efforts concentrate developing systems high level architecture hla issued ieee standard 
hla aims providing general architecture services distributed data exchange 
prescribe specific implementation technology 
dis protocol closely linked properties military units vehicles rationale hla different types simulations non military applications targeted new simulation developments 
networked virtual environments military research focuses diverse large scale systems mainly designed local support small number participants 
usually pay closer attention virtual representations participants avatars collaboration participants operating time shared object 
reality built rb 
uses central server manage devices distribute data additional machines rendering data 
name suggests scales allow users share 
toolkit divides components presentation interaction geometric model computation 
components distributed nodes network 
master processes different application instances communicate allows multiple users share 
system uses client server architecture 
client connects server request objects interest communicate clients 
client deposit objects server share clients 
clients run asynchronously server ensures update messages sent clients subscribed object question 
subscribers select level consistency ranging absolute loose affects update delays 
ring client server system object managed exactly client 
subdivided spatially cells clients replica object reside cell 
filtering precomputed line sight visibility information carried servers alter client communication 
dive uses replicated world database peer peer communication 
object updated done local replica message sent peers update replicas accordingly 
naturally subjects replicated object inconsistencies due network delays 
dive compensates employing dead reckoning sending periodically synchronization information 
reduce network traffic dive allows divide geography replicated smaller set nodes expressed interest 
associated multicast groups reduces traffic 
massive supports different computer platforms allows users interact combination graphics audio text media 
system uses awareness filtering entity expresses focus nimbus medium focus textual medium smaller focus graphical medium 
massive uses client server architecture multicasting 
server provides clients initial point access 
entities replicated demand associated multicast groups 
efforts dive massive systems combined coordinated project spline divided locales arbitrary size shape associated multicast addresses 
spline uses distributed architecture node maintains partial copy corresponding focus attention 
user see locales object locale time 
entity multicasting transmit state lightweight server assigns multicast addresses informs entities changes 
system uses virtual reality modeling language vrml rendering 
community place entity sends position information server 
server uses spatial filtering decide entities need aware position changes 
server distributes updates local scenes events 
static elements scene loaded vrml dynamic data managed local scripts message passing 
server bottleneck replicated 
agora vrml system uses client server architecture shared centralized database 
server distributes update messages adding sequential order preserving non sequential possibly unreliable transmission queue type 
uses vrml distributed worlds transfer communication protocol provides daemons transmitting contents detecting transmission failures recovering lost packages 
addition replicated object specify particular event requires reliable distribution event maximum update frequency 
living worlds vrml system allows anonymous interactions loosely coupled parties 
divided zones associated server 
object owned client server new owner previous leaves zone 
system subjected unpredictable delays analyzed extended user action notation xuan 
overcome problems systems requires better level detail control world partitioning communication protocol supporting qos quality service number participant grow amount information remains relatively constant 
centralized system guarantees synchronization consistency displays 
system provides qos degrading rendering client resources lacking 
includes scripting language giving highlevel description objects 
object description comprises object behavior distribution policy 
object deterministic replicated node network node responsible updating local replica 
object distributed node begins multicast update messages network 
parade system replicated databases maintained communication non deterministic events local calculation deterministic events 
events discrete state change continuous audio stream 
discrete events require relations preserved continuous events stamped wallclock time kept synchronized node 
ciao uses optimistic method concurrency control replicated objects 
update carried immediately local replica transmitted remote nodes 
conflicting operation occurs token associated manipulated object maintain consistency 
initially object creator token 
owner token receives update message validates operation giving token node commenced update 
real time transport protocol rtp aimed distributed interactive media 
includes methods ensuring application instances look operations executed order 
inconsistencies caused operation delays network latency handled delaying deliberately local updates match transmission delays 
node keeps history inconsistency occurs situation rolled back conflicting operation carried situation rolled forward back current time 
resort protocol includes method explicit state request 
synchronous collaboration transport protocol sctp focuses collaboration closely coupled highly synchronized tasks 
interaction creates stream update messages important message 
protocol message sequence related user interaction shared object grouped stream 
interaction stream critical messages especially sent reliably sent best effort transport 
multiplayer computer games problems online gaming dealt marginally scientific literature 
usually papers concentrate simple games limited problem settings 
multi user muds text began turn 
players access shared database comprising example rooms exits artifacts 
players inside room browse manipulate database 
move rooms exits connect 
users add new rooms objects database give unique behavior embedded programming language 
users communicate directly real time 
amaze players maze goal shoot missiles players 
node uses point point communication transmit second position velocity updates allowing dead reckoning 
players join leave time system supports players 
game uses simple client server architecture 
employ dead reckoning responsiveness effectively determined network latency 
artery system provides programming interface 
networking dis protocol system tries reduce traffic utilizing application specific semantic knowledge 
system supports dead reckoning message aggregation interest management 
mimaze players try shoot maze 
uses distributed architecture requires server initialization 
cope different transmission delays mimaze employs bucket synchronization mechanism 
delays participating hosts evaluated wallclock time 
message issued absolute time delayed measured transmission delay participants evaluate time 
message missed arrives late dead reckoning extrapolate information 
distributed entertainment environment dee architecture distributed gaming 
divides game world conceptual model rules object attributes dynamic model interaction spatial level visual model rendering information 
reduce network traffic conceptual dynamic models stored server participating client instance visual model 
generic model demand described 
game data stored server transferred locally cpu server running particular game session 
game session data sent network front server acts proxy stores level data 
data conveyed client rendering computation intensive carried 
user behavior analyzed modelled 
data drawn real world network traffic generated person shooter games client server architecture 
network security cheating prevention addressed 
people working entertainment industry started publish openly ideas solutions trade magazines conferences 
discussion build cohesive picture discuss broader issues affecting networking 
networking resources interconnected different techniques affect 
introduce concept enables understand problems achieving consistent responsive system 
consider relationship logical platform application 
resource management amount consumed resources networked application directly related information send received participating computer quickly delivered network 
singhal zyda call rule networked virtual environment information principle 
giving information principle equation resources number messages transmitted average number destination nodes message average amount network bandwidth required message destination timeliness network deliver packets destination large values imply need minimal delay vice versa number processor cycles required receive process message 
system designer information principle equation tool balance requirements restrictions 
lowering variables resource demands decrease 
reduce expenditure resource compensate 
means variable equation increases quality experience lower 
choice variables decreased variables compensating depends naturally application requirements resource bottlenecks 
recap techniques sect correlate variables information principle equation 
packet compression reduce average packet size encoding decoding processes computational increases 
packet aggregation merges packets reduce bandwidth consumption caused packet headers 
number packets decrease average packet size increases 
bandwidth consumption reduced slight processing cost 
interest management techniques pursue reduce average number messages bandwidth message 
requires organizing nodes consequently messages 
dead reckoning transmits update messages frequently maintain predicted states objects 
addition quality experience decreased due inaccurate information 
consistency responsiveness consistency refers similarity view data nodes belonging network 
absolute consistency means node uniform information 
responsiveness means delay takes update event registered database 
consistency responsiveness independent 
traditionally responsiveness subjected consistency requirements database research 
real time interaction responsiveness important element consistency may compromised 
achieve high consistency data control architecture guarantee processes running remote nodes tightly coupled 
usually requires high bandwidth low latency small number remote nodes 
achieve high responsiveness queries data responded quickly requires loosely coupled nodes 
case nodes include computation reduce bandwidth latency requirements 
reality network architecture achieve high consistency high responsiveness time choice architecture essentially trade attributes 
discern parts data control architectures local node network relay connecting see 
relay acts intermediary local node network structure defines consistent responsive architecture 
relay input output pairs 
local input originated local node local output directed node 
network point view relay sends receives messages 
communication architecture prescribes messages transmitted client server messages transmitted server client 
instance application running local node sends control messages keyboard joystick relay receives data messages vehicle positions 
turn relay communicates relays nodes network 
put aside communication architecture operations inside local node concentrate relay 
obviously message local global node local local relay global global network data control architecture defines messages relayed local remote nodes 
flows exist 
gives minimum form way relay see 
functions denote message may undergo operations compression time stamping inside relay passed 
way relay model instance distributed databases centralized systems 
new local messages relayed network appear local node message network received 
effect way relay acts simple intermediary node network 
example dumb terminal sends characters typed keyboard mainframe sends back characters displayed monitor 
easy see way relay allows achieve high consistency messages go network centralized server group peers confirm establish consistent set data 
way relay guarantee high responsiveness 
depend networking resources latency bandwidth processing power way system responsive improving 
approach overcome limitation bridge flows forms short circuit relay see 
locally originated messages passed back local output inside relay 
function indicates messages may undergo changes 
wait messages pass network return back short circuit back locally 
clearly achieve high responsiveness comes price local data inconsistent nodes 
means kind rollback negotiation mechanism required solve inconsistencies local local local local global global global global global local local global global local local global local relay alternatives structure way relay sends local control messages network sends back data messages node 
short circuit relay sends local control messages network passes locally back node 
problem 
noted inconsistent data necessarily entail problem problem arises parties need interact precisely aware inconsistent data 
case need conflict resolution strategy parties recognize negotiate agree situation 
instance foot soldier may content observing airplane inconsistencies may exist soldier engage parties agree positions hits 
data control architecture defines nodes responsibility data see 
centralized architecture relay conveys local control network receives data 
reversed distributed architecture 
replicated architecture local input output mixture control data messages 
architecture characteristic problems centralized architecture access data may take time distributed architecture allocation data fragments nodes handled properly replicated architecture updating data replica tricky 
logical platform application discern level hierarchy affecting networked applications physical platform logical platform application 
logical platform centralized distributed replicated centralized data architecture data server node stores data 
replicated architecture node manages replica data 
distributed architecture data distributed nodes 
tended system designers 
programming language level abstractions data entities communication channels 
important notice need know application 
especially networking unfortunate tendency mix logical platform concepts application level concepts 
data control communication architectures require knowledge application provide basis 
application level adds context interpretation data integer value represents position related user 
closely related issues scalability ability adapt resource changes persistence leaving entering collaboration players integrity sharing object 
scalability concerns example construct online server dynamically adapts varying amount players allocate computation non player characters nodes 
achieve kind scalability physical hardware parallelism enables logical software concurrency computation 
scaling mcg brings forth complementary views new participant naturally burdens communication resources time offers additional computational power application 
viewpoint fully realized 
persistence concerns remote node coexist application 
initially application state node configured conform state players join online server receive object data corresponding current situation 
gameplay node application live symbiosis determined underlying logical platform 
example distributed architecture node gets disconnected abruptly application looses objects maintained node 
node leaves application application mechanism game state forwarding node responsibilities 
sum persistence account things configuration error detection recovery maintenance application node 
collaboration usually means team members act achieve shared goal eliminate team overcome common obstacles 
support collaboration mcg provide player rich accurate information rest team 
technically collaboration requires communication players prioritized 
interest management bases observation closer objects communicate 
distance team members defined spatial terms may implicit knowledge status share dedicated communication channel 
clearly team applicationlevel concept 
concept collaboration distance complex team cooperation consumes resources 
implemented effectively physical level mechanism supports lan multicasting 
concluding remarks research done distributed interactive real time applications provides insight problems networking multiplayer computer games 
techniques reducing network traffic surveyed relevant literature 
summarized key factors networking physical logical application levels 
story far lies ahead 
naturally see improvements hardware novel techniques new media 
entertainment industry continue invest developing online mobile gaming 
software project logical step encapsulation path taken graphics rendering developers shelf engines 
bound happen networking 
requires underlying concepts relationships analyzed carefully gain consensus 
lessons learned past valued 

development technology collective training case history 
human factors 

network architecture multiuser networked games demand 
proceedings international conference information communications signal processing volume pages new york ny 

traffic client server architecture multi user network game applications 
proceedings ict volume pages melbourne australia apr 
waters anderson 
locales supporting large multiuser virtual environments 
ieee computer graphics applications 

interactive multi user computer games 
technical report british telecom june 
electronic version available www mud uk richard htm 
levine 
cheat proof playout centralized distributed online games 
proceedings twentieth ieee computer communication society infocom conference anchorage ak apr 
benford bowers mariani rodden 
supporting cooperative virtual environments 
computer journal 
benford rodden 
collaborative virtual environments 
communications acm 
cheriton 
amaze multiplayer computer game 
ieee software 

leveling playing field implementing lag compensation improve online multiplayer experience 
game developer june 

network programming age 
game developer conference proceedings san jose ca mar 
burgess 
reality built virtual reality tool 
computer graphics 
blow 
look latency networked games 
game developer july 
borella 
source models network game traffic 
computer communications 

internet protocol shared virtual environments 
proceedings rd international symposium virtual reality modeling language pages monterey ca feb 

toolkit realizing shared virtual environments internet 
distributed systems engineering 
cai lee chen 
auto adaptive dead reckoning algorithm distributed interactive simulation 
proceedings thirteenth workshop parallel distributed simulation pages atlanta ga may 
chiueh 
distributed systems support networked games 
proceedings sixth workshop hot topics operating systems pages cape cod ma may 
chiueh pradhan 
distributed system support network multi user interactive applications 
proceedings st distributed simulation symposium orlando fl sept 

qos model collaboration distributed virtual environments 
journal network computer applications 
deering 
host extensions ip multicasting 
internet rfc aug 
ftp ftp isi edu notes rfc txt 
defense advanced research projects agency 
synthetic theater war 
web page mar 
stow navy mil 
diot gautier 
distributed architecture multiplayer interactive applications internet 
ieee networks magazine 
england gray 
temporal aspects interaction shared virtual worlds 
interacting computers 
fabre marchand 
asynchronous architecture manage communication display user interaction distributed virtual environments 
mulder van liere editors proceedings sixth eurographics workshop virtual environments pages amsterdam netherlands june 
springer verlag 
fabre marchand 
framework dynamically manage distributed virtual environments 

editor proceedings second international conference virtual worlds volume lecture notes artificial intelligence pages paris france july 
springer verlag 
fr con 
dive scaleable network architecture distributed virtual environments 
distributed systems engineering 
funkhouser 
ring client server system multi user virtual environments 
proceedings symposium interactive graphics pages monterey ca apr 
funkhouser 
network topologies scalable multi user virtual environments 
proceedings virtual reality annual international symposium pages santa clara ca mar 
gautier diot 
design evaluation mimaze multi player game internet 
proceedings ieee international conference multimedia computing systems pages austin tx july 

awareness communication management massive systems 
distributed systems engineering 
benford 
massive collaborative virtual environment teleconferencing 
acm transactions computer human interaction 
harada matsui ohno 
space sharing architecture dimensional virtual community 
distributed systems engineering 
henderson 
latency user behaviour multiplayer games server 
proceedings third international workshop networked group communication pages london uk nov 
henderson bhatti 
modelling user behaviour networked games 
proceedings acm multimedia pages ottawa canada oct 

distributing object state networked games object views 
game developer mar 
lea honda 
virtual society collaboration space internet 
computer supported cooperative working 
lea honda 
community place architecture performance 
proceedings nd symposium virtual reality modeling language pages monterey ca feb 
ty gautier diot 
mimaze multi player game internet 
proceedings th international conference virtual system multimedia volume pages japan nov 

internet learned coding wing vs tie fighter 
sep 
www com features htm 

network software architecture large scale virtual environments 
phd thesis naval postgraduate school monterey ca june 
zyda 
taxonomy networked virtual environments 
ieee multimedia 
zyda pratt barham 
network software architecture large scale virtual environment 
presence 
campbell dahl davidson howell schwartz 
creating distributed virtual environment global applications 
proceedings networked reality workshop boston ma oct 
mauve nch 
rtp common application level protocol distributed interactive media 
ieee transactions multimedia 
morse bic 
interest management large scale virtual environments 
presence 

virtual combat guide distributed interactive simulation 
books pa 

project exploring applicative technical usage dimensions collaborative virtual environments 
presence 
powers 
dee architecture distributed virtual environment gaming 
distributed systems engineering 
roberts sharkey 
maximising concurrency scalability consistent causal distributed virtual reality system whilst minimising effect network delays 
sixth workshop enabling technologies cambridge ma june 
schwartz campbell inkpen matheson nakamura 
shen yen 
virtual playground architectures shared virtual world 
proceedings acm symposium virtual reality software technology pages 
shaw green 
toolkit peers package experiment 
ieee virtual reality annual international symposium pages sept 
shaw green liang sun 
decoupled simulation virtual reality 
acm transactions information systems 

communication architecture collaborative virtual environments 
computer networks 
singh serra png ng 
software toolkit network virtual worlds 
presence 
singhal zyda 
networked virtual environments design implementation 
addison wesley 
singhal 
effective remote modeling large scale distributed simulation visualization environments 
phd thesis standford university standford ca aug 
singhal cheriton 
exploring position history efficient remote rendering networked virtual reality 
presence 

aspects networking multiplayer computer games 
sing man wai editors proceedings international conference application development computer games st century pages hong kong sar china nov 

story 
acm crossroads 
www acm org crossroads html 

sung 
yang 

concurrency control ciao 
ieee virtual reality conference pages houston tx mar 
united states department defence 
defence modeling simulation office 
web page mar 
www mil 
united states department defence defence modeling simulation office 
high level architecture 
web page 
www mil public transition hla 
fabre 
unusual design implementation choices distributed virtual environments 
editor sixth international conference virtual systems multimedia pages japan oct 
vogel mauve 
consistency control distributed interactive media 
proceedings acm multimedia pages ottawa canada oct 
wang green shaw 
em environment manager building networked virtual environments 
ieee virtual reality annual international symposium pages mar 
waters anderson brogan casey mckeown nitta 
diamond park spline social virtual reality system animation spoken interaction runtime modifiability 
technical report tr merl mitsubishi electric research laboratory cambridge ma nov 
wray hawkes 
distributed virtual environments vrml event architecture 
computer networks isdn systems 
yan 
choi 
security issues online games 
sing man wai editors proceedings international conference application development computer games st century pages hong kong sar china nov 

yu 

dynamic message filtering technique 
computer communications 
turku centre computer science fin turku finland www tucs fi university turku department information technology department mathematical sciences abo university department computer science institute advanced management systems research turku school economics business administration institute information systems science 
