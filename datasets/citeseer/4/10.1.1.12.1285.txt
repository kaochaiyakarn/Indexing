anatomy context aware application andy harter andy hopper pete steggles andy ward paul webster ach ah pjs uk research att com describe platform context aware computing enables applications follow mobile users move building 
platform particularly suitable richly equipped networked environments 
item user required carry small sensor tag identi fies system locates accurately dimensions 
platform builds dynamic model en vironment location sensors resource informa tion gathered telemetry software presents form suitable application programmers 
platform illustrated practical example allows user current working desktop follow move environment 
essence mobile computing user applica tions available suitably adapted form user goes 
richly equipped networked environment modem office user need carry equip ment user interfaces applications selves follow user move equipment networking resources available 
call applica tions follow applications 
follow applications special case context aware applications 
context aware application adapts behaviour changing environment 
examples context aware applications construction kit computers automatically build organ ising set proximate components act com plex device walk auto permission digital hard copies part fog personal classroom granted fee provided copies distributed profit commercial advantage copies hear notice full citation page 
copy rt post lists 
requires prior specific permission fee 
mobicom seattle washington usa copyright acm laboratories cambridge street cambridge cb united kingdom laboratory communications engineering cambridge university department engineering street cambridge cb wz united kingdom matically select streams range cameras maintain image nomadic user 
typically context aware application needs know location users equipment capabilities equipment networking infrastructure 
describe platform uses sensors telemetry software collect environmental data presents data form suitable context aware applications 
platform describe main components fine grained location system locate identify objects 
detailed data model describes essential real world entities involved mobile applica tions 
persistent distributed object system presents data model form accessible applications 
resource monitors run networked equip ment communicate status information cen repository 
spatial monitoring service enables event location aware applications 
describe example application show platform may 
indoor location sensing ideal location sensor indoor environments possess important properties 
provide fine grain spatial information high update rate unobtrusive cheap scalable robust 
unfortunately indoor environment challenging implement system 
radio location techniques gps successful wide area severe multipath effects build ings 
electromagnetic methods suffer interference bat unit top view bottom view monitors metal structures whilst optical systems require expensive imaging detectors affected line sight problems environments con taining opaque objects 
location systems ultrasonic techniques appear desirable proper ties system developed lab described 
principles small units called shown attached equipment carried personnel 
bats consist radio transceiver controlling logic ultrasonic trans 
current version measures cm cm cm weighs 
bat globally unique identifier 
ul receiver units shown figures placed known points ceiling rooms 
receivers connected wired daisy chain network 
base station periodically transmits radio message containing single identifier causing corresponding bat emit short unencoded pulse ultrasound 
ously ultrasound receivers rooms covered base station reset wired network 
receivers mon incoming ultrasound record time arrival signal bat 
speed sound air estimated ambient temperature times flight ultrasound pulse bat re converted corresponding bat receiver dis 
distances bat non collinear receivers position space may de process 
position object bat attached de duced 
reflections ultrasonic signal objects environment commonplace cause incorrect measurement bat receiver distances 
erroneous dis tance measurements eliminated statistical outlier rejection algorithm improve accuracy calculated bat position 
distance measuring pulse emitted installed receiver base station waits pulse die triggering bat ensuring receivers incoming ultrasonic signals correct bat 
pro cess divides time timeslots locate single bat 
typical office spaces may take ms die away implying may timeslots location updates second base station 
information location system determine orientations objects 
placing bats known points rigid object finding posi tions space position orientation ob ject may deduced 
situations tagging object multiple bats cumbersome alternative ap proach may taken 
objects opaque ultrasound cast shadow signal emitted bat 
transmission pattern bat attached object directional 
determining position single bat positions signal detected known transmission pattern estimate orientation bat object attached 
sensor scalability location sensing system described fea tures suitable wide scale deployment en interest 
provide different qualities service location different types object handle changing sets objects located scalable large numbers objects large areas operation 
limited number timeslots efficiently dis tributed set bats tracked 
timeslot allocated bat base station 
value called locution quality service associated object indicates desired interval location dates object 
base station schedules timeslots bats currently requested values 
scheduling environment dynamic val er position accuracy ultrasonic tracker ues associated objects may change day 
example base station normally monitor bats carried people move times second monitor attached workstations ev ery minutes 
person walk workstation workstation monitored fre quently moved 
scheduling information assist power sav ing bats 
example base station knows object located time command bats associated object temporarily enter low power sleep state check incoming radio messages 
set bats tracked location system may change time objects enter leave operating space 
mechanisms exist introducing new bats set polled base station deleting bats set location resources wasted bats 
bats outside operating space base station enter low power searching state 
bat searching state locks transmissions base station uses slotted aloha contention resolution protocol send unique identifier base station radio transceiver registering presence base station 
hand base station allo cates timeslots registered bat sees indi cation receivers bat responded transmit ting ultrasound conclude bat obscured bat left operating space location sys tem 
base station resolve possibilities re bat transmit unique identifier ra dio transceiver reply received base station reclaims resources allocated bat 
number bats monitored system determined size address space large required 
area covered location system may increased multiple base stations 
time division multiplexing tdm strategy en multiple eats cm baseline orientation accuracy ultrasonic tracker sure transmissions neighbouring base stations interfere 
base stations common timeslots derived global clock tdm channel active timeslot 
base stations ra dio cells overlap allocated different tdm channels transmit timeslots 
choice tdm strategy limits location rate individual radio cells permits simple low cost implementation bat radio transceiver 
bat moves radio cells perform handover control base station 
systems handover decisions standard criteria received radio signal strength link error rates base station load developed 
handover decisions base stations known bat positions known extents radio cells measured system configuration 
location system evaluation current location system installed rooms corridor laboratory 
uses base stations receivers cover approximately 
avail able timeslots second shared equally base stations location information guide han dover bats radio cells 
near intend install system building floor area approximately volume 
preliminary measurements indicate build ing covered radio cells operating tdm channels implying aggregate location rate dates second 
receiver density extended installation similar chosen current sys tem 
current location system address bats bit address space 
battery lifetime bat strongly dependent manner bats attached objects located frequently little opportunity enter low power sleep mode shorter battery lifetimes attached static objects 
practice bats located times second battery lifetimes months 
bats input output facilities take advantage bidirectional radio link base stations data chan nel allows command information sent peripherals connected bat buttons bat allow act ubiquitous control device 
shows position accuracy location sys tem determined measurements volume 
seen readings cm true positions 
importance reflection elimi nation algorithms evident position accuracy lo cation system significantly worse methods employed 
shows accuracy meth ods determining object orientations described 
method involving multiple bats seen accurate relying shadowing single bat especially distance multiple bats object baseline large 
modelling environment ideally context aware systems know user aspects environment rele vant application 
key element general platform systems detailed model describing entities real world possible interactions 
model sets types names capabilities properties entities relevant context aware applications acts bridge allowing computer systems share users real world 
furthermore extent data model defines limits context aware system view world consequently possible domain appli cation environment composed collection real objects appropriate model object oriented modelling technique 
developed mod language represent data model entity re diagram augmented multiple inheritance 
richly equipped networked environment context models devised repre sent people computers keyboards displays networks tele phones furniture 
systems infrastructure software counterparts real world entities imple mented persistent distributed objects corba oracle database 
package called ou provides object oriented data modelling language generate object layer top relational model oracle database 
tier architecture objects stored database rows data sociated operations written oracle proprietary procedural extension sql 
accessed proxy server receives corba calls client applications forwards appropriate operation oci oracle proprietary call interface 
effectively pro vides corba mapping 
code im proxy automatically generated utility 
resulting tier model shown 
recognised information particularly bat sensors updated frequently stored database 
information travels fast path goes proxy 
possible thousands objects stored system 
may updated queried infrequently proxy implementation inactive time 
demand loading allows proxies operate cache persistent objects 
proxy server creates instance object database accessed 
proxy server manage number active objects unloading implementations basis 
subsequent calls unloaded objects cause reloaded 
approach reduces total level resources required objects provides system scalability 
demand mechanism provides system robust ness 
clients assume objects accessible 
proxy server crashes new started clients re bind new transparently ap plication 
writing applications easier allows proxy servers upgraded extended needing restart clients 
complete description demand loading mech anism implementation scope pa 
full details 
updating model order populate database described informa tion real world objects properties gathered 
cases data static need asserted 
elements dy namic example keyboard activity machine load au update methods necessary maintain current view environment 
processes called resource monitors installed networked machines 
monitors operating system calls discover information current status ma chines periodically report changes status objects database corba interfaces 
monitors structured portability run wide range ing systems 
furthermore monitors lightweight designed impinge normal machine communications infrastructure 
classes resource monitor imple mented 
machine activity keyboard activity 

machine resources cpu usage memory usage 

network point point bandwidth latency 
machine activity monitor example wakes seconds 
checks level mouse keyboard activity identity logged user 
change entry machine database updated 
monitors behave similarly 
centralised approach chosen order reduce query latency minimum 
information concentrated place applications need col lect data acting 
require number network calls increase query latency 
storing data centralised repository ensures complex queries easily expressed standard rdbms technology 
effort put design monitor ing clients communications infrastructure en sure database prove bottleneck 
apply filtering caching techniques client level middle tier achieve update frequency frequency items mon quickly item tends change 
relevancy value changed significantly time updated sent database 
significance depends data monitored 
example free space disk changing significant disk full caching data caching improve client retrieval times 
dramatically reduce query times 
application uses database provide distributed ps lists user processes regardless machine run 
caching improves perfor mance factor 
filtering reduces rate updates database 
evidently trade ab accuracy information response time resource overhead imposed monitors 
current deployed system monitors run ma chines 
update frequencies range seconds key board mouse activity seconds disk free space 
monitors update information long running processes 
model maintained acceptable level accuracy trans action rate transactions minute 
programming space section considers bat readings interpreted generate accurate object location information ap plications provided suitable abstraction support location aware programming 
converting bat locations object locations modelling system physical object represented object database corba object proxy server 
corba interfaces added proxy objects multiple inheritance enabling communication bat system simple corba callback mechanism 
callback function implemented different way type provide type specific method calculating object positions 
personnel wear single bat clipped clothing location bat translated directly location person 
computer workstations tracked bats placed side display 
location bats accurate value orientation compo nent location workstation treating line tween bats dipole constrained rotate vertical 
filtering error detection smooth small random errors location computers simple low pass filter trading loss speed response stable sequence location readings 
filtering reflects empirical observation locations computer displays rarely oscillate high cies 
locating people filtering observation 
common sensors location system prone occasional large errors caused example environ mental ultrasound 
method detecting errors implemented thresholding maximum velocity expected objects 
maximum expected speeds allocated type basis 
visualisation location data registration corba object represents physical object interface allowing applications quality service requests location system 
absence specific requests objects suitable default requests type basis default rate people readings second computers reading seconds 
location aware api application system provide human users browsable model world explore 
implemented model building dated real time location data 
shown fig ure 
data distributed event service ensures users view information time 
raw form location data applications benefit layer inter 
absolute relative spatial facts techniques described show location sys tem provide absolute spatial facts objects person facing direction 
general location aware applications interested relative spatial facts person standing front tion 
task application translate absolute spatial facts relative spatial facts 
generalise automate process translation simple method formalising relative spatial facts required 
approach expresses relative spatial facts objects terms geometric containment relationships tween spaces associated objects 
example technique illustrated 
light contained person person workstation representation spatial fact geometric containment 
coloured space represents area front station screen dark coloured space represents spot person standing 
statement person standing front workstation considered true space associated person contained space associated workstation 
note represents environment 
simplification people objects tend move unrestricted manner dimensions 
containment relationship evaluated number planes corresponding individual floors building 
spatial monitoring application writers express relative spatial statements terms geometric containment statements spatial monitor implemented translate absolute location events objects relative location events 
applications receive stream events expressing facts directly relevant person walked workstation person walked away workstation 
interaction application spatial monitoring system illustrated 
applications associate space type object example light spaces workstations people register callbacks spatial facts example request notified dark person space contained light workstation space 
shown location events generated bat system translated object location events appropriate proxy object 
spaces associated object virtue applicationlevel associations spaces object types looked generating stream space location events 
input indexing system generates stream application callback dispatch spatial fact containment relations space object type spatial index space set proxy object sat system space locations object locations sat locations transformation absolute location events application centric callbacks containment events 
callbacks associated con events looked called 
scalability issues design spatial monitor certain scalability im plications 
realistic system capable supporting reasonably sized building achieve data rate object movements second population tens hundreds thousands objects 
time ob ject moves calculation done evaluate geo metric statements send appropriate events 
clearly form spatial indexing required minimize computational complexity involved 
indexing system support arbitrary mixture sizes geometries provide fast predictable insertion updating query 
containment tree indexing system chosen indexing system uses quadtree called con index 
quadtree standard indexing structure generated breaking plane containing spaces sub quadrants quadrant cell represented node tree 
root node represents entire indexed region plane sub quadrant nodes children root node 
turn cells nodes sub quadrants children respectively form hierarchical quadtree 
space placed containment index maximal cover space calculated 
maximal cover smallest set quadtree cells largest cells re quired cover space particular resolution 
lution dictates minimum size quadtree cell con sidered indexing operation higher indexing res consider smaller quadtree cells result maximal cover space better approximation space index 
example maximal cover shown 
cells contain ment tree corresponding cells maximal cover space labelled space identifier 
suppose spaces covered exactly maximal covers resolution maximal covers extend spaces boundaries 
pos sible express spatial containment relation terms relation maximal covers containment indexing theorem space con tained space cell maximal cover exists exactly cell maximal cover oft contains equal 
suppose maximal covers extend bound aries covering spaces clearly approximations respectively containment indexing theorem approximate contain ment relations spaces evaluated consider ing relations cells maximal covers 
approximate evaluations containment relations ad equate mobile applications bat location sys tem provides approximate information properties spaces extent ar merely formalisations imprecise application level relations 
space inserted deleted tree process tree walking 
walking tree count maintained spaces encountered re totals identify containment rela tionships involving space 
example inserting space maximal cover cardinality space encountered paths taken inserts containment indexing theorem contains similarly containment tree cells annotated searched occasions space max cover cardinality encountered con tains 
inserting space index corresponding positive containment events generated 
similarly negative containment events generated deleting index 
moving space index possible generate new positive negative containment events subtracting intersection positive negative event sets 
cost placing space index proportional product perimeter indexing resolution 
cost searching tree underneath space proportional product area space density lation index 
moving space index spaces contain time proportional perimeter spaces contained time proportional area space precompilation step ensure index ing cost independent type space indexed concave polygons easy index circles 
related algorithm possible simultaneously generate positive negative overlapping events space moved index 
approach incorporate degree hysteresis applications 
regis tering positive containment negative overlapping tween large stationary space small mobile possible avoid oscillating event stream small space borders large 
implementation performance implementation containment indexing system developed optimised performance ric multiprocessor systems 
implementation details outside scope 
information avail able lo 
performance tests order assess spatial monitoring system adequately support large building containing people thou sands pieces equipment 
tests involved indexing large population different sized squares mea quickly space moved index 
index units pop grids squares size units total spaces indexed mini mum cell size unit squares size units resolution unit moved 
throughput updates second sun smp machine mhz spare processors 
believe level formance excess requirements 
case study previous papers described active badge sys tem capable locating objects room scale granularity 
application active badge sys tem allows user redirect teleport window sys tem environment different computer displays 
ap plication find personnel determine set displays near active badge information 
personnel redirect working environment displays maintain zones buttons bat teleporting buttons active badge 
current implementation limitations active badge able locate user room scale granularity repeated badge button presses needed cycle candidate machines 
room containing machines process time consuming 
order provide feedback user regarding current machine selection machine screen flash 
user machine dis action fact means selected 
cycling machine operating running display software delay connection times moves machine 
problem occurs resource information available machines located room assumed working able dis play sessions 
case study brings elements discussed presents follow application known bat teleporting builds existing addresses limitations 
bat teleporting virtual network computing vnc system provides windowing system independent means user ac cess desktop environment networked machine 
server manages desktop renders hidden frame buffer 
changes frame buffer sent view ing clients simple protocol 
keyboard mouse events sent back server clients 
mode operation clients set listen incoming connections servers 
servers corba interface initiate connections particular clients close existing connections 
events generated bat sightings appro priate calls corba interface desktop tele ported display just action user moving event condition action diagram describing bat teleporting 
similarly sent away user moves away 
implementation bat teleporting application entirely event driven 
consider 
computer spatial zones defined 
inner action zone close machine triggers teleport operation 
arranged small user actively approach machine order bring desktop display 
outer main tain zone larger 
zone user keep desktop display 
user leaves zone desktop removed 
user may number desktops different ma chines needs way select 
buttons bat allow selection alternative desktop user display 
information generated activity monitors determine mouse keyboard ac tivity particular machine seconds 
bat teleporting application check see user machine 
cases user desktop brought display interfere 
situations user may wish override feature teleport desktop machine 
second button bat purpose 
desktop displayed override button send desktop away 
required button press events dis tributed event service send raw loca tion events 
relative geometry conditions registered spatial monitor positive containment person ac tion zone negative containment person maintain zone negative overlap person action zone 
actions triggered events summarised event condition action diagram shown 
note override set referred diagram defined set users inner action zone unable teleport due user owning display 
commentary bat teleporting control application written week 
response users actions excellent application feels natural 
example time taken user sit desktop called machine ready continue 
activity information prevents appearance desktop currently active user 
early experi ences bat teleporting encouraging system indispensable part working environment active badge enabled appli cations preceded 
infrastructure implementing context aware systems 
key features infrastructure include fine grained sensor system provides accurate date location information 
finer granularity system comparison active badge en ables provide context information appli cations consequent benefits user interface 
rich data model reflecting resource information required support context aware applications 
distributed system persistent objects queried context aware applications 
presents highly available world model applications easily utilise 
resource monitoring system collecting informa tion computing environment 
enables applications adjust behaviour accommodate system capabilities usage patterns 
spatial monitoring system allows event applications written 
allows application writ ers write location aware applications event driven style traditional gui applications 
components integrated support follow application bat teleporting improves previously developed system ways 
support ing infrastructure robust scalable simultaneously able large number different applications prototyped 
underway develop prototypes large scale fully deployed services 
authors colleagues able contributions years discussion context aware systems mobile applications 
specifically jamie model visual browsing application steve hodges bat units richardson stafford fraser vnc system 
rupert curwen provided useful comments text 
getting global positioning system 
ieee spec vol 
december 
pp 
harter hopper distributed locution system fir active ice 
ieee network special issue distributed systems telecommunications vol 
january 
pp 
blood steiner jones magnetic po sition orientation tracking system 
ieee transac tions aerospace electronic systems vol 
aes september 
pp 
rekimoto matrix realtime object ation reality 
ap pear proceedings asia pacific computer hu man interaction conference july 
richardson mapp bennett hopper tele porting un window system environment 
ieee communications magazine vol 
third quarter 
pp 
richardson stafford fraser wood hopper virtual network computing 
ieee internet comput ing vol 

pp 
roberts aloha packet system slots capture 
computer communications review april 
samet quadtree related hierarchical data structures 
acm computing surveys vol 
june 
pp 
schilit adams want context aware com puting applications 
proceedings workshop mobile computing systems applications santa cruz ca december 
pp 
io steggles location system 
patent specification application 
gb june 
ll steggles webster harter tation distributed framework support fol low applications 
proceedings tional conference parallel distributed process ing technique applications pdpta vol 
las vegas nv july 
pp 
want hopper gibbons ac tive badge location system 
acm transactions formation systems vol 
january 
pp 
ward azuma 
bennett fuchs demonstrated optical tracker scal able area head mounted display systems 
proceedings acm siggraph interactive graphics cambridge ma march pp 
ward jones hopper new location tech nique active 
ieee personal communica tions magazine vol 
october 
pp 
ward sensor driven computing 
phd thesis uni versity cambridge august 
