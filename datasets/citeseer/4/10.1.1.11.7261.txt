design simplepower cycle accurate energy estimation tool ye vijaykrishnan kandemir irwin microsystems design lab pennsylvania state university university park pa vijay kandemir cse psu edu design comprehensive framework simplepower evaluating effect high level algorithmic architectural compilation tradeoffs energy 
execution driven cycle accurate rt level energy estimation tool uses transition sensitive energy models forms cornerstone framework 
simplepower provides energy consumed memory system chip buses analytical energy models 
simplepower evaluate impact new selective gated pipeline register optimization high level data transformation power conscious post compilation optimization register relabeling datapath memory chip bus energy respectively 
find optimizations reduce energy datapath memory system instruction cache data bus respectively 

power consumption critical issue processor design especially embedded environments 
designing high performance low power processors designers need experiment software architectural level tradeoffs evaluate various power optimization techniques 
architectural level power estimation tools increasingly important growing complexity current designs systems chip provide fast estimates energy consumption early design cycle 
time design today large complex processors specified circuit gate level may late sponsored part nsf mip sun microsystems intel terms power energy interchangeably 
power savings energy savings necessarily go hand hand 
choice metric depend application constraints 
expensive go back deal excess power consumption problems 
software important aspect emerging embedded systems study integrated impact software hardware optimizations supported tools 
design execution driven cycle accurate rt level power estimation tool simplepower evaluating algorithmic architectural compiler optimizations 
research architectural level power estimation empirical methods measure power consumption existing implementations produce models measurements 
contrast approaches rely information theoretic measures activity estimate power 
measurement approaches estimating power consumption datapath functional units divided sub categories 
technique introduced powell chau fixed activity macro modeling strategy called power factor approximation pfa method 
energy models parameterized terms complexity parameters pfa proportionality constant 
similar schemes proposed kumar liu 
approach assumes inputs affect switching activity hardware block 
remedy problem activity sensitive empirical energy models developed 
schemes predictable input signal statistics example method proposed rabaey 
individual models built way relatively accurate error rate accuracy may sacrificed due incorrect input statistics inability model interactions correctly 
third empirical technique energy models input transitions input statistics 
method proposed mehta irwin owens assumes energy model provided functional unit table containing power consumed input transition 
closely related input transitions energy patterns collapsed clusters reducing size table 
researchers proposed similar macro model power estimation approaches 
simplepower energy simulator developed transition sensitive energy models execution driven cycle accurate rt level tool 
simulates integer subset instruction set simplescalar suite publicly available tools simulate modern microprocessors 
simulation flow uses simplescalar compiler toolset convert source benchmarks simplepower executables 
simplepower simulates executables providing cycle cycle energy estimates switch capacitance statistics processor datapath memory chip buses 
currently simplepower capture energy consumed control unit processor clock generation distribution network 
rest consists sections 
section presents design simplepower 
effectiveness selectively gated pipeline register optimization processor datapath power evaluated section 
section discusses effectiveness compiler optimizations energy consumed system components 
section draws 

design simplepower simplepower architecture stage pipelined datapath consists fetch stage instruction decode stage id execution stage exe memory access stage mem write back stage wb 
instruction set architecture simulated machine subset instruction set integer part simplescalar suite publicly available tools simulate modern microprocessors 
major components simplepower simplepower core rtl power estimation interface technology dependent switch capacitance tables cache bus simulator loader 
clock cycle simplepower core simulates execution active instructions calls corresponding power estimation interfaces activated functional units 
continues simulation program halt instruction fetched 
simulator fetches halt instruction continues executing instructions left pipeline presents output 
order keep simulator technology independent rtl power estimation interface set routines developed architectural level functional units 
parameters interface module inputs standard functional unit 
architecture functional unit changed power table interface implementation needs replaced simulator core need modification 
technology dependent switch capacitance tables developed different functional units adders alu multipliers shifter controllers register file pipeline registers multiplexors 
cache simulator simulates status instruction cache data cache 
called simplepower core cache cache cache accessed 
cache simulator built modifying cache simulator integrated memory energy model proposed 
analytical model validated accurate error conventional cache systems 
bus simulator instruction cache address bus instruction cache data bus data cache address bus data cache data bus 
records total number accesses number transitions buses 
statistics combined interconnect power model compute switch capacitances chip buses 
simplepower core accesses table interface containing switch capacitance input transition functional unit exercised 
table shows structure table input functional unit 
index switch previous current capacitance input vector input vector pf cap cap cap cap 
cap gamma cap gamma table switch capacitance table construction tables structure functional units 
functional unit divided classes bit independent functional units bit dependent functional units 
bit independent functional unit operation bit slice depend values bit slices 
case switch capacitance table need small table bit slice 
total energy consumed module calculated summing energy consumed bit transition 
examples bit independent functional units include pipeline registers logic unit alu latches buses 
bit dependent functional unit operation bit slice depends values bit slices example bit adder 
energy characterization table lookup consisting full energy transition matrix row address previous input vector column address input vector matrix value switch capacitance shown table 
unfortunately size table grows exponentially size inputs 
clustering algorithm helps problem bounding loss accuracy 
algorithm compress table bit ripple carry adder entries table entries difficult compress table bit adder acceptable accuracy 
lin proposed power modeling characterization method functional units called structure information 
technique suitable circuits small input size 
instance took hours simulate bit fast adder inputs reduced number entries 
solutions address problem ffl structure module complicated large analytical transition independent modeling estimate power consumed module 
case simulator needs record necessary parameters 
currently analytical memory system power model 
ffl functional unit partitioned smaller submodules build tables sub modules tables estimate total switched capacitance entire functional unit 
applied technique model adders multipliers register files decoders multiplexors 
shows estimated power consumption functional partitioning approach axis versus actual circuit level simulation results axis hspice port register file 
accuracy technique determined comparing hspice simulation results estimated power consumption simulator randomly chosen input transitions 
average error approach hspice simulations 
shows method underestimated power consumed input transition points distributed linearly 
constant multiplicative factor technology improve accuracy 
theta port register file power estimation approach took sec input transition opposed sec required circuit level simulation hspice 
machine running hspice simulation simulator sun ultra mbytes memory 
estimated power consumption mw power consumption hspice mw port register file estimated power consumption vs hspice results 
ideally points fall straight line 
designed shifter adders multipliers divider energy models approach similar register file 
average error hspice evaluations units 
sections describe simplepower analyzing effectiveness tradeoffs algorithms architectural design compiler optimizations 

gating pipeline registers simplepower study different architectural optimizations set benchmarks listed table 
simplepower simulation flow estimating energy applications 
source benchmark compiled simplescalar version gcc generates simplescalar assembly codes 
simplescalar assembler gas loader linker produce simplepower executables loaded simplepower main memory executed simplepower core 
users specify options configure caches output pipeline trace cycle cycle dump memory name brief description cycles acker calculate ackermann function bubble bubble sort random numbers heap heap sort numbers quick quick sort numbers binary search numbers hanoi tower hanoi disks fib find fibonacci number matrix multiplication perm permutation numbers queens find solution queens problem sieve kb array find prime numbers sieve eratosthenes table benchmark set image 
optional outputs simplepower provides register file final status total number cycles execution number transitions buses switch capacitance statistics pipeline stage switch capacitance statistics different functional units total switch capacitance 
obtained energy results simplepower observed power processor core spent gated pipeline registers datapath power unoptimized pipeline 
selective gated pipeline register optimization focuses reducing power consumption pipeline registers 
pipelined datapath multiple stages separated different pipeline registers large width 
pipeline registers unconditionally latch inputs outputs pipeline active 
result pipeline registers consume large amount energy 
propose simple technique reduce pipeline register switching activity control signals datapath selectively gating subsets pipeline registers 
evaluate effectiveness scheme simulator modified get total pipeline register switch capacitance selectively gated pipeline registers 
pipeline registers latch data inputs outputs unconditionally evaluating clock edge arrives 
usually pipeline register contains types inputs control data 
behavior functional units pipeline register controlled corresponding control signals 
control signals active functional unit data inputs functional unit necessary data 
gate data portion pipeline register corresponding control signals 
advantage extra logic needed generate signals gate clock signal clock gating logic needs added 
time data bits share gated clock control overhead small 
pipeline register mem wb shown fields bits bits bits bits gated control signal bit contained control field wb 
mem wb wb exe mem mem wb data wb mem gated clk clk instruction example sw cache address selectively gated clock data fields gated set executed instruction writes back register file 
active high gated clock fields implemented shown 
clock gating logic shared flip flops fields power overhead insignificant 
similar cases selective gating data fields various pipeline registers occur 
observed energy reduction possible processor datapath scheme various benchmarks 
observed energy consumed pipeline registers reduced 
register file power decreases due elimination spurious transitions occur decoder inputs write data drivers 
functional units show significant improvement latches individual inputs support data forwarding 
similar architectural alternatives investigated simplepower early energy conscious design choices 

memory bus optimizations section effect traditional performance oriented new power aware optimizations energy consumption evaluated simplepower 
particular study optimizations focus energy consumed memory system instruction cache icache bus 
optimizing compiler framework perform high level source source transformations low level optimizations built existing simplescalar tools interfaced simplepower 
powerful framework analyzing impact spectrum compiler optimizations individual component system system 
various high level loop data transformations evaluated simplepower results data transformations memory system particular system core memory 
simplepower evaluate influence low level transformations instruction scheduling operand re ordering register assignment code motion system energy 
application power aware post compilation optimization reduces icache data bus power 
new register relabeling algorithm proposed minimizing transition icache data bus evaluated simplepower 
cache cache cache cache direct transform direct way transform way way transform way way transform way memory system energy optimization data transformation memory system power optimization data transformations proposed improve spatial locality situations loop transformations effective 
transformations changing loop execution order modify underlying memory layouts multidimensional arrays 
layout modifications sense correspond variable renaming operations legal provided applied globally program wide 
contrast loop transformations data dependences maintained 
example consider matrix multiplication code shown 
code array spatial locality array temporal locality locality innermost loop 
data transformation framework converts layout array row major default layout column major exploit spatial reuse stride accesses array 
resulting transformed code shown 
original transformed codes simulated simplepower different data cache configurations main memory size mbits 
configuration parameters simulations cache line size bytes technology 
shows results memory system energy consumption applying data transformation 
increased spatial locality provided high level compiler transformation produces significant energy savings smaller cache sizes direct way 
data cache locality concern data cache size relatively large 
applied data transformation affect processor core consumption stall cycle power negligible just manipulates data layouts 
energy consumed core joules codes 
data transformation matrix multiplication effective reducing energy consumed memory system observed data transformations generate complex array subscript functions turn increases core energy 
bus power optimization prior efforts focused encoding techniques data buses gray code bus invert code sign magni fm fm original code code applying data transformation array tude reported savings energy 
encodings applied address instruction data cache buses data cache data buses opposed instruction encoding proposed 
various efforts reducing power dissipation consecutive instructions low level compiler techniques 
goal su despain proposed technique combines gray code addressing instruction scheduling 
basic block list scheduling approach uses greedy algorithm re order instructions minimize power consumption 
tiwari malik wolfe proposed scheduling technique tries select instructions judiciously minimize power 
method instruction scheduling limits number instructions scheduled cycle depending power constraints 
section focus reducing switching activity icache data bus processor core icache relabeling register fields compiler generated instructions 
sample traces record transition frequencies register labels encodings instructions executed consecutive cycles simplepower 
information obtain new encodings registers switching activity consequently energy consumption icache data bus reduced 
technique applicable system switching activity imposed register labels impact energy consumption 
encoding instructions relabeling considered similar data encoding techniques investigated data 
illustrate idea consider consecutive add instructions simplepower assembly language add sk add sm sn simple sequence switching activities registers slot sm source register slot sk sn second source register slot 
depending encodings registers involved impact switching activities quite significant 
register transitions occur different types instructions 
clear register fields frequent transitions need register numbers hamming distance minimum 
problem register assignments done compiler sophisticated algorithms considering number important issues minimizing register spills maximizing register reuse 
arbitrarily change register numbers just minimize power consumption 
modifications things violate data dependences instructions changing semantics program optimized 
hand alternatives determining near optimal register assignment considering power performance difficult 
developed post pass polynomial time algorithm registers global register allocation performed compiler back 
relabeling registers legal long performed code 
example decide relabel occurrences changed perform relabeling multiple pairs done simultaneously pairs 
informally post pass algorithm takes compiler generated register assignment register allocation input generates alternative assignment reduces power maintaining performance original assignment 
register relabeling optimization incorporated simplepower compilation framework modifying simplescalar toolset 
table shows energy reduction instruction cache icache data bus technology 
icache data bus processor core icache wire switch capacitance estimated pf bit transition interconnect model proposed 
observe reduction total energy reduction icache data bus register relabeling optimization 
growing number vliw designs expect savings icache data bus significant portion system energy 
designs instructions fed multiple processing unit chip resulting larger capacitive load icache data bus 
vliw processors larger number register fields instructions 
larger portion icache data bus benefit proposed optimization 

design comprehensive framework simplepower evaluating effect high level algorithmic architectural compilation trade offs energy 
design issues development transition sensitive energy macro models simplepower validated register benchmark original relabeled reduction nf nf nf acker bubble fib hanoi heap perm queens quick sieve average std deviation table icache data bus switch capacitance reduction file example 
applications simplepower evaluating impact architectural modification data transformation applied simple benchmark back compiler register relabeling optimization datapath memory chip bus energy respectively 
proposed simple selective gated pipeline optimization technique reduce datapath switch capacitance tested applications 
high level data transformation reduce memory system power third 
contrast works simplepower useful optimizing energy system capture memory energy savings datapath 
capability important applying certain high level transforms loop tiling increase datapath energy 
propose new energy conscious register relabeling optimization find reduces energy consumed instruction cache data buses 

benini micheli 
regression models behavioral power estimates 
proceedings international workshop power timing modeling optimization simulation page september 
burger austin 
simplescalar tool set version 
technical report computer sciences department university wisconsin june 
cierniak li 
unifying data control transformations distributed shared memory machines 
proceedings sigplan conference programming language design implementation june 
hill larus lebeck wood 
wisconsin architectural research tool set 
computer architecture news august 

analytical energy dissipation models low power caches 
proceedings international symposium low power electronics design page august 
kandemir choudhary ramanujam banerjee 
improving locality loop data transformations integrated framework 
proceedings micro dallas tx december 
kandemir vijaykrishnan irwin ye 
influence compiler optimization system power 
proceedings th design automation conference 
kumar vemuri 
profile driven behavioral synthesis low power vlsi systems 
ieee design test magazine page fall 
rabaey 
activity sensitive architectural power analysis 
ieee transaction cad page june 
lin shen jou 
power modeling characterization method structure information 
international conf 
computer aided design page november 
liu 
power consumption estimation cmos vlsi chips 
ieee journal solid state circuits page june 
marculescu marculescu pedram 
information theoretic measures energy consumption register transfer level 
proceedings international symposium low power design page april 
mehta owens irwin 
energy characterization clustering 
proceedings rd design automation conference page june 
muchnick 
advanced compiler design implementation 
morgan kaufmann publishers san francisco california 
powell chau 
estimating power dissipation vlsi signal processing chips pfa technique 
vlsi signal processing iv page 
rabaey pedram 
low power design methodologies 
kluwer academic publishers 
irwin 
number representation reducing data bus power dissipation 
proceedings rd asilomar conference signals systems computers november 

chakrabarti 
memory exploration low power embedded systems tr 
technical report arizona state university 
su despain 
cache design trade offs power performance optimization case study 
proceedings international symposium low power electronics design page 
tiwari malik wolfe lee 
instruction level power analysis optimization software 
journal vlsi signal processing systems vol 
august 
conte reilly 
instruction scheduling low power dissipation high performance processors 
proceedings power driven micro architecture workshop conjunction isca june 
wu qiu pedram 
ding 
cycle accurate macro models rt level power analysis 
ieee transactions vlsi systems page december 
zhang chen ye irwin 
system level interconnect power modeling 
proceedings th international asic conference page september 
