operating system fundamentals eyes distributed sensor network stefan paul havinga university twente department computer science enschede netherlands havinga cs utwente nl problems related sensor networks built large number nodes having limited capabilities operating system running inside node 
provide lot functionality allow easy development applications restricted resources memory processing capabilities energy 
features related general nature network applications building distributed system types mobile sensors 
identified main requirements operating system propose architecture satisfies 
results study steps project provides basics 
keywords sensor network distributed operating system mobile sensor nodes vision ubiquitous computing requires development devices technologies pervasive intrusive 
small sensors communicating capabilities low processing power tend familiar devices nowadays 
basic component smart environment small node sensing wireless communications capabilities able organize flexibly network data collection delivery 
realizing sensor network presents significant challenges especially architectural protocol operating system level 
major steps forward required field communications protocol distributed data processing application support 
sensor nodes equipped power supply battery embedded processor autonomous self aware functionality capabilities limited 
deployed larger numbers perform complex tasks 
collaboration nodes essential deliver smart services ubiquitous setting 
projects completed field tinyos developed berkeley university particularly dedicated sensor nodes 
tries give solutions applications specific initial conditions 
eyes project european project ist address problems distributed information processing wireless communication mobile computing 
building prototype sensor network test new algorithms concerning previous mentioned topics include research reliability security 
matter large sensor network basic operations need performed node network detection configuration acquisition processing delivery collected data presents approach designing operating system able provide basic functionalities extremely lean conditions 
top ones possible develop complex local distributed applications 
ii 
eyes sensor characteristics may different types sensors network different levels functionality different roles 
nodes system may execute autonomously provide networking system services control various information retrieval dissemination 
nodes functionality basically just gather data communicate master node 
intend kinds sensor nodes experiments sensor node capable performing significant computation low node see basic functionality system processing capabilities limited 
operating system designing concerns low nodes takes consideration limited resources available 
main processor project msp produced texas instruments 
bit processor kbytes program memory kbytes data memory 
power saving modes 
node equipped auxiliary serial eeprom memory megabits application data storage 
access time memory low fig 

eyes sensor node function similar secondary storage hard disk drive modern computer 
communication function realized tr hybrid transceiver suited kind application low power consumption small size 
easy integrates aspects related communication mechanism single chip 
iii 
eyes operating system requirements probably expression operating system best description software developing 
term trying offer facilities limited resource environment allows 
system come close possible fully featured operating system 
main characteristics operating system small size power awareness distribution reconfiguration 
main features specific requirements added described 
small code size system necessary memory small 
sight memory constraints severe quite impossible compact fully operational os limits 
possible necessary functionalities implemented modified suit application 
power awareness obligatory condition system low nodes battery operated 
batteries monitored microprocessor find time power available 
treat energy special resource take certain measures reaches certain low level signal event network reorganize tasks willing able perform 
microprocessor chosen point view power consumption 
set function low power mode operations execute 
pe remain active external event interruption request radio component wake system 
network behave distributed system central server available 
nodes able organize clusters elect cluster leaders 
advantages single point failure disappears communication load closest nodes central server longer problem 
failure network nodes regarded regular phenomenon due large number nodes finite energy possibly deployed harsh environment due mobile nature nodes 
network ability reconfigure support classes failures starting crash failures byzantine behaviors 
iv 
eyes operating system characteristics general principles described previous section leave space approaches 
chosen specific guidelines design 
modality achieve small size code time solve limited available energy problem design system operate event driven basis 
way code structured modules executed responses external events 
external events take care system enter power saving mode 
allow sure code written nonblocking manner 
example programmer loops scan certain input port waiting value 
time new value arrives generate interrupt wake microprocessor power saving mode 
operating system translate event pass appropriate process 
small description find properties processes perform computations return value enter sleep mode 
things easier control size code task mechanism 
task defines certain block code runs completion 
software module ask tasks performed 
task scheduler maintains execution tasks 
implemented simple fifo schema advanced allowing priority deadline driven executions real time applications 
interrupts seen tasks scheduled executed 
distributed nature system requires basic facilities resource management remote fig 

eyes architecture overview procedure call mechanism 
resource management understand operations resource request declaration allocation 
resource requests appear case node perform specific computation memory energy speed 
query submitted system neighbors ones computation respond resource declaration allocation occurs 
remote procedure call mechanism allows requester perform needed computation node resources 
system robust node failures 
routing algorithm implemented operating system fault tolerant 
applications built top rely deal failures 
necessary nodes failures due mobility network configuration change transmission leading errors 
eyes os application programming interface eyes architecture defined distinct key system layers abstraction sensors networking layer distributed services layer see sensors networking layer contains sensor nodes physical sensor wireless transmission modules network protocols 
ad hoc routing protocols allow messages forwarded multiple sensor nodes account mobility nodes dynamic change topology 
distributed services layer contains distributed services supporting mobile sensor applications 
distributed services coordinate order perform decentralized services 
identified major services 
lookup service supports mobility instantiation reconfiguration 
information service deals aspects collecting data 
service allows vast fig 

eyes api overview quantities data easily reliably accessed manipulated disseminated customized fashion applications 
top architecture applications built sensor network distributed services 
application programming interface api designed consideration previous described architecture see 
api levels fact drawn picture api level situated hardware level software level 
section focus api operating system api level 
connection distributed services layer sensors networking layer 
main blocks local information component mainly provides access sensor node data get local sensor readings pre processed data 
functions component allow access information concerning available resources memory energy speed network capabilities status capabilities define identify data types software modules 
group functions available boot time allows owner set vital information node calibrate sensors set local variables encryption types keys 
network component manages network functions 
provides basic functions transmitting multicasting receiving data packets account security issues 
secondary functions retrieve information network network size neighbors diameter cluster leader traffic statistics node 
operating system component provides groups functions built top basic primitives described 
offers information node localisation relative 
done querying neighbors static nodes position known advance measuring signal strength second group functions available boot time enables uploading software modules sensor nodes 
provides easy method programming network wireless interface connecting hundreds sensors computer downloading code easy pleasant task 
api level sits application distributed system layer 
application get results sensor network processed data ask network adapt perform specific function 
network structure algorithms transparent user 
vi 
describes step needed constructing sensor network definition minimal operating system 
characteristics defined led choosing appropriate hardware components 
premises developing top layers 
tried include principal necessary features keep minimum 
decided features studying existing systems implementing fewer features 
main challenges development distributed nature system mobile nature nodes 
berkley univ tinyos webpage 
today cs berkeley edu tos 
eyes 
eyes project webpage 
eyes eu org 
jason hill 
system architecture directions networked sensors 
proceedings asplos ix pages 
lynch 
distributed systems 
morgan kaufman publishers 

webpage 
www isi com 
rfm 
tr mhz hybrid transceiver 
www rfm com products data tr pdf 
tell 
distributed algorithms 
cambridge university press 
texas instruments 
msp datasheet 
ti com sc ds msp pdf 
