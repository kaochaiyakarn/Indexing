temporal description logic reasoning conceptual schemas queries alessandro enrico franconi frank wolter michael zakharyaschev dept computation umist manchester uk umist ac uk dept computer science univ manchester uk franconi cs man ac uk inst 
fur informatik univ leipzig wolter informatik uni leipzig de dept computer science kings college london uk mz dcs kcl ac uk 
introduces new logical formalism intended temporal conceptual modelling natural combination known description logic dlr point linear temporal logic 
expressive power resulting dlrus logic illustrated providing characterisation important temporal conceptual modelling constructs appeared literature 
define query language queries non recursive datalog programs atoms complex dlrus expressions investigate problem checking query containment constraints defined dlrus conceptual schemas dlrus knowledge bases problems schema satisfiability logical implication 
shown reasoning full dlrus undecidable identify decidable sense maximal fragment dlr allowing applications temporal operators formulas class expressions relation expressions 
obtain hierarchy complexity results reasoning dlr atomic formulas exptime complete satisfiability logical implication arbitrary dlr formulas expspace complete problem checking query containment non recursive datalog queries dlr constraints decidable exptime 
temporal information systems information systems store historical information past potential data 
formalisations proposed temporal information systems order temporal logic 
formalisations useful characterising semantical problems arising ontologies temporal databases conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
note interested deduction model checking 
obvious solution problem look behaved fragments order temporal logic see way successful promising approach know 
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries 
temporal description logic dlrus devise expressive decidable description logic dlr allows logical reconstruction extension representational tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer frame web ontology languages oil daml oil :10.1.1.107.5728
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies 
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.33.1088
dlr powerful language conceptual modelling 
problem view query processing dlr constraints studied 
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set views database problem non recursive datalog queries views np complete problem data complexity closed world assumption 
checking query containment non recursive datalog queries dlr constraints decidable exptime 
nice features dlr natural try extend temporal dimension understand expressive power resulting hybrid respect needs temporal conceptual modelling view query processing investigate computational properties 
reports results attempt 
construct dlrus organic combination dlr propositional linear temporal logic usually serves temporal component order approach allowing applications temporal operators syntactical terms dlr classes relations formulas 
investigate computational properties reasoning dlrus analysing schema class relation satisfiability logical implication query containment non recursive datalog queries dlrus constraints 
full dlrus turns undecidable 
main reason possibility postulate binary relation vary time small fragment dlrus say dlr augmented single time invariant binary relation encode undecidable tiling problem cf 

fragment dlr dlrus deprived ability talk temporal persistence ary relations expressive illustrated examples computational behaviour better 
obtain non trivial novel complexity results reasoning dlr atomic formulas exptime complete satisfiability logical implication arbitrary dlr formulas expspace complete problem checking query containment non recursive datalog queries dlr constraints decidable exptime expspace lower bound 
results obtained novel reasons 
previous approaches temporal description logics considered weaker languages having binary relations roles cardinality constructs inverse construct dlrus implicitly able express considering binary relations considering ability express queries :10.1.1.170.1222
time upper bound complexity reasoning temporal description logic past operators proved leading tight result automatically holds weaker basic temporal description logic alc 
time decidability complexity result problem temporal query containment complex constraints 
survey previous various approaches temporal description logics see 
illustrate expressive power dlrus provide brief semantic characterisation means dlrus theories important modelling constructs valid time representation temporal conceptual modelling 
applied various temporally extended tual data models example entity relationship uml class diagrams 
extend results constructs snapshot temporary entities relationships proposed 
organised follows 
section introduces syntax semantics dlrus query language provides worked example 
section decidability complexity results proved satisfiability logical implication dlrus dlr query containment problem 
section discusses expressivity dlrus temporal conceptual model 
temporal conceptual model adopt classical snapshot representation temporal databases see 
flow time ht set time points binary precedence relation assumed isomorphic hz mapping time points standard relational databases interpretation constants domains time 
language expressing temporal conceptual schemas combination propositional temporal logic non temporal description logic dlr 
resulting dlrus temporal description logic regarded expressive fragment order temporal logic cf 
section note dlr guarded fragment fol variable variables fragment fol counting quantifiers 
expressive capabilities dlrus temporal conceptual modelling illustrated section 
section extends dlrus query language 
temporal conceptual schemas basic syntactical types dlrus entities unary predicates known concepts classes ary relations arity 
starting set atomic entities denoted en set rn atomic relations denoted rn set role symbols denoted define inductively complex entity relation expressions shown upper part fig 
binary constructs applied relations arity natural numbers exceed arity non temporal fragment dlrus coincides dlr 
entity relation expressions boolean constructs available 
selection expression denotes ary relation argument named type clear context omit write 
projection expression generalisation cardinalities projection operator argument named relation plain classical projection possible pure argument position version model replacing role symbols corresponding position numbers language dlrus interpreted temporal models triples form ht 

non empty set objects domain 
interpretation function entity ary relation semantics entity relation expressions defined lower part fig 
fw vg operators past duals time time past respectively entities relations 
entities rn en rn hd hd hd dn 
hd hd hd dn 
hd dn hd dn hd dn dn hd dn hd dn en dg kg fig 

syntax semantics dlrus temporal operators moment past counterparts defined possible relations arity top ary relation interpreted different subsets ary cross product 
different time points reason ability dlr talk difference relations complement relation 
may hd hd hd operators moment dual moments defined entities relations respectively 
temporal conceptual database schema knowledge base finite set dlrus formulas 
atomic formulas formulas form relations arity 
dlrus formulas abbreviation entities relations 
global atomic formula abbreviation entities relations 
temporal conceptual database schemas specify constraints temporal databases 
formula interpretation time point truth relation holds moment defined inductively follows iff iff vr iff iff iff iff formula called satisfiable temporal model time point conceptual schema satisfiable conjunction formulas satisfiable write case called model 
say globally satisfiable symbols 
entity relation satisfiable respectively time point say globally implies write 
note entity satisfiable iff satisfiable 
ary relation satisfiable iff satisfiable conceptual schema globally satisfiable iff satisfiable 
iff satisfiable 
reasoning tasks connected notions introduced reduce satisfiability formulas 
temporal queries section extend dlrus temporal query language define problem evaluating temporal query dlrus constraints problem temporal query containment constraints see survey discussion temporal queries :10.1.1.43.3977
nonrecursive datalog query disjunction conjunctive queries spj queries dlrus schema expression form dlrus entity relation expressions possibly occurring sequences distinguished variables existential variables constants respectively number agreement arity variables head union distinguished variables existential variables coreferences query constants fixed values 
ary relation appearing arity number variables noted allow entities relations query occur conceptual schema 
approach similar atoms query constrained means schema formulas 
furthermore query expressions directly manipulate explicit temporal attributes time implicit query expression 
temporal dimension handled means temporal modal operators dlrus perspective query language strict relation order temporal logic querying temporal databases 
semantics queries snapshot representation temporal database defined follows 
temporal schema temporal model time point satisfies 
snapshot interpretation fe eng fr rng regarded usual order structure snapshot non temporal database time conforming sense conceptual schema order temporal model constant domain 
values query constants specified 
evaluation query arity constraints model satisfies moment answer query respectively sets eval 
ans fht 
eval obtain called sequenced semantics queries view database time indexed collection snapshots 
query language snapshot reducible sense non temporal queries queries temporal connective valid queries interpreted sequenced semantics 
language allows upward compatible queries 
intuitively non temporal query upward compatible answer set temporal database answer set associated non temporal database 
temporal slice temporal database current time eval 
queries arity say contained constraints write temporal model ans ans 
query satisfiability problem query schema determine eval reducible query containment satisfiable iff dlrus relation arity conceptual schema query examples example consider conceptual schema works emp employee act project manages man prj project employee integer salary salary integer employee employee manager manager man manages project act works prj manages employee emp works manager emp works qualified employee manager theory introduces works binary relation employees projects manages binary relation managers projects 
employees exactly pay slip number salary represented binary relations roles integer domain pay slip number uniquely identifies employee acts key 
stated managers employees partitioned area managers top managers 
top managers participate exactly relation manages top manager manages exactly project 
projects participate relation works exactly relation manages 
employees working project exactly managers managers qualified passed period employees 
meaning conceptual schema exception formulas illustrated left part diagram fig 

conceptual schema globally logically implies project employee manager top manager worked project managing possibly different project employee integer salary integer project string manager department works manages resp act emp prj org man prj fig 

example eer diagram 
act works emp manager emp works act project note add formula employee emp works saying employee project entities relations mentioned conceptual schema interpreted empty set model satisfiable relative 
expressivity query language understood examples taken find people worked project emp works find managers terminal project code prj manager manages prj manages find project people spent consecutive years project emp works works works find people projects emp works emp works emp works consider example query containment constraints constraints expressed schema 
consider queries manages project resp department works manages resp hard see contained constraints decidability complexity section briefly discuss main results computational behaviour dlrus fragments flow time hz unfortunately full dlrus restricted atomic formulas turns undecidable 
theorem 
global satisfiability problem dlrus conceptual schemas containing atomic formulas undecidable 
proof 
proof reduction known undecidable tiling problem finite set square tiles fixed orientation coloured edges decide tile grid suppose ft set tiles colours left right 
consider schema concepts binary relation 
right left 
readily checked globally satisfiable iff tiles follows particular problem satisfiability complex dlrus formulas undecidable problem global logical implication dlrus involving atomic formulas undecidable 
main technical reason undecidability possibility binary relations cf 

fragment dlr temporal operators applied entities formulas ary relations exhibits better computational behaviour 
theorem presents complexity results obtained schema query reasoning dlr theorem 
flow time hz problem logical implication dlr involving atomic formulas formula satisfiability problem problem logical implication dlr expspace complete query containment problem non recursive datalog queries dlr constraints decidable exptime expspace hard 
remainder section sketch proof theorem 
transparent confine considering fragment dlr dlr 
stands suppose consists finite set dlr formulas finite set concepts closed sub formulas subconcepts closed single negation concept occurring belongs 
concept type subset iff iff 
formula type subset iff iff 
pair ht set concept types formula type called candidate say candidate ht non temporal dlr formula satisfiable 
denotes conjunction concepts concepts form regarded atomic concepts formulas form regarded atomic formulas 
consider sequence hq zi htn run sequence hr zi 
tn 
iff 
called quasimodel conditions hold 
tn run 
iff 
dlr formula denote cl closure single negation set subformulas subconcepts 
theorem 
dlr formula satisfiable iff quasimodel cl proof 
suppose satisfied model domain 
define htn tn ft 
cl fc cl hard see hq zi quasimodel 
note sequence ht zi run 
show converse require lemma 
lemma 
cardinal formula satisfied non temporal dlr model domain 
fy 
cl proof 
dlr fragment order logic countable dlr model satisfying define disjoint union copies precisely fhx 
hx ii hx xn hx ii hx xn hard see required 
suppose quasimodel cardinal exceeding cardinality set runs 
note 
tn lemma dlr model domain 
satisfying fc cl hr 
hard see temporal dlr model 
defined satisfies moment 
satisfiability problem dlr formulas reduces checking satisfiability 
consider dlr schema queries ij ij denote cl closure single negation set formulas concepts occurring formula concept denote result replacing subformulas subconcepts form respectively 
dlr formula concept non temporal dlr queries 
theorem 
contained relative iff quasimodel cl contained relative proof 
loss generality may assume model ans eval 
construct quasimodel cl proof theorem 
show contained relative extend non temporal model new surrogate atoms form ac uc accordance behaviour time point uc uc 
proved similarly theorem 
difference select eval ans 
query containment problem dlr reduces satisfiability query containment problem non temporal dlr 
problem shown decidable exptime time 
check satisfiability 
need procedure deciding candidate set formulas concepts 
proposition proved reduction 
proposition 
dlr formula decidable expspace candidate cl 
ii dlr schema queries decidable exptime contained relative candidate cl 
set defined distinct problem properly arranged form quasimodel past temporal operators consider flow time hn form hq ni 
sequence ht sequence elements say realises steps 
formula realised steps 
say pair concept types suitable iff suppose finite sequences length respectively htn check quasimodel conditions hold pair suitable concepts form realised steps sequence pair adjacent elements suitable iff formulas form realised steps 
quasimodel extract satisfies distinct jq 
observation proposition construct expspace checking algorithm exptime query containment checking algorithm 
proof expspace hardness formula satisfiability problem weaker logic 
follows particular query containment problem expspace hard 
open problem exists expspace algorithm deciding problem 
show exptime completeness logical implication atomic formulas dlr means polynomial reduction dlr logic dlr reg 
purposes know dlr reg allows form transitive closure binary relation satisfiability problem dlr reg exptime 
simplify presentation reduce fragment dlr dlr temporal operators reader problems extend reduction language 
fix binary relation define translation dlr dlr reg follows atom dlr commutes remaining constructs lemma 
suppose set atomic dlr formulas occur 
iff logical consequence set dlr reg formulas 
proof 
suppose 
model define dlr model hhx hx ii iff hx xn hhx hx ii iff 
readily checked conversely suppose 
model fcl gg 
fc pair ht ft 

define map ht easy see quasimodel 
theorem model 
conceptual modelling section briefly show temporal description logic dlrus provide formal semantic characterisation important temporal conceptual modelling constructs valid time representation 
refer temporal extended entity relationship data model detailed literature exists :10.1.1.1.2497
consider constructs snapshot temporary entities relationships attributes temporal key attribute temporal cardinalities dynamic entities safety constraints monotonic form schema evolution 
extended entity relationship eer model standard entity relationship data model enriched isa links disjoint covering constraints full cardinality constraints may viewed eer model assigns construct temporal interpretation provides explicit temporal constructs 
jensen call approach implicit temporal dimension hidden interpretation structure entities relationships time dependent :10.1.1.1.2497
non temporal fragment dlrus dlr capture eer model implicit time 
non temporal eer model encoding introduced establishes precise correspondence legal database states eer diagram models derived dlr theory :10.1.1.107.5728:10.1.1.5.2743
encoding correct eer model implicit time shown dlr interpreted temporal semantics 
example knowledge base section formulas shows exact encoding left hand part temporally implicit eer diagram fig 
encoding support design temporal conceptual schema exploiting reasoning dlrus possible verify conceptual specification infer implicit facts stricter constraints manifest inconsistencies 
note ideas apply non temporal uml class diagrams encoded dlr daml oil ontologies 
introduce basic temporal constructs added top temporally implicit model leading full fledged temporal conceptual model 
temporal entities relations 
entity relation instances temporal setting existence time associated 
dlrus formulas enforce entities relations forever call temporary entities temporary relations extension changes time call snapshot entities snapshot relations 
temporary entities relations captured dlrus formulas saying past time point entity relation hold 
words instances temporary entities relations limited lifetime 
hand snapshot entities relations captured dlrus formulas saying entity relation true necessarily true past time point change time 
snapshot entities relations capture semantics legacy non temporal schemas included temporal model enforcing upward compatibility 
example fig 
employee department resp constrained snapshot dlrus formulas manager temporary formulas 
temporal attributes 
different points time entity may different values attribute 
attributes forced remain unchanged time snapshot attribute necessarily change temporary attribute dlrus formulas respectively ra ra ra considering interaction temporal behaviour attribute owner entity consistent dlrus snapshot attributes temporary entity temporary attributes snapshot entity 
case dlrus semantics says lifespan entity value snapshot attribute changes 
meaning instance belongs snapshot entity value temporary attribute change existence 
running example employee snapshot entity salary modelled temporary attribute names modelled snapshot attributes 
particular plays role full fledged temporal key see formula sect 

temporal cardinalities 
cardinality constraints limit participation entities relationships 
temporal setting distinguish snapshot participation constraints true point time lifespan participation constraints evaluated entire existence entity 
standard dlrus cardinality construct captures snapshot participation constraints lifespan participation constraints defined dlrus formula lifespan instance entity participate ith argument precisely tuples relation obviously snapshot relations set instances change time difference snapshot lifespan participation constraints respect snapshot relations 
example say example managers manage different projects entire existence managers constrained managing exactly project time 
dynamic entities 
temporal conceptual modelling literature notions dynamic transitions entities called object migrations considered dynamic evolution object ceases instance source entity dynamic extension object continues belong source 
source entity target cases captured formulas respectively interesting consequence dynamic evolution source necessarily temporary entity 
dlrus able capture safety liveness constraints 
safety constraint intuitively says bad happens captured formula 
hand liveness constraints saying happen expressed existential temporal formulas 
schema evolution 
consider simplified case conceptual schema evolution called monotonic approach 
allows changes schema resulting conceptual schema compatible previous global constraints 
atomic formulas possibly boolean combination atomic formulas introduce respectively new schema portion condition checked 
formula states soon property true data conceptual schema include additional constraint 
simple example 
amount salary payee meaning soon organisation include interest groups anymore salary top managers low amount class 
note dlr atomic formulas exptime complete fragment dlrus capture modelling constructs discussed section fact case global logical implication atomic formulas difference exception schema evolution constraints safety liveness conditions snapshot relations attributes temporal cardinalities 
full dlr expspace complete fragment dlrus able express 
require relations theorem lead undecidability 
introduces temporal description logic dlrus illustrates expressive power 
temporal query language defined problem query containment constraints defined dlrus conceptual schema investigated 
tight complexity results proved 
particular reasoning full logic dlrus shown undecidable decidability obtained expressive fragment dlr shown problem checking query containment non recursive datalog queries constraints arbitrary dlr formulas decidable exptime expspace lower bound 
result decidability result aware containment temporal conjunctive queries expressive constraints 
acknowledgments partially funded epsrc gr gr gr gr 

abiteboul van den bussche 
temporal versus order logic query temporal databases 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 

franconi 
reasoning enhanced temporal entity relationship models 
proc 
international workshop spatio temporal data models languages 
ieee computer society press august 

franconi 
temporal er modeling description logics 
proc 
international conference conceptual modeling er 
springer verlag november 

franconi 
survey temporal extensions description logics 
annals mathematics artificial intelligence 

franconi wolter zakharyaschev 
dlrus temporal description logic 
proc 
international workshop description logics dl 

franconi wolter zakharyaschev 
reasoning conceptual schemas queries temporal databases 
proc 
th italian database conference 

baader mcguinness nardi patel schneider editors 
description logic handbook theory implementation applications 
cambridge university press 

jensen snodgrass 
temporal statement modifiers 
acm transactions database systems 

borgida brachman 
conceptual modelling description logics 
baader 

borgida lenzerini rosati 
description logics databases 
baader 

cal calvanese de giacomo lenzerini 
formal framework reasoning uml class diagrams 
proc 
th int 
sym 
methodologies intelligent systems ismis 

calvanese de giacomo lenzerini 
decidability query containment constraints 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 

calvanese lenzerini nardi 
description logics conceptual data modeling 
chomicki saake 

calvanese lenzerini nardi 
unifying class representation formalisms 
artificial intelligence research 

chomicki 
temporal query languages survey 
proc 
st international conference temporal logic ictl pages 

chomicki saake editors 
logics databases information systems 
kluwer 

chomicki toman 
temporal logic information systems 
chomicki saake chapter 

elmasri navathe 
fundamentals database systems 
benjamin cummings nd edition 

fensel horrocks van harmelen decker erdmann klein 
oil nutshell 
proceedings european knowledge acquisition conference ekaw lecture notes artificial intelligence 
springer verlag 

franconi 
semantic approach schema evolution versioning objectoriented databases 
proc 
st international conf 
computational logic cl dood stream 
springer verlag july 

franconi ng 
icom tool intelligent conceptual modelling 
proc 
th international workshop knowledge representation meets databases krdb 

gabbay wolter zakharyaschev 
dimensional modal logics theory applications 
studies logic 
elsevier 
appear 

gabbay hodkinson reynolds 
temporal logic mathematical foundations computational aspects 
oxford university press 

jensen 
temporal entity relationship models survey 
ieee transactions knowledge data engineering 

jensen 
conceptual modeling time varying information 
technical report tr aalborg university denmark 

gupta hall 
modeling transition 
proc 
icde pages 

gupta hall 
abstraction mechanism modeling generation 
proc 
icde pages 

hodkinson wolter zakharyaschev 
decidable fragments order temporal logics 
annals pure applied logic 

horrocks sattler tessaris tobies 
decide query containment constraints description logic 
proceedings th international conference logic programming automated reasoning lpar 

horrocks sattler tobies 
practical reasoning expressive description logics 
proceedings th international conference logic programming automated reasoning lpar pages 

welty horrocks mcguinness 
digital libraries web information systems 
baader 

jarke calvanese lenzerini franconi vassiliadis vassiliou 
concept design data warehouses dwq demonstrators 
acm sigmod intl 
conference management data 

jensen snodgrass 
temporal data management 
ieee transactions knowledge data engineering 

levy 
rousset 
combining horn rules description logics carin 
artificial intelligence 

peters ozsu 
axiomatic model dynamic schema evolution objectbase systems 
acm transactions database systems 

pnueli 
application temporal logic specification verification reactive systems survey current trends 
current trends concurrency volume lncs pages 
springer verlag 

robinson 
undecidability non periodicity tilings plan 
invent 
math 

roddick 
survey schema versioning issues database systems 
information software technology 

schild 
combining terminological logics tense logic 
proceedings th portuguese conference artificial intelligence october 

sistla clarke 
complexity propositional linear temporal logics 
assoc 
comput 
mach 

spaccapietra parent 
modeling time conceptual perspective 
int 
conf 
information knowledge management cikm 

sturm wolter 
tableau calculus temporal description logic expanding domain case 
journal logic computation 
appear 


temporal extensions entity relationship model 
proc 
th international conference entity relationship approach er pages 

loucopoulos 
conceptual modelling formalism temporal database applications 
information systems 

van emde boas 
convenience tiling 
technical report ct illc univ amsterdam 

wolter zakharyaschev 
satisfiability problem description logics modal operators 
proc 
th international conference principles knowledge representation reasoning kr pages trento italy june 

wolter zakharyaschev 
modal description logics roles 
fundamenta informaticae 

wolter zakharyaschev 
multi dimensional description logics 
proc 
ijcai pages 

wolter zakharyaschev 
description logics 
gabbay de rijke editors frontiers combining systems pages 
studies press wiley 
