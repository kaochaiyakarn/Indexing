learning patterns activity real time tracking chris stauffer eric grimson artificial intelligence laboratory massachusetts institute technology cambridge ma goal develop visual monitoring system passively observes moving objects site learns patterns activity observations 
extended sites system require multiple cameras 
key elements system motion tracking camera coordination activity classification event detection 
focus motion tracking show observed motion learn patterns activity site 
motion segmentation adaptive background subtraction method models pixel mixture gaussians uses line approximation update model 
gaussian distributions evaluated determine result background process 
yields stable real time outdoor tracker reliably deals lighting changes repetitive motions clutter long term scene changes 
tracking system unaware identity object tracks identity remains entire tracking sequence 
system leverages information accumulating joint occurrences representations sequence 
joint occurrence statistics create hi binary tree classification representations 
method useful classifying sequences individual instances activities site 
index terms realtime visual tracking background estimation activity modeling cooccurrence clustering object recognition video surveillance monitoring vsam 
goal project vision system monitors activity site extended periods time detects patterns motion interaction demonstrated objects site 
system provide statistical descriptions typical activity patterns normal vehicular volume normal pedestrian traffic paths time day detect unusual events spotting activities different normal patterns unusual volumes traffic specific movement different normal observation detect unusual interactions ob jects person parking car front building exiting car entering building 
site may larger observed single camera system observes activities forest sensors distributed site 
ide ally sensor unit compact packaging camera board computational power local memory communication capability possibly locational instrumentation gps 
example systems exist tt powerful systems emerge technology sensor design dsp processing communications evolves 
forest sen sor units distributed site 
outdoor settings involve attaching poles trees buildings 
indoor settings involve attaching walls furniture indoor sites intelligent room 
article explore monitoring outdoor site connecting set video cameras interconnected suite pcs camera looking different window building focus algorithmic processing data specific sensor packages 
forest learn patterns activities site monitor classify activities learned patterns 
coordinated sensor forest needs self calibration determine positions cameras relative see www 
ai mit 
edu proj ects darpa vsam see www 
ai 
mir 
edu proj ects hc hc html construction rough site models determine ground plane mark occupied areas detect objects site extract information moving objects site classify detected objects label detected objects common shape appearance motion learn extended observation period weeks common activity patterns detect unusual events site mark activities don fit common patterns 
hypothesis tasks accomplished simply observing moving objects 
verify hypothesis need robust tracker reliably detect moving objects return accurate description observed object motion parameters intrinsic parameters size shape methods tracking data accomplish tasks listed 
sec tions describe tracking method line system monitoring activities extended time periods simply observing object motions 
calibration cameras extraction ground plane information covered separately 
building robust motion tracker robust video surveillance monitoring system depend careful placement cameras 
robust visual field lighting effects occur 
capable dealing movement cluttered areas objects overlapping visual field shadows lighting changes effects moving elements scene trees slow moving objects objects introduced removed scene 
monitor activities real outdoor settings need robust motion detection tracking account wide range effects 
traditional approaches backgrounding methods typically fail general situations 
goal create robust adaptive tracking system flexible handle variations lighting moving scene clutter multiple moving objects arbitrary changes observed scene 
tracker primarily geared scene level video surveillance applications 
previous current ings motion tracking researchers abandoned non adaptive methods backgrounding need manual initialization 
re initialization errors background accumulate time making method useful highly supervised short term tracking applications significant changes scene 
possible maximum interframe difference leaves ghosts ob ject leaves large regions object undetected object undergoes significant motion frame 
backgrounding methods involve continuously estimating statistical model variation pixel 
common method adaptive backgrounding averaging images time creating background approximation similar current static scene motion occurs 
effective situations objects move continuously background visible significant portion time robust scenes moving objects particularly move slowly 
handle bimodal backgrounds recovers slowly background uncovered single predetermined threshold entire scene 
attempt meet difficulties combined estimates minimum value maximum value maximum interframe difference pixel 
disparity verification determine moving regions scene 
showed invariance lighting variations involved costly line initialization 
primary application geometrically static backgrounds 
eigenvector approximation entire image model background outdoor scenes 
changes scene lighting cause problems backgrounding methods 
ridder mod pixel kalman filter system robust lighting changes scene 
method pixel wise automatic threshold recovers slowly han dle bimodal backgrounds 
koller successfully integrated method automatic traffic monitoring application 
pfinder uses multi class statistical model foreground objects background model single gaussian pixel 
initialization period room empty system reports results 
reports success tracker outdoor scenes 
friedman russell implemented pixel wise fm framework detection vehicles bears similarity 
method attempts explicitly classify pixel values separate predetermined distributions corresponding road color shadow color colors corresponding vehicles 
attempt mediate effect shadows appears somewhat successful clear behavior system exhibit pixels contain distributions 
example pixels may single background color multiple background colors resulting repetitive motions shadows re 
approach motion tracking explicitly modeling values pixels particular type distribution simply model values particular pixel mixture gaussians 
persistence variance gaussians mixture determine gaussians may correspond background colors 
pixel values fit background distributions considered foreground gaussian includes sufficient consistent evidence supporting convert new background mixture 
system adapts deal robustly lighting changes repetitive motions scene elements tracking cluttered regions slow moving objects introducing removing objects scene 
slowly moving objects take longer incorporated background color larger variance background 
repetitive variations learned model background distribution generally maintained temporarily replaced distribution leads faster recovery objects removed 
backgrounding method contains significant parameters learning constant proportion data accounted background 
alteration parameters system indoors human computer interface application october continuously monitoring outdoor scenes 
adaptive backgrounding motion tracking pixel resulted single surface fixed lighting single gaussian sufficient model pixel value accounting acquisition noise 
lighting changed time single adaptive gaussian pixel sufficient 
practice multiple surfaces appear view frustum particular pixel lighting conditions change 
multiple adaptive gaussians execution program 
current image image composed means probable gaussians background model foreground pixels current image tracking information superimposed 
note shadows foreground case surface covered shadows significant portion time gaussian representing pixel values may significant considered background 
required 
adaptive mixture gaussians approximate process 
time parameters updated gaussians evaluated simple heuristic hypothesize part background process 
pixel values match pixel background gaussians grouped connected components 
connected components tracked frames multiple hypothesis tracker 
process illustrated 
online mixture model consider values particular pixel time pixel process time series scalars vectors color pixel values 
time known particular pixel history xt image sequence 
pixel processes shown scatter plots illustrate need adaptive systems automatic thresholds 
highlight need multi modal representation 
case ideal distribution values contains images scatter plots red green values single pixel image time 
illustrates difficulties involved real environments 
shows scatter plots pixel taken minutes apart 
require thresholds 
shows bi model distribution pixel values resulting specularities surface water 
shows bi modality resulting monitor flicker 
tight gaussian cluster point 
fact cluster shift dramatically period minutes processes pixel result distinctive clusters illustrates need adaptive multi modal representation 
chose model history pixel 
mixture gaussian distributions 
probability observing current pixel value xt odi xt number distributions coi estimate weight portion data accounted gaussian tn gaussian mix ture time mean value covariance matrix tn gaussian mixture time gaussian probability density function isl determined available memory computational power 
currently 
computational reasons covariance matrix assumed form ek ai assumes red green blue pixel values independent variances 
certainly case assumption allows avoid costly matrix inversion expense accuracy 
distribution observed values pixel scene characterized mixture gaussians 
new pixel value general represented major components mixture model update model 
pixel process considered stationary process standard method maximizing likelihood observed data expectation maximization 
mixture model pixel image implementing exact em algorithm window data costly 
lighting changes removal static objects suggest decreased dependence observations past 
factors led line means approximation update mixture model 
new pixel value xt checked existing gaussian distributions match 
match defined pixel value standard deviations distribution 
threshold perturbed little effect performance 
effectively pixel distribution thresh old 
extremely useful different regions different lighting see ob jects appear shaded regions generally exhibit noise objects regions 
uniform threshold results objects disappearing enter shaded regions 
distributions match current pixel value probable distribution replaced distribution current value mean value initially high variance low prior weight 
prior weights distributions time adjusted follows oz oz mk learning rate mk depending kurtosis noise percentage data points generated gaussian match 
resulting random noise foreground image easily ignored neglecting connected components containing pixels 
rule easily interpreted interpolation points shown equivalent form mk model matched remaining models 
approximation weights re normalized 
defines time constant de speed distribution param eters change 
effectively causal low pass filtered average thresholded posterior probabil ity pixel values matched model observations time equivalent expectation value exponential window past values 
parameters unmatched distributions remain 
parameters distribution matches new observation dated follows xi xi learning factor adapting current distribu tions 
effectively type causal low pass filter mentioned data matches model included esti mation 
significant advantages method allowed part background doesn destroy existing model background 
original background color re mains mixture probable new color observed 
object stationary just long part background moves distribution describing previous background exists lower quickly re incorporated background 
background model estimation parameters mixture model pixel change determine gaussians mixture produced background processes 
heuristically interested gaussian distributions supporting evidence variance 
understand choice consider accumulation supporting evidence relatively low variance background distributions static persistent object visible 
contrast new object occludes background object general match existing distributions high dimensional spaces full covariance matrices advantageous constant reduce computation provide faster gaussian tracking 
result creation new dis tribution increase variance existing distribution 
variance moving object expected remain larger background pixel moving object stops 
model need method deciding portion mixture model best represents background processes 
gaussians ordered value value increases distribution gains evidence variance decreases 
af ter re estimating parameters mixture sufficient sort matched distribution wards probable background distribution matched models relative value changed 
ordering model effectively ordered open ended list background distributions remain top probable transient background distributions bottom eventually replaced new distributions 
distributions chosen background model measure minimum portion data accounted background 
takes best distributions certain portion data accounted 
small value chosen background model usually unimodal 
case probable distribution save processing 
higher multi modal distribution caused repetitive background motion leaves tree flag wind construction result color included background model 
results transparency effect allows background accept separate colors 
connected components method described allows identify foreground pixels new frame updating description pixel process 
labeled foreground pixels segmented regions pass connected components algorithm 
procedure effective determining moving object moving regions characterized position size moments shape information 
characteristics useful processing classification aid tracking process 
multiple hypothesis tracking establishing correspondence connected components frames accomplished linearly predictive multiple hypotheses tracking algorithm incorporates position size 
implemented online method seeding maintaining sets kalman filters 
frame available pool kalman models new available pool connected components explain 
models probabilistically matched connected regions explain 
second connected regions sufficiently explained checked find new kalman models 
models fitness determined inverse variance prediction error falls threshold removed 
matching models connected components involves checking existing model available pool connected components larger pixel 
matches relatively small error update corresponding model 
updated models sufficient fitness frame 
match null match hypothesized propagates model expected decreases fitness constant factor 
object reappears predictable region uncertainty shortly lost model regain object 
classification system requires tracking sequences consist representations single object system generally breaks tracks objects interact guessing true correspondence 
unmatched models current frame previous frames hypothesize new models 
pairs unmatched connected components previous frames model hypothesized 
current frame contains match sufficient fitness updated model added existing models 
avoid possible combinatorial explosions noisy situations may desirable limit maximum number existing models removing probable models excessive models exist 
noisy situations ccd cameras low light conditions useful remove short tracks may result random correspon dences 
details method www 
ai 
mit 
edu proj ects vsam 
performance tracker sgi processor method process frames second frame size pixels 
variation frame rate due variation amount foreground 
tracking system effectively storing track ing information scenes 
show accumulated tracks scenes period day 
quick changes cloud cover relative learning rate necessitate new set background distributions stabilize seconds tracking continue 
tracking system difficulty scenes containing high occurrences objects visually overlap 
multiple hypothesis tracker extremely sophisticated reliably disambiguating objects cross 
adding complex dynamics appearance templates 
help regard 
problem compounded long shadows applications desirable track object shadow avoid cropping missing dark objects attempt remove shadows 
experience bright days shadows significant shadowed regions sides dark objects black dark green dark red 
tracker robust relatively fast lighting changes flood lights turning partly cloudy days 
successfully tracked outdoor scenes rain snow hail overcast sunny days 
track birds feeder mice night sony fish tank people lab environment objects outdoor scenes 
environments reduces impact repetitive motions branches rippling water specularities slow moving objects acquisition noise 
system proven robust day night cycles long term scene changes 
results project updates available www 
ai 
mit 
edu proj ect vsam 
improving tracker find results tracker encouraging opportunities improvement 
computers improve parallel architectures investigated algorithm run faster larger images larger number gaussians mixture model 
factors crease performance 
full covariance matrix improve performance 
adding prediction gaussian kalman filter approach may lead robust tracking lighting changes 
obvious improvements investigating modeling inter dependencies pixel processes 
relative values neighboring pixels correlations neighboring pixel distribu shows consecutive hours tracking am am spin pro 
shows image time template stored show accumulated tracks objects time 
color encodes object direction intensity encodes object size 
consistency colors particular regions reflects consistency speed direction size parameters acquired 
shows consecutive intervals tracking different scene previous 
particular day clear overcast 
templates show tracking relatively unaffected 
tions simple texture measures may useful regard 
allow system model changes occluded pixels observations neighbors 
method grayscale rgb hsv local linear filter responses 
method capable modeling streamed input source assumptions heuristics generally valid 
investigating method frame rate stereo ir cameras cluding depth fourth channel 
depth example multi modal distributions useful disparity estimates noisy due false correspondences noisy values relatively predictable result false correspondences background 
interpreting motion tracks simple adaptive background tracker tracked objects 
shown frame object tracked location speed direction dx dy size recorded 
image object binary motion silhouette cropped original image binary difference image respectively 
stability completeness representation possible simple classification aspect ratio size 
interest classification actual move ment shape object 
sets experiments discussed perform classification dx dy size representation binary mo tion silhouette representation literally millions training examples 
sequences create sequence classifier common sequences create instance classifier 
method involves developing codebook representations line vector quantization vq entire set representations acquired tracker 
second accumulate joint cooccurrence statistics codebook treating set representations sequence multi set 
perform hierarchical classification accumulated occurrence data 
previous classification countless examples tracking system perform predetermined classification tasks tracked data human rs 
vehicle walking rs 
running walking marching line walking kicking interested predetermined classifica tion tasks 
method similar shows single frame typical scene information recorded moving objects 
fields classification examples labeled 
johnson hogg 
process line vector quantization input space 
quantize predetermined num ber probability distribution functions pdfs discrete states 
significant number pdfs result tight clusters activity unclear relate inputs grouped separate pdfs select proper number pdfs 
hierarchical classification involves step flavor normalized cuts deriva tives see 
discrete nodes defined codebook 
edges represent pair wise distances dissimilarities costs 
addition goal determine sets nodes dissimilar 
extent similarity 
costs probabilities distances 
similarities directly related coordinates properties nodes measured empirically data 
cut produce discrete sets minimize cut similarities 
produces distributions explain observed joint statistics relatively dissimilar match occurrence data 
sections describe method show sets results discuss ways improving method draw 
classification method assume tracker produce sequence representations object 
example person tracked scene frames produce images binary silhouettes positions velocities tracker mistake establishing correspondence representation sequence correspond underlying object 
developing tracker type application important avoid tracking errors involving false correspondences 
sections outline basic process classification 
codebook prototype repre generated line vector quantization vq 
second automatically tracked se quences define occurrence matrix prototypes codebook 
occurrence data probabilistically break apart prototypes codebook binary tree representation 
result hierarchical classifier classify individual representation sequences representations 
codebook generation codebook set prototype representations approximate density input representations 
methods developing code books prototypes see discussion 
quantity data number prototypes line method means option 
simplest method line vector quantization initialize codebook randomly prototypes centered existing data points 
take single data points find closest prototype codebook adapt prototype data point learning factor process repeated millions data points value slowly decreased prototypes stable represent equal amount data 
input spaces dealt require complex annealing strategies 
occasionally encountered initialization problem 
prototypes seeded outliers may stranded representing data point 
circumvented problem method johnson hogg enforces prototype repre sents amount data 
time stranded data points account larger regions input space represent new data points 
prototypes adapted new data points represent data points 
codebook generated lookup table incoming values new values represented labels nearby prototypes 
desired size codebook goal quantizing determine set prototypes best represents dataset 
results produced code books prototypes 
complex spaces color image space necessitate pro complex prototypes 
depending complexity input space may difficult create effective codebook representations 
representations codebook equally result underlying classes system fail 
example representations codebook result person vehicle possibility representations differentiate people vehicles additional informa tion 
may encouraged ability generate large codebooks 
large codebooks usually troublesome size codebook increases amount data needed effective codebook generation increases order 
amount data needed occurrence statistics accumulation increases order 
system automatically collects processes data hundreds gigabytes tracking data processing steps 
method converges amount data increases suffering fitting 
area high data point density may accumulate large portion prototypes leaving prototypes rest input space 
cases may desirable large number prototypes high density areas regions may ambiguous regions input space traffic intersection 
cases areas high density may arise uninteresting repetitive input data scene clutter benefit wasting large portion prototypes region 
currently filter sequences seconds duration 
fil ters repetitive motions scene learning process 
accumulating occurrence statis tics codebook generated input space longer considered 
input data point labeled representative prototype nearest 
considering sequence images binary silhouettes positions histograms convert codebook labels consider sequences symbols corresponding prototypes 
method disregards order sequence considers multi sets symbols 
multi set set contain multiple instances element 
pair sequence excluding pairing prototype label evi dence prototypes appearances resulted underlying class 
goal system produce classification system observa tions image silhouette particular object classify set classes type object tends put class 
contrast systems specifically designed recognize sequences hidden markov models 
system learned classify object motion silhouette color histogram size capable doing single example 
course system perform better multiple examples rely seeing complete sequence 
model production sequences simple 
underlying classes occurs prior probability rc 
class observed probability distribution pc producing prototype symbols 
long object observed produce symbols distribution 
model reflects assumption independence samples sequence dis cussed earlier 
multi sets prototypes estimate occurrence matrix estimated probability sequence training se quences contain input represented th prototype separate input represented jth prototype 
matrix accumulated occurrences initialized zeros prior joint distribu tion see section 
multi set possible pair excluding pairing symbols selves added total weighted inversely number pairs sequence 
sequence pair si sj 
lo number valid pairs sequence 
current joint occurrence estimate normalized number sequences currently estimate total 
single underlying class infinite sequences train ci converge pl pl 
case said relative relationships prototypes 
underlying classes lim ci pc pc synthetically produced data system class prototype sole producer possible solve parameters model 
restrictive case pursue 
section outlines system extracts hierarchical approximation classes 
hierarchical classification classification method takes entire set prototypes occurrence matrix attempts determine distributions probability mass functions profs prototypes code book best explain occurrence matrix 
distributions determined distribution treated set prototypes occurrence matrix estimated 
process repeated stopping criterion reached 
root tree represents universal pmf including prototype proportion occurred 
branch tree pmf broken separate profs relatively dissimilar 
process necessarily guarantee profs sum parent prof branch initialize random profs priors profs priors create estimate occurrence matrix rc pc pc ci iteratively re estimate parameters minimize sum squared error ci update rules minimize error function respect model parameters rc rc ci pc pc pc pc op ci pc class learning factor priors higher learning factor ap 
useful put soft con straints priors insure distributions represent significant portions occurrence data 
arguably kullback leibler kl distance ci appropriate comparing distributions 
currently investigating error functions update rules result 
branch parent distribution estimate occurrences result class 
occurrence left branch subproblem derived original occurrence left pmf 
follows ci po po determine children profs 

example pmf uniform half prototypes occurrence matrix children include cooccurrences prototypes 
done branch may result profs initial branch 
parameters profs determined 
exclusive set classifiers 
exclusive set prototypes determined leaf nodes pruned version binary tree 
prune node children distributions similarity exceeds threshold shows complete tree pruning evaluation purposes 
leaf nodes associated probability distribution prototypes classify sequences 
classifying sequence observation sequence treated independent observation 
probability particular class product probabilities class producing observations sequence 
computed dot product log profs prior accumulated prototype histogram sequence 
note prototypes split distinct classes observations mapped extremely ambiguous prototypes count class equal proportion definitive examples 
simple example shows synthetic example 
predefined classes priors root occurrence matrix formed 
branch pmf broken profs best explain observed joint occurrences 
classification hierarchy behaves expected breaking apart class presents classes breaking remaining classes 
results examples involve creating classification hierarchy number prototypes learning parameters sequences produced tracking system 



shows synthetic classification example underlying classes shown upper left 
branch separates class pmf doesn overlap pl separable class separated 
class profs separated branch poo 
difference different representations 
example classifies activity tuple image position speed direction size 
sec ond example classifies shape tuple binary silhouettes 
classifying activities example classifies objects representation position speed direction size dx dy 
representative pro determined 
prototype represents objects particular size seen particular area scene moving particular direction 
occurrences accumulated hours sequences scene 
universal pmf true pmf entire set sequences probabilistically broken profs 
process repeated produce binary tree height detailed 
shows history particular day 
note scene contains road adjacent parking spots path grass near loading bay building 
binary tree shows accumulated motion templates node tree 
break separates traffic moving direction building traffic moving direction objects scene generally change direction 
second break branches separates traffic road traffic path 
prototype states common activities activities significantly different accounted automatic hierarchical classification shows image scene upper left classification hierarchy center cooccurrence matrix normalized profs upper right element tree 
scene contains road adjacent parking spots path grass near loading bay building binary tree shows accumulated motion templates node tree 
occurrence matrix normalized profs show prototypes occurred sequences probability distributions node tree ordered breadth final level tree specific classes including pedestrians path class direction pedestrians lawn lawn activity near loading dock 
cars trucks classes viewed java compatible browser www ai mit edu projects vsam classification note columns rows occurrence matrix ordered structure apparent classification counts level level rel time ool oll ooo llc am am lam am am sam am am am sam am am am am am am am am am am am ol am pm pm pm lpm pm pro spin pm pm pm pm pm pm tpm pm pm pm lpm pm pm east bound bound see 
www ai mt edu projects se clusters java applet shows activities detected particular day 
columns correspond initial branch 
columns correspond level binary classification tree 
columns leaf nodes classification tree 
columns primary type activity node listed 
morning rush hour highlighted green light gray shows traffic moving direction 
lunch time pedestrian traffic highlighted red gray 
evening rush hour highlighted blue dark gray shows movement opposite direction morning rush hour 
shows occurrence matrix resulting 
prototypes person class vehicle class prototypes significantly ambiguous 
upper left corresponds silhouettes people lower right corresponds silhouettes vehicles 
vehicles show statistical independence vehicles particular scene scene passed particular orientations 
scene contained vehicles driving circles corresponding prototypes exhibit independence 
note cooccurrence matrix ordered structure apparent 
significant amount data 
bifurcations result classes pedestrians path pedestrians lawn lawn activity near loading dock 
cars trucks classes viewed java compatible browser www ai mit edu pr jects vsam shows distribution events hour period highlighting changes density pedestrian vehicular traffic function time 
classifying motion silhouettes example results simple classification illustrates intended type classification 
vq resulted silhouettes vehicles people 
break broke silhouettes relatively discrete classes people vehicles 
blurry prototypes remained ambiguous matched vehicles people 
prototypes shared classes 
shows occurrence matrix profs examples prototypes classes 
shows classification day silhouette sequences 
setting similarity parameter pruning resulting classifier separated vehicles decisively different silhouettes 
means vehicles appeared different angles sequences sequences contained vehicles people 
break individual pedestrians 
break removed groups pedestrians clutter lighting effects 
daily activity histograms show interesting facts 
highest occurrences people cars morning evening expected 
groups people tended occur shortly noon 
clutter primarily trees garbage lighting effects side buildings 
histogram images show morning lighting effects occurred near 
detecting unusual events particular scene contain events occurred occur rarely represented clustered activities 
cases events interest 
build representations common patterns site able information detect uncommon patterns 
done preliminary determining unusual activities occur 
system measures aspects usual track measures typicality instantaneous states codebook density approximator 
second looks cooccurrences exhibited sequence relation accumulated occurrence statistics 
mea sures provide evidence support unusual event currently developing determining methods evaluate 
classification shortcomings fu ture admittedly scene classifiers derived suited problem 
scenes containing types objects resulted classification hierarchies structure 
example cars drove straight scene separate roads may sequences cars moving road 
evidence reason expect resulting classes near hierarchy 
extended scene multiple cameras shown representations similar told short supervision process training 
prototypes occurrence matrix loo classifier histogram activity sins le day left silhouette prototypes occurrence matrix resulted day worth tracking sequences 
middle classification hierarchy resulted images occurrences class description classes performance relative descriptions 
right hour histograms occurrences class 
see web page higher quality images 
obvious weakness algorithm need discretize complex input spaces 
currently investigating automatically deriving local feature sets vq sub images learning features similarities local time space occurrence measurements 
doing hierarchically hold promise learning useful feature sets bet ter prototypes 
useful texture segmentation 
example create texture prototypes define similarity prototypes occur near prototypes spatially temporally 
learning similarities way attempting assert prior textures similar takes advantage domain specific regularities define regularities domains certain similar textures 
course assumed similarities useful particularly cases data 
cases seeded occurrence matrix 
prototypes sufficient representation assume similarities similarities prototypes observed determined data 
investigating prototypes occurrences detect outliers 
data points sequence represented prototype may unusual event 
sequence occurrences joint occurrences unusual 
anomaly detection classification general greatly enhanced learning context cycles 
learn traffic light cycle detect cars running light unusual pattern activity 
learn daily cycles models contain specific prototypes day night rs 
full vehicles deliveries night may unusual 
shown novel probabilistic method background subtraction 
involves modeling pixel separate mixture model 
implemented real time approximate method stable robust 
method requires parameters parameters robust different cameras different scenes 
method deals slow lighting changes slowly adapting values gaussians 
deals multi modal distributions caused shadows specularities branches computer monitors troublesome features real world mentioned computer vision 
recovers quickly background reappears automatic pixel wise threshold 
factors tracker essential part activity object classification research 
system successfully track people indoor environments people cars outdoor environments fish tank ants floor remote control vehicles lab setting 
situations involved different cameras different lighting different objects tracked 
system achieves goals real time performance extended pe time human intervention 
motivated implemented new approach automatic object classification 
approach shown promise contrasting classification problems 
case produced nonparametric activity classifier 
case produced binary image classifier 
currently investigating possible uses method 
acknowledgments research supported part darpa contract tered onr part jointly administered darpa onr contract 
david beymer philip mclauchlan coifman jitendra malik 
real time computer vision system measuring traffic parameters proc 
computer vision pattern recognition san juan puerto rico june 
collins lipton kanade 
system video surveillance monitoring proc 
american nuclear society ans eighth international topical meeting robotic remote systems pittsburgh pa april 
davis larry visual human activ ity conference computer vision ccv mumbai india january 
dempster laird rubin 
maximum likelihood incomplete data em algorithm journal royal statistical society series 
nir friedman stuart russell 
image segmentation video sequences probabilistic approach proc 
thirteenth conference uncertainty artificial intelli gence uai aug 
gersho gray 
vector quantization signal compression kluwer academic press isbn 
grimson chris stauffer romano lily lee 
adaptive tracking classify monitor activities site computer vision pattern recognition cvpr santa barbara ca 
june 
horn 
robot vision pp 

mit press 
haritaoglu ismail david harwood larry davis 




real time system detecting tracking people third international conference automatic face gesture recognition nara japan 
april 
horswill yamamoto active stereo vision system proc ieee workshop visual behaviors seattle august 
horswill visual routines visual search real time implementation automata theoretic analysis proc 
ijcai 
yuri ivanov aaron bobick john liu 
fast lighting independent background subtraction mit media laboratory technical report 
johnson hogg learning distribution object trajectories event recognition 
editor british machine vision conference pages 
bmva september 
johnson hogg learning distribution object trajectories event recognition 
image vision computing august 
kanade 
stereo machine video rate dense depth mapping new applications 
proc 
image understanding workshop pp 
palm springs california february 
koller weber huang malik rao russel 
robust automatic traffic scene analysis real time 
proc 
international conference pattern recognition israel november 
konolige small vision systems hardware imple mentation eighth international symposium robotics research japan october 
lee romano stein monitoring activities multiple video streams establishing common coordinate frame separate issue 
lipton alan patil 
moving target classification tracking real time video ieee workshop applications computer vision princeton october pp 

oliver barbara rosario alex pentland 
bayesian computer vision system modeling human interactions proceedings gran spain january 
christof ridder olaf harald kirchner 
adaptive background estimation foreground detection kalman filtering proceedings international conference advances mechatronics unesco chair mechatronics 
shi jianbo jitendra malik 
normalized cuts image segmentation proc 
ieee conf computer vision pattern recognition san juan puerto rico june 
stauffer grimson adaptive background mixture models real time tracking computer vision pattern recognition cvpr springs june 
wren christopher ali azarbayejani trevor darrell alex pentland 
pfinder real time tracking human body ieee transactions pattern analysis machine intelligence july vol pp 


