overview software engineering process tools mozilla project christian reis async open source santa cruz carlos sp brazil de fortes instituto de ciencias de ao universidade de paulo box carlos sp brazil february mozilla project open source software project dedicated development mozilla web browser application framework 
possessing largest complex communities developers open source projects presents interesting requirements software process tools support 
past years process tools refined point stable effective serving project needs 
describes software engineering aspect large open source project 
covers software engineering tools mozilla project mozilla process tools intimately related 
tools include bugzilla web application designed bug tracking bug triage code review correction automated build regression testing system tool performs queries cvs code repository hypertext source code browser 
keywords open source software free software software engineering software process software engineering tools bug tracking nightly builds code versioning 
mozilla project open source software oss project dedicated developing mozilla web browser suite 
creation project attracted thousands participants arguably largest communities working oss project today 
mozilla important web development free software communities mainly fills perceived gap open source standards compliant web browser 
main product browser mozilla project number related 
browser developed set open technologies compose mozilla application framework platform independent suite languages libraries 
technologies include screen capture mozilla web browser xul xml user interface language cross platform user interface description language extensible binding language language modify behavior elements documents javascript ecma standardized language scripting web applications gecko mozilla cross platform embeddable layout engine framework basis number commercial products including ibm operating environment 
apart projects directly related mozilla browser application platform mozilla project developed number software tools support community developers works main browser framework projects 
primarily discuss software tools development process 
mozilla organization community mozilla organization mozilla org group exists support development browser suite 
mozilla org responsible managing planning providing server resources support development mozilla 
large extent responsible developing enforcing mozilla process acts final arbitrator disputes changes codebase 
organization composed selected people community act managers technical lead various mozilla projects 
member organization responsible mozilla related task including web site maintenance documentation architecture design release engineering 
currently people listed mozilla org staff number different organizations including netscape redhat 
mozilla org charged leadership mozilla project important realize actual performed large number people necessarily part organization identified simply mozilla community 
community consists volunteers screen capture personal portal product derived mozilla source code 
paid contributors mozilla org staff 
mozilla projects maintained supported different groups 
participation freely accepted welcomed hard identify exact membership certain group fact certain people frequently project 
common contributors may granted certain privileges time write access source control repositories help identify core members 
mozilla org may define special role developers community members particularly skilled committed project 
roles include super reviewer module owner bugzilla component owner driver 
roles described section 
unique aspects mozilla project number active oss projects today quite large mozilla project interesting target oss research number reasons 
mozilla codebase largest fastest moving oss projects 
size comparable linux kernel larger graphical environment david wheeler study showed browser just lines code project evolved 
comparison age linux kernel years old window system developed years short time taken develop massive codebase quite startling 
original netscape navigator codebase donated netscape mozilla org significant amount pre existing code time open source project officially started 
uncommon oss projects general presents significant changes natural design requirements processes conventional scratch project 
important note large parts original code rewritten discussed section 
number developers high directly paid netscape sun ibm companies fund development browser suite framework 
number volunteer contributors remarkable bugzilla bug tracking software mozilla registers active users unique bug reporters trusted people perform tasks confirming editing bugs 
table counts active contributors changes code repository past months jul aug sep oct nov dec jan feb incomplete developers submitting code new developers submitting code total code submissions table statistics source code submission july february 
development infrastructure mozilla project developed deal massive organizational requirements 
software engineering tools support distributed development requirement developed day project existence 
tools considered rival significance browser suite mozilla product 
mozilla project aims create polished easy application users widely varying computer skills majority oss projects concentrate applications developer domain expert 
presents requirements oss projects face developers achieve consensus controversial issues may familiar 
easy installation usability instance examples potentially unfamiliar territory developers 
aspects contribute colorful interesting project scenario constantly evolving public view 
project generates astonishing amount software engineering data mozilla software tools designed recording allowing convenient access data straightforward proposition study project evolution 
brief background mozilla process started mozilla march original codebase donated netscape communications 
netscape intended mozilla basis commercial browser requirements determined original code documentation developed netscape 
main requirement established steering group compliance html standards noteworthy intention see organization devote strictly implementing standards 
essentially codebase original design matched netscape navigator design year development technical lead mozilla org came somewhat controversial original codebase prove impossible evolve suit requirements standards compliant web browser 
code modules completely rewritten layout engine needed thoroughly changed support new technologies standardized 
rewritten code resulted generation note people directly submitted code repository counted 
contributors write access repository need ask developers included 
certain components removed licensing legal issues 
browser cost time high years version scheduled release april 
rewriting activity changed project effective maturity 
shifted project devoted browser maintenance gradual enhancement refactoring initial implementation new features specified designed scratch 
change associated desire high modularity produced new technologies form actual browser platform gecko xul instance designed phase 
analysis negative impact stability code api new technology broken tested 
release expected consolidate technologies stable platform development 
implicit agreement process essential mozilla successfully developed great deal thought developing documenting mozilla software process part evolved netscape practices 
evolution guided need suit open community attracted browser 
coordinating source code changes large number concurrent distributed developers generated number demands process support tools effective version control defined protocol integrating source code changes high degree accountability people integrate code high modularity custom development tools communication channels section describe demands integrated mozilla software process 
aspects mozilla software process mozilla project broad software process encompasses different aspects development 
cover section aspects consider relevant complete 
depth description mozilla web site 
modularity module ownership mozilla browser developed mozilla application framework characteristics design framework highly due cross platform component library called 
design nature modular parts javascript engine runtime libraries framework reused independently browser develop products 
high modularity permits developers concentrate areas code needing understand entire architecture allows gradual learning curve important project newcomers 
modularity possible development spite natural concurrency distributed developer community 
browser front written mainly javascript xul interpreted runtime 
framework constitutes back code written 
note code components bugzilla components 
code modules mozilla associated components bugzilla bug tracking tool 
bugzilla component owner default assignee new issues reported quality assurance contact progress issues intervene needed help developer quality assurance discussed section 
issue interests developer allowed assign task propose fixes 
usually coordinate owner avoid duplicated mismatched 
way responsibility delegated component owners interested developers 
times engineer unable change help wanted marker placed bug report clear volunteers needed 
component owner responsible module considered authority regard selecting implementing changes 
considers contributed change relevant implemented allow provide advice improved ultimately ignore veto change 
bugzilla comments usually means communication 
mechanism occasionally causes dispute virtually freedom contest decision 
areas dispute surprisingly issues relate code architecture back browser user interface functionality 
need process specifically covers interface changes shown urgently needed comment developer bugzilla bug clean context menus navigator messenger content area indicates additional comment ian mpt agree djk 
moving toolbars needs 
menu item gnome tooltip just inform power users moving toolbars possible 
written spec 
please publish compared mpt 
mpt specs ui pinch mail 
mozilla qa people team mozilla engineers team mozilla team 
repeatedly con icting views ui specs parties cooperating 
sta mozilla org process place resolving con icts bound happen soon tries implement specs 
waiting years sort ui process determined 
unfortunate continued lack process resulted di erent parties doing ui contributing working ui 
bug driven development code change mozilla codebase part fix uniquely numbered bug commonly pejorative connotation mozilla project term bug refer filed request modification software actual defect enhancement change exaggeration minor compilation fixes changes part default browser build checked associated bug number 
functionality 
change requests associated implementations unique number identifies 
february bugs reported bugzilla tool bug reports browser product 
bug number changeable properties attached including 
owner person currently charge bug 

summary line description bug 

attachments various files attached bug 
attachments test cases screen captures modifications codebase commonly called patches 

comments number comments describing discussing problem possible fixes code changes proposed 

status describes current state bug unconfirmed new assigned resolved verified closed 

severity priority fields describe impact bug order bug fixed 
bug created state unconfirmed new depending experience reporter credited 
task confirming bugs reproducing rests volunteers perform bug triage quality assurance activities mozilla 
component owners notified bugs filed responsibility schedule priority severity 
hardly strict process discussed previous section bugs reassigned component owners volunteer help offered owner know code better available 
people working mozilla hire usually managers schedule fixes developers needs 
bug numbers manner code developers exchanged freely continuously email chat web sites 
excerpt online chat bradley blas mozilla developers follows kin xed bugs 
knew excite people kin really annoying bugzilla annoyed quite time 
problem trying get reliable test case 
kin didn le thought just came usual plain text annoying stu high profile bugs voted community bugs focal point user attention expectation 
bug number remains valuable token system created project tool bugzilla discussed section 
requirements controversial aspect oss projects requirements process mozilla somewhat peculiar 
high level requirements laid mozilla org management complete web standards compliance decisions functionality inclusion change discussed piecemeal community module owners bug newsgroup comments 
areas user interface module apis reasonably detailed documented areas evolve case case basis 
mike mozilla org staff member project creation states follows original high level requirements mozilla combination netscape navigator features perceived needs standards compliance 
largely 
hasn great deal detailed speci cation mozilla think areas re going need nail brave peter signed help get process 
going hard lot people including 
going sad see desired features xes cut hard line ll get part great experiment 
requirements change starts proposed code changes 
discussion relevance change started routes message thread started public newsgroup regarding change functionality 
people usually comment relevance discuss advantages disadvantages approach 
essence debate quite technical usually bug filed change idea abandoned 
person specific idea change bug mozilla show current url bookmarks bug image blocker block bug directly filed newsgroup discussion 
discussion occurs bug vote system community members module owner ultimately mozilla org staff help determine relevant change 
change decided guarantee implemented soon 
community mozilla org management see developers follow task propose source code changes implement functionality requested 
change implemented rare chance accepted codebase bugzilla lists small number bugs marked patches 
example bug tag supported standards mode bug reporter provide patch fix issue removing blink tag support operating browser standards compliance mode decided blink support harmful allowed 
hard say requirements process generally inadequate community active participation adoption proposed features free implement desired change submit approval 
fact module owners mozilla org staff final authorities determining relevance change barrier adoption controversial features hardly unprecedented consequence level control mozilla process requires 
boris community member developer active participation project describes general requirements barrier get feature re willing write code reckoned module owners fair judging proposed change 
surprisingly heated discussion regularly occurs regarding parts mozilla detailed specifications user interface 
design actual process designing mozilla software architecture difficult important issues design inherits part original netscape experience completely invented public view second design discussions inherently difficult capture usually sparse record 
mike dan engineer netscape original mozilla design direct evolution netscape navigator architecture 
part intact period javascript engine abstraction layer library threading example survived change new layout engine largely unchanged 
new layout engine developed group netscape engineers inspired done original java netscape navigator plan 
intent design framework allow mozilla written similar technologies web development mark style sheets scripting fact browser today modified enhanced compiler owes largely vision design specifications original architecture new layout architecture documented number efforts extend design code documentation automated processing analysis 
reflected largely ad hoc requirements process design issues tackled come bugs filed changing design api certain component class ordinary discussion ensues bug comments 
constant potential changes design requires module owner super reviewers knowledge current design 
ultimately responsible judging allowing design evolve certain direction 
clear experience senior developers involved notion architecture evolution 
issue constant change produces burdensome task keeping documentation date documents mozilla org aged considerably years 
puts way exceptions mozilla design documentation painfully date 
think worse things world having people read source learn sure cowboy coder having proper respect formal documentation mozilla code isn self documenting 
code gone super review process tends better parts code developed super review place 
continuous design adjustment constant need perform refactoring legacy code 
refactoring allows developers simplify apis remove unused code generally improve modularity readability code 
hardly uncommon oss projects known refactor continuously avoid architecture breakdown 
example bug refactor involves creating public interface manipulate browser history promoting better reuse part code case specifically people embedding gecko layout engine applications 
design process shortcomings availability source code review techniques discussed section go long way allowing browser development remain healthy 
possible develop patches alter mozilla having compiler tool set changes needed affect interpreted front browser history conceptually list visited urls back forward buttons navigate distributed development formal reviews premises mozilla project face face communication required development strictly rule oss projects 
code designed implemented tested integrated relying personal contact solve problems 
poses difficult situations requires planning support tools project shows goal feasible 
developers revision control see section cvs common centralized codebase allows changes developed concurrently independently checked 
single image code time developer easily retrieve tip latest version mozilla source 
ensures developers see changes regression tests done latest integrated code 
tools provide way query real time status repository changes 
discussed section 
fact developers rarely meet personally consequences overlooked 
participants forced communicate clearly written english email online chat newsgroups bug comments 
second lack documentation significant barrier entry novice participant personal explanations general overviews difficult obtain fact source code available offsets somewhat 
third real time communication provides important mechanism educate developers clarify code 
lead developers online available questions informal design reviews quickly performed cost dispersion interruption 
fourth lack tools aid communication visibility process seriously hamper project progress availability quality usability dire importance 
striking features process strict code review approval system code changes go integration 
projects include review base activities eric raymond hypothesis mozilla project systematically implement tool supported formal review 
code reviews early mozilla way avoid having incorrect code integrated repository eventually break compilation major cause delays inability behalf developer team 
super reviews involve review senior engineer familiar code added provide support critical design evaluations developers acknowledge code quality went significantly started 
review process works follows developer working change bug produces patch generated text file describes line line differences developer local version latest version code repository 
patch attached bug bugzilla system developer requests review 
reviewer module owner familiar code read code critically review ask changes 
actual review consists bug comments describing changes improve code quality questions unclear section recommendations various aspects patch performance impact dependencies related problems 
issues remain reviewer mark seal approval adding reviewer name bug comment 
modules super review needed senior developer intimate code mark approval integration allowed mark sr name 
excerpt review discussion bug remove button smart browsing context disabled included 
session contributor includes patch indicated word attachment requests review 
super reviewer requests change contributor accepts integrates second patch additional comment samir gehani created attachment id fix disable remove button domains disabled list 
additional comment samir gehani morse please hewitt please sr additional comment stephen morse update attachment morse additional comment joe hewitt change disabled true disabled disabled true disabled false additional comment samir gehani created attachment id patch rev reviewer changes 
raymond pointed code review oss important tool preventing bugs improving code quality 
mozilla taken idea implemented formalized system solves problems overly burdensome bureaucracy 
suggests mozilla people ultimately concerned quality code submitted 
quality assurance bug triage oss projects fact include process quality assurance qa procedures mozilla project pioneer term describe explicit process 
qa mozilla performed different classes people ranging engineers hired netscape commercial contributors informal ad hoc volunteers willing test triage problems 
qa team mozilla mission finding constructively reporting relevant bugs mozilla org oss projects 
mission statement clear qa intimately involved testing code mozilla development tools 
reality confirms activities qa performs reflected way tools operate 
main activities qa responsible testing bug triage 
testing activities mozilla ad hoc volunteer testing contributed functional tests run netscape client qa 
different mozilla warrant separate explanation 
asa mozilla org staff member charge qa explains mozilla plans thorough generally considered complete full functional tests 
intimately linked nightly build process 
day latest version mozilla browser compiled various supported platforms binaries built placed public ftp server 
group testers downloads binaries proceeds execute documented series test cases required order declare browser version stable 
tests fail people responsible offending changes contacted required fix roll back changes 
allows development continue code base guaranteed include major regressions 
performed day important mozilla platforms windows mac os linux considered fundamental tool allowing concurrent development succeed cause code fall apart due regressions 
bug triage involves working thousands bugs filed bugzilla reproducing assigning problems invalidating bugs described bug intended behavior lack reproducible steps working better share burden fixes developers available 
qa volunteers module owners target bugs different versions helping define implemented stable release 
inviting volunteers perform qa tasks mozilla project effectively harnessed attention large dedicated population testers report bugs follow reproducibility resolution issues 
users encouraged file bugs open nature bugzilla feel developers paying attention 
having public forum reporting problems getting developer feedback important advantages identified qa process 
prevents problems ignored forgotten viable historical analysis data stored 
fact user base combined beta test community qa assistance group fundamental feature mozilla quality process 
mozilla development tools section describes number tools developed customized mozilla organization support software development process 
important characteristics noted sections integration tools allows management insight actual development browser 
mozilla software tools accessed web browser 
easy access provided web suited needs mozilla community underscores importance supporting distributed software development process 
tools available open source license freely private oss project 
cvs cvs freely available version control system 
far commonly version control system oss projects models closely code integration practices 
cvs provides features associated version control 
overview interesting points tool follows 
central repository cvs operates client server fashion central server stores code version information clients request code receive copies 
versions basic functionality version control system cvs allows previous versions files retrieved 
branches cvs supports multiple scenarios development carry independently 
feature important integrating new features high impact 
concurrent development cvs place locks code checked 
developer checks local copy code changes ready submits back repository 
conflicts changes handled client side repository 
network support cvs works wide area networks pre requisite oss development 
user interface cvs implemented command line tool performs tasks involved version control checking code updating local copy printing differences versions committing changes 
easy integration unix text processing tools positive aspect 
shortcomings cvs discussed propositions alternative solutions remains stable reliable product 
community invested lot time integrating cvs tools opinion cvs remain wide oss long time 
bugzilla bugzilla tool mozilla suite software tools developed 
web issue tracking system written primarily perl 
explained bugzilla supports symbolic communication users key concept bug number 
bugzilla sports great deal functionality features match mozilla process quite closely 
bugzilla provides support different activities described part mozilla process acts central hub communication code review community members 
developers daily register patches request perform review 
qa uses gauge progress report triage bugs 
managers allocate developers track progress major issues 
bugzilla essential mozilla community outages occur people completely blocked 
notable characteristics include user accounts bugzilla user create account identified email address 
account creation validation process simple reduces barrier entry encourages participation 
bug attributes bugs properties match closely mozilla process requirements allow fine control responsibility scheduling dependencies status 
shows various attributes bug 
screen capture bugzilla bug form 
comment log bug keeps sequential list user comments bugzilla works focused discussion forum 
features automatic hyperlinking commenting convenient 
attachment tracker bugs attachments files uploaded user linked specific bug 
attachments patches bugs test cases screen captures specifications 
attachment tracker provides support reviewing code special interface 
query interface mozilla org installation bugzilla registers hundreds thousands bugs 
support queries database search function allows specify attributes define bug searched 
email integration bugzilla changes mailed parties registered bug allowing people notified requests bug progress 
simple conceptual model bugzilla basically bug register lot associated functionality concepts simple grasp products components subdivisions product attachments bugs 
bugzilla proven scalable effective easing coordination development large products 
large number organizations companies outside mozilla project including netscape nasa redhat gnome 
traffic analysis mozilla bugzilla site week january st february th week mozilla release shows daily average unique visitors underscores bugzilla importance community 
development bugzilla occurring rapidly new features planned implemented 
release version concentrates allowing web pages easily modified suit local needs layout complying html transitional standard 
development areas include modularization greater features tighter integration tools user interface improvements 
tools provide real time access code changes impact mozilla compile test cluster 
query interface cvs repository 
sports number features allows query cvs latest check ins done repository shows check comments hyperlinks bugzilla bug fixed provides interface view differences versions files cvs repository allowing developer quickly track visualize set changes landed allows visual identification developers responsible sections single code file provides added graphing mechanism tool depicts different versions files project repository branches excellent tool tracking actual progress terms code check ins 
important statistical analysis repository activity numbers developer participation listed table obtained check database 
screen capture output 
automated system tracks compilations tests 
client server tool client machines various architectures operating systems form cluster 
machines task compile test report results back server 
main user visible feature page displaying compilation results associated individual machines cluster code changes integrated repository time 
machine compile cluster represented column shows various builds happened period time 
builds appear top column 
color section column indicates compilation results red indicates compilation failed orange indicates compilation succeeded test suite failed green indicates compilation tests ran successfully yellow indicates compilation progress time goes new builds generated enter display 
left column indicates names people checked changes time period provides links associated queries 
way trivial find code change committed developer bug fixed 
interesting tool 
allows regressions quickly tracked fixed code check ins cause problems cause compilation machines fail 
allows code cross platform compatible identified fixed removing need developer guarantee works architectures operating systems 
test suites developed apart performing functional testing help track regressions performance exemplified generated part test suite 
graph time takes start mozilla browser varying days 
hypertext tool indexes source code generates html pages 
originally developed tool studying linux kernel adapted mozilla community 
displays code files pages links line identifier functions classes variables hyperlinked 
possible access instance declaration implementation function called certain file 
screen capture displaying page mozilla code 
performs free text searching file names contents querying named identifiers 
community uses basically learning tool links posted bug comments irc conversations provide easy way point developers specific part large code repository 
communication tools mozilla community uses bugzilla great extent communication tool certain tasks mailing lists network newsgroups irc preferred 
mailing lists newsgroups generally discussion focused bug comments new features design review measurements statistics technical inquiries 
irc real time communication system organizes participants channels 
presents interesting scenario distributed development environment real time allows selective communication reasonable substitute telephone technical matters discussed 
mozilla irc channels divided intended audience 
example channel technical discussions relating browser mozilla channel volunteers performing smoke tests 
number bots programs irc users respond specific commands hosted provide convenient material needed 
example session bot named looks messages containing word bug followed number answers bug information bugzilla link know bug 
browser bug timeless bug bugzilla mozilla org show bug cgi id asa mozilla org cpu memory consumption loading large pages sounds 
summary 
timeless bug jake bug bugzilla mozilla org show bug cgi id cri mozilla netscape com fixed hang mozilla long periods time available cpu covered broad subject begun describe complexity richness mozilla project displays 
intended invitation interested researchers software engineering community study project 
research mozilla project suited newcomers field software engineering way watch understand software process occurs wild experienced software engineers may contributions opportunities analyze oss project really evolves 
important overlook opportunity mozilla presents analyze ongoing software process outside corporate environment 
software engineering field research limited willingness software development group availability suitable project study mozilla project offers chance simultaneously analyze participate development important software product 
listed number areas prove interesting research goals 

measurements developer productivity analysis cvs bugzilla data available view affects productivity compares non oss projects 

depth studies real time communication integrate geographically distributed development teams 

subjective analysis social interactions community members relation changes proposed view suggesting way arbitrating disputes product features 

surveys user developer participation project gather general satisfaction perceived problems relation mozilla software process 

statistical analysis quality data collected mozilla software tools specially possible analyze data product mtbf collected mozilla org conjunction bugzilla cvs data provide insight changes larger impact product stability 
continue study project hope publish useful research material 
credits credit go mozilla community providing helpful information reviews suggestions 
images quotes irc logs authentic represent actual interaction developers allowing content 
special mike dan christopher matthew thomas ian asa dawn providing statistics review insights mozilla process 
estimating linux size 

url www com browsers shtml 
visited february 
alex kin lee 
working mozilla projects 

url www 
com mozilla general php 
visited february 
mitchell baker 
state mozilla project 

url www 
mozilla org docs ora oss state mozilla 
visited february 
berliner 
cvs ii parallelizing software development 
proceedings usenix winter technical conference pages berkeley ca 
usenix association 
brian 
mozilla code documentation cross 
url unstable elemental com mozilla 
visited february 
mozilla org bugzilla 
bug refactor 

url bugzilla 
mozilla org show bug cgi id 
visited february 
mozilla org bugzilla 
bug mozilla show current url bookmarks 

url bugzilla mozilla org show bug cgi id 
visited february 
mozilla org bugzilla 
bug remove button smart browsing context disabled 

url bugzilla mozilla org show bug cgi id 
visited february 
mozilla org bugzilla 
bug separate toolbar address bar 

url bugzilla mozilla org show bug cgi id 
visited february 
mozilla org bugzilla 
bug image blocker block 

url bugzilla mozilla org show bug cgi id 
visited february 
mozilla org bugzilla 
bug clean context menus navigator messenger content area 

url mozilla org roadmap roadmap oct html 
visited february 
bugzilla database 

url bugzilla 
com 
visited february 
bell labs canada 
source code analysis netscape communicator developer release 

url www iro umontreal ca labs mozilla analysis contents html 
visited february 
david miller jacob 
bugzilla bug tracking system 

url www 
bugzilla org 
visited february 
asa 
mozilla community quality assurance testing 

url mozilla org events dev day community testing 
visited february 
brendan 
development roadmap old 

url mozilla org roadmap roadmap oct html 
visited february 
brendan 
mozilla development roadmap 

url mozilla org roadmap 
visited february 
brendan mitchell baker 
mozilla super review 

url www 
mozilla org hacking reviewers html 
visited february 
net 
statistics top 

url net stats 
visited february 
thomas gruber daniel russell 
design knowledge design rationale framework representation capture 
knowledge systems laboratory stanford university 
jim tom susan walton 
freeing source story mozilla 

url www com catalog book 
html 
visited february 
frank 
mozilla 

url mozilla org mozilla 
html 
visited february 
lisa gr henderson 
requirements elicitation open source programs 

url www hill af mil crosstalk jul henderson asp 
visited february 
james rebecca grinter 
splitting organization integrating code conway law revisited 
proceedings icse pages los angeles may 

josh macdonald paul hilfinger luigi 
prcs project revision control system 
proceedings international symposium system configuration management number brussels 
steven mcconnell 
open source methodology ready prime time 
ieee software july august 
mockus roy fielding james 
case study open source software development apache server 
proceedings icse pages 
june 
bruce 
open source definition 
open sources pages 
reilly associates sebastopol st edition 
eric raymond 

cathedral bazaar pages 
reilly associates sebastopol st edition 
eric raymond 
cathedral bazaar 
cathedral bazaar pages 
reilly associates sebastopol st edition 
joel 
things part 
url 
com articles fog html 
visited february 
gnome project 
gnome bugzilla bug database 

url bugzilla 
gnome org 
visited february 
gnu project 
various licenses comments 

url www 
gnu org philosophy license list html 
visited april 
mozilla organization 


url www mozilla org 
html 
visited february 
mozilla organization 
architecture 

url www mozilla 
org index html 
visited february 
mozilla organization 
documentation 

url www mozilla 
org classic 
visited february 
mozilla organization 
hacking mozilla 

url www mozilla org hacking 
visited february 
mozilla organization 
mozilla developer documentation 

url www 
mozilla org docs 
visited february 
mozilla organization 
mozilla quality assurance 

url www mozilla 
org quality 
visited february 
mozilla organization 
user experience specifications 

url www 
mozilla org projects ui communicator 
visited february 
mozilla organization 


url www mozilla org projects 
visited february 
mozilla organization 
mozilla org 

url www mozilla org 
visited february 
mozilla organization 
mozilla org glance 

url www mozilla org html 
visited february 
mozilla organization 
mozilla org staff members 

url www mozilla 
org html 
visited february 
mozilla organization 
mozilla org statistics 

url mozilla 
org 
visited february 
mozilla organization 
project technical documentation 

url www mozilla org doc 
visited february 
matthew thomas 
know software engineering 

url mpt com 
visited february 
andre van der hoek 
configuration management open source projects 
proceedings icse workshop software engineering internet 

david wheeler 
estimating linux size 

url www com sloc 
visited february 
yamauchi makoto shinohara toru ishida 
collaboration lean media open source succeeds 
proceedings cscw pages 
acm press 
zhao sebastian 
survey quality related activities open source 
acm sigsoft software engineering notes may 

