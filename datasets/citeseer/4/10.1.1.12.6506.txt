programming computers embedded physical world iftode andrzej kochut department computer science university maryland college park college park md iftode kochut cs umd edu ubiquitous computing environments consist massive ad hoc networks embedded systems deployed physical space 
programming environments requires new abstractions computing models 
presents spatial programming sp novel paradigm programming ubiquitous computing environments 
sp offers access data services distributed nodes spread physical space similar fashion access memory 
sp programs access network resources high level abstraction termed spatial names resources spatial properties content names 
underlying system takes care mapping spatial target nodes network 
sp hides complexity underlying network programmer offering simple intuitive programming model 

advances technology feasible create networks embedded systems nes 
networks represent infrastructure ubiquitous computing environments :10.1.1.24.6338
instance sensors monitoring environment robots intelligent cameras collaborating track object cars highway cooperating adapt traffic conditions daily reality :10.1.1.117.697:10.1.1.21.3642
extremely heterogeneous nodes nes common set characteristics incorporate supported part nsf itr number ani cristian chalermek intanagonwiwat ulrich kremer division computer information sciences rutgers university piscataway nj cs rutgers edu processing power allows perform local computations able communicate devices short range radio spatially distributed mobile unattended may fail frequently 
nes consist huge number small size devices deployed physical space 
nodes may join leave moment unreachable due mobility energy depletion failures disposal leading dynamic volatile network topologies 
scale volatility main issues nes 
scenarios feasible deploy powerful nodes act base stations nes function complete decentralized manner 
characteristics nes programmability challenging task 
traditional distributed programming models message passing suitable nes 
aspects mobility volatility scale difficult program applications series interactions devices identified fixed addresses assumed message passing model 
want gather information perform actions devices certain properties content location 
longer interested contacting particular device device may useful perform task 
simpler programming abstractions flexible programming models needed programmers design write applications concerning underlying network details 
propose spatial programming sp novel paradigm programming ubiquitous computing environments emphasizes notions space content 
sp space order pro gramming concept needs exposed applications 
sp shields complexity programming volatile ad hoc networks presenting high level uniform abstraction termed spatial naming accessing network resources 
spatial names network resources geographical location content underlying system takes care mapping target node network 
mappings spatial nodes physical world similar mappings virtual memory physical memory conventional computer system 
geographical routing content naming routing extensively studied simple intuitive programming model allows user express computation terms abstractions missing :10.1.1.117.1253:10.1.1.112.2772
model programmers write simple sequential programs access transparently network resources spatial similar fashion access memory variables 
sp independent underlying system allowing multiple implementations 
implementation provide sp compiler responsible translating high level sequential program series actions performed underlying system 
rest papers organized follows 
section presents example motivates spatial programming 
section describes design principles sp 
section shows basic programming constructs sp illustrates example 
section discusses related 
current status plans section 
motivating example example motivates spatial programming task performing object tracking large area set spatially distributed intelligent cameras battery powered wireless communication 
spaces campus town number cameras nodes marked camera black square represents object interest 
device capable determining location gps localization methods remains static deployment :10.1.1.18.2787
devices may fail deployed far devices preventing participating computation 
user requires images taken different cameras area interest campus example 
application dynamically determine location camera provides best iden camera camera camera camera campus camera camera 
motivating example camera town desired object 
process application uses partial results computed nodes needs able reach nodes visited order execute various computations 
task stated difficult tedious program traditional programming models 
programmer explicitly manage communication devices program details involved reaching area interest contacting target nodes located 
additionally network dynamics caused node failures new cameras deployed may cause application fail fixed addressing schemes treat exceptions failures 
expressing task model straightforward 
sp paradigm defines simple abstraction called spatial presents unified view space network applications 
spatial node sp represented tuple space tag 
tag represents contentbased name node 
space geographical scope content name node 
source code program realizes desired task 
cameras take images continuously processor execute single identification task time focusing object 
application computes object identification free cameras currently focusing object spatial partial results accumulated execution lines 
expression campus camera camera located campus 
array subscript refer different cameras space content description 
camera provides best partial result instructed focus desired object potentially complete identification 
new camera provides better result active camera focuses object old free lines 
application may access object tracking object max id campus camera focus result identify campus camera object result campus camera max id focus campus camera focus object result max id campus camera max id return campus camera max id location formation services target nodes dot notation campus camera focus 
detailed descriptions sp constructs example section 
application finishes checking images acquired camera provided best partial result 
complete identification function returns location camera lines 

design principles networks embedded systems nes definition large volatile spread physical space 
achieve objectives applications running networks need execute certain geographical regions 
applications interested content properties nodes provide 
need able adapt uncertainty encountered nes topologies resources available unknown priori 
spatial programming sp novel programming paradigm attempts address issues 
sp main design principles exposing space order programming concept decoupling access network resources networking details maintaining consistency supporting programming uncertainty 
applications able access resources located nodes participating nes referring fashion program addresses memory variables 
involve spatial characteristics resource geographical region node containing resource content characteristics resource content node 
applica 
sp code example tion programmer perform specific network related operations obtain requested resources 
underlying system take care name resolution access resources routing communication 
application refers node spatial content properties guaranteed contact node time subsequent successful space content description 
underlying system needs maintain bindings nodes addressed 
bindings maintained application binding table plays similar role page table traditional computer system 
network resource performed corresponding spatial bound particular node space 
binding persistent duration sp program execution 
call feature consistency allows programmer visit repeatedly nodes locations long spatial valid 
nes extremely volatile sp easy programmer deal network configuration dynamics 
dynamics involves constant change location nodes intermittent network connectivity 
example node may invalid node moved away area interest 
possibility node failure leads unavailability requested resources 
situations underlying system allow application adapt adverse network conditions 
types applications important guarantee execution completion predefined time period 
dynamic environment nes operations depend location content routing lookup operation may take substantial amount time 
bound execution time specifies timeout value attempt access aborted application informed 
application able decide actions 

spatial programming constructs spatial programming requires set programming constructs added extensions programming language 
main sp construct provides transparent access network resources exception mechanism allows applications adapt network configuration dynamics 
constructs offer possibility create remove network resources execution define relative spaces dynamically change space spatial 

accessing network resources sp network resources accessed quintuple space tag instance timeout resource specifies spatial information node interest content name node instance particular node spatial content properties upper bound access time desired resource resource name node 
spatial 
spatial space tag tuple refers node located space named content tag 
geographical scope content name node addressed 
spatial allow transparent access resources located referenced nodes 
example spaces campus town node hosts camera tag 
campus camera represents intelligent cameras campus 
spatial instances 
possible refer node spatial content properties introduce notion instance 
instance denotes particular index node referenced spatial content description 
example campus camera campus camera denote different camera nodes located campus 
access timeout 
volatile environment difficult estimate long takes access network resource existence certain resource space unknown 
application may need achieve objectives fixed time interval 
offer real time guarantees highly dynamic networks sp possible specify soft deadline looking spatial maximum time may spent operation 
target node reached underlying system raises timeout violation exception application decide actions 
resource naming 
sp applications name access resource located node referenced spatial 
order access resources dot notation 
construct space tag resource instructs system access resource located node referenced space tag 
example campus camera focus represents object observed camera 
similarly campus camera location may represent location node space 

creating removing network resources accessing resources exist nodes program may need dynamically create remove resources 
primitives offer functionality create space tag timeout resource remove space tag timeout resource 
binding spatial space tag exist functions called 
instance application may need create new resources order store data network similar creating files file system may create new services nodes interest image recognition service camera node 

defining new spaces allow flexible specifications spaces sp supports basic operations spaces 
application may statically defined spaces campus town create new composed spaces union difference intersection operators 
example town campus camera returns campus 
defining relative spaces position node referenced spatial useful applications 
define space tag range circular space center position node referenced space tag position unique identifier node maintained associated binding radius equals range 
temp space range water space temp range water 
relative space example parameters define semi circles relative position node stored binding associated spatial 
shows construct 
access node holds water proximity range physical location associated space temp weuse space temp range water 

space casting car car space space space space space car space space car 
space casting example user knowledge mobility patterns certain nodes space spatial modified space casting 
construct space space tag changes geographical scope spatial space space 
shows binding created car space car reached space space casting construct 

sp program example illustrate novel concepts programming constructs introduced sp application monitors state fire sensors large area activates nearby water sprinkler fire detected 
kinds embedded systems deployed physical environment fire sensors water 
void space area area fire timeout fire location area fire timeout location try area fire range sprinkler timeout water catch timeout area location 
sp program sensor defines tag fire sensor observed fire false 
sprinkler defines tags sprinkler water 
starts pour water tag water set 
additionally fire department may alerted setting tag defined station 
impossible contact fire department informed 
source code sp program implements task 
consistency helps obtaining location sensor detected fire spatial instance line 
construct enables turn sprinkler located range sensor detected fire lines 
timeout exception raised line means destroyed fire department notified line 

related projects programming models ubiquitous pervasive computing :10.1.1.15.3223
sp shares goals main design goal define implement programming model provides simple way program physical spaces decouple access spatially distributed network resources networking details 
sp closely related spatial views iterative spatial programming model networks embedded systems 
spatial views provide restrictive higher level programming model sp 
spatial views programming model allows specification sets nodes interest called views sequential program executed node view 
addition language constructs provided group nodes physical location specify constraints satisfied program execution including resources time quality result constraints 
sp serve possible target language spatial views compiler vice versa 
research complementary tag defines sql language sensor networks 
sp tag provide simple programming constructions shield programmer underlying network 
main differences sp tag 
sp focuses flexible abstraction allows programming uncertainty highly dynamic networks tag focuses set queries executed efficiently network 
second programmer control execution sp tag depends entirely compiler essentially sp offers imperative language tag offers declarative language 
spatial programming shares idea spatial information various forms geographical routing differs main goal transparent computing networks distributed physical space :10.1.1.112.2772
content naming internet sensor networks :10.1.1.117.1253:10.1.1.21.1188
spatial sp similar abstractions content names incorporate spatial information uniform view space network applications 
difference sp targets ubiquitous computing environments independent underlying implementation 
large networks embedded systems focused network protocols wired wireless sensor networks system architectures fixed function sensor networks energy efficient data collection mobile sensor networks designed support wildlife tracking :10.1.1.117.697:10.1.1.14.6467:10.1.1.117.1253
sensor networks represent platform sp 
deployed large geographical regions sp provides viable solution alleviate task writing programs 

status time process implementing sp smart messages sm represent suitable platform sp 
main advantage sms overcome scale heterogeneity connectivity issues encountered nes placing intelligence migratory execution units requiring minimal system support nodes 
advantage sm implementation possibility dynamically install new services nodes 
sms consist code data sections lightweight execution state 
migrate network searching nodes interest execute node path 
sm execution embodied tasks described terms migration computation phases 
sms name nodes interest properties self route nodes stepping stones 
nodes network support sms providing name memory inter sm communication synchronization interaction local host virtual machine sm execution 
sp constructs added language extensions library calls 
main component implementation sp sm translator essentially translate access spatial sm migration generate code handle bindings created execution 
binding table carried sms mobile data 
necessary components implementation geographical content routing developed flexible self routing mechanism provided sm 
briefly outline ideas improving sp design implementation 
plan investigate features added sp flexible easier complex environments nes 
plan analyze tradeoffs various design choices face implementing sp 
networks resource constrained devices sensor networks traditional implementation may yield better performance 
plan sp implementation top directed diffusion :10.1.1.117.1253
decision implement sp constructs programming language extensions library calls evaluated terms performance ease programming 
situations parallel access spatial possible dependencies desirable order increase performance 
additions sp constructs allow user specify parallel activities 
current design access bound spatial fails exception raised application control 
improvements possible re bind operation performed application accepts similar node space content name transparent tracking mobile node moved space 
sandia national laboratories 
www sandia gov media nr htm 

www com 
paul ramachandran 
stampede distributed programming system ubiquitous computing 
proceedings nd international conference distributed computing systems icdcs pages july 
adjie winoto schwartz balakrishnan lilley 
design implementation intentional naming system 
proceedings th acm symposium operating systems principles sosp pages 
banavar beck munson sussman 
challenges application model pervasive computing 
proceedings sixth annual acm ieee international conference mobile computing networking mobicom pages august 
iyer kang saxena iftode 
cooperative computing distributed embedded systems 
proceedings nd international conference distributed computing systems icdcs pages july 
girod elson estrin 
locating tiny sensors time space case study 
proceedings international conference software hardware codesign iccd 
invited october 
grimm davis hendrickson macbeth swanson anderson bershad borriello gribble wetherall 
systems directions pervasive computing 
proceedings th workshop hot topics operating systems hotos viii may 
cheriton 
architecture content routing support internet 
proceedings rd usenix symposium internet technologies systems usits march 
silva intanagonwiwat govindan estrin ganesan 
building efficient wireless sensor networks low level naming 
proceedings th acm symposium operating systems principles sosp pages october 
heinzelman kulik balakrishnan 
adaptive protocols information dissemination wireless sensor networks 
proceedings fifth annual acm ieee international conference mobile computing networking mobicom pages august 
hill szewczyk woo hollar culler pister :10.1.1.117.697
system architecture directions networked sensors 
proceedings ninth international conference architectural support programming languages operating systems pages november 
intanagonwiwat govindan estrin :10.1.1.117.1253
directed diffusion scalable robust communication paradigm sensors networks 
proceedings sixth annual acm ieee international conference mobile computing networking mobicom pages august 
li john douglas de couto david karger robert morris 
scalable location service geographic ad hoc routing 
proceedings sixth annual acm ieee international conference mobile computing networking mobicom pages august 
juang oki wang martonosi :10.1.1.14.6467
rubenstein 
energy efficient computing wildlife tracking design tradeoffs early experiences zebranet 
proceedings tenth international conference architectural support programming languages operating systems october 
kaplan editor 
principles applications 
artech house 
karp kung 
greedy perimeter stateless routing wireless networks 
proceedings sixth annual acm ieee international conference mobile computing networking mobicom pages august 

ko vaidya 
location aided routing lar mobile ad hoc networks 
proceedings fourth annual acm ieee international conference mobile computing networking mobi com pages october 
kremer iftode hom ni 
spatial views iterative spatial programming networks embedded systems 
technical report dcs tr rutgers university june 
satyanarayanan 
pervasive computing vision challenges 
ieee personal communications august 
madden franklin hellerstein hong 
tag tiny aggregation service ad hoc sensor networks 
proceedings th symposium operating systems design implementation osdi 
appear december 
priyantha miu balakrishnan teller 
cricket compass context aware mobile applications 
proceedings th annual acm ieee international conference mobile computing networking mobicom pages 
vahdat dahlin anderson aggarwal 
active names flexible location transport wide area resources 
proceedings second usenix symposium internet technologies systems usits pages october 
weiser 
computer century 
scientific american september 
