internet engineering task force sally floyd internet draft icsi draft floyd tcp highspeed txt february highspeed tcp large congestion windows status memo document internet draft full conformance provisions section rfc 
internet drafts working documents internet engineering task force ietf areas working groups 
note groups may distribute working documents 
internet drafts draft documents valid maximum months may updated replaced documents time 
inappropriate internet drafts material cite progress 
list current internet drafts accessed www ietf org ietf id abstracts txt list internet draft shadow directories accessed www ietf org shadow html 
document proposes highspeed tcp modification tcp congestion control mechanism tcp connections large congestion windows 
congestion control mechanisms current standard tcp constrains congestion windows achieved tcp realistic environments 
example standard tcp connection byte packets ms round trip time achieving steady state throughput gbps require average congestion window segments packet drop rate congestion event packets equivalently congestion event hours 
widely acknowledged unrealistic constraint 
address limitation tcp document proposes highspeed tcp experimentation feedback wider community 
floyd experimental page draft floyd tcp highspeed february deleted rfc editor publication changes draft floyd tcp highspeed txt added section tradeoffs choosing congestion control parameters 
added mention scalable tcp tom kelly 
changes draft floyd tcp highspeed txt added discussion related changing 
added discussion alternate linear response function 
added discussion tcp window scale option 
added discussion highspeed tcp roughly emulating congestion control response parallel tcp connections 
added discussion time converge fairness 
expanded 


document proposes highspeed tcp modification tcp congestion control mechanism tcp connections large congestion windows 
steady state environment packet loss rate current standard tcp average congestion window roughly sqrt segments 
places serious constraint congestion windows achieved tcp realistic environments 
example standard tcp connection byte packets ms round trip time achieving steadystate throughput gbps require average congestion window segments packet drop rate congestion event packets equivalently congestion event hours 
address fundamental limitation tcp tcp response function function mapping steady state packet drop rate tcp average sending rate packets round trip time document proposes modifying tcp response function regimes higher congestion windows 
document experimentation feedback highspeed tcp wider community 
highspeed tcp modified response function take floyd experimental page draft floyd tcp highspeed february effect higher congestion windows highspeed tcp modify tcp behavior environments mild heavy congestion introduce new dangers congestion collapse 
relative fairness highspeed tcp connections preserved view modification tcp response function globally agreed ietf ad hoc decisions individual implementors tcp senders 
modifications tcp response function implications transport protocols tfrc forms equation congestion control congestion control mechanisms directly tcp response function tfrc 
proposal highspeed tcp focuses specifically proposed change tcp response function implications tcp 
document address view separate fundamental issue mechanisms required enable best effort connections start large initial windows 
view highspeed tcp proposes somewhat fundamental change tcp response function time relatively simple change implement single tcp sender presents dangers terms congestion collapse 
contrast view problem enabling connections start large initial windows inherently risky structurally difficult requiring form explicit feedback routers path 
reason propose addressing problem starting large initial windows separately separate timetable problem modifying tcp response function 

problem description 
section describes number round trip times congestion events required standard tcp flow achieve average throughput bps packets bytes roundtrip time seconds 
congestion event refers window data dropped ecn marked packets ecn stands explicit congestion notification 
appendix achieving average tcp throughput bps requires loss event br round trip times 
illustrated table seconds bytes 
table gives average congestion window br steady state packet drop rate 
floyd experimental page draft floyd tcp highspeed february tcp throughput mbps rtts losses table rtts congestion events standard tcp byte packets round trip time seconds 
document proposes highspeed tcp minimal modification tcp increase decrease parameters tcp connections larger congestion windows allow tcp achieve high throughput realistic requirements steady state packet drop rate 
equivalently highspeed tcp realistic requirements number round trip times loss events 

design guidelines 
proposal highspeed tcp motivated requirements achieve high connection throughput requiring unrealistically low packet loss rates 
reach high throughput reasonably quickly slow start 
reach high throughput overly long delays recovering multiple retransmit timeouts period small congestion windows 
additional feedback support required routers example goal acceptable performance non ecn capable environments drop tail active queue management red routers 
additional feedback required tcp receivers 
tcp compatible performance environments moderate high congestion equivalently requirement additional load network terms increased packet drop rates environments moderate high congestion 
performance standard tcp environments floyd experimental page draft floyd tcp highspeed february moderate high congestion 
acceptable transient performance terms increases congestion window round trip time responses severe congestion convergence times fairness 
currently users wishing achieve throughputs gbps typically open multiple tcp connections parallel behaves roughly aggregate virtual tcp connections 
approach suffices occasional user provisioned links leaves parameter determined user results aggressive performance higher steady state packet drop rates environments periods moderate high congestion 
believe new approach needed offers flexibility effectively scales wide range available bandwidths competes fairly standard tcp congested environments 

non goals 
explicitly goals non goal tcp compatible performance environments low packet drop rates 
note proposal require deliver performance environments low packet drop rates packet loss rates 
discuss document assume standard tcp unable effective available bandwidth environments loss rates case acceptable appropriate highspeed tcp perform aggressively standard tcp environment 
non goal quickly allowed slow start 
belief quickly allowed slowstart necessitate explicit feedback routers path 
proposal highspeed tcp focused changes tcp effectively deployed current internet environment 
non goal avoiding oscillations environments way long lived flows round trip times 
agree attention oscillatory behavior useful avoiding oscillations aggregate throughput primary consideration particularly simplified environments floyd experimental page draft floyd tcp highspeed february limited way long lived flows large roundtrip times 
assessment oscillatory behavior extreme environments acceptable price pay benefits highspeed tcp 

modifying tcp response function 
tcp response function sqrt gives tcp average congestion window mss sized segments function steady state packet drop rate ff 
tcp response function direct consequence tcp additive increase multiplicative decrease aimd mechanisms increasing congestion window roughly segment round trip time absence congestion halving congestion window response round trip time congestion event 
response function standard tcp reflected table 
proposal restrict attention tcp performance environments packet loss rates ignore complex response functions required model tcp performance congested environments retransmit timeouts 
appendix average congestion window corresponds average round trip times loss events standard tcp 
packet drop rate congestion window rtts losses table tcp response function standard tcp 
average congestion window mss sized segments function packet drop rate specify modified response function highspeed tcp parameters low window high window high 
ensure tcp compatibility highspeed response function uses response function standard tcp current congestion window low window uses highspeed response function current congestion window greater low window 
document set low window mss sized segments corresponding packet drop rate tcp 
floyd experimental page draft floyd tcp highspeed february specify upper highspeed response function specify packet drop rate needed highspeed response function achieve average congestion window segments 
roughly window needed sustain gbps throughput tcp connection default packet size round trip time earlier document 
high window set specify high highspeed tcp packet drop rate allows highspeed tcp connection achieve average congestion window segments 
believe loss rate sets target high speed environments allowing acceptable fairness highspeed response function competing standard tcp environments packet drop rates 
simplicity highspeed response function maintain property response function gives straight line loglog scale response function standard tcp low moderate congestion 
results response function values average congestion window greater low window low low window low packet drop rate corresponding low window constant frs log high window log low window log high log low 
example low window set low compatibility standard tcp 
high window set high set get response function 
highspeed response function illustrated table 
highspeed tcp number round trip times losses pw equals segments 
floyd experimental page draft floyd tcp highspeed february packet drop rate congestion window rtts losses table tcp response function highspeed tcp 
average congestion window mss sized segments function packet drop rate believe problem backward compatibility standard tcp requires response function quite close standard tcp loss rates 
believe stringent tcp compatibility required smaller loss rates appropriate response function gives plausible packet drop rate connection throughput gbps 
gives slowly increasing number round trip times loss events function decreasing packet drop rate 
way look highspeed response function consider highspeed tcp roughly emulating congestion control response parallel tcp connections initially increases function highspeed tcp congestion window 
highspeed response function equation response function viewed equivalent parallel tcp connections varies function congestion window recall single standard tcp connection average congestion window equals sqrt 
parallel tcp connections aggregate congestion window equals sqrt 
highspeed response function equation relationship derive number parallel tcp connections emulated highspeed tcp response function 
shown table 
floyd experimental page draft floyd tcp highspeed february congestion window number parallel tcps table number parallel tcp connections roughly emulated highspeed tcp response function 
document attempt seriously evaluate highspeed response function congestion windows greater packets 
believe learn requirements sustaining throughput best effort connections range gain experience highspeed tcp congestion windows thousands tens thousands packets 
limitations connection throughput realistically achieved best effort traffic absence additional support feedback routers path 

fairness implications highspeed response function 
standard highspeed response functions directly infer relative fairness flows response functions 
example packet drop rate assume standard tcp average congestion window standard highspeed tcp higher average congestion window highspeed 
case single highspeed tcp connection receiving highspeed standard times throughput single standard tcp connection competing environment 
relative fairness illustrated table parameters highspeed response function section 
second column gives relative fairness steady state packet drop rate specified column 
help calibrate third column gives aggregate average congestion window tcp connections fourth column gives bandwidth needed connections achieve aggregate window packet drop rate ms round trip times byte packets 
floyd experimental page draft floyd tcp highspeed february packet drop rate fairness aggregate window bandwidth mbps mbps mbps mbps gbps gbps gbps gbps gbps table relative fairness highspeed standard response functions 
packet drop rates flow highspeed response function expect receive times throughput flow standard response function round trip times packet sizes 
packet drop rates unfairness severe entered regime standard tcp connection requires congestion event round trip times order available bandwidth 
judgement lot tcp connections effectively operating regime today congestion windows thousands packets benefits highspeed response function outweigh unfairness experienced standard tcp regime 
purpose document solicit feedback issue 
parameter low window determines directly point divergence standard highspeed response functions 
third column table aggregate window gives aggregate congestion window competing tcp connections highspeed standard tcp packet drop rate specified column 
table highspeed tcp connection receive times bandwidth standard tcp environment packet drop rate 
occur flows sharing single pipe achieved aggregate window packets 
round trip time ms packet size bytes occur available bandwidth competing flows gbps 
consider time takes highspeed tcp flows converge fairness 
worst case convergence fairness occurs new flow starting competing highbandwidth existing flow new flow suffers packet drop exits slow start window small 
worst case floyd experimental page draft floyd tcp highspeed february consider new flow entered congestion avoidance phase window packet 
standard tcp flow congestion avoidance increases window packet round trip time round trip times achieved window packets starting window round trip time 
contrast highspeed tcp flows increases faster standard tcp flow congestion avoidance phase expect convergence fairness better 
shown table 
script generate table appendix rtt hs window standard tcp window table highspeed standard tcp connection congestion window congestion avoidance phase starting congestion window packet rtt 
classic relative fairness chiu jain cj 
shows aimd additive increase multiplicative decrease converges fairness environment synchronized congestion events 
cj easy see mimd converge fairness environment 
results cj apply asynchronous environment current internet frequency congestion feedback different different flows 
example shown mimd converges fair states model proportional synchronous feedback terms packet drops floyd experimental page draft floyd tcp highspeed february gv 
concerned abandoning strict model aimd highspeed tcp 

translating highspeed response function congestion control parameters 
equation congestion control tfrc highspeed response function directly tfrc congestion control mechanism 
tcp highspeed response function translated additive increase multiplicative decrease parameters 
highspeed response function achieved tcp additive increase segment roundtrip time multiplicative decrease halving current congestion window highspeed tcp modify increase decrease parameter 
concluded highspeed tcp achieve acceptable compromise moderate increases timely decreases modifying increase decrease parameter 
highspeed tcp congestion window increase segments round trip time absence congestion congestion window decrease segments response round trip time loss events 
response single highspeed tcp increases congestion window segments follows response congestion event highspeed tcp decreases follows standard tcp regardless value highspeed tcp uses values low window 
section specifies highspeed tcp larger values high window specified loss rate high 
frs elementary calculations requires relationship high window high window high 
parameter high decrease specify decrease parameter high window equation derive increase parameter high window 
high high window example specify high decrease floyd experimental page draft floyd tcp highspeed february specifying giving decrease congestion event 
equation gives increase segments just round trip time 
moderate decrease strikes acceptable particularly coupled role tcp ack clocking limiting sending rate response severe congestion 
severe decrease require aggressive increase congestion window round trip time congestion 
particular decrease factor high decrease standard tcp require increase segments round trip time 
decrease parameters low window high decrease high window left specify value values low window 
frs vary linearly log follows high decrease log log log log 
increase parameter computed follows packet drop rate congestion window inverting equation get follows 
assume experimental implementations highspeed tcp investigation pre computed look table finding 
example implementation tom adjusts parameters seconds 
appendix give table default values low window high window high high decrease 
default values ns simulator example simulations ns run command test directory tcl test 

alternate linear response functions 
section explore alternate linear response function highspeed tcp proposed number people particular glenn tom kelly 
similarly suggested ad hoc guideline response function highspeed tcp specify constant value floyd experimental page draft floyd tcp highspeed february number round trip times congestion events 
assume keep value low window mss sized segments indicating highspeed response function diverges current tcp response function modify high window high parameters specify upper range highspeed response function 
particular consider response function high window high low window low 
equations section give linear response function low window linear highspeed response function illustrated table 
highspeed tcp number round trip times losses pw equals equivalently segments 
packet drop rate congestion window rtts losses table alternate linear tcp response function highspeed tcp 
average congestion window mss sized segments function packet drop rate constant decrease give increase low window equivalently constant increase low window packets low window 
possibility scalable tcp uses fixed decrease fixed increase 
gives increase window tcp delayed 
relative fairness alternate linear response function standard tcp response function illustrated table 
floyd experimental page draft floyd tcp highspeed february packet drop rate fairness aggregate window bandwidth mbps mbps mbps mbps gbps gbps gbps gbps gbps table relative fairness linear highspeed standard response functions 
attraction linear response function fixed increase congestion window fixed number round trip times loss events 
assumption having fixed length congestion epoch round trip times regardless packet drop rate poor fit imprecise imperfect world routers range queue management mechanisms drop tail queue management common today 
example response function fixed length congestion epoch round trip times give clearly differentiated feedback environment steady state background losses fixed intervals flows occur wireless link occasional short error bursts giving losses flows seconds regardless sending rate 
goal perfect fairness environment synchronized losses moderately acceptable performance regime 
goal argue response function constant number round trip times congestion events 
question clearly additional research investigation 
addition flows different round trip times different time durations congestion epochs model linear response function 
third column table aggregate window gives aggregate congestion window competing tcp connections linear highspeed tcp standard tcp packet drop rate specified column 
table linear highspeed tcp connection receive fifteen times bandwidth standard tcp environment packet drop rate 
occur flows sharing single pipe achieved floyd experimental page draft floyd tcp highspeed february aggregate window packets 
round trip time ms packet size bytes occur available bandwidth competing flows mbps 
linear highspeed tcp aggressive highspeed tcp proposed fair competing standard tcp high bandwidth environment 

tradeoffs choosing congestion control parameters 
range metrics evaluating choices congestion control parameters highspeed tcp 
assumption section response function form constant exponent response functions considered response functions spectrum represented current tcp linear response function described section 
highspeed tcp lies middle spectrum 
response functions exponents eliminated consideration worse standard tcp connections high congestion windows 

number round trip times loss events 
response functions exponents greater eliminated consideration response functions number round trip times loss events decreases congestion decreases 
response function loss event congestion event packets number round trip times loss events 
standard tcp number round trip times loss events linear contrast attraction linear response function described section scale invariant terms fixed increase congestion window fixed number round trip times loss events 
response function number round trip times loss events proportional negative exponent setting smaller increases 
undesirable 

number packet drops loss event drop tail 
tcp connection increases sending rate packets round trip time drop tail environment result dropped packets single loss event 
attraction standard tcp fixed increase experimental page draft floyd tcp highspeed february trip time packet minimizing number packets dropped drop tail environment 
environment form active queue management particular environment uses ecn number packets dropped single congestion event problem 
environments larger increases sending rate round trip time result larger stresses ability queues router absorb fluctuations 
highspeed tcp plays middle ground metrics moderate number round trip times loss events moderate increase sending rate round trip time 
shown appendix congestion window packets highspeed tcp increases sending rate packets round trip time resulting roughly packet drops congestion event drop tail environment 
increased aggressiveness price paid highspeed tcp increased scalability 
large number packets dropped congestion event result synchronized drops multiple flows possible loss throughput result 
scalable tcp increase packets round trip time 
congestion window packets gives increase packets round trip time resulting roughly packet drops congestion event drop tail environment 
highspeed tcp variants place increased demands queue management routers relative standard tcp 
similar increased demands queue management result parallel tcp connections single standard tcp connection 

slow start 
companion internet draft limited slow start tcp large congestion windows proposes modification tcp slowstart procedure significantly improve performance tcp connections slow starting large congestion windows 
tcp connections able congestion windows thousands tens thousands mss sized segments mss sender maximum segment size current slow start procedure result increasing congestion window thousands segments single round trip time 
increase easily result thousands packets dropped round trip time 
counterproductive tcp flow hard rest traffic sharing congested link 
proposes limited slow start limiting number segments floyd experimental page draft floyd tcp highspeed february congestion window increased window data slow start order improve performance tcp connections large congestion windows 
separated limited slow start separate draft standard highspeed tcp 
limited slow start illustrated ns simulator snapshots may tests test tcp test subdirectory tcl lib 
order best effort flows safely start faster slowstart high bandwidth networks believe necessary flow explicit feedback routers path 
number proposals ranging minimal proposal ip option allows tcp syn packets collect information routers path allowed initial sending rate proposals power require fine tuned continuous feedback routers 
proposals somewhat longer term proposals highspeed tcp proposal document requiring longer lead times coordination deployment discussed documents 

limitations window size 
tcp header uses bit field report receive window size sender 
unmodified allows window size bytes 
window scaling maximum window size bytes rfc 
byte packets allows window packets 

related highspeed tcp 
highspeed tcp separately investigated simulations sylvia ratnasamy de souza reports simulations available shortly 
simulations verify fairness properties highspeed tcp sharing link standard tcp 
simulations explore relative fairness highspeed tcp flows competing standard tcp 
simulation environment include background forward reverse path tcp traffic limited tcp receive window small amount forward reverse path traffic web traffic generator 
simulations far explore performance simple dumbbell topology gbps link propagation delay ms simulations run adaptive red droptail queue floyd experimental page draft floyd tcp highspeed february management 
explore detail includes convergence times new flows start recovery time transient outage response sudden severe congestion investigations potential oscillations 
additional includes evaluating fully choices parameters highspeed tcp 
invite contributions 
suggestions citations related welcome 

relationship 
assumption highspeed tcp tcp sack option increased initial window segments allowed afp 
paths substantial reordering tcp performance greatly improved mechanisms research stages robust performance presence reordered packets 
view highspeed tcp largely orthogonal proposals higher path mtu values 
changes highspeed tcp require changes network tcp receiver works current internet 
assumption highspeed tcp useful larger values 
particular current congestion window gives information bandwidth delay product available particular flow 
related approach virtual mtu actual mtu path limited 
virtual mtu approach fully investigated explore virtual mtu approach document 


initial proposal asking feedback wider community 
explored proposal simulations finished reports simulations 
welcome additional analysis simulations particularly experimentation 
information experiments available highspeed tcp web page hstcp 
parameters determine highspeed response function additional parameter determines highspeed tcp tradeoffs increases decreases response function 
solicit feedback setting parameters issues 
floyd experimental page draft floyd tcp highspeed february bringing proposal ietf considered experimental rfc 
reason bring ietf stage highspeed tcp proposes significant change underlying tcp response function view change globally agreed 
advisable bring proposal ietf feedback preliminary stages 
reason bring proposal ietf people conducted evaluations highspeed tcp simulations belief real evaluations happen experiments actual deployment 
part experimentation highspeed tcp implemented linux web kernel hstcp 
advisable stage bring proposal highspeed tcp ietf seek experimental status 

highspeed tcp proposal joint sylvia ratnasamy scott shenker initiated scott shenker 
additional investigations highspeed tcp joint de souza deb agarwal 
tom implementation linux web kernel resulting experimentation highspeed tcp 
grateful research group members transport area working group members ipam program large scale communication networks feedback 
glenn framing linear response function parameters highspeed tcp 
grateful contributions feedback individuals tom kelly jitendra padhye paul brian tierney joe touch 
jeffrey hsu andrew reiter feedback earlier versions document 

normative rfc allman paxson tcp congestion control rfc april 

informative afp allman floyd partridge increasing tcp initial window internet draft draft ietf txt progress june 
deepak bansal hari balakrishnan sally floyd scott shenker dynamic behavior slowly responsive congestion control algorithms sigcomm august 
floyd experimental page draft floyd tcp highspeed february cj chiu jain analysis increase decrease algorithms congestion avoidance computer networks computer networks isdn systems vol 
pp 

crowcroft differentiated services weighted proportional fair share tcp computer communication review 
ff floyd fall promoting congestion control internet ieee acm transactions networking august 
frs sally floyd sylvia ratnasamy scott shenker modifying tcp congestion control high speeds may 
url www icir org floyd notes html 
panos peter analysis method differential tcp service proceedings ieee globecom symposium global internet december rio de janeiro brazil 
gv vin extended analysis binary adjustment algorithms technical report tr department computer sciences university texas austin august 
url www cs utexas edu users pubs html 
hstcp highspeed tcp web page url www icir org floyd hstcp html 
amit jain sally floyd quick start tcp ip internet draft draft amit quick start txt progress 
tom kelly scalable tcp improving performance highspeed wide area networks february 
url 
eng cam ac uk scalable 
matt mathis raising internet mtu web page url www psc edu mathis mtu 
rfc jacobson braden borman tcp extensions high performance rfc may 
tcp draft url www internet edu 
tfrc mark handley jitendra padhye sally floyd joerg widmer tcp friendly rate control tfrc protocol specification internet draft draft ietf tfrc txt progress 
floyd experimental page draft floyd tcp highspeed february web ornl web page www csm ornl gov netperf web html 

security considerations proposal changes underlying security tcp 

iana considerations iana considerations regarding document 
tcp loss event rate steady state section gives number round trip times congestion events tcp flow byte packets function connection average throughput bps 
achieve average throughput tcp connection round trip time seconds requires average congestion window br segments 
steady state tcp average congestion window roughly sqrt segments 
equivalent lost event packets pw roundtrip times 
substituting loss event br round trip times 
example seconds bytes gives round trip times loss events 
table 
section gives table increase decrease parameters highspeed tcp default values low window high window high high decrease 
floyd experimental page draft floyd tcp highspeed february floyd experimental page draft floyd tcp highspeed february table parameters highspeed tcp 
table computed perl program floyd experimental page draft floyd tcp highspeed february top num num print print print num bw log num log log log aw num bw bw num aw printf num aw bw aw num table perl program computing parameters highspeed tcp 
exploring time converge fairness 
section gives perl program compute congestion window growth congestion avoidance 
floyd experimental page draft floyd tcp highspeed february top rtt print rtt hs window standard tcp window print rtt bw log log log log aw bw bw aw aw rtt printf rtt rtt aw rtt table perl program computing window congestion avoidance 
authors addresses sally floyd phone icir icsi center internet research email floyd icir org url www icir org floyd draft created august 
floyd experimental page 
