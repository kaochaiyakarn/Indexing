map estimation agreement hyper trees message passing linear programming approaches martin wainwright tommi jaakkola alan willsky eecs berkeley edu tommi ai mit edu willsky mit edu electrical engineering cs electrical engineering cs uc berkeley ca mit cambridge ma develop approach computing provably exact maximum posteriori map configurations subclass problems graphs cycles 
decomposing original problem convex combination tree structured problems obtain upper bound optimal value original problem log probability map assignment terms combined optimal values tree problems 
prove upper bound met equality tree problems share optimal configuration common 
important implication shared configuration map configuration original problem 
analyze methods attempting obtain tight upper bounds tree reweighted messagepassing algorithm related distinct max product min sum algorithm tree relaxed linear program lp derived lagrangian dual upper bounds 
discuss conditions govern relaxation tight case map configuration obtained 
analysis described generalizes naturally convex combinations hypertree structured distributions 
integer programming problems arise various fields including communication theory statistical physics error correcting coding 
problems formulated terms graphical models cost function corresponds graph structured probability distribution goal find maximum posteriori map configuration 
previous shown convex combinations tree structured distributions order upper bound log partition function 
show similar ideas derive upper bounds log probability map assignment 
cases bound tight met equality map configuration obtained 
propose analyze methods obtaining tight bound exact map assignment 
goal finding collection treestructured problems share common optimum led tree reweighted set message passing updates 
resulting algorithm similar standard max product algorithm attenuated max product updates proposed frey koetter differs certain key ways 
second approach exploit convexity upper bounds apply theory lagrangian duality 
show optimal upper bounds obtained solving linear program lp follows applying called tree relaxation 
way establishes connection approaches integer programming approximate dynamic programming methods message passing lp relaxations 
supported part muri daad aro onr afosr 
subsections provide background exponential families convex combinations 
section introduce basic form upper bounds log probability map assignment develop necessary sufficient conditions met equality 
section develop tree reweighted max product algorithms finding convex combination trees yield tight upper bound 
algorithm family fixed point satisfies key uniqueness condition specifies provably map optimal configuration 
section derive lagrangian dual upper bounds show linear program lp interpreted enforcing set tree constraints 
section explore conditions govern tightness resulting bounds 
conclude section discussion related extensions analysis 
notation set consider undirected simple graph 
vertex random variable values discrete space 

letters denote particular elements sample space random vector takes values cartesian product space xn 
exponential representation graph structured distribution 
index set denote collection potential functions defined cliques vector weights potential functions 
exponential family determined collection exp gibbs distributions 
minimal exponential representation functions linearly independent 
example minimal representation binary process pairwise potential functions usual ising model collection potentials 
index set analysis overcomplete representation indicator functions potentials st jk case index set consists union edge indices st jk 
interest maximum posteriori configuration arg max 
equivalently express map configuration solution integer program max xs st jk st jk maximum collection linear functions function convex terms key property subsequent development 
convex combinations trees particular parameter vector interested computing 
section show exploit convexity order derive upper bounds 
denote particular spanning tree denote set spanning trees 
spanning tree exponential parameter vector dimension respects structure explicit defined edge set zeros elements corresponding edges 
compactness notation denote full collection tree structured exponential parameter vectors 
order define convex combination require probability distribution spanning trees 
distribution define support denoted supp set trees assigns strictly positive probability 
sequel interested probability pr edge appears spanning tree chosen randomly shown vector edge appearance probabilities belong called spanning tree polytope 
assume edge belongs tree supp call valid distribution 
convex combination exponential parameter vectors defined weighted sum denote compactly 
particular importance collection admissible pairs valid distribution seen exist pairs 
example single cycle 
illustrate definitions consider binary vector node cycle distribution minimal ising form exp 
target distribution specified minimal parameter zeros represent fact possible spanning trees 
single cycle nodes 
convex combination distributions defined spanning tree approximate target distribution single cycle graph 
illustrated 
define set associated exponential parameters follows choosing uniform distribution 
trees edge 
basic form upper bounds describe basic form upper bounds studied 
set previous section upper bound follows applying jensen inequality pair focus spanning trees analysis applies generally acyclic subgraphs 
edge belonging trees quantity different 
yielding max wish understand upper bound tight met equality 
exponential parameter vector define collection optimal configurations opt notation proposition tightness bound 
bound equation tight intersection opt supp opt non empty 
exists configuration supp achieves maximum defining 
proof 
consider pair 
configuration attains maximum defining 
write difference rhs lhs equation follows supp term non negative equal zero belongs opt 
bound met equality achieves maximum defining trees supp 
consider different strategies obtaining tight upper bounds map configuration 
admissibility mutual agreement suppose spanning tree distribution find collection exponential parameters admissibility pair satisfies 
mutual agreement intersection opt configurations optimal tree problems non empty 
collection satisfying properties proposition guarantees configurations non empty intersection opt achieve maximum defining 
accordingly section iterative message passing technique attempting find collection lagrangian duality second approach minimize upper bound equation function collection exponential parameters 
particular consider constrained optimization problem min min max observe cost function linear combination convex functions convex function constraints linear 
show section problem finding tight upper bounds tackled lagrangian dual equation 
tight bounds equal max marginals pursuing approach specifically develop algorithm attempts find spanning tree distribution collection satisfies admissibility mutual agreement 
algorithm formulated terms reparameterization updates set message passing updates 
foundation development factorization tree structured distribution terms max marginals 
particular node associated single node max marginal defined maximum nodes graph max xs probability configuration constraint edge joint pairwise max marginal defined analogous manner maximum st max xs 
important fact tree structured distribution factorized terms max marginals follows st interpretation standard max product algorithm trees shown related computing alternative factorization distribution 
suppose node uniqueness condition holds uniqueness condition max marginal unique optimum case shown see vector map configuration tree structured distribution 
tree reweighted max product formulation tree reweighted max product method message passing algorithm fixed points specify collection tree exponential parameters satisfy admissibility condition 
defining feature associated tree distributions share common set st max marginals 
particular tree edge set distribution specified compactly subcollection st follows st constant independent long satisfies uniqueness condition configuration map configuration tree structured distribution 
mutual agreement trees conjunction admissibility implies map configuration 
valid satisfying define algorithm designed find requisite set max marginals sequence message passing operations 
edge ts message passed node node vector length element state notation value may change line line 
shorthand quantity st st similarly defined 
notation messages st specify set functions st follows exp vs vs st st vs vs ts ts vt vt st st st exp st st scalars st equations edge appearance probabilities associated spanning tree distribution defined section 
tree subcollection define tree structured distribution manner analogous equation 
expanding expectation log making definitions st prove lemma admissibility 
collection st defined set messages equations convex combination log equivalent log additive constant 
need ensure st consistent set max marginals tree distribution 
sufficient impose edge local consistency condition max st order update messages manner algorithm tree reweighted max product 

initialize messages st arbitrary positive real numbers 

iterations update messages follows ts max exp st st st vt vt st st definitions st message update equation show lemma consistency 
fixed point message update equation st defined equations respectively 
consistency condition equation satisfied 
message update equation similar standard attenuated max product updates differs important ways 
tree st edge case equation precisely equivalent ordinary max product update 
cycles impossible st edge updates equation differ critical ways 
weight st potential function st scaled inverse edge appearance probability st 
secondly neighbor incoming message vt scaled corresponding edge appearance probability vt 
lastly update message ts edge depends reverse direction message st edge 
despite features messages updated synchronous manner ordinary max product 
noted earlier possible perform reparameterization updates trees analogous described standard max product 
analysis fixed points related proved existence fixed points ordinary max product algorithm positive compatibility functions arbitrary graph 
proof adapted show algorithm fixed point conditions 
fixed point defines set pseudo max marginals equations 
formalize key property collection guaranteed design algorithm theorem exact map 
satisfies uniqueness condition configuration elements arg max xs map configuration 
proof 
lemma collection tree structured distributions specified equation admissible 
lemma implies max marginals st consistent 
uniqueness condition guarantees tree structured problems share common optimum proposition map optimal 
experiments far message updates equation suitably relaxed converged 
relaxed update means step new log message step size parameter 
date proved converge relaxed 
convergence problems breakdown algorithm appears stem primarily failure uniqueness condition discuss section 
lagrangian duality tree relaxation section approach problem minimizing upper bound formulated equation lagrangian dual 
dual linear program lp turns natural interpretation tree relaxation 
linear program marginal polytope calculating dual ideas integer programming order reformulate integer program max linear program 
order useful consider marginal distributions subsets random variables full collection collection potentials consists functions single nodes edges particular relevance single node marginals joint pairwise marginals probability distribution associated single node marginal node vector elements th element defined 
similar way define joint marginal distribution st st jk element jk st jk 
st denote full collection single node joint pairwise marginals 
interest set marginal vectors arise definitions underlying distribution 
marg denote set realizable marginal vectors 
seen marginal polytope linear polytope elements 
useful object gives rise alternative linear programming formulation integer program defining lemma 
function alternative representation max marg max marg st jk st jk proof 
maximization rewritten equivalent maximization distributions max max equation follows linearity expectation 
tree relaxation general complexity solving lp depends polynomially factors number constraints needed characterize constraint set see 
lp equation constraint set marginal polytope marg general graph cycles defined number inequalities exponential graph size 
difficulty exactly characterizing marg motivates idea imposing partial set restrictions obtaining outer bound 
elements marginal probabilities single node marginal probability satisfy normalization constraint xs 
addition joint marginal st enforce marginalization constraint xs st jk tree denote collection vectors st non negative real valued elements satisfy marginalization normalization constraints tree xs xs st jk 
choice notation motivated fact follows junction tree theorem tree marg tree general graph cycles tree strict superset marg 
reason call tree consistent vector 
natural relaxation linear program equation replace constraint set marg superset tree 
turns lagrangian dual problem precisely socalled tree relaxation proposition lagrangian dual 
lagrangian dual problem tree relaxation max tree max tree st jk st jk proof 
vector lagrange multipliers corresponding admissibility constraints 
notation form lagrangian associated problem denotes subcollection st lagrange multipliers corresponding tree dual function defined fixed lagrange multiplier vector infimum lagrangian function domain corresponds infimum greater 
supp vector belong linear polytope marg exist vector constant marg equality attained ii 
valid choice scaling positive number send term negative infinity 
infimum lagrangian marg trees supp 
edge belongs tree supp seen constraints imply domain dual function set tree 
marg definition implies difference non negative equal zero attains maximum defining 
infimum lagrangian yields expression tree relaxation equation 
suppose optimal solution dual problem equation integral components correspond marginal vector associated delta distribution fact belongs marginal polytope marg 
case upper bound tight configuration map optimal 
conditions governing tree agreement section consider conditions govern optimal bound tight map configuration obtained 
context tree reweighted max product algorithm lp tree relaxation approach offer complementary perspectives 
difficulties arise message passing approach fixed point defined message fixed point fails satisfy uniqueness condition 
case may longer possible specify configuration optimal tree structured problem 
specifically shown configuration optimal tree node optimality element achieve max edge optimality pair achieve max st uniqueness condition fails depending nature fixed point may may possible satisfy optimality conditions node edge 
example illustrates possibilities 
dot product equation involves minor abuse notation strictly speaking length indices tree shorter vector 
optimum linear program equation attained extreme point constraint set 
tree relaxed polytope tree subset extreme points integral components extreme point corresponds marginal vector defined delta distribution places mass single configuration 
optimum attained integral point bound tight underlying configuration map optimal 
hand optimum attained fractional extreme point tree illustrated example bound tight map configuration determined 
example 
consider node cycle illustrated 
define distribution binary vector indirect manner defining set pseudo panel 
observe construction ensures collection satisfies consistency condition lemma uniqueness condition fails node 
spanning trees graph collection defines tree structured distribution equation 
tree structured distributions define underlying distribution single cycle log log distribution places weight tree 
st 
failure tree agreement 
specification pseudo max marginals underlying problem log log 
case node optimal 
case configurations node optimal full graph 
case illustrated panel seen configurations satisfy node optimality conditions 
configurations map assignments 
lp marginal vectors corresponding delta functions optimal lp equation 
hand illustrated panel configuration optimal edges satisfy clearly impossible satisfy condition edges cycle fixed point specify map assignment 
lp context optimum equation attained fractional elements st th element matrix st represents marginal value st jk seen defined way belongs tree belong marg 
consequence upper bound loose map configuration determined 
course example deliberately constructed break relaxation 
noted shown related standard max product algorithm break uniqueness condition satisfied 
discussion demonstrated utility convex combinations tree structured distributions upper bounding log probability map configuration 
addition proposed approaches obtaining optimal upper bounds form 
developed family tree reweighted max product algorithms collection tree structured distributions terms common set max marginals 
satisfy key uniqueness condition upper bound tight map configuration obtained 
remains develop complete understanding convergence behavior algorithm relation lp relaxation 
secondly showed optimize upper bounds lagrangian dual turns tree relaxed linear program lp 
fact lp obtained examining zero temperature limit bethe free energy analyzed previous 
identify class binary problems pairwise interactions relaxation guaranteed tight open problem characterize class generally 
potentially valuable link tree relaxation described proposed flow lp relaxation turbo decoding discussed 
analysis upper bounds extended straightforward manner hypertrees higher width 
tree width hypertrees higher width natural generalization trees 
context hypertree reweighted forms generalized max product updates see yielding upper bounds tight specify exact map configurations 
linear programming side leads hierarchy lp relaxations original integer program hypertree constraints 
bertsekas 
nonlinear programming 
athena scientific belmont ma 
bertsimas 
linear optimization 
athena scientific belmont ma 
cowell dawid lauritzen spiegelhalter 
probablistic networks expert systems 
statistics engineering information science 
springer verlag 
laurent 
geometry cuts metric embeddings 
springer verlag new york 
feldman karger 
decoding turbo codes polynomial time provably error correcting performing linear programming 
symp 

comp 
science focs november 
appear 
feldman karger wainwright 
linear programming decoding turbo codes relation iterative approaches 
proc 
allerton conf 
communication control computing october 
appear 
freeman weiss 
optimality solutions max product belief propagation algorithm arbitrary graphs 
ieee trans 
info 
theory 
frey koetter 
exact inference attenuated max product algorithm 
advanced mean field methods theory practice 
mit press 
wainwright jaakkola willsky 
new class upper bounds log partition function 
proc 
uncertainty artificial intelligence volume august 
wainwright jaakkola willsky 
tree consistency bounds max product algorithm generalizations 
lids tech 
report mit available online ssg mit edu group shtml july 
