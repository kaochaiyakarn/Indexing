eurographics gross volume number submitted eurographics 
hierarchical heterogenous reactive agents real time applications gross departement computer science eth rich ch rich switzerland generic concept autonomous agents reactive behavior situation recognition real time environments 
approach facilitates behavior development specialization existing behavior types weighted multiple inheritance create new types 
additionally system allows generation hierarchical time semi individual group organizations specification recursive modulo patterns 
framework designed support creation large numbers secondary characters individual group behavior simulation environments game engines 
engine allows specification maximal time run order guarantee minimal constant frame rate 
demonstrate usefulness approach various examples individuals 

secondary characters games lack personality differ appearance 
reason underlying behavior patterns 
propose system simplifies creation new individuals allowing multiple inheritance basic behaviors build complex individuals simple ones shown top 
allows easily define specialized characters 
characters manifest subtle differences order display personality weight inheritance magnify scale probability recognizing certain situations 
compose different types agents building special ones type 
order generate individual knowledge randomized attributes personalize individuals type 
furthermore allow building collective behavior introducing attributes containing agents 
enables actions communicate collaborate single agent instances informing members group event querying leaders position follow 
shown middle 
type definitions group leader base follow young father mother kid father mother default kid follow follow group instance family count generating new types grouping instantiation group including hierarchy 
building groups system easily done defining group patterns instantiated specified count agents depicted bottom 
permit specialization group simple rules individual father modulo rules second individual male female recursive definitions group consists leader followers leader similar group 
instantiation system generates specified number instances gross hierarchical heterogenous reactive agents real time applications predefined types agent 
mentioned attributes automatically updated definition real group allowing usage generic group behavior unknown organized group 
system especially designed game engines add large number secondary characters individual group reactive behavior 
support constant minimal frame rates independent number simulated agents engine offers specify maximal amount time run 
engine simulates agents possible round robin scheduling algorithm returns control 

related starting seminal reynolds number publications behavior modeling generate computer animations increased substantially :10.1.1.48.7069
approaches concept autonomous agents instance perception behavior effectors 
commonly approaches try generate artificial life emerges small predefined set behavior rules 
reactive agents internal states primary approach real time environments easy implement fast 
expect games sims similar approaches behavior individuals 
individual behavior including movement locomotion researched different areas mainly animals 
motion dynamics snakes worms miller followed terzopoulos movements fish tu terzopoulos physics locomotion perception fish terzopoulos perception learning fish 
bio inspired modeling employed commercial computer game creatures create simple pets play 
cognitive modeling funge introduces cognitive modeling language easily generate sophisticated behavior individuals knowledge representation allows reasoning planning addition reactive behavior 
publications deal learning movements learning behavior emotions motivations beliefs obligations intentions desires goal oriented behavior real time environments 
limitation behaviors hard wired especially designed specific individual 
perlin perlin developed general framework scripting interactive actors 
introduced layered behavior model create complex behaviors 
system model behavior hierarchical inheritance specialize instances composing basic behavior types 
subtle differences achieved defining multiple different base components 
hierarchical sen sors actions contexts introduced atkin allow complex behaviors group engagement 
group behavior thoroughly investigated 
thalmann hierarchical model simulating virtual human crowds 
approach presents weighted multiple inheritance allows definition convenient complex heterogenous group behavior 
section gives overview concept core components described section 
section presents agents generated 

system overview system comprises main components depicted 
game engine acts main controller framework 
second agent controlled agent engine defined sense think act cycle agent 
difference agents arises associated knowledge base components agent centric 
common knowledge base third main component system 
stores entire knowledge agent contain shared objects provides access agents enabling collaborative behavior 
knowledge base components agent representations sensors situations including actions conditions attributes 
sensors allowed query game engine gather information sensor interface actions effector interface change values orientation actual state walking running 
game engine agent engine controller control sensor interface effector interface agents common knowledge base sensors situations conditions attributes actions core components agent system 
engine intended support game simulation lowering frame rate value 
allow system run milliseconds world simulation cycle return control 
primarily expect stay minimal frame rate independent underlying hardware resources short simulation cycles independent number agents simulated agent engine 
submitted eurographics submitted eurographics 
gross hierarchical heterogenous reactive agents real time applications achieve increase quality behavior faster hardware keeping frame rate 

core components section introduce core modules system 
start agent engine explaining main components single agent 
describe knowledge base components 

agent engine agent engine main controller agents 
run engine receives time frame allowed simulate number agents depending time consumption 
controller maintains list agents decides agents activated run 
run short time cycle assume agent activated run 
currently round robin controller traverses agents regularly 
advanced scheme take account agents sight large distance receive computation time ones close user camera 

agents agent responsible simulation instance 
runs cycle independent associated knowledge instance 
call agent senses environment traversing associated sensors gather agent specific information example nearest neighbor position agent 
sensor gathers information updates values knowledge base agent available 
sensors predefined parametrized attributes 
subsequently situation awareness module determine agents current situation traversing associated situations 
situation state determined internal external knowledge 
situation probability indicating needs activation 
checks associated conditions conditions return true determines probability situation 
situation provide method determine probability current knowledge agent 
situation returning highest value selected asked action take 
situation associated actions 
best matching action selected carried inserted action queue 
action queue offers different methods insert actions reactions normal actions 
displayed 
reaction executed fast possible place top queue 
actions example path finding actions placed insert reaction action inserting action 
queue order maintain sequential order 
execution system fetches top item queue action 
action provides methods initialization execution termination 
additionally set preconditions tested activated 
action ends postconditions reached duration exceeded 
gets removed action queue 

common knowledge base common knowledge base central part system 
stores knowledge agents large container 
knowledge base provides basic types sensors situations actions conditions attributes 
type factory generate new instances desired type 
additionally created container type store number instances type 
type attribute container add number attributes type 
currently support attributes store integer float boolean vector string values 
support random values 
user specify minimal maximal values probability case boolean type 
attribute evaluation type determines attribute evaluated initialization time value requested 
user re evaluate random attributes demand attribute evaluated 
attributes sensors attributes queue reaction action action action example agent 
sensors perceive situations recognize 
situations gross hierarchical heterogenous reactive agents real time applications distance visible attributes conditions tiger attributes situation actions example situation simple agent 
access conditions actions 
agent engine associated instance works container knowledge instance shown 
consists sensors perceive environment attributes certain situations recognized 
situation recognized associated conditions evaluate hold 
illustrates situation multiple actions attributes 
actions selected situation knowledge agent gets inserted action queue 
action executed preconditions tested 
ends duration exceeded postconditions fulfilled 
gives example action 
currently support hierarchical actions hierarchical situations 
little effort enhance action system support 
enable sensing environment executing actions knowledge base sensor interface provides hooks global simulation 
hand environment provide methods gather required information instance position orientation velocity neighborhood information 
hand effector interface set values orientation velocity 
expect simulation position updated physically correct velocity orientation agent set 

agent generation section presents agent generation process preprocessing stage instances created linked 
descriptions agent definition language 
construction set kids complex buildings built simple bricks create sophisticated behavior combining simple basic components 

definition agent instances agent definition language uses xml lets user compose new types behavior instances generate wait attack flee preconditions distance min attributes enemy attributes flee action postconditions distance visible duration attributes action needs preconditions postconditions duration 
groups instances 
allow script new behavior language aforementioned concept attribute containers user easily attributes parametrize knowledge linked agent 
assumes set generic behavior patterns individualized attributes 
agent instance single agent real 
real agents get linked agent engine simulation object agents just represent templates agent instances intended activated time 
instance inherit knowledge multiple parents create new type agent specifying knowledge base components create 
intention create agents different behavior inheritance weighted adjust behavior new instance manipulating evaluation values situations 
inheritance return value multiplied weight 
easily define basic behavior agents compose new agents thoroughly weighting basic agents new 
illustrates process 
situations continuous return function clamped values 
automatically done situation awareness module run time 
build collaborative behavior introduce agent groups 
agent groups represent instance group instance parent group members 
single instance agent group provide powerful template 
groups provide templates instantiation group members 
non groups generate explicitly specified number children 
look simple groups 
group defined similar agent instance difference specify instances group 
specify additional attributes situations sensors enhance instances inheriting knowledge agents described section single submitted eurographics add situations add actions situations add sensors set attributes knowledge add knowledge change attributes submitted eurographics 
gross hierarchical heterogenous reactive agents real time applications add situations add actions situations add sensors set attributes knowledge add edge write attributes 
add situations add actions situations add sensors set attributes knowl mul ult situ tu tag get important portant po composing agents building blocks simple basic behavior 
instances 
additionally single instance individually 
example specify family adding father male adult behavior specify knowledge behavior adding instance inherits female adult behavior wife 
group specify additional instance inherit child behavior 
stage realize pattern instance count engine generate parents children depicted 
group agent add family behavior example grouping lunch time 
group inform instances gather family house 
enhance group building process introduce modulo rules easily specify regular patterns large groups 
specify example second member group male female tenth able certain task 
members group consecutively numbered apply rules easily creation 
modulo specification create new agent specific behavior 
generation real instances check modulo group matching current counter copy modulo groups knowledge current instance shown 
instance agenttype specializations instance agenttype specializations agenttype specializations group agenttype agenttype agenttype agenttype agenttype simple group specializations instantiation 
agent ag instance mod agenttype instance mod agenttype instance mod agenttype instance mod agenttype modulo group instantiation 
step organized groups recursive definitions allowed groups 
instances group inherit knowledge group considered recursive 
generation instance inherits knowledge group belongs able generate instances sub group 
example group defines instances inherit group concrete instantiation group members generate group 

single instance generation order generate new instance single agent steps carried including agents agent definition create new agent unique id agent engine group agenttype agenttype agenttype agenttype agenttype agenttype agenttype agenttype default parent construct base definition contains default parent clone clone add knowledge parents weight parent definition add parent parent weight instance agenttype instance agenttype instance agenttype group recursive group instantiation 
agenttype agenttype agenttype agenttype agenttype agenttype agenttype agenttype agenttype 
gross hierarchical heterogenous reactive agents real time applications load init attributes sensors situations actions conditions knowledge knowledge load knowledge init add knowledge base kb add add agent agent engine engine return steps repeated agent instance 
agents removed engine preprocessing steps 

group instance generation generating group different real groups 
groups prepare instances generate real instance group group members 
independent number instances concrete instantiation 
pseudo code shows preparation instances group definition create group representative parent members group group definition create specialized member templates specification group definition spec specification kb add spec create modulo rule templates modulo rule group definition modulo modulo rule group modulo rule kb add modulo create default template default group definition contains default specification default default specification default group definition kb add default kb add group procedure generates instance possible base type group 
includes group specifications modulo rules mandatory default instance 
added knowledge base available instantiation group 
steps create non group similar groups specify knowledge 
count instances denoted explicitly 
group representation instance generated 
member generated loading globally specified settings overwriting settings specified instances 
parent modulo rules appropriate rules specific instance overwrite set 
case current instance specified explicitly settings applied final step 
member stores group representation parent 
recursive groups id parent calculated number recursive agents group template 
hierarchy defined recursive pattern maintained 
case instance parent access modify knowledge directly 

group behavior simplify group behavior introduce attribute stores agent agent group 
example denote leading instance 
easily get access knowledge instance decisions depend information 
name target specified definition gets updated instantiation group 
replaced name group member originally specified target 
members recursive group members recursive group set automatically instance hierarchy tree 
easy implement example leader follower situation uses leading instance allowed distance path distance attributes 
situation illustrated including actions attributes 
allowed distance exceeded agent move directly leader point neighborhood leader pos 
leader moves agent automatically adapt direction 
avoid instance loses contact leader due obstacle 
distance exceeds path distance agent path planning unit find correct path follow 
path adapt leaders positional changes necessary find way deadlock situation 
additionally instance inform leading instance situation slow catch 
members group follow group instance keep automatically 
reduces path planning costs leader goto leader pos leader pos leader follower situation attributes actions 
submitted eurographics submitted eurographics 
gross hierarchical heterogenous reactive agents real time applications group minimum group regularly plan path 
automatically follow leader need plan path leader far away 

results demonstrate usefulness approach various examples showing complex behavior created simple base definitions 
assign time run ms simulation step 
experiments computed pentium iv ghz pc gb main memory geforce graphics accelerator 
seen accompanying video simulation features frame rates hz agents 
test scene hilly terrain lakes serve obstacles depicted 
agents examples inherit base behavior prohibits walk lakes leave terrain 
examples coded lines xml definition 
shows group specialized members created modulo rules 
rules divide group parts color coded red blue 
furthermore color third member overwritten white 
specialization implement generic family 
family members include father mother number children illustrated 
employed models render adult animals behavior different 
highlighted color codes 
larger herd shown 
example created multilevel hierarchy recursively defining group including leader follower behavior 
color codes reveal type agent behavior 
red agents leaders different levels blue ones followers particular leader 
due multilevel hierarchy red leaders lower level followers leaders higher levels 
leaders followers group instance visible 
thick black line indicates path group instance thin represents actual trace 
match exactly adapt orientation path slope terrain 
case path planning action computed guide entire group goal 
flat unorganized group hierarchy individual plan path 
path planning computationally expensive hierarchical approach efficient 
path computation example costs ms group member plans path independently computational costs amount ms takes full engine cycles path planning ms time limitation compared ms achieve method 
figures show large scenario approximately agents featuring different types behavior far 
thirds agents simulated assigned ms time run frame rate lies hz 
real time performance achievable flat unstructured simulation 
part video presents real time animation basic behavior independent animals moving 
avoid lakes border region terrain 
behavior defined simple modulo rules 
agents inherit base type half higher weight water avoidance situation 
additionally velocity attribute different subgroups 
animations show scenarios figures 
example number agents exceeds controller time limit 
result agents simulated single run 
detect substantial loss quality resulting behavior 

developed framework autonomous agents reactive behavior 
supports behavior definition wide range different behaviors weighted multiple inheritance specification 
system provides mechanisms group behavior group definitions 
collective behavior enabled automatically updating agents example leader 
groups defined specifying individual instances separately creating default instances 
modulo patterns allow enhance behavior parts group 
additionally recursive definitions hierarchically organize groups 
specification maximal time run framework guarantees minimal constant frame rates hundreds agents 
believe concept especially useful interactive simulations involving multiple agents games 
plan investigate sophisticated scheduling algorithms 
addition time dependent attributes interval epistemic fluents allow enhance behaviors 

atkin king westbrook 
cohen 
hierarchical agent control framework defining agent behavior proceedings fifth international conference autonomous agents pp 

acm press 
lieberherr mezini 
modeling behavior personalities international conference knowledge software engineering 
gross hierarchical heterogenous reactive agents real time applications 
blumberg downie ivanov berlin johnson tomlinson 
integrated learning interactive synthetic characters proceedings th annual conference computer graphics interactive techniques pp 

acm press 

dastani huang der van torre 
boid architecture conflicts beliefs obligations intentions desires proceedings fifth international conference autonomous agents pp 

acm press 

canamero 
modeling motivations emotions basis intelligent behavior johnson editor proceedings international conference autonomous agents new york ny pp 

acm press 

funge tu terzopoulos 
cognitive modeling knowledge reasoning planning intelligent characters proceedings th annual conference computer graphics interactive techniques pp 

acm press addison wesley publishing 

grand cliff malhotra 
creatures artificial life autonomous software agents home entertainment proceedings international conference autonomous agents pp 

acm press 

gratch marsella 
tears fears modeling emotions emotional behaviors synthetic agents proceedings fifth international conference autonomous agents pp 

acm press 

grzeszczuk terzopoulos 
automated learning muscle actuated locomotion control abstraction proceedings nd annual conference computer graphics interactive techniques pp 

acm press 

grzeszczuk terzopoulos hinton 
fast neural network emulation control physics models proceedings th annual conference computer graphics interactive techniques pp 

acm press 


real time goal oriented computer game agents 

isbell shelton kearns singh stone 
social reinforcement learning agent 

miller 
motion dynamics snakes worms proceedings th annual conference computer graphics interactive techniques pp 

acm press 

thalmann 
model human crowd behavior proceedings workshop computer animation simulation eurographics 

thalmann 
hierarchical model real time simulation virtual human crowds ieee transactions visualization computer graphics 

reynolds 
flocks herds schools distributed behavioral model proceedings th annual conference computer graphics interactive techniques pp 

acm press 

russel norvig 
artificial intelligence modern approach 
prenticehall 


electronic arts 
ea 
www com 

sims 
evolving virtual creatures proceedings st annual conference computer graphics interactive techniques pp 

acm press 

sims 
electronic arts 
ea 
ea com 

terzopoulos grzeszczuk 
perception learning artificial animals proceedings fifth international conference synthesis simulation living systems pp 


tu terzopoulos 
artificial fishes physics locomotion perception behavior computer graphics 

thalmann 
crowd simulation interactive virtual environments vr training systems proceedings eurographics workshop computer animation simulation pp 

springer verlag 

wilson 
artificial emotion engine 


yoon blumberg schneider 
motivation driven learning interactive synthetic characters proceedings fourth international conference autonomous agents pp 

acm press 
submitted eurographics submitted eurographics 
gross hierarchical heterogenous reactive agents real time applications test scene hilly terrain lakes 
agents inherit lake avoidance basic behavior 
close family parents children 
behavior forces herd 
recursively defined group hierarchical leader follower behavior members 
full scene approximately agents complex behavior 
group specialized group members modulo rules 
colors illustrate various types agents 
family color codes 
father leader red mother blue children yellow 
group path black 
leaders red followers blue 
scene 
groups individuals color coded illustrate diversity 
