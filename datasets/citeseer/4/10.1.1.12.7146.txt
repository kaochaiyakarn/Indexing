chatty web emergent semantics gossiping karl aberer philippe mauroux manfred hauswirth cole polytechnique rale de lausanne epfl ch lausanne switzerland karl aberer philippe mauroux manfred hauswirth epfl ch describes novel approach obtaining semantic interoperability data sources bottom semiautomatic manner relying pre existing global semantic models 
assume large amounts data exist organized annotated local schemas 
seeing semantics form agreement approach enables participating data sources incrementally develop global agreement evolutionary completely decentralized process solely relies pairwise local interactions participants provide translations schemas interested learn translations routing queries gossiping 
support participants assessing semantic quality achieved agreements develop formal framework takes account syntactic semantic criteria 
assessment process incremental quality ratings adjusted operation system 
ultimately process results global agreement semantics participants understand 
discuss strategies efficiently find translations provide results case study justify claims 
approach applies system provides communication infrastructure existing websites databases decentralized systems systems offers opportunity study semantic interoperability global phenomenon network information sharing parties 
categories subject descriptors information systems database management heterogeneous databases data translation general terms algorithms management theory keywords semantic integration semantic agreements self organization supported part national competence center research mobile information communication systems mics center supported swiss national science foundation number 
copyright held author owner 
www may budapest hungary 
acm 

success peer peer systems initiatives create semantic web emphasized key problem information systems lack semantic interoperability 
semantic interoperability crucial element making distributed information systems usable 
prerequisite structured distributed search data exchange provides foundations higher level web services processing 
example technologies currently place file sharing systems impose simple semantic structure priori napster kazaa leave burden semantic annotation user address issue semantics current web gnutella freenet simply support semantically unstructured data representation leave burden making sense skills user providing pseudo structured file names enterprise mine field encapsulate simple semantics 
classical attempts information resources semantically interoperable particular domain database integration scale global information systems systems 
despite large number approaches concepts federated databases mediator concept ontology information integration approaches practically engineered solutions frequently hard coded require substantial support human experts 
typical example systems domain specific portals citeseer www 
researchindex com publication data srs srs ebi ac uk biology com commerce 
integrate data sources internet store central warehouse 
data converted common schema usually simple medium complexity 
approach adopts simple form wrapper mediator architecture typically requires substantial development effort automatic semi automatic generation mappings data sources global schema 
context semantic web major effort devoted provision machine processable semantics expressed meta models rdf oil owl daml oil shared ontologies 
approaches rely commonly agreed ontologies existing information sources related proper annotation 
extremely important development success heavily rely wide adoption common ontologies schemas 
advent systems introduces dif ferent view problem semantic interoperability social perspective relies self organization heavily 
argue see emerging paradigm opportunity improve semantic interoperability threat particular revealing new possibilities semantic agreements achieved 
motivated look problem different perspective inspired approach 
underlying infrastructure federated databases web sites systems regard systems graphs interconnected data sources 
simplicity constraining general applicability concepts denote data sources peers 
peer offers data organized schema expressed data model relational xml rdf 
peers communication supported suitable protocols architectures example jxta 
thing observe semantic interoperability form agreement 
approaches semantic web represent agreement essentially explicitly shared ontology 
approach explicit representation globally shared agreement required agreements implicit result way social mechanism works 
impose modest requirement establishing agreements assuming existence local agreements provided mappings different schemas agreements established manner 
agreements established manual semiautomatic way near expect able fully automate process establishing semantic mappings locally 
rich set tools getting available support :10.1.1.16.700
establishing local agreements challenging task establishing global agreements means globally agreed schemas shared ontologies 
agreements exist establish ondemand relationships schemas different information systems sufficient satisfy information processing needs distributed search 
briefly highlight application scenarios convinced obvious applicability information exchange web enabling semantic interoperability bottom way driven participants valid applicable meta data support applications support existing databases 
imposing global schema describing data systems impossible due decentralization properties systems 
users follow global schema 
approach fit users introduce schemas best meet requirements 
exchanging translations schemas peers incrementally come implicit consensus schema gradually improves global search capabilities system 
approach orthogonal existing systems introduced basically 
situation somewhat similar existing loosely coupled databases 
large collections data exist example biological genomic databases 
database predefined schema possibly translations may defined schemas ex ample data import export facilities 
global search propagation queries set databases usually provided feature exists usually done ad hoc non systematic way reusable automated 
complex database schemas get schemas partially overlap harder gets increasingly generate translations automatically 
approach build principle gossiping successfully applied creating useful global behaviors systems 
system search requests routed network interconnected information systems 
extend operation systems follows different schemas involved local mappings distribute search request semantic domains 
simplicity constraining general applicability limit discussions processing search requests 
quality search results gossiping approach depends clearly quality local mappings mapping graph 
fundamental assumptions mappings may incorrect 
agreement construction mechanisms try determine mappings trusted take account guide search process 
main contribution identify different methods applied establish global forms agreement starting graph local mappings schemas 
elaborate details methods simple data model expressive cover practical cases 
methods introduced particular 
syntactic analysis search queries mappings applied order determine potential information loss incurred transformation 

semantic analysis composite mappings cycles mapping graph order determine level agreement peers achieve cycle 

semantic analysis search results obtained composite mappings preservation data dependencies 
information obtained applying different analyses direct searches network semantically heterogeneous information sources top network 
provide results initial experiments performed setting 
believe radically new approach semantic interoperability shifts attention problems inherently difficult solve automated manner global level humans interpret information models terms real world concepts problem leaves vast opportunities automated processing increasing value existing information sources processing existing local semantic relationships order raise level local global semantic interoperability 
remaining problem establishing semantic interoperability local level easier tackle approach place 

overview delving technical details section pro vides informal overview approach 
assume exists communication facility participants enables sending receiving information queries data schema information 
assumption constrain approach emphasizes independent system applied 
underlying system system federated database system web system information sources communicating communication protocol 
denote participants peers abstracting concrete underlying system 
system groups peers may agreed common semantics common schema 
denote groups semantic neighborhoods 
size neighborhood may range single individual peer number 
peers located disjoint neighborhoods meet exchange schemas provide mappings peers meet exchange information depends underlying system concern approach 
assume skilled experts supported appropriate mapping tools provide mappings 
direction mapping node providing mapping necessarily correlated 
instance nodes provide mapping schema schema may exchange mapping discretion 
life time system peer possibility learn existing mappings add new ones 
means directed graph mappings shown built neighborhoods normal operation system query processing forwarding system 
mapping graph semantic neighborhoods mapping graph interesting properties existing mappings ability learn existing mappings new mappings added automatically means transitivity example graph cycles 
means propagate queries nodes direct translation link exists 
call semantic gossiping 
gives possibility assess degree semantic agreement cycle measure quality translations degree semantic agreement community 
system expect peers perform task receiving query peer decide forward query set criteria introduced receiving results feedback cycle analyze quality results schema data level adjust criteria accordingly update view semantic agreement 
criteria assess quality translations turn measure semantic agreement categorized intrinsic extrinsic 
intrinsic criteria discussed section relate processed query required translation 
introduce notion syntactic similarity analyze extent query preserved translation 
extrinsic criteria discussed section relate degree agreement achieved different peers specific translations 
degrees agreement may computed feedback mechanisms cycles appearing translation graph results returned different peers 
means peer locally obtain returned queries data multiple cycles 
case disagreement detected wrong attribute mapping schema level violation constraint data level peer suspect mappings involved cycle incorrect including mapping propagate query 
agreement detected clear accidentally result compensating mapping errors cycle 
analyses required assess probable sources errors cycles extent mapping trusted mappings routing decisions 
global level view problem follows translations domains semantic homogeneity schemas form directed graph 
directed graph find cycles 
cycle allows return query originator turn analysis described 
criteria applied attribute basis transformed queries results feature vector vector encompassing outcome criterion attributes concerned 
decision forward query translation link feature vectors 
details query forwarding process provided section 
assuming peers implement approach expect network converge state query forwarded peers understanding correct mappings increasingly reinforced adapting hop forwarding behaviors peers 
implicitly state global agreement semantics different schemas reached 
illustrated case study section 
model data model assume peer maintaining database dbp schema sp 
peers able identify schema explicitly storing keeping pseudo unique schema identifier obtained example hashing 
schema consists single relational table data peer stores consists set tuples 
tn type 
attributes complex data types null values possible 
consider sophisticated data models avoid discussion main ideas technicalities related mastering complex data models 
practical applications particular scientific databases exactly type simplistic data model introduced meta data level 
assume integrity constraints known schema table terms key constraints uniqueness functional dependencies attributes 
peers answer queries database 
result query denoted dbp 
query language querying transforming databases 
query language consists basic relational algebra operators care practical encoding sql xquery 
relational operators require selection 
ak list attribute names predicate attributes standard atomic predicates respective datatypes 
ak 
projection list attribute names 
ak 
mapping list functions form 
ak 
ak attribute names occurring function specific datatypes attributes 
ak 
special case renaming attribute 
assume queries evaluated database irrespective schema 
predicates containing attributes evaluated schema ignored 
projection attributes current schema return null value 
mappings applied attributes return null values 
network model consider set peers peer basic communication mechanism allows establish connection peers 
loss generality assume gnutella protocol 
peers send ping messages receive pong messages order learn network structure 
extension gnutella protocol peers send schema identifier part pong message 
peer maintains neighborhood selected peers identified pong messages 
peers neighborhood distinguished share schema ne different schema nd shown 
tp tp network model conventions xpath xquery additional mechanisms dropping queries 
peer includes peer different schema neighborhood knows translation queries schema queries foreign schema 
query translation operator tp query qt takes data structured schema sp transforms data structured schema sp 
tp property tp qp dbp qp qt dbp assume transformations mapping operator followed projection attributes preserved 
qt form qt dbp dbp furthermore assume transformation query normalized follows attribute preserved occurs mapping operator identity mapping simplifies subsequent analysis 
note multiple transformations may applied single query iteratively tn 

query translations may implemented easily various mechanisms example xquery done case study section 
queries issued peer query message 
query message contains query identifier id potentially transformed query query message originator translation trace keep track translations performed 
subsequent sections extend contents query message order implement intelligent control query forwarding 
basic query message format query id translation trace list pairs sp pto keeping track peers having sent request translation link peers having received translation link pto respective schema identifiers sp 
call sender pto receiver 
translation link record sender recipient translation query forwarded transformation peers sharing schema 

syntactic similarity intrinsic criterion measure degree similarity queries context original query transformed query introduce notion syntactic similarity 
note high syntactic similarity terms attributes lost translation ensure forwarding query useful conversely low syntactic similarity implies useful forward query 
suppose query generic form selection projection mapping query ap fa db list attributes selection predicates ap list attributes projection fa list functions applied 
loss generality assume query normalized attributes required ap computed functions fa simplify subsequent analysis 
transformed query form true multiple transformations normalization db ap fa db occur attributes longer available transformation applied happen attribute needed derivation new attribute means functions fa required ap missing occurring analyze attributes exactly needed order properly evaluate query define att 
ak 
ak fa similarly att 
ak ap 
ak fa transformation define source attribute fa 
ak 
ak 
informally tells attribute preserved transformation define operation att follows 
ak att 
ak att att 
definition extends naturally multiple transformation 
order define tn 
att 
simply apply definition tn 
att 
att 
definitions analogous att 
tn 
att 
allows determine required attributes evaluating queries disposal applying transformations 
tn 
definitions evaluated locally transformation step iterative manner 
information define syntactic similarity transformed query original query 
decision importance attributes query dependent 
issues consider 
attributes preserved 
atomic predicates correctly evaluated atomic predicates simply dropped case 
depending selectivity predicate harmful different degrees 
capture calculating value fv attribute ai ap follows ai ai tn 
att 
fv fv selectivity ranging interval high values indicating highly selective attributes attributes predicates select small proportion database attribute ai :10.1.1.17.2221
values fv ai ap intro duce feature vector transformed query tn 

characterizing syntactic similarity respect selection operator fv 
fv ak derive syntactic similarity original query transformed query selection feature vector user defined weight vector wa 
ai ap pondering importance attributes fv fv 
ak 
value normalized interval :10.1.1.17.2221
originally similarity decrease proportionally relative weight selectivity attribute lost selection operator reaches attributes lost 

attributes ap af 
results may incomplete erroneous due loss key attributes example 
method selection propose measure attribute ai ai tn 
att 
fv fv 
feature vector syntactic similarity projection operator fv 
fv ak similarity decreases number translations applied query reaches projection attributes lost 

semantic similarity intrinsic measure syntactic similarity assumption query translations semantically correct general case 
better way view semantics consider agreement peers 
peers agree meaning schemas generate compatible translations 
basic observation derive extrinsic measures semantic similarity 
measures allow assess quality attributes preserved translation 
introduce mechanisms deriving quality translation 
mechanism analyzing fidelity translations schema level analyzing quality correspondences query results obtained data level 
cycle analysis mechanism exploit protocol property detects cycles soon query semantic domain traversed see section exact algorithm 
cycle starts peer transmitting query second peer translation link see 
cycle tn feedback mechanism hops query sent peer pn sharing schema detects cycle informs 
returning query qn form qn may analyze happened attributes 
ak originally 
attempt check composed mapping identity approach propose appears practical 
differentiate cases case ai ai means ai maintained cycle 
usually indicates peers cycle agree meaning attribute 
observation increases confidence correctness mapping 
case ai means cycle representation ai 
ai part common semantics 
leaves confidence mapping unchanged 
case previous cases occurs ai aj indicates semantic confusion cycle 
subcases occur depending happens aj 
lowers confidence mapping 
derive heuristics assess correctness translation different cycle messages received 
consider translation cycle ci composed ci translation links 
attribute basis ci may result positive feedback case neutral feedback case rest analysis taken account syntactic similarity negative feedback case 
denote probability translation foreign translation 
tn wrong attribute question 
considering foreign error probabilities independent identically distributed random variables probability having foreign translation error cycle compensating errors series independent translation errors resulting correct mapping may occur cycle foreign links noticed final result qn disposal 
assuming correct denoting possi bly high probability errors compensated probability cycle positive ci assumptions probability cycle negative ci 
similarly assume incorrect probability cycle respectively negative positive ci ci 
combining equations likelihood receiving set cycles 
ck positive ci negative ci 
ck ci ci ci ci ci ci integrate tend zero order get likelihood translation semantically correct incorrect respectively lim 
ck lim 
ck define variable relative degree correctness translation analysis may performed outgoing link attribute independently resulting series values indicating likelihood translation tj correct attribute ai 
examples calculations section 
preceding section define feature vector similarity value capture semantic losses translation links 
suppose peer pk issues query ap fa db translation link tk pk computes feature vector cycle messages received follows tk fv 
fv ak take account density functions priori knowledge variables 
feature values fv ai defined attribute ai ap fv ai tk values updated iteratively multiplying probabilities semantic domain traversed 
forwarding transformed query link tk peer pk updates value fv feature vector ai received transformed query way fv ai fv ai fv ai tk values receive significant feedback representation ai cycle message received far evaluated 
semantic similarity associated vector value starts semantic domain query originates decreases query traverses semantically heterogeneous domains 
result analysis second mechanism analyzing semantic quality translation analysis results returned 
assume peers agree semantics schema observe data dependencies 
functional dependency known peers analyze values dependent attributes match 
percentage matches gives degree fidelity put attributes involved functional dependency 
peers compare data objects received translation link data objects store receive non translation links received peers ne 
precisely consider attributes ai aj schema sp 
suppose ai aj tied functional dependency ai aj value val ai ai received query responses neighbor peers nd tries find tuples sharing val ai database returned tuples coming peers ne 
common occurrences determines tuples peers nd satisfy functional dependency 
peer maintain attribute ai outgoing translation link tj fidelity value keeping track proportion tuples received link satisfying functional dependency attributes ai common tuples satisfying common tuples consider translations probabilities respectively independent probability correct ab 
called confidence measure data mining terminology 
assuming queries properly processed properly distributed attribute fidelity eventually converges degree compatibility databases percentage data objects match dependent attributes matching keys functional dependency 
way similar defined cycles define new feature vector values tj fv 
fv ak feature values fv defined attribute ai ap fv tj evaluate missing values update vectors iteratively fv fv fv tk 
associated semantic similarity expected value starts semantic domain query originates approaches query traverses semantically heterogeneous domains 

gossiping algorithm point measures evaluating losses due translations 
values decide worth forwarding query foreign semantic domain 
require creator query attach user defined generated values query issues weights pondering importance attributes query respective selectivity selection attributes sel minimal values smin similarity measures transformed query deteriorated longer considered equivalent original query 
extend format query message include values iteratively updated feature vectors query id sel smin 
reception query message require peer perform series tasks 
detect semantic cycles 
check query received 
case local neighborhood received query forward local neighborhood 
return potential results outgoing translation links 
apply translation query 
update similarity measures transformed query 
perform test feature vectors similar vi evaluates vi vi smin semantic similarity greater equal specified minimal value 
forward query link similar tests succeed evaluate 
algorithm ensures queries forwarded sufficiently large set peers capable rendering meaningful feedback flooding entire network 

case study experiments conducted approach 
section presents case study detailing aforementioned heuristics may deployed concrete setting 
people laboratory asked design simple xml document containing project metadata 
outcome voluntary imprecise task definition collection structured documents lacking common semantics overlapping partially subset embraced meta data name project start date 
viewing documents distinct semantic domains decentralized setting produced random graph connecting different domains series translation links resulting topology depicted 
translations formulated xquery expressions way strictly adhere principles stipulated see section 
example presents different documents simple query translation translation expression 
providing authors required documents asked write translations link departing domain pa asked provide translation pb pc pd 
ipsi xq xquery libraries xerces xml parser built query translator capable handling forwarding queries gossiping algorithm 
focus single node pa query issued pa obtain titles different projects query project project xml return title project title title note weight selectivity values attached query matter single attribute concerned 
consider rest study evaluates selection attribute defined title acronym title title title title title name name title title title name title title title name name functional dependency 
minimal values set 
zoran project xml pr jie project title jie project title return return start duration start start start duration start start zoran project jie project title project title name jie project name acronym mp acronym duration level diploma level start start location epfl location lab lsir lab duration institute iif institute jie project xml team return faculty faculty member member zoran project length length member member title name title benefits benefits acronym acronym team report report duration zoran project jie project start start translation mechanism domains representation title project usually referred name title see translations attribute title represented top link pc considers mere id identifying projects 
gossiping algorithm pa attempts transmit query direct neighbors pb pc pd pb pd turn forward query nodes pc fact receive query pc representation title projection attribute lost translation process pa pc lowering 
examine semantic similarity topology considered semantic cycles detected pa best case 
query traverses cycles remain table lists cycles 
formulas section outgoing link link going pa pb pa receives positive cycles raising semantic similarity measure link attribute considered 
pa remember assumption regarding distribution erroneous links 
case positive title name title title name name title title description name semantic graph title description name name description name receive semantically significant feedback second outgoing link pa pb anyway handled syntactic analysis 
receives negative cycles outgoing link pa pc 
link clearly semantically erroneous mapping title acronym 
results pa excluding link attribute semantic similarity dropping 
cycle tp erroneous tp erroneous table cycles resulting positive negative feedback situation may consequently summarized way pa sending query pc syntactic analysis information lost translation process excludes pb high semantic dissimilarity 
situation somewhat changes correct erroneous link add mistake link pb pd attribute considered semantic similarity drops outgoing link pb long cycles negative see third column table 
directly connected erroneous link pa senses semantic incompatibilities affecting messages traversing pb 
continue send queries link long receives positive feedback anyway 

related number approaches making heterogeneous information sources interoperable mappings distributed schemas ontologies making canonical assumption existence global schema 
feedback received may come series compensating errors 
example observer information source maintains ontology expressed description logics associate semantics information stored process distributed queries 
query processing local measures loss information propagating queries receiving results 
similarly observer kraft proposes agent architecture manage ontological relationships distributed information system 
relationships ontologies expressed constraint language 
propose model architecture managing distributed relational databases environment 
local relational database schemas represent relations domain relations coordination formulas 
propagate queries updates 
relationships local database schemas considered correct 
probabilistic framework reasoning assertions schema relationships introduced 
approach deals problem having possibly contradictory knowledge schema relationships 
propose architecture xml annotations systems establish semantic interoperability 
edutella approach apply architectural principle build semantically interoperable information system educational domain 
principle applied technical implementation level logically commonly shared ontology 
approaches automatic schema matching see overview ideally support approach pursue order generate mappings semi automated manner :10.1.1.16.700
fact may understand proposal extending approaches matching schemas approach matching multiple schemas networked environment 
example illustrating schema matching process automated local level introduced glue employs machine learning techniques assist ontology mapping process 
glue probabilistic model employs similarity measures uses set learning strategies exploit ontologies multiple ways improve resulting mappings 
see proposal application principles web link analysis local relationships information sources exploited derive global assessments quality eventually meaning 

semantic interoperability key issue way semantic web push usability web considerably current state 
success semantic web depends heavily degree global agreement achieved global semantics 
approach facilitating fulfilment requirement deriving global semantics agreements purely local interactions agreements 
means explicit local mappings derive implicit global agreement 
developed approach formal model built set instruments enable assess quality inferred semantics 
demonstrate validity practical usability model applied simple practically relevant case study 
see approach complementary effort going standardization area semantics may help improve acceptance application augmenting top approach dual bottom strategy 

bernstein giunchiglia kementsietsidis mylopoulos serafini 
data management peer peer computing vision 
workshop web databases webdb 
clip 
gnutella protocol specification document revision jun 
www 
limewire com developer gnutella protocol pdf 
dean connolly van harmelen hendler horrocks mcguinness patel schneider stein 
owl web ontology language 
working draft july 
www org tr owl ref 
doan madhavan domingos halevy 
learning map ontologies semantic web 
www 
fensel horrocks van harmelen decker michael erdmann klein 
oil nutshell 
ekaw pages 
fhg ipsi 
ipsi xq xquery demonstrator 
horrocks 
daml oil description logic semantic web 
ieee data engineering bulletin 
hull 
managing semantic heterogeneity databases theoretical perspective 
pods pages 
kleinberg 
hubs authorities communities 
acm computing surveys es 
mena kashyap sheth illarramendi 
observer approach query processing global information systems interoperation pre existing ontologies 
distributed parallel databases 
mukherjee 
peer peer system description discovery resource sharing communities 

nejdl wolf qu decker sintek naeve nilsson palm risch 
edutella networking infrastructure rdf 
www pages 
ouksel ahmed 
ontologies panacea data integration flexible coordinator mediate context construction 
distributed parallel databases 
preece 
hui gray 
philippe marti cui jones 
kraft agent architecture knowledge fusion 

project 
xerces parser 
rahm bernstein :10.1.1.16.700
survey approaches automatic schema matching 
vldb journal 
wiederhold 
mediators architecture information systems 
ieee computer 
