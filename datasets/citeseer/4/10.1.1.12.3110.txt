mining space graph properties glen jeh db stanford edu stanford university jennifer widom widom db stanford edu stanford university existing data mining algorithms graphs look nodes satisfying specific properties specific notions structural similarity specific measures link importance 
analyses predetermined properties effective understood domains identifying appropriate property analysis challenge focusing single property may neglect important aspects data 
develop foundation mining properties 
theoretical framework defining space graph properties variety mining queries enabled framework techniques handle enormous size query space experimental system called miner demonstrates utility feasibility property mining 
graph analyses variety applications analyze interrelationships entities 
analyses concern standard graph theoretic properties radius graph embedded cliques 
analyses yield high level subjective information data 
example web graph analyzed pagerank hits algorithms identify web pages deemed important user :10.1.1.31.1768:10.1.1.31.1768:10.1.1.120.3875:10.1.1.120.3875
citation structure scientific papers analyzed find papers related 
techniques common analyze graph structures predetermined properties 
analyses effective coming property analysis challenge especially little known data 
fixing specific properties analysis important aspects data may ignored 
space properties explored 
concrete example consider simple case looking intuitively similar nodes graph 
supported national science foundation iis stanford graduate fellowship 
prof prof univ graph example 
possibility conclude prof prof similar pointed univ commonly citation metric 
analogously may conclude similar pointed prof 
hand may argue similar pointed node pointed univ metric 
inferences may valid depending domain application 
current methods require user fix measure similarity citation query nodes similar measure 
ideally query simply similar nodes get result sets prof prof explanations similar 
functionality supported current system know 
supported miner implementation framework 
develop framework mining interesting important graph properties 
essentially treat space properties domain perform data mining domain 
goal develop appropriate analysis mining space properties just analyses developed mining graph data 
obvious challenge handling enormous size space properties simplest data mining operations hopelessly infeasible 
develop techniques allow computational resources focused important properties allowing 

frequent itemsets association rules logical diagram property mining framework seen user 
implement practical mining system framework 
main contributions theoretical framework defines space graph properties queried 
specific data mining query types enabled framework offering new capabilities supported existing systems 
techniques dramatically reducing computational resources required answer queries framework 
simple intuitive metric calculating importance properties 
miner experimental system implementation framework demonstrating utility feasibility 
framework property mining pose queries space graph properties define precisely space 
labeled directed graph representing objects relationships domain want mine 
edge represents basic relationship objects 

encode properties formulas syntax semantics datalog 
property formula composed basic relationships predicates domain 

consider set formulas extents objects satisfy formula 
queries space properties stated queries logical diagram framework seen user shown 
property mining framework enclosed dashed box 
framework enables querying properties input data case graph set predicates representing basic relationships derived 
possible derive predicates sources graphs relationship numeric data set concreteness limit discussing predicates corresponding graph edges 
predicates form basis formulas user queries posed set formulas extents course abstraction provided user cases materialized implementation 
define formally section 
query space labeled directed graph arbitrary set strings serving edge labels 
simplicity consider edge weights added framework slight modification 
fundamental relationships encoded edges building blocks properties consider 
domains obvious canonical representation data graph domains representation may require careful consideration 
example consider data shown small fragment survey members stanford database group 
obvious representation data labeled graph shown 
step represent properties domain formulas 
formulas language datalog arbitrary logic formulas say order logic possible 
clearly powerful logic greater semantic computational complexity system 
datalog expressive power far hope support practice 
shall see restricted subset datalog home india digital libraries mexico faculty phd student thai chinese indian food research food food advisor sriram hector position home position food sample data graph representation 
lows functionality existing systems support 
define syntax semantics formula language go 
constants objects logic nodes objects domain predicates correspond edges relationships domain 
consider datalog formulas form head variable variable constant object 
capital letters denote variables lowercase letters denote constants greek letters denote 
predicate corresponds existence edge label arguments predicate true edge exists example predicate food sriram indian true 
formula satisfied satisfying assignment function maps variables constants predicates true variables replaced 
formula arguments predicate variable predicate constant truth value 
formulas identical variables names predicate ordering considered identical 
important aspect formula extent denoted 
set objects exists satisfying assignment recall head variable 
intuitively formula specifies property domain extent formula set objects satisfy property 
example formula advisor food chinese encodes property advisor likes chinese food extent hector 
define set formula formulas extents space context pose queries 
fragment shown relation 
course infinite meant computed 
serves logical relation queries posed 
sample query types interesting data mining operations perform common notions data mining frequent itemsets computation analogues space formulas 
examples object similarity 
objects considered similar satisfy formulas common 
contrast previous approaches similarity computed multiple aspects example section system automatically identifying important aspects section 
furthermore similarity explained 
simply returning score formula contributed score returned explanation results 
find similar queries supported 
set objects presumed similar ways query objects similar objects ways objects similar 
objects returned occur frequently formulas satisfied members similarity query having features supported miner system section 
frequent itemsets 
run frequent itemsets computation set extents identifying sets subset extents 
subset represents group objects having lot common 
example survey data discussed section set professors may frequent itemset written papers 
frequent substructures 
graph structures correspond formulas vice versa 
find frequent substructures graph finding formulas large extents 
example formula corresponds path length edge labels 
extent large graph contains paths length 
association rules 
look association rules form formulas extents lot overlap 
rule says objects satisfy satisfy high probability 
explanations 
set objects explain objects common considering formulas satisfy common 
functionality demonstrated section 
examples kinds queries posed examples motivation techniques develop important remember queries applications framework consists logical relation queries possible framework may application specific 
contrast traditional data mining queries generally focus properties objects satisfy properties 
reminder necessary materialize order query 
specific application determined finding similar objects solve problem explicitly constructing challenges major technical challenges answering queries framework 
dealing enormous size query space 
develop techniques handle problem section 
second challenge determining importance formulas 
major component property mining just look important interesting objects traditional data mining look important properties 
identifying important formulas intertwined reducing space considered possible restrict considering important formulas 
computing importance formulas discussed section 
building blocks approach query space infinite impossible consider formulas want focus computational resources possible important formulas 
poses dilemma goals mining identify important formulas 
yahoo sports mlb com com graph example 
high level solution construct formulas basic building blocks called pseudopredicates 
analyze building blocks importance analyzing actual formulas 
allows determine importance formulas constructed building blocks important formulas created 
mining takes place space pseudopredicates 
approach broken steps 
set pseudopredicates computed serve basic building blocks formulas 

importance scores computed pseudopredicates identifying important formulas constructed 

important formulas constructed pseudopredicates 
section steps 
step section 
example motivate approach example 
consider top half structure shown hypothetical fragment web graph 
web pages 
point yahoo sports satisfy formula yahoo sports taken label edge unlabeled graph 
yahoo sports turn points baseball mlb com yahoo sports satisfies formula mlb com 
satisfy mlb com redundant record fact follows immediately facts satisfies formula yahoo sports satisfies formula 
generally formula satisfied yahoo sports points node satisfies satisfies formula head variable replaced variable appearing consider entire 
point sports site com 
com points mlb com 

related common satisfaction formula consequence fact point yahoo sports com 
record saying satisfy yahoo sports mlb com pseudopredicates predicate may argument nonempty set objects variables 
generalization regular predicate thought special case set arguments singleton sets 
seen example section yahoo sports com represents property pointing yahoo sports com 
define formula consisting pseudopredicates define extent set objects exists satisfying assignment assigns set argument members 
example extent yahoo sports com 


note set formulas thought subset set replace constant argument get having semantics 
conversely converted formulas set arguments singleton sets set objects semantics formula copy singleton objects replaced sole members set argument replaced dangling variable appearing chaining take set basic building blocks set head pseudopredicates extents 
head arguments head variable set argument technically allow formulas formulas predicates substituted explicitly appropriate variable renaming 
pseudopredicates treated predicate 
coming sections talk extents head pseudopredicates predicate omit head qualification meaning clear 
base set head pseudopredicates compose large class complex formulas noted subset 
composition steps conjoining putting predicates formulas logical formulas chaining 
chaining formalization process deriving formula section 
suppose predicate 
extent superset object satisfying satisfies 
say result chaining general case appears set argument formulas 
derive new formula chaining 
follows 
replaced new variable appearing 

append predicates non head variables renamed conflict appearing head variable renamed resulting extent superset 

key concept object set occurs set argument represents set satisfied members formulas partitioned classes extents 
computation deal set object sets seen extents object set representing class formulas 
sets large finite 
chaining conjoining base set pseudopredicates construct complex formulas 
formula undirected unlabeled graph corresponding nodes variables constants appearing instances constant treated different nodes 
predicate corresponding edge yield edges state theorem formulas constructed 
theorem 
tree constructed chaining conjoining starting theorem says construct formulas corresponding tree structures 
stronger version theorem stated proven section 
computing working subset set size smaller set formulas infinite enormous 
practice restrict subset cost restricting set formulas constructed 
ideally important pseudopredicates building blocks important formulas constructed 
tell pseudopredicates important advance start initial set pseudopredicates seed iteratively expand refine set pseudopredicates included 
maintain series head pseudopredicates extents 
set pseudopredicates created iteration compute iteration iterations take unions working trimmed set basic building blocks 
take set head pseudopredicates set argument singleton set set objects 
iteration consider extents pseudopredicates created extents intersections create new pseudopredicates having sets set arguments 
precisely perform steps iteration get compute intersection closure smallest set 
compute successive iteration considers formulas corresponding trees level deeper 
idea formalized theorem 
theorem 
formula corresponding graph tree depth constructed chaining conjoining starting note sole formula depth trivial formula consider 
proof 
proof induction depth 
base case set formulas depth exactly base set assume theorem true suppose tree depth starting child root subtree having depth consider subtrees depth constants dangling variables 
inductive hypothesis formula corresponding subtree constructed rename root variable subtree instances subtree note appear subtree acyclic 
head predicate analogously predicate constant constant singleton variable variable set argument case 
predicates 
pm intersection extents 
iteration head predicates formula head predicate analogously predicates head predicate form constant dangling variable variable root subtree constructed conjoining predicates chain 
follows immediately theorem limit formulas corresponding tree structures constructed superset proves weaker version theorem stated section 
larger formulas constructed cost computational resources 
miner system accounts wide range interesting formulas having manageable resource requirements section 
ways set pruned tailored class formulas suitable specific application 
iterative step simply take take level intersection elements 
conjunctions formed extents equal 
second pseudopredicates sets deemed unimportant section pruned away iteration 
keeping important pseudopredicates extents size kept constant allowing important formulas corresponding deep tree structures considered 
computing importance section established set head pseudopredicates extents building blocks formulas 
formulas constructed conjoining chaining 
usually extremely large showed iteratively compute manageable subset step construct important formulas analyze importance formulas constructed 
problem computing importance formulas computing importance sets representing classes formulas satisfied sets pseudopredicates 
just traditional data mining look interesting objects satisfying predefined property mine space properties interesting properties satisfying predefined notion 
accordingly development measure importance properties fairly ad hoc try possible develop known principles 
ranking head pseudopredicates sets start fundamental notions importance head pseudopredicates simply predicates rest section analysis compute importance notions 
borrow technique field web search 
pagerank hits algorithms analyze web pages importance aid web search :10.1.1.31.1768:10.1.1.31.1768:10.1.1.120.3875:10.1.1.120.3875
idea pagerank web page important pointed important web pages 
similarly hits algorithm identifies hub pages authority pages recursively hubs point authorities authorities pointed hubs 
authorities regarded important pages 
common algorithms recursive mutually reinforcing definition importance iterative computation method corresponding eigenvector computation 
spirit develop iterative algorithm ranking importance sets pseudopredicates 
analogous definition hubs authorities hits say mine space notions properties identify important notions obviously just pushes problem level 
settle mining space properties predefined notions 
note mean back started mine level properties just atomic objects 
extension mining higher level properties properties properties possible direction 
important set argument important 
set important satisfies important pseudopredicates 
basic notions derive importance satisfaction pseudopredicates sets importance set argument pseudopredicates 
compute importance scores intuition formalized mathematically 
take importance scores interval importance scores pseudopredicates summing importance scores extents pseudopredicates summing 
define set predicates satisfied basis start core equations arg predicates says importance predicate importance set argument arg pk says importance set components small inherent importance experiments sum importances predicates satisfied equation analogous pagerank :10.1.1.31.1768
core equations provide starting point capturing recursive intuition specific details analysis incorporated 
summing set predicates satisfied sum subsumed predicate satisfied say subsumes case 
intuitively specifies property specific specified 
example know satisfies com pointless record satisfies yahoo sports com 
aspect improved small fraction objects 
contribution weighed lower 
example com 
vm com contribution importance set smaller 
consider term pk assigns weights relative sizes compared sets satisfying data sets experiments may attribute importance sets satisfy pseudopredicates independently importance pseudopredicates 
number predicates satisfied weighted function 
experiments detailed equations data sets experimented section arg pk hits equations equations solved iterating fixed point 
iteration scores normalized 
equation set precomputed general expensive operation 
way alleviate problem approximate certain threshold case check 
experiments noticeable effect quality results 
note appropriate choice equations general dependent data set query type 
equations data sets query types tried 
note inherent importances assigned nonuniformly bias results sets know apriori important 
analogous biasing web pages nonuniformly pagerank enable personalized web search :10.1.1.12.1400:10.1.1.160.9478
selective construction pseudopredicates importance rankings base set pseudopredicates extents tell importance formulas constructed 
chaining procedure described section straightforward construct formulas queries section computed importance scores extents actual formulas serve explanation user 
exhaustive construction formulas usually necessary feasible 
want construct appropriate formulas account computed importance formulas human aspects formulas brevity comprehensibility variety 
chaining operation section procedure allows take factors account 
define function chain takes argument returns result chaining pseudopredicates 
result graph level deeper 
start set equal 
just head pseudopredicates having non singleton set argument set argument set pseudopredicates satisfied 
replace new variable appearing 
append head variable replaced 
return call chain results complex formula 
theory chain formulas indefinitely set may chained cycle 
practice users want formulas simple maximum depth cycle detection stopping criterion anyway 
example consider home glen beverly represents property home glen beverly 
glen beverly chinese indian food formula may expanded call chain home food chinese indian represents property home likes chinese indian food 
formula may expanded home food food jennifer jennifer likes chinese indian food 
function adjusted suit specific query types application 
general rule consist important pseudopredicates satisfied variability choosing properly produce informative formulas minimizing complexity sake user intelligibility 
specific rules choosing miner system discussed section 
formulas satisfied position ms student advisor jennifer similar objects input jing glen chris beverly brian results query steve 
miner experimental system framework algorithms previous sections implemented experimental system miner supports data mining queries discussed section 
specifically miner supports query types arbitrary input graphs similarity 
set input objects return ranked list objects similar members set ways objects set similar 
example professors research group data described miner returns third professor 
explanation 
set input objects return formulas explaining objects common 
function explain answers returned similarity queries 
efficiency user may assign types object minimize redundant comparisons system 
example university considered argument advisor predicate people 
types help speed implementation having effect semantics 
exact parameters miner section 
data set database group survey data set survey stanford university database group publication data database group publication server 
data modeled graph nodes represent entities participate relationships people food types publications 
edges represent relationships including denote food preferences advisors undergraduate institution home country research interests authorship publications 
graph consists nodes edges 
system run set basic building blocks precomputed described section 
prompt user list objects entered query similarity formulas satisfied undergrad stanford home california similar objects input john brian jing glen wang results steve beverly 
explanation 
precomputation takes minute query returns milliseconds 
simple single object query steve 
results query shown 
scores query results data set scaled legibility 
top portion output shows important formulas determined system satisfied input 
find steve masters student advisor jennifer 
chose list separate formulas printed single conjunctive formula 
properties satisfied steve including foods likes went undergrad important algorithm 
importance scores listed formulas 
bottom portion output lists objects similar steve similarity scores 
similarity score object weighted sum importance scores extents satisfied steve pk steve weighting function section 
self similarity steve listed input comparison 
effect program finds people lot common steve account numerous properties may share 
top match jing know masters student group 
jennifer students 
match beverly masters student jennifer student 
find beverly listed type steve beverly new query 
results shown 
find beverly steve went stanford california originally 
note attributes regarded program steve important attributes important attributes shares beverly 
appropriately top matches returned students went stanford followed students california 
example illustrates complex formulas formulas satisfied undergrad undergrad advisor jeff undergrad undergrad advisor hector similar objects input chris john wang calvin results glen qi 
formulas undergrad home california similar objects input cal poly iit madras mit iit bombay university colorado results uc berkeley stanford 
query glen qi 
results 
comparing absolute magnitudes formula scores query steve beverly see relatively little common glen qi 
formula says people went schools jeff students tend go 
second formula analogous 
students share advisors preferences formulas best connection 
course query objects people 
query results uc berkeley stanford shown 
formula identifies schools tend attended people california 
intuitive result inferred data 
second data set club nexus test miner larger data set data club nexus contains extensive personal information stanford students 
attributes include student academic standing major list club nexus members knows 
data modeled miner analogously database group survey data 
resulting graph nodes edges 
precomputation step takes hours query prompt takes seconds 
sample results note undergrad home advisor relationships tend favored say food person unique choice attributes usually multiple food preferences 
effect function section causes preference particular food person food preferences 
formulas satisfied gender male knows knows user knows user knows knows user similar objects user user user user user results user user user 
formulas academic undergrad knows major international relations similar objects input user user user user user results user user user 
random queries user user user user user user shown respectively 
scores query results data set scaled legibility 
results say input students related males know knows known user know knows user 
results say students related undergraduates known person majors international relations 
kinds connections system random groups people 
implementation details experiments run ghz pentium gb ram java sdk 
code written entirely java unoptimized native methods 
core miner system implemented techniques previous sections 
parameter settings data sets 
deriving basic building blocks ranked pseudopredicates steps fixedpoint iteration process 
computing omitting intersection step speed little effect results conjunctions accounted 
proper setting discussed section largely user interface issue 
developed heuristic determine 
th ranked predicate order decreasing importance 
take minimum smallest pseudopredicates trivial compared included 
smallest pseudopredicates accounted 
heuristic cases providing results illustrated previous figures 
related existing mining graph data extends traditional data mining problem finding frequent itemsets market basket data :10.1.1.36.2485
focus graphs finding frequent substructures graph equivalent frequent itemsets 
focus finding interesting properties graphs substructure frequency occurrence example 
fact mining queries supported framework section instance frequent substructures problem 
graph mining algorithms compute similarity nodes graph structure include citation generalization 
similarity application framework advantages similarity computation enabled framework specific measures similarity noted section 
particular feature miner ability relate nodes graph relationships just single edge query 
feature exhibited proximity search finds nodes graph nearby terms graph distance 
mechanism explaining query results strengths approach 
system keywords matching tuples different tables relational database returns tree denoting schema relating matching tuples edges tree foreign key relationships 
tree serves explain tuples related 
tree structures lack expressive power formulas ranking explanations 
discussed section recursive notion importance pseudopredicates analogous notion importance computed pagerank hits algorithms web pages :10.1.1.31.1768:10.1.1.31.1768:10.1.1.120.3875:10.1.1.120.3875
syntax semantics formulas framework borrowed logic programming language datalog 
main contributions summarized follows framework data mining queries posed graph properties 
developed techniques deal enormous size query space 
basic building blocks approach partitions properties classes bypassing prohibitive process analyzing property individually 
defined general measure importance properties treating properties class objects applying known techniques 
measure vital component experimental system 
implemented miner experimental system supporting queries property mining framework supported existing systems 
intent mainly provide foundation mining graph properties 
emphasis demonstrating utility feasibility new class data mining 
scratched surface terms theory algorithms applications aspects wide open research 
stanford edu 
stanford edu 
rakesh agrawal ramakrishnan srikant 
fast algorithms mining association rules 
proceedings th international conference large databases vldb santiago chile september 
gaurav arvind soumen chakrabarti sudarshan 
keyword searching browsing databases banks 
proceedings th international conference data engineering icde san jose california usa february 
roy goldman narayanan shivakumar suresh venkatasubramanian hector garcia molina 
proximity search databases 
proceedings th international conference large databases vldb new york city new york usa august 
haveliwala 
topic sensitive pagerank 
proceedings eleventh international world wide web conference www honolulu hawaii usa may 
akihiro inokuchi takashi washio hiroshi motoda 
apriori algorithm mining frequent substructures graph data 
proceedings principles data mining knowledge discovery th european conference pkdd lyon france september 
glen jeh jennifer widom 
measure structural context similarity 
proceedings eighth international conference knowledge discovery data mining kdd edmonton alberta canada july 
glen jeh jennifer widom 
scaling personalized web search 
proceedings twelfth international world wide web conference www budapest hungary may 
appear 
kessler 
bibliographic coupling scientific papers 
american documentation 
jon kleinberg 
authoritative sources hyperlinked environment 
proceedings ninth annual acm siam symposium discrete algorithms soda san francisco california usa january 
george karypis 
efficient algorithm discovering frequent subgraphs 
technical report department computer science university minnesota 
www cs umn edu papers fsg long pdf 
lawrence page sergey brin rajeev motwani terry winograd 
pagerank citation ranking bringing order web 
technical report stanford university database group 
citeseer nj nec 
com html 
henry small 
citation scientific literature new measure relationship documents 
journal american society information science 
jeffrey ullman 
principles database knowledgebase systems vol 

freeman new york city new york usa 
mohammed zaki 
efficiently mining trees forest 
proceedings eighth international conference knowledge discovery data mining kdd edmonton alberta canada july 

