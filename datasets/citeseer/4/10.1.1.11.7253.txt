consistent mesh parameterizations emil praun princeton university wim sweldens bell labs peter schr der bell labs set head models obvious shape compute average 
general connectivity sampling patterns models different computing average non trivial 
computing consistent mesh parameterizations red patch boundaries remeshing models connectivity sampling pattern computing average trivial 
basic element digital geometry processing algorithms establishment smooth parameterization model 
propose algorithm establishes parameterizations set models 
parameterizations called consistent share base domain respect features 
give immediate correspondences models allow connectivity 
form basis large class algorithms including principal component analysis wavelet transforms detail texture transfer models way shape blending 
demonstrate versatility algorithm number examples 
digital geometry processing dgp field concerned construction signal processing style algorithms geometry 
due non euclidean nature surface geometry construction dgp algorithms fundamentally difficult construction classical signal processing algorithms 
sound images video readily parameterized euclidean space image irradiance function section plane 
addition images sampled cartesian grid 
result simple operations averaging images computing norm difference easy 
true geometry 
causes non euclidean nature geometry generally differing sampling patterns connectivity meshes describing geometry 
dgp algorithms involving multiple models require common parameterization common sampling pattern 
computing global parameterization remeshing single model difficult problem received considerable attention fundamental step algorithms texture mapping shape blending physical simulation compression data analysis 
go usual parameterization problem compute parameterizations group models 
call set parameterizations consistent share base domain respect features 
note implies models need genus 
focus genus zero orientable manifold case techniques carry higher genus 
consider example set head scans say parameterizations consistent base domain low polygon count head model parameterizations respect previously defined head features eyes nose mouth consistent parameterizations give immediate point correspondences models allow model connectivity 
vertex mesh unique corresponding vertex mesh 
turn enables series applications ranging way shape blending transfer attributes textures details animation controls model set models 
additionally number new geometry processing algorithms involve models simultaneously principal component computations possible time 
illustrated multiple models may geometrically quite dissimilar get parameterized base domain identical connectivity subsequent dgp processing 
problem existing parameterization algorithms similar models easily different base domains inconsistent parameterizations 
fundamental reason algorithm overcomes problem 
method base domain may user specified automatically example applying existing method models 
models needs features outlined annotated manually automatic feature identification 
algorithm computes consistent parameterizations models identical connectivity 
obvious advantages simple data structures easy filtering wavelet transforms excellent compressibility consider semi regular meshes meshes formed recursive possibly adaptive regular refinement base domain 
contributions base domain set orientable genus zero models identified features algorithm computes consistent parameterization 
done tracing mesh net curves provably topologically equivalent connectivity base domain 
models required geometrically close 
subsequently parameterizations compute identical connectivity give examples meshes variety dgp applications 
multiple models parameterized respect base domain feature point edge mappings 
subsequent ensures consistent sampling patterns downstream dgp applications 
related parameterization algorithms typically start model form triangle mesh irregular connectivity construct set patches semi regular mesh output note equivalent 
eck workers produced semi regular mesh fully automatically krishnamurthy levoy gave user responsibility laying set nurbs patch boundaries 
contrast lee coworkers employed mesh simplification constraints accommodate user supplied data construction parameterization fully automatic process 
approaches considered building parameterizations multiple models simultaneously 
problem arises naturally context morphing mapping correspondence models explicit goal 
lee workers previous maps independently establish parameterizations models followed solving correspondence problem base domains 
parameterizations consistent base domains different 
creates need common meta mesh able realize simultaneous parameterization original models 
unfortunately algorithm scale meta mesh typically higher complexity reported original mesh 
additionally clear generalize way simultaneous parameterizations 
workers confront problem close setting seek animate number different faces single prototype patch layout 
prototype face embedding prototype layout close face report simple squares fitting procedure 
contrast aim concurrently parameterize models may fairly different geometrically example horse human body 
case embedding prototype layout simultaneously close shapes 
simple squares matching procedure succeed 
algorithms establishing terminology 
triangle mesh pair set point positions pi xi yi zi simplicial complex contains topological adjacency information 
complex set subsets 
subsets come types vertices edges faces 
vertices neighbors ring neighbors vertex form set 
argued semi regular meshes 
concreteness assume meshes built repeated triangle starting coarse irregular mesh finer meshes denoted nj qj lj 
method prevents quadrilaterals triangles regular refinement procedures 
typical remeshing procedure starts irregular input mesh computes base domain connectivity bijective mapping base domain mapping subsequently build nj 
note done adaptive fashion needed 
setting set meshes 
purpose compute semi regular remeshing common base domain connectivity see top 
need ensure individual parameterizations respect features desired 
example consider set heads 
typically seek mappings respect features eyes nose ears convenience treat common base domain special mesh 
base domain associated geometry vertex locations need feature vertices bf simply give canonical locations bf th basis vector th component zero 
basic setup assume identified hand feature detection algorithm feature points meshes denoting th feature point th mesh furthermore connectivity feature points 
triangle corresponds patch meshes edges correspond patch boundaries middle part 
refer layout patch boundaries meshes nets task trace patch boundaries meshes points manner resulting net topologically equivalent outlines fair patches 
constraint easy state algorithm guarantees satisfied section 
second condition difficult capture objective criterion algorithm uses number heuristics produce fair patches practice section 
computed net surface parameterized normal meshes necessarily imposing normality constraint 
discuss feature points feature lines treated similarly 
features points inside triangle triangle split produce feature vertex 
topologically equivalent patch boundaries assumed orientable manifolds conditions need satisfied patch boundaries topologically equivalent 
patch boundaries may intersect feature vertex 

feature vertex consistent cyclical ordering edges 
tempting simply trace shortest paths edge employing standard brush fire algorithm 
unfortunately lead intersecting patch boundaries may respect vertex edge ordering see figures 
restricted brush fire algorithm trace path example patch boundaries sphere fully connected feature vertices 
na shortest path strategy lead topologically correct net left violating crossing property vertex edge ordering 
right topologically correct net 
feature vertices topologically equivalent manner 
patch boundary crossings avoided making sure brush fire crosses previously traced path 
feature vertex incident traced paths sure new paths respect cyclical ordering edges vertex new paths need attached appropriate sector vertices 
ensured starting brush fire correct sector source terminating reaches destination correct sector see 
find curve edge brush fire started 
reaches check performed see reaches correct sector true example shown left 
brush fire continues eventually reach correct sector defining topologically equivalent curve right side 
drawn paths act fire walls brush fire propagation 
additionally order paths traced important 
random ordering restricted brush fire algorithm guarantee termination 
example possible vertex paths making unreachable 
adjacent top diagram shows desired connectivity 
achieved lower setup vertex encircled patch linked 
solve problem trace paths complete cycles spanning tree traced 
guarantees vertex encircled tree building 
tree complete net adding remaining patch boundaries order 
prove claim need show completion algorithm get stuck 
proof correctness prove contradiction completion net building spanning tree terminates produces topologically equivalent net 
assume invocations brush fire algorithm say edge complete occurrence 
implies existence cycle paths model separating fire gets caught 
model base domain genus zero splits base domain regions 
set traced curves contains spanning tree forms connected graph contain path 
different model regions cycle cross 
curves cross vertices cross subset vertices follow vertex vertex intersection vertex record base domain model region change 
neighborhood ordering base domain model vertex region changes occur simultaneously base domain model 
region base domain region model 
contradicts assumption proves claim assured brush fire terminate correct sector net completed 
tracing fair boundary curves algorithm guarantees topologically equivalent mapping base domain desired model greatly distorted 
modified algorithm correctness guarantee attempts ensure fair mapping 
general want quality criteria 
equal distribution surface area patches 
smooth patch boundaries 
fair patch boundaries particular criteria easy understand intuitively clear achieved relaxation 
third difficult 
essence want avoid unnecessary winding swirling curves 
swirling phenomenon leads particularly nasty patches fixed relaxation 
simple example operator bijective map mesh show 
example operator turns pushing patch boundaries ahead comes back original position left right topologically equivalent arrangement 
clearly want avoid swirling choose distorted topologically equivalent nets 
net defined achieves global minimum fairness functional ds summation curves net arc length parameterization leads nonconvex mixed discrete continuous global optimization problem intractable point 
exploit number heuristics require global solve lead patch layouts practice 
discuss algorithm modifications turn 
note impact correctness guarantee 
parameterization preparation path tracing compute parameterization model 
vertex mesh parameterized base domain parameter value vertex vector 
feature points pf associated coarsest level vertices bf bf parameter values vertices computed solving linear system conjugate gradients wij weights wij computed floater shape preserving scheme 
result wij sum equals implying convex combinations taken fact boundary conditions bf linear system vectors non zero component equal components computed non negative sum 
tracing curves assume want trace curve feature points main idea set objective function trace curve local minimum objective function 
objective function vertex kj denotes th component vector 
algorithm kj priority queue 
clearly kf kf kj vertices sum components objective function tries seek minimizing influence feature vertices making traced curves repel 
helps avoid swirling 
priority queues spanning tree construction edges trace corresponding tentative curves constrained brush fire algorithm described earlier 
constraints curves inserted net initially 
record tentative length path curves insert priority queue length 
removal priority queue spanning tree construction check see recorded tentative path valid violate constraints provided curves inserted net 
topologically valid retrace curve update priority 
topologically valid run detector adjacent triangles 
fails put edge back queue penalty 
pass add curve net 
detection consider tracing path 
detect possible parametrically trace line closest point image point brush fire meets path 
path arrive left side oriented path right 
arrives wrong side mapping triangle appears flipped 
consequently traced edges routed opposing vertex shows detour 
configurations equivalent sequence 
decide best configuration curves linking rest net added 
postpone tracing introducing back priority queue penalty 
test applied starting 
complete net spanning tree constructed complete net priority queue length 
detector shortest path falls wrong side left triangle considered flipped may lead 
adding path net postponed 
right trace reaches correct side path accepted 
edge straightening tracing patch boundaries obtain net curves topologically equivalent 
curves composed segments residing mesh edges 
straighten curves allowing cross interior triangles ensuring patches approximately equal area 
feature vertices incident curves straightened single operation 
gather triangles mesh interior image 
submesh model parameterized convex region plane follows 
map feature vertices belonging vertices planar gon inscribed unit circle 
angles subtended side gon proportional length corresponding net curves 
boundary curves mapped straight lines assigning coordinates interior curve points convex combinations curve endpoints 
solve coordinates patch interior points floater scheme 
parameterization replace curves incident mapping respective line segments back model 
general lines cut existing triangles split accordingly maintain valid triangulation 
straightening process iterated practice necessary 
implementation note efficiency run net tracing algorithm simplified version model transfer net original model 
examples take simplified model approximately vertices 
path tracing allow multiple paths traverse edge impose ordering 
special lane data structure allows paths pass mesh edge maintaining conceptual epsilon interval separation 
effect edge treated highway ordered lanes 
requires modification queue brush fire graph traversal 
ordinarily queue controls vertex visited 
setting maintain notion lane fire traveling properly respect fire walls 
priority queue maintains just vertices vertices associated lanes 
non feature base domain vertices far assumed vertices base domain features correspondences vertices meshes applications base domain vertices features 
detailed face animation model vertices feature vertices 
handle case stages 
say base domain vertices features vertices 
stage construct smaller base domain removing non feature vertices 
apply algorithm base domain compute consistent parameterizations meshes original base domain 
note need remeshing point 
resulting bijection meshes place remaining vertices meshes new correspondences patch boundary curves star connectivity mapped horse 
star vertex back connecting vertices 
left na algorithm 
note curves intersect 
white curves supposed shortest path back horse 
right result algorithm properly traces white curves chest horse 
run algorithm base domain compute consistent parameterizations meshes 
examples shows layout simple star patch network horse 
left result na curve tracing algorithm 
curves intersect pass wrong side horse 
right result modified algorithm 
example shows transfer patch layouts dissimilar objects 
shows realistic example detailed patch layout shown top left 
transferred human horse cow 
mapping patch layout top left applied human horse cow models 
examples take time process 
mhz pentium iii machine tracing curve net coarse mesh triangles takes seconds transferring original mesh triangles takes seconds smoothing minutes remeshing triangles minutes 
selecting feature vertices human example takes minutes user time 
applications consistent parameterization established meshes resulting correspondences different dgp tasks 
sketch exemplary applications indicate variety possible algorithms 
principal mesh components application motivated principal component analysis images 
example number images faces aligned illumination equalized compute eigenfaces set orthogonal images eigenvectors variance covariance matrix set face images 
perform similar computation meshes 
shows number head meshes aligned rigid body motion scaled equal volume 
rightmost mesh represents mean 
shows main visualized sum mean 
mesh original set characterized principal component meshes heads 
indicate hair front skull second hair back skull third face carries smile 
eigendecomposition 
feature vectors useful compression recognition database search 
shows filtering applications 
middle image shows result third eigenmode leftmost head 
right image result doubling mean eigenmode 
left original head 
middle third eigenmode 
right eigenmodes mean doubled 
transfer textures vertex wise correspondence meshes trivial transfer attributes model direct parametric mapping 
shows simple example 
texture human body scan applied human body scan fun horse model 
transfer wavelet details interesting transfer attribute data performed wavelet domain 
example compute wavelet transform models consistent parameterizations perform scale dependent blending 
illustrate idea combine base domain coarsest level scale coefficients lowest frequencies model wavelet coefficients higher frequencies model 
procedure loop wavelets described 
shows result applying cow wavelet coefficients texture transfer model 
horse coarsest level control mesh vice versa 
mappings basis morphs scheduled transitions scale domain similar scheduled fourier morphing 
application details model coarsest control mesh cow horse vice versa 
shape blending establishing mapping different shapes may quite dissimilar step morphing application 
algorithm establish necessary mapping multiple models blended 
consequently way blends free form models greatly facilitated 
shows example various affine combinations cow horse human 
affine combinations human cow horse human horse cow cow human horse horse human cow 
algorithm simultaneous consistent parameterization multiple shapes 
algorithm guaranteed lay patch boundaries topologically equivalent way developed suite heuristics ensure layout fair 
parameterization forms basis consistent semi regular samplings input shapes turn form foundation wide variety digital geometry processing algorithms 
examples algorithms 
digital geometry widespread need geometry processing toolbox efficient algorithms developed mathematical apparatus continues increase 
construction parameterizations step enable host dgp algorithms 
interesting areas study include extending method handle higher genus models boundaries missing feature point specifications additional constraints applications animation transfer animation controls shape computing principal components large database models search recognition code design efficient compression multiple shapes consistent watermarking authentication 
acknowledgments research reported supported part nsf dms dms aci alias wavefront microsoft intel lucent technologies packard foundation 
special discussions motivating research reviewers feedback adam finkelstein support tony derose insightful comments igor guskov remeshing code lee application discussions 
models courtesy cyberware stanford university max planck institut computer university washington 
chen guaranteeing manifold property meshes 
proceedings shape modeling international 
eck derose duchamp hoppe stuetzle multiresolution analysis arbitrary meshes 
proceedings siggraph 
floater parameterization smooth approximation surface triangulations 
computer aided geometric design 
guskov sweldens schr der normal meshes 
proceedings siggraph 
hughes scheduled fourier volume morphing 
computer graphics proceedings siggraph 
schr der sweldens progressive geometry compression 
proceedings sig graph 
kimmel sethian fast marching method triangulated domains 
proceedings national academy science vol 

krishnamurthy levoy fitting smooth surfaces dense polygon meshes 
proceedings siggraph 
lee dobkin sweldens schr der multiresolution mesh morphing 
proceedings sig graph 
lee sweldens schr der dobkin maps multiresolution adaptive parameterization surfaces 
proceedings siggraph 
modeling rendering realistic facial animation 
rendering techniques th eurographics workshop rendering 
turk pentland eigenfaces recognition 
journal cognitive neuroscience 
