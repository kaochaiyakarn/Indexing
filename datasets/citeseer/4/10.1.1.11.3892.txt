int digit querying world wide web alberto mendelzon george mihaila tova milo department computer science csri university toronto toronto canada computer science department tel aviv university tel aviv israel received september accepted november 
world wide web large heterogeneous distributed collection documents connected hypertext links 
common technology currently searching web depends sending information retrieval requests index servers index documents nd navigating network 
problem users aware various index servers dozen currently deployed web strengths weaknesses peculiarities query interfaces 
serious problem queries exploit structure topology document network 
propose query language websql takes advantage multiple index servers requiring users know integrates textual retrieval structure topology queries 
give formal semantics websql calculus novel virtual graph model document network 
propose new theory query cost idea query locality network visited answer particular query 
give algorithm characterizing websql queries respect query locality 
describe prototype implementation websql written java 
keywords index server web sql world wide web world wide web berners lee large heterogeneous distributed collection documents connected hypertext links 
current practice nding preliminary version symposium parallel distributed information systems correspondence mendelzon documents interest depends browsing network links searching sending information retrieval requests index servers index documents nd navigating network 
limitations browsing search technique known disorientation resulting infamous lost hyperspace syndrome 
far keyword searching problem users aware various index servers dozen currently deployed web strengths weaknesses peculiarities query interfaces 
degree remedied front ends provide uniform interface multiple search engines hasan savvysearch dreilinger metacrawler selberg etzioni 
serious problem queries exploit structure topology document network 
example suppose looking ibm catalog prices personal computers 
keyword search terms ibm personal computer price metacrawler returns including things advertisement bought mac shirt vldb home page 
know web address called url uniform resource locator ibm home page www ibm com able restrict search pages directly indirectly reachable page stored server 
currently available tools possible navigation query distinct phases navigation construct indexes query search constructed 
propose tool combine query navigation 
emphasis controlled navigation 
currently tens millions documents web growing network bandwidth limited resource 
important able distinguish queries documents stored local server access relatively cheap stored remote serves access expensive 
important able analyze query determine cost terms remote document accesses needed answer 
propose query language websql takes advantage multiple index servers requiring users know integrates textual retrieval structure topology queries 
introducing language sect 
sect 
give formal semantics websql calculus novel virtual graph model document network 
sect 
propose new theory query cost idea query locality network visited answer particular query 
query cost analysis prerequisite query optimization give algorithm characterizing websql queries respect query locality believe useful query optimization process develop query optimization techniques 
sect 
describe prototype implementation websql written java 
conclude sect 

related query languages hypertext documents beeri consens mendelzon watanabe query languages structured semi structured documents abiteboul christophides gu ting navarro baeza yates quass 
di ers signi cantly streams 
papers distinction documents stored locally remotely attempt capitalize existing index servers 
far document structure support minimal attributes common html documents url title type length modi cation date 
assume internal document structure known partially known structured semi structured documents 
consequence language exploit internal document structure known planning build top current framework 
closer approach ql konopnicki shmueli 
motivation similar theirs approach substantially different 
emphasize extensibility interfacing external user written programs unix utilities 
extensibility highly desirable goal tool runs known environment aim tool downloaded arbitrary client run minimal interaction local environment 
reason query engine prototype implemented java programming language sun microsystems downloaded applet java aware browser 
di erence provide formal query semantics emphasize distinction local remote documents 
theory analysis query locality possible 
hand support lling forms encountered navigation discuss view facility ql currently support 
regard intention provide fully functional tool clean minimal design de ned semantics extended bells 
ort direction weblog language lakshmanan 

websql weblog emphasizes manipulating internal structure web documents 
regular expressions specifying paths rely datalog recursive rules 
describe implementation formal semantics 
describe speci cally addressed digital libraries 
declarative language integrates web navigation content search obvious applications digital library construction maintenance example building maintaining specialized indices line bibliographies de ning virtual documents stored digital library building applications integrate access speci digital libraries access related web pages 
websql language section introduce sql language world wide web 
proposing relational model www 
give examples queries syntax language 
formal semantics queries de ned section 
di culties building sql query language web absence database schema 
trying model document structure kind object oriented schema christophides 
quass 
take minimalist relational approach 
highest level abstraction web object identi ed uniform resource locator url binary content interpretation depends type html postscript image audio 
web servers provide additional information type length modi cation date object 
html document title text 
query purposes associate web object tuple virtual relation document url title text type length modif attributes character strings 
url key attributes null 
de ne virtual relation express content query query refers content documents sql notation 
example 
find html documents hypertext 
select url title length modif document mentions hypertext type text html interested just document content hypertext structure web hypertext links rst class citizens model 
particular concentrate html documents hypertext links originating 
hypertext link speci ed inside html document sequence known anchor form href href label href standing hypertext url referenced document label textual description link 
capture information link tuple anchor base href label base url html document containing link href referred document label link description 
attributes character strings 
pose queries refer links documents 
example 
find links applets documents java 
select label href document mentions java anchor base label contains applet order study topology web want distinction links point document appear document stored site document remote server 
de nition 
hypertext link said interior destination source document local destination source documents different located server global destination source documents located di erent servers 
distinction important expressive power point view point view query cost analysis locality theory sect 

assign arrow symbol link types 
denote interior link link link 
denote empty path 
path regular expressions built symbols concatenation alternation repetition 
note anchor strictly speaking relation multiset tuples document may contain links destination having label html links point speci named fragments destination document fragment name incorporated url example www com fund html dp refers fragment named dp document url www com fund html 
ignore detail rest example 
regular expression represents set paths containing zero length path paths start global link continue zero local links 
express queries referring explicitly hypertext structure web 
example 
starting department computer science home page nd documents linked paths length containing local links 
keep documents containing string database title 
select url title document www cs toronto edu 
title contains database course combine content structure speci cations query 
example 
find documents mentioning computer science documents linked paths length containing local links 
select url title url title document mentions computer science document 
note di erent keywords men tions contains string matching clauses respectively 
reason mean di erent things 
conditions clause evaluated sending index servers 
result clause obtained navigation index server query set candidate url restricted evaluating conditions clause 
distinction re ected formal semantics implementation 
remove distinction query optimizer decide conditions evaluated index servers tested locally 
prefer keep explicit distinction index servers perfect complete programmer may want control conditions evaluated 
bnf speci cation language syntax fig 

syntax follows standard sql select statement 
queries refer www database schema introduced 
table document anchor field valid attribute table applies 
formal semantics section introduce formal foundation websql 
starting inherent graph structure www de ne notion virtual graph construct calculus query language setting 
de ne semantics websql queries terms calculus 
data model assume nite set data values nite set simple types domains subsets tuple types tn attributes ai simple type ti de ned standard way 
domain type denoted dom 
tuple denote ai value vi associated attribute ai 
distinguish simple type oid object identi ers tuple types node link structure node id oid ai ti link oid oid bj tj attribute names de nitions distinct 
shall refer tuples rst type node objects tuples second type link objects 
model world wide web documents mapped node objects hypertext links link objects 
context object identi ers oid url node link tuples model websql document anchor virtual tables introduced informally sect 

virtual graphs set documents web nite undetermined produce complete list documents available certain moment 
ways nd documents web navigation starting known documents querying index servers 
url agent fetch associated document give error message document exist 
behavior modeled computable partial function mapping oid node objects 
document fetched determine nite set outgoing hypertext links document 
modeled computable partial function mapping oid sets link objects 
practice navigation done selectively certain links properties 
order capture introduce nite set unary link predicates plink fa second way discover documents querying index servers 
model lists url returned index servers introduce possibly nite set unary node predicates pnode fp predicate interested set dom oid trueg 
example particular node predicate may associated keyword true documents contain keyword text 
de nition 
virtual graph tuple qnode pnode plink qnode dom oid dom node dom oid dom link computable partial functions pnode set unary predicates dom oid plink nite set unary predicates dom link 
node oid dom oid qnode de ned nite qnode oid id oid oid dom oid qnode oid de ned oid de ned oid nite oid de ned say edge qnode qnode predicate plink partial computable boolean function set dom link de ned links oid oid de ned 
function val pnode 
dom oid de ned val dom oid trueg computable example 
virtual graph node link pnode plink node url oid title string text string link oid oid label string dom oid url url url node url url url url url link url url url url pnode plink 
note virtual qnode pnode plink induces underlying directed graph qnode dom oid oid dom oid oid 
calculus manipulate graph directly computability issues 
captures intuition world wide web hypertext graph nodes links discovered navigation 
calculus url toronto visiting toronto url ottawa national capital url new york tourist information url url go ottawa url url go new york url url back toronto url url back toronto proceed de ne calculus querying virtual graphs 
introduce path regular expressions specify connectivity queries 
notions range expressions ground variables restrict queries evaluation require enumerating node virtual graph nally de ne calculus queries 
path regular expressions consider virtual graph denote underlying graph apath de ned way directed graph ek call ek path index ei ei 
path called simple di erent edges ei ej starting points 
order express queries connectivity need way de ne graph patterns 
recall plink set link properties virtual graph 
plink link property link object 
true say property de ne set properties link fa trueg 
choose view formal language alphabet plink 
property true contains single character string study properties path extend de nition set properties link paths follows ek path de ne ek ll jx concatenation languages example 
suppose want require property hold links path ek 
expressed easily terms requiring 
order specify constraints example introduce path regular expressions regular expressions alphabet plink 
regular expression alphabet plink associate language link usual way 
de nition 
say path matches path regular expression words path matches path regular expression word set properties matches regular expression range expressions algebra traditional relational database operators select project cartesian product 
contents database assumed available query engine operations executed worst case enumerating tuples 
case world wide web result select operation computed way simply enumerate documents 
navigation querying index servers 
want calculus express queries evaluated having enumerate web 
enforce restriction introduce range conditions serve restrictions variables queries 
de nition 
qnode link pnode plink virtual graph 
underlying graph 
range atom expression forms path oids variable names path regular expression pnode oid variable name oids variable names range expression expression form fx xn amg am range atoms xn variables occurring ti speci es type variable xi consider valuation fx maps variable node edge underlying graph 
extend dom oid oid node oid maps oid appearing atom corresponding node 
de nition assigns semantics range atoms 
de nition 
node link pnode plink virtual graph 
range atom 
say validated valuation path exists simple path matching path regular expression id true 
id give semantics range expressions 
de nition 
consider range expression fx amg 
set tuples xn jm valuation am validated mg called range example 
set nodes satisfying certain node predicate outgoing links may speci ed range expression fx node ground variables ground expressions de nition gives de ned semantics range expressions problems may arise examining evaluation certain expressions example expressions node nd pairs nodes connected link type fx node nd nodes links outgoing algorithmically evaluated arbitrary virtual graph evaluation involve enumeration nodes 
impose syntactic restrictions disallow range expressions manner similar de nition safe expressions datalog 
consider virtual graph qnode pnode plink 
examine evaluation atoms cases de nition path determining pairs nodes separated simple paths matching path regular expression possible constant 
known traverse graph starting generate simple paths matching determining values variable constant web links traversed direction way determine values arbitrary enumerating nodes graph 
variables 
similar argument shows constant 
atoms form pnode pose problem trueg computable de nition 
considerations lead de nition 
de nition 
variable occurring range atom said independent variable atom 
variables appear atom order path say depends idea independent variables determined directly dependent variables determined variables depend assigned values 
de nition gives syntactic restriction range expressions ensure computability 
de nition 
fx xn amg range expression 
variable fx xng said ground exists atom ai independent ai depends ai variable ground expression said ground variables ground 
theorem 
consider virtual graph node link pnode plink range expression fx xn amg 
ground computable 
proof 
consider dependency graph gd vd ed vd fx ed dependency relation edge xi xj xj depends xi atom ak 
distinguish cases depending presence cycles gd 
consider rst acyclic case reduce cyclic case acyclic transforming expression equivalent 
case gd acyclic 
doing topological sort construct total order variables compatible dependency relation permutation simplify notation rename variables permutation variable xi depends variables preceding list xn 
variable xi de ne set ixi mg set indices atoms xi occurs independent dependent variable 
variable ground sets ixi non empty 
depend variable ground occurrences atoms independent occurrences 
means compute set values px ix trueg furthermore consider element set set empty empty computation complete 
replace occurrences atoms constant denote transformed atoms ai 
occurrences atoms ai ix independent dependent 
substitution occurrences ai ix independent 
means compute set values tuples px rx ix trueg consider arbitrary element set empty go back choose value 
replace occurrences atoms constant iterate process sequentially variables 
compute sets rx xk ck xk ck trueg ix sequentially computed set element cn set add tuple cn 
recursively take value cn set recompute set xn compute tuples 
recursive procedure described fig 

case ii gd acyclic consider cycle gd xi xi xik xi de nition atoms infer variables cycle type node link variable outdegree zero dependency graph 
fact variables ground infer vertices cycle incoming edge outside cycle fig 

breaking dependency cycle independent occurrence atom 
loss generality consider xi property 
introduce new variable xn replace occurrences xi atoms depends xik xn 
way edge xik xi replaced edge xik xn breaking cycle see fig 

add new atom am path xn please note variables ground modi ed expression 
denote new expression 
atom am ensures tuples xn di erent nodes separated empty path 
means px 
new dependency graph cycle gd 
iterating procedure cycles left obtain expression evaluated method case step compute px 
concludes theorem proof 

converse theorem true computable range expressions ground 
example consider fx path false false plink unsatis able link predicate 
ground trivially computable 
prove computable range expression equivalent ground range expression 
queries restricting domain large non computable set nodes links computable set may traditional relational selection projection impose conditions result set query 
allows introduce general format queries calculus 
assume set ps binary predicates simple types 
examples predicates include equality type various inequalities numeric types substring containment alphanumeric types 
comes consequence general theorem mendelzon milo de nition 
virtual graph query expression form pl fx xn amg range expression comma separated list expressions form xi aj aj attribute type ti boolean expression constructed binary predicates ps applied expressions xi aj constants standard operators semantics select project operators standard 
websql semantics ready de ne semantics websql language terms formal calculus introduced 
need model web virtual graph node link pnode plink dom oid nite set syntactically correct url element url dom oid node url document referred url unde ned url refer existing document 
note node url computable value computed sending request web server speci ed url 
link url set anchors document referred url unde ned url refer existing document 
extract links appearing html document scanning contents search tags 
means partial function link url computable 
order model content queries consider set node predicates pnode rg cw true document contains string consider set link predicates plink accordance de nition path regular expressions websql 
semantics websql query de ned usual terms selections projections 
query form select translates calculus query plr fx ang obtained cn transformation rules ci document ai path ci document mentions ai cw ci anchor base url ai allow legal websql queries translate calculus queries satisfy syntactic restrictions sect 

query locality cost important aspect query evaluation 
conventional approach database theory estimate query evaluation time function size database 
web context realistic try evaluate queries complexity considered feasible usual theory polynomial linear time 
query practical attempt access network 
query analysis involves context tasks rst estimate part network may accessed query cost query analyzed traditional ways function size sub network 
section concentrate rst task 
note analogous conventional database context analyzing queries physical level estimate number disk blocks may need access 
rst task need way measure locality query far originating site search order answer 
having bound size sub network needed evaluate query means rest network ignored 
fact query sensitive bounded sub network give result evaluated network di erent network containing sub network 
motivates formal de nition query locality 
important issue cost accessing subnetwork 
current web architecture access remote documents done fetching document analyzing locally 
cost access ected document properties size cost communication site query evaluated site document stored 
recall model web virtual graph 
model access costs extend de nition virtual graphs adding function dom oid dom oid cost accessing node node locality cost de ne formal notion locality 
rst explain means networks contain sub network 
assume virtual graphs discussed sets node link predicate names 
de nition 
node link pnode plink node link node link extended virtual graphs 
dom oid 
say agrees 
node node link link 
node predicates pnode node de ned pnode holds holds 
link predicates plink links link plink holds holds informally means graphs contain sub network induced nodes properties graphs graphs subnetwork linked rest world way 
consider locality queries 
context query mapping domain virtual graphs domain sets tuples simple types 
standard de nition queries require mapping generic computable 
irrelevant discussion ignore issue 
formal de nitions genericity computability context web queries abiteboul vianu mendelzon milo 
de nition 
query class virtual graphs graph dom oid 
say query evaluated node depends graph agrees subset satisfying 
minimal set documents needed computing note may unique 
reasonable information may stored places network 
evaluated node cost accessing documents sum documents node de ned 
interested bounding cost function cost accessing nodes network sum node de ned 
de nition 
locality cost query evaluated node maximum virtual graphs sets depends cost accessing document node interested bounding locality cost query function cost accessing network 
total cost note locality cost query linear obviously queries locality impractical network needs accessed order answer 
interested constant bounds constants may depend network parameters number documents site maximal number url single document certain communication costs general access documents local server considered cheap documents remote servers need fetched relatively expensive 
simplify discussion highlight points interest assume simple cost function 
assume local accesses free access cost remote documents bounded constant 
similar results obtained complex cost function 
examples consider query select document www cs toronto edu 
www cs toronto edu local server 
query accesses local documents pointed home page toronto cs department remote ones 
locality cost 
hand query select document www cs toronto edu accesses local remote documents 
number remote documents accessed depends number anchors home page contain remote url 
worst case url page remote 
bound number url single document locality cost query 
example consider queries select document www cs toronto edu 
select document www cs toronto edu 
select document www cs toronto edu query accesses local documents reachable cs department home page locality 
query accesses documents reachable global link followed unbounded number local links 
bound number url single document bound number documents single server locality cost query ks 
worst case url cs department home page documents distinct servers documents servers reachable referenced documents 
query accesses reachable documents 
worst case may attempt access network cost 
locality analysis various features query language identify potentially expensive components query 
user advised rephrase speci parts give cost bounds terms time number sites visited cpu cycles consumed information available dollars 
query evaluation monitor resource usage interrupt query bound reached 
query computed phases 
documents depends fetched query evaluated locally 
course method ective computing documents need fetched complex computing 
result shows computing harder terms network needs scanned computing proposition 
class graphs query query graph depends depends proof auxiliary de nition 
de nition 
query class graphs graph set nodes say local graph agrees 
note query depends local local shall call window 
may windows 
proof claim claim 
graphs set nodes belonging graphs query hold agrees local local 
ii agrees depends depends 
proof 
sketch rst prove claim 
local graph agrees 
particular holds 
agrees set graphs agree exactly set containing graphs agreeing graph agrees local claim ii follows immediately claim 
ready prove proposition 
proof works contradiction 
clearly window depends contain part answer 
assume shall show local contradiction minimality assume local 
graph agrees di erent answer 
depend claim ii says agrees depends depends contradiction 
encouraging result general practical 
says computing harder terms data required say compute fact turns query language computationally powerful problem computing undecidable 
example query language relational calculus augmented web sql features network satis able empty 
simple relational calculus formula path expressions 
query language complex locality analysis may complex impossible 
cases locality cost analyzed ectively ciently 
particular case websql query language 
fact language usage links links traversal explicit facilitates analysis task 
subsection show locality websql queries determined time polynomial size query 
locality websql queries start considering simple queries clause consists single path atom starting local server examples 
analyze general queries 
analyzing single path expressions analysis examining types links internal local global traversed paths described path expression 
particular attention paid starred sub expressions describe paths arbitrary length 
assume query evaluated node denote cost accessing network graph bound number url appearing single document bound number documents single server 

expressions global links access local documents locality 

expressions containing global links appear starred sub expression potentially access documents network 
locality 
expressions global links starred sub expressions contain global link symbol access remote documents number limited 
paths de ned expressions form 
lm 
max lm 
number documents accessed path bounded min min bounds 
number di erent documents reachable path li min kli 
documents may contain global links worst case min kli links documents point les distinct servers 
number documents reached path min kl order reach documents current web architecture les path need fetched 
get bound multiply number length path 
number bounded number global links appearing path expression 
computed analyzing regular expression 
bound exists path expression containing global link locality cost worst case single document may point nodes network su ces build nfa expression compute lengths maximal path successive global links counting epsilon moves internal links 
li nite path successive global links contain cycle local link case min li done time polynomial size expression 
bound ectively computed 
expression simple upper bound locality cost 
tight bound computed polynomial time 
chose bound exact expression complex add insight analysis omit 
observe starred sub expressions contains local link worst case sub expressions attempt access documents server 
case bound min 
servers may contain documents locality cost may high 
indicates queries potentially expensive user advised provide query evaluator certain bounds resources 
analyzing queries analyze websql query su cient look individual path atoms 
clause needs analyzed 
example consider query select document mentions vldb anchor base document 
document 
path expressions query involve local links 
links returned index server may point remote documents paths traversed sub condition document mentions vldb document 
form 
similarly links traversed anchor base internal local global paths traversed sub condition document mentions vldb anchor base document 
form 
regular expression describing path accessed query 
assume querying index server done locality number url returned index server single query bounded number locality cost evaluating query bounded plus times locality bound 
interestingly clause websql query transformed regular expression de paths accessed evaluation 
locality cost querying index query bounds size answers lets determine locality clause time polynomial size query 
bounding locality clause provides upper bound locality query slightly better bound obtained analyzing select clauses 
rst sketch algorithm building regular expression corresponding paths traversed clause 
explain select clauses locality analysis 
build regular expression auxiliary notion determination 
de nition 
recall domain term ai clause corresponds atom calculus 
say ai determines variable independent depends variable domain terms ai aj say ai determines aj ai determines variables aj 
simplicity assume variable clause determined single domain term 
observe serious restriction query transformed equivalent query satis es restriction variable depends terms variables terms renamed equality conditions equating new variables old added clause 
assumption determination relationship domain terms described forest 
forest derive regular expression 
forest built follows nodes atoms clause edges describe dependency relationship variables 
note roots forest index terms mentions terms anchor path terms constant url starting point 
non root nodes anchor path terms 
example forest query contains single tree form document mentions vldb document anchor base document step replace term node forest node containing corresponding path expression index terms replaced 
non root anchor terms replaced 
root ones replaced expression constant url appearing local server 
non root path terms replaced regular expression appearing atom 
root ones url local server replaced regular expression concatenated expression 
example tree take obtained forest build regular expression 
done starting leaves going forest concatenating regular expression node union expressions built children nally union roots forest 
expression obtained tree 
locality clause bound locality query 
slightly better bound obtained analyzing select clauses 
select clause documents corresponding variables variable depend data url retrieved means link path traversed 
easily incorporated locality computation regular expression 
clause condition unsatis able locality immediately reduced 
implementation section presents prototype implementation websql compiler query engine user interface 
websql compiler query engine implemented entirely java language introduced sun microsystems speci purpose adding executable content web documents 
java applications incorporated html documents called applets reside web server transferred demand client site interpreted client 
prototype user interface websql system accessible websql home page www cs toronto edu websql html cgi script 
developed standalone gui java application supports interactive evaluation queries 
websql system architecture depicted fig 
compiler virtual machine starting bnf speci cation websql built recursive descent compiler checking syntactic correctness recognizes constructs query equivalent expression 
obtained intuitive discussion fig 

architecture websql system stores relevant information internal structures 
parsing stage complete compiler generates set nested loops evaluate range atoms clause 
consider query template select fields xn obj obj 
obj xn condition xn websql compiler translates query program custom designed object language implementing pseudo code algorithm depicted fig 

note nested loops algorithm equivalent recursive algorithm proof theorem restricted form domain specifying expressions 
object program executed interpreter implements stack machine 
stack heterogeneous able store type object integers strings vectors node link objects 
evaluation range atoms done specially designed operation codes results vectors node link objects 
query engine interpreter encounters operation code corresponding range atom query engine invoked perform actual evaluation 
types atoms de nition 
examine sequence path engine generates simple paths starting match determining list qualifying values mendelzon wood give algorithm nding simple paths matching regular expression labeled graph 
adapted algorithm virtual graph context 
full details see mihaila 
engine queries customizable set known index servers currently yahoo lycos string builds sorted list url merging individual answer sets engine determines rst html document parses builds list link objects set anchor tags html document engine returns empty list 
user interface order websql available www users designed cgi program invoked html form 
appearance html form shown fig 
screen shot hotjava browser 
input form template common websql queries making easier user submit query 
query complicated typed alternative text eld 
query entered may submitted pressing appropriate button 
point java applet collects data input elds assembles websql query 
query sent parser checks syntax produces object code 
object code executed interpreter nally query result set computed 
set formatted html document displayed browser 
url elds appear result formatted anchors user may jump easily associated documents 
contains screen shot typical result document 
performance execution time websql query uenced various factors related network accesses performed process building result set 
factors mention number size fig 

websql user interface transferred documents available network bandwidth performance load accessed web servers 
query processing system maintain persistent local information queries access web new query 
care taken formulating queries fig 

websql query results estimating number documents retrieved 
executed number queries running java applet described previous section instance hotjava browser running solaris sun cpus mbytes ram 
execution times queries tested vary seconds simple content queries minutes structural queries involving exploration web subgraphs nodes 
discussion websql language querying world wide web formal semantics terms new virtual graph model proposed new notion query cost appropriate web queries applied analysis websql queries 
described current prototype implementation language 
looking fig 
skeptical complex interface replace simple keyword search engines 
purpose 
just sql large users programmers build applications see websql tool helping build web applications quickly reliably 
examples selective indexing 
web grows larger want build indexes selected portion network 
websql specify portion declaratively 
view de nition 
generalization previous point index special kind view 
views virtual documents important facility discussed konopnicki shmueli declarative language needed specify 
link maintenance 
keeping links current checking documents point changed common task automated help declarative query language 
directions extending 
limited xed repertoire link types internal local global extend language possibility de ning arbitrary link types terms properties new types regular expressions 
example interested links pointing nodes canada labels contain strings back home second internal document structure known lines christophides 
quass 

great deal scope query optimization 
currently attempt selective index servers query propagate conditions clause avoid fetching irrelevant documents 
interesting investigate distributed architecture subqueries sent remote servers executed avoiding unnecessary data movement 

supported information technology research centre ontario natural sciences engineering research council canada 
anonymous reviewers suggestions 
abiteboul vianu queries computation web 
proc 
icdt abiteboul cluet milo querying updating le 
proceedings th vldb conference beeri logical query language hypertext systems 
proc 
european conference hypertext cambridge university press pp berners lee cailliau luotonen frystyk nielsen secret world wide web 
commun 
acm christophides abiteboul cluet scholl structured documents novel query facilities 
proc 
acm sigmod pp consens mendelzon expressing structural hypertext queries graphlog 
hypertext pp dreilinger savvysearch home page 

cs colostate edu 
gu ting zicari algebra structured ce documents 
acm tois hasan golovchinsky chignell mendelzon visual web sur ng hy 
proceedings cascon toronto november 
ibm canada 
ftp db toronto edu pub papers cascon ps konopnicki shmueli query system world wide web 
proc 
vldb pp lakshmanan sadri subramanian declarative language querying restructuring web 
proc 
th 
international workshop research issues data engineering ride new orleans february press mendelzon milo formal models web queries 
proc 
acm pods press mendelzon wood finding regular simple paths graph databases 
siam comput 
mihaila websql sql query language world wide web 
master thesis university toronto watanabe queries structure hypertext 
foundations data organization algorithms fodo berlin heidelberg new york springer pp navarro baeza yates model query documents contents structure 
proc 
acm sigir 
pp quass rajaraman sagiv ullman widom querying semistructured heterogeneous information 
deductive object oriented databases proceedings dood conference singapore december 
berlin heidelberg new york springer pp selberg etzioni multi service search comparison metacrawler 
proceedings fourth int www conference boston december 
www org pub conferences www papers 
sun microsystems 
java tm programming internet 
java sun com 

