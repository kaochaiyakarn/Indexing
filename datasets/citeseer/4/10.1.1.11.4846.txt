reputation management networks kamvar stanford university stanford edu mario schlosser stanford university schloss db stanford edu hector garcia molina stanford university hector db stanford edu peer peer file sharing networks currently receiving attention means sharing distributing information 
experience networks gnutella shows anonymous open nature networks offers ideal environment spread self replicating inauthentic files 
describe algorithm decrease number downloads inauthentic files peer peer file sharing network assigns peer unique global reputation value peer history uploads 
distributed secure method compute global reputation values power iteration 
having peers global reputation values choose peers download network effectively identifies malicious peers isolates network 
simulations reputation system shown significantly decrease number inauthentic files network variety conditions malicious peers cooperate attempt deliberately subvert system 
categories subject descriptors computer communication networks distributed systems distributed applications information systems information storage search retrieval selection process information systems database administration security integrity protection general terms keywords peer peer trust distributed eigenvector computation 
peer peer file sharing networks benefits standard client server approaches data distribution including increased robustness scalability diversity available data 
open anonymous nature networks leads complete lack accountability content peer puts network opening door abuses networks malicious peers 
attacks anonymous malicious peers observed today popular peer peer networks 
example malicious copyright held author owner 
www may budapest hungary 
acm xxx 
users networks introduce viruses 
gnutella worm spreads making copy peer gnutella program directory modifying gnutella ini file allow sharing files 
far common inauthentic file attacks malicious peers respond virtually query providing decoy files tampered 
suggested development systems depend largely availability novel methods ensuring peers obtain reliable information quality resources receiving 
context identifying malicious peers sources inauthentic bad quality files method superior attempting track inauthentic files method implemented kazaa network malicious peers easily generate virtually unlimited number inauthentic files banned participating network 
method peer assigned unique global reputation value reflects experiences peers network peer approach peers network participate computing values distributed node symmetric manner minimal overhead network 
furthermore describe ensure security computations minimizing probability malicious peers system lie benefit 
show values identify peers provide material deemed inappropriate users peer peer network effectively isolate network 

design considerations issues important address reputation system 

system self policing 
shared ethics user population defined enforced peers central authority 

system maintain anonymity 
peer reputation associated opaque identifier peer gnutella username externally associated identity peer ip address 

system assign profit newcomers 
reputation obtained consistent behavior transactions advantageous malicious peers poor reputations continuously change opaque identifiers obtain newcomers status 

system minimal terms computation infrastructure storage message complexity 

system robust malicious collectives peers know attempt collectively subvert system 

reputation systems important example successful reputation management online auction system ebay 
ebay reputation system buyers sellers rate transaction reputation participant sum ratings months 
system relies centralized system store manage trust ratings 
distributed environment peers may rate transaction ebay system 
example time peer downloads file peer may rate transaction positive negative 
reasons peer may rate download negative file downloaded inauthentic tampered download interrupted 
ebay model may define local reputation value sum ratings individual transactions peer downloaded peer equivalently peer store number satisfactory trans actions peer sat number unsatisfactory transactions peer unsat 
cleft ned sat unsat previous reputation systems similar notions local reputation values 
considers complex pieces information specify algorithms compute reputation values peers 
challenge reputation systems distributed environment aggregate local reputation ratings centralized storage management facility 
previous systems cited addresses issue previous systems proposed suffers drawbacks 
aggregates ratings peers doesn get wide view peer reputation aggregates ratings peers network system messages asking peer local reputation values query 
reputation system aggregates local reputation ratings users natural manner minimal overhead terms message complexity 
approach notion transitive trust peer high opinion peers provided authentic files 
peer trust opinions peers peers honest files provide honest reporting local trust assessments 
show idea transitive trust leads system global reputation values correspond left principal eigenvector matrix normalized local reputation values 
show perform eigenvector computation distributed manner just lines code message complexity provably bounded empirically low 
importantly show system highly effective decreasing number unsatisfactory downloads peers network form malicious collective attempt subvert system 

section describe system global reputation peer local reputation values assigned peer peers weighted global reputations assigning peers 
section show normalize local reputation values manner leads elegant probabilistic interpretation efficient algorithm aggregating values 
section discuss aggregate normalized reputation values sensible manner 
section discuss probabilistic interpretation local global reputation values 
section section algorithm computing global reputation values 
section discuss global reputation values 
normalizing local reputation values order aggregate local reputation values necessary normalize manner 
malicious peers assign arbitrarily high local reputation values malicious peers arbitrarily low local reputation values peers easily subverting system 
define normalized local reputation value follows ensures values 
notice max undefined 
address case section am drawbacks normalized reputation values distinguish peer peer interact peer peer poor experience 
values relative absolute 
know peer reputation peer eyes peer don know am reputable mediocre 
choose normalize local reputation values manner leads elegant probabilistic model ows computation describe renormalizing global reputation values iteration prohibitively costly large distributed environment 
furthermore able achieve substantially results despite drawbacks mentioned 
aggregating local reputation values wish aggregate local trust values 
natural way distributed environment peer ask acquaintances opinions peers 
sense weight opinions trust peer places cc ti represents trust peer places peer asking friends 
write matrix notation define matrix cj vector containing values ct 
note ti desired 
useful way peer gain view network wider experience 
reputation values stored peer reflect experience peer 
order get wider view peer may wish ask friends friends 
continues manner complete view network large iterations assumptions aperiodic guarantee practice address section 
fortunately trust vector converge vector peer converge left principal eigenvector words global reputation repeat algorithm simple non distributed algorithm vector model 
elements quantify trust system places peer probabilistic interpretation useful note exists straightforward probabilistic interpretation method random surfer model 
agent searching reputable peers crawl network rule peer crawl peer probability 
crawling manner agent reputable peers peers 
stationary distribution markov chain defined normalized local reputation matrix global reputation vector 
non distributed algorithm section describe basic trust algorithm ignoring distributed nature peer peer network 
assume central server knows values performs computation 
section describe computation may performed distributed environment 
simply wish compute large define vector representing uniform probability distribution peers re 
section said wish compute ct reputation vector peer converge principal left eigenvector may 
basic level algorithm proceed algo rithm 
practical issues practical issues addressed simple algorithm priori notions trust inactive peers malicious collectives 
priori notions trust 
peers network known trustworthy 
example peers join network known trustworthy malicious peers generally don enter peer peer network network development 
useful incorporate notions trust natural seamless manner 
defining distribution pre trusted peers 
example set peers known trusted may ipi andp 
distribution ways 
presence malicious peers generally converge faster start vector 
describe ways distribution 
inactive peers 
peer doesn download anybody assigns zero score peers equation undefined 
case set cj ps 
redefine cj peer doesn know anybody doesn trust anybody choose trust pre trusted peers 
go repeat algorithm non distributed algorithm malicious collectives 
peer peer networks poten tial malicious collectives form 
malicious collective group malicious peers know give high local reputation values give peers low local trust values attempt subvert system gain high global reputation values 
address issue constant 
equivalent setting opinion vector peers breaking collectives having peer place trust peers part collective 
probabilistically equivalent saying agent crawling network probabilistic model section get stuck crawling malicious collective step certain probability crawling pre trusted peer 
notice matrix irreducible aperiodic guaranteeing computation converge 
modified algorithm algorithm 
distributed algorithm algorithm peers network cooperate compute store global trust vector computation storage message overhead peer minimal 
distributed environment challenge arises store 
previous sections suggested peer store local trust vector suggest peer store global trust value 
presentation purposes ignore issues security moment allow peers store trust values 
address issues security section 
fact peer compute global trust value 

ap inspection show component wise version 
notice peer limited interaction peers components equation zero 
lends simple distributed algorithm shown algorithm 
interesting note things 
pre trusted peers need know 
means pre trusted peers may remain anonymous needs know pre trusted pre trusted peers maintain anonymity pre trusted peers 
secondly networks peer limited interaction peers 
benefits 
compu tation 
ct ct ap intensive zero 
second number messages passed small small 
case network full heavily active peers enforce benefits limiting number local trust values peer report 
recall moment assume peers honest may report trust values including pre trusted peer 
secure version section definitions set peers downloaded files peer set peers peer downloaded files algorithm peer query peers repeat ct ap send ci peers compute 
wait peers return algorithm distributed algorithm incorporating priori notions trust prep convergence residual algorithm convergence algorithm complexity complexity algorithm bounded ways 
algorithm converges fast network peers query cycles refer section description simulate system depicts residual ll 
clearly algorithm converged iterations computed global reputation values change significantly low number iterations 
distributed version algorithms corresponds exchanges updated reputation values peers 
second specifically limit number local reputation values peer reports 
modified version algorithm peer reports subset total set local reputation values 
preliminary simulations shown scheme perform comparably algorithm peers report local reputation values 

secure algorithm algorithm previous section peer computes reports trust value malicious peers easily report false trust values subverting system 
combat implementing basic ideas 
current trust value peer computed reside peer easily subject manipulation 
pos dimensional hash space different peer network compute trust value peer 
second interest malicious peers return wrong results supposed compute peer trust value 
trust value peer network computed peer 
secure version distributed trust computation algorithm peers dubbed mother peers peer compute trust value peer peer needs trust value peer query mother peers 
majority vote trust value settles conflicts arising number malicious peers mother peers presenting faulty trust values opposed correct non malicious mother peers 
assign mother peers distributed hash table dht chord 
dhts hash function deter map keys file names points logical coordinate space 
time coordinate space partitioned dynamically peers system peer covers region coordinate space 
peers responsible storing key value pairs keys hashed point located region 
approach peer mother located hashing unique id peer ip address tcp port point dht hash space 
peer currently covers point part dht region appointed mother peer 
peers system know unique id peer locate mother peer 
modify initial algorithm executed mother peers 
example consider 
peer unique id id mapped points covered peers respectively hash functions 
peers peer mother peers 
cope inherent dynamics system rely robustness designed dht 
example mother peer leaves system passes state trust values ongoing trust computations neighbor peer dht coordinate space 
dhts introduce replication data prevent loss data case trust values case mother peer fails 
algorithm description describe secure algorithm compute global trust vector 
definitions peer number mother peers dht coordinates determined applying set way secure hash functions ho 
hm peer unique identifier 
pos coordinates peer hash space 
peer acts mother peer assigned set daughters set contains indexes peers trust value computation covered peer 
mother peer peer maintains opinion vector daughter peer point algorithm 
peer learn set peers downloaded files daughter peer receive trust assessments peers referring daughter peer peer get know set denotes set peers daughter peer downloaded files kicking global trust value computation daughter peer submit trust assessments peers mother peer providing mother peer 
foreach peer submit local trust ratings mother peers positions pos 
collect local trust ratings sets acquaintances daughter peers submit daughter local trust ratings cd mother peers 
vj collect acquaintances daughter peers foreach query peers repeat compute 
cat cat 
send 
peers wait peers return cat 
algorithm secure algorithm secure algorithm terms increased security reliability include anonymity 
possible peer specific coordinate find peer id exactly computes trust malicious peers increase trust malicious peers 
randomization 
peers enter system select coordinates hash space want located property designed dht possible peer example compute hash value id locate precisely position hash space able compute trust value 
redundancy 
mothers compute trust value peer 
assign mothers peer multidimensional hash functions 
peers system take particular region coordinate space coordinate spaces created multidimensional hash function 
peer unique id mapped different point multi dimensional hash space 

global reputation values clear ways global reputation values peer peer system 
isolate malicious peers network biasing users download reputable peers 
second peers share files rewarding reputable peers 
isolating malicious peers 
peer issues query system may reputation values bias user downloading reputable peers 
way peer download highly trusted peer responds query 
policy leads highly trusted peers overloaded shown section 
furthermore trust built sharing authentic files policy enable new peers build trust system 
different strategy select peers download probabilistically trust values 
particular type probability peer download file responding peer directly proportional reputation value peer policy limits number unsatisfactory downloads network balancing load network allowing newcomers build trust 
experiments section validate 
share 
secondly system may reward peers high reputation values 
example reputable peers may rewarded increased connectivity reputable peers greater bandwidth 
rewarding reputable peers twofold effect 
gives users incentive share files trust rating may achieved sharing authentic files 
current gnutella network peers responsible files peers network share files 
incentives trust ratings reduce number free riders peer peer networks 
ding highly trusted peers gives non malicious peers incentive delete inauthentic files may accidentally downloaded malicious peers actively keeping network tidy 
difficult inauthentic files replicate system 

experiments section assess performance scheme compm ed network trust model implemented 
shall demonstrate scheme performance variety threat models 
simulation findings simulations network model shall explain briefly 
network model 
consider typical network interconnected file sharing peers able issue queries files peers respond queries files transferred peers conclude sem ch process 
query issued peer propagated broadcast hop count horizon network usual gnutella way peers receive query check able respond 
interconnect peers power law network type network prevalent real world networks 
node model 
network consists normal nodes participating network download upload files malicious nodes adversarial nodes participating network undermine performance 
experiments consider different threat models threat model describes behavior malicious peer network 
threat models described detail 
note considerations section nodes network appointed highly trusted nodes 
content distribution model 
interactions peers queries issued queries answered peers computed probabilistic content distribution model 
detailed model described 
briefly peers assumed interested subset total available content network peer initially picks number content categories shares files categories 
shown files shared network clustered content categories 
assume content category files different exist governed zipf distribution 
simulator generates query generate search string 
generates category rank popularity file satisfy query 
category rank zipf distributions 
peer receives query checks supports category shares file 
determined probabilistically distinct files modelled probability query hit peer computed number files peer stores rank file searched peers share popular files lot files category searched 
number files shared peers distributions model taken measurements real world networks 
simulation execution 
simulation network proceeds simulation cycles simulation cycle number query cycles 
query cycle peer network may actively issuing query inactive responding queries passing 
issuing query peer waits incoming responses selects download source nodes responded starts downloading file 
steps repeated peer properly received copy file looking 
con simulation cycle global trust value computation kicked 
statistics collected node particular interested number authentic inauthentic downloads node 
experiment run times results runs averaged 
run experiment see convergence steady state defined descriptions experiments initial transient states excluded data 
base settings apply experiments summarized table 
settings represent fairly small network simulations tractable 
experimented larger networks instances continue hold 
schemes small setting proportionately network scaled 
note settings describe pessimistic scenario powerful adversary malicious peers connect highly connected peers joining network see section respond top queries received large bandwidth able communicate threat models significant fraction network experiments 
experiments indicate scheme works hostile scenario hostile environments 
metrics particularly number tic file downloads versus number authentic file downloads computed global trust values accurately reflect peer actual behavior number inauthentic file downloads minimized 
consider strengths scheme suppressing inauthentic downloads network examine leads unwanted load imbalance network 
section give precise definition global trust values section consider different ways choosing download sources nodes respond query compare performance experiments 
random download source selection deterministic trust download source selection peer load distribution network deterministic load source selection versus non trust network 
load distribution heavily skewed peer eventually accumulate trust network 
random download source probabilistic trust download source peer load distribution network probabilistic load source selection versus non trust network 
load distribution deviate load distribution network random non trust download source se lection close natural load distribution normal gnutella network 
downloading files 
load distribution trust network networks natural load distribution established peers content higher bandwidth able respond queries having higher likelihood chosen download source file scheme high global trust ranking peer additionally contributes peer likelihood chosen download source 
possibly peer vicious circle accumulating trust responding queries chosen frequently download source accumulating trust 
non trust system situation occur responding peers peer usually randomly picked selected download source somewhat balancing load network 
interested integrating load distributing randomization scheme 
experiment figures study network content distribution peer behavior simulation peers malicious peers pre trusted peers initial neighbors peers initial neighbors malicious peers initial neighbors peers time live query messages distinct files peer set content categories supported peer distinct files peer category top queries popular categories files malicious peers respond top queries popular categories files pre trusted peers respond time peer processing queries time pre trusted peer processing queries time peer issues queries time pre trusted peer issues queries download requests peer returns inauthentic file download requests malicious peer returns inauthentic file download source selection algorithm probability peer global trust value selected download source simulation cycles experiment query cycles simulation cycle experiments results averaged table simulation settings file distribution zipf distribution content categories uniform random distribution peer total number distinct files uniform random distribution uniform random distribution varied section probabilistic algorithm varied section load distribution performance network scheme activated 
consider different trust algorithms selecting download sources peers responding query deterministic algorithm probabilistic algorithm 

tr trust values peers responding query deterministic algorithm choose peer highest trust value tax peers responding query load source 
probabilistic algorithm choose peer download source probability tj probability select peer trust value download returns inauthentic file delete peer list responding peers repeat algorithm 
give new peers network start global trust value chance building trust probabilistic algorithm assigns fixed chance download group responding peers trust value 
new peers chosen download source chance trusted member network 
experience probability strikes balance granting malicious peers trust value high chance uploading inauthentic files allowing new peers prove download sources authentic files 
compare download source selection algorithms network trust system deployed peers responding query peer picked download source entirely random 
examine load distribution networks 
assume existence malicious peers experiment 
setup 
simulate network consisting peers peers malicious peers 
standard settings table apply 
running queries system query cycles load distribution measured figures peer network depict load shin fraction uploads full run experiment divided total number uploads entire network 
load distribution network deterministic download source selection algorithm compared load distribution network trust system system employing probabilistic download source selection algorithm compared non trust network 
discussion 
choosing responding peer highest global trust value download source leads vast load imbalance network popular peers accumulating trust value gain popularity 
peer eventually download source virtually queries able answer 
note experiment ran peer turned trusted peer 
choosing download sources probabilistically yields slight deviation terms individual load share peer case trust select download sources responding peers malicious peers impact load distribution peers downloading peers keep trying authentic copy file malicious peers add inauthentic uploads network change number authentic uploads peers 
better natural load distribution network 
peer download source queries system peers participate sharing load mainly determined number popularity files peers share 
measurements show efficiency suppressing inauthentic downloads vary approaches 
remaining experiments probabilistic peer selection algorithm 
strategies malicious peers evaluate performance system suppressing inauthentic downloads 
consider strategies malicious peers cause inauthentic uploads scheme activated 
short malicious peers operating threat model simply try upload inauthentic files assign positive trust ratings malicious peer get interact participating network 
threat model malicious peers know upfront deterministically distribute positive trust ratings 
threat model malicious peers try get positive trust ratings peers providing authentic files cases selected download sources 
threat model group malicious peers network provides authentic files uses trust gain boost trust values group malicious peers provides inauthentic files 
start experiments considering simplest threat model malicious peers initially aware malicious peers simply upload inauthentic files 
threat model malicious peers provide inauthentic file selected download source 
malicious peers set local trust values auth mali peers value inauthentic file downloads authentic file downloads 
setup 
simulate network consisting nodes highly trusted nodes applying standard settings table 
experiment add number malicious peers network malicious nodes nodes network 
fraction steps run experiments depict results 
joining network malicious peers connect highly connected peers network order receive queries travelling network possible 
practice protocols gnutella protocol enable nodes crawl network search highly connected nodes 
run experiments system download sources selected probabilistically global trust values system download sources chosen randomly set peers responding query 
bars depict fraction inauthentic files downloaded simulation cycle versus total number files downloaded period time 
results averaged query cycles experiment 
discussion 
trust scheme malicious peers succeed inauthentic downloads network 
scheme activated malicious peers receive positive trust ratings malicious peers occasionally malicious peers happen get acquainted file exchange 
low trust values malicious peers rarely chosen download source minimizes number inauthentic file downloads network 
nodes mistakes upload inauthentic files deleting downloaded inauthentic file shared folders observed fraction inauthentic downloads 
malicious peers trust trust fraction malicious peers reduction inauthentic downloads basing download source selection global trust values network independent malicious peers 
activation trust scheme number inauthentic downloads network significantly decreased downloads system malicious peers network virtually banned uploading inauthentic files 
network downloads evaluated inauthentic cases accounts mistakes users creating sharing file providing wrong meta data creating sharing unreadable file 
note due fact current secure algorithm uses majority vote keep malicious peers manipulating global trust value computation cooperating fraction malicious peers network able influence assignment trust values network computation 
represented assumes trust values computed correctly 
malicious peers able manipulate global trust value computation large scale coordinated effort number inauthentic downloads higher peers network 
believe usually malicious peers network 
efficient secure versions algorithm having peers fair trust values participating global trust value computation defer 
knowing scheme system malicious peers know gain somewhat positive trust rating order considered download sources 
examine strategies malicious peers increase global trust rating de ite uploading inauthentic files 
malicious peers expect receive positive trust ratings non malicious peers try gain systemwide trust called malicious collective 
experiment depicted vary number malicious peers network assess impact network performance aware form malicious collective 
threat model malicious peers provide inauthentic file selected download source 
malicious peers form malicious collective assigning single trust value malicious peer network 
precisely denotes set threat model file upload behavior upload inauthentic files 
upload files 
upload inauthentic files cases 
upload authentic files 
local trust behavior assign trust peers upload inauthentic files 
assign trust previously known malicious peer form malicious collective 
assign trust previously known malicious peer form malicious collective 
assign equal trust share type nodes network 
table threat models associated experiments trust fraction malicious peers trust reduction inauthentic downloads network fraction peers forms malicious collective uploads authentic files 
forming malicious collective boost trust values malicious peers significantly virtually banned uploading inauthentic files similar 
malicious peers network pri sets sp prj imi resembles malicious chain mutual positive trust assessments 
terms probabilistic interpretation scheme malicious peers form collective random surfer agent entered collective able escape boosting trust values peers collective 
setup 
proceed exactly previously described experiment albeit malicious nodes operating threat model shown run experiments system download sources selected global trust values system download sources chosen randomly set peers responding query 
discussion 
system performs majority malicious peers network prominent place 
experiment clearly shows forming malicious collective decisively boost global trust values malicious peers peers tagged low trust value rarely chosen download source 
system manages break malicious collectives presence pre trusted peers see section pre trusted peers network forming malicious collective fact heavily boosts trust values malicious nodes 
presence pre trusted peers trust ratings malicious peers significantly lower peers simulation cycle 
minimizes number inauthentic downloads numbers virtually equal numbers peers form malicious collective 
example peers network malicious file downloads downloading inauthentic version file normal non trusted network 
activation scheme file downloads return inauthentic file 
forming malicious collective obviously increase trust ranking malicious peers sufficiently order impact network 
leaves malicious peers choice increase trust ratings receiving positive trust ratings trusted peers network 
experiment consider strategy malicious peers built idea malicious peers try get positive trust ratings peers 
threat model malicious peers provide inauthentic file cases selected download source 
malicious peers form malicious collective described 
setup 
simulate network consisting peers pre trusted peers type malicious peers applying standard settings table 
experiment apply different setting parameter threat model probability malicious peers return authentic file selected download source varies 
run experiments setting parameter steps 
running experiments non trust system system yields 
bars depict fraction inauthentic files downloaded simulation cycle divided total number files downloaded period time 
discussion 
malicious peers operate threat model attempt gain positive trust ratings peers network providing authentic files 
assigned zero trust values peers network peers receive authentic file 
turn provides higher global trust rankings uploads fraction inauthentic 
shows malicious peers maximum impact network providing authentic files download requests return inauthentic files 
strategy comes cost malicious peers provide share authentic files undesirable 
try prevent exchange authentic files network strategy participate second maintaining repository authentic files requires certain maintenance overhead 
depicts trade authentic horizontal axis inauthentic vertical axis downloads 
scenario represented data point 
example consider fourth dark bar corresponding trust scheme place 
scenario malicious peers provide authentic downloads inauthentic ones non trust trust trust non trust trust reduction inauthentic downloads network fraction peers forms malicious collective returns authentic files certain probabilities 
malicious peers partly provide authentic uploads receive positive trust ratings selected download sources increasing chances upload inauthentic files 
uploading authentic files may associated cost malicious peers 
particular run 
value plotted fourth data point left right lower curve representing case trust scheme 
points curve represent increasing values left right 
malicious nodes operate upper left quadrant high possible number inauthentic downloads low possible number authentic downloads 
file sharing mechanism place constrains malicious nodes operate curves shown 
trust scheme top curve malicious nodes set small value move upper left quadrant 
hand scheme malicious peers choices 
particular increasing sense malicious peers incremental authentic uploads host outnumber increase inauthentic downloads 
settings parameter malicious peers lose positive trust assignments peers long run average provide inauthentic authentic files 
previous experiment shown malicious peers increase impact partly concealing malicious identity 
time malicious identity uncovered lose impact network 
experiment consider team effort strategy malicious peers drawback 
different types malicious peers network malicious nodes type type threat model malicious peers answer popular queries provide file selected download source 
malicious peers type assign trust values malicious nodes type network 
precisely ms md denote set malicious type peers resp 
type peers precisely run query cycles exclude query cycles count number inauthentic authentic loads 
execute second run add numbers form runs 
authentic uploads malicious inauthentic downloads versus authentic uploads provided malicious peers trust non trust download source selection 
malicious peers provide authentic files cases selected download source increase authentic files uploaded malicious peers exceeds increase inauthentic downloads network possibly coming higher cost benefit malicious peers 
network peer md sets pr ms setup 
simulate network consisting peers trusted peers malicious peers divided groups malicious type type peers 
standard settings table apply 
experiment consider different number type type peers 
configurations considered type type peers ii 
type type peer iii 
type type peers iv 
type type peers type type peers vi 
type type peers vii 
type type peers viii 
type type peers ix 
type type peers type type peers 
left right plot data points graph depicts number inauthentic file downloads versus number au file uploads provided malicious peers previous experiment 
discussion 
malicious peers establish efficient division labor scheme type peers act normal peers network try collect global trust turn assign malicious nodes type providing inauthentic files 
malicious nature type peers uncovered time peers provide inauthentic files continue increase global trust ratings type peers network 
interesting configuration malicious peers configuration malicious peers provide fairly low number authentic downloads achieve number inauthentic downloads network configurations higher share authentic downloads malicious peers 
configuration scheme performs better system trust download source selection 
strategy probably strategy choice malicious peers order attack trust network example hosting authentic file uploads strategy malicious peers achieve inauthentic file downloads opposed inauthentic file downloads previous strategy trusted non trusted ooo authentic malicious uploads inauthentic downloads versus authentic uploads provided malicious peers trust non trust download source selection network type type peers 
threat model malicious peers provide number authentic uploads order increase global trust values 
compared authentic uploads malicious peers necessary achieve equal numbers inauthentic downloads network inauthentic downloads cost authentic uploads strategy compared authentic uploads threat model page brin motwani winograd 
pagerank citation ranking bringing order web 
technical report stanford digital library technologies project 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proceedings acm sigcomm august 
ripeanu foster 
mapping gnutella network macroscopic properties large scale networks implications system design 
internet computing journal 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn san jose ca usa january 
gnutella worm 

com data gnutella html 
effort providing authentic uploads 

method minimize impact malicious peers performance system 
system computes global reputation value peer calculating left principal eigenvector matrix normalized local reputation values consideration entire system history single peer 
show carry computations scalable distributed manner 
simulations trust values bias downloads shown reduce number inauthentic files network variety threat scenarios 
furthermore rewarding highly reputable peers better quality service non malicious peers share files self police file repository inauthentic files 

aberer despotovic 
managing trust peer peer information system 
proceedings loth international conference information knowledge management acm cikm new york usa 
damiani vimercati paraboschi samarati 
choosing reputable network 
proceedings lth worm wide web conference hawaii usa may 
crespo garcia molina 
semantic overlay networks 
submitted publication 
ebay website 
www ebay com 
gligor 
trust establishment mobile ad hoc networks 
submitted publication 
kamvar schlosser 
simulating networks submitted publication 
