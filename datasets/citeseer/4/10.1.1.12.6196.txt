peer peer architecture scalable web search information retrieval torsten suel mathur jo wen wu zhang alex mehdi long shanmugasundaram 
major search engines currently cluster architectures large numbers low cost servers located locations connected high speed lans 
lot interest peer peer architectures provide large scale services groups proposed scalable substrates applications :10.1.1.140.3129:10.1.1.111.1818:10.1.1.28.5987:10.1.1.105.3673
study problem building search engine massive document collections top substrate 
describe prototype system called open distributed search engine architecture currently development group 
provides highly distributed global indexing query execution service content residing inside outside network 
different approaches search assumes tier search engine architecture global index structure distributed nodes system 
short give overview proposed system discuss basic design choices 
discuss preliminary simulation results distributed query processing terabyte size web page collection indicate scalability approach 
expanded version appears updated information available athttp cis poly edu :10.1.1.12.6196

design overview distributed global indexing query execution service system maintains global index structure document insertions updates node joins failures executes simple general classes search queries efficient manner 
system provides lower tier proposed tier search infrastructure 
upper tier classes clients interact lower tier 
update clients insert new updated documents system stores indexes 
update client crawlers inserting crawled pages web servers pushing documents index nodes file sharing system 

query clients design optimized query execution plans statistics term frequencies correlations issue lower tier 
ideally query clients able implement various different ranking methods 
main differences distinguish search systems 
assumption tier architecture aims give freedom possible clients implement ranking policies 
note limits freedom discussed 
second difference assumption global inverted index structure 
current approaches see exception search assume local index node maintains index local documents queries contact author 
email suel poly edu 
research partly supported nsf career award nsf ccr 
copyright held author owner 
www may budapest hungary 
acm xxx 
department computer information science polytechnic university brooklyn ny broadcast usually significant fraction nodes order get best results 
poly edu index chair queries client index table queries crawler www client search server web search infrastructure web crawler update client client web search client 
shows basic design 
decided implement system top underlying global address space provided dht structure particular pastry 
object identified hash name name url document string chair index structure term chair assigned location determined dht mapping scheme 
way move object rename resulting mapping random node 
main applications mind provide full text search facilities large document collections communities 
search document collections large intranet environments 
build search infrastructure web alternative major search engines 
initial probably ambitious application 
middleware top system local indexes periodically insert postings global index faster processing certain types queries 

discussion justification tier approach increases speed bandwidth desktop systems see potential rich variety novel search tools interfaces exploit client computing resources rely powerful lower level web search infrastructure 
tools may perform large number web server search engine accesses single user interaction order prefetch analyze aggregate render content various sources 
early examples tools alexa google toolbars tools built google api :10.1.1.109.4049
proposed system provide lower level search infrastructure powerful open agnostic api accessed client proxy tools 
agnostic mean api limited single method ranking pages google api returns pages google ranking strategy allows clients implement ranking 
clearly limits trade offs goal 
general solution performing ranking client requires large amounts data transferred 
hand believe limited powerful classes ranking functions supported providing appropriate hooks system 
main research goals explore trade 
global vs local index local index organization node creates index local documents 
node postings list common words chair table query chair table broadcast nodes results combined 
global index organization node holds global postings list subset words determined hashing 
query chair table routed node holding list chair shorter list sends complete list node holding table 
main problem local indexes nodes contacted queries scale nodes 
attempts overcome issue routing queries nodes results vicinity 
believe approach result quality major concern 
see consider current web approach local indexes site extremely inefficient give poor answers 
global index hand large amounts data transmitted large document collections result lists megabytes common words 
problem led people reject global indexes unrealistic environments limited bandwidth 
believe problem overcome smart algorithmic techniques 
direction described bloom filters ideas decrease cost intersecting lists network improves results small factor 
approach distributed query execution algorithms ideas fagin asymptotically reduce communication :10.1.1.109.4049
small fraction inverted lists usually transmitted 
believe techniques combined query optimization allow interactive response times terabyte data sets 

query processing search engines typically process queries computing score document containing query terms returning documents highest score 
factors may contribute score including standard term scores global page scores due pagerank similar methods distances search terms documents :10.1.1.109.4049
simplest approach evaluate score function documents intersection inverted lists search terms resulting transmissions multiple megabytes 
groups shows evaluate top queries scanning entire intersection :10.1.1.109.4049
algorithms originally proposed multimedia queries image retrieval inverted lists term specific scores contribute final score attempt determine top results ac cessing small prefix lists performing limited number random lookups list 
particular queries terms number postings proportional square root total number documents usually transmitted 
note slightly similar techniques proposed ir community usually access larger fraction list seek avoid random lookups :10.1.1.18.3272
designed simple distributed protocol techniques measured performance protocol trace excite web search engine real data set web pages crawled web 
table shows average results queries keywords excluding words rare words 
columns data corresponding queries small median large length shorter lists 
line shows average length shorter lists cost basic algorithm 
lines show number postings sent shorter longer list vice versa 
final lines show total number bytes transmitted time milliseconds computed assuming bytes posting tcp performance model models effect tcp congestion window typical wide area environment bandwidths megabits second 
score function standard cosine measure similar results obtained including normalized pagerank score 
note results somewhat worse larger collections queries keywords phrases 
hand additional optimizations currently testing 
shortest middle longest lists total bytes sent time kbps time mbps table communication costs protocol 

anh moffat 
vector space ranking effective early termination 
th annual sigir conf 
brewer 
lessons giant scale services 
ieee internet computing pages august 
brin page :10.1.1.109.4049
anatomy large scale hypertextual web search engine 
proc 
seventh www conf 
acuna nguyen 
text content search retrieval ad hoc communities 
proc 
int 
workshop peer peer computing may 
fagin :10.1.1.109.4049
combining fuzzy information overview 
sigmod record june 

fault tolerant adaptive scalable distributed search engine 
june 
unpublished manuscript 
li loo hellerstein kaashoek karger morris 
feasibility peer peer web indexing 
proc 
nd int 
workshop peer peer systems 
lieberman fry :10.1.1.109.4049
exploring web reconnaissance agents 
comm 
acm august 
persin zobel sacks davis 
filtered document retrieval frequency sorted indexes 
journal american society information science may 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proc 
acm sigcomm conference 
reynolds vahdat 
efficient peer peer keyword searching 
february 
unpublished manuscript 
rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
int 
conf 
distributed systems platforms 
shen lee 
mdp peer peer search server network 
proc 
th int 
conf 
web information systems engineering 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm conference august 
suel mathur wu zhang long :10.1.1.12.6196
peer peer architecture scalable web search information retrieval 
technical report tr cis polytechnic univ 
lee 
low load comparison tcp ip circuits file transfers 
proc 
inet june 
zhao kubiatowicz joseph 
tapestry infrastructure fault tolerant wide area location routing 
technical report ucb csd uc berkeley 
