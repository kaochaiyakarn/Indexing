learning match cluster large high dimensional data sets data integration william cohen whizbang labs henry st pittsburgh pa william com part process data integration determining sets identifiers refer real world entities 
integrating databases web obtained information extraction methods possible solve problem exploiting similarities textual names objects different databases 
describe techniques clustering matching identifier names scalable adaptive sense trained obtain better performance particular domain 
experimental evaluation number sample datasets shows adaptive method performs better non adaptive baseline systems nearly competitive best baseline system 
keywords learning clustering text mining large datasets 
data integration problem combining information multiple heterogeneous databases 
step data integration relating primitive objects appear different databases specifically determining sets identifiers refer real world entities 
number research papers addressed problem exploiting similarities textual names objects different databases 
example suspect objects different databases named usama fayyad usama fayyad respectively refer person 
integration techniques textual similarity especially useful databases web obtained extracting information text descriptive names generally exist permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page :10.1.1.34.4329
copy republish post servers redistribute lists requires prior specific permission fee 
sigkdd edmonton alberta canada copyright acm 
jacob richman whizbang labs henry st pittsburgh pa jsr org global object identifiers rare 
previous publications textual similarity data integration considered number related tasks 
terminology completely standardized define entity name matching task lists entity names different sources determining pairs names referent refer real world entity 
define entity name clustering task single list entity names assigning entity names clusters names cluster referent 
matching important attempting join information pair relations different databases clustering important removing duplicates relation drawn union different information sources 
previous area includes distance functions matching scalable matching clustering algorithms :10.1.1.34.4329
record linkage similar rely heavily textual similarities :10.1.1.39.4336
synthesize ideas 
techniques entity name matching clustering scalable adaptive sense accuracy improved training 

learning match cluster adaptive systems defining problems adaptive matching clustering describing general notion adaptive system 
assume source training examples 
training example pair problem instance desired solution assume loss function loss measuring quality proposed solution relative desired solution goal adaptive system take set training examples 
xm learn propose solutions novel problems xj 
words input set xi output function loss loss xj small desired solution xj 
simple explored example adaptive system classification learning 
adaptive matching consider task learning match names domain names second domain exam ple wish learn match researcher name address university name researcher affiliated university 
formalize problem instance pair sets strings 
instance names addresses researchers registered kdd names universities united states 
solution set pairs 
ak bk specifically subset indicates pairs matched 
natural loss function loss size symmetric difference ai bi loss ai bi ai bi related measures recall precision measure symmetric difference sets 
matching problems constrained example 
instance entity names refers distinct entity little sense proposed solution contain 
define constrained adaptive matching problem set pairs desired pairing function 
constrained matching problems common fact matching problems considered section constrained 
consider general case useful instance matching datasets may duplicates 
adaptive clustering second problem consider adaptive clustering 
case problem instance set strings 
dm 
solution assignment strings di clusters encoded function integers number clusters 
example consider clustering descriptions consisting researcher name additional piece identifying information affiliation july 
problem instance set strings william cohen whizbang labs cohen whizbang labs research jude shavlik university wisconsin solution function iff refer person 
adaptive clustering learning cluster better sequence training data form pairs 

scalable adaptive methods clustering definitions extensions model adaptive ranking systems described cohen singer schapire 
slightly cohen singer schapire considered adaptive systems problem instance unordered set objects 
dm desired solution total ordering objects problem learning order instances addressed learning preference function conceptually function indicating ranked desired ordering adaptive matching clustering implemented train 
dm zm 
build training sample pairing function 


generate pairs di di 
ii 
label zi zi iii 
add labeled example 
train classification learner result hypothesis labels pairs positive negative 
cluster new set 
dn 
build graph vertex set edge exists di dj iff dj 

connected component cluster 
naive clustering algorithm learned pairing function analogous way learning appropriate pairing function 
context matching pairing function binary function indicates matched context clustering indicates placed cluster 
gives simple algorithm clustering pairing function 
algorithm problems small number errors learned pairing function may lead large mistakes clusters created algorithm inefficient requires generation pairs 
address problems modify ways 
training enumerate limited number candidate pairs step ideally candidate set manageable size include pairs clustered 
second exploit fact classification learners provide confidence classifications 
replace steps better methods building pairing graph clustering step construct edges candidate pair generation procedure training weight edge confidence learned hypothesis label 
step cluster resulting edge weighted graph greedy agglomerative clustering 
resulting algorithm shown 
consider generation candidate pairs operation called blocking record linkage literature 
canopy method proposed mc nigam unger :10.1.1.34.4329
method relies ability take entity name efficiently find nearby points approximate distance metric 
mccallum tfidf distance metric tokens 
case inverted index ranked retrieval system find nearby pairs quite quickly 
canopy method shown begins empty set candidate pairs operates repeatedly train 
dm zm 
build training sample pairing function 


set candidate pairings 
ii 
label zi zi iii 
add labeled example 
train classification learner result hypothesis labels pairs positive negative 

confidence 
cluster new set 
dn clusters 
build graph vertex set edge exists di dj iff di dj weight edge dj di dj 

perform greedy agglomerative clustering gac produce clusters 
create singleton cluster hold vertex 
clusters merge closest clusters cluster distance minimum distance members clusters 

clustering produced gac clustering better efficient adaptive clustering algorithm picking random center point picked points close distance 
canopy points paired resulting pairs added set candidate pairs 
set possible center points decreased removing points distance 
process repeats possible center points chosen 
benchmark problems considered section fairly easy find thresholds allow generation nearly true pairs pairs belong desired cluster generating spurious pairs 
learning issues addressed represent pair learning algorithm 
explored different classification learning systems different feature sets representing pairs 
report results maximum entropy learner 
learning system requires examples represented vector binary features 
examples features encode pair shown table 
edit distance compute 



empty pick random canopy implementation tfidf similarity canopy computed efficiently inverted index retrieval method 
add pairs canopy 
remove points computed quickly inverted indices 

return computing set pairs canopy algorithm mccallum nigam unger gives character insertion deletion unit cost jaccard distance computed treating sets tokens distance function 
test datasets considered items clustered strings records consisting strings instance record containing name address bibliographic entry containing title author date publication venue 
datasets pair encoded extracting features table pair fields combining features instance pairing name address records computed features 

matching constrained matching fairly simple adapt algorithm problem constrained adaptive matching 
generation candidate pairs substantially easier need consider pairs possible technique canopy algorithm modifications step step canopy step remove set 
functionally equivalent somewhat efficient approach soft join algorithm 
learning pairing function construction graph identical 
greedy agglomerative clustering step true iff strings substring 
true iff strings prefix 
true iff edit distance strings true iff th token matches token analogous 
requires tokens match token true iff jaccard distance sets tokens true contain number 
benchmark tfidf edit distance adaptive prec recall prec recall prec recall cora restaurant parks table experimental results precision recall replaced operation enforces constraints required constrained adaptive matching 
done computing minimal weight cutset returning edges cutset pairing 
experimented greedy approach exact minimization exploits fact graph bipartite 
experiments simple greedy mincut finding algorithm efficient large graphs 
relationships note problems learning pairing functions clustering matching closely related distinct 
unconstrained matching pairs correspond immediately clusters pairs may overlap clusters disjoint 
constrained matching matching reduced clustering exploiting additional constraint pairing substantially change difficulty clustering task 
learning pairing function natural way making clustering system adaptive obtaining accurate hypothesis mean ensuing clustering possible small errors cause large clustering errors 

experiments datasets evaluation purposes 
datasets require clustering require matching 
clustering dataset cora collection citations cora project 
second dataset collection organization names 
considered target clusterings data table features learning pairing function 
benchmark tfidf edit distance adaptive cora restaurant parks table experimental results measure clusters clusters 
constrained matching datasets 
restaurant dataset contains restaurants restaurant guide matched second guide 
parks dataset contains national park names listing second listing names common 
assumed number intended clusters known 
restaurant parks constrained systems adaptive non adaptive produce true number clusters pairings 
cora wished compare best previous clustering result obtained varying cluster size widely 
tried different target cluster sizes report gave best result obtained setting times true number clusters 
evaluate performance split data partitions trained tested second trained second tested 
datasets summarized table 
dataset record number entities partition number desired clusters pairs thresholds canopy algorithm number positive negative examples generated 
success measures algorithms different definitions loss 
recall matching solution set pairs 
usual con difference second clustering different branches organization virginia institute blacksburg virginia polytechnic institute charlottesville considered distinct 
nick providing data 
sheila tejada providing data 
benchmark name cluster partition size thresholds pairing examples potential match 
entities clusters pos neg recall cora restaurant park names information retrieval define recall relative precision relative measure relative harmonic mean recall precision 
clustering algorithms recall problem instance set objects solution mapping integers 
define pairs set pairs 
define recall precision terms pairs define recall relative pairs pairs pairs precision relative pairs pairs pairs 
final column table shows maximum recall obtainable produced canopy algorithm 
addition algorithm described section considered additional clustering matching algorithms performance baselines 
replaces graphs edit distance 
applied clustering algorithm similar algorithm proposed mccallum nigam unger applied matching similar method proposed monge elkan 
second baseline replaces tfidf distance formula similar algorithm whirl 
experimental results algorithms datasets table shown tables 
baseline results edit distance taken hand tuned edit distance entries table apply set single partition :10.1.1.34.4329
table best measure obtained problem placed bold 
observation results table baseline system appears outperform 
discounting cora edit distance function hand creating appropriate partitions training test nontrivial ensure test cases independent training cases simple random partition lead situation intended clusters split training test sets 
avoid split data algorithm considers pairs produced canopy algorithm consider pair containing instance test set instance training set 
disadvantage procedure impossible create balanced splits biasing results away adaptive methods 
table datasets experimental evaluation engineered tfidf baseline obtains better score distance function baseline runs performs worse runs performs identically run 
confirms belief tfidf distance metrics useful data integration settings 
adaptive method far better baseline technique cora dataset 
notice cora dataset largest datasets considered baseline methods perform worst offers opportunity adaptive techniques improve performance 
remaining runs adaptive technique performs best nearly equals best result split second split restaurant 
partitions adaptive method obtains results comparable better best baseline approaches 
adaptive methods performs poorly runs second partition 
conjecture dataset far smallest considered constraints partitioning resulted substantial variation partitions training testing 

scalable adaptive scheme clustering matching entity names 
experimental results method comparable better results obtained clustering matching plausible fixed distance metrics 
noted formalization adaptive clustering matching inspired model learning order cohen schapire singer 
consider adaptive ordering systems show problem solved supervised learning binary ordering relation followed greedy method constructing total order set possibly inconsistent binary ordering decisions 
give provable bounds loss notice tfidf baseline system better edit distance baseline partition opposite holds second partition 
trivial adaptive system chooses better baseline systems training data perform poorly 
size pairing function training sets number entities cluster varies greatly partitions 
system 
finding bounds adaptive clustering learning remains problem 
architecture adaptive matching clustering method modeled system mccallum nigam unger :10.1.1.34.4329
system consider matching clustering replace fixed hand coded edit distance metric learned pairing function 
focus general purpose adaptive clustering matching methods distinguishes previous general purpose non adaptive similarity metrics entity names general frameworks manually implementing similarity metrics 
core idea learning distance functions entity pairs new substantial literature record linkage problem statistics record linkage theory proposed sunter 
maximum entropy learning approach advantage sunter require features independent allowing broader range potential similarity features time method fairly efficient contrast sunter extensions latent class models 
com start implemented matching procedure maximum entropy learner 
extend systematic experimental evaluation canopies eliminate potentially quadratic cost learning clustering application pairing function clustering matching 
number enhancements current method possible 
hope examine features instance notable current omission lack feature directly measures tfidf similarity 
hope compare methods directly matching techniques developed statistical literature 

william cohen 
reasoning textual similarity information access 
autonomous agents multi agent systems pages 
william cohen 
data integration similarity joins word information representation language 
acm transactions information systems july 
william cohen 
whirl word information representation language 
artificial intelligence 
william cohen jacob richman 
learning match cluster entity names 
proceedings acm sigir workshop mathematical formal methods information retrieval new orleans la 
william cohen robert schapire yoram singer 
learning order things 
journal artificial intelligence research 
craven dipasquo freitag mccallum mitchell nigam slattery 
learning extract symbolic knowledge world wide web 
proceedings fifteenth national conference artificial intelligence aaai madison wi 
sunter 
theory record linkage 
journal american statistical society 
galhardas florescu shasha simon 
ajax extensible data cleaning tool 
proceedings acm sigmod june 
hernandez stolfo 
merge purge problem large databases 
proceedings acm sigmod may 
alvey 
record linkage techniques 
statistics income division internal revenue service publication 
available www bts gov methodology 
steve lawrence lee giles kurt bollacker 
digital libraries autonomous citation indexing 
ieee computer 
mccallum nigam rennie seymore 
automating construction internet portals machine learning 
information retrieval 
mccallum nigam ungar :10.1.1.34.4329
efficient clustering high dimensional data sets application matching 
proceedings sixth international conference knowledge discovery data mining pages 
monge elkan 
field matching problem algorithm applications 
proceedings second international conference knowledge discovery data mining august 
newcombe kennedy james 
automatic linkage vital records 
science 
kamal nigam john lafferty andrew mccallum 
maximum entropy text classification 
proceedings machine learning information filtering workshop ijcai stockholm sweden 
baier lucchesi 
matching algorithms bipartite graph 
technical report dcc departamento de da universidade de campinas 
gerard salton editor 
automatic text processing 
addison reading massachusetts 
winkler 
improved decision rules sunter model record linkage 
statistics income division internal revenue service publication rr 
available www census gov srd www byname html 
winkler 
state record linkage current research problems 
statistics income division internal revenue service publication 
available www census gov srd www byname html 
william winkler 
matching record linkage 
business survey methods 
wiley 
acknowledgments authors andrew mccallum numerous helpful suggestions 
