consideration publication knowledge information systems ontology evolution schema evolution noy michel klein stanford medical informatics stanford university stanford ca vrije university amsterdam de boelelaan hv amsterdam netherlands 
ontology development ubiquitous collaborative process ontology versioning evolution important area ontology research 
similarities database schema evolution ontology evolution allow build extensive research schema evolution 
important differences database schemas ontologies 
differences stem different usage paradigms presence explicit semantics different knowledge models 
lot problems existed theory database research come forefront practical problems ontology evolution 
differences important implications development ontology evolution frameworks traditional distinction versioning evolution applicable ontologies 
dimensions compatibility versions considered 
set change operations ontologies different 
develop automatic techniques finding similarities differences versions 
keywords ontologies ontology evolution schema evolution 
ontologies ready evolve trace evolution ontology research computer science see field grows matures focus research questions researchers address shifts 
progress naturally reflects shift theoretical issues ontology research issues associated received xxx revised xxx accepted xxx noy klein ontologies real world large scale applications 
active research ontologies started defining formal ontology requirements ontology satisfy 
term ontology came refer wide range formal representations taxonomies hierarchical terminology vocabularies detailed logical theories describing domain 
research focus shifted development representation languages defining exchanging ontologies 
knowledge interchange format open knowledge base connectivity protocol prominent results research direction 
having defined ontologies having decided represent exchange researchers faced challenge lack critical mass reusable ontologies remains bottleneck achieving vision widespread reuse ontologies 
developing content ontologies high agenda 
top level cyc ontology www org publicly available ontolingua ontology library ontolingua stanford edu grew large domain specific ontologies ecocyc galen gene ontology www org developed 
appearance large number small large ontologies overlapping domains issue ontology merging alignment came forefront ontology research 
number tools finding similarities differences ontologies semi automated way appeared :10.1.1.21.9623
today ontologies integral part industrial academic applications fields supporting semantics search interoperability support configuration support constraint specification validation semantic web applications 
widespread ontologies come problems database community faced years ago databases integral part applications evolution versioning 
researchers ontology evolution undoubtedly learn lot database schema evolution research 
schema evolution research includes analysis causes change effects different operations data frameworks handling different versions coherently 
theory issues ontology evolution exactly issues schema evolution 
fact especially true schema evolution object oriented databases knowledge model close frame ontologies 
practice significant differences ontologies database schemas point view evolution versioning 
content usage ontologies complex database schemas 
ontologies turn theoretical problems opportunities database schema versioning practical ones 
discuss differences usage development paradigms presence explicit semantics knowledge representation 
discuss practical implications differences development framework ontology evolution versioning 

causes ontology change database schemas ontologies inevitably change time 
examine cause changes start popular definition ontology proposed gruber 
formally ontology explicit specification conceptualization domain 
changes elements definition cause changes ontology changes domain changes ontology evolution schema evolution conceptualization changes explicit specification 
changes domain common effects comparable changes database schemas 
sketch situations changes real world domain evolution require changes database model 
example university departments different administrative structures merge ontology describing domain needs evolve reflect change 
changes conceptualization result changing view world change usage perspective 
different tasks may imply different views domain consequently different conceptualization 
example consider ontology describing traffic connections amsterdam includes concepts roads cycle tracks canals bridges 
adapt ontology describe bicycle perspective water transport perspective conceptualization bridge changes remedy crossing canal time consuming obstacle 
changes explicit specification occur ontology translated knowledge representation language 
languages differ syntax important semantics expressivity 
preserving semantics ontology translation non trivial task 

knowledge model rest article refer traditional elements ontology classes slots slot restrictions instances 
classes collections objects similar properties 
classes constitute subclass superclass hierarchy multiple inheritance 
slots attached class describe attributes properties class 
slots usually class objects 
slot exist attached particular class 
slots transitive symmetric inverses 
slot set restrictions values cardinality range 
instances individual members classes 
term instance data refer instances slot values 
assumptions actual representation ontologies instance data 

differences ontologies database schemas start discussion differences database schemas ontologies general 
discuss different usage paradigms database schemas ontologies 
group differences addresses knowledge representation issues 
discuss differences direct implications developing framework ontology evolution versioning 

ontologies data main goal schema evolution support databases preserve integrity data new schema affect view old data 
queries old schema new data 
old data viewed new schema 
issues certainly valid instance data ontologies 
view ontologies schemas knowledge bases noy klein having defined classes slots ontology populate knowledge base instance data 
major second thrust ontology evolution ontologies data extent database schemas 
ontologies instance data controlled vocabularies drive search provide navigation large collections documents provide organization configuration structure web sites 
cases ontology instance data 
result database query usually collection instance data text documents result ontology query include elements ontology subclasses particular class 
considering ontology evolution consider effect ontology changes way applications access instance data effect changes queries ontology contents 
extra layer abstraction database schemas act data meta data repositories 
meta data repositories provide information various databases applications organization 
ontologies different meta data repositories meta data repositories designed store schema application data ontologies describe domain discourse domain 
concepts relations ontology usually formally defined semantics machines interpret 
addition meta data repositories different schemas providing extra layer description ontologies extra layer exists 
learn research schema evolution issues meta data repositories directly applicable ontology evolution 

ontologies incorporate semantics database schemas catalogs provide little explicit semantics data 
detailed semantics specified semantics specified explicitly database design time conceptual schema specification lost translation physical database schema available anymore 
databases need specific protocols resolving conflicting restrictions schema changes 
protocols usually part schema evolution framework 
ontologies logical systems incorporate semantics 
formal semantics knowledge representation systems allow interpret ontology definitions set logical axioms 
leave ontology resolve inconsistencies need evolution framework 
example change ontology results incompatible restrictions slot simply means class instances unsatisfiable 
ontology language description logics dl represent ontology oil daml oil description logics reasoners re classify changed concepts new definitions 

ontologies reused database schema defines structure specific database databases schemas usually directly reuse extend existing schemas 
ontology evolution schema evolution schema part integrated system rarely apart 
exceptions rule include schemas support packaged commercial produces applications accounting personnel records 
situation ontologies exactly opposite ontologies reuse extend ontologies bound specific system 
change ontology affects ontologies reuse consequently data applications ontologies 
seemingly monotonic changes additions new concepts ontology adverse effects ontologies reuse 
add concept exists reusing ontology logical conflicts arise reusing ontology contains representations concept 
need specify equivalence statement reflect fact 

ontologies de centralized nature traditionally database schema development update centralized process developers original schema employees organization usually changes maintain schema 
development maintenance integrated databases federated database systems de centralized database schema developers usually know databases schema 
nature ontology development evolution de centralized collaborative process 
result centralized control uses particular ontology 
difficult impossible enforce synchronize updates know users ontology inform updates assume find 
lack centralized synchronized control difficult impossible trace sequence operations transformed version ontology 
ontologies cornerstone semantic web model distributed reusable extendable ontologies core 
envisioned huge scale semantic web decentralization ontology development maintenance greatly exacerbate problem today web know uses ontology maintain users prevent require particular ontology 
interesting note years database field moving direction de centralization standard xml schemas reused different applications particularly ecommerce 

ontology data models richer inherent part schema evolution methodology detailed consideration effects change operation data happens new superclass added class object oriented database instance variable removed class domain instance variable changed 
number representation primitives ontologies larger typical database schema 
example ontology languages systems allow specification cardinality constraints inverse properties transitive properties disjoint classes 
languages daml oil noy klein add primitives define new classes unions intersections classes enumeration members set objects satisfying particular restriction 
detailed treatment ontology changes include extensive set possible operations 

classes instances databases clear distinction schema instance data 
rich knowledge representation systems hard distinguish ontology ends instances 
metaclasses classes classes instances systems prot ontolingua rdfs blurs erases completely distinction classes instances 
set theoretic terms metaclasses sets elements sets 
means instance class just role concept 
example lonely planet amsterdam specific instance class travel guides bookstore time class individual copies book instances 
analysis schema change operations considers effects instance data directly applicable ontologies 

implications evolution versioning ontologies differences ontologies database schemas just outlined direct practical implications methodology ontology evolution versioning 
discuss implications rest section 
traditional distinction versioning evolution applicable ontologies 

defining constitutes compatibility different versions salient issue dimensions compatibility preservation instance data preservation answers ontology queries consequence preservation 

set change operations consider classifying effects ontology changes wider 
addition consider effects operations different dimensions compatibility 
need techniques determining compatibility different versions trace changes led version 

ontology versioning evolution change management database researchers distinguish schema evolution schema versioning :10.1.1.137.2907
schema evolution ability change schema populated database loss data providing access old new data new schema 
schema versioning ability access data old new different version interfaces 
ontologies distinguish evolution allows access data ontology evolution schema evolution newest schema versioning allows access data different versions schema 
multiple versions ontology bound exist supported 
knowing ontology reused means able force reusing ontologies applications switch new version 
ideally developers maintain different versions ontology information versions differ compatible 
example ontology versioning mechanism shoe enables developers declare new version backward compatible old version applications agents new ontology place old 
applications may continue old versions upgrade pace 
management changes key issue support evolving ontologies 
combine ontology evolution versioning single concept defined ability manage ontology changes effects creating maintaining different variants ontology 
ability consists methods distinguish recognize versions specifications relationships versions update change procedures ontologies access mechanisms combine different versions ontology corresponding data 
term ontology evolution concept rest article 

compatibility ontologies dimensions order determine changes ontology backward compatible need determine compatibility means 
databases backwards compatibility usually means ability access old data new schema 
words instance data lost result change 
ontologies query results include instance data elements ontology 
express compatibility terms preservation instance data 
consider situation new class added ontology subclass existing class 
change effect instance data change invalidate answers existing queries return instance data 
queries ontology list subclasses specific class answers existing queries change 
issue complicated ontology languages support automatic classification daml oil class added ontology reasoner re classify existing concepts instances possibly invalidating existing data applications 
dimensions consider determining new version ontology compatible old instance data preservation data lost transformation old version new 
ontology preservation query result obtained new version superset result query obtained old version 
consequence preservation ontology treated set axioms facts inferred old version inferred new version 
consistency preservation ontology treated set axioms new version ontology introduce logical inconsistencies 
noy klein characterize effects change operations need take possibly dimensions account 

ontology change operations effects set possible change operations ontologies larger traditional sets database schema change operations 
causes differences sets 
cause richer knowledge model ontologies add operations deal changes slot restrictions slot attachment 
second cause composite operations researchers schema evolution community addressed notable exception lerner 
consider example change domain slot class superclass 
model traffic connections amsterdam may slot speed limit roads 
change domain speed limit slot include roads canals need move slot class hierarchy imposing speed limit boats 
treat operation sequence operations removing slot road class adding class delete values speed limit slot instances road operation 
second operation instances road speed limit slot 
composite effect operations violate integrity instance data operations 
algebra ontology change operations include composite operations compound effect schema evolution predictable belong completely different class operations simple operations constitute 
sketch set possible ontology change operations knowledge model described section discuss effects 
specifically consider effects respect instance data preservation dimension consider instance data accessed changed ontology 
classify operations effects information preserving changes instance data lost table translatable changes instance data lost part data translated new form table 
illustrate translatable changes 
information loss changes guaranteed instance data lost table 
assume automatic classification 

modes evolution characterizing effects specific changes compatibility versions ontology important 
extremely distributed nature ontologies account fact trace changes led version 
distinguish modes ontology evolution traced untraced evolution 
traced evolution largely parallels schema evolution treat evolution series changes ontology 
operation changes ontology ontology evolution schema evolution operation eff comment effect create class data lost delete class instances specific type instances superclass create slot data lost delete slot values slot instances lost attach slot class data lost remove slot class values slot instances add subclass superclass link subclass superclass remove subclass superclass link subclass superclass lost new slots inherited cases equivalent adding slots longer slots inherited 
values slots instances lost re classify instance class data lost re classify class instance instances specifically typed declare classes disjoint instances belonged invalid define slot transitive symmetric slot values violated transitivity symmetry prop move slot subclass superclass move slot hierarchy move slot superclass subclass move slot hierarchy move slot class referenced class see encapsulate set slots new class see change superclass class class higher hierarchy move class class hierarchy change superclass class class lower hierarchy move class widen restriction slot increase number allowed values decrease number required values add class range replace existing class range superclass narrow restriction slot decrease number allowed values increase number required values remove class range replace subclass merge classes superclasses subclasses slots merged class union superclasses subclasses slots original split class classes operation specify new classes instances old class belong slot value erty invalid class inherits slot instances preserve values slot class longer slot values slot instances lost data lost values slot moved data lost values slot moved longer slots inherited direct superclass 
values slots instances lost possibly inherited addi tional slots 
data lost existing slot values valid slot values violated narrower restrictions invalid data lost values slots moved 
see com ment adding subclass link data lost values slots moved table 
ontology change operations effects instance data 
noy klein person name email contact contact street city state person name contact contact email street city state person name email street city state person name email address address street city state fig 

composite slot operations move slot class referenced class slot email moved contact class encapsulate set slots new class 
slots street city state encapsulated class address 
add delete class attach slot class change restrictions slots consider effects instance data related ontologies depending dimension compatibility 
resulting effect determined combination change operations 
untraced evolution versions ontology knowledge steps led version 
need find differences versions automated semi automated way 
tool compares rdf ontologies produces detailed list differences classes slots identifier 
immutable identifiers available situation complicated 
tool compares ontology versions analyzing structure 
integrates different heuristic matchers find structural diff versions 
problem finding differences versions ontologies fact close problem ontology merging 
cases overlapping ontologies need determine mapping elements 
merging ontologies concentrate similarities evolution need highlight differences complementary process 
addition case ontology evolution need liberal assumptions determining concepts 
example merging ontologies came independent sources assume classes named university sources refer concept refer organizational structure university university campus 
different versions ontology contain class named university classes refer concept 
reuse heuristics algorithms lower thresholds ontology merging tools develop semi automated interactive tools untraced ontology evolution 
prompt example ontology merging tool analyzes structure ontology classes relations user actions suggestions possible merge user 
ontology merging research provides analysis possible ways translate ontologies 
ontomorph provides powerful rule language represent complex transformations ontology engine applying transformations 
onion ontology articulation approach specifying semantic bridges ontologies :10.1.1.34.7855
onion ontologies remain separate want keep old versions ontologies available articulation rules ontology evolution schema evolution provide mapping ontologies 
tools integrating database schemas provide ideas finding correspondences ontologies 
rahm bernstein survey approaches linguistic techniques look synonyms machine learning techniques propose matches instance data information retrieval techniques compare information attributes 
database schema research bernstein colleagues argue view tasks schema mapping untraced evolution similar way 
suggest formal model expressing correspondences database schemas xml dtds uml models 
tasks managing correspondences different sources task instantiating model 

steps ontologies integral part industrial academic applications support ontology evolution versioning logical step ontology research 
research undoubtedly benefit years research database schema evolution including analysis change effects frameworks handling different versions interfaces different versions 
compare ontologies database schemas point view evolution find important differences 
issues form theoretical distinction schema evolution ontology evolution constitute substantial difference practice significant practical implications way ontology evolution versioning handled 
need maintain versions ontology define different dimensions compatibility depending preserved able find differences versions trace version evolved define set ontology change operations consider effects changes 
research ontology evolution early stages 
analysis problems starting point addressing various open issues ontology evolution 
analyzed effects ontology change operations briefly respect preservation dimension 
detailed analysis operations effects dimensions compatibility needed 
analysis go alongside precise specification necessary transformations data ontologies translatable changes 
open issues include identification change outdated ontologies algorithms finding differences versions automatically 
hope analysis help direct research demonstrate ontology evolution complicated schema evolution 

grateful dieter fensel mark musen gio wiederhold feedback earlier versions 
anonymous reviewers suggestions 
research supported part contract national cancer institute 
banerjee semantics implementation schema evolution object oriented databases 
sigmod conference 

noy klein batini lenzerini navathe comparative analysis methodologies database schema integration 
acm computing surveys 

berners lee hendler lassila semantic web 
scientific american 

bernstein halevy pottinger vision management complex models 
sigmod record 

brickley guha resource description framework rdf schema specification appear 
chalupsky ontomorph translation system symbolic knowledge principles knowledge representation reasoning proceedings seventh international conference kr cohn giunchiglia andb 
selman editors 
morgan kaufmann publishers san francisco ca 
chaudhri okbc programmatic foundation knowledge base interoperability 
fifteenth national conference artificial intelligence aaai 

madison wisconsin aaai press mit press 
corcho mez rez 
roadmap ontology specification languages 
th international conference knowledge engineering knowledge management ekaw 

juan les pins france springer 
fensel oil nutshell 
th international conference knowledge engineering knowledge management ekaw 

juan les pins france springer 
genesereth fikes knowledge interchange format version manual appear 
gruber translation approach portable ontology specification 
knowledge acquisition 

heflin hendler 
dynamic ontologies web 
seventeenth national conference artificial intelligence aaai 

austin tx hendler mcguinness darpa agent markup language 
ieee intelligent systems 

karp ecocyc encyclopedia coli genes metabolism 
nucleic acids research 

klein combining relating ontologies analysis problems solutions :10.1.1.21.9623
ijcai workshop ontologies information sharing 

seattle wa klein ontology versioning change detection web 
th international conference knowledge engineering knowledge management ekaw 

sig spain lerner model compound type changes encountered schema evolution 
acm transactions database systems 

marco building managing meta data repository full lifecycle guide 
wiley sons 
mcguinness ontologies come age semantic web fensel editors 
mit press mitra wiederhold kersten 
graph oriented model articulation ontology interdependencies 
proceedings conference extending database technology edbt 

konstanz germany noy fergerson musen 
knowledge model prot combining interoperability flexibility 
th international conference knowledge engineering knowledge management ekaw 

juan les pins france springer verlag 
noy musen 
prompt algorithm tool automated ontology merging alignment 
seventeenth national conference artificial intelligence aaai 

austin tx noy musen 
fixed point algorithm comparing ontology versions 
eighteenth national conference artificial intelligence aaai 

edmonton alberta rahm bernstein survey approaches automatic schema matching 
vldb journal 

rector galen core model schemata anatomy re usable application independent model medical concepts 
medical informatics europe mie 

roddick survey schema versioning issues database systems :10.1.1.137.2907
information software technology 

ontology evolution schema evolution sheth larson federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys 

semantic heterogeneity result domain evolution 
sig mod record acm special interest group management data 

author biographies noy research scientist stanford medical informatics stanford university 
received applied mathematics moscow state university russia 
received degree computer science boston university ph computer science northeastern university boston 
currently works extending prot ontology editing environment support management multiple ontologies 
interests include ontology development evaluation semantic integration ontologies making ontology development accessible experts non computer science domains 
michel klein ph student business informatics group vrije universiteit amsterdam netherlands 
received master degree university october 
finishing master worked half year software engineer leiden university medical center system classification presentation multi media medical information 
research interests include ontologies information integration representational issues ontologies support dynamic aspects knowledge representation web 
correspondence requests noy stanford medical informatics stanford university stanford ca usa 
email noy smi stanford edu 
