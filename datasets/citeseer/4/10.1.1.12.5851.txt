smdp homomorphisms algebraic approach abstraction semi markov decision processes operate effectively complex environments learning agents require ability selectively ignore irrelevant details form useful abstractions 
article consider question constitutes useful abstraction stochastic sequential decision problem modeled semi markov decision process smdps 
introduce notion smdp homomorphism argue provides useful tool rigorous study abstraction smdps 
smdp minimization framework abstraction framework factored mdps smdp homomorphisms 
model different classes abstractions arise hierarchical systems 
options framework purposes illustration ideas generally applicable 
show conditions abstraction employ generalization earlier dietterich applied options framework 
ability form abstractions features allows humans operate effectively complex environments 
systematically ignore information need performing immediate task hand 
driving example may ignore details regarding clothing state hair 
researchers artificial intelligence ai particular machine learning ml long recognized applying computational approaches operating complex real world domains requires incorporate ability handle form useful abstractions 
article consider question constitutes useful abstraction 
difficult problem stated general terms field specialized particular classes problems specific modeling paradigms 
focus markov decision processes mdps formalism widely employed modeling solving stochastic sequential decision problems semi markov decision processes smdps extension mdps employed modeling hierarchical systems sutton dietterich parr russell 
ravindran andrew barto department computer science university massachusetts amherst ma ravi barto cs umass edu objective article introduce concept smdp homomorphism argue provides unified view key issues essential rigorous treatment abstraction stochastic dynamic decision processes 
concept homomorphism dynamic systems called arbib manes played important role theories automata hartmanis stearns theories modeling simulation zeigler frequently researchers studying model checking approaches system validation emerson sistla 
studying approximation abstraction methods mdps smdps employed formalisms implicitly embody idea homomorphism explicit appropriate homomorphism concept 
provide claim appropriate concept give examples widely useful basis study abstraction dynamic setting 
informally kind homomorphism consider mapping dynamic system eliminates state distinctions preserving system dynamics 
definition homomorphisms appropriate smdps 
earlier ravindran barto developed mdp abstraction framework notion mdp homomorphism 
framework extended mdp minimization framework proposed dean givan enabled accommodation redundancies arising symmetric equivalence kind illustrated 
derive reduced models smaller state set applying minimization ideas necessarily simplify description problem terms number parameters required describe 
mdps additional structure associated exploit develop compact representations 
injecting structure definition smdp homomorphism model abstraction schemes structured mdps 
simple example abstraction scheme mention factored abstraction methods modeled suitable structured homomorphisms 
second part extend notion smdp homomorphism hierarchical systems 
particular apply homomorphisms options framework introduced sutton show facilitates employing different abstractions different levels symmetric gridworld problem 
goal state deterministic actions 
gridworld symmetric ne sw diagonal 
example states equivalent action equivalent action action say state equivalent action state sense go equivalent states step closer goal 
equivalent reduced model gridworld 
states original problem correspond single state reduced problem 
solution reduced gridworld derive solution full problem 
hierarchy 
argue homomorphisms allow model aspects symbolic ai techniques representing higher level task structure 
show smdp homomorphism conditions generalize safe state abstraction conditions hierarchical systems introduced dietterich 
introducing notation section define smdp homomorphisms discuss modeling symmetries section 
brief overview model minimization framework section discuss abstraction factored mdps section abstraction hierarchical systems section 
conclude discussion directions research section 
notation markov decision process tuple set states finite set actions set admissible state action pairs transition probability function probability transition state state action ir expected reward function expected reward performing action state denote set actions admissible state assume non empty 
discrete time semi markov decision process smdp generalization mdp actions take variable amounts time complete 
mdp smdp tuple sets states actions admissible state action pairs transition probability function probability transition state state action time steps ir expected discounted reward function expected reward performing action state completing time steps 
stochastic policy mapping real interval adopting formalism dietterich 
gives probability executing action state value state action pair policy expected value sum discounted rewards starting state action 
smdp defined terminal states discount rewards 
cases smdp equivalent mdp ignore transition times 
action value function corresponding policy mapping state action pairs values 
solution mdp optimal policy uniformly dominates possible policies mdp 
partition set denotes block belongs 
function set set induces partition equivalence relation 
smdp homomorphisms homomorphism dynamic system dynamic system mapping preserves dynamics general eliminating details full system think simplified model valid model respect aspect state preserves 
specific definition homomorphism claim useful mdps smdps follows definition smdp homomorphism smdp smdp surjection defined tuple surjections gn gs gs gs gs 
call homomorphic image shorthand denote 
surjection maps states states generally generally induces nontrivial equivalence classes states surjection gs actions admissible state actions admissible state state dependent recoding actions key innovation definition discuss detail 
condition says transition probabilities simpler smdp expressible sums transition probabilities states maps state stochastic version standard condition homomorphisms deterministic systems requires homomorphism commutes system dynamics hartmanis stearns 
condition says state action pairs image expected reward 
mdp homomorphism similar smdp homomorphism conditions apply states actions transition times 
state dependent action mapping allows model symmetric equivalence mdps smdps 
example gn homomorphism gridworld state marked 
ga gb ga gb 
balch defined symmetries mdps employing equivalence relations state action pairs explicitly formalize notion smdp symmetries employing smdp homomorphisms group theoretic concepts 
definitions smdp homomorphism gn smdp smdp smdp isomorphism gs bijective 
said isomorphic vice versa 
smdp isomorphism smdp automorphism set automorphisms smdp denoted forms group composition homomorphisms 
group symmetry group gridworld example symmetry group consists identity map states actions reflection states ne sw diagonal swapping actions actions subgroup symmetry group smdp induces equivalence relation induced suitably defined homomorphism ravindran barto 
model symmetric equivalence special case homomorphic equivalence 
minimization notion homomorphic equivalence immediately gives smdp minimization framework 
ravindran barto extended minimization framework dean givan dean givan givan include state dependent action recoding showed state action pairs image homomorphism optimal value 
showed homomorphic image mdp policy induce policy closely related 
specifically policy optimal induce optimal policy solve original mdp solving homomorphic image 
easy extend results smdp models 
goal minimization derive minimal image smdp homomorphic image number admissible state action pairs 
adapted existing minimization algorithm find minimal images employing state action equivalence 
employing state dependent action recoding allows achieve greater reduction model size possible dean givan framework 
example gridworld minimal consider state dependent action mappings 
abstraction structured mdps smdp homomorphisms model various smdp abstraction frameworks 
definition homomorphism section assumed monolithic representation state set 
derive equivalent mdp model smaller follow description state set necessarily simpler lead simpler problem representation 
classes problems modeled mdps inherent structure 
define structured forms homomorphisms exploit structure deriving simpler problem representations 
factored mdps popular way model structure mdps 
factored mdp described tuple state set features variables si si set permissible values feature form 
sm si si elements uniquely labeled transition probabilities described slice temporal bayesian network tbn dean kanazawa 
tbn layer directed acyclic graph nodes 
sm 

si denotes value feature state denotes value feature resulting state 
arc node si node indicates depends si 
classes structured problems may modeled tbn arcs restricted go nodes set second 
state transition probabilities factored prob pre pre denotes parents node tbn corresponding action prob pre conditional probability table cpt associated node reward function may similarly represented 
structuring state space representation allows consider morphisms structured surjections structured set 
example structured morphism simple projection subset features 
state set homomorphic image described subset features rest ignored 
introduce notation zeigler definitions easier 
structured set xi th projection mapping xi defined 
xm xi 
extend definition projection subset features 
set 
projection mapping xj defined definition simple projection homomorphism structured mdp structured mdp surjection defined tuple surjections gn gs 
gs gs prob pre gs 
condition implies subset chosen features chosen sufficient describe block transition dynamics system 
words subgraph tbn described projection include incoming arcs incident chosen nodes 
second condition requires parents incoming arcs reward node included subgraph 
find homomorphic projections just need back reward node including arcs nodes reach desired subgraph 
algorithm run time polynomial number features 
evident space simple projections smaller general maps general may contain homomorphism reducing mdp 
suitable constraints derived prior knowledge structure problem searching general structured homomorphisms results combinatorial explosion 
abstraction algorithms developed boutilier colleagues modeled converging constrained forms structured morphisms assuming various representations cpts space morphisms defined boolean formulae features boutilier dearden defined decision trees features boutilier defined order logic formulae boutilier 
abstraction hierarchical systems previous section showed smdp homomorphisms model various abstraction schemes flat mdps smdps 
smdp homomorphisms convenient powerful formalism modeling abstraction schemes hierarchical systems 
explore various abstraction approaches introduce hierarchical architecture supports abstraction 
hierarchical markov options hierarchical reinforcement learning frameworks proposed parr russell sutton dietterich smdp formalism 
article hierarchical framework adopt options framework sutton ideas developed generally applicable 
options actions take multiple time steps complete 
usually described policy follow option executing set states option execution termination function gives probability option terminate state 
resulting systems naturally modeled smdps transition time distributions induced option policies 
extension options framework readily facilitates modeling abstraction multiple levels hierarchy smdp homomorphisms 
consider class options known markov options policies satisfy markov property terminate achieving certain sub goal 
instances possible implicitly define option policy solution option mdp option smdp option access options 
accordingly define hierarchical markov sub goal option definition hierarchical markov sub goal option smdp tuple mo initiation set option termination function mo option smdp 
state set mo subset constitutes domain option 
action set mo subset may contain options primitive actions reward function mo chosen reflect sub goal option 
transition probabilities mo induced policies lower level options 
assume lower level options fixed policies optimal corresponding option smdps 
option policy obtained solving mo treating episodic task possible initial states episodes termination episode determined option termination function 
example gridworld task shown option pick object exit room defined solution problem shown suitably defined reward function 
domain initiation set option states room option terminates exiting room object 
option specific abstraction homomorphism conditions strict frequently trivial homomorphic images deriving abstractions non hierarchical smdp 
possible derive non trivial reductions restrict attention certain sub problems certain sub goal options 
cases apply ideas discussed sections option smdp directly derive abstractions specific option 
problem learning option policy transformed usually simpler problem learning optimal policy homomorphic image 
relativized options consider problem navigating gridworld environment shown 
goal reach central corridor collecting objects environment 
non trivial homomorphic image exists entire problem 
similar components problem sub tasks getting object exiting 
model similar components partial homomorphic image homomorphism conditions applicable states rooms 
partial image shown 
employing abstraction lets compactly represent related family options case tasks collecting objects exiting rooms single option mdp 
refer compact option relativized option 
abstractions extension notion relativized operators introduced iba 
formally define relativized option follows definition relativized option smdp tuple mo initiation set termination function gn partial homomorphism smdp ro option smdp mo ro chosen sub task 
features rooms 

binary 
features 

binary simple rooms domain similar rooms usual stochastic gridworld dynamics 
task collect objects black diamonds environment reach central corridor 
shaded squares obstacles 
option mdp corresponding get object leave room option 
state set mo domain option admissible state action set 
going back example define single get object leave room relativized option option mdp 
policy learned option mdp suitably lifted provide different policy fragments different rooms 
demonstrates speed performance single relativized option opposed regular options 
experiment option policies higher level policy learned simultaneously 
modeling higher level structure smdp homomorphisms power model broader class abstractions supported base level dynamics system induced intermediate levels hierarchy 
example consider multi link assembly line robot arm needs move objects assembly line 
state system described joint angles velocities object orientation boolean variables indicating object firmly grasped object target location 
primitive actions various joint torques 
depending configuration arm shape orientation object task requires different sequences actions policies conceptually higher level task structure grasp object move object place object 
model higher level task structure relativized option 
define suitable grasp object options grasp cylinder grasp block similar options moving placing objects 
form partial homomorphic image resulting smdp state set image described boolean features action set consists grasp move place actions 
partial homomorphism applies admissible state option pairs smdp consists firmly grasped target location object shape grasp object shape grasp ravindran barto reported detailed experiments setting 
average steps trial relativized option regular options number trials comparison performance learning agents employing regular relativized options task shown 
object shape similarly move object options 
relativized option partial image partial homomorphism option mdp option homomorphism respectively captures desired conceptual structure 
executing optimal policy option results action sequences form grasp move place 
depending object shape actions get bound different lower level options 
techniques symbolic ai long able model higher level task structure reinforcement learning community lacked obvious mechanism 
gives new tools model conceptual task structure various temporal spatial scales 
relation maxq safe state abstraction dietterich introduced safe state abstraction conditions maxq architecture hierarchical learning framework related options framework 
conditions ensure resulting abstractions result loss performance 
assumes sub problems different levels hierarchy specified factored mdps 
maxq architecture employs form value function decomposition safe abstraction conditions apply form decomposition 
condition universal applies hierarchical markov options framework definition projection safe rob rob ii 
condition states transition probability expressed product probabilities describes evolution subset features depends subset 
condition ii states states project state immediate reward 
equations evident conditions equivalent smdp homomorphism conditions restrict attention simple projection homomorphisms consider action remapping 
smdp homomorphism conditions introduced generalize dietterich safe state abstraction condition applicable hierarchical markov option framework 
discussion equivalence classes induced smdp homomorphisms satisfy stochastic version substitution property hartmanis stearns 
property closely related markov chains kemeny snell bisimulation homogeneity givan mdps 
chose smdp homomorphism basic formalism believe simpler notion provides intuitive explanation various abstraction schemes 
homomorphism conditions strict conditions met exactly practice 
approach relax homomorphism conditions somewhat allow small variations block transition probabilities rewards 
explored issue ravindran barto basing approximate homomorphisms concept bounded parameter mdps developed givan 
currently working extending approximate homomorphisms hierarchical systems accommodate variations transition time distributions 
smdp homomorphisms powerful tools modeling abstraction finding minimal image smdp np hard problem 
advantage structure allows develop efficient algorithms special cases needs done develop efficient general purpose algorithms 
currently investigating methods allow determine homomorphisms set candidate transformations hierarchical setting 
article novel definition smdp homomorphism employs state dependent recoding actions 
allows extend existing minimization abstraction methods richer class problems 
developed notions equivalence specialized factored representations hierarchical architectures 
shown smdp homomorphism serve basis modeling variety abstraction paradigms 
acknowledgments wish dan bernstein mike rosenstein hours useful discussion bob givan matt greig clarifying certain ideas 
material supported national science foundation 
ecs andrew barto sridhar mahadevan 
opinions findings recommendations expressed material authors necessarily reflect views national science foundation 
arbib manes arbib manes 
arrows structures functors 
academic press new york ny 
boutilier dearden boutilier dearden 
abstractions decision theoretic planning time constraints 
proceedings aaai pages 
aaai 
boutilier boutilier dearden goldszmidt 
exploiting structure policy construction 
proceedings international joint conference artificial intelligence pages 
boutilier craig boutilier ray reiter robert price 
symbolic dynamic programming order mdps 
proceedings seventeenth international joint conference artificial intelligence pages 
dean givan dean givan 
model minimization markov decision processes 
proceedings aaai pages 
aaai 
dean kanazawa thomas dean kanazawa 
model reasoning persistence causation 
computer intelligence 
dietterich dietterich 
hierarchical reinforcement learning maxq value function decomposition 
artificial intelligence research 
emerson sistla emerson sistla 
symmetry model checking 
formal methods system design 
givan givan leach dean 
markov decision processes 
artificial intelligence 
givan givan dean greig 
equivalence notions model minimization markov decision processes 
appear artificial intelligence 
hartmanis stearns hartmanis stearns 
algebraic structure theory sequential machines 
prentice hall englewood cliffs nj 
iba glenn iba 
heuristic approach discovery macro operators 
machine learning 
kemeny snell kemeny snell 
finite markov chains 
van nostrand princeton nj 
parr russell ronald parr stuart russell 
reinforcement learning hierarchies machines 
proceedings advances neural information processing systems pages 
mit press 
ravindran barto ravindran barto 
symmetries model minimization markov decision processes 
technical report university massachusetts amherst 
ravindran barto ravindran andrew barto 
model minimization hierarchical reinforcement learning 
sven koenig robert holte editors proceedings fifth symposium abstraction reformulation approximation sara lecture notes artificial intelligence pages new york ny august 
springer verlag 
sutton richard sutton precup satinder singh 
mdps semi mdps framework temporal abstraction reinforcement learning 
artificial intelligence 
zeigler bernard zeigler 
formulation problems simulation modelling framework mathematical system theory 
proceedings sixth international congress cybernetics pages 
association internationale de 
balch balch 
symmetry markov decision processes implications single agent multi agent learning 
proceedings th international conference machine learning pages san francisco ca 
morgan kaufmann 
