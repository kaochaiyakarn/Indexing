efficient mining graph data jesus gonzalez lawrence holder diane cook university texas arlington department computer science engineering box arlington tx gonzalez holder cook cse uta edu increasing amount structural data collected arises need efficiently mine information fi om type data 
goal research provide system performs data mining structural data represented labeled graph 
demonstrate graph discovery system subdue perform structural pattern discovery structural hierarchical clustering graph data 
amount data generated collected today quickly overwhelming researchers abilities interpret data 
response problem number researchers developed techniques discovering concepts databases 
collected data explicit implicit structural component spatial temporal discovery systems designed handle type data 
demonstrate structural discovery system subdue perform efficient mining structural data 
discovery algorithm implemented system perform types mining graph data 
describe method discovering patterns examples embedded graph data 
second introduce method performing hierarchical clustering structural data graph discovery system 
subdue subdue cook holder tool discovers patterns embedded labeled graphs 
subdue searches space possible substructure subgraph patterns evaluating possible substructure pattern compresses input graph terms description length 
substructure discovered substructure simplify data replacing instances substructure pointer newly discov ered substructure 
discovered substructures allow copyright american association artificial intelligence www aaai org 
rights reserved 
abstraction detail original data 
iteration substructure discovery replacement process constructs hierarchical description structural data terms discovered substructures 
subdue represents structural data labeled graph 
objects data map vertices small subgraphs graph relationships objects map directed undirected edges graph 
graphical representation serves input substructure discovery system 
subdue discover patterns domains cad circuit analysis chemical compound analysis scene analysis 
userdefined limits number reported patterns graph match constrain algorithm poly nomial size input graph cook holder 
subdue uses variant beam search main search algorithm see 
goal search find subgraph compresses input graph best 
subgraph subdue consists substructure definition occurrences graph 
initial state search set subgraphs consisting uniquely labeled vertices subgraph represents uniquely labeled vertex 
operator search extend subgraph operator 
name suggests extends subgraph possible ways single edge vertex single edge vertices subgraph 
substructures evaluated ability compress description length input graph minimum description length mdl principle 
search progresses applying extend subgraph operator subgraph current state 
resulting state contain subgraphs generated extend subgraph operator 
subgraphs kept queue ordered ability compress graph 
length queue partially user specified 
user chooses subgraphs different value terms compression kept queue 
subgraphs ability compress graph actual queue length vary 
subdue graph int beam int limit queue unique label substructure repeat extended adjacent edge possible ways limit limit evaluate substructures compression substructures top beam compression scores best substructure better best substructure empty limit return subdue discovery algorithm 
search terminates reaching user specified limit number substructures extended exhaustion search space 
search terminates returns list best subgraphs graph compressed best subgraph 
compression procedure replaces instances subgraph input graph single vertex represents subgraph 
incoming outgoing edges replaced subgraph point originate new vertex represents subgraph 
subdue algorithm called compressed graph 
procedure repeated userspecified number times referred iter ation 
maximum number iterations performed graph predetermined graph compressed single vertex compressed 
subdue search guided minimum description length mdl principle originally developed rissanen rissanen 
evaluation heuristic best substructure minimizes description length graph compressed substructure 
compression cal follows compression dl dl dl dl description length input graph dl description length subgraph dl description length input graph compressed subgraph 
search algorithm looking maximize value subgraph simply inverse compression 
variations data exist subdue employs inexact graph match finding instances substructure definition 
cost transforming instance isomorphic substructure definition user defined threshold range multiplied size larger graph subgraph considered instance sub structure 
goal research apply substructure discovery algorithm large complex databases algorithm constrained values beam limit run polynomial time 
parallel distributed versions system developed provide scalability cook 
distributed algorithm partitions graph subgraphs available processors 
processor searches subgraphs compress local graph 
broadcasting best local substructures processors collecting values compressing description length graph partitions best global substructures determined 
processors locally expand substructures selected best globally 
structural discovery earthquake data study demonstrate subdue ability discovery structural patterns earthquake activity databases 
earthquake data analyze contains formation catalogs cr usgs gov 
provided sources national geophysical data center national oceanic atmospheric administration 
database records earthquakes data 
earthquake record consists fields source catalog date time latitude longitude magnitude intensity seismic related information cultural effects map geographic region stations computations 
experiment analyze data covering year 
graph representation data types edges connect events earthquakes 
type edge near distance edge defined events distance kilometers 
second type edge near time edge defined events occurring hours 
parameters suggested professor uta geology department dr burke 
earthquake event graph form shown 
earthquake data discovery results sampling data consisted events comprising graph vertices edges 
discovered substructures linked events near time near distance edges 
fourth discovered substructure complex shown 
substructure interesting earthquakes happened short period time related fault placement 
near time magnitude 
area study fault 
event earthquake graph representation 
near time near time near time near time near time substructure discovered earthquake data 
discovered results possible conclude data earthquakes occurred months may june frequent depth related earthquakes kin km 
depths validated frequent depths earthquake activity 
experiment subdue determine earthquake activity specific area mexico 
dr burke uta extensively studied fault mexico self location shown 
processing data subdue discovered subarea high concentration earthquakes area characteristics 
dis covered substructures indicate region located state greatest concentration earthquakes spatial relationships exist earthquakes region 
dr identified area active 
shows substructures discovered iterations subdue 
second substructure defined terms substructure represents pattern events depth kin 
interesting pattern give information cause earthquakes 
earthquake caused force substructure instances depth substructure instances discovered substructure 
caused pacific plate effects depth closeness pacific ocean possibility related fault 
evaluate determine depth earthquakes caused zone 
study demonstrate subdue discover patterns structural data containing spatio temporal relations 
section describe different subdue system perform structural hierarchical clustering 
hierarchical clustering subdue clustering techniques provide useful means gaining better understanding data cases revealing hierarchical topologies 
clustering applied diverse fields analytical chemistry geology biology zoology key component model fitting hypothesis generation testing data exploration data reduction 
simple example hierarchical clustering classification vehicles groups cars trucks motorcycles subdivided smaller smaller groups traits 
current clustering techniques intrinsic disadvantages 
statistical syntactic approaches trouble expressing structural information neural approaches greatly limited representing semantic information 
despite limitations number clustering algorithms demonstrated success including cobweb fisher labyrinth thompson langley autoclass cheeseman stutz 
hierarchical approaches cluster artificial domain 
ing including agglomerative methods merge clusters optimal separation clusters achieved divisive approaches split existing clusters optimal clustering 
approaches usually disadvantage applicable metric data excludes discrete valued structured databases guha rastogi shim han kumar 
graph hierarchical conceptual clustering algorithm uses subdue construct hierarchical lattice clusters 
discovered substructure single iteration comprises cluster 
identified clus ter inserted classification lattice compress input graph 
compressed graph passed subdue find substructure 
iteration allows subdue find new substructures defined terms previously discovered substructures 
previous suggested user classification trees structured domains strict tree inadequate 
domains lattice structure may emerge tree 
substructures added lattice parents may include nonroot nodes lattice 
substructure composed previously discovered substructures links parent child lattice 
subdue searches hypothesis space classification lattices 
iteration search process numerous local minima encountered global minimum tends minima 
clustering purposes local minimum best partial hypothesis 
reason easy see 
subdue starts instances unique substructures iteratively expands best ones single vertex 
local minimum encountered caused smaller substructure instances local minimum larger fewer instances 
smaller substructure general larger represent parent node classification lattice specific clusters 
entirely possible global minimum best substructure global minimum local minimum may produce overlapping clusters 
provide example explanation classification lattice artificial domain 
generation hierarchical conceptual clustering artificial domain shown demonstrated 
resulting classification lattice shown 
subdue iteration discovers ture describes pentagon pattern input graph 
comprises cluster 
cluster inserted child root node 
iterations square shape cluster cs triangle shape cluster discovered respectively 
inserted root con tain definition contain basic shapes pentagon square triangle appear times input graph 
discovered order described 
number stances graph size subgraph decide capable compressing input graph 
subgraph describing pentagon vertices edges square vertices edges triangle vertices edges 
number instances bigger subgraph compress input graph better 
fourth iteration subdue deems subgraph best describes pentagon shapes connected single edge 
formations graph think overlapping instances permitted 
cluster inserted classification lattice child cluster describing pentagon cluster appears definition 
links connecting new cluster parent 
parent cluster definition appears twice 
iteration subgraph discovered contains pair squares connected edge pair triangles connected edge pair connected single edge 
subgraph instances input graph 
cluster inserted child clusters level lattice appear definition new cluster 
new lattice depicted 
parent cluster definitions appear twice new cluster links parents new node 
evaluation metrics conventional non hierarchical clusterings evaluated observation says instances cluster similar instances adjacent clusters significantly different 
measure suggested observation average dissimilarity members different clusters average dissimilarity members cluster 
larger clustering quality distinctly defined clusters better clustering 
hierarchical clusterings previously mentioned metric applied 
main reason clusters organized hierarchy completely disjoint 
sense compare clusters clusters compute average inter cluster distance 
clusters common parent may meaningfully compared 
develop metric hierarchical conceptual clusterings need define characteristics clusterings 
things best coverage smallest number clusters possible 
imply clusters general describe data defining concepts 
words larger clusters provide better generality 
desirable property big cluster description features cluster infer power lebowitz 
tradeoff course coverage 
third thing clustering minimal overlap clusters 
overlap indicates disjoint concepts 
clearly defined concepts primary importance conceptual clustering 
mentioned points applied recursively clusters classification hierarchy 
quality root cluster hierarchy equals quality entire hierarchy 
new metric evaluation quality clustering computed equa tion shown 
equation represents number child clusters hi represents ith child cluster hi represents kth instance ith child cluster hi represents number instances child cluster hi hi represents size child cluster definition number edges plus number vertices 
distance hi hj operation numerator difference instances child clusters measured number transformations required transform smaller cluster instance larger 
computation quality hierarchical clustering recursire expressed formula 
recursire nature calculation quality root node classification lattice quality entire clustering 
compute quality single cluster child clusters pairwise compared normalized 
pairwise comparison child clusters performed comparing instance larger cluster instance smaller cluster inexact graph matching algorithm 
value returned inexact graph matching integer signifying number transformations required transform graph 
value normalized dividing size larger graph 
dissimilarity graphs greater size larger graph 
addition cluster inherits quality children simply added total quality 
suggested pairwise comparison child clusters metric measures dissimilarity child clusters cluster 
larger number signifies better quality 
evaluation heuristic rewards desirable properties hierarchical clusters 
big clusters rewarded big disjoint clusters need transforma tions transform cluster 
spite normalization vertex edge clusters having vertex common different vertex edge clusters having vertex common different 
disjoint clusters rewarded 
overlap clusters distant fuzzy matching algorithm contributing sum normalized distances 
small number clusters rewarded average comparisons instances way offsetting summing effect normally reward large number clusters 
see evaluation heuristic achieves goals set forth hierarchical clustering metric 
experimental results experiment compare lattice generated subdue classification tree produced cobweb animal database fisher 
data experiment table 
animal data represented subdue graph attribute names name mapped labeled edges attribute values mammal hair mapped labeled vertices 
hierarchical clustering generated cobweb shown 
unstructured data systems generated similar hierarchies 
lattice generated subdue shown 
evaluation measure introduced previous section clustering generated subdue quality 
classification iq hi hj new metric evaluating hierarchical clusters 
mammal bird fish amphibian hierarchical clustering animal descriptions cobweb 
regulated fertilization internal name bird name reptile skin imperfect internal cover skin scales hierarchical clustering animal descriptions subdue 
name body cover heart chamber body temp fertilization hair regulated internal bird regulated internal reptile skin imperfect unregulated internal amphibian skin unregulated external fish scales unregulated external table animal descriptions 
ch ch cl ch oh ho po portion dna molecule 
tree generated cobweb yields value 
illustrate clusters subdue generates structured data apply algorithm portion dna data shown 
input graph vertices represent atoms small molecules edges represent bonds 
portion classification lattice generated subdue shown 
shows level lattice represents small commonly occurring substructures covering data 
subsequently identified clusters smaller clusters combined atoms molecules form new cluster 
increasing structural component current databases requires efficient methods mining structural data 
described graph discovery system called subdue capable mining structural data stored labeled graph 
experiments demonstrate subdue discover interesting repetitive structural patterns data 
results described temporal earthquake data ongoing efforts focusing structural databases molecular biology data chemical compound data 
addition detail methods subdue generate structural hierarchical clusters 
algorithm demonstrated animal description data dna molecule data 
graph discovery mining techniques subdue structural information learned utilized variety domains discovery tasks 
self 
extension annotation blocks northern central american effect volcanic arc geology 

geology northern central america 
donovan ed geology 
geological society 

cheeseman stutz 
bayesian classification autoclass theory results 
fayyad piatetsky shapiro smyth uthurusamy eds advances knowledge discovery data mining 
mit press 
chapter 
cook holder 
graph data mining 
ieee intelligent systems 
cook holder 
approaches parallel graph knowledge discovery 
appear journal parallel distributed computing 
cook holder 
scalable discovery informative structural concepts domain knowledge 
ieee expert 
fisher 
knowledge acquisition incremental conceptual clustering 
machine learning 
guha rastogi shim 
cure efficient clustering algorithm large databases 
proceedings cm sigmod international conference management data 
han kumar 
chameleon hierarchical clustering dynamic modeling 
computer 
lebowitz 
incremental concept formation 
machine learning 
rissanen 
stochastic complexity statistical inquiry 
world scientific publishing 
dz hierarchical clustering dna molecule 

pattern recognition 
wiley sons 
thompson langley 
concept formation structured domains 
fisher pazzani eds concept formation knowledge experience unsupervised learning 
morgan kaufmann publishers 
chapter 
