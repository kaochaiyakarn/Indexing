designing artificial neural networks evolution xin yao yong liu computational intelligence group department computer science university college university new south wales australian defence force academy canberra act australia email xin cs oz au designing artificial neural networks anns different applications key issue ann field 
ann design relies heavily human experts sufficient knowledge anns problem solved 
ann complexity increases designing anns manually difficult unmanageable 
simulated evolution offers promising approach tackle problem 
describes evolutionary approach design anns 
anns designed evolutionary process referred evolutionary anns eanns 
represent special class anns evolution fundamental form adaptation addition learning known weight training 
describes evolutionary programming ep system evolve architectures connection weights including biases anns 
mutation operators proposed evolutionary algorithm 
order improve generalisation ability evolved anns operators applied sequentially selectively 
validation sets evolutionary process order improve generalisation 
evolutionary algorithm allows anns grow shrink evolutionary process 
incorporates weight learning process part mutation process 
eann system regarded hybrid evolution learning system 
extensive experimental studies carried test eann system 
gives experimental results show effectiveness system 
keywords evolutionary algorithms artificial neural networks learning evolution generalisation adaptation 
designing artificial neural networks anns simulated evolution investigated years :10.1.1.13.957
offers promising automatic alternative designing anns manually 
advantage automatic design manual design clearer complexity anns increases 
manual design anns requires designer knowledge anns problem solved ann 
knowledge unavailable non ann expert facing real world problem 
evolutionary artificial neural networks eanns refer special class artificial neural networks anns evolution fundamental form adaptation addition learning :10.1.1.13.957
provide general framework investigating various aspects supported australian research council small scheme 
simulated evolution learning including automatic design anns 
general framework clear automatic design anns fits picture general adaptive system change behaviours changing hardware weights architectures software learning rule 
review general framework section 
discuss issue designing anns simulated evolution section 
section presents latest evolutionary system evolve ann weights architectures time 
section gives indicates research topics 
general framework eanns evolution introduced anns various levels 
lowest level evolution introduced weight training ann weights evolved 
evolutionary process similar learning process connectionist paradigm weights adjusted order learn certain functions 
higher level evolution introduced ann architecture adaptation architecture evolved designed human beings 
highest level evolution introduced ann learning rule rule specifies adjust weights weight training 
weight training traditionally regarded learning process evolution learning rules regarded process learning learn weights 
general framework eanns includes levels evolution :10.1.1.13.957
discussions evolution learning rules highest level :10.1.1.13.957
point view engineering decision level evolution depends kind prior knowledge available 
prior knowledge eann architectures learning rules particular class architectures pursued better put evolution architectures highest level knowledge reduce architecture search space lower level evolution learning rules biased kind architectures 
hand evolution learning rules highest level prior knowledge available special interest certain type learning rules 
provides common framework discussing various eann models interpret simulated evolution broader sense interpret simulated annealing sa gradient descent search exhaustive search special cases evolutionary algorithms 
example traditional back propagation bp network considered special case general framework shot candidate search evolution architectures learning rules bp algorithm evolution connection weights 
fact general framework defines threedimensional space represents shot search represents exhaustive search axis 
eann model corresponds point space coordinates represent algorithms eann model searching weights architecture learning rules 
describe eann model uses shot algorithm search learning rule variant evolutionary programming ep search architecture hybrid bp sa algorithm search weights 
weights include connection weights biases 
evolution learning rules evaluation learning rules reproduction learning rules evolution architectures evaluation architectures reproduction architectures evolution weights evaluation weights reproduction weights tasks general framework eanns 
automatic design anns evolution evolution architectures provides automatic way design anns 
obvious general framework previous section algorithm implement simulated evolution 
constructive pruning algorithms learn ann architectures weights susceptible trapped structural local optima 
addition investigate restricted topological subsets complete class network architectures 
evolutionary algorithms genetic algorithms ep evolution strategies better suited task evolving ann architectures 
evolving ann architectures evolutionary algorithms easy task 
mapping genes phenotypes caused major problems evolving anns 
problem noisy fitness evaluation problem 
normally phenotype fitness approximate genotype fitness 
example fitness trained ann random set initial weights represent fitness ann architecture 
evaluation architecture noisy depends random initialisation training algorithm 
genotype may different phenotypes 
second problem known permutation problem competing conventions problem 
phenotype may different genotypes 
example strictly layered feedforward anns order hidden nodes differently functionally equivalent may different genotypic representations 
order alleviate problems evolutionary design anns decided evolve architecture weights time ep algorithm 
simultaneous evolution architecture weights means individual population ann architecture weights 
evaluation accurate evaluating ann architecture weights 
fitness ann architecture weights represent architecture 
ep algorithm avoids crossover operators effective due permutation problem 
new system designing anns epnet developed new evolutionary system designing anns automatically 
main structure system epnet 
epnet system built ep algorithm adopts rank selection scheme mutations hybrid training node deletion connection deletion connection addition node addition :10.1.1.13.957
hybrid training mutation epnet modifies ann weights 
modified bp mbp algorithm adaptive learning rate sa algorithm 
mutations grow prune hidden nodes connections 
feedforward anns considered epnet 
number epochs mbp train anns population defined user specified parameters 
guarantee ann converge local optimum generation 
training process called partial training 
mutations attempted sequentially 
mutation leads better offspring regarded successful 
mutation applied 
words hybrid training addition connection node deletion hidden node deletion random initialisation anns initial partial training rank selection obtain new generation 
successful 
successful 
successful 
mutations training main structure epnet 
mutations applied time 
order deletion addition encourages evolution compact anns 
epnet puts lot emphasis behavioural links parents offsprings 
deletes adds connections probabilistically importance ann 
node deletion done random node addition achieved splitting existing node 
order improve generalisation ability evolved anns validation sets epnet 
compute fitness ann 
evolutionary process anns final population trained mbp combined training validation set 
ann performs best second validation set final output epnet 
tested epnet number artificial real world data sets including parity problem various sizes medical diagnosis problems australian credit card assessment problem 
tested epnet difficult artificial problem spiral problem 
result typical run epnet problem shown 
addresses issue automatic design anns 
argued evolutionary approach offers promising competitive alternative designing anns manually constructive pruning algorithm 
evolutionary design anns discussed general framework eanns provides common basis comparing class class training data set spiral problem examples 
decision region formed ann evolved epnet 
hidden nodes connections ann 
investigating various eann models 
new evolutionary system designing anns epnet described 
experimental studies carried number problems 
reports result known spiral problem 
includes parallelisation epnet system improvement hybrid training mutation consumes computation time 
schaffer whitley eshelman combinations genetic algorithms neural networks survey state art whitley schaffer editors proc 
int workshop combinations genetic algorithms neural networks pages 
ieee computer society press los alamitos ca 
yao review evolutionary artificial neural networks international journal intelligent systems 
yao evolutionary artificial neural networks international journal neural systems :10.1.1.13.957
yao evolutionary artificial neural networks kent williams editors encyclopedia computer science technology volume pages 
marcel dekker new york ny 
yao evolution connectionist networks editor preprints int symp 
ai reasoning creativity pages queensland australia 
griffith univ yao evolution connectionist networks editor artificial intelligence creativity pages 
kluwer academic publishers dordrecht 
angeline pollack evolutionary algorithm constructs recurrent neural networks ieee trans 
neural networks 
miller todd hegde designing neural networks genetic algorithms schaffer editor proc 
third int conf 
genetic algorithms applications pages 
morgan kaufmann san mateo ca 
yao empirical study genetic operators genetic algorithms microprogramming 
liu yao population learning algorithm learns architectures weights neural networks chinese journal advanced software research allerton press new york ny 
yao liu evolving artificial neural networks medical applications proc 
australia korea joint workshop evolutionary computation pages 
kaist korea september 
yao liu evolutionary artificial neural networks learn generalise accepted ieee international conference neural networks washington dc usa 
june 

