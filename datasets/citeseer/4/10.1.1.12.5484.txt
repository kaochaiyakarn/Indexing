ourgrid approach easily assemble grids equitable resource sharing andrade cirne francisco lsd dsc de sistemas distribu dos universidade federal de grande dsc edu br paulo hp brazil paulo hp com summary 
available grid technologies globus toolkit possible run parallel application resources distributed administrative domains :10.1.1.36.5271
grid computing users don access handful resources technologies 
happens mainly gaining access resources depends personal negotiations user resource owner resources 
address problem developing ourgrid resources sharing system peer peer network sites share resources order form grid access 
goal solve access gaining problem users bag tasks applications parallel applications tasks independent resources idle time exchanged extra resources needed 
simple working environment ourgrid deployed immediately di erently grid economy approaches aim solve problem depend available infrastructure 
grid computing user assemble grid 
user technologies grid computing access resources technologies 
example resources globus toolkit access permission resources globus installed :10.1.1.36.5271
today access gaining grid resources done personal requests user resource owner 
run application workstations laboratories university user convince system administrator laboratory give access system workstations 
resources user wishes cross institutional boundaries situation gets complicated possibly di erent institutional policies come 
dicult gain access handful resources grid computing technologies run applications 
resource owners provide access resources allow users form grids interest providing resources grid users 
grid users may demand resource simultaneously mechanisms dealing con icting requests resources arbitrating 
problem seen er demand problem approaches achieve grid economy means grids economic models real markets 
models mimic real markets mechanisms solve problems grid er demand rely available infrastructure electronic monetary transactions 
possible users securely verify consumed pay mature deployed technologies electronic currency banking 
technologies widely deployed actual economic mechanisms architectures real settings postponed technologies mature infrastructure needed available 
presently exists demand grids production 
aiming provide short term infrastructure addresses demand expressive set users developing ourgrid 
ourgrid design model resource sharing provides equity minimum needed 
aim provide easy install open extensible platform suitable running useful set grid applications users willing share resources order obtain access grid 
type application ourgrid intends provide resources parallel applications task loosely coupled known bag tasks bot applications 
bot parallel applications composed set independent tasks need communication execution 
applications areas computational biology simulations parameter sweep computer imaging de nition useful large communities users :10.1.1.42.8707
additionally research perspective exists demand understanding grid usage requirements patterns real settings 
system ourgrid production real users able gather valuable information needs habits grid users 
allows provide better guidance orts general solutions collect important data grids usage workloads example 
remaining structured way 
section go details grid assembling problem discussing related works presenting approach 
discuss bot applications suitable running resources provided ourgrid section 
section describes design ourgrid network favors model 
evaluation system discussed section 
section expose steps planned ourgrid development 
concluding remarks section 
assembling grid traditional system lan parallel supercomputer user obtains access resources negotiating resources owner right access 
access granted system administrator con gures user set permissions priorities 
procedure grid computing due grid inherent wide distribution spawning administrative boundaries approach suitable 
grid computing aims deal large heterogeneous dynamic users resources sets 
build large scale grids able form mutually untrusted unknown parts 
scenario dicult ordinary user obtain access small set services owners known 
grid computing aims provide access large quantities resources widely distributed giving users possibility accessing small quantities resources means neglecting potential grid computing 
problem assembling grid raises issues resource providers perspective 
suppose simple scenario just institutions want create grid joining resources 
interested having access processors possible 
shall want fairness sharing 
probably want assure give access resources institution users users access institution resources equal proportions 
existing solutions grid computing allow institutions de ne policies resource sharing creating static constraints guarantees users ourgrid approach easily assemble grids equitable resource sharing grid :10.1.1.36.5271
third institution joins grid new agreements negotiated institutions con gured 
easily see mechanisms scalable exible large scale grids scenarios 
related grid computing active area research research orts dynamic access gaining resources exist 
attribute mainly grid computing necessary postpone question access gaining technologies needed grids matured 
past orts spent de ning mechanisms support static access policies constraints allow building metacomputing infrastructures di erent administrative domains condor system computational op :10.1.1.36.5271
condor system di erent mechanisms allowing condor user access resources institutional boundaries :10.1.1.36.5271
trying institutional level agreements condor changed user institution level provide exibility requested users :10.1.1.36.5271
perceived interoperability grid middlewares needed new architecture accessing grid resources developed 
dealt dynamic access gaining condor project valuable contributions understanding needs users accessing grid 
computational op de ned mechanism gathering sites grid metaphor 
mechanism allows sites control resources grid provides guarantees resource grid 
done ticket scheduler 
tickets users access local grid resources obtaining priorities spend tickets 
need negotiations owners sites de ne division grid tickets impossibility tickets transfers consumption op exible environments dynamic grids 
just cash depends cryptography infrastructure sure tickets forged 
ort related access gaining grid computing research grid economy 
grid architecture computational economy grace nimrod system compute power market related :10.1.1.36.5271
grace architecture supports di erent economic models negotiating access grid resources 
nimrod grid broker execution parameter sweep applications implements grace concepts allowing grid client negotiate access resources paying 
compute power market aims provide access resources decentralized manner peer peer network letting users pay cash grid resources 
important point note approaches allowing negotiations service consumers providers secure global currencies proposed nimrod compute power market infrastructure secure negotiation payments banking deployed 
level maturity basis technologies example secure deployed electronic money necessary postpone economic approaches real systems 
ourgrid approach central point ourgrid utilization assumptions restrictive system usefulness easier satisfy existing systems grid economy 
assumptions environment system operate peers system willing share resources order obtain access resources ii applications executed ourgrid need quality service qos guarantees 
assumptions aim build resource sharing network promotes equity resources sharing 
equity mean participants network donated resources prioritized resources 
assumption resource providers system ensure exist participants system resources access exchanged 
possible exchange economic model commonly price models 
assuming requirements qos guarantees put aside negotiations providers need negotiate product characteristics won guaranteed 
negotiations unnecessary participants agree values resources allocated consumed 
simpli es process consumers don verify agreed value really consumed providers don assure resources provided agreed 
way building simplest form exchanged economic model 
negotiation participant favors expecting con icting situations prioritizes done favors past 
participant ers expects rewarded 
negotiations agreements 
participant accounts favors expect pro way getting participants favors 
cost donating idle cycles fact forever lost consumed instantaneously participant model gain donating 
rst assumption exists participant sharing idle resources donating implies eventually bene ting accessing extra resources 
shall see local behavior participants emergent behavior system promotes equity arbitration con icting requests shared resources system 
important point absence qos guarantees impossible guarantee equity resource sharing 
system guarantee user access resources compensate amount donated community guarantee available resources time needed 
propose system aims guarantee promote resource sharing equity 
promoting equity means trying best ort strategy achieve equity 
proposed assumptions system ease development deployment ourgrid restricting turn utility 
necessity participants resources excludes users don resources willing pay example cash grid 
absence qos guarantees impossible advance reservation resources consequently preclude mechanisms provide synchrony execution parallel applications need communication tasks 
believe restrictions ourgrid useful 
ourgrid delivers services suitable bag tasks class applications 
stated applications relevant areas research interesting users 
bags tasks applications due independence tasks bot applications especially suited execution grid failures slow communication channels expected frequent conventional platforms execution parallel applications 
argue class applications successfully executed need qos guarantees ourgrid scenario 
bot application perform qos guarantees need synchronization tasks ii dependencies tasks iii tolerate faults due resources unavailability simple strategies 
example strategies improve performance fault ourgrid approach easily assemble grids equitable resource sharing tolerance ourgrid scenario respectively replication tasks multiple resources re tasks failed execute 
class application cope resources dedicated availability guaranteed failure execution individual tasks impact execution tasks 
performing assumptions characteristic bot applications matches approach users cycle 
experience says application developed users usually carry cycle plan details computation run application examine results restart cycle 
planning details computation means spending time needed decide parameters run application 
signi cant amount time needed process understand results produced large scale computation 
period user running bot application wants resources possible phases working cycle leaves resources idle 
idle resources provided users return access users resources needed 
example dynamic bot application users illustrated 
users resources local obtained grid case user idle resources need run bot applications 
note user needs resources priority foreign user 
local local local local local local local grid grid grid grid grid shared shared shared shared bot user bot user idle shared idle fig 

idle resource sharing bot users point note resources heterogeneous user resources needs run application poses constraints resources needs 
example user machines running linux solaris 
wants run application run solaris won able resources 
possible user share part resources consuming part addition resources users 
way believe expecting bot applications users share resources order gain access resources plausible 
stated kind exchange carried impact resources owners exchanged resources idle extra resources needed run applications 
ourgrid discussed approach intend develop ourgrid peer peer network resources owned community grid users 
adding resources peer peer network sharing community user gains access available resources 
resources shared respecting provider policies ourgrid strives promote equity sharing 
user accesses grid services provided peer maintains communication peers uses community services application level routing discovery access acting grid broker users 
peer accessed native foreign users 
native users access ourgrid resources foreign users access resources peers 
peer consumer provider resources 
peer making favor response request peer acting provider resources acting consumer resources 
ourgrid network architecture shown 
clients software users access community resources 
client application scheduler possibly extra functionalities 
examples clients mygrid apst nimrod apples :10.1.1.42.8707:10.1.1.40.5011
fig 

ourgrid network architecture plan provide access ourgrid di erent resource types 
example resources type clusters workstations accessed globus type resources parallel supercomputers type resources workstations running mygrid useragent 
resources granularity workstations clusters entire institutions encapsulated ourgrid peer propose manage access sites individual resources 
resources grouped sites granularity system give advantages number peers system diminishes considerably improving performance searches ii system topology closer network infrastructure topology alleviating trac problems peer peer systems iii system closer real ownership distribution resources usually grouped sites proper set users owners 
ourgrid community part larger set resources user access users native users peer di erent communities 
rest section describe details key aspects ourgrid design 
subsection model accordingly resources shared network favors 
subsection depicts protocol gain access resources ourgrid community 
ourgrid approach easily assemble grids equitable resource sharing network favors resources ourgrid network shared network favors 
network favors allocating resource requesting consumer favor 
expected consumer debt owner consumed resources 
model expectation participants favors consumers debt solicited 
participant perceived acting way gradually prioritized debt grows 
peer system keeps track local balance known peer past interactions 
balance prioritize peers credit arbitrating con icting requests 
peer consumption resources peer balance resources provided credited balance maintains known peers balances participant maintain ranking known participants 
ranking updated provided consumed favor 
quanti cation favor value done locally independently negotiations agreements aren serving decisions resource allocations local peer 
peers system ask favors gradually discover participants able favors prioritize debt credit 
consequence participant prioritizes cooperate satisfactory ways peers reason favors satisfactorily 
non happen reasons example failures services communication network absence desired service peer utilization desired service users moment request 
free rider peers may choose favors 
cases non favors gradually diminishes probability peer access grid resources 
note mechanism prioritizing intends solve con icting situations 
expected resource available idle user access 
way ordinary user potentially access resources grid 
users contribute little don contribute access resources system peer credit requests 
idle requested resources peers don contribute free riders maximizes resource utilization harm peers contributed resources 
interesting point system conceived totally decentralized composed autonomous entities 
peer depends local knowledge decisions part system 
characteristic greatly improves adaptability robustness system doesn depend coordinated actions global views 
ourgrid resource sharing protocol communicate community gain access consume provide resources peers ourgrid resource sharing protocol 
note protocol concerns resource sharing peerto peer network 
consider system uses lower level protocols necessary services peers discovery broadcasting messages 
example platform provides protocols jxta project 
participants ourgrid resource sharing protocol clients consumers providers 
client program manages access grid resources run application tasks 
ourgrid resources transparently ering computational resources client 
client may access ourgrid peers resources directly globus gram condor pool ii access ourgrid peers di erent resource sharing communities :10.1.1.36.5271
consider client encompasses application scheduler domain speci module needed schedule application eciently :10.1.1.36.5271
consumer part peer receives requests user client nd resources 
consumer rst request resources providers able willing favors obtaining execute tasks resources 
providers part peers manages resources shared community provides consumers 
illustrated peer community consumer provider modules 
consumer receives request resources local user client broadcasts peer peer network desired resources characteristics message 
resources characteristics minimum constraints needed execute tasks message referring 
responsibility client discover characteristics probably asking information user 
note broadcasted message reaches provider belongs peer consumer 
consumer provider consumer provider consumer provider consumer provider ourgrid peer user client scheduler 
rank ourgrid community fig 

consumer provider interaction 
providers resources match requested characteristics available accordingly local policies reply requester message 
set replies received moment de nes grid available client request ourgrid community 
note set dynamic replies arrive resources needed satisfy request available providers 
set available resources possible consumer peer ask client schedule tasks 
done sending message containing known available providers 
application scheduling step kept ourgrid scope allow user select existing scheduling algorithms optimizes application accordingly knowledge characteristics application 
client scheduled number tasks providers sent messages sends message consumer requested resources 
peer represents site owning set resources message contain list ordered pairs task provider list tuples task provider processor 
client deciding format message 
tasks sent consumer directly client provider allow consumer account resource consumption 
ourgrid approach easily assemble grids equitable resource sharing provider pn message consumer sends message containing tasks executed pn data needed run 
peer received message nishes tasks successfully sends back message corresponding consumer 
concluding task execution provider updates local rank known peers subtracting accounting task execution cost consumer peer balance 
consumer peer receiving updates local rank adding accounting reported tasks execution cost provider balance 
note consumer may trust accounting sent provider autonomous accounting 
provider owns available resources match request constraints willing favors keeps asking consumer tasks 
provider may decide continue making favors consumer order prioritize requester upper ranking 
provider decides requesting tasks receives message consumer informing tasks left schedule receives response task request 
note rst broadcast ow requests providers consumer 
messages signal availability alleviate consumer task managing state current providers 
sequence diagram interaction consumer providers shown 
provider provider favor consumer provider unable decided provide resources consumer 
consumer provider provider client fig 

sequence diagram consumer providers interaction ourgrid network open system potentially comprised di erent algorithms implementations peers sections examples expected correct behaviors peer provider consumer 
algorithms intend exemplify clearer peer behavior obtain access community shared resources 
provider algorithm typical provider runs threads receiver allocator executor 
receiver allocator execute continuously access add remove alter elements list received requests known peers 
executor instantiated allocator take care individual tasks execution accounting 
receiver thread keeps checking received requests 
requests received veri es request ful lled owned resources 
verifying provider owns resources satisfy request requirements matter available accordingly peer sharing policies 
consumer request satis ed receiver adds list received requests 
lists requests issued local users issued foreign users 
allows prioritize local users requests scheduling tasks local resources 
allocator thread algorithm shown algorithm 
executing allocator thread continuously tries satisfy received requests available resources 
tries nd rst request local user ful lled tries community requests received 
function line labeled returns request speci ed position priority ranking accordingly local set policies 
policies di er peer peer examples local prioritizing policies fifo prioritize users consumed past histories 
function line labeled thing community requests 
known peers balances serve ranking prioritize requests 
lines labeled allocator veri es resources necessary speci ed ful ll request passed parameter available local policies availability 
request chosen answered iteration main loop allocator decides resources allocated request line labeled sends message asking tasks execute 
receives tasks execute schedule received tasks resources allocated request 
done execute function creates provider executor thread task executed 
executor rst sets environment task execute 
set environment means prepare necessary characteristics speci ed local policies security 
example mean create directory restricted permissions restricted size task execute 
task ectively executed results collected sent back executor update credit consumer peer 
quantifying function may di er peer peer 
simple example done sum cpu time task multiply cpu speed mips 
peer estimated value favor just updates list decreasing respective consumer balance 
simplicity considering provider allocator scheduling non preemptive 
iss reasonable expect avoid impacting interactive user shared resources provider may suspend kill tasks foreign users 
consumer algorithm provider section discuss simple functional version consumer algorithm 
consumer runs threads requester listener remote executor 
requester responsibility broadcast client requests receives messages 
message message sent consumer listener thread starts waiting responses 
receives messages sent peer informing resources available client arrive 
instance remote executor thread illustrated algorithm responsible sending set tasks provider waiting responses updating balance provider local peer 
quanti cation shown line labeled may di er peer peer 
examples performed may vary simply accounting sent provider sophisticated ourgrid approach easily assemble grids equitable resource sharing data true chosen null local users requests prioritized community length rank repeat actual rank actual chosen actual chosen null rank length local user request satis ed chosen null lenght rank repeat actual rank actual chosen actual chosen chosen null rank length allocate resource chosen task chosen null send chosen timeout null foreach task execute tasks chosen remove chosen remove chosen algorithm provider allocator thread algorithm mechanisms sending micro benchmark test resource performance collect cpu time consumed calculating favor cost function :10.1.1.36.5271
possibility estimate task size asking user information assigning cost size task execution 
data provider send provider lenght false results results foreach task provider false usage results provider provider usage algorithm consumer remote executor thread algorithm provider balance updated line labeled 
note usage added provider balance provider executor deducted 
evaluation section show preliminary results simulations analytical evaluation ourgrid system 
note due decentralized autonomous nature characterizing behavior ourgrid community quite challenging 
initial moment base analysis simpli ed version ourgrid called 
designed capture key features ourgrid system wide behavior network favors contention nite resources 
simpli cation consists grouping resource consumption turns 
turn peer provider consumer 
peer consumer tries consume available resources 
peer provider tries allocate resources owns current turn consumers 
short repeated game captures key features ourgrid allows shed light system wide behavior 
system model comprised community peers represented set fp pn peer owns number resources 
resources identical amounts peer may di erent 
peer states provider consumer 
provider state able provide local resources consumer state sends request resources community 
consider peer consumer state consumes local resources provide resources community 
requests sent consumers equal requesting resources provided 
peer tuple fid state ranking 
id eld represents peer identi cation peers control favor balance 
stated represents amount resources state represents peer actual state assuming provider consumer values 
ranking list pairs peer id balance representing known peers ranking 
pair peer id represents known peer balance credit debit associated peer 
unknown peers consider balance 
eld probability provider turn game 
ourgrid approach easily assemble grids equitable resource sharing element tuple de nes peer resource allocation behavior 
instances implemented 
allocates provider resources consumer greatest balance value ties broken randomly 
allocates peer resources proportionally requesting peers positive balance values 
peers positive balance values allocates zero balance values requesting peer nonnegative balance value allocates proportionally requesting peers 
model time line divided turns 
rst action peers turn accordingly choose state turn consumer provider 
peers currently consumer state send request community 
requests arrive peers instantaneously asking resources peer owns 
objective studying system deals con icting requests consumers ask maximum set resources 
receiving request provider chooses resources allocate consumers allocating resources 
allocations current turn 
turn peer updates ranking perfect information resources provided consumed turn 
scenarios verify system behavior varied parameters number peers simulated communities peers peers strategies regarding simulated scenarios peers combinations strategies peers 
peer probability provider turn simulated peers having probability provider state 
simulated heterogeneous scenario peer probability provider uniform distribution interval 
considered peers probability provider believe desire consuming primary motivation site join ourgrid community peer joint provider 
amount resources owned peer peers amount resources uniform distribution interval 
considered size typical laboratory encapsulated ourgrid peer 
combinations parameters gave simulation scenarios 
implemented model scenarios simulation toolkit metrics participation ourgrid community voluntary designed ourgrid promote equity demand greater er resources resources obtained grid equivalent resources donated grid ii prioritize peers helped community sense donated consumed 
gauge equity favor ratio fr prioritization resource gain rg 
available www dcs ed ac uk home favor ratio fr peer turn de ned ratio accumulated amount resources gained grid note excludes local resources consumed accumulated amount resources donated grid 
precisely peer turns gained resources grid donated grid fr fr represents relation amount resources peer gained resources donated 
fr peer received grid amount resources equal donated 
fr denotes equity 
resource gain rg peer turn obtained dividing accumulated amount resources local grid accumulated amount local resources 
local resources peer consumed turns total amount resources obtained grid turns rg rg measures speed delivered grid grid resources helped peer comparison local resources 
note rg represents resources obtained peer requested resources peer asks grid resources consuming local resources 
interpret rg quanti cation peer prioritized community 
verify equity system wide behavior expect observe situations resource contention fr peers want verify peers donated community really prioritized 
gauge rg expect greater peers greatest di erences donated consumed community 
due considerations model easily draw relation rg fr consider peer amount resources owns number turns executed local resources consumed amount resources donated community resources went idle consumers turns provider state probability peer provider turn 
denote total amount resources peer available turns 
de nitions fr rg derive rg relation useful obtained fact total amount resources available system sum resources obtained grid local consumed left idle peers :10.1.1.36.5271
resources donated consumed left idle resources lost created state resource conservation law follows results discussion model scenarios instantiated model metrics measure characteristics shall show results obtained far 
divide discussion scenarios peers providing probability ourgrid approach easily assemble grids equitable resource sharing uniform distribution 
examine number peers providing probabilities impacted rg fr values consequently network favors behavior ourgrid resource contention 
results communities peers equal providing probabilities scenarios equal peers fr rg converged 
fr converged rg converged di erent values depending scenarios parameters 
peers competing resources peer gains back amount resources donated community explains convergence fr shows happening despite variance amount resources owned peer 
lines peer greatest peer mean value peer smaller scenario 
grid donated turns greatest site mean sized site smallest site fig 

fr peers di erent resource quantities peer community regarding rg fr equation obtain rg facilitate understanding divide analysis rg behavior situations scenarios idle resources scenarios idle resources 
analytically analyzing scenarios observe scenario happens consumer round 
probability peers pn provider state ap number turns resources community idle scenario ap scenarios ones peers providing probabilities 
scenarios fr nd equation rg 
means rg peers greater peers greater di erence donated consumed fact rg shows peer contribute community prioritized 
scenarios peers rg example community peers rg peers converged rg 
seen peer community 
scenarios fq rg converged 
observed di erences metrics behavior fr took greater number turns converge ii rg converged value smaller scenarios 
behavior di erence happened peer took longer time rank peers happened turns resource consumption 
behavior di erence explained equation 
peer xed total local turns scenario results mean mean deviation mean deviation fig :10.1.1.36.5271

rg peer community idle resources resources consumed 
means consequently rg decreases increases 
short total amount resources consumed peers total amount resources available donated idle rg smaller scenarios resources available consumed 
regarding strategy peers allocate resources varying strategy peers ect signi cantly metrics behavior 
number peers community hand naturally ects number turns needed metrics converge 
number turns needed metrics converge bigger size community grows 
results communities peers di erent providing probabilities observing ects simulation parameters community probability consuming resources discuss variation probability ects de ned metrics 
simulations peer communities fr converge 
shows fr peers community number peers providing chance peer uniform distribution interval 
seen peer donated community providing chance smaller peers obtained greater fr 
easily explained take look values rg peers 
rg behavior peers shown :10.1.1.36.5271
note peer greatest rg explodes scale rst request turns providing gives vertical solid line graph 
shows peer prioritized resources community :10.1.1.36.5271
consequently peer provided resources peer greatest rg 
asks resources manages get access resources peer provided community 
peer lesser providing chance obtained resources grid got greater fr requested resources donated just little bit 
providing probabilities static peers greatest probabilities provided didn asked resources fr raise 
fr converge competition scenarios turns peers contributed small amounts resources community requested resources 
note competition resources observe fairness system 
observing rg observe prioritization done peers contributed community asked resources 
ourgrid approach easily assemble grids equitable resource sharing grid donated turns scenario results providing chance providing chance providing chance fig :10.1.1.36.5271

fr peers peer community di erent providing probabilities total local turns providing chance providing chance providing chance fig :10.1.1.36.5271
:10.1.1.36.5271
rg peers peer community di erent providing probabilities interesting behavior observed growth community size fr converges 
happens peer peers communities simulations 
histogram fr peer community turn show 
convergence fr happens due greatest concurrence greater communities 
peers turns peers small request resources community 
peers manage obtain fr high happened peers scenarios 
may happen peers donate little suciently large number turns 
objectives resources allocated peer contributed signi cantly community 
fr nd rg shows peers contributed highest prioritized 
shall allocation strategies show impact simulations results 
long run peers allocate resources highest ranked peer perform peers allocate resources proportionally balances requesters 
opted show histogram due great number peers simulation 
fq grid donated scenario results line fig :10.1.1.36.5271

fr histogram peer community di erent allocation strategies turn directions steps ourgrid development simulating real grid users workloads peers ii studying impact malicious peers system iii actual implementation ourgrid 
evaluated key characteristics network favors simulating realistic scenarios needed understand impact grid environment model 
peer important aspects ourgrid peer consumer shall want assure provider executed task correctly possible exploit community unfair accounting 
speci cally malicious peers problem deal need consumer assure correct task execution unreliable providers plan study replication order discover providers consumer trust insertion application speci veri cation techniques described 
cope objective making community tolerant peers unfair accounting marginalizing aim study autonomous accounting replication determine consumer shall trust unknown providers 
plan start ourgrid implementation extension mygrid done 
ourgrid able serve mygrid resource user grid initially obtain access resources existent mygrid grid machine interface 
grid machine interface abstraction provides access di erent kinds grid resources globus gram mygrid useragent unix machines ssh allow ourgrid interoperate existing grid middleware 
interoperability important take advantage existing infrastructure ease ourgrid adoption community users 
design ourgrid system aims allow users bot applications easily obtain access computational resources dynamically forming demand large scale grid 
opting simplicity services delivers ourgrid able deployed immediately satisfying current need bot users community helping researchers better understanding grids really production knowledge help guide research directions 
ourgrid network favors site idle resources favor expecting prioritized asks favors community 
design aims provide prioritization mygrid open source available dsc edu br mygrid ourgrid approach easily assemble grids equitable resource sharing completely decentralized manner 
decentralization crucial keep system simple dependent centralized services hard deploy scale trust 
preliminary results analysis simulation design solve con ict resources decentralized community shows approach promising 
expect evolve design solution due simplicity able satisfy need real grid users today 
acknowledgments hewlett packard cnpq capes nancial support :10.1.1.36.5271
crucial progress 
santos neto costa jacques insightful discussions contributed 

project jxta 
www jxta org 

abramson buyya giddy computational economy grid computing implementation nimrod resource broker 
generation computer systems fgcs journal :10.1.1.36.5271

abramson giddy high performance parametric modeling nimrod killer application global grid 
proceedings ipdps ieee cs press pp 
:10.1.1.36.5271

adar huberman free riding gnutella 
monday 
www 
dk 

babaoglu marzullo distributed systems 
addison wesley ch 
consistent global states distributed systems fundamental concepts mechanisms 

buyya gridbank grid accounting services architecture distributed systems sharing integration 
th australasian computer science conference submitted 

berman wolski schopf shao application level scheduling distributed heterogeneous networks 
supercomputing 
:10.1.1.36.5271
buyya abramson giddy economy driven resource management architecture computational power grids 
international conference parallel distributed processing techniques applications 

buyya compute power market market oriented grid 
ieee acm international symposium cluster computing grid ccgrid beijing china ieee computer society press 

casanova hayes yang algorithms software schedule deploy independent tasks grids environments 
workshop distributed computing metacomputing resource globalization 

casanova berman heuristics scheduling parameter sweep applications grid environments 
proceedings th heterogeneous computing workshop cancun mexico may ieee computer press pp 


cirne marzullo computational op gathering clusters 
pps spdp symposium 

cirne marzullo open grid user centric approach grid computing 
th symposium computer architecture high performance computing 
available dsc br resume html publications 

cirne costa santos neto da silva running bag tasks applications computational grids mygrid approach 
submitted publication 
available dsc br resume html publications 

czajkowski foster karonis kesselman martin smith tuecke resource management architecture metacomputing systems 
ipps spdp workshop job scheduling strategies parallel processing pp :10.1.1.36.5271
:10.1.1.36.5271

livny van dantzig pruyne worldwide load sharing workstation clusters 
generation computer systems 

foster anatomy grid enabling scalable virtual organizations 
lecture notes computer science 
:10.1.1.36.5271
foster kesselman globus project status report 
ipps spdp heterogeneous computing workshop pp :10.1.1.36.5271
:10.1.1.36.5271

frey tannenbaum foster livny tuecke condor computation management agent multi institutional grids 
cluster computing 

mironov distributed computations 
lecture notes computer science 

howell mcnab discrete event simulation package java applications computer systems modelling 
procedings international conference web modelling simulation computer simulation ed :10.1.1.36.5271

cirne trading cycles information replication schedule bag tasks applications computational grids 
submitted publication 
available dsc br resume html publications 

ripeanu foster mapping gnutella network macroscopic properties large scale peer peer systems 
international workshop peer peer systems iptps 

santos neto fonseca parallel visualization optical pulse optical ber 
proceedings annual meeting division computational physics boston ma usa 

cirne frey berman wolski su kesselman young combining workstations supercomputers support grid applications parallel tomography experience 
proceedings hcw heterogeneous computing workshop 

smith shrivastava system fault tolerant execution data compute intensive programs network workstations 
lecture notes computer science vol 
ieee press 

stiles monte carlo simulation transmitter release general simulator cellular physiological processes 
computational neuroscience :10.1.1.36.5271
:10.1.1.36.5271
thain tannenbaum livny grid computing making global infrastructure reality 
wiley published ch 
condor grid 
available grid org 

wolski plank bryan analyzing market resource allocation strategies computational grid 
international journal high performance computing applications 
