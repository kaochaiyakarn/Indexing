virtual mobile nodes mobile ad hoc networks extended dolev seth gilbert nancy lynch elad schiller alex shvartsman jennifer welch dept computer science ben gurion dolev schiller cs bgu ac il mit csail lynch theory lcs mit edu dept computer science eng connecticut alex theory lcs mit edu dept computer science texas university welch cs tamu edu 
significant challenges introduced mobile networks coping unpredictable motion unreliable behavior mobile nodes 
define virtual mobile node abstraction consists robust virtual nodes predictable reliable 
mobile point emulator new algorithm implements virtual mobile node abstraction 
algorithm replicates virtual node constantly changing set real nodes modifying set replicas real nodes move path virtual node 
show mobile point emulator correctly implements virtual mobile node robust long virtual node travels populated areas network 
virtual mobile node abstraction significantly simplifies design efficient algorithms highly dynamic mobile ad hoc networks 
devising algorithms mobile networks hard 
virtual mobile node abstraction process easier 
key challenge mobile networks coping completely unpredictable motion nodes 
complication unavoidable defining feature mobile network nodes fact move 
main difficulty unpredictable availability nodes continually join leave system nodes may fail recover turned user may choose sleep save power 
mobile nodes reliable motion predictable task designing algorithms mobile networks significantly simplified 
supported part nsf ccr itr cs afosr usaf afrl award fa darpa ntt mit texas advanced research program ibm faculty award israeli ministry defense ministry trade industry rita chair 
part fourth authors done visits mit texas mobile nodes moved programmable way algorithms take advantage motion performing efficiently static networks 
idea illustrated defines notion compulsory protocol requires subset mobile nodes move pre specified manner 
efficient compulsory protocol leader election 
routing protocols li provide evidence compulsory protocols simple efficient 
alas users mobile devices amenable instructions devices may travel 
may difficult ensure mobile nodes move desired especially highly dynamic systems nodes may fail diverted prescribed path 
objectives retain effectiveness compulsory protocols achieve imposing requirements motion nodes 
contributions introduce virtual mobile node vmn abstraction show design distributed algorithms mobile ad hoc networks 
develop algorithm mobile point emulator implements vmn abstraction show correct efficient 
virtual mobile nodes 
propose executing algorithms virtual mobile nodes nodes move predetermined predictable manner clients real mobile nodes move unpredictable manner 
motion vmn determined advance known programs executing mobile nodes 
example vmn may traverse plane regular pattern may perform pseudorandom walk 
motion virtual nodes may completely uncorrelated motion real nodes real nodes moving direction virtual nodes may travel opposite direction 
consider example application monitor traffic highway cars driving direction vmn move opposite direction notifying oncoming cars traffic ahead 
virtual node prone crash reboot failures 
long virtual node travels dense areas network virtual node fail 
vmn moves empty spot mobile nodes act replicas failure may occur 
vmn recover initial state dense area 
virtual nodes clients communicate local communication service long distance communication required 
implementing virtual mobile nodes 
mobile point emulator new algorithm implements robust 
main idea algorithm allow real nodes traveling near location vmn assist emulating vmn 
order achieve robustness algorithm replicates state virtual node number real mobile nodes 
execution proceeds algorithm continually modifies set replicas remain near virtual node 
replicated state machine approach augmented support joins leaves recovery maintain consistency replicas 
related idea executing algorithms virtual mobile nodes inspired development compulsory protocols techniques mobile point emulator developed part algorithm defines focal point abstraction geographic regions network focal points simulate atomic objects 
virtual mobile node abstraction differs focal point abstraction main ways 
earlier focal points static limited fixed predetermined locations 
implement virtual mobile nodes move traveling arbitrary predetermined path 
second focal point abstraction includes atomic objects read write registers 
virtual mobile nodes arbitrary automata 
third focal points recover fail vmn abstraction supports recovery 
fourth focal point abstraction uses geocast service relatively expensive non local service communicate clients 
vmn abstraction virtual nodes clients communicate local communication 
generalizes abstraction beal 
virtual entity travels static mobile sensor network 
carry state implements atomic objects arbitrary automata 
nath niculescu takes advantage precalculated paths forward messages dense networks 
messages routed trajectories nodes path forward messages 
similarly prior geocast example attempts route data geographically :10.1.1.41.8709
ways strategies ad hoc attempts emulate kind traveling node 
provide general framework take advantage predictably dense areas network perform arbitrary computation 
significant focus prior papers determining trajectories problem address 
document structure describe underlying system model section vmn abstraction section 
mobile point emulator implementation vmn abstraction section sketch proof correctness section 
section briefly discuss simple algorithms execute virtual nodes 
section discuss open problems 
details see 
basic system model underlying system model consists real mobile nodes moving bounded region dimensional plane 
mobile node assigned unique identifier finite set real mobile nodes may join leave system may fail time 
treat leaves failures 
real mobile nodes move continuous path speed bounded constant vmax 
component environment maintains current location mobile node 
maintains current real time 
mobile node receives geo update updates notifying current time current location 
assume exact knowledge time location fact algorithms easily modified tolerate approximately correct information 
outdoor setting implemented global positioning system gps receiver 
indoor environment cricket device may effective 
static sensor network gps devices may expensive synthetic coordinates may sufficient 
assume real mobile node receives update units time constant 
localcast communication service mobile nodes communicate local broadcast service localcast parameterized radius node performs send localcast service delivers message rcv mobile node radius sender 
assume message delivered time constant 
service properties reliable delivery assume mobile node performs send action 
mobile node distance location message sent remains distance location time fail rcv event occurs time delivering message node 
ii integrity localcast message mobile node rcv event occurs send event precedes mobile node intuitively sending message service thought making single wireless broadcast small number retries necessary avoid collisions 
believe small service reasonable simplistic model sending receiving messages wireless broadcast 
formally assume localcast service sets send receive ports mobile node contains message buffers 
specifically assume real nodes support localcast service constant call rmn localcast service 
rmn localcast service sets ports mobile node 
service contains sets message buffers messages mpe messages temporarily hold messages destined node virtual mobile nodes vmn abstraction consists client mobile nodes virtual mobile nodes referred virtual nodes communicate localcast service 
term mobile node refers send rcv send rcv send rcv vmn localcast vmn messages messages messages messages send rcv fig 
components vmn abstraction 
vmn communicates clients vmn localcast communication service 
node abstraction client vmn 
mobile node arbitrary automaton tasks fairness mobile node prone crash reboot failures node may fail recover 
node recovers begins initial state 
mobile node receives frequent updates regarding current time current location 
key difference clients virtual nodes move predictable predetermined path chosen advance algorithm specified 
clients hand travel arbitrary path 
virtual nodes robust 
path vmn goes sparse region network vmn fails interval time soon dense region recovers 
rest assume single vmn communicating clients depicted 
results extend naturally model containing arbitrary number virtual nodes 
formally vmn main state components vmn val represents state vmn automaton vmn buffer buffer holds outgoing messages ready sent 
clients virtual nodes communicate sending messages local cast service defined section recall localcast service parameterized radius vmn abstraction implements localcast service fixed constant call vmn localcast 
call message buffers vmn localcast service messages holds messages destined node identifier vmn refer messages message buffer vmn messages 
expect simple extension support timed hybrid virtual nodes just automata 
formally restrict automata possible input actions geo update rcv possible output action send 
buffer vmn val send rcv send rcv send rcv rmn localcast messages messages messages mpe messages mpe messages mpe messages mpe send mpe rcv mpe send mpe rcv mpe send mpe rcv mpe val mpe val mpe val tobcast tobcast rcv tobcast tobcast rcv tobcast tobcast rcv tobcast buffer incoming incoming incoming fig 
components vmn abstraction implementation 
clients communicate mpe components rmn localcast service mpe maintains consistent replicas tobcast service 
implementing vmn abstraction section implementation vmn abstraction 
recall vmn abstraction consists components virtual nodes clients vmn localcast service 
implementation consists mobile point emulator mpe tobcast service implement vmn vmn localcast service 
client automata automata execute virtual node provided application developer discussion necessary 
formally mpe consists automaton mpe real node relationship components depicted 
simple vmn implementation simplest way implement vmn mobile agent 
agent dynamic process jumps real node moving direction specified vmn path 
agent ride host near specified location vmn 
strategy past implement various services group communication see 
generalized support arbitrary automata 
simple algorithm meets goals vmn implementation movement virtual node predictable 
host agent may fail vmn robust 
applications simple routing may sufficient 
applications lack robustness undesirable 
replication solve problem 
mobile points define mobile point circular region radius rmp moves path vmn time center mobile point coincides location vmn time 
vmn failed mobile point vmn conceptually continue prespecified path 
real node resides mobile point replicates state virtual node 
totally ordered broadcast state vmn replicated multiple real nodes mobile point algorithm maintain consistency replicas 
rmn localcast communication service synchronized clocks implement totally ordered broadcast service call bcast region defined mobile point 
standard technique implement totally ordered broadcast 
timestamp affixed message defining total order 
node sends single message real time ties broken node identifiers 
delivering message mobile node waits time elapsed message sent ensuring earlier messages received 
see pseudocode input tobcast message input rcv internal message output tobcast rcv message output send internal message state clock current real time location current location incoming initially outgoing initially input tobcast effect outgoing outgoing clock location output send precondition outgoing effect outgoing outgoing input rcv effect incoming incoming output tobcast rcv precondition incoming clock incoming effect incoming incoming trajectories satisfies time location arbitrary constant incoming outgoing stops incoming time outgoing fig 
tobcast service implementation 
tobcast service takes place service 
mp location location continuously updated defining location vmn status idle joining listening active initially active mp location idle val states holds state simulated automaton initially start joins set ids answered join requests initially join id tuple time node id unique id join request initially pending actions queue actions waiting simulated initially completed actions queue actions simulated initially tobcast queue outgoing tobcast messages initially local queue outgoing client messages initially clock current time initially continuously updated location current location continuously updated fig 
mpe state node vmn ioa sig states start formalism implements totally ordered broadcast service call tobcast 
theorem 
tobcast service guarantees messages delivered order sent real time real node mobile point sends message real node mobile point resides mobile point duration broadcast receives message 
mobile point emulator mobile point emulator replicated state machine technique similar originally augmented support joins leaves recovery 
mpe replicates state vmn node mobile point region 
uses total ordering messages ensure replicas updated consistently 
state mpe signature mpe 
algorithm 
line numbers section refer 
mpe state 
status mobile point emulator node transitions status value idle indicating real node mobile point joining listening indicating real node process joining vmn active indicating real node participating vmn emulation 
node active mobile point maintains replicated copy state virtual node val 
mpe maintains queue pending actions processed order 
tobcast service ensure mpe processes pending actions order 
completed actions answered joins store information actions processed preventing message processed twice 
join id join protocol 
mp location variable maintains current location center mobile point 
may continually changing predetermined function time 
location variable maintains current location real node mpe 
clock maintains current real time 
mpe transitions 
mpe modifies replicated state val real node receives bcast message indicating particular action performed 
active nodes process tobcast messages order nodes modify state way maintaining consistent replicas 
active node receives signature input rcv client message tobcast rcv tobcast message geo update location reset output send client message tobcast tobcast message internal join init action act act sig simulate action act act sig fig 
mobile point emulator signature real node vmn ioa sig states start message destined vmn occurs immediately resends replicas tobcast service lines 
tobcast service delivers message node modifies replica performing vmn rcv message lines lines 
vmn chooses initiate internal output action 
case active node determines certain action enabled broadcasts message replicas lines 
previous case tobcast service delivers message node modifies state replica performing specified vmn action lines followed lines 
cases causes vmn send message line 
joining mobile point 
real node perimeter defined mobile point initiates join protocol lines real node outside mobile point executes leave protocol states sets status idle lines 
maximum speed vmn effectively determined speed join protocol speed real nodes mobile point move slowly new nodes enter join mobile point old nodes leave 
join protocol node begins broadcasts join req requesting copy current state line 
node receives tobcast join request enters listening state lines 
indicates node monitor messages system 
particular saves messages process pending actions 
active node receives join request sends join acknowledgment join ack lines 
acknowledgment includes copy replica virtual node 
receives join acknowledgment copies replicated state lines begins process pending actions 
recovery 
mobile point emulator simulates quite robust fail enter region network 
soon nodes leave mobile point virtual node loses state 
mobile point emulator contains recovery mechanism restarts virtual node case 
real node enters mobile point communicate active nodes choose broadcast reset message lines 
choose vmn may recover 
node receives reset message state lines 
particular node discovers mobile point failed receives reset message restarts mobile point 
vmn localcast client sends message vmn vmn localcast service steps occur client uses rmn localcast service send message real node vmn second real node vmn rebroadcasts message tobcast service node mobile point processes message vmn receives message 
underlying real nodes deliver messages time vmn localcast guarantees messages delivered time takes time real node receive message client additional time tobcast service message 
process occurs partially reverse vmn sends message client real node vmn broadcasts intent vmn send message tobcast service second real nodes vmn process message point vmn buffered outgoing message third real node uses rmn localcast service send message client 
recall vmn localcast service range rv mn rmn localcast service range 
order algorithm correct assume rv mn vmax reasons extra broadcast range necessary 
real node distance rv mn center able send message client distance rv mn center vmn radius rv mn necessary 
second real node receives updates location time units real node may additional vmax distance outside mobile point detecting longer part vmn emulation 
vmn performance step vmn automata requires tobcast message sent takes time delay incurred 
mobile input rcv effect tobcast tobcast simulate rcv output send precondition local effect local local internal init action act precondition status active mp location location val act effect temp oid clock tobcast tobcast simulate act temp oid internal join precondition mp location location status idle effect join id clock status joining tobcast tobcast join req join id input reset effect tobcast tobcast reset input geo update effect location clock val val geo update mp location mp location location status idle status idle val start pending actions internal simulate action act precondition status active mp location location head pending actions simulate act oid effect dequeue pending actions simulate act oid completed actions continue val act continue val val act completed actions completed actions simulate act oid act send send input tobcast rcv param oid effect simulate status listening active continue enqueue pending actions simulate param oid join req status joining oid join id status listening status active oid answered joins continue mp location location tobcast join ack val completed actions oid join ack answered joins answered joins oid status listening oid join id status active val completed actions param reset status active pending actions output tobcast precondition tobcast effect tobcast tobcast fig 
automaton mpe running node implementing vmn executing ioa sig states start point emulator ensures program executing vmn slowed factor 
theorem 
mobile point emulator tobcast service trivial client implementation correctly implement vmn abstraction 
formally vmn model implementation 
timed traces timed traces correctness mobile point emulator section sketch proof mobile point emulator correctly implements vmn abstraction 
demonstrate forward simulation relation implementation described section vmn abstraction described section implies correctness algorithm 
details see 
simulation relation consists main conditions 
conditions relate messages rmn localcast service messages vmn localcast service 
condition relates incoming messages message rmn localcast mpe messages waiting delivered mobile node message waiting vmn localcast vmn messages delivered vmn 
condition relates outgoing messages message rmn localcast messages sent mobile point automaton node message vmn localcast messages 
condition relates replicated state mobile point emulator state vmn active mobile nodes completed join protocol start state represented mpe val process pending actions mpe pending actions order stored queue messages waiting tobcast queue tobcast outgoing order stored queue resulting value equivalent state vmn vmn val 
condition show join protocol works state contained join acknowledgment message stored system start state represented process messages mpe pending actions queue sent associated join request resulting value equal state vmn vmn val 
condition ensures implementation initiates send vmn perform send message indicating send occur tobcast queue tobcast messages waiting performed mpe pending actions message vmn buffer 
claim mobile point emulator correctly implements vmn abstraction service built vmn abstraction runs correctly mobile point emulator timed traces system capture externally visible behavior times external visible events occur 
proof theorem sketch 
initial state conditions described hold message queues buffers empty mpe val component replicated automata set initial state vmn val component 
proceed induction examining possible actions implementation determining suitable sequence actions model 
example assume client attempts send message vmn 
implementation results message added communication service message queues model results message added high level communication service vmn message queue preserving condition 
interesting case occurs mobile node broadcasts message tobcast service indicating transition vmn automaton occur 
low level implementation message added tobcast messages nodes order maintain condition necessary immediately perform required transition vmn updating vmn val 
required transition output action vmn sends message placing vmn buffer maintaining condition 
omit remaining cases 
conditions maintained time passes node far away receive localcast message left focal point 
conclude conditions forward simulation relation 
algorithms virtual mobile nodes demonstrate utility new approach briefly discuss basic algorithms solve interesting problems simply efficiently 
details see 
consider problem routing messages 
simplest algorithm route message relies single virtual node traversing network collecting messages delivering 
possible adapt compulsory protocols yielding alternate message delivery services operate non compulsory framework 
routing message virtual node simpler current location virtual node known advance route messages directly predicted location virtual node 
virtual nodes collect sensor data traversing network 
maintaining complicated dynamic data structure sensor readings virtual node aggregate data collected process complex queries 
suggest may useful number common generic services 
group communication services implemented adapting strategy robust virtual node fragile token collect deliver group information 
atomic memory service constructed approach developed case data programmed travel network 
discussion concluding remarks new technique implementing algorithms mobile ad hoc networks 
general difficult devise algorithms chaotic unpredictable environments 
vmn abstraction task easier providing robust virtual nodes move predictable manner 
mobile point emulator new algorithm allows real mobile nodes emulate reliable virtual nodes location information basic powerful local communication service 
believe vmn abstraction low level algorithms similar mobile point emulator significantly simplify development applicationlevel algorithms mobile networks 
number limitations mobile point emulator 
depends powerful local communication service correctness algorithm depends reliability timeliness service 
assumes algorithm executing trusted environment remains open question consider security implications solution hostile environment 
mobile point emulator expensive algorithm requiring significant amounts communication power consumption 
engineering experimentation 
ways mobile point emulator optimized implementation purposes 
example temporary leader elected mobile point leader initiates transitions replica conflicting requests avoided power saved 
second example node leaves mobile point need wholly reset replica state mobile point join acknowledgment needs contain changes state 
interesting experiment real implementation determine extent algorithms optimized utility outweighs implementation overhead 
self stabilizing 
long term robustness vmn abstraction improved virtual nodes tolerate transient faults violation broadcast assumptions 
interesting open question mobile point emulator self stabilizing 
dynamic virtual mobile nodes 
assumed set paths fixed advance 
applications sufficient useful paths determined onthe fly 
example imagine vmn follow moving entity performing service entity tracking location entity 
dynamic paths help avoid areas mobile network improving robustness 
may useful generate virtual nodes dynamically example new vmn generated track entity enters certain geographical area 

beal 
persistent nodes reliable memory geographically local networks 
tech report aim mit 

beal 
robust amorphous hierarchy persistent nodes 
proc 
communication systems networks 

camp liu 
adaptive mesh protocol geocast routing 
journal parallel distributed computing special issue mobile ad hoc networking computing pp 


spirakis 
efficient communication strategy ad hoc mobile networks 
proc 
th international symp 
distributed computing 

dolev gilbert lynch schiller shvartsman welch 
virtual mobile nodes mobile adhoc networks 
tech report lcs tr mit 

dolev gilbert lynch shvartsman welch 
implementing atomic memory mobile ad hoc networks 
proceeding th international conference distributed computing 

dolev gilbert lynch shvartsman welch 
implementing atomic memory ad hoc networks 
tech report lcs tr mit 

dolev schiller welch 
random walk self stabilizing group communication ad hoc networks 
proc 
st ieee symp 
reliable distributed systems 

communications acm special section group communication systems volume 

spirakis tan 
fundamental control algorithms mobile networks 
proc 
st acm symp 
parallel algorithms architectures archive saint malo france 

lynch segala vaandrager 
theory timed automata 
tech report mit lcs tr mit 

keidar 
highly available paradigm consistent object replication 
master thesis hebrew university jerusalem 
url www cs huji ac il publications html 

keidar dolev 
efficient message ordering dynamic networks 
proc 
th annual acm symp 
principles distributed computing 

lamport 
time clocks ordering events distributed system 
communications acm 

li rus 
sending messages mobile users disconnected ad hoc wireless networks 
proc 
th mobicom 

lynch 
distributed algorithms 
morgan kaufman 

shrobe bachrach 
organizing global coordinate system local information ad hoc sensor network 
nd workshop information processing sensor networks 

nath niculescu 
routing curve 
acm sigcomm computer communication review 

imielinski 
geocast geographic addressing routing 
proc 
rd mobicom 

priyantha chakraborty balakrishnan 
cricket location support system 
proc 
th mobicom 
