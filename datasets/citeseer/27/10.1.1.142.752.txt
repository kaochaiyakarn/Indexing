pastry scalable decentralized object location routing large scale peer peer systems antony rowstron peter druschel microsoft research st george house street cambridge cb nh uk 
microsoft com rice university ms main street houston tx usa 
druschel cs rice edu 
presents design evaluation pastry scalable distributed object location routing substrate wide area peer peer applications 
pastry performs application level routing object location potentially large overlay network nodes connected internet 
support variety peer peer applications including global data storage data sharing group communication naming 
node pastry network unique identifier nodeid 
message key pastry node efficiently routes message node nodeid numerically closest key currently live pastry nodes 
pastry node keeps track immediate neighbors nodeid space notifies applications new node arrivals node failures recoveries 
pastry takes account network locality seeks minimize distance messages travel scalar proximity metric number ip routing hops 
pastry completely decentralized scalable self organizing automatically adapts arrival departure failure nodes 
experimental results obtained prototype implementation emulated network nodes confirm pastry scalability efficiency ability self organize adapt node failures network locality properties 
peer peer internet applications popularized file sharing applications napster gnutella freenet :10.1.1.10.4919:10.1.1.10.4919
attention focused copyright issues raised particular applications peerto peer systems interesting technical aspects decentralized control selforganization adaptation scalability 
peer peer systems characterized distributed systems nodes identical capabilities responsibilities communication symmetric 
appears proc 
th ifip acm international conference distributed systems platforms middleware 
heidelberg germany november 
done part visiting microsoft research cambridge uk 
currently projects aimed constructing peer peer applications understanding issues requirements applications systems :10.1.1.20.417:10.1.1.115.4299:10.1.1.10.4919:10.1.1.10.4919
key problems large scale peer peer applications provide efficient algorithms object location routing network 
presents pastry generic peer peer object location routing scheme self organizing overlay network nodes connected internet 
pastry completely decentralized fault resilient scalable reliable 
pastry route locality properties 
pastry intended general substrate construction variety peer topeer internet applications global file sharing file storage group communication naming systems 
application built top pastry date including global persistent storage utility called past scalable publish subscribe system called scribe :10.1.1.1.1674:10.1.1.1.1674:10.1.1.1.1674:10.1.1.110.5867:10.1.1.110.5867:10.1.1.110.5867:10.1.1.1.4196:10.1.1.1.4196
applications development 
pastry provides capability 
node pastry network unique numeric identifier nodeid 
message numeric key pastry node efficiently routes message node nodeid numerically closest key currently live pastry nodes 
expected number routing steps log number pastry nodes network 
pastry node route message takes application notified may perform application specific computations related message 
pastry takes account network locality seeks minimize distance messages travel scalar proximity metric number ip routing hops 
pastry node keeps track immediate neighbors nodeid space notifies applications new node arrivals node failures recoveries 
nodeids randomly assigned high probability set nodes adjacent nodeid diverse geography ownership jurisdiction applications leverage pastry route nodes numerically closest key 
heuristic ensures set nodes closest nodeids key message reach node near node message originates terms proximity metric 
applications capabilities different ways 
past instance uses fileid computed hash file name owner pastry key file 
replicas file stored pastry nodes nodeids numerically closest fileid 
file looked sending message pastry fileid key 
definition lookup guaranteed reach node stores file long nodes live 
follows message reach node near client nodes node delivers file consumes message 
pastry notification mechanisms allow past maintain replicas file nodes closest key despite node failure node arrivals local coordination nodes adjacent nodeids 
details past pastry :10.1.1.1.1674:10.1.1.1.1674:10.1.1.1.1674:10.1.1.110.5867:10.1.1.110.5867:10.1.1.110.5867
sample application scribe publish subscribe system list subscribers stored node nodeid numerically closest topicid topic topicid hash topic name 
node forms rendez vous point publishers subscribers 
subscribers send message pastry topicid key registration recorded node path 
publisher sends data rendez vous point pastry topicid key 
rendez vous point forwards data multicast tree formed reverse paths rendez vous point subscribers 
full details scribe pastry :10.1.1.1.4196:10.1.1.1.4196:10.1.1.1.4196
applications currently development built little effort top basic capability provided pastry 
rest organized follows 
section presents design pastry including description api 
experimental results prototype implementation pastry section 
related discussed section section concludes 
design pastry pastry system self organizing overlay network nodes node routes client requests interacts local instances applications 
computer connected internet runs pastry node software act pastry node subject application specific security policies 
node pastry peer peer overlay network assigned bit node identifier nodeid 
nodeid indicate node position circular nodeid space ranges nodeid assigned randomly node joins system 
assumed nodeids generated resulting set nodeids uniformly distributed bit nodeid space 
instance nodeids generated computing cryptographic hash node public key ip address 
result random assignment nodeids high probability nodes adjacent nodeids diverse geography ownership jurisdiction network attachment assuming network consisting nodes pastry route numerically closest node key steps normal operation configuration parameter typical value 
despite concurrent node failures eventual delivery guaranteed nodes adjacent nodeids fail simultaneously configuration parameter typical value 
pastry scheme 
purpose routing nodeids keys thought sequence digits base pastry routes messages node nodeid numerically closest key 
accomplished follows 
routing step node normally forwards message node nodeid shares key prefix digit bits longer prefix key shares node id node known message forwarded node nodeid shares prefix key long current node numerically closer key node id support routing procedure node maintains routing state describe 
pastry node state pastry node maintains routing table set leaf set 
description routing table 
node routing table organized leaf set routing table nodeid smaller larger neighborhood set fig 

state hypothetical pastry node nodeid 
numbers base 
top row routing table row zero 
shaded cell row routing table shows corresponding digit node nodeid 
nodeids entry split show common prefix digit rest nodeid 
associated ip addresses shown 
rows entries 
entries row routing table refer node nodeid shares node nodeid digits th digit possible values th digit node id entry routing table contains ip address potentially nodes nodeid appropriate prefix practice node chosen close node proximity metric 
show section choice provides locality properties 
node known suitable nodeid routing table entry left empty 
uniform distribution nodeids ensures population nodeid space average rows populated routing table 
choice involves trade size populated portion routing table approximately entries maximum number hops required route pair nodes 
value nodes routing table contains average entries expected number routing hops whilst nodes routing table contains average entries expected number routing hops 
neighborhood set contains nodeids ip addresses nodes closest proximity metric local node 
neighborhood set normally routing messages useful maintaining locality properties discussed section 
leaf set set nodes numerically closest larger nodeids nodes numerically closest smaller nodeids relative node nodeid 
leaf set message routing described 
typical values various tables pastry node initialized maintained subject section 
depicts state hypothetical pastry node nodeid base system uses bit nodeids value routing pastry routing procedure shown pseudo code form table 
procedure executed message key arrives node nodeid 
defining notation 
entry routing table column row th closest nodeid leaf set negative positive indices indicate nodeids smaller larger nodeid respectively 
value digit key 
length prefix shared digits 
range leaf set forward th 
minimal routing table forward rare case forward th 
table 
pseudo code pastry core routing algorithm 
message node checks see key falls range nodeids covered leaf set line 
message forwarded directly destination node node leaf set nodeid closest key possibly node line 
key covered leaf set routing table message forwarded node shares common prefix key digit lines 
certain cases possible appropriate entry routing table empty associated node reachable line case message forwarded node shares prefix key long local node numerically closer key node id node leaf set message arrived node numerically closest nodeid 
adjacent nodes leaf set failed simultaneously nodes live 
simple routing procedure converges step takes message node shares longer prefix key local node shares long prefix numerically closer key local node 
routing performance shown expected number routing steps steps assuming accurate routing tables node failures 
briefly consider cases routing procedure 
message forwarded routing table lines set nodes ids longer prefix match key reduced factor step means destination reached steps 
key range leaf set lines destination node hop away 
third case arises key covered leaf set hop away destination routing table entry 
assuming accurate routing tables node failures means node appropriate prefix exist lines 
likelihood case uniform distribution nodeids depends 
analysis shows probability case arises message transmission respectively 
happens additional routing step results high probability 
event simultaneous node failures number routing steps required may worst linear nodes updating state 
loose upper bound practice routing performance degrades gradually number node failures show experimentally section 
eventual message delivery guaranteed nodes consecutive nodeids fail simultaneously 
due expected diversity nodes adjacent nodeids reasonable choice probability failure low 
pastry api briefly outline pastry application programming interface api 
api slightly simplified clarity 
pastry exports operations nodeid credentials application causes local node join existing pastry network start new initialize relevant state return local node nodeid 
application specific credentials contain information needed authenticate local node 
application argument handle application object provides pastry node procedures invoke certain events happen message arrival 
route msg key causes pastry route message node nodeid numerically closest key live pastry nodes 
applications layered top pastry export operations deliver msg key called pastry message received local node nodeid numerically closest key live nodes 
forward msg key nextid called pastry just message forwarded node nodeid nextid 
application may change contents message value nextid 
setting nextid null terminates message local node 
called pastry change local node leaf set 
provides application opportunity adjust application specific invariants leaf set 
applications built top pastry simple api including past scribe applications development :10.1.1.1.1674:10.1.1.1.1674:10.1.1.1.1674:10.1.1.110.5867:10.1.1.110.5867:10.1.1.110.5867:10.1.1.1.4196:10.1.1.1.4196
self organization adaptation section describe pastry protocols handling arrival departure nodes pastry network 
arrival new node joins system 
aspects process pertaining locality properties routing tables discussed section 
node arrival new node arrives needs initialize state tables inform nodes presence 
assume new node knows initially nearby pastry node proximity metric part system 
node located automatically instance expanding ring ip multicast obtained system administrator outside channels 
assume new node nodeid 
assignment nodeids applicationspecific typically computed sha hash ip address public key 
node asks route special join message key equal 
message pastry routes join message existing node id numerically closest 
response receiving join request nodes nodes encountered path send state tables 
new node inspects information may request state additional nodes initializes state tables procedure describe 
informs nodes need aware arrival 
procedure ensures initializes state appropriate values state affected nodes updated 
node assumed proximity new node neighborhood set initialize neighborhood set 
closest existing nodeid leaf set basis leaf set 
consider routing table starting row zero 
consider general case nodeids share common prefix 
denote node row routing table level 
note entries row zero routing table independent node nodeid 
contains appropriate values levels routing table ids share common prefix 
appropriate values taken node encountered route 
see observe entries share prefix digit nodeid 
similarly obtains appropriate entries node node encountered route 
transmits copy resulting state nodes neighborhood set leaf set routing table 
nodes turn update state information received 
show stage new node able route receive messages participate pastry network 
total cost node join terms number messages exchanged constant pastry uses optimistic approach controlling concurrent node arrivals departures 
arrival departure node affects small number existing nodes system contention rare optimistic approach appropriate 
briefly node provides state information node attaches timestamp message 
adjusts state information eventually sends update message notifying arrival 
attaches original timestamp allows check state changed 
event state changed responds updated state restarts operation 
node departure nodes pastry network may fail depart warning 
section discuss pastry network handles node departures 
pastry node considered failed immediate neighbors nodeid space longer communicate node 
replace failed node leaf set neighbor nodeid space contacts live node largest index side failed node asks node leaf table 
instance failed requests leaf set received leaf set set partly overlaps node leaf set contains nodes nearby ids presently new nodes appropriate chosen insert verifying node alive contacting 
procedure guarantees node lazily repairs leaf set nodes adjacent nodeids failed simultaneously 
due diversity nodes adjacent nodeids failure modest values 
failure node appears routing table node detected node attempts contact failed node response 
explained section event normally delay routing message message forwarded node 
replacement entry preserve integrity routing table 
repair failed routing table entry node contacts node referred entry row asks node entry inthe event entries row pointer live node appropriate prefix node contacts entry casting wider net 
procedure highly eventually find appropriate node exists 
neighborhood set normally routing messages important keep current set plays important role exchanging information nearby nodes 
purpose node attempts contact member neighborhood set periodically see alive 
member respond ing node asks members neighborhood tables checks distance newly discovered nodes updates neighborhood set accordingly 
experimental results section demonstrate pastry effectiveness repairing node state node failures quantify cost repair terms number messages exchanged 
locality previous sections discussed pastry basic routing properties discussed performance terms expected number routing hops number messages exchanged part node join operation 
section focuses aspect pastry routing performance properties respect locality 
show route chosen message respect proximity metric 
pastry notion network proximity scalar proximity metric number ip routing hops geographic distance 
assumed application provides function allows pastry node determine distance node ip address 
node lower distance value assumed desirable 
application expected implements function depending choice proximity metric network services traceroute internet subnet maps appropriate caching approximation techniques minimize overhead 
discussion assume proximity space defined chosen proximity metric euclidean triangulation inequality holds distances pastry nodes 
assumption hold practice proximity metrics number ip routing hops internet 
triangulation inequality hold pastry basic routing affected locality properties pastry routes may suffer 
quantifying impact deviations subject ongoing 
describing previously described procedure node arrival augmented heuristic ensures routing table entries chosen provide locality properties 
locality routing table section described newly joining node initializes routing table 
recall newly joining node asks existing node route join message key 
message follows paths nodes eventually reaches node live node numerically closest nodeid 
node initialized routing table obtaining th row routing table th node encountered route 
property wish maintain routing table entries refer node near node proximity metric live nodes prefix appropriate entry 
assume property holds prior node joining system show maintains property node joins 
require node near proximity metric 
entries row zero routing table close close assume triangulation inequality holds proximity space follows entries relatively near 
desired property preserved 
likewise obtaining neighborhood set appropriate 
consider row routing table obtained node 
entries row near clear close 
intuitively appear take row routing table node preserve desired property entries close necessarily 
reality entries tend reasonably close 
recall entries successive row chosen exponentially decreasing set size 
expected distance row entries larger expected distance traveled node 
result reasonable choice argument applies successive level routing step depicted 
level level level level fig 

routing step distance versus distance representatives level experimental data 
circles th node route indicate average distance node representatives level note lies circle 
initialized state fashion routing table neighborhood set approximate desired locality property 
quality approximation improved avoid cascading errors eventually lead poor route locality 
purpose second stage requests state nodes routing table neighborhood set 
compares distance corresponding entries nodes routing tables neighborhood sets respectively updates state closer nodes finds 
neighborhood set contributes valuable information process maintains propagates information nearby nodes regardless nodeid prefix 
intuitively look illuminates incorporating state nodes mentioned routing neighborhood tables stage provides representatives 
circles show average distance entry node route corresponding rows routing table 
observe lies circle albeit center 
second stage obtains state entries discovered stage located average distance equal perimeter respective circle 
states include entries appropriate discovered stage due center location 
experimental results section show procedure maintains locality property routing table neighborhood sets high fidelity 
discuss locality pastry routing tables affects pastry routes 
route locality entries routing table pastry node chosen close node proximity metric nodes desired nodeid prefix 
result routing step message forwarded relatively close node nodeid shares longer common prefix numerically closer key local node 
step moves message closer destination nodeid space traveling possible distance proximity space 
local information pastry minimizes distance routing step sense global direction 
procedure clearly guarantee shortest path source destination chosen give rise relatively routes 
facts relevant statement 
message routed node node distance message subsequently routed node distance 
follows directly routing procedure assuming accurate routing tables 
second expected distance traveled messages successive routing step exponentially increasing 
see observe entry routing table row chosen set nodes size entries successive rows chosen exponentially decreasing number nodes 
random uniform distribution nodeids network means expected distance closest entry successive row exponentially increasing 
jointly facts imply guaranteed distance message source increases monotonically step message tends larger larger strides possibility returning node node encountered route distance routing step taken away node 
message go destination 
illustrates effect 
locating nearest nodes peer peer application built pastry replicate information pastry nodes numerically closest nodeids key pastry nodeid space 
past instance replicates files way ensure high availability despite node failures 
pastry naturally routes message key live node numerically closest nodeid ensuring message reaches nodes long live 
pastry locality properties route client numerically closest node message reaches node near client terms proximity metric numerically closest nodes 
useful applications past retrieving file nearby node minimizes client latency network load 
observe due random assignment nodeids nodes adjacent nodeids widely dispersed network 
important direct lookup query node located relatively near client 
level level level level level fig 

sample trajectory typical message pastry network experimental data 
message re enter circles representing distance routing steps away intermediate nodes 
message may partly turn back initial steps exponentially increasing distances traveled step cause move destination quickly 
recall pastry routes messages node nodeid closest key attempting travel smallest possible distance step 
numerically closest nodes key message tends reach node near client 
course process approximates routing nearest node 
firstly discussed pastry local routing decisions minimizing distance traveled step sense global direction 
secondly pastry routes primarily nodeid prefixes may nearby nodes different prefix key 
worst case replicas stored nodes nodeids differ key domain level zero 
result pastry route nearest remaining nodes 
pastry uses heuristic overcome prefix mismatch issue described 
heuristic estimating density nodeids nodeid space local information 
estimation heuristic detects message approaches set numerically closest nodes switches numerically nearest address routing locate nearest replica 
results section show pastry able locate nearest node nearest nodes queries 
arbitrary node failures network partitions assumed pastry nodes fail silently 
briefly discuss pastry network deal arbitrary nodes failures failed node continues responsive behaves incorrectly maliciously 
pastry routing scheme described far deterministic 
vulnerable malicious failed nodes route accept messages correctly forward 
repeated queries fail time normally take route 
applications arbitrary node failures tolerated routing randomized 
recall order avoid routing loops message forwarded node shares longer prefix destination shares prefix length current node numerically closer nodeid space current node 
choice multiple nodes satisfy criterion randomly 
practice probability distribution biased best choice ensure low average route delay 
event malicious failed node path query may repeated times client route chosen avoids bad node 
furthermore protocols node join node failure extended tolerate misbehaving nodes 
details scope 
challenge ip routing anomalies internet cause ip hosts unreachable certain ip hosts 
pastry routing tolerant anomalies pastry nodes considered live remain reachable overlay network long able communication immediate neighbors nodeid space 
pastry self organization protocol may cause creation multiple isolated pastry overlay networks periods ip routing failures 
pastry relies exclusively information exchange overlay network self organize isolated overlays may persist full ip connectivity resumes 
solution problem involves ip multicast 
pastry nodes periodically perform expanding ring multicast search pastry nodes vicinity 
isolated pastry overlays exists discovered eventually 
minimize cost procedure performed randomly infrequently pastry nodes limited range ip routing hops node search performed nearby pastry node 
added benefit results search improve quality routing tables 
experimental results section experimental results obtained prototype implementation pastry 
pastry node software implemented java 
able perform experiments large networks pastry nodes implemented network emulation environment permitting experiments pastry nodes 
experiments performed quad processor compaq alphaserver es mhz alpha cpus gbytes main memory running true unix version 
pastry node software implemented java executed compaq java sdk version compaq version 
experiments reported pastry nodes configured run single java vm 
largely transparent pastry implementation java runtime system automatically reduces communication pastry nodes local object invocations 
emulated network environment maintains distance information pastry nodes 
pastry node assigned location plane coordinates plane randomly assigned range 
nodes internet uni distributed euclidean space strong clustering nodes triangulation inequality doesn hold 
currently performing realistic network topology model taken :10.1.1.22.6538
early results indicate pastry locality related routing properties significantly affected change 
number pastry properties evaluated experimentally 
set results demonstrates basic performance pastry routing 
routing tables created pastry nodes evaluated section 
section evaluate pastry ability route nearest numerically closest nodes key 
properties pastry node failures considered 
routing performance experiment shows number routing hops function size pastry network 
vary number pastry nodes network trials pastry nodes selected random message routed pair pastry 
average number hops pastry log number nodes fig 

average number routing hops versus number pastry nodes lookups 
show average number routing hops taken function network size 
log shows value included comparison 
expected maximum number hops required route network containing nodes 
results show number route hops scale size network predicted 
shows distribution number routing hops taken network size nodes experiment 
results show maximum route length expected 
second experiment evaluated locality properties pastry routes 
compares relative distance message travels pastry proximity probability number hops fig 

probability versus number routing hops lookups 
metric fictitious routing scheme maintains complete routing tables 
distance traveled sum distances consecutive nodes encountered route emulated network 
fictitious routing scheme distance traveled simply distance source destination node 
results normalized distance traveled fictitious routing scheme 
goal experiment quantify cost terms distance traveled proximity space maintaining small routing tables pastry 
relative distance pastry complete routing table number nodes fig 

route distance versus number pastry nodes lookups 
number nodes varies pairs pastry nodes selected message routed pair 
shows results pastry fictitious scheme labeled complete routing tables 
results show pastry routes approximately longer 
considering routing tables pastry contain approximately entries result quite 
nodes pastry routing tables contain approximately entries compared case complete routing tables 
determined routing throughput messages second pastry node 
unoptimized java implementation handled messages second 
indicates routing procedure lightweight 
maintaining network shows quality routing tables respect locality property extent information exchange node join operation affects quality resulting routing tables vis vis locality 
experiment nodes join pastry network 
nodes joined routing tables examined 
parameters options gather information node joins 
sl hypothetical method joining node considers appropriate row node route node closest existing nodeid see section 
wt joining node fetches entire state node path fetch state resulting entries 
equivalent omitting second stage 
actual method pastry state fetched node appears tables stage 
number entries routing table empty sub optimal optimal sl wt sl wt sl wt sl wt level level level level fig 

quality routing tables locality nodes 
results shown 
levels show quality routing table entries method 
nodes levels fully populated explains missing entries shown 
optimal means best closest proximity metric node appeared routing table entry sub optimal means entry closest missing 
results show pastry method node integration highly effective initializing routing tables locality 
average entry level routing able best choice 
comparison sl wt shows information exchange node join operation comes dramatic cost routing table quality respect locality 
replica routing experiment examines pastry ability route closest nodes key 
particular experiment explores pastry ability locate nodes near client 
pastry network nodes times pastry node key chosen randomly message routed pastry node key 
numerically closest nodes key reached route recorded 
percentage lookups standard estimation perfect estimation standard estimation perfect estimation standard estimation perfect estimation sl wt fig 

number nodes closer client node discovered 
nodes message routes 
shows percentage lookups reached closest node proximity metric closer nodes second closest node closer node forth 
results shown different protocols initializing new node state estimation standard heuristic mentioned section idealized optimal version heuristic perfect estimation 
recall heuristic estimates nodeid space coverage nodes leaf sets estimate leaf sets coverage 
perfect estimation ensures estimate node leaf set coverage correct node 
heuristic standard node joining protocol pastry able locate closest node time top nodes time 
heuristic routing option figures increase respectively 
lesser routing table quality resulting sl wt methods node joining strong negative effect pastry ability locate nearby nodes expect 
heuristic approach approximately worse best possible results perfect estimation 
results show pastry effective locating node near client vast majority cases heuristic effective 
node failures experiment explores pastry behavior presence node failures 
node pastry network 
randomly selected nodes fail silently 
failures key chosen random pastry nodes randomly selected 
message routed nodes key repeated times lookups total 
initially node state repair facilities pastry disabled allows measure full impact failures pastry routing performance 
node state repair facilities enabled lookups performed pastry nodes key 
number entries routing table empty missing sub optimal optimal fail repair repair fail repair repair fail repair repair level level level fig 

quality routing tables node failures starting nodes 
shows average routing table quality nodes levels measured failures failures repair 
note missing entries shown separately sub optimal entries 
recall pastry lazily repairs routing tables entries 
result routing table entries lookups discovered repaired 
isolate effectiveness pastry repair procedure excluded table entries 
results show pastry recovers missing table entries quality entries respect locality fraction optimal entries approaches failures 
row zero average number best entries repair approximately prior failure 
seen results show actual distance suboptimal optimal entries small 
intuitive average distance row zero entries small 
note increase empty entries levels failures due reduction total number pastry nodes increases sparseness tables upper rows 
increase constitute reduction quality tables 
shows impact failures repairs route quality 
left bar shows average number hops failures middle bar shows average number hops failures tables repaired 
right bar shows average number hops repair 
data shows repairs stale routing table state causes significant deterioration route quality 
repair average number hops slightly higher failures 
average hops lookup failure failure routing table repair failure routing table repair fig 

number routing hops versus node failures lookups nodes failing 
measured average cost messages repairing tables node failure 
experiments total remote procedure calls needed average failed node repair relevant table entries 
related currently peer peer systems development 
prominent file sharing facilities gnutella freenet :10.1.1.10.4919
napster music exchange service provided original motivation peer peer systems pure peer peer system database centralized 
systems primarily intended large scale sharing data files reliable content location guaranteed necessary environment 
gnutella broadcast protocol limits system scalability incurs high bandwidth requirement 
gnutella freenet guaranteed find existing object 
pastry tapestry chord represent second generation peer peer routing location schemes inspired pioneering systems freenet gnutella :10.1.1.140.3129:10.1.1.105.3673
earlier guarantee definite answer query bounded number network hops retaining scalability freenet self organizing properties freenet gnutella 
pastry tapestry bear similarity plaxton routing landmark hierarchy :10.1.1.38.1850
approach routing address prefixes viewed generalization hypercube routing common schemes 
plaxton landmark approach fully selforganizing 
pastry tapestry differ approach achieving network locality supporting replication pastry appears complex 
chord protocol closely related pastry tapestry routing nodes share successively longer address prefixes destination chord forwards messages numerical difference destination address 
pastry tapestry chord explicit effort achieve network locality 
routes messages dimensional space node maintains routing table entries node reached routing hops 
pastry routing table grow network size number routing hops grows faster existing applications built top pastry include past scribe :10.1.1.1.1674:10.1.1.1.1674:10.1.1.1.1674:10.1.1.110.5867:10.1.1.110.5867:10.1.1.110.5867:10.1.1.1.4196:10.1.1.1.4196
peer peer applications built top generic routing location substrate pastry oceanstore tapestry cfs chord :10.1.1.115.4299
farsite uses conventional distributed directory service potentially built top system pastry 
pastry seen overlay network provides selforganizing routing location service 
example overlay network overcast system provides reliable single source multicast streams 
considerable routing general hypercube mesh routing parallel computers routing ad hoc networks example grid 
pastry assume existing infrastructure network layer emphasis self organization integration content location routing 
interest scalability pastry nodes local information traditional routing algorithms link state distance vector methods globally propagate information routes destination 
global information exchange limits scalability routing algorithms necessitating hierarchical routing architecture internet 
prior works consider issues replicating web content internet selecting nearest replica relative client query 
pastry provides general infrastructure aimed variety peer peer applications 
related area naming services largely orthogonal pastry content location routing 
lampson global naming system gns example scalable naming system relies hierarchy name servers directly corresponds structure name space 
cheriton mann describe scalable naming service 
attribute intentional naming systems directory services resolve set attributes describe properties object address object instance satisfies properties 
systems support far powerful queries pastry 
power comes expense scalability performance administrative overhead 
systems potentially built pastry 
presents evaluates pastry generic peer peer content location routing system self organizing overlay network nodes connected internet 
pastry completely decentralized fault resilient scalable reliably routes message live node nodeid numerically closest key 
pastry building block construction variety peer peer internet applications global file sharing file storage group communication naming systems 
pastry routes node overlay network log steps absence node failures maintains routing tables log entries 
pastry takes account locality routing messages 
results nodes emulated network confirm pastry efficient scales self organizing gracefully adapt node failures locality properties 
acknowledgments miguel castro anonymous reviewers useful comments feedback 
peter druschel microsoft research cambridge uk massachusetts institute technology support visits fall spring respectively compaq donating equipment 

napster 
www napster com 

gnutella protocol specification 
dss clip com pdf 

adjie winoto schwartz balakrishnan lilley 
design implementation intentional naming system 
proc 
sosp kiawah island sc dec 

amir peterson shaw 
seamlessly selecting best copy internet wide replicated web servers 
proc 
th symposium distributed computing greece sept 

bolosky douceur ely theimer 
feasibility serverless distributed file system deployed existing set desktop pcs 
proc 
sigmetrics santa clara ca 

bowman peterson 
univers attribute name server 
software practice experience apr 

cheriton mann 
decentralizing global naming service improved performance fault tolerance 
acm trans 
comput 
syst may 

clarke sandberg wiley hong 
freenet distributed anonymous information storage retrieval system 
workshop design issues anonymity unobservability pages july 
icsi berkeley ca usa 

dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
proc 
acm sosp banff canada oct 

dingledine freedman molnar 
free haven project distributed anonymous storage service 
proc 
workshop design issues anonymity unobservability berkeley ca july 

druschel rowstron 
past large scale persistent peer peer storage utility 
proc 
hotos viii schloss germany may 

jannotti gifford johnson kaashoek toole 
overcast reliable multicasting overlay network 
proc 
osdi san diego ca 

roberts ross 
performance evaluation redirection schemes content distribution networks 
proc 
th web caching workshop san diego ca mar 

ross 
replicated architecture domain name system 
proc 
ieee infocom tel aviv israel mar 

kubiatowicz bindel chen czerwinski eaton geels gummadi rhea weatherspoon weimer wells zhao 
oceanstore architecture persistent store 
proc 
asplos cambridge ma november 

lampson 
designing global name service 
proc 
fifth symposium principles distributed computing pages canada aug 

li jannotti couto karger morris 
scalable location service geographical ad hoc routing 
proc 
acm mobicom boston ma 

plaxton rajaraman richa 
accessing nearby copies replicated objects distributed environment 
theory computing systems 

ratnasamy francis handley karp shenker 
scalable network 
proc 
acm sigcomm san diego ca aug 

reynolds 
rfc technical overview directory services protocol mar 

rowstron druschel 
storage management caching past large scale persistent peer peer storage utility 
proc 
acm sosp banff canada oct 

rowstron 
kermarrec druschel castro 
scribe design large scale event notification infrastructure 
submitted publication 
june 
www research microsoft com scribe 

sheldon duda weiss gifford 
discover resource discovery system content routing 
proc 
rd international world wide web conference darmstadt germany 

stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm san diego ca aug 

tsuchiya 
landmark hierarchy new hierarchy routing large networks 
sigcomm stanford ca 

zegura calvert bhattacharjee 
model internetwork 
infocom san francisco ca 

zhao kubiatowicz joseph 
tapestry infrastructure wide area location routing 
technical report ucb csd berkeley april 
