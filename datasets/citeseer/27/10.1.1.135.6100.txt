splitstream high bandwidth multicast cooperative environments miguel castro peter druschel anne marie kermarrec nandi antony rowstron atul singh microsoft research thomson avenue cambridge cb fb uk 
rice university main street ms houston tx usa tree multicast systems relatively small number interior nodes carry load forwarding multicast messages 
works interior nodes dedicated infrastructure routers poses problem application level multicast peer peer systems 
splitstream addresses problem striping content forest interior node disjoint multicast trees distributes forwarding load participating peers 
example possible construct efficient splitstream forests peer contributes forwarding bandwidth receives 
furthermore appropriate content encodings splitstream highly robust failures node failure causes loss single stripe average 
design implementation splitstream show experimental results obtained internet testbed large scale network simulation 
results show splitstream distributes forwarding load peers accommodate peers different bandwidth capacities imposing low overhead forest construction maintenance 
categories subject descriptors computer communications networks distributed systems distributed applications computer communications networks network protocols applications routing protocols operating systems reliability faulttolerance operating systems performance general terms algorithms measurement performance reliability experimentation supported part nsf ani texas atp 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sosp october bolton landing new york usa 
copyright acm 
keywords peer peer application level multicast system multicast content distribution video streaming 
system application level multicast attractive alternative ip multicast :10.1.1.7.2854:10.1.1.12.7544:10.1.1.16.8178:10.1.1.20.299:10.1.1.17.7959:10.1.1.11.1973
relying multicast infrastructure network widely available participating hosts route distribute multicast messages unicast network services 
particularly concerned application level multicast peer peer cooperative environments peers contribute resources exchange service 
unfortunately conventional tree multicast inherently matched cooperative environment 
reason multicast tree burden duplicating forwarding multicast traffic carried small subset peers interior nodes tree 
majority peers leaf nodes contribute resources 
conflicts expectation peers share forwarding load 
problem aggravated high bandwidth applications video bulk file distribution peers may capacity availability required interior node conventional multicast tree 
splitstream addresses problems enabling efficient cooperative distribution high bandwidth content peer peer system 
key idea splitstream split content stripes multicast stripe separate tree 
peers join trees stripes wish receive specify upper bound number stripes willing forward 
challenge construct forest multicast trees interior node tree leaf node remaining trees bandwidth constraints specified nodes satisfied 
ensures forwarding load spread participating peers 
example nodes wish receive stripes willing forward stripes splitstream construct forest forwarding load evenly balanced nodes achieving low delay link stress system 
striping multiple trees increases resilience node failures 
splitstream offers improved robustness node failure sudden node departures systems exploit path diversity overlays 
split stream ensures vast majority nodes interior nodes tree 
failure single node causes temporary loss stripes average 
appropriate data encodings applications mask mitigate effects node failures affected tree repaired 
example applications erasure coding bulk data multiple description coding mdc streaming media 
key challenge design splitstream construct forest multicast trees distributes forwarding load subject bandwidth constraints participating nodes decentralized scalable efficient self organizing manner 
splitstream relies structured peer peer overlay construct maintain trees :10.1.1.140.3129:10.1.1.28.5987:10.1.1.105.3673
implemented splitstream prototype evaluated performance 
show experimental results obtained planetlab internet testbed large scale network simulator 
results show splitstream achieves goals 
rest organized follows 
section outlines splitstream approach detail 
brief description structured overlay section 
design splitstream section 
results experimental evaluation section 
section describes related section concludes 

splitstream approach section give detailed overview splitstream approach cooperative high bandwidth content distribution 
tree multicast multicast systems single tree participating peer interior node leaf node tree 
interior nodes carry burden forwarding multicast messages 
balanced tree fanout height number interior nodes number leaf nodes fraction leaf nodes increases example half peers leaves binary tree peers leaves tree fanout 
case forwarding load carried peers 
nodes equal inbound bandwidth internal nodes outbound bandwidth requirement times inbound bandwidth 
binary tree impractically deep circumstances outbound bandwidth required interior nodes twice inbound bandwidth 
deep trees practical fault prone introduce larger delays problem applications 
splitstream splitstream designed overcome inherently unbalanced forwarding load conventional tree multicast systems 
splitstream strives distribute forwarding load participating peers respects different capacity limits individual peers 
splitstream achieves splitting multicast stream multiple stripes separate multicast trees distribute stripe 
illustrates splitstream balances forwarding load participating peers 
simple example original content split stripes mul stripe source stripe simple example illustrating basic approach splitstream 
original content split stripes 
independent multicast tree constructed stripe peer interior node tree leaf 
separate trees 
simplicity assume original content bandwidth requirement stripe half bandwidth requirement original content 
peer source receives stripes inducing inbound bandwidth requirement shown peer internal node tree forwards stripe children yields outbound bandwidth general content split stripes 
participating peers may receive subset stripes controlling inbound bandwidth requirement increments similarly peers may control outbound bandwidth requirement increments limiting number children adopt 
splitstream accommodate nodes different bandwidths nodes unequal inbound outbound network capacities 
works bandwidth bottleneck communication nodes sender receiver 
assumption holds settings universally true 
bottleneck nodes may unable receive desired stripes 
plan extend splitstream address issue 
example nodes monitor packet arrival rate stripe 
detect incoming link stripe delivering expected bandwidth detach stripe tree search alternate parent 
applications splitstream provides generic infrastructure highbandwidth content distribution 
application uses splitstream controls content encoded divided stripes 
splitstream builds multicast trees stripes respecting inbound outbound bandwidth constraints peers 
applications need encode content stripe requires approximately bandwidth ii content reconstructed subset stripes sufficient size 
order applications tolerate loss subset stripes may provide mechanisms fetch content peers system may choose encode content manner requires greater stripe return ability content stripes 
example media stream encoded mdc video subset stripes video quality proportional number stripes received 
interior node stripe tree fail clients deprived stripe able continue displaying media stream reduced quality stripe tree repaired 
encoding allows low bandwidth clients receive video lower quality explicitly requesting stripes 
example multicasting file data erasure coding 
data block encoded erasure codes generate blocks large subset blocks required original block 
stripe multicast different blocks 
participants receive stripes sufficient subset blocks received clients able original data block 
client misses number blocks particular stripe period time stripe multicast tree repaired internal node failed client original data blocks due redundancy 
interesting alternative codes provide simple approach coordinating redundancy stripes stripe 
applications control create tear splitstream forest 
experimental results indicate maximum node stress construct forest distribute mbyte data significantly lower node stress placed centralized server distributing data 
perfectly reasonable create forest distribute megabytes data tear 
results show overhead maintain forest low high churn 
reasonable create long lived forests 
ideal strategy depends fraction time forest transmit data 
properties discuss necessary sufficient conditions feasibility forest construction algorithm relate splitstream achieve 
set nodes number stripes 
node wants receive ii ii distinct stripes willing forward stripe ci nodes 
call ii node desired indegree ci forwarding capacity 
set source nodes elements originate stripes 
forwarding capacity cs source node equal number stripes originates ts 
definition 
set nodes set sources forest construction feasible possible connect nodes node receives ii distinct stripes ci children 
condition obviously necessary feasibility forest construction algorithm 
condition 
forest construction feasible sum desired indegrees exceed sum forwarding capacities ii condition necessary sufficient feasibility forest construction simple example ci illustrates 
incoming arrows node correspond desired indegree outgoing arrows correspond forwarding capacity 
total forwarding capacity matches total desired indegree example impossible supply rightmost nodes distinct stripes 
node forwarding capacity desired indegree provide stripe children 
sources example illustrating condition sufficient ensure feasibility splitstream forest 
condition prevents problem 
sufficient ensure feasibility prevents concentration forwarding capacity nodes unable forward stripes 
condition 
sufficient condition feasibility forest construction condition hold nodes forwarding capacity exceeds desired indegree receive originate stripes ci ii ii ti 
natural condition cooperative environment nodes spend resources improving quality service perceived improving quality service perceive 
additionally inbound bandwidth typically greater equal outbound bandwidth consumer internet connections 
set nodes satisfy condition split stream algorithm build forest high probability provided modest amount spare capacity system 
probability success increases minimum number stripes nodes receives imin total amount spare capacity ci ii 
derive rough upper bound probability failure section imin indicated upper bound formula probability success high small amount spare capacity system 
additionally expect imin large applications 
example erasure coding reliable distribution data mdc video distribution perform poorly peers receive stripes 
expect configurations peers receive stripes common 
case algorithm guarantee efficient forest construction probability spare capacity 
open cooperative environment important address issue free loaders appear prevalent gnutella :10.1.1.12.6173
environment desirable strengthen condition require forwarding capacity node greater equal desired indegree ci ii 
condition may unnecessarily strong controlled settings example corporate intranet 
additionally need mechanism discourage free loading participants satisfy stronger condition 
settings may sufficient splitstream implementation enforce condition local node 
stronger mechanisms may trusted execution platform microsoft mechanism incentives 
interesting area 

background splitstream implemented tree applicationlevel multicast 
proposals applicationlevel multicast trees built maintained :10.1.1.7.2854:10.1.1.12.7544:10.1.1.16.8178:10.1.1.20.299:10.1.1.11.1973
consider implementation splitstream scribe pastry :10.1.1.28.5987:10.1.1.20.299
implemented different overlay protocol group communication system example bayeux tapestry scribe 
describing splitstream design provide brief overview pastry scribe 
pastry pastry scalable self organizing structured peer topeer overlay network similar chord tapestry 
pastry nodes objects assigned random identifiers called nodeids keys respectively large id space 
nodeids keys bits long thought sequence digits base configuration parameter typical value 
message key pastry routes message node nodeid numerically closest key called key root 
simple capability build higher level services distributed hash table dht application level group communication system scribe 
order route messages node maintains routing table leaf set 
node routing table log bn rows columns 
entries row routing table refer nodes nodeids share digits local node nodeid 
th nodeid digit node column row equals column row corresponding value th digit local node nodeid remains empty 
routing step node normally forwards message node nodeid shares key prefix digit longer prefix key shares node id node known message forwarded node nodeid shares prefix key long current node nodeid numerically closer 
shows path example message 
pastry node maintains set neighboring nodes nodeid space called leaf set ensure reliable message delivery store replicas objects fault tolerance 
expected number routing hops log bn 
pastry overlay construction observes proximity underlying internet 
routing table entry chosen refer node low network delay nodes appropriate nodeid prefix 
result show pastry routes low delay penalty average delay pastry messages twice ip delay source destination 
similarly fc nodeid key route da ba routing message node nodeid fc key 
dots depict nodeids live nodes pastry circular namespace 
show local route convergence pastry routes routes messages sent key nearby nodes underlying internet tend converge nearby intermediate node 
properties important construction efficient multicast trees described 
full description pastry 
scribe scribe application level group communication system built pastry :10.1.1.20.299
pseudo random pastry key known groupid chosen multicast group 
multicast tree associated group formed union pastry routes group member groupid root root multicast tree 
messages multicast root members reverse path forwarding 
properties pastry ensure multicast trees efficient 
delay forward message root group member low due low delay penalty pastry routes 
pastry local route convergence ensures load imposed physical network small message replication occurs intermediate nodes close network leaf nodes tree 
group membership management scribe decentralized highly efficient leverages existing proximity aware pastry overlay 
adding member group merely involves routing groupid message reaches node tree followed adding route traversed message group multicast tree 
result scribe efficiently support large numbers groups arbitrary numbers group members groups highly dynamic membership 
property combined anycast primitive added scribe perform distributed resource discovery 
briefly node overlay anycast scribe group routing message groupid 
pastry local route convergence ensures message reaches group member near message sender high probability 
full description evaluation scribe multicast :10.1.1.20.299
scribe anycast described 
splitstream forest construction 
source splits content multicasts stripe designated tree 
stripe starts different digit 
nodeids interior nodes share prefix leaves trees node nodeid starting interior node tree starting leaf node trees 

splitstream design section describe design splitstream 
construction interior node disjoint trees stripes 
discuss splitstream balances forwarding capacity nodes bandwidth constraints node observed 
building interior node disjoint trees splitstream uses separate scribe multicast tree stripes 
set trees said interior node interior node tree leaf node trees 
splitstream exploits properties pastry routing construct disjoint trees 
recall pastry normally forwards message nodes nodeids share progressively longer prefixes message key 
scribe tree formed routes members groupid nodeids interior nodes share number digits tree groupid 
ensure scribe trees disjoint set interior nodes simply choosing trees differ significant digit 
illustrates construction 
call groupid stripe group stripe 
choose value pastry achieves value suitable particular application 
setting ensures participating node equal chance interior node tree 
forwarding load approximately balanced 
chosen possible ensure fairness exploiting certain properties pastry routing table omit details due space constraints 
additionally fairly easy change pastry implementation route arbitrary base power 
loss generality assume rest 
limiting node degree resulting forest scribe trees interior node disjoint satisfies nodes constraints inbound bandwidth 
see observe node inbound bandwidth proportional desired indegree number stripes node chooses receive 
assumed node receives forwards stripe shares prefix nodeid node may serve interior node stripe 
forest necessarily satisfy nodes constraints outbound bandwidth nodes may children forwarding capacity 
number children attach node bounded indegree pastry overlay influenced physical network topology 
number may exceed node forwarding capacity node limit outdegree 
scribe built mechanism called push limit node outdegree 
node reached maximal outdegree receives request prospective child provides prospective child list current children 
prospective child seeks adopted child lowest delay 
procedure continues recursively tree node take child 
guaranteed terminate successfully single scribe tree provided node required take child 
procedure guaranteed splitstream 
reason leaf node tree may interior node tree may reached outdegree limit children tree 
describe splitstream resolves problem 
locating parents algorithm resolve case node reached outdegree limit receives join request prospective child 
node adopts prospective child regardless outdegree limit 
evaluates new set children select child reject 
selection attempt maximize efficiency splitstream forest 
node looks children reject stripes share prefix local node nodeid 
node acquired child place clear moment 
prospective child selected chosen randomly set 
child exists current node interior node stripe tree selects child nodeid shortest prefix match 
multiple nodes exist prospective child selected chosen randomly set 
chosen child notified orphaned particular 
exemplified 
orphaned child seeks locate new parent steps 
step orphaned child examines siblings attempts attach random sibling shares prefix match seeks parent 
sibling adopts rejects orphan criteria described 
push process continues recursively tree orphan finds new parent children share prefix match 
orphan parent second step uses spare capacity group 
spare capacity group orphan parent sends anycast message special scribe group called spare capacity handling prospective children node reached outdegree limit 
circles represent nodes numbers close nodeids wildcard 
solid lines indicate bottom node child top node number close line 
dashed lines represent requests join stripe 
node id reached outdegree limit 
node requests join stripe 
node takes child drops child stripe share digit 
node requests join stripe 
node takes child drops shorter prefix match stripe children 
group 
splitstream nodes children stripe trees forwarding capacity limit members group 
scribe delivers anycast message node spare capacity group tree near orphan physical network 
node starts depth search dfs spare capacity group tree forwarding message child 
node children checked node checks receives stripes orphaned child seeks receive general set stripe groups orphan joined 
verifies orphan ancestor corresponding stripe tree create cycle 
enable test node maintains path root stripe receives 
tests succeed node takes orphan child 
node reaches outdegree limit result leaves spare capacity group 
tests fails node forwards message parent dfs spare capacity tree continues appropriate member 
illustrated 
properties scribe trees dfs spare capacity tree ensure parent near orphan physical network 
provides low delay low link stress 
possible node attach parent interior node stripe tree 
parent fails may cause temporary loss stripe nodes 
show section small number nodes stripes affected average 
anycasting spare capacity group may fail locate appropriate parent orphan appropriate number retries sufficient timeouts 
spare capacity group empty splitstream forest construction infeasible orphan remains forwarding capacity exhausted 
case application orphaned node notified forwarding capacity left system 
anycasting fail group members available forwarding capacity desired stripe 
happen attaching orphan receive stripe members causes cycle member orphan descendant orphan 
solve problem follows 
orphan locates leaf desired stripe tree descendant 
anycasting stripe tree searching leaf anycast spare capacity group 
node spare capacity group find parent stripe identifier starts 
request routed pastry root spare capacity group reaches node tree 
node forwards request node children 
children checks satisfy node request 
case receive stripe 
sends request back node node sends child 
node satisfy request replies 
descendant 
leaf guaranteed exist require node forward stripe starts digit nodeid 
orphan replaces leaf tree leaf orphan 
leaf attach stripe tree spare capacity group cause cycle 
anycasting fail member spare capacity group provides desired stripes 
case declare failure notify application 
argue extremely happen sufficient condition forest construction condition holds 
correctness complexity argue informally splitstream build forest high probability provided set nodes satisfies sufficient condition feasibility condition modest amount spare capacity system 
analysis assumes nodes join forest time communication reliable ensure spare capacity system available spare capacity group 
assumes nodes leave system voluntarily due failures 
split stream includes mechanisms deal violations assumptions problems may block parents available forward stripes orphans may unreachable orphan due communication failures 
problems persist splitstream may unable ensure feasibility condition holds instant 
ignore issues analysis simulation results show splitstream cope practice 
construction respects bounds forwarding capacity indegree nodes reject children capacity limit nodes seek receive stripes desired indegree 
additionally cycles construction orphan attach parent path root includes orphan 
issue nodes receive distinct stripes desire 
node joins forest selects ii stripes uniformly random 
stripe starts digit nodeid selected nodeid selected randomly uniform probability id space 
joins spare capacity tree advertising able forward selected stripes attempts join corresponding stripe trees 
estimate probability algorithm leaves orphan find desired stripe 
ways node acquire parent selected stripe joining stripe tree directly spare capacity group anycasting spare capacity group 
stripe starts digit nodeid guaranteed find parent pushed zero times may orphan node 
algorithm guarantees needs locate parent stripe 
behavior different uses locate parent stripe may fail find parent cause node orphan 
node joins stripe uses find parent 
identifiers share digit may fail find parent pushed hs times hs height tree cause node orphan 
trees balanced expect hs log 
identifiers share digit guaranteed find parent may orphan node stripe different stripe case attempts acquire parent lost stripe 
sub cases looses stripe looses stripe identifiers share digit looses stripe identifiers share digit 
algorithm ensures case digit nodeid match digit 
ensures node orphan node uses obtain parent similarly orphan node case 
cases finds parent fails find parent pushed hr hs times 
case view resuming walk tree started cases join stripe results orphan necessarily uses anycast find parent stripe necessarily log messages 
holds concurrent joins 
orphan attempts locate parent stripe anycasting spare capacity group may fail find node spare capacity group receives stripe call probability event pf 
possible nodes spare capacity group receive descendants construction ensures identifiers share digit 
expected number descendants stripe small trees balanced 
technique handles case succeeds finding parent probability leaves orphan stripe descendants stripe case probability failure pf expected cost log messages success 
compute upper bound pf start assuming know set nodes spare capacity group anycast issued desired indegrees il 
compute exact value pf information pf il nodes join imin stripes compute upper bound pf require knowledge desired indegrees nodes spare capacity group pf imin assume node spare capacity group spare capacity condition implies ii satisfy anycast request 
spare capacity system ci ii minimum capacity available spare capacity group time pf imin bound holds concurrent minimum spare capacity system compute bound 
node joins node joins stripes 
number issued forest construction may fail bounded probability occurring equal probability plus probability rough upper bound probability algorithm fails build feasible forest imin probability failure low modest amount spare capacity system 
example predicted probability failure imin 
probability failure decreases imin increases example setting imin 
desired indegree nodes equals total number stripes algorithm fails 
case guaranteed build forest sum desired indegrees exceed sum forwarding capacities spare capacity 
consider algorithmic complexity split stream forest construction 
expected amount state maintained node log 
expected number messages build forest log trees balanced worst case 
expect trees balanced node forwards stripe identifier shares digit node identifier nodes 

experimental evaluation section presents results experiments designed evaluate overhead forest construction split stream performance multicasts forest 
ran large scale experiments network simulation environment live experiments planetlab internet testbed 
results support hypothesis overhead maintaining forest low multicasts perform high churn system 
experimental setup start describing experimental setup 
network simulation packet level network simulator 
simulator models propagation delay physical links model queuing delay packet losses cross traffic modeling prevent large scale network simulations 
simulations different network topology models gatech mercator 
topology set routers ran splitstream nodes randomly assigned routers uniform probability 
node directly attached lan links direction assigned router 
delay lan links set ms 
gatech transit stub topology model generated georgia tech random graph generator 
model routers arranged hierarchically 
transit domains top level average routers 
transit router average stub domains attached stub average routers 
link delays routers computed graph generator routing performed routing policy weights graph generator 
generated different topologies parameters different random seeds 
gatech results average results obtained running experiment topologies 
attach nodes transit routers 
mercator topology model routers obtained measurements internet mercator system 
authors measured data simple heuristics assign autonomous system router 
resulting overlay nodes 
routing performed hierarchically internet 
route follows shortest path overlay source destination 
routes follow shortest path router overlay path 
number ip hops proxy delay link delay information 
topology model routers gener ated measurements world wide microsoft corporate network 
link delays routers minimum delay measured month period 
due space constraints results gatech topology experiments compare results obtained topologies 
splitstream configuration experiments ran pastry configured leaf set size 
number stripes splitstream multicast channel 
evaluated splitstream different configurations node degree constraints 
designed evaluate impact overhead performance varying spare capacity system 
notation refer configurations value desired indegree nodes forwarding capacity nodes 
configurations nb 
configuration spare capacity roots stripes consume forwarding capacity stripes originate 
configurations provide spare capacity respectively 
nodes impose bound forwarding capacity nb configuration 
splitstream able build forest configurations probability shown analysis 
configurations designed evaluate behavior splitstream nodes different desired indegrees forwarding capacities 
configurations gnutella 
node desired indegree equal forwarding capacity picks stripes receive follows picks stripe digit nodeid probability picks stripes probability 
analysis predicts low probability success building forest configuration virtually spare capacity system nodes receive stripes 
splitstream able build forest successfully runs 
gnutella configuration derived actual measurements inbound outbound bandwidth gnutella peers 
cdf bandwidths shown 
distribution sampled generate pairs inbound bin outbound bout bandwidths split stream node 
nodes asymmetric bandwidth case dsl cable modem connections 
assumed total bandwidth stream kbps kbps stripe 
desired indegree node set max min bin kbps forwarding capacity min bout kbps 
approximately nodes desired indegree 
spare capacity system node 
analysis predicts success probability building forest configuration 
splitstream implementation splitstream implementation simulation experiments optimisations omitted section clarity 
optimisation reduces overhead cycle detection forest construction 
described section node maintains path root stripe receives 
maintaining state incurs considerable communication overhead updates path multi percentage hosts bandwidth kbps outbound inbound cumulative distribution bottleneck bandwidth inbound outbound network links gnutella peers 
cast descendants 
avoid maintaining state advantage prefix routing properties pastry 
cycles possible parent share longer prefix children stripe 
nodes need store update path information cases 
optimisation reduces overhead forest construction 
second optimisation improves anycast performance 
node joins splitstream forest may need perform find parent different stripes 
optimization batched node uses single anycast find parents multiple stripes 
optimization reduce number performed forest construction factor 
third optimization improves dfs traversal anycast tree 
parent adds list children anycast message forwarding message child 
child unable satisfy anycast request removes list sends message siblings avoiding visit parent 
forest construction overhead set experiments measured overhead forest construction node failures 
started pastry overlay nodes built splitstream forest overlay nodes 
nodes joined spare capacity stripe groups time 
overheads lower concurrency 
metrics measure overhead node stress link stress 
node stress quantifies load nodes 
node stress equal number messages receives 
link stress quantifies load network 
stress physical network link equal number messages sent link 
node stress figures show cumulative distribution node stress forest construction different configurations gatech topology 
shows results configurations shows results gnutella 
point graph indicates fraction nodes topology node stress equal table shows maximum mean median node stress distributions 
results similar topologies 
table show node stress drops cumulative proportion nodes node stress nb cumulative distribution node stress forest construction nodes gatech 
spare capacity system increases 
spare capacity nodes orphaned 
nb configuration lowest node stress 
configuration highest node stress node uses anycast find parent stripes average 
nodes maximum node stress configurations nb nodeids closest identifier spare capacity group 
table shows increasing spare capacity configuration results factor decrease maximum node stress 
conf 
nb 
max mean median table maximum mean median node stress forest construction nodes gatech 
shows node stress similar gnutella 
gnutella significant amount spare capacity members spare capacity group receive stripes increases length dfs traversals anycast tree 
spare capacity lower node stress nodes join stripe groups average 
cumulative proportion nodes node stress gnutella cumulative distribution node stress forest construction nodes gatech 
ran experiments evaluate node stress forest construction overlays different sizes 
shows mean node stress configurations 
maximum median node stress show similar trends number nodes increases 
average node stress nb number nodes splitstream mean node stress forest construction varying number nodes gatech 
analysis expect mean node stress logn number nodes 
second effect ignored analysis average cost performing anycast joining stripe group decreases group size 
effect dominates small second effect compensates large suggests complexity analysis pessimistic 
results demonstrate node stress forest construction low largely independent number nodes forest 
interesting contrast splitstream centralized server distributing byte file large number clients 
clients server node stress handling requests send total bytes 
maximum node stress splitstream forest construction configuration times lower number bytes sent node multicast file forest bounded link stress shows cumulative distribution link stress forest construction different configurations gatech 
point graph indicates fraction links topology link stress equal table shows maximum mean median link stress links non zero link stress 
shows fraction links non zero link stress links 
node stress link stress drops spare capacity system increases reason 
links highest stress transit links 
results similar topologies medians identical averages lower higher mercator 
difference averages explained different ratio number lan links number router router links topologies 
ratio highest lowest mercator 
conclude link stress induced forest construction low average 
maximum link stress configurations times lower maximum link stress centralized system number nodes 
cumulative proportion links link stress nb cumulative distribution link stress forest construction nodes gatech 
conf 
nb 
max mean med 
links table maximum mean median link stress links fraction links links forest construction nodes gatech 
forest multicast performance ran experiments evaluate performance multicast splitstream forest failures 
put performance perspective compared splitstream ip multicast scribe 
ip multicast represents best achieved router support scribe state art application level multicast system uses single tree 
metrics evaluate multicast performance comparison node stress link stress delay penalty relative ip 
experiments ran node pastry overlay described previous section 
implementation ip multicast shortest path tree formed merge unicast routes source recipient 
similar expected experimental setting protocols distance vector multicast routing protocol dvmrp 
created single group ip multicast scribe overlay nodes joined 
tree scribe group created bottleneck :10.1.1.20.299
evaluate splitstream multicast data packet stripe groups forest nodes built described previous section 
scribe ip multicast multicast data packets single group 
node stress multicast experiment node stress splitstream node equal desired indegree example configurations 
scribe ip multicast node stress 
number messages sent node splitstream bounded forwarding capacity node example configuration 
important enables nodes different capabilities participate system 
link stress start presenting results experiments measured link stress multicast different splitstream forest sizes 
table shows results experiments configuration gatech 
splitstream node added system uses additional lan links direction induces link stress 
adding nodes causes increase link stress router router links router network remains fixed 
majority links larger topologies lan links median link stress remains constant mean link stress grows slowly 
maximum link stress increases link stress router router links increases 
problem affects application level multicast systems 
num 
mean med 
max links table maximum mean median link stress links fraction links links multicast configuration gatech varying number nodes 
set experiments compared link stress multicast different splitstream configurations nodes gatech 
table shows maximum mean median link stress links fraction links experiments 
results show link stress tends decrease spare capacity increases 
absence bounds forwarding capacity nb causes concentration stress smaller number links results increased average maximum stress links 
average link stress gnutella lower nodes receive stripes average 
conf 
nb 
max mean med 
links table maximum mean median link stress links fraction links links multicast different splitstream configurations nodes gatech 
picked splitstream configuration performs worst compared performance scribe ip multicast centralized system unicast 
shows cumulative distribution link stress multicast different systems gatech nodes 
point graph indicates fraction links topology link stress equal table shows maximum mean median link stress links fraction links 
results show splitstream uses significantly larger fraction links topology multicast messages systems splitstream uses links topology ip multicast centralized unicast scribe uses 
splitstream uses outbound inbound lan links nodes ip multicast centralized conf 
centralized scribe ip max mean median links table maximum mean median link stress links fraction links links centralized unicast scribe ip splitstream multicast nodes gatech 
cumulative proportion links cumulative proportion links link stress splitstream vs ip ip multicast link stress splitstream vs scribe scribe cumulative distribution link stress multicast nodes gatech 
unicast inbound lan links 
scribe uses inbound lan links uses outbound lan links small fraction nodes interior nodes tree 
observed behavior topologies 
splitstream loads links uses scribe 
table shows average stress links split stream close average stress links ip multicast worse 
average link stress links scribe worse achieved ip multicast 
splitstream achieves maximum link stress factor lower scribe comparison favorable splitstream configuration spare capacity 
observed behavior topologies 
average stress links splitstream worse average stress links ip mul worse mercator 
average link stress links scribe worse achieved ip multicast worse mercator 
conclude splitstream deliver higher bandwidth scribe available bandwidth node access links directions 
fundamental advantage splitstream relative application level multicast systems single tree 
delay penalty quantify delay penalty splitstream relative ip multicast 
computed metrics delay penalty splitstream stripe rmd rad 
compute metrics measured distribution delays deliver message member stripe group stripe tree ip multicast 
rmd ratio maximum delay stripe tree maximum delay ip multicast rad ratio average delay stripe tree average delay ip multicast 
figures show rad results splitstream multicast different configurations nodes 
cumulative rad distribution stripes 
point graph indicates fraction stripes rad equal results rmd qualitatively similar maximum rmd configurations figures gatech 
cumulative stripes rad nb rad rad rad delay penalty cumulative distribution delay penalty configurations gatech topology nodes 
shows delay penalty increases spare capacity system decreases 
nb configuration provides lowest delay nodes orphaned 
mechanisms deal orphaned nodes push anycast increase average depth stripe trees 
additionally bounds outdegree may prevent children attaching closest prospective parent network 
put results context stripe trees built ignoring physical network proximity average rad approximately nb configuration significantly higher configurations 
shows rad distribution qualitatively similar gatech representative configurations 
results mercator delay values links topology 
delay penalty tends lower cumulative stripes cumulative stripes delay penalty gatech rad rad gnutella rad delay penalty rad rad gnutella rad cumulative distribution delay penalty gatech nodes 
pastry mechanism exploit proximity network effective gatech 
shows delay penalty gnutella similar stripes 
variance higher gnutella nodes small forwarding capacity increase average depth stripe tree significantly close top tree 
delay penalty higher configurations average forwarding capacity lower results deeper stripe trees 
conclude splitstream achieves delay small factor optimal 
performance sufficient demanding applications interactive component large virtual class rooms 
resilience node failures previous experiments evaluated performance split stream failures 
section presents results quantify performance overhead node failures 
performance metric fraction desired stripes received node overhead metric number control messages sent second node similar node stress 
path diversity set experiments analyzed paths node root stripe re 
paths node disjoint single node failure stripe stripe tree repairs 
splitstream may fail guarantee node disjoint paths nodes anycast find parent problem results show 
conf 
nb 
max mean median table worst case maximum mean median number stripes lost node single node fails 
node splitstream forest gatech mean median number lost stripes random node fails configurations 
nodes may loose stripe nodes fail 
table shows max median mean number stripes lost node worst case ancestor fails 
number stripes lost small nodes worst case ancestor fails 
shows splitstream robust node failures 
catastrophic failures experiment evaluated resilience splitstream catastrophic failures 
created node splitstream forest configuration gatech started multicasting data rate packet second stripe 
failed nodes simulation 
pastry splitstream heartbeats probes detect node failures 
pastry techniques described control probing rates tuned achieve loss rate leaf set probing period 
splitstream nodes send heartbeats children parents 
heartbeats sent parents allow nodes detect child fails rejoin spare capacity group 
configured splitstream nodes send 
pastry splitstream heartbeats probes suppressed traffic 
shows maximum average minimum number stripes received node experiment 
nodes loose large number stripes large scale failure splitstream pastry recover quickly 
nodes receive packets stripes failure detection period receive stripes 
furthermore nodes receive stripes minutes 
breaks average number messages sent second node experiment 
line labeled pastry shows pastry overhead line labeled pastry splitstream represents total overhead average number pastry splitstream control messages 
shows total number messages including data packets labeled pastry splitstream data 
results show nodes send control messages second failure 
overhead low 
overhead increases failure pastry splitstream repair 
repair overhead higher failure pastry uses self tuning mechanism adapt routing table probing rates 
mechanism detects large number failures short pe number stripes time seconds maximum average minimum maximum average minimum number stripes received nodes fail gatech 
number messages second node pastry pastry splitstream pastry splitstream data time seconds number messages second node nodes fail gatech 
increases probing rate maximum case 
trace overhead starts dip self tuning mechanism forgets failures registered 
high churn final simulation experiment evaluated performance overhead splitstream high churn overlay 
real trace node arrivals departures study gnutella 
study monitored unique nodes gnutella overlay period hours 
probed node minutes check part gnutella overlay 
average session time trace approximately hours number active nodes overlay varied 
arrival departure rate exhibit large daily variations 
ran experiment gatech topology 
nodes joined pastry overlay failed trace 
minutes trace created splitstream forest nodes overlay time 
configuration 
time new nodes joined pastry overlay joined splitstream forest 
sent data packet stripe group seconds 
shows average th percentile number stripes received node trace 
results show splitstream performs high churn nodes receive stripes time 
average number number stripes th percentile average time hours number stripes received gnutella trace gatech 
stripes received node time 
shows average number messages second node gnutella trace 
results show nodes send control messages second time 
amount control traffic varies pastry self tuning mechanism adjusts probing rate match observed failure rate 
number control messages exceeds second node trace 
additionally vast majority messages probes heartbeats small wire 
overhead low example control traffic consumes total bandwidth mb data stream 
number messages second node pastry pastry splitstream pastry splitstream data time hours number messages second node gnutella trace gatech 
planetlab results results live experiments evaluated splitstream planetlab internet testbed 
experiments ran hosts different planetlab sites europe 
host ran split stream nodes resulted total nodes splitstream forest 
configuration data stream kbits sec 
kbit packet sequence number multicast second stripe 
sequence numbers hosts randomly selected splitstream nodes running killed 
caused number splitstream nodes loose packets stripes number stripes average minimum sequence number number stripes received versus sequence number 
absolute delay msec minimum average maximum sequence number packet delays versus sequence number 
affected stripe trees repaired 
shows average minimum number stripe packets received live splitstream node particular sequence number 
effect failed nodes clearly seen 
repair time determined primarily splitstream failure detection period triggers tree repair heartbeats data packets received seconds 
seen failure detected splitstream able find new parent rapidly 
shows minimum average maximum delay packets received sequence number splitstream nodes 
delay includes time taken send packet source root stripe pastry 
shows cdf delays experienced packets received independent sequence number stripe 
delay spikes caused congestion losses internet shows packets experience delay second 
results show splitstream works expected actual deployment recovers failures gracefully 
tcp transport protocol lost packets cause retransmission delays 
transport protocol attempt recover packet losses avoid delays 
fraction packets absolute delay msec cumulative distribution packet delays 
packets experience delay greater seconds maximum observed delay seconds 

related application level multicast systems proposed 
single multicast tree sender 
systems system multicast video distribution notably overcast 
splitstream differs distributes forwarding load participants multiple multicast trees reducing bandwidth demands individual peers 
overcast organizes dedicated servers source rooted multicast tree bandwidth estimation measurements optimize bandwidth usage tree 
main differences overcast splitstream overcast uses dedicated servers splitstream utilises clients ii overcast creates single bandwidth optimised multicast tree splitstream assumes network bandwidth available peers limited connections isp network backbone 
scenario typical backbone links provisioned 
nguyen zakhor propose streaming video multiple sources concurrently exploiting path diversity increasing tolerance packet loss 
subsequently extend forward error correction encodings 
assumes client aware set servers receive video 
splitstream constructs multiple multicast trees decentralized fashion scalable 
originally proposed utilising striped video mdc exploit path diversity increased robustness packet loss 
propose building overlay composed relays having stripe delivered client different source 
examines performance mdc describe infrastructure forward stripes clients 
coop net implements hybrid system utilises multiple trees striped video mdc 
video server overloaded clients redirected clients creating distribution tree routed server 
fundamental differences coopnet splitstream coopnet uses centralised algorithm running server build trees splitstream completely decentralised ii coopnet attempt manage bandwidth contribution individual nodes 
possible add capability coop net 
reliable file transfer protocol ip multicast 
combines forward error correction encoding data carousel mechanism 
relying ip multicast easily built splitstream example provide software updates cooperatively 
algorithms content encodings described enable parallel downloads increase packet loss resilience richly connected collaborative overlay networks exploiting downloads multiple peers 

design evaluation splitstream application level multicast system high bandwidth data dissemination cooperative environments 
system stripes data forest multicast trees balance forwarding load tolerate faults 
able distribute forwarding load participating nodes respecting individual node bandwidth constraints 
combined redundant content encoding splitstream offers resilience node failures departures affected multicast tree repaired 
overhead forest construction maintenance modest balanced nodes network links high churn 
multicasts forest load nodes bandwidth constraints distribute load evenly network links applicationlevel multicast systems single tree 
simulator versions pastry splitstream ran top available request microsoft research 
version pastry splitstream ran planetlab available download www cs rice edu cs systems pastry freepastry manuel costa alan mislove post useful discussions help implementation experimentation steven gribble krishna gummadi stefan saroiu data tangmunarunkit ramesh govindan scott shenker mercator topology 
bawa amin vahdat shepherd anonymous reviewers comments earlier drafts 

planetlab 
www planet lab org 
adar huberman :10.1.1.12.6173
free riding gnutella 
monday oct 
firstmonday 
org issues issue adar index html 
andersen balakrishnan kaashoek morris 
resilient overlay networks 
sosp banff canada dec 

reliable video communication lossy packet networks multiple state encoding path diversity 
visual communications image processing jan 
wee 
unbalanced multiple description video communication path diversity 
ieee international conference image processing oct 
banerjee bhattacharjee 
scalable application layer multicast 
proceedings acm sigcomm aug 
bawa deshpande garcia molina 
transience peers streaming media 
hotnets new jersey usa oct 
birman hayden xiao budiu minsky 
bimodal multicast 
acm transactions computer systems may 
blahut 
theory practice error control codes 
addison wesley ma 
byers considine mitzenmacher rost 
informed content delivery adaptive overlay networks 
sigcomm pittsburgh pa usa aug 
castro druschel hu rowstron 
exploiting network proximity peer peer overlay networks 
technical report msr tr microsoft research 
castro druschel hu rowstron 
proximity neighbor selection tree structured peer peer overlays 
technical report msr tr microsoft research aug 
castro druschel :10.1.1.20.299
kermarrec rowstron 
scribe large scale decentralized application level multicast infrastructure 
ieee jsac oct 
castro druschel 
kermarrec rowstron 
scalable application level anycast highly dynamic groups 
networked group communications oct 
castro jones 
kermarrec rowstron theimer wang wolman 
evaluation scalable application level multicast built peer peer overlay networks 
infocom 
chu rao zhang 
case system multicast 
proc 
acm sigmetrics pages june 
dalal metcalfe 
reverse path forwarding broadcast packets 
communications acm 
deering cheriton 
multicast routing datagram internetworks extended lans 
acm transactions computer systems may 
eugster guerraoui 
kermarrec 
lightweight probabilistic broadcast 
proceedings international conference dependable systems networks dsn july 
gemmell schooler gray 
multicast file distribution 
ieee network jan 
govindan tangmunarunkit 
heuristics internet map discovery 
proc 
th ieee infocom pages tel aviv israel march 
ieee 
jannotti gifford johnson kaashoek toole 
overcast reliable multicasting overlay network 
proc 
osdi san diego ca 
rodriguez albrecht vahdat 
random subsets build scalable network services 
usits mar 
luby 
lt codes 
focs nov 
mahajan castro rowstron 
controlling cost reliability peer peer overlays 
iptps feb 
maymounkov mazi res 
codes big downloads 
iptps feb 
mohr ladner 
unequal loss protection graceful image quality packet erasure channels forward error correction 
ieee jsac june 
ngan druschel wallach 
enforcing fair sharing peer peer resources 
iptps berkeley ca feb 
nguyen zakhor 
distributed video streaming forward error correction 
packet video workshop pittsburgh usa 
padmanabhan wang chou sripanidkulchai 
distributing streaming media content cooperative networking 
th international workshop network operating systems support digital audio video nossdav miami beach fl usa may 
ratnasamy francis handley karp shenker 
scalable content addressable network 
proc 
acm sigcomm san diego ca aug 
ratnasamy handley karp shenker 
application level multicast content addressable networks 
ngc nov 
rowstron druschel :10.1.1.28.5987
pastry scalable distributed object location routing large scale peer peer systems 
proc 
ifip acm middleware heidelberg germany nov 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn san jose ca jan 
snoeren gifford 
mesh content routing xml 
sosp banff canada dec 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm san diego ca aug 
tangmunarunkit govindan estrin shenker 
impact routing policy internet paths 
proc 
th ieee infocom alaska usa apr 
zegura calvert bhattacharjee 
model internetwork 
infocom san francisco ca 
zhao kubiatowicz joseph 
tapestry infrastructure fault resilient wide area location routing 
technical report ucb csd berkeley april 
zhuang zhao joseph katz kubiatowicz 
bayeux architecture scalable fault tolerant wide area data dissemination 
nossdav june 
