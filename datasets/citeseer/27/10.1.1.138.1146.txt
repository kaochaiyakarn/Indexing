dos don ts client authentication web client authentication continuous source problems web 
studied techniques exist authentication web sites continue extremely weak authentication schemes especially non enterprise environments store fronts 
weaknesses result careless authenticators web cookies 
sites investigated weakened client authentication systems gained unauthorized access extracted secret key mint authenticators 
provide description limitations requirements security models specific web client authentication 
includes interrogative adversary surprisingly powerful adversary adaptively query web site 
propose set hints designing secure client authentication scheme 
hints design analysis simple authentication scheme secure forgeries interrogative adversary 
conjunction ssl scheme secure forgeries active adversary 
client authentication common requirement modern web sites personalized access controlled services move online 
unfortunately sites authentication schemes extremely weak vulnerable attack 
problems due careless authenticators stored client 
observed informal survey authentication mechanisms various popular web sites 
sites investigated weakened research supported usenix scholars fellowship originally published proceedings th usenix security symposium 
washington august 
kevin fu emil sit smith nick feamster sit feamster mit edu mit laboratory computer science cookies lcs mit edu client authentication systems gained unauthorized access extracted secret key mint authenticators 
surprising existing client authentication mechanisms ssl tls studied mechanisms providing authentication secure range adversaries 
reasons mechanisms suitable web large 
lack central infrastructure public key infrastructure uniform kerberos contributes proliferation weak schemes :10.1.1.112.9002
web sites design authentication mechanism provide better user experience 
unfortunately designers implementers background security result understanding tools disposal 
lack control user interfaces unavailability client authentication infrastructure web sites continue reinvent weak home brew client authentication schemes 
goal provide designers implementers clear framework think build secure web client authentication systems 
key contribution realize web particularly vulnerable adaptive chosen message attacks 
call adversary capable performing attacks interrogative adversary 
turns systems user potentially interrogative adversary 
despite having special access network comparison eavesdropping active adversary interrogative adversary able significantly compromise systems adaptively querying web server 
believe minimum web client authentication systems defend adversary 
minimum security sites may continue vulnerable attacks eavesdropping server impersonation stream tampering 
currently best defense attacks ssl form client authentication see information security proper uses ssl 
section describe limitations requirements security models consider designing web client authentication 
descriptions codify principles underlying strengths weaknesses existing systems set hints section 
example design simple flexible authentication scheme section 
implemented scheme analyzed security performance findings sections 
section compares prior related 
conclude summary results section 
security models definitions clients want ensure authorized people access modify personal information share web sites 
similarly web sites want ensure authorized users access services content provides 
client authentication addresses needs parties 
client authentication involves proving identity client user server web 
term authentication refer problem 
server authentication task authenticating server client important focus 
section overview security models definitions relevant client authentication 
describing practical limitations web authentication system 
followed discussion common requirements 
characterize types breaks adversaries 
practical limitations web authentication primarily practical problem deployability user acceptability performance 
deployability web authentication protocols differ traditional authentication protocols part limited interface offered web 
goal develop authentication system protocols technologies commonly available today web browsers servers 
authentication schemes internet large rely technology widely deployed 
example internet kiosks today smart card readers 
similarly home consumers currently little incentive purchase smart card readers hardware token systems 
client generally speaks server hypertext transfer protocol 
may spoken transport mechanism typically tcp ssl 
stateless protocol client provide authentication token authenticator request 
computation allows browser transform inputs sending server 
computation may strictly defined manner digest authentication ssl may flexible 
flexible computation available javascript java tcl activex flash 
depending application technologies assist authentication process 
technologies high startup overhead mediocre performance 
result users may choose disable technologies 
extensions may available operating systems architectures 
standard authentication scheme portable lightweight possible require browser extensions 
today authentication scheme avoid client computation deployability reasons 
absolutely necessary javascript java commonly supported 
client state allows client browser store reuse authenticators 
storage space may limited 
limited case browser store passwords associated realms basic authentication 
flexible form storage commonly available browsers cookie 
cookies allow server store value client 
subsequent requests client automatically includes cookie value 
number attributes control long cookies kept servers sent 
particular server may request client discard cookie immediately keep specified time 
server may request client return cookie certain hosts domains ports urls secure transports 
cookies widely deployed mechanism maintaining client state 
user acceptability web sites consider user acceptability 
sites want attract users client authentication non possible 
users discouraged schemes requiring installing plug clicking away dialog boxes 
performance stronger security protocols generally cost performance 
service providers naturally want respond requests possible 
cryptographic solutions usually degrade server performance 
authentication needlessly consume valuable server resources memory clock cycles 
current technology ssl unattractive computational cost initial handshaking 
server security requirements goals server authentication system depend strength granularity authentication desired 
granularity refers fact servers identify individual users session identify users request 
fine grained system useful specific authorization accountability user required 
coarse grained system may preferred situations partial user anonymity desired 
simple example coarse grained service subscription service 
subscription services merely wish verify user paid service allowing access read content 
initial request user authenticate username password 
service allows customization subsequent requests need verify user authenticated knowing user actual identity 
trusted third party handle initial authentication user 
specific examples sites require level authentication newspapers wsj com online libraries acm org adult entertainment com 
sites customize data sent back users 
naturally requires fine grained system 
user identified specifically preferences 
examples include sites allow users customize look feel slashdot org sites filter information behalf user com sites provide online identities hotmail com 
confidentiality privacy confidentiality strictly related authentication worth mentioning provided cryptography confused authentication 
system provides confidentiality protects traffic disclosure sender recipient 
contrast system provides authentication ensures person sending receiving data claim 
may confusing ssl widely deployed mechanism providing confidentiality transactions provides options authentication confidentiality 
distinction confidentiality authentication blurred practice current browsers displaying single meaning ambiguous 
typically servers choose provide confidentiality certain special data ssl 
example financial data require confidentiality 
sites deal information online may auction sites ebay com banks financial service providers com online merchants com 
issue commonly associated authentication user privacy 
privacy refers protecting data available server access unauthorized parties 
information provided server secret usually want unknown parties discovering personal interests 
example user may sign see discount airfares san francisco select stocks portfolio updated stock quotes 
fact offering low fare cisco stock shed points way secret may telling find particular user interested information 
servers need provide ways keep personalized data private 
privacy achieved secure authentication providing confidentiality 
breaks adversary goal break authentication scheme faster brute force 
terminology loosely borrowed cryptography characterize kinds breaks adversary achieve 
existential forgery adversary forge authenticator user 
adversary choose user 
may interesting case authenticators protect access subscription service 
existential forgery give adversary access chosen user account allow adversary access content paying 
harmful kind forgery 
selective forgery adversary forge authenticator particular user 
adversary access chosen user personalized content web mail bank statements 
note forgery implies construction new authenticator previously seen 
traditional replay attack adversary merely reusing captured authenticator 
total break results recovery secret key mint authenticators 
serious break allows adversary construct valid authenticators time users 
adversaries consider kinds adversaries attack web authentication protocols interrogative adversary eavesdropping adversary active adversary 
successive adversary possesses abilities weaker adversaries 
note definitions differ somewhat tradition 
adversaries gather information apply information achieve break 
adversaries differ information gathering ability 
interrogative adversary interrogative adversary reasonable number queries web server 
adaptively choose query answer previous query 
named interrogative adversary adversary queries lacks ability sniff network 
ability queries surprisingly powerful 
adversary pass attempted forgeries server verification routine 
creating new accounts server adversary obtain authenticator different usernames 
possible server allows account creation form band authentication credit cards throttle requests 
assume throttle exists 
interrogative adversary information publicly available server 
server may publish usernames valid account holders public discussion forum 
adversary attacking server find list useful 
theoretical terms interrogative adversary may treat server oracle 
interrogative adversary carry adaptive chosen message attack repeatedly asking server mint verify authenticators 
eavesdropping adversary eavesdropping adversary see traffic users server modify packets flowing network 
adversary sniff network replay authenticators 
adversary abilities interrogative adversary 
eavesdropping adversary apply information attempt break 
computer systems research consider active attack 
style definition common theory community attacks consist information gathering process challenge optional information gathering process attempted break 
active adversary active adversary addition see modify traffic user server 
adversary mount man middle attacks 
real world situation arise adversary controls proxy service user server 
hints web client authentication hints designing implementing selecting scheme client authentication web 
hints come experiences breaking authentication schemes commercial web sites 
come general knowledge security discussion forums 
hints necessary sufficient security 
prevented breaking authentication schemes web sites mentioned section 
sites subsequently repaired problems identified 
incidents help demonstrate usefulness hints 
details analysis documented technical report 
give advice perform client authentication web certainly advocate having design security systems 
hope hints assist researchers developers web client authentication persons unfamiliar security implementing home brew solutions 
hints fall categories 
section discusses appropriate cryptography 
section explains passwords protected 
section offers suggestions protect authenticators 
cryptography appropriately cryptography critical providing authentication 
cryptography possible protect system weakest adversaries 
designing cryptographic systems difficult subtle task 
offer hints help guide prospective designer cryptographic tools available 
appropriate amount security important general design hint keep simple stupid :10.1.1.24.8879
complex scheme harder develop compelling arguments secure 
designing selecting system choose provides right amount security needs 
example online newspaper cares receiving compensation content 
online brokerage cares confidentiality integrity authentication information 
security needs different satisfied different systems 
usually tradeoffs user interface usability performance 
choosing overly complex system management difficult easily result security breaches 
general rule cryptography secure systems designed people experience 
time repeatedly shown systems designed implemented weak easily broken 
encourage research developing authentication systems web risky design authentication system 
closely related hint 
choose implement scheme protocol publicly available review 
rely secrecy protocol security system rely secrecy protocol 
protocol security relies obscurity vulnerable exposure protocol 
flaws exposure may reveal 
example secret system probed interrogative adversary determine behavior valid invalid inputs 
technique allowed reverse engineer wsj com client authentication protocol 
creating valid accounts comparing authenticators returned system able determine authenticator output salt username secret string de notes concatenation 
understood format authenticator able quickly recover secret string march mounting adaptive chosen message attack 
program included technical report runs queries intended assuming query takes second program finishes minutes intended years 
information constitutes total break allowing mint valid authenticators users 
hand open market published design implementation yahoo provided complete details authentication system 
believe schemes reasonably strong details see relevant sections technical report 
relying secrecy scheme rely secrecy selected set keys 
ensure protocol public reviewed flaws improved 
lead secure system private protocol appears may practice fairly easy break 
hesitant reveal details authentication scheme may vulnerable attack interrogative adversary 
understand properties cryptographic tools designing authentication scheme cryptographic tools critical 
include hash functions sha authentication codes hmac higher level protocols ssl 
properties tool understood 
example ssl provide user authentication 
ssl authenticate users client certificates commercial web sites rarely feature pki deployment problems 
ssl provide confidentiality authentication tokens data 
confidentiality ensure authentication 
misunderstanding properties ssl com vulnerable selective forgeries interrogative adversary 
earlier scheme authenticator consisted username session identifier global sequence number 
number global interrogative adversary guess session identifier chosen victim ssl request session identifier 
ssl system secure 
detailed example comes misuse hash function 
commonly incorrectly input truncating hash function unix crypt function 
takes string input salt create thirteen character hash believed strong underlying cryptographic cipher des 
crypt considers characters string input 
truncation property taken account hash 
com authentication system failed break possible 
input crypt username concatenated server secret truncation property meant secret hashed username characters long 
means authenticators long usernames easily created merely knowledge username 
additionally algorithm produce identical authenticator usernames match characters 
seen 
wsj com expected construction act secure message authentication code mac 
message authentication code way function input secret key verify integrity data 
output function deterministic relatively short usually sixteen bytes 
means recalculated verify data tampered 
wsj com authenticator just deterministic value computed characters username fixed secret 
basic authentication uses cryptography secure existential forgery interrogative adversary original wsj com scheme fell total break interrogative adversary 
possible secure message authentication code 
certain cryptographic constructions subtle weaknesses take great care choosing algorithm employ 
recommend hmac sha 
algorithm prevents attacks known defeat simple constructions 
see section secure message authentication code expensive input truncating hash 
compose security schemes difficult determine effects composing different security systems 
breaking may allow adversary break 
worse simply composing schemes may adverse cryptographic side effects schemes secure isolation 
menezes explain single key pair multiple purposes compromise security 
single key authentication confidentiality leads compromise key stolen 
hand separate keys break authentication affect confidentiality past messages vice versa 
com separate user authentication systems 
purchase book user entered user name password time purchase 
purchases required 
account management web pages separate security scheme stateful 
user entered username password established session identifier url path 
way users navigate parts account management system having re enter password 
unfortunately security hole discussed section allowed adversary gain access account management system arbitrary user guessing valid session identifier 
account management system includes option change user registered email address 
changing email address victim account selecting mail password adversary break book purchasing part system despite fact secure isolation 
protect passwords passwords primary means authenticating users web today 
important web site guard passwords users carefully 
especially important users faced web sites requiring passwords tend reuse passwords sites 
limit exposure passwords compromise password completely compromises user 
site reveal password user 
instance net included user password hidden form variable 
valid user know password sending unnecessarily network gives eavesdropping adversary opportunity sniff password 
furthermore sites password field type html forms 
hides password typed prevents adversary user shoulder copy password 
non secure web sites users option authenticate ssl 
users type passwords 
passwords sent visible eavesdropping adversaries sniffing network active adversaries impersonating servers 
users password multiple servers stolen password extremely damaging 
protect attacks server require users conduct login ssl connection provide confidentiality password exchange successful completion login exchange server set cookie unforgeable authenticator 
authenticator designed limit spread damage passwords 
username crypt output authentication cookie lfc lfc lfc lfc comparison crypt wsj com authentication cookies 
field represents username prepended output function 
input function username prepended string march 
prohibit passwords web sites advise users choose memorable passwords names friends family social security numbers 
extremely poor advice passwords easily guessed attacker knows user 
bad advice passwords fairly :10.1.1.127.8377
servers ought prohibit users password dictionary passwords vulnerable dictionary attacks 
servers reduce effectiveness line dictionary attacks restricting number failed login attempts requiring short time delay login attempts 
unfortunately implementing requirement web site appealing passwords harder remember 
changing passwords security sensitive operations password changing server require user 
may possible adversary replay authentication token force password change actual knowledge current password 
handle authenticators carefully authenticators workhorse authentication scheme 
tokens client gain access system 
discussed authenticators protect passwords short term secret authenticator changed time passwords convenient change 
authenticators unforgeable sites authenticators easily predictable 
instance noticed com uses id numbers email addresses inside cookies authenticate users 
interrogative adversary find information publicly available database mint authenticator user 
authenticators contain keys function session identifiers 
identifiers cryptographically random statistical randomness sufficient 
cold fusion web server issues session identifiers come linear congruential number generator 
described com essentially global sequence number 
numbers may appropriate tracking users possible adversary deduce output valid session identifier 
may allow adversary access information user 
authenticators may contain information system accept true 
protected tampering 
done message authentication code mac 
message authentication codes require secret key entity knowledge key recreate valid code 
codes unforgeable adversary possess secret key 
strong cryptographic hash functions 
crc codes hashes functions trivial break 
combining multiple pieces data input message authentication code sure unambiguously separate components 
inputs text done character known appear input fragments 
components clearly separated multiple inputs lead outputs 
example come username followed access user followed better write username access ensure interpretation unambiguous 
course care taken prevent username containing 
protect authenticators secret systems believe secure eavesdropping adversaries send authenticators ssl 
secure transport ineffective authenticators leak plaintext channels 
describe ways authenticators sent ssl mistakes lead authenticator leaking plaintext 
method set authenticator cookie 
doing usually appropriate set secure flag cookies sent ssl 
set true flag instructs web browser send cookie ssl 
number ssl web sites neglect set flag 
simple error completely useful properties ssl 
instance customers view account information equipment purchases online 
authenticate user enters phone number password ssl 
sets cookie acts authenticator 
cookie log user 
protocol far reasonably secure 
set secure flag authentication cookie authenticator travels plaintext user visits main web page 
believe intended protect eavesdropping adversaries 
eavesdropping adversary access victim account replay cookie authenticator leaks 
second method setting authenticator include part url 
specification recommends easy sites 
problem method leak authenticators plaintext channels 
user follows link page web browser usually sends referer sic header 
field includes url page current request originated 
described section specification referer field normally allow server trace back links logging caching maintenance purposes 
url linking page includes authenticator server receive copy authenticator header 
section specification recommends clients include referer header request referring page transferred secure protocol exactly reason 
requirement browsers netscape lynx send referer header anyway warning 
exploited cross site scripting attack 
adversary cause user execute arbitrary code offer user link secure url including authenticator appears legitimate link adversary choosing 
user selects link referer field request may include au making available eavesdropping adversary 
worse link point adversary machine 
eavesdropping necessary capture authenticator 
attacker clever uses ssl server host attack browsers indicate happening warn users transitions ssl non ssl links 
careful setting authenticators cookies follow recommendation specification authenticators urls 
avoid persistent cookies persistent cookie written file user system ephemeral temporary cookie stored browser memory disappears user exits browser 
error way browser user handles cookie file may accessible internet exposing user cookies knows look 
instance certain queries search engines produce cookie files accidentally placed web 
persistent cookie leaked file contains authenticator adversary simply copy cookie break user account 
addition user accesses account public system say library internet caf receives persistent authentication cookie system subsequent user system access account 
reasons persistent cookies considered private 
store authenticators persistent cookies 
limit lifetime authenticators design gracefully handle compromise tokens designed secret 
limit amount damage leaked authenticator cause limit lifetime 
authenticators stored user cookies rely cookie expiration field secure expiration 
client responsible enforcing expiration malicious client set lifetime arbitrarily 
netscape users manually extend expirations simply editing text file 
able indefinitely extend lifetime com cookie authenticator wsj com set cookie expire hours 
extremely alarming adversary stole cookie described section way revoke adversary access 
problem compounded cookie authenticator remained user password changed 
prevented com site easily revoking access compromised account 
prevent unauthorized cookie lifetime extensions include cryptographically timestamp value cookie store expiration time place server 
securely binding expirations authenticators limits damage caused stolen authenticator 
note authenticator stored cookie replayed regardless expiration time leaked 
definition client uses computation thing capable doing cookie send back server 
replay prevention desired authenticator kept confidential changed 
case necessary record received authenticators verify newly received authenticators replays 
bind authenticators addresses useful tie authenticators specific network addresses 
helps protect replay attacks making difficult adversary successfully reuse authenticator 
addition acquiring authenticator adversary appear originate network address authenticator 
may prematurely invalidate authenticators issued mobile dhcp users 
design section scheme performing client authentication 
design intended example simple system follows hints provided section 
claim scheme novel claim concepts design process extensively discussed literature 
brief security analysis schemes section 
scheme provides authenticator allows server verify authenticity request contents 
server explicitly control valid lifetime authenticator 
authenticator include information needed service request key refer session information stored server 
operation scheme shown 
assume user existing account server accessed username password 
start session server receives username password verifies sets authentication cookie user machine 
cookies widely supported system portable 
subsequent requests server include cookie allow server authenticate request 
design cookie ensures valid cookie created server possessing valid cookie authorized access requested content server 
scheme designed secure interrogative adversary believe schemes evaluated designed type adversary mind 
ssl server authentication provides confidentiality integrity layering design top ssl provide authentication system secure active adversary 
cookie recipe recipe cookie follows easily hints section 
create unforgeable authenticator includes explicit expiration time 
state cookies store authenticator client 
value cookie shown exp data digest mac exp data expiration time denoted expressed seconds past gmt 
data string optional parameter denoting arbitrary data server wishes associate client 
cookie includes mac cleartext expiration data 
cookie requires non malleable mac intractable generate valid ciphertext plaintext message related plaintext message known ciphertext 
adversary generate valid ciphertext server secret key plaintext matter samples valid plaintext ciphertext pairs adversary 
examples keyed non malleable macs hmac md hmac sha 
discussion selecting expiration time trade limiting damage done leaked authenticator requiring user 
yahoo example allows users specify expiration interval prefer authenticators control access sensitive data 
allows user control trade 
hand insensitive data sense server choice 
example newspaper want cookies valid user login procedure server stores authentication token cookie bob fu username password authentication token subsequent requests content request authentication token content day magazine allow sessions valid month user buying single issue 
value may information specific user server wishes access maintaining server state 
may session identifier username 
beware data encrypted sensitive information stored sensitive data needed recommend cryptographically random session identifier 
prevent information leaks compromising user privacy 
hand sensitive user information required handle small percentage content requests authenticator contain information needed service majority requests 
way server avoid doing possibly expensive look request 
server may choose leave empty removing data parameter cookie 
useful case authentication expire users essentially 
plausible example pay service newspaper 
authentication revocation authenticate user server retrieves cookie extracts expiration 
cookie expired server recalculates mac parameter cookie 
server entity knows key exchange authentication system 
properties function im ply valid cookie generated server 
long server generates cookies authenticated users client valid cookie valid user 
scheme provide mechanism secure revocation user session checks user valid account creates authentication token verifies authentication token expiration time 
easiest option server instruct client discard authentication cookie 
usually adequate applications 
client saved value cookie continue reuse value long explicit expiration time passed 
cases short session revocation unnecessary user access server session expires time server refuse issue new authenticator 
servers require secure revocation keep track session status server random session key personalized scheme server database 
session explicitly revoked server trusting client 
scheme allow simultaneous revocation authenticators accomplished rotating server key 
cause outstanding cookies fail verify 
users log 
useful finding unused accounts 
design alternatives interesting point scheme included expiration time cookie value 
way server access expiration date maintaining state 
explicit inclusion expiration date non malleable cookie provides fixed length sessions having trust client expire cookie 
possible merely session identifier require server state lead mistakes expiration left hands client 
schemes involve setting random session identifier user 
session identifier access user session information stored bob fu database server 
scheme allows client customizations functionally equivalent scheme potentially subject guessing attacks session identifier space 
adversary successfully guess session identifier system broken see section 
scheme provides means authenticating clients resistant guessing attacks session identifiers 
furthermore scheme provides option authenticating clients server state number clients 
system easier deploy systems 
session identifiers requires synchronized duplicated data servers single server coordinate requests potential bottleneck 
scheme allows server authenticate user minimum information dynamically shared servers 
addition authentication completes constant time time increases number users 
security analysis section informal analysis security properties design 
purpose discussion refer cookie halves plaintext verifier 
plaintext expiration concatenated user string verifier hmac plaintext 
discuss security scheme authenticator cookie received user server 
discuss mechanisms completing initial login 
forging authenticators adversary need log create valid authenticator offline 
adversary create plausible plaintext string security authenticator rests fact verifier calculated adversary key 
selected mac non malleable adversary forge new authenticator 
attacker may attempt extend capabilities associated authenticator 
include changing expiration date aspect data string allow unauthorized access server 
instance data string includes username adversary alter username allow access user account 
easy adversary change plaintext authenticator desired manner 
seen hmac non malleable intractable adversary generate valid ciphertext altered plaintext string 
adversary bring change authenticator accepted server 
authenticator hijacking interrogative adversary see messages pass user server 
hijack user authenticator 
eavesdropper see authenticator passes user server 
adversary easily perform replay attack 
system vulnerable hijacking adversary 
replay attack lasts long authenticator valid time adversary authenticator expiration time 
adversary ability create modify valid authenticator 
attack limited usefulness 
lifetime authenticator determines vulnerable system systems employ shorter authenticator lifetime tighter bounds damage successful eavesdropping adversary accomplish 
addition system protect eavesdropping adversary ssl provide confidentiality authenticator 
attacks mention briefly attacks schemes deal authenticator directly 
best known attack scheme section brute force key search 
server compromise breaks system adversary obtains key mac generate valid authenticators users 
random keys key rotation help prevent adversary mounting brute force key attacks see lenstra suggestions key size 
addition key rotation helps protect volume attacks adversary may able obtain key hash function adversary obtained great quantity data encrypted 
note hmac md hmac sha believed vulnerable type analysis 
believe prudent include key rotation decrease security scheme protects server compromise minimal cost server 
addition adversary obtain unauthorized access guessing user password see section guidelines preventing 
scheme provides user authentication 
protection server impersonation data integrity recommend ssl 
implementation performance client authentication scheme described section implemented perl lwp cgi digest modules 
tested implementation dual pentium iii mhz machines mb ram running linux smp kernel apache mod fastcgi 
ran local disk 
dedicated gigabit link round trip time connected machines 
microbenchmark performance ran trials hmac sha 
input crypt byte input byte salt 
input hmac sha byte input byte key 
crypt finished average sec trials completing sec 
hmac sha took average sec trials completing sec 
attribute variances context switching 
performance measure performance logins repeatedly retrieved bytes data web server authenticated client 
client cookie authentication scheme implemented perl server ran cookie authentication script fastcgi 
test consisted client presenting cookie authenticator described section server verifies authenticator performing hmac sha expiration date client 
order provide baseline comparison measured average performance plain basic authentication authenticated fastcgi script page 
scheme successive requests valid authentication information needed 
average latency ms request authentication basic auth fastcgi authentication fastcgi hmac sha cookie performance average service latency request 
measure fastcgi authentication obtain baseline comparison 
basic auth cleartext password authentication 
presents average time request sent client response received 
trials authentication faster ms similarly basic authentication trials faster ms plain fastcgi trials faster ms fastcgi trials hmac sha scheme took ms shows cost basic authentication ms request cost hmac sha scheme ms suspect non cryptographic factors string parsing file cause disparity microbenchmarks measurements 
note ssl order magnitude slower hmac sha cookie scheme 
single new ssl connection takes ms reasonable machine 
ssl client authentication session resumption run faster hmac sha cookie scheme ssl authenticates entire stream 
scheme runs hmac sha fewer bytes data request timestamp personalization data key 
related extensive body related authentication general web authentication particular 
highlight relevant examples 
studies design principles see abadi lampson :10.1.1.24.8879
general authentication protocols past years new authentication protocols developed including autha eke provably secure password authenticated key exchange secure remote password protocol 
furthermore groups simplifying standardizing password authentication protocols 
protocols suited web designed session initialization longrunning connections opposed short lived connections web browsers 
long running connections easily afford protocol involving exchange multiple messages short lived ones absorb overhead extra round trips connection 
additionally protocols require significant computation making undesirable loaded web servers 
time passwords prevent replay attacks 
lamport user password authentication scheme defends adversary eavesdrop network obtain copies server state hashed password file 
scheme way function 
haller implemented key time password system techniques lamport 
de quisquater extended lamport scheme zero knowledge techniques provide general access control mechanisms 
protocol user authenticate prove possession ticket 
scheme appropriate model web client authentication requires client perform computation modular exponentiation 
kerberos uses tickets authenticate users services :10.1.1.112.9002
kerberos ticket encrypted key known service kerberos infrastructure 
temporary session key protected encryption 
ticket approach differs greatly schemes tickets message preserving meaning adversary compromises service key recover session key 
adversary compromises key scheme mint verify tokens recover contents originally authenticated 
authentication encryption separated kerberos step 
amoeba distributed operating system cryptographically authenticated capabilities rights user 
proposed schemes authenticated capabilities xoring secret server key hashing result 
client authentication web falls design space 
web server wishes send user signed capability 
web specific authentication protocols specifications provide mechanisms authentication basic authentication digest authentication 
basic authentication requires client send username password clear part request 
pair typically resent preemptively requests content subdirectories original request 
basic authentication vulnerable eavesdropping adversary 
provide guaranteed expiration logout repeatedly exposes user long term authenticator 
digest authentication newer form authentication concept transmit cleartext passwords 
digest authentication client sends cryptographic hash usually md username password server provided nonce method url 
security protocol extensively discussed rfc 
digest authentication enjoys little client support supported popular apache web server 
main risk schemes successful attack reveals user password giving adversary unlimited access 
breaks facilitated existence freely available tools capable sniffing authentication exchanges :10.1.1.112.9002
secure sockets layer ssl protocol stronger authentication system provides confidentiality integrity optionally authentication transport level 
standardized transport layer security protocol 
runs top ssl provides cryptographic strength 
integration server allows server retrieve authentication parameters negotiated ssl 
ssl achieves authentication public key cryptography certificates requires public key infrastructure pki 
requirement main difficulty ssl authentication currently global pki anytime soon 
major certificate authorities exist space disjoint 
degree users avoid client certificates certificates practically incomprehensible non technical users 
arguments suggest merits pki answer network security problems somewhat exaggerated 
client support ssl non standard interoperability problems microsoft internet explorer netscape navigator client certificates interoperate performance concerns 
ssl decreases web server performance provides functionality applications need 
effort avoid ssl bergadano java applets secure transactions 
park identify security problems regular cookies network threats system threats cookie harvesting threats 
samar describes cookie distributed architecture single 
schemes field ad hoc schemes today perform web authentication making ssl authentication mechanisms 
schemes state management store authenticators client 
helps sites provide authentication web applications preserving performance 
schemes designed provide appropriately strong authentication environment deployed just schemes fatal flaws 
project internet investigating architectures frameworks technologies support cross realm authentication authorization access web pages 
group completed survey client authentication web universities combination kerberos client certificates authentication cookies 
complete design 
open market patented scheme creates folded cryptographic hash server secret session identifier parameters 
yahoo cookie authentication scheme computes md server secret user identifier timestamp parameters 
scheme documented web site 
community system acs sha cookie authentication scheme 
schemes secure interrogative adversaries appear vulnerable eavesdroppers 
microsoft passport offers managed cookie authentication scheme 
microsoft mints cookie authenticator user logs 
vendors participating passport service verify authenticator determine authenticity authorization 
details authentication scheme published white indicates microsoft shares unique symmetric key vendor 
keys mint verify authenticators 
provide designers implementers clear framework description limitations requirements security models specific web client authentication 
set hints design secure client authentication scheme experience gained informal survey commercial schemes 
survey showed sites secure interrogative adversary 
proposed authentication scheme secure interrogative adversary 
web sites large range requirements authentication scheme meet 
currently ssl remains costly client authentication infrastructures remain hardly deployed 
partially explains home brew schemes exist 
web community ought recommend secure standard secure practices hope eliminate proliferation insecure home brew authentication schemes 
hope help schemes resisting common attacks 
information source code download technical report visit web site athttp cookies lcs mit edu 
acknowledgments david andersen ian anderson jeffrey baker richard andrew boardman chen david dittrich paul hill frans kaashoek david mazi res robert morris steve morris park matt power ron rivest jerry saltzer richard smith win anonymous reviewers members pdos group mit 
companies talked security web sites com wsj com yahoo com 
students mit applied security reading group pdos lcs mit edu deserve credit genesis project 
duncan hines manufacturing materials necessary sustain efforts 
mart abadi roger needham 
prudent engineering practice cryptographic protocols 
technical report dec systems research center june 

personal communication january 
mihir bellare anand desai david pointcheval phillip rogaway 
relations notions security public key encryption schemes 
hugo krawczyk editor proceedings advances cryptology crypto volume lecture notes computer science pages santa barbara ca 
springer verlag 
mihir bellare phillip rogaway 
autha protocol password authenticated key exchange 
technical report ieee march 
grouper ieee org groups passwd html autha 
steven bellovin michael merritt 
encrypted key exchange password protocols secure dictionary attacks 
proceedings ieee symposium security privacy pages oakland ca may 
bergadano 
secure www transactions standard java applets 
proceedings rd usenix workshop electronic commerce pages boston ma september 
victor philip mackenzie patel 
provably secure password authenticated key exchange diffie hellman 
preneel editor proceedings advances cryptology eurocrypt volume lecture notes computer science bruges belgium may 
springer verlag 
ccitt 
recommendation directory authentication framework 
cert 
malicious html tags embedded client web requests 
ca february 
www cert org advisories ca html 
dominique de jean quisquater 
better login protocols computer networks 
preneel vandewalle editors proceedings computer security industrial cryptography volume lecture notes computer science pages 
springer verlag 
tim christopher allen 
tls protocol version 
rfc network working group january 
danny dolev cynthia dwork moni naor 
cryptography 
proceedings rd acm symposium theory computing pages new orleans la 
carl ellison bruce schneier 
risks pki re told public key infrastructure 
computer security journal 
roy fielding james gettys jeffrey mogul henrik frystyk larry masinter paul leach tim berners lee 
hypertext transfer protocol 
rfc network working group june 
fips 
secure hash standard 
department commerce national technical information service springfield va april 
john franks phillip hallam baker jeffrey scott lawrence paul leach ari luotonen lawrence stewart 
authentication basic digest access authentication 
rfc network working group june 
kevin fu frans kaashoek david mazi res 
fast secure distributed read file system 
proceedings th usenix symposium operating systems design implementation osdi pages san diego ca october 
kevin fu emil sit smith nick feamster 
dos don ts client authentication web 
technical report mit laboratory computer science may 
www lcs mit edu 
shafi goldwasser silvio micali ronald rivest 
digital signature scheme secure adaptive chosen message attacks 
siam journal computing april 
neil haller 
key time password system 
proceedings isoc symposium network distributed system security pages san diego ca february 
neil haller 
key time password system 
rfc network working group february 
ieee standard specifications public key cryptography additional techniques 
www manta ieee org groups 
john kohl 
encryption kerberos network authentication 
brassard editor proceedings advances cryptology crypto volume lecture notes computer science pages 
springer verlag 
hugo krawczyk mihir bellare ran canetti 
hmac keyed hashing message authentication 
rfc network working group february 
david kristol lou 
state management mechanism 
rfc network working group october 
leslie lamport 
password authentication insecure communication 
communications acm november 
butler lampson :10.1.1.24.8879
hints computer system design 
proceedings th acm symposium operating systems principles pages woods nh 
lenstra eric 
selecting cryptographic key sizes 
www com pdf november 
thomas lawrence stewart stephen morris andrew payne 
internet server access control monitoring systems 
patent open market january 
richard li shah 
community system acs security design 
developer com doc security design html 
alfred menezes paul van oorschot scott vanstone 
handbook applied cryptography 
crc press series discrete mathematics applications 
crc press 
keith moore ned freed :10.1.1.127.8377
state management 
rfc network working group october 
robert morris ken thompson :10.1.1.127.8377
password security case history 
communications acm november 
clifford neuman theodore ts kerberos authentication service computer networks 
ieee communications magazine september 
park ravi sandhu 
secure cookies web 
ieee internet computing july august 
microsoft passport 
www passport com 
eric 
ssl tls designing building secure systems 
addison wesley 
vipin samar 
single sign cookies web applications 
proceedings th ieee workshop enabling technologies infrastructure collaborative enterprises pages palo alto ca 
project 
middleware internet edu 
dug song :10.1.1.112.9002

www monkey org 
jennifer steiner clifford neuman jeffrey schiller :10.1.1.112.9002
kerberos authentication service open network systems 
proceedings winter usenix pages dallas tx february 
paul syverson stuart stubblebine david goldschlag 
unlinkable serial transactions 
editor proceedings financial cryptography volume lecture notes computer science bwi 
springer verlag 
andrew tanenbaum mullender robbert van renesse 
sparse capabilities distributed system 
proceedings th international conference distributed computing pages cambridge ma 
david wagner ian goldberg 
proofs security unix password hashing algorithm 
okamoto editor proceedings advances cryptology asiacrypt volume lecture notes computer science kyoto japan december 
springer verlag 
thomas wu 
secure remote password protocol 
proceedings internet society network distributed system security symposium pages san diego ca march 
web mobile code security 
www securityfocus com forums www mobile code 
yahoo personal communication november 

