keywords survey schema versioning issues database systems john roddick advanced computing research centre school computer information science university south australia levels sa australia roddick edu au schema versioning number related areas dealing general problem multiple heterogeneous schemata various database related tasks 
particular schema versioning weaker companion schema evolution deal need retain current data software system functionality face changing database structure 
schema versioning schema evolution offer solution problem enabling intelligent handling temporal mismatch data data structure 
survey discusses modelling architectural query language issues relating support evolving schemata database systems 
indication directions schema versioning research 
schema evolution schema versioning evolving database systems 

background database software systems rarely stable initial implementation 
estimates differ agree programmer effort arises result system modifications implementation facilitating changes complicated large numbers programs large quantities data involved 
system modifications result changes database structure relatively frequent sj berg 
result modifying database schema common troublesome occurrence database administration 
significant industrial concerns viewpoint database system manufacturers information system users 
schema evolution stronger companion schema versioning arisen response need retain data entered schema definitions amended 
formal definition schema evolution loose definition ability database schema evolve loss existing information 
schema evolution schema versioning considered contribute solution number identified deficiencies current database systems research example database support legacy systems stonebraker non industrial strength databases selinger 
interest evolving database systems predominantly resulted research areas 
firstly logical extension temporal data modelling temporal databases secondly object oriented paradigm specifically view producing architectures suitable cad engineering domains 
growing bibliography schema evolution research roddick lists papers area handful dated prior 
research connection relational clifford dadam mckenzie snodgrass roddick object oriented databases banerjee skarra zdonik zdonik stein chou kim kim chou kim nguyen osborn lerner habermann 

pragmatic considerations looking detail issues demand evolving schemata driven user community section discusses briefly constraints practical considerations proposed solution problems 
recognised schema modifications need greater lesser extent guided database administrator 
desirable schema modification require minimum level intervention appropriate change performed 
details implementation decisions strict lazy data conversion example dependent operational environment user requirements direct concern database administrators 
probably undesirable database design process totally automated 
second schema modification symmetric possible existing data viewed new schema definitions data recorded viewed previous schemata 
promote stability operation requiring existing applications recompiled 
addition changes reversible possible erroneous changes removed 
implies example data definition functions operate 
third far possible modifications expressed terms definable algebraic operations schema allow formal verification schema change system 
provide known complete mechanism schema manipulation 
furthermore supplying large numbers schema change operators changes larger scale available composition elementary operations 
models require level transaction time support schema definitions order identify versions requirement support time base architecture see parallels discussed 
advantages doing examined depth see example snodgrass ahn roddick patrick tansel defeat purpose enforce prerequisite 

outline surveys field schema versioning database systems organised follows 
section provides number definitions including refinements jensen 

associated areas data view integration temporal data modelling discussed 
sections discuss various issues schema versioning outlining current proposals prototypes 
section looks data modelling issues section looks architectural issues section looks query language considerations 
section discusses issues fit easily headings 
section draws issues presents number areas research 

handling heterogeneous schemata section gives definitions discusses wider field accommodating heterogeneous schemata database systems 
completeness section introduces concepts data view integration temporal data modelling discusses relationship schema evolution 

schema modification evolution versioning distinction modification evolution versioning database schemata cases confused distinction various usages terms 
definitions implicitly consistent majority research dealing schema evolution versioning issues beech rao hulten osborn leonard monk sommerville included author glossary temporal database concepts jensen 
definition schema modification schema modification accommodated database system allows changes schema definition populated database 
definition schema evolution schema evolution accommodated database system facilitates modification database schema loss existing data 
definition schema versioning schema versioning accommodated database system allows accessing data retrospectively user definable version interfaces 
number points definitions simplest sense schema evolution imply full historical support schema ability change schema definition loss data 
practice retention past definitions appropriate 
contrast schema versioning simplest form requires history changes maintained enable retention past schema definitions 
significant difference evolution versioning ability users identify quiescent stable points definition label definition force time 
schema evolution require ability version data far changed schema considered new version 
require database system provide viewing mechanism past schema definitions 
iii 
schema changes necessarily result new version 
typically schema changes finer grain definable versions 
iv 
versions tend labelled transaction time schema change user defined method schema evolution changes referred time change 
discussed accommodation schema versioning presents various open problems relating update data historical schemata 
definition schema versioning refined distinguishing retrieval update activity follows definition partial schema versioning partial schema versioning accommodated database system allows viewing data retrospectively user definable version interfaces 
data updates allowable designated normally current schema definition 
definition full schema versioning full schema versioning accommodated database system allows viewing update data retrospectively user definable version interfaces 
noted term evolutionary relation systems genetic natural systems approach 
example van presents methodology enables development structurally optimised data models van 
approach searches solution space possible internal representations conceptual model random mutation 
evolutionary approach accommodation schema evolution populated databases discussed 

data view integration closely associated research area data view integration aims facilitate merging schemata update viewing purposes 
research area largely directed integrating heterogeneous systems applicability evolution schemata clear 
miller ioannidis ramakrishnan example investigate concept information capacity schema decide data view integration lossless 
taxonomy translation ability schemata distinguished ability retain information update retrieval 
aspect investigated orlowska ewald ewald orlowska view schema integration schema evolution process integration schemata effected choosing applying facts held 

method allows integration structurally similar semantically dissimilar datasets dual model maintains separate representations structure semantics 
area includes atzeni 
larson navathe elmasri 
knowledge author schema view integration temporal database systems investigated see 
terms schema evolution data integration view integration schema versioning may considered flavours general problem multiple heterogeneous schemata various database related tasks 
taxonomy research emphases various areas may promoted examining temporal relationships data format schemata tasks required simplicity table data retrieval data updating effecting structural alterations 
tabulated schema retrieval format data stored 
cases populated tractable online database assumed 
primary schema case schema evolution schema versioning corresponds current schema case data view integration corresponds integrated schema 
similarly secondary schema corresponds historical local schemata user views appropriate 
pathological cases user view equals integrated view local schema integrated schema shown 
schema function data held format corresponding data retrieval primary primary schema se sv di vi data update se sv di vi secondary schema se sv di se sv di structural alterations se sv secondary primary schema sv vi fsv vi secondary schema sv vi di fsv vi di key se schema evolution sv schema versioning partial full fsv full schema versioning di data integration vi view integration little published research table 
connection areas interest aims schema handling research similar data view integration aspects common accommodation historical data ability retain cases influence evolutionary history schemata enable necessitate different treatment problem 

temporal database systems concepts schema versioning similar associated temporal database systems completeness brief overview temporal database systems 
readers directed sources far complete treatments area clifford snodgrass ahn dean mcdermott roddick patrick tansel 
aspects temporal databases relevant survey discussed 
temporal data models concerned accommodation inherent temporal nature object world time dependent recording facts representation object world database system 
temporal data models concerned orthogonal time dimensions real world time referred temporal database literature valid time database system time referred transaction time 
temporal database systems accommodating known valid time databases transaction time databases databases depending capacity handle temporal dimensions 
proposed query languages defined handle data augmented allow user specify transaction time expressions data retrieval valid time expressions data update transaction time function time update specified user 
furthermore time dimensions may referenced ways time continuum known absolute time referencing events commonly termed relative indirect time referencing 
term temporal density refers manner data values inferred time points explicitly recorded database 
various mechanisms proposed including stepwise change discrete event continuous change 
purposes schema evolution stepwise change database objects usually assumed 
common schema versioning schema evolution temporal extensions defined number database paradigms including relational extended relational object oriented deductive 

data modelling issues miller 
shown order update data stored different schemata opposite schemata equivalent 
valid instances schema able stored vice versa 
possible generally foresee requirements database changes required data structure active historical schemata changed general possible create new version supersedes old strong condition impose cases 
papers dealing issue modelling evolution databases adopt weaker concept partial schema versioning data stored historical schema may viewed schema may updated current active schema 
level support necessitates imposing form restriction schema modifications achieved database reorganisation data coercion 
section discusses various data modelling issues associated evolving schemata 
expected number issues raised revisited section characteristics query language design discussed 

domain type evolution significant evolution domain simplest modifications data model represents non trivial amendment database schema 
consider trivial common example suggested roddick salary relation holds fields staff id position code salary 
example salary relation roddick suppose existing position codes replaced new codes new incompatible domains example position code entirely domain digit integers 
database administrator faced problems arising retention current data position code attribute defined hybrid alphanumeric despite new position codes purely numeric 
ii 
attribute required store old codes long attribute retained 
old field related new applications 
iii 
position histories retired employees new format position code may allocated 
example consider reduction size domain primary key worst case may result illegal duplicate values 
discuss data interpretation problems caused change domain 
number examples changes semantics domain may result lost misleading information 
examples grouped sets object system generated cardinality granularity changes database administration schema considered repository knowledge evolving structure database 
paradigms may hard isolate idea knowing schema represent equivalent various paradigms 
generated field recycling data encoding changes 
suggestions proposed solution emphasise importance capturing semantics domain identification semantic content metadata replacing problems semantic heterogeneity tractable problems syntactic heterogeneity 
strong suggestion semantic capabilities data dictionaries 
schemata enhanced tied closely interpretation values database 
domain evolution problem strongly associated expressiveness structure type system adopted database system 
sql approach character strings exact numeric types approximate numeric types requires database administrator intervention cast available sql weak typing adopted 
tsql language design proposal example utilises sql casting mechanism rules data conversion fall back position null value data convertible domain evolution example distinction schema evolution schema versioning 
schema evolution existing instances converted new format mechanisms achieving discussed section existing applications rendered incompatible 
versioning promotes program compatibility leaving existing definition place zdonik 

relation class evolution relation class evolution include attribute relation class definition redefinition deletion class lattice modification 
temporal database paradigm may include attribute relation class deactivation reactivation 
suggestions literature indicate modification database schema accommodate changes relation class level achieved number ways 
instance object oriented paradigm common method establish set invariants ensure semantic integrity schema set rules primitives effecting schema changes banerjee lerner habermann relational model set atomic operations proposed result consistent far possible reversible database structure shneiderman thomas 
important evolutionary history database relational class structure traceable 
ddl statements logically complete users need resort exercise known tsql language design proposal aimed define temporal extension sql standard 
relevant papers relating effort include hsu jensen snodgrass snodgrass roddick snodgrass snodgrass dml support directly modify data clear specification action 
earlier roddick roddick richards taxonomy schema evolution proposed uses transaction time meta relation approach 
previous schemata may constructed temporal rollback meta relations 
schema change requirements involve composite operations mechanism schema level ddl commit rollback functions suggested separate data level dml commit rollback operations 
addition data level commit operations function differently schema level transactions active 
example data updated revised schema may inapplicable schema change committed may considered appropriate allow data committed outside scope current session schema level commit issued 
allows definition population attributes completed molecular operation 
example sequence database operations may issued test program add attribute relation populate attribute data level commit run test programs tests successful schema level commit schema level rollback noted issue long lived nested transactions subject current research proposals area isolated research 
see discussions section multiple concurrent versions 

algebras supporting schema evolution relational model codd extension codd provide logically complete language describe data transformations codd number time related algebras proposed extend static relational model clifford tansel tansel clifford mckenzie snodgrass gadia johnson tuzhilin clifford 
survey valid time algebras mckenzie snodgrass includes evaluation twelve representative algebras various criteria 
proposals mckenzie snodgrass mckenzie snodgrass mckenzie extended deal explicitly schema evolution nomenclature outlined jensen adopted term refers accommodation valid time time fact true modelled world transaction time time physically recorded database 
previous taxonomy snodgrass ahn 
architectural issues 
schema conversion mechanisms number suggestions proposed conversion schema physical level 
firstly complete schema converted new version orion banerjee kim 
method conceptually simple prohibits parallel schema versions required application environments 
approach skarra zdonik encore skarra zdonik zdonik version class level permit parallel changes long different classes 
secondly kim chou leonard system views contexts constructed schema evolution achieved view creation 
allows multiple concurrent versions schema 
relational equivalent considered creation completed meta schema 
thirdly objects self descriptive making object schema modification homogeneous 
method potentially powerful leads problems example schema versioning method difficult rejected favour kim chou approach subsequent system 

data conversion mechanisms currently change schema required changes database administrator propagated data immediately parallels concept strict evaluation functional programming languages 
results database unavailable data modified encourages centralised schema change operation 
method exemplified strict eager early conversion method adopted gemstone stein change schema results immediate propagation change data 
results longer schema modification time reduces subsequent data access time 
interesting extension approach lerner habermann data transformation table generator produce routines assist database administrator data conversion 
alternative tan katayama propose lazy mechanism converting data database current version required 
assumptions routines exist may run time effect conversion lazy evaluation method advantages changes schema rapidly term temporal refer widely data models support aspect time 
similarly term historical replaced valid time term rollback replaced term transaction time 
ii 
data changed required identification obsolete data required iii 
immediate withdrawal schema change operation possible effect 
furthermore compensating schema changes may result physical data change method proposed orion argues logical conversion banerjee kim chou 
system screens proposed translates attribute required format data access time 
conversion required 
method schema modification overhead gemstone data access overhead lazy conversion method tan katayama 
method leads database increasing complexity needing appropriate quiet points 
skarra zdonik introduce method similar orion identifiable versions defined periodically link instances database skarra zdonik zdonik 
schema change may sufficient create new version individual instances differ version interface dealt error handling routine 
access data may involve instance variables modified twice time ensure adhere version interface second time conversion required format 

access right considerations object oriented database systems methods attributes inherited classes higher hierarchy schema evolution changes result violations access rights 
consider example change employee class attributes inherited engineer class modifying user legitimate access 
change definition inherited attributes considered violate access rights class 
systems ownership class imply ownership instances class 
gemstone ownership class considered sufficient authorisation allow modification instances class subclasses may inherit attributes 

concurrency considerations concurrent schemata multi user environment may possible modify database schema user currently accessing database 
aspect explored iyer 
problems overcome schema versioning accommodated significant static schema evolution supported 
problem acute users modifying related schema definitions time 
consider example reversed business decision hold cents financial values 
multiple concurrent versions proposed number researchers notably zdonik proposes concept surface consistency 
approach users may read modify update schema version resulting probably inconsistent versions consistent remaining definition database 
way surface consistency developed linking consistent parts database definition 
new transactions required choose alternative surfaces consistency transaction started system conversational merging coalesce divergent paths 
aspect relates meta level transactions discussed section 
multiple versions permitted multiple schema version tested refined alternatives current schema implementation time conversational merging take place form merging requirements new versions imposition translation functions current unified new version 

issues query language support possibility multiple versions coexisting database system availability data retrievable versions current apparent 
discussed earlier research temporal databases qv 
ben zvi snodgrass illustrated difference temporal perspective users adopt viewing database data 
adding facility schema evolution users view data independent mechanisms 
valid time time line pertaining reality ii 
transaction time time data stored database iii 
schema time time indicating format data schema active time examined widely concern 
provides mechanism ensures data adheres specified version 
time object model structure changed meta database equivalent valid time considered fourth type time 
sections examine issues incorporating schema time query language published part sql extension roddick 
parts appeared current tsql collaborative effort accommodate temporal support sql standard iso roddick snodgrass snodgrass 

levels support schema evolution query languages approaches may taken handling changing database structure database query languages 
ignored 
assumed schema immutable set queries old schema definition illegal 
current assumption database query languages 
note preclude temporal database systems long data adhere schema definition 
ii 
restriction included schema changes may taken place interval satisfy query 
iii 
accommodated fully allowing database queries asked temporal dimensions valid transaction schema time query dimensions find employees earned recorded january report details format march 
approach provide maximum resilience application programs 
iv 
schemata allowed change effective schema definition schema containing attributes defined relation points transaction time intervals satisfy query 
schemata allowed change effective schema definition completed schema containing union attributes defined relation point transaction time intervals satisfy query cf 
clifford warren roddick 
approaches simple overly restrictive practical situations schemata change qv 
sj berg 
third approach expressive simplifications approach 
option attractive alternative option iii 
reasons degrades static case case schema evolution relation 
ii 
query language semantics intuitively fashioned degrade conventional static database query languages 
iii 
enables relevant attributes displayed intuitively irrelevant attributes displayed 
iv 
conceptually simple simple static case 
enables database schema free inactive attributes providing mechanism retrieval historical data 
researchers identified situations time dimensions necessary 

completed schemata necessary obtain complete listing data held database purposes audit backup 
temporal modelling research clifford warren examine concept completed relation relation containing tuple key existed relation clifford warren 
concept applied schema create relational database terminology completed schema relations containing union attributes defined general domain include domain values 
cases general domain necessary duplicate attribute different domains hold necessary values 
completed schema considered overarching version extract data versions 
facility difficult implement proposals notably due searching necessary compile completed schema 

problems null values valued null logic proposed zaniolo roth korth silberschatz presupposes static schema 
attributes relations undefined point time introduces new semantics null values database 
zaniolo valued null logic extended dimension follows attribute applicable attribute inapplicable applicability unknown table null value interpretations attribute defined attribute defined value known value unknown value known value unknown value unk ni example attributes currently defined value dependent reason non existence 
intuitively student cease marital status simply information longer collected 
case value unknown null appropriate interpretation missing data 
change object system subdivision university faculties may result additional attributes introduced 
case attribute inapplicable appropriate extant data 
schema valid time support temporal models proposed literature suggest duality time lines respect stored data date real world event occurred date data event stored database 
duality exists definition schema date schema change take effect date schema modification recorded meta database 
mckenzie snodgrass propose extension relational algebra support schema transaction time argue schema valid time necessary schema evolution defines reality modeled database mckenzie snodgrass 
argued reasons advanced holding valid time data rollback auditing advanced accommodating schema valid time 
utility adding aspect query language largely dependent user auditing requirements information system system capacity hold data 

schema time projection relation project operator involves specification subset relation attributes base relation viewed 
versioning requires determine effective schema data retrieval considered number possible views underlying data 
term schema projection describe viewing operation foremost aspects method schema specification method effective schema construction 

implicit explicit specification specification schema version required may implicit rest query explicitly stated user 
implicit number ways schema selected including problems null values increasingly complex associated problems fuzzy data unreliable data unavailable data granularity mismatch 
example researchers looking access authorisation especially oodbms context suggested null indicating authorised gal oz fernandez 
researchers including author suggested nulls temporally inapplicable attributes roddick attribute values representing higher level concepts correct data 
table example shows zaniolo valued null logic may expanded valued null logic current understanding null set 
different semantics 
example indicates database holds known value applicable attribute schema prohibits display structural security reasons 
outside scope subject 
see atzeni de 
current schema default schema may current schema iii 
function implicit explicit transaction time query iv 
function implicit explicit valid time query 
option simplest need accommodate legacy applications arguably attractive 
require temporal query language support addition schema versioning may provided separately 
alternatively user may explicitly state version specifying version date specifying version name applicable iii 
specifying transaction time interval specified query iv 
specifying valid time interval specified query 
option allows measure program stability allowing embedded database queries application specify version compile time 
require temporal query language support 

simple constructed schemata addition aspect explicit specification schema time may event schema current specified time interval function schemata current specified period 
results schema definition defined point time 
mode schema specification termed simple 
simple schema specification sufficient give absolute time version name 
schema constructed active versions specified implied interval 
obvious functions intersection union completion attributes active relations period 

schema time selection schema time selection access data schema employed store data format data currently adheres 
may necessary systems order access old format data 
discussed earlier ability remove erroneous schema changes linked mechanisms invoked changes required data 
query language design viewpoint largely architectural considerations approaches result data held heterogeneous formats may excessively old 
situations query language support periodic updating data providing selection predicates indicating schema format time 
note transaction time values temporal query languages may necessarily sufficient indicate date modification user modification system performance purposes 

version naming versioning schemata requires method version naming adopted 
user defined naming convention system defined naming convention system defined timestamping mechanism 
may employed new schema committed follows new version created referenced function time creation user defined name ii 
new version created referenced function time creation iii 
new version created 
may multiple evolutionary transactions versions 
naming versions occur schema level commit time reasons 
firstly query languages including sql transaction start command secondly version naming required schema change committed 

casting output attribute domains directly necessary schema evolution casting user defined conversion mechanism sql language standard may provide stability applications embedded queries allowing applications coerce data value required format 
conversion routines intuitively simple null specified value may cases conversion possible 
earlier roddick user defined value essentially second null value proposed datum incompatible target format 

related research issues number research areas related problems database schema versioning evolution 
example sj berg investigates quantification schema changes database systems order understand ways schema changes applied actual systems development 
knowledge may influence architectural considerations databases schema evolution support instance choice lazy eager data conversion 
temporal databases concept vacuuming allows physical deletion temporal data cases utility holding data outweighed cost doing jensen 
similar consideration retention old schema definitions especially cases data exists adhering version physically referring transaction time values period definition active 
roddick snodgrass pragmatic positions proposed schema definitions pre date data format transaction time values considered obsolete deleted old schema definitions considered valuable independent data exists may deleted special form vacuuming 
sake simplicity option adopted roddick snodgrass options worth research 

research introduced area schema versioning schema evolution database systems including associated areas query language support 
various prototype systems developed ideas starting incorporated commercial systems particularly object oriented systems significant research areas remain 
particular issues need addressed detail 
ability accommodate schema evolution existing database systems 
includes accommodating schema evolution existing query languages 
relationship database schema evolution evolution software systems 
iii 
pragmatic limitations automated schema evolution 
extent database system assume existing data accommodated revised structure dba required direct changes 
prototype database system boswell currently constructed aims incorporate schema evolution structure driven changes transient inductively generated facts discovered data mining changes considered update driven schema evolution roddick richards 
issues discussed part larger project aimed capturing dynamic nature database systems 
ideas contained proposed background temporal extension sql standard tsql 
giving background discussions initiative available line tsql doc directory ftp cs arizona edu anonymous ftp information initiative may obtained prof richard snodgrass university arizona 
acknowledgments acknowledge helpful support comments prof tom richards la university dr noel monash university prof chris marlin university prof richard snodgrass university arizona 
done study leave la university victoria australia university south australia 
research supported part research university south australia 
anonymous referees useful comments previous version article 
leonard 
management schema evolution databases 
proc 
th international conference large databases barcelona spain 
lohman sernadas camps eds 
morgan kaufmann san mateo ca 


temporally oriented data definitions managing schema evolution temporally oriented databases 
data knowl 
eng 

atzeni ausiello batini 
inclusion equivalence relational database schemata 
theoretical computer science 

atzeni de 
relational database theory 
benjamin cummings redwood city sa 
banerjee chou kim woelk 
data model issues object oriented applications 
acm trans 

inf 
syst 

banerjee chou kim korth 
schema evolution object oriented persistent databases 
proc 
th advanced database symposium tokyo 

banerjee chou kim korth 
semantics implementation schema evolution object oriented databases 
acm sigmod conference sigmod record 

beech 
generalised version control object oriented database 
proc 
th ieee international conference data engineering los angeles ca 
ieee computer society press 

ben zvi 
time relational model 
ph thesis university california los angeles 
hulten 
version control object oriented architecture 
object oriented concepts databases applications 
kim lochovsky eds addison wesley acm press new york 

maier stein williams williams 
gemstone data management system 
object oriented concepts databases applications 
kim lochovsky eds acm press new york 

chou kim 
versions change notification object oriented database system 
proc 
th acm ieee design automation conference 
class evolution instance adaptation 
technical report cmu cs 
carnegie mellon university pa clifford 
temporal data management models systems 
new directions database systems ch 

ablex publishing norwood 
clifford 
historical relational data model algebra lifespans 
proc 
rd ieee international conference data engineering los angeles ca 
ieee computer society press 

clifford tansel 
algebra historical relational databases views 
sigmod rec 

clifford warren 
formal semantics time databases 
acm trans 
database syst 

codd 
relational model large shared data banks 
commun 
acm 

codd 
relational completeness data base sublanguages 
data base systems 
courant computer symposia series vol 

prentice hall englewood cliffs 

codd 
extending database relational model capture meaning 
acm trans 
database syst 

early version nd australian computer science conference hobart tas 
dadam 
managing schema versions time versioned non normal form relational database 
technical report 
ibm heidelberg scientific center germany 
published proc 
buro technik und wissenschaft 
darmstadt west germany springer verlag german 
dean mcdermott 
temporal database management 
artif 
intell 

ewald orlowska 
theoretical approach understanding relational schema evolution 
technical report 
key centre software technology university queensland 
gadia 
homogeneous relational model query languages temporal databases 
acm trans 
database syst 

gal oz fernandez 
model methods access authorisation objectoriented databases 
proc 
th international conference large databases dublin ireland 
agrawal baker bell eds 
morgan kaufmann palo alto ca 

perl neuhold sheth 
structural schema integration full partial correspondence dual model 
inf 
syst 

hsu jensen snodgrass 
valid time projection tsql 
document 
university arizona 
available tsql commentary tsql language design committee 
hsu jensen snodgrass 
valid time selection tsql 
document 
university arizona 
available tsql commentary tsql language design committee 
iso 
information processing systems database language sql integrity enhancement 
iso standard 
international standards organisation 
available australian standard american standard ansi 
jensen 
consensus glossary temporal database concepts 
sigmod rec 

technical report department mathematics computer science aalborg university denmark november 
jensen 
vacuuming tsql 
tsql commentary tsql language design committee 
kim chou woelk 
features orion objectoriented database system 
object oriented concepts databases applications 
kim lochovsky eds acm press new york 

kim chou 

versions schema object oriented databases 
proc 
th international conference large databases los angeles ca 
bancilhon dewitt eds 
morgan kaufmann palo alto ca 

kim woelk 
architecture orion generation database system 
ieee trans 
knowl 
data eng 

larson navathe elmasri 
theory attribute equivalence databases application schema integration 
ieee trans 
softw 
engng 

lerner habermann 
schema evolution database reorganisation 
sigplan 


issues software maintenance 
acm comput 
surv 

johnson 
tra model temporal relational algebra 
proc 
ifip tc wg working conference temporal aspects information systems sophia antipolis france 
rolland bodart leonard eds 
elsevier science publ 
north holland amsterdam 

mckenzie 
algebraic language query update temporal databases 
ph thesis university north carolina 
mckenzie snodgrass 
extending relational algebra support transaction time 
sigmod rec 

mckenzie snodgrass 
scheme evolution relational algebra 
technical report 
department computer science university north carolina chapel hill nc 
mckenzie snodgrass 
supporting valid time historical algebra evaluation 
technical report tr 
computer science department university north carolina chapel hill 
mckenzie snodgrass 
schema evolution relational algebra 
inf 
syst 

mckenzie snodgrass 
evaluation relational algebras incorporating time dimension databases 
acm comput 
surv 

miller ioannidis ramakrishnan 
information capacity schema integration translation 
proc 
th international conference large databases dublin ireland 
agrawal baker bell eds 
morgan kaufmann palo alto ca 

monk sommerville 
model versioning classes object oriented databases 
proc 
th british national conference databases aberdeen 
gray lucas eds 
springer verlag 

monk sommerville 
schema evolution oodbs class versioning 
sigmod rec 

rao 
incremental mechanism schema evolution engineering domains 
proc 
th ieee international conference data engineering los angeles ca 
ieee computer society press 

nguyen 
schema change propagation object oriented databases 
proc 
ifip th world computer conference san francisco ca 
ritter ed 
north holland 

nguyen 
schema evolution object oriented database systems 
data knowl 
eng 

orlowska ewald 
meta level updates evolution fact schemata 
technical report 
key centre software technology department computer science university queensland 
orlowska ewald 
schema evolution design integration fact schemata 
research practical issues databases proc 
rd australian database conference 
srinivasan eds world scientific la university 

osborn 
role polymorphism schema evolution object oriented database 
ieee trans 
knowl 
data eng 


un de versions pour la cao en architecture 
doctoral thesis aix 
stein 
class modification gemstone object oriented dbms 
sigplan 
proc 
oopsla 

roddick 
dynamically changing schemas database models 
aust 
comput 

roddick 
schema evolution database systems annotated bibliography 
sigmod rec 

updated version bibliography may obtained author 
roddick 
sql se query language extension databases supporting schema evolution 
sigmod rec 

roddick 
implementing schema evolution relational database systems approach historical schemata 
technical report 
department computer science computer engineering la university 
roddick 
schema evolution database systems updated bibliography 
technical report cis 
school computer information science university south australia 
earlier version appeared sigmod rec 
vol 
pp 


roddick richards 
taxonomy schema versioning relational entity relationship models 
proc 
th international conference entity relationship approach dallas texas 
elmasri ed 

appears lecture notes computer science springer verlag 
roddick richards 
handling discovered structure database systems 
ieee trans 
knowl 
data eng 
accepted publication 
roddick patrick 
temporal semantics information systems survey 
inf 
syst 

roddick snodgrass 
transaction time support tsql 
tsql commentary tsql language design committee 
roddick snodgrass 
schema versioning support tsql 
tsql commentary tsql language design committee 
roth korth silberschatz 
null values nested relational databases 
acta inf 


algebra query language historical data model 
comput 

selinger 
predictions challenges database systems year 
proc 
th international conference large databases dublin ireland 
agrawal baker bell eds 
morgan kaufmann palo alto ca 

shneiderman thomas 
architecture automatic relational database system conversion 
acm trans 
database syst 

sj berg 
measuring schema evolution 
technical report fide 
department computer science university glasgow 
sj berg 
quantifying schema evolution 
inf 
softw 
technol 

skarra zdonik 
management changing types object oriented database 
sigplan 
proc 
oopsla 

skarra zdonik 
type evolution object oriented database 
research directions object oriented programming 
shriver ed 
mit press cambridge ma 

snodgrass 
temporal query language tquel 
acm trans 
database syst 

snodgrass 
schema specification tsql 
tsql commentary tsql language design committee 
snodgrass ahn 
taxonomy time databases 
sigmod rec 

snodgrass ahn 
temporal databases 
ieee computer 

snodgrass ahn batory clifford elmasri jensen fer kline kulkarni leung roddick segev soo sripada 
tsql language specification 
sigmod rec 

iyer 
databases concurrently usage 
technical report tr 
ibm santa teresa laboratory 
stonebraker agrawal dayal neuhold reuter 
dbms research crossroads vienna update 
proc 
th international conference large databases dublin ireland 
agrawal baker bell eds 
morgan kaufmann palo alto ca 

tan katayama 
meta operations type management object oriented databases lazy mechanism schema evolution 
proc 
international conference deductive object oriented databases dood kyoto japan 
kim 
nicolas nishio eds 
north holland 

tansel 
adding time dimension relational model extending relational algebra 
inf 
syst 

tansel clifford gadia jajodia segev snodgrass 
temporal databases theory design implementation 
benjamin cummings redwood city ca 
tuzhilin clifford 
temporal relational algebra basis temporal relational completeness 
proc 
th international conference large databases brisbane 
mcleod sacks davis schek eds 
morgan kaufmann 

van 
randomised schema mutator evolutionary database optimisation 
aust 
comput 


semantic heterogeneity result domain evolution 
sigmod rec 

zaniolo 
database relations null values 
comput 
syst 
sci 

zdonik 
version management object oriented database 
conradi eds lecture notes computer science vol 

springer verlag berlin 

zdonik 
object oriented type evolution 
advances database programming languages 
buneman eds acm press addison wesley new york 

