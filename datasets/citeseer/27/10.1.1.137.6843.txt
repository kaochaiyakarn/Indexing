programmable active memories performance assessment patrice bertin didier jean vuillemin digital equipment paris research laboratory avenue victor hugo cedex france quantitative performance measurements comput ing power programmable active memories pam introduced 
field programmable gate array fpga technology pam universal hardware processor closely coupled standard host com puter 
pam speed critical software applications running host executing part computations speci hard ware design 
performance measurements pam architectures speci applications drawn arithmetics algebra geometry physics biology audio video 
pam designs proves fast reported hardware super computer corresponding application 
cases bring genuine innovation design process pam proved order magnitude faster previously existing system see 
pam concept ram memory module pam attached system bus host computer 
processor write read pam 
active hardware processor pam processes data write read instructions 
speci processing determined content con guration memory 
host change pam con guration downloading new design milliseconds 
speed speci software application running host exe critical inner loop appropriate hardware design loaded pam 
examples designs applications 
selecting attempted cover application areas 
picked basic frequent problems large inner loop speedup speci pam design results signi cant speedup application system software hardware combined 
sake debugging functionality hardware design matched bit wise level software implementation 
successive re nements hardware software implementations optimized speed retaining behavior 
experimental data assessment pam computing power 
traditional measurement unit mips multiple appropriate levels performance reported 
explained quantitative performance comparisons di erent computer architectures challenging art 
mips measured di erent units mips alpha axp instruction sets clock speed cache size bus bandwidth second number cases external data vlsi super computer implementations systems close envision reliable speed comparisons 
quantitative comparisons signi cant wide spec feasible implementation technologies introduce common unit measuring forms computing power binary operations second useful boolean operation inputs clocked counts 
example computing power adder mhz accounting carries sums 
bits multiplier ghz 
speci computer operation similarly decomposed bit level evaluate corresponding power 
pam architectures assessment pam architectures realized dec paris research lab see see respectively refer 
pam built large array bit level con gurable logic cells called programmable active bits pabs application speci hardware operator programmed 
array sur rounded local ram banks cache wide fast match pam external bandwidth programmable clock generator additional non con gurable logic manage host bus interface download process 
instructions second data adr cntr vme bus rdb cntr ext ext ram ram gure sketches architecture 
central com putational array matrix xilinx xc programmable gate arrays bit wide ram banks south east sides vme bus interface west side general purpose interface connectors north side 
control bootstrap logic imple mented extra xc non user programmable 
additional bus switching resources provided global data routing represented diamond shape boxes 
architecture designed years usage described details 
features times bigger central computational matrix accordingly wider ram faster host interface exible global interconnection network data routing switching 
purpose evaluating xilinx designs con de ne programmable active bit pab consists universal inputs combinatorial gate synchronous ip op 
measurement unit pam architectures vital statistics ram ram pam part nb pabs fmax power ram host bus mhz mb mb xc xc chart exhibits important architectural parameters con application bene ts pam speed number pabs application dependent maximal clock frequency mhz mhz reliably operate 
product numbers maximum theoretical computing power pam expressed 
host bus bandwidth mb vme bus mb interface 
size local fast ram mb mb 
pam programming programming algorithm pam similar casting conven tional hardware gate array vlsi important di erences rst target hardware provides completely clean implemen tation synchronous logic model need worry low level electrical details second design process purely software fast mn turnaround approached methodology piecewise testing successive re nements software design 
application involves 
identifying critical computations best implemented hardware usually done successive re nement con straints communication bandwidth load balancing software hardware 
implementing hardware part pam gradually optimizing 
implementing software part host processor gradually optimizing 
step done conventional techniques 
step consists de logic design implement pam individual bit level geometric layout done conventional vlsi design 
developed tool suite hardware design described writing program conventional programming language lisp esterel specialized library 
program describe various logic modules bit level logic equations standard library modules adders registers standard interfaces 

contain layout geometric information level details designer wishes specify usually starts global detailed layout important datapath components enriched precise descriptions optimization process 
executing program produces partially placed hierarchical netlist simulated compiled nal pam con guration fully automatic way tools developed house board level rout ing logic optimization standard xilinx back software chip level placement routing bitstream generation 
design downloaded pam debugging test ing real conditions maximum running speed characterized critical paths identi ed developed specialized interactive tools help visualize 
designer gradually optimize example adding extra levels pipeline increase clock speed optimizing geometric layout adding new functionalities unload software 
important point compiling trying new version costs money minutes hour time possible incrementally design test optimize algo rithms implementations involved usually done software opposed having correct optimal rst try 
pam applications applications chosen span wide range current lead ing edge computational challenges 
case provide brief de scription design names implementors performance comparison similar reported 
case simple paradigm applied compile inner loop pam hardware software handle rest follows represent quotient remainder integer division 
long multiplication host data bs ss host adr 
reg mul 
slice mul 
cntr ps programmed pams long multipliers bits bits computing bits multiplier arbitrary size summands see 
multipliers interfaced arbitrary precision arith package see program software takes advantage pam modi cation simply relinking modi ed library 
respectively speeds raw multiplication factor long operands compared optimized assembly code running host workstation 
example equipped design computes rsa encryption decryption bits second arbitrary bit keys see times faster best software version host 
implementation produces product bits mbits faster known machine obtain bench mark measures 
times faster best gures cray ii cyber reported 
multiplier compute coe cients bits polynomial convolution fir lter times audio real time bits samples khz 
rsa cryptography investigate tradeo possible hybrid hard ware software system focused rsa cryptosystem see cast entirely terms long multiplications 
starting general purpose multiplier shand dec prl implemented series hardware software systems spanning orders magnitude performance 
latest version original hardware design computing modular products rate bits cycle 
system originally di erently programmed boards operating parallel host see 
kbit decoding speed faster currently existing bits rsa implementation technology february 
survey previous speed record bits keys rsa decryption vlsi kbits sec 
data data shand ported rsa system single board mhz design provides independent kb rsa encryption channels keys kb rsa encryption channel keys 
data compression dec prl implemented design speed algorithm known achieve average data compression ratio varying english french polish 
plain text lisp pascal 
source code 
kb past buffer best match design massively parallel method computes byte com ns cycle matches bytes le compressed bytes seen stored local ram order detect longest substring previously seen 
design performs respectable bits integer comparison ends disappointing factor speed compared optimized software unix compress 
optimized software avoids comparisons performed hardware detecting early irrelevant nal output 
elaborate hardware design needed genuinely speed particular algorithm 
string matching alphabet probability ij tion probability resp 
insertion resp 
deletion classical dynamic programming algo rithm compute probability transformation de nes distance words words dictionary coefficients irisa rennes france implemented algo rithm design computes distance input word words dictionary reports words nary closest input 
system processes words sec faster solution previously implemented cnet transputers half performance obtained system previ ously developed irisa custom vlsi chips pc boards 
applications algorithm include automated mail sorting ocr scanners keyboard spelling corrections dna sequence matching see 
heat laplace equations shows adapt classical nite di erence method see compute solutions heat laplace equations dimensions help special purpose hardware 
implementation method operates pipe line depth operators 
operator computes xed point data format 
mhz amounts adds tests shifts easy show see xed point gives results oating point operations speci problems achieved performance exceeds reported solving problem super computers 
sequential computer needs execute instructions second reproduce computation 
heat laplace equations applications mechanics circuit technology uid dynamics optics nance 
newton mechanics vuillemin speci ed design computing evolution body system newton equations 
design computes gravitational eld acting body summing individual elds induced body system 
amounts operations dx dy dz dx dx dx dy dy dy dz dz dz dx dz dy mi dx dx fm dy dy fm dz dz fdx fy dy fy fz positions forces represented bits oating point numbers 
ns internal cycle achievable deep pipe line ex pected throughput exceeds gflops design tested printing time 
binary convolution chen vuillemin implemented binary performing erosion dilation matching black white images de ned 
ram generation runs mhz generating pixel ns com single convolution pass image milliseconds allows successive operations erosion dilation matching video rate 
reproducing performance optimized software require mips computer 
boltzmann machine implemented successive versions hardware emulator binary neural networks boltzmann machine model see 
boltzmann machine probabilistic algorithm minimizes quadratic forms binary variables expressions form ix wi vector binary variables xed matrix weights 
typically nd approximate solutions np hard problems graph partitioning circuit placement 
data ram host data inputs proc weight ram proc proc latest realization solve problems vari ables bit weights total computing power second traditional unit eld amounts additions multiplications terms 
geometry touati dec prl implemented graphic accelerator supports translation rotation clipping perspective projection directly compute screen image cloud points space 
translate translate translate rot rot rot norm 
norm 
norm 
ift pixel mhz peak performance points second bit xed point coordinates input output bits intermediate results 
needs mips processor achieve throughput software 
discrete cosine transform design vuillemin compresses video stream real time multi dimensional fast discrete cosine transform 
implements network design computes xed point bits outputs operations add subtract multiply shift ns cycle total 
match performance software require processor 
chart summarizes practical pam performance achieved designs design pabs mhz pam multiplier rsa dct newton laplace boltzmann geometry ziv lempel string convolution ops bit oating point numbers 
applications ranked reliable performance mea sure 
comparative measure resource utilisation systems table charts maximum theoretical formance generic pam hardware obtained multiplying maximal clock frequency mhz area pabs pam area mhz mhz mhz xc xc years pam design lead believe 
chosen application shown level performance achieved pam comparable best gures reported super computers custom silicon circuits 
applications carefully selected having clearly iden ti ed pam implementable inner loop accounts vast software run time 
low level processing pam proves cost ective super computer 
due software complexity current super computers appli cations remain outside possibilities current pam technology 

mentioned pam design implemented tested months starting delivery speci cation software 
roughly equivalent time takes implement highly optimized software version system super computer technically challenging remain order magnitude faster time takes cast system silicon 

cost comparable high workstation 
orders magnitude lower cost super computer 
gures nd price operation second solving heat laplace equations times higher super computers pam 

eld applications covered existing super computer open pam technology high bandwidth interfaces external world fully programmable real time capabilities 
pam wide connector capable deliver gb external bandwidth 
simple matter hardware program ming interface directly electrically compatible external device programming communication protocol pam self 
applications capability numerous including interfaces high bandwidth networks audio video input output devices data acquisition ltering erard berry 
hardware implementation pure esterel 
prl report digital equipment paris research lab av 
victor hugo france 
patrice bertin didier jean vuillemin 
pro active memories 
systolic array processors jr editors prentice hall 
available prl report digital equipment paris research lab av victor hugo 
cedex france 
patrice bertin didier jean vuillemin 
programmable ac tive memories coming age 
prl report preparation digital equipment paris research lab av 
victor hugo 
cedex france 

survey hardware implementations rsa 
proceed ings crypto lecture notes computer science springer verlag 
buell ward 
integer arithmetic package 
journal supercomputing kluwer academic publishers boston digital equipment 
hardware speci ca tion 
dec document ek aa od digital equipment 
feynman leighton sands 
feynman lectures physics 
addison wesley 
gray 
con gurable hardware case studies micro grain computation 
systolic array processors jr editors prentice hall 
hennessy patterson 
computer architecture tive approach 
morgan kaufmann publishers 
lyon 
complement pipeline multipliers 
ieee trans 
comm com 
lopresti 
nac systolic array comparing nucleic acid sequences 
computer magazine 
mcbryan 
connection machine application performance 
ti applications connection machine world scienti 
mcbryan frederickson linden sh uller bach st 
multigrid methods parallel computers survey developments 
impact computing science engineering academic press 
rivest shamir adleman 
public key cryptography 
cacm 

image analysis mathematical morphology 
academic press 
vuillemin herv portable cient package arbitrary precision arithmetic 
prl report digital equipment paris research lab av 
victor hugo 
cedex france 
marcin 
hardware emulator binary neural net works 
proceedings international neural network conference paris 
marcin 
exact hardware implementation mann machine 
prl report preparation digital equipment paris research lab av 
victor hugo 
cedex france 
mark shand patrice bertin jean vuillemin 
hardware speedups long integer multiplication 
computer architecture news 

mark shand jean vuillemin 
hardware implementation fast rsa cryptography 
appear 
herv touati 
perle dc library simulation genera tion designs 
prl technical note digital equipment paris research lab av 
victor hugo france 
jean vuillemin 
contribution la esolution num des equa tions de laplace de la 
prl report digital equipment paris research lab av 
victor hugo france 
xilinx programmable gate array data book 
product xilinx 
ziv lempel 
universal algorithm sequential data com pression 
ieee trans 
information theory 
