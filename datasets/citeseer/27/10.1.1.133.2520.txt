vision management complex models philip bernstein microsoft research redmond wa microsoft com alon levy university washington seattle wa alon cs washington edu technical report msr tr microsoft research microsoft microsoft way redmond wa www research microsoft com rachel pottinger university washington seattle wa rap cs washington edu problems encountered building applications database systems involve manipulation models 
model mean complex structure represents design artifact relational schema object oriented interface uml model xml dtd web site schema semantic network complex document software configuration 
uses models involve managing changes models transformations data model 
uses require explicit representation mappings models 
propose database systems easier applications making model model mapping class objects special operations simplify 
call capability model management 
addition making case model management main contribution sketch proposed data model 
data model consists formal object oriented structures representing models model mappings high level algebraic operations structures matching differencing merging function application selection inversion instantiation 
focus structure semantics implementation 
problems encountered building applications database systems dbmss involve manipulation models 
model mean complex discrete structure design artifact 
example model xml dtd web site schema interface definition relational schema database transformation script workflow definition semantic network software configuration complex document 
uses models involve managing change models transformation data model 
uses require explicit representation mappings models 
believe opportunity dbmss easier applications making model mapping class objects highlevel operations simplify 
call capability model management 
main contributions 
argues general purpose model management functions needed reduce amount programming required manipulate models 
expect development functions follow usual evolution components middleware integrated system 
implemented initially library reusable components top dbms 
successful form tied model management system implemented extensible framework separate dbms eventually integrated part dbms 
second contribution proposed data model captures model management functions 
data model consists formal structures representing models mappings models algebraic operations structures 
shape data model just detail justify thesis general purpose model management worthwhile achievable goal 
expect details data model take years 
today model management applications store models file system form dbms relational dbms object oo dbms repository system ber 
dbms solution advance file systems things allows applications replace object time navigation set oriented queries 
repository systems help applications avoid navigational code associated specialized relationship semantics versioning 
despite functionality advances dbmss model management applications include lot complex code navigating graph structures 
main technical goal model management greatly reduce amount navigational code 
producing understanding tuning maintaining navigational code serious drag programmer productivity making model management applications expensive build 
hard write code users simply get applications need 
commercially hot areas representations uses models change rapidly model management applications developed fast meet market need re obsolete re finished built 
solve problems development cost timeliness propose raising level abstraction offered current dbmss introducing high level operations models model mappings 
examples operations matching merging function application selection composition 
operations especially novel 
research literature db field relevant design implementation model management functions 
believe generalized integrated support generic model management interface 
illustrate pervasiveness scope model management offer examples models model mappings arise various applications mapping xml schema dtd relational schema drive transformation xml elements rows relational tables mapping xml schema application guide exchange xml instances applications mapping web page wrapper db schema guide translation queries schema underlying web sites mapping web site content page layout drive generation web pages mapping business process definition workflow description generate scripts execute workflow application mapping data sources data warehouse tables generate programs transform production data load data warehouse mapping query posed high level semantic model equivalent query posed logical db schema mapping db schema software release db schema release guide migration dbs mapping object model application object model application generate wrapper exposes application object model second mapping source makefiles target makefiles drive transformation scripts help port complex applications programming environment mapping components complex application components system deployed drive generation installation upgrade de installation programs 
building generic functions create models mappings manipulate single objects provide better environment tasks 
said differently implementing common model manipulation operations different schema types implement generic operations model management data model 
approach reduces need procedural code manipulates models eliminate 
particular necessary write certain custom programs interpret particular mappings 
programs sensitive semantics mapping types easily replaced generic operators 
example programs may involve translating xml attribute table column data source column data target column wrapper parameter method parameter fortunately programs typically applied individual objects small structures 
writing programs trivial localized incremental activity far easier writing custom code manipulate entire models 
usually requires traversing large model structure 
complex performance sensitive algorithmic part addressed generic functions propose 
initially expect model management system primarily manipulate models home platforms see 
target platform dbms web site xml environment programming environment system manipulates models listed example bullets 
glue systems provided simple adapters import export model model management system schema target platform interpret mapping model management system transform instances target model 
challenges area find appropriate architectures coupling systems 
exclude possibility model management built target platforms 
think benefits obtained loosely coupled architecture clearly disruptive target systems 
leverage building model management functionality highly generic widely applicable 
competitive customized approaches exploit semantics particular data type relational schemas 
making generic easily challenge 
types model management applications discussed usually considered examples metadata management effort building application manipulating descriptions thing interest thing 
intentionally avoid term metadata overloaded 
person metadata person data 
keywords data metadata 
model management takes different cut problem 
focuses attention particular kind metadata structure semantics descriptive information 
see leverage gained looking kind metadata isolation 
describing data model focus structure semantics 
little say point implementation emphasize see model management implemented top today advanced db interfaces oo object relational exploiting features recursion deduction 
replacement technologies 
scenario section motivates need coherent system describes models operators system provide 
sections respectively discuss formal structure models mappings operations 
section discuss previous relates model management system tackle open questions 
motivating scenario describing scenario model management system play central role consider target platform functions schema data import export ably reduce coding burden application 
refer model management operations semantics elaborated 
consider online merchant selling books 
data titles customers orders stored relational db schema represented model rdb 
relational data mapped xml dtd dtd serve data web site share data broader marketplace online merchants 
dtd conforms standard recommended marketplace participants 
denote mapping rdb dtd map 
model management system rdb dtd map represented class objects 
consider set objects oo system 
explicit representation enables engineers pose queries help familiarize mapping 
example ask xml element types data originating relation books 
immediate benefit representation mapping define generic inversion operator 
suppose strikes partnership online book merchant starts receiving data xml standard dtd 
map includes expressions tell create elements dtd rows rdb map model managment system model mapping model interpret import export high level architecture model management include expressions tell create rows rdb elements dtd 
complex scenario starts partnership slightly different domain cds online merchant exports data dtd 
case dtds companies differ ways talk customers orders dtd elements concerning books concerns cds ii fully conforms standards versions standard dtds contain slight differences customers orders 
suppose task create relational schema rdb target platform functions schema data data cd merchant 
model management operators create model rdb 
assume moment differences type exist dtds 
case proceed follows see dtd map dtd map legend map map rdb rdb map mapping transformation 
map match dtd dtd 
map map map 
map rdb map 
dtd range match dtd dtd 
map default rdb 
map match rdb rdb 
merge rdb rdb map map rdb example sequence model management operations 

parts dtds match exactly inverse map create rdb 
done steps operations models mappings generic model matching function match create map match dtd dtd mapping dtd dtd identifies maximal subsets dtds exactly match 
create map map map composition map map rdb dtd 
map includes exact matches map maps subset dtd exactly matches dtd 
set map rdb map creates new copy map rdb mappings pose queries results 
particular want estimate cost processing certain queries resulting schemas generic function estimate queries schema 
called map rdb respectively 
deep sense copies objects map objects map connects rdb 

parts dtd don match dtd default mapping dtds relational schemas 
operations done follows companies facing increasing need share data various contexts especially growth business business online applications 
operations important time 
set difference operator create scenario sound pie sky model representing part dtd hopeless achieve 
example sounds ex doesn match dtd dtd hard develop generic algorithm finds range match dtd dtd 
best match distinct models inverts ar instantiate default dtd rdb mapping 
optimal complete algorithms formation calling map default essential ingredients success 
success rdb creates mapping map realized platform manipulating models relational schema rdb new names 
mappings high level operators users fur domain map target rdb 
create map match rdb rdb align overlapping tables keys schemas preparation merging 
ther customize manually 
published heuristic algorithms operations cf 
section goal reach 
call merge rdb rdb map merge rdb rdb map 
models model management operations useful complications situation differences common parts dtds type ii match function propose set possible matches dtds rank 
engineer choose appropriate possibly modify manually 
system able take input engineer constrains possible matches dtds 
creating rdb separate relational dbs companies 
suppose acquires wants merge dbs 
case merge rdb rdb operation propose relational schema merges original ones 
complex db schemas probably disjoint may different internal structure 
furthermore system automatically generate mapping old schema merged facilitate migration applications new merged 
section describe attempt design data model model management 
discussing models 
section discuss mappings models 
level think models labeled directed graphs labels complex structure 
regard object oriented data model natural platform define model management functionality 
represent models sets objects connected relationships 
oo data model yields usual benefits behavioral encapsulation polymorphism convenient sharing type information low impedance language integration agnostic choice object model 
explain concepts interest need special features object model 
extending existing object model define simple features need 
example include types distinct classes inheritance collection valued properties structure valued properties 
object set properties values describe state object 
keep things simple may possible mappings xml assume properties scalar valued 
object dtds relational schemas 
case default dtd rdb may experiment relationship properties consists set relationships 
relationships binary relationship pair object 
relationship directed origin object destination object traversed direction 
odmg ccb relationships class objects 
assume object instance class 
class definition describes set properties relationship properties defined instances class 
relationships binary relationship property definition inverse relationship property definition class connects tagged origin destination side 
assume class definitions objects 
data model self describing 
means model mixture class definitions ordinary objects 
database refer set objects interest 
may persistent may simply set objects main memory manipulated model management operations 
model contents want define operations models need start defining set objects relationships contained model 
explicit defining model particular object relationship object model 
inconvenient implies time submodel added model adding database schema application program relationship added model object object submodel 
avoid maintenance task entirely ordinary relationships model define contents model 
say model simply set objects reachable root object 
adding relationship object model submodel objects submodel immediately part model 
unfortunately doesn quite relationships pairs objects different models 
solution distinguish relationships imply containment model 
similar representation complex objects oo dbmss repositories 
model transitive closure containment relationships emanating model root 
formally assume relationship property definition schema includes containment flag set true containment relationships define model follows definition model set objects identified root object frg set objects reachable containment relationships experience worth restricting containment flag settable origin side relationship property require containment relationships model constitute directed acyclic graph bbc 
definition containment correspond intuitive notion set containment 
simplifies maintenance materialized closure enables content model identified efficiently ds 
expect simplifies algorithms propagating delete copy operations models cf 
section 
model schemas pull definition model schema level 
model schema consists distinguished root class classes reachable root sequence containment relationship property definitions 
model instance model schema root class model root 
cross model relationships define cross model relationship connects objects contained different models 
definition model relationship containment relationship 
may strange relationship fully contained model 
relationships class objects fact cause special problems 
examples illustrate concepts relational schemas xml dtds 
examples models model schemas shown graphically 
syntax semantics models described textual languages choice irrelevant 
example shows fragment model schema relational schemas 
nodes represent classes relationships represent relationship types 
models relations attributes integrity constraints exist relational schema types attributes foreign keys 
shows instance schema describing relational db storing book orders 
supplier phone name supplier id akey false buying relation relation supplies name key fk key member cost book isbn member akey model describing relational schema relational database storing book orders 
model instance model schema shown 
fk foreign key name supplier phone name supplier id buying supplies cost member name id required name required name required idref repeat book isbn ship time book ship phone true name true supplier true false cost true true true isbn time instance model schema describing xml data purchasing books 
attribute db relation relation member constraints constraints key name key bool string model schema relational schemas 
example shows fragment model schema xml dtds 
shows instance schema describing dtd book orders 
challenge fundamental challenge model management develop mechanism representing models storing representations 
key issue model semantics expressed representation 
example integrity constraint relational schema represented string order name version required entity name invoker def string required dtd name version names element invoker definition name idref name required attribute string subelement required name required repeat order bool string bool bool integer model schema xml dtds 
id string model properties logical formula interpretation known model management system 
issue semantics model want describe 
example model schema express constraint foreign key primary key 
storing indexing models raises challenges 
different storage schemes devised building model management system oo object relational dbms 
mappings models key goal model management provide support managing change models mapping data different models 
believe crucial model mappings manipulated class citizens 
describing representation model mappings outline key elements underlying approach modeling mappings 
need manipulate model mappings manipulate models copy mapping delete mapping select mapping avoid defining separate elementary operations mappings require mapping model 
mapping consists connections instances models may instances different model schemas mapping relational schema xml dtd 
allow mapping connect models adds complexity data model unnecessary applications know 
may mapping pair models 
example different mappings relational schema xml dtd represent different ways encode instances relational schema instances dtd 
mapping may relate set objects model set objects language building complex expressions 
example mapping relational schemas may specify view corresponds view view definitions part mapping 
model may associated language building complex expressions elements model query language arithmetic expressions 
mappings able nest 
enables reuse mappings 
allows mapping model component mapping models contain points define model mappings follows 
definition model mapping map model model model 
map distinguished root element single valued relationship properties point root objects respectively 
properties identify models related mapping 

object map called mapping object property expr expression objects 

mapping object map relationship properties called domain range include objects respectively referred expr 
fix data expr 
string object root complex structure represents expression 
mapping model definition mapping says mapping containment relationships 
degree freedom appropriate different applications want structure mappings different ways 
example mapping similar xml dtds mimic structure dtds related 
contrast mapping highly dissimilar dtds flat objects mapping children root mapping preserving dtds structure 
example shows mapping relational schema dtd shown figures 
skeleton mapping represented gray 
internal containment structure shown mimics models relates 
root mapping connects root relational schema xml dtd required definition model mapping 
mapping objects expr properties shown presumed empty 
immediate advantage explicit representation models mappings allows pose queries find attributes xml dtd map members keys relational model id element supplier 
formulating model graph answer essentially queries follow regular expressions 
similar oql xml query languages select clause subset single class 
fundamental issues consider concerning representation mappings 
interpretation mappings spectrum levels specify mappings 
extreme supplier phone name supplier id akey buying relation relation true supplies name key fk key mapping supplier supplies member phone name supplier phone name supplier id supplier buying cost book isbn akey member id cost book isbn book ship phone true name true supplier true false cost true true true isbn time name required name required name required idref supplies cost book isbn ship time name id repeat order name required name required name member required mapping supplies supplier mapping xml dtd relational schema 
skeleton internal containment structure mapping shown figures respectively 
mapping specify full semantic relationships models 
extreme mapping purely structural specifying domain range objects models related mapping semantics expr null 
case semantic information attached mappings application specific way semantics interpreted model management system 
interpreted custom reasoning modules invoked necessary 
example shows structural mapping schemas 
augmented equality predicate expr property mapping object connects relational attribute xml element sub elements 
full semantic relationship schema dtd need state precisely translate rows relation xml el book isbn cost id supplier name phone ements including substructure 
mapping shown consistent translations see fk sgt dfs examples 
advantages interpreting semantics mappings 
example mapping fully interpreted expr property contains formulas mathematical system logic algebra grammar transformed program translates data instance model instance 
inversion composition mappings matching models rely heavily semantics mapping 
hand exploiting semantics mappings adds significant complexity data model definition operations models mappings 
drop semantics consider structural aspects mappings model management system offers useful functions certain kinds matching differencing 
furthermore cases structural mappings closely mirror semantics mapping uml models 
useful operations consider structure implemented generically model mapping types 
representation provides placeholder specifying semantic details property expr 
force representation mapping semantics 
points raise challenge challenge find appropriate representations model mappings trade expressiveness semantics goal keeping operations generic wide set model types 
directionality mappings mapping directional specifies transform data domain range 
general notion mapping specifies set relationships models necessarily directional 
example mapping relational schemas mapping objects statements expr properties form ui vi ui vi sql query expressions respectively 
mapping directional spell transform rows rows 
model management system able manipulate non directional mappings differencing 
operations mappings inversion kinds composition require mappings directional 
directionality convenience enables say mapping function total took middle ground identifying domain range model requiring model directional 
envision orientation operator takes input mapping produces directional mapping domain range possible returns best approximation 
issue directionality raises challenge problems model management instantiated different model mapping types challenge develop algorithm mapping models produces best directional mapping 
partial mappings mapping connect objects domain model 
example creating mapping relational schemas produce complete directional mapping domain range 
may want manipulate mappings inherently partial 
example relational schemas engineer may constraints relations correspond models 
constraints represent partial possibly directional mapping schemas 
model management tasks involve attempting complete partial mapping 
representation decided require mapping complete 
revisit issue section discuss matching operator 
operations models recall section main goal creating data model model management reduce amount programming required manipulate persistent models 
defining set high level algebraic operations main structures interest models mappings 
requirements operations 
operation return model operations composed 
second operation generic works model schema wide range model management applications 
think useful operations quite standard raise research challenges 
define varying levels detail 
section consider operations generalize basic operations data models mappings 
section consider operations unique model management 
focus semantics operations 
discuss best offer functionality programming language 
discuss implementation motivates need operation 
challenge challenge design algebra useful composable operations models 
consider efficient implementations operation combinations operators 
elementary operations operations needed create query perform basic manipulations models 
create model fully identified root creating model simply requires creating root 
powerful version operator creates entire model structure template instances subclasses model schema 
example create empty model program consisting signature declaration part procedure part 
model schema needs annotated default values possibly parameterized directives create model instance 
update updates normally done fine grain basic operations underlying object model manipulate individual objects properties relationships 
delete delete bulk operation 
involves deleting root propagating delete objects contained model 
effect treats containment relationships sql referential constraints cascade option propagate delete contained objects restrict option deny propagation contained object containment relationship connected contained object shared models 
sql semantics known problems manifested cpm lm lml 
select model return model consisting set submodels conform qualification 
qualification language power similar query language xml oql 
select functions kind pattern matching operation qualifications amount patterns submodels look 
folders tables bulk structures defined models selection operations apply 
project project model subset model schema 
classes relationship property types eliminated may cause model disconnected 
handle project return objects reachable model root 
return new root children roots disconnected submodels 
return objects model contained model 
needed step section 
problem disconnected results arises 
apply function objects model 
example apply function append name property objects rdb cf 
section 
complex example update objects model force satisfy set constraints 
copy copy bulk operation models 
tempting say copy model objects contained model copied 
wanted 
contained objects embedded copied linked referenced copy 
example model represents source code application shared libraries may regarded part model application respect operations diff respect copy 
conversely objects copied 
example application contain db schema copied application 
need additional control relationships propagate copy 
containment control relationship property definitions 
relationship property definition copy flag specifies propagate copy relationships type 
examples previous paragraph scenario section performed deep copy mapping map 
case set copy flag mapping class relationship property definition domain caused rdb copied map affect mappings 
map instance specialized type mapping propagates copy domain need allow control copy propagation copy operation 
model enumeration goal capture model management functionality possible set time operations undoubtedly times objects model need navigated 
model set objects navigate data manipulation language underlying dbms 
simplify application programmer job defining enumerate operation performs traversal bridging programming gap models objects models 
enumerate optionally ensure object model visited modest simplification manual traversal 
manual traversal implementation optimized exploiting predictable access pattern example intelligent prefetch bps 
enumerate takes model parameter plus directives regarding order objects traversed 
returns cursor object get operations 
useful directives enumerate offer depth vs breadth pre order vs post order returning root children respecting order relationships ordered relationship property ordering relationships relationship property sort order certain scalar properties target objects ordering containment relationship property definitions class drive enumeration order relationship properties instance class 
enumerate containment relationships guide traversal avoid outside model 
conceivable non containment relationships 
introduces potentially expensive model membership test object returned getnext 
matching differencing applications model management involve tracking changes models key operation consider accepts input models returns mapping describes best match 
operations described previous section contexts output match operation just educated guess system 
guess examining schema integrity constraints models inspecting data instances models 
guess gives engineer starting point designing best match 
different flavors problem finding matches models depending focus commonalities differences 

find best mapping models 
saw section operator useful finding parts dtds match 

find difference models 
basically matching answer needs highlight differences 
operation especially useful round trip engineering 
example scenario user designs model er model compiles executable form sql ddl 
modifies compiled form re supposed 
source model updated reflect updates compiled form notion round trip 
compiled ddl form source er form producing updated source model 
result exactly designer intended designer runs diff updated source model original see changed 
result diff called delta guides designer changes clean updated source model 

engineer may priori knowledge mapping models may wish find best match consistent priori knowledge 
example engineer may know relation names identical ends refer relation 
cases knowledge may concern objects model mapped model 
example designer may know phone number dtd means home phone means business phone 

may partial mapping models system find best complete mapping extends partial mapping viewed instance priori knowledge 
example starting complete map generated system engineer eliminate parts map look wrong add new parts map 
say removes bad guess class maps class adds maps phone expression property phone true 
revision asks system try complete mapping 
summarize key challenges model management predicated specific type model 
challenge develop algorithms finding best matches models 
specifically models partial mapping specifies priori knowledge mapping find extension best complete mapping 
result may single mapping set mappings ranked confidence measure 
addition may accompanied justification generated 
matching ideally match operation generic apply type model 
approach obtain generic match operation encapsulating object mapping criteria similarity relation pairs objects 
common semantics type value equality 
complex equivalence relations may useful dictionaries synonyms equivalence relations pairs classes simple name transformations relation generalized range pairs sets objects ll assume follows 
concept best mapping may associating objects models nearly isomorphic relationship structure 
define match operation takes input models relation produces mapping consistent 
analogous developing join algorithms join condition part isolated semantics join cases efficient join algorithms developed knowing particular join condition 
object mapping returned match include expression describes domain range objects related 
require manipulating expressions mathematical system logic datalog description logic algebra relational algebra arithmetic grammar regular expressions bnf 
ideally generic match algorithm treats mathematical system black box calls generate formula view definition identifies combination domain range objects match 
alternatively may need repertoire match algorithms customized particular formal system 
generate best mapping consistent designer may prefer system shows combinations objects models match designer picks combinations likes best 
accomplished operation essentially semantics relational join 
define equivalence class maximal set objects pair set related 
define return mapping map consists root object connects roots equivalence class object domain range objects respectively child root 
extend operation left right full insisting object connected resulting mapping 
defined analogously 
result match flat objects mapping children root 
user want mapping mimic structure models matched 
shows matching mapping object supplier connects element supplier relation supplier children mapping object supplier connect children element supplier children relation supplier 
mimicking model structure mapping application easily navigate mapping systematically 
obvious structure models induce structure mapping 
obvious due structural differences models matched 
challenge structures matching models matched different structure 
differencing differencing operation essentially full identifies objects appear model inserted deleted 
expression object map returned full form equivalence explains domain range objects related 
example expression may say domain range objects represent conceptual object property values relationships differ 
expression meaning ordinary match sameness difference emphasized 
may desirable phrase expression way emphasizes difference sameness 
mapping object empty domain range presumably associated expression null 
suppose want compare models intended different versions model 
way comparing base model version mb derived 
known provide accurate view insertions deletions 
example comparing mb shows object mb inserted process updating 
object inserted 
contrast mb available assume sequence updates produced conclude deleted update sequence 
express way calculation operations resulting difference expressed mappings 
define new diff operation takes mb input produces single mapping 
case mapping need encode distinctions previous paragraph 
example boolean property mapping object say domain object inserted going mb 
literature result diff usually script transforms input model output model 
process constructing script involves producing mapping cgm 
challenge better diff separate operation specialization 
useful way express transformation sequence model 
script generation encapsulated useful generic operation 
merge merging activity moving content target model source model 
source target models disjoint amounts union source target models assigning source model 
case roots source target identical merely placeholders hang model merging achieved connecting root target model children contained root source model 
effect merge copy outgoing containment relationships root connect root 
semantics satisfy needs steps scenario section 
source target disjoint merge faces issues 
avoiding creation duplicate copies source objects target choosing property values objects source target state differ 

inserting source objects relationships target 

possibly deleting target objects relationships source 
addressing issues generic merge operation hard variations possible depending assumptions structures merged 
way address merge take third parameter delta target source drive merge activity interpretation definition potential delta 
challenge propose semantics merge addresses issues sufficiently generic subsume known semantic variations 
mapping composition composition mappings relatively easy define mappings single valued functions map object domain object range ordinary function composition semantics works 
want result model need containment relationships connect objects resulting mapping 
approach containment relationships mappings involved composition 
example consider single valued functions map map 
result composing map map denoted map map equivalent 
create shallow copy map map copy map relationships objects connects 

object map object map domain range set range range replace range range 
set range notice map includes mapping object object map 
includes range object map object map composes 
alternative equally useful semantics guide procedure map map 
resulting mapping include object map map 
needed step scenario section case want result composition contain object range object dtd match dtd 
definition works object map maps set objects object maps set web pages relation 
allowing range set valued problematic 
ways interpret range 
treat map single valued function output set 
definition composition works case 

treat map multi valued function output set individual objects 
step definition compose set objects map union domains covered range 
semantics appear useful variations composition operation needed 
interesting questions arise mappings relate complex expressions models consider composition non directional mappings 
related model management isolated area research 
existing db literature deals aspects problem 
model management offers opportunities extend works new directions 
section describes fits vision 
platforms model management systems today advanced db architectures features relevant developing appropriate platform model management 
model management system implemented platform includes oo functionality 
enable exploit usual oo features inheritance encapsulation polymorphism recursive queries extensible set algebraic operations extensible query optimizer model management functions run faster client cache server conducive today oo dbs object relational ones 
models usually versioned making techniques temporal dbs interest 
architectures combine oo deductive capabilities sophisticated ways provide significant benefits model management telos conceptbase jj coral nail 
mug logic klw 
inferencing model management key operations model management involve various forms inference inverting mapping completing mapping determining equivalence models 
example mapping thought view model terms 
inverting mapping resembles problem inverting views raises relevance answering queries views yl tsi lmss dg frv 
relational case works need extended problems faced model management mention extensions contexts 
description logics provide formalism shown useful modeling db schemas interschema constraints cl bor 
provide formalism representing reasoning intentionally defined sets 
rich literature tools testing equivalence containment queries ull starting chandra merlin cm 
efficient operations models model transitive closure graph 
scenarios important compute closure maintain materialized view 
literature computing transitive closures aj dp dr ds jag 
probably structure models exploited improve published techniques 
example papers assume kind edge kinds updates equally 
transitive closure closely related recursive query processing br dr 
important learn best map model management functions top recursion part sql 
differencing models cases differencing models lot differencing graph structures 
shown cgm computational complexity sensitive assumptions kind structure graph represent available mapping operations 
suggests hard develop generic algorithms differencing parameterized kinds structures interest 
luckily substantial research literature differencing leveraged understand variations need covered generic solution understand generic solution possible mye sz wsc 
modeling change models longstanding topics db research data translation lcc 
techniques mz excellent test cases generic model management system 
schema integration approaches schema integration candidate algorithms match bcv jmn psu mmp ddl 
concepts information capacity models mir key comparing models 
final remarks outline data model model management 
data model main abstractions model captures structure engineered information artifacts database schemas interface definitions xml dtds web site designs semantic networks complex documents software configurations mapping captures relationships models transformations matchings 
data model includes high level set oriented operations models mappings class objects copy select delete apply function enumerate compose match merge 
operations greatly reduce amount code required applications manipulate models mappings 
enable people write model manipulation applications today daunting 
modern database system supporting object oriented object relational functions suitable platform implement model management data model 
producing implementation cake walk 
pointed technical challenges developing generic customizable efficient implementation 
long term expect solution challenges result substantial layer software properly think new kind database system 
applications manipulate models complicated hard build 
slow 
implementing generic model management functionality lines database field stands chance improving programmer productivity applications order magnitude 
exciting prospect 
gratefully acknowledge useful suggestions thomas ives sergey john mylopoulos rosenthal sane especially rahm 
rakesh agrawal shaul dar jagadish 
direct transitive closure algorithms design performance evaluation 
tods 
aj rakesh agrawal jagadish 
direct algorithms computing transitive closure database relations 
peter william kent peter hammersley editors vldb proceedings th international conference large data bases september brighton england pages 
morgan kaufmann 
bbc bernstein carlson sanders pal 
microsoft repository version open information model 
information systems 
bcv sonia bergamaschi castano maurizio 
semantic integration semistructured structured data sources 
sigmod record 
ber bernstein 
repositories object oriented databases 
sigmod record pages 
jay banerjee won kim kim henry korth 
semantics implementation schema evolution object oriented databases 
proc 
acm sigmod conf 
management data pages 
fran ois bancilhon david maier yehoshua sagiv jeffrey ullman 
magic sets strange ways implement logic programs 
proc 
acm sigact sigmod sigart symposium principles database systems pods pages 
bor alex borgida 
description logics data management 
ieee transactions knowledge data engineering 
bps philip bernstein shankar pal david 
context prefetch implementing objects relations 
malcolm atkinson maria orlowska patrick valduriez stanley zdonik michael brodie editors vldb proceedings th international conference large data bases september edinburgh scotland uk pages 
morgan kaufmann 
br francois bancilhon raghu ramakrishnan 
amateur recursive query processing strategies 
proc 
acm sigmod conf 
management data pages 
ccb cattell rick douglas barry mark jeff eastman david jordan craig russell olaf torsten fernando velez editors 
object data standard odmg 
morgan kaufmann publishers 
cgm sudarshan chawathe hector garcia molina 
meaningful change detection structured data 
proc 
acm sigmod conf 
management data 
claypool jing jin elke rundensteiner 
schema extensible reusable flexible framework 
proceedings th international conference information knowledge management cikm pages 
surajit chaudhuri ravi krishnamurthy potamianos kyuseok shim 
optimizing queries materialized views 
proc 
int 
conf 
data engineering icde taipei taiwan 
cl catarci lenzerini 
representing interschema knowledge cooperative information systems 
journal intelligent cooperative information systems 
cm chandra merlin 
optimal implementation conjunctive queries relational databases 
proceedings ninth annual acm symposium theory computing pages 
cpm cochrane hamid pirahesh nelson 
integrating triggers declarative constraints sql database sytems 
alejandro buchmann mohan editors vldb proceedings th international conference large data bases september mumbai bombay india pages 
morgan kaufmann 
sudarshan chawathe anand rajaraman hector garcia molina jennifer widom 
change detection hierarchically structured information 
proc 
acm sig mod conf 
management data 
ddl anhai doan pedro alon levy 
learning source descriptions data integration 
proceedings international workshop web databases webdb 
dfs deutsch mary fernandez dan suciu 
storing semi structured data stored 
proc 
acm sig mod conf 
management data pages 
dg oliver duschka michael genesereth 
query planning infomaster 
proceedings acm symposium applied computing san jose ca 
dp dong pang 
maintaining transitive closure order node set edge set deletions 
information proc 
letters 
dr shaul dar raghu ramakrishnan 
performance study transitive closure algorithms 
proc 
acm sig mod conf 
management data pages 
ds dong su 
incremental decremental evaluation transitive closure order queries 
information computation 
ds dong su 
incremental maintenance recur sive views relational calculus sql 
sigmod record pages 
fk florescu kossmann 
storing querying xml data rdbms 
ieee data bulletin september 
frv daniela florescu rashid patrick valduriez 
answering queries oql view expressions 
workshop materialized views cooperation acm sigmod montreal canada 
yannis ioannidis raghu ramakrishnan linda 
transitive closure algorithms graph traversal 
tods 
jag jagadish 
compression technique materialize transitive closure 
tods 
jj matthias jarke manfred jeusfeld 
rule representation management conceptbase 
sigmod record 
jmn jan jannink mitra erich neuhold srinivasan rudi studer gio wiederhold 
algebra semantic interoperation semistructured data 
ieee knowledge data engineering exchange workshop 
klw kifer lausen wu 
logical foundations object oriented frame languages 
acm 
lcc chien tsai liu shi kuo chang panos chrysanthis 
database schema evolution diagrams 
proceedings workshop advanced visual interfaces pages new york new york usa 
lm bertram wolfgang may referential actions logical semantics implementation 
proc 
conf 
extending database technology edbt pages 
lml bertram lud scher wolfgang may georg lausen 
referential actions logic rules 
proceedings sixteenth acm sigact sigmod sigart symposium principles database systems may tucson arizona pages 
acm press 
lmss alon levy alberto mendelzon yehoshua sagiv divesh srivastava 
answering queries views 
proc 
acm sigact sigmod sigart symposium principles database systems pods san jose ca 
alon levy anand rajaraman ordille 
querying heterogeneous information sources source descriptions 
proc 
int 
conf 
large data bases vldb bombay india 
john mylopoulos alexander borgida matthias jarke manolis koubarakis 
telos representing knowledge information systems 
acm tois 
miller laura haas mauricio hernandez 
schema mapping query discovery 
proc 
int 
conf 
large data bases vldb 
mir miller yannis ioannidis raghu ramakrishnan 
information capacity schema integration translation 
proc 
int 
conf 
large data bases vldb pages 
mmp john mylopoulos 
partitioning information bases contexts 
proceedings rd coopis pages 
mug katherine morris jeffrey ullman allen van gelder 
design overview nail 
system 
third international conference logic programming 
mitra gio wiederhold martin kersten 
graph oriented model articulation ontology interdependencies 
proc 
conf 
extending database technology edbt pages 
mye myers 
nd difference algorithm variations 
algorithmica 
mz tova milo zohar 
schema matching simplify heterogeneous data translation 
proc 
int 
conf 
large data bases vldb new york city usa 
psu sacc 
semi automatic semantic discovery properties database schemes 
proceedingsof ideas pages 
ieee press cardiff united kingdom 
raghu ramakrishnan divesh srivastava sudarshan praveen seshadri 
coral deductive system 
vldb journal 
sgt shanmugasundaram gang tufte zhang dewitt naughton 
relational databases querying xml documents limitations opportunities 
proc 
int 
conf 
large data bases vldb 
shu taylor ghosh lum 
express data extraction processing restructuring system 
acm transactions database systems 
sz dennis shasha zhang 
fast algorithms unit cost editing distance trees 
algorithms 
tsi marvin solomon yannis ioannidis 
gmap versatile tool physical data independence 
vldb journal 
ull jeffrey ullman 
information integration logical views 
proc 
int 
conf 
database theory icdt delphi greece 
wsc jason li wang dennis shasha george chang zhang patel 
structural matching discovery document databases 
proc 
acm sigmod conf 
management data pages 
yl yang larson 
query transformation psj queries 
proc 
int 
conf 
large data bases vldb pages brighton england 
zhang jason li wang dennis shasha 
editing distance undirected acyclic graphs related problems 
proceedings cpm pages 

