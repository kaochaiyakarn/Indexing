design role trust management framework ninghui li john mitchell department computer science stanford university gates stanford ca ninghui li mitchell cs stanford edu introduce rt framework family trust management languages representing policies credentials distributed authorization 
rt combines strengths role access control systems especially suitable access control 
simple credential forms rt provides localized authority roles delegation role definition linked roles parameterized roles 
rt introduces manifold roles express threshold separation duty policies delegation role activations 
formally define semantics credentials rt framework presenting translation credentials datalog rules 
translation shows semantics algorithmically tractable 
introduce rt framework family role trust management languages representing policies credentials distributed authorization 
development rt framework part going effort address security problems arise independent organizations enter coalitions membership existence change rapidly 
coalition may formed autonomous organizations wishing share resources 
sharing resources organization retains ultimate authority resources controlled prior entering coalition 
call systems decentralized collaborative systems single central authority 
access control decentralized collaborative systems presents difficult problems particularly resources subjects requesting belong different security domains controlled different authorities 
traditional access control mechanisms authorization decisions ieee symposium security privacy may william winsborough nai labs network associates washington road md william winsborough nai com identity resource requester 
unfortunately resource owner requester unknown access control identity may ineffective 
blaze feigenbaum lacy coined term trust management group principles dealing decentralized authorization :10.1.1.44.6276
trust management tm systems keynote spki sdsi credentials delegate permissions 
credential delegates certain permissions issuer subject 
chain credentials acts capability granting certain permissions subject credential chain 
capability style systems address distributed nature authority decentralized environment 
consider simple example book store wants give discount students nearby university 
ideally book store express policy statement student get discount showing student id issued university 
follow simple approach capability style tm systems 
instance keynote spki express statement student entitled discount 
alternative approaches satisfactory 
book store delegate discount permission university key 
university key explicitly delegates permission student key 
places heavy administrative burden university businesses giving discounts students requires separate delegation university student 
second approach university create new key pair representing group students 
student id complete delegation group key student public key 
allow bookstore establish student discount policy spki denote part spki sdsi originally spki tuples sdsi denote part sdsi originally sdsi name certificates tuples called 
credential granting discount group key 
approach requires university manage separate public private key pair meaningful group 
requires group public keys distributed entities book stores 
furthermore bookstore needs know key corresponds group students require public key infrastructure 
key pair represent group provides limited expressive power 
student id takes form complete delegation group key contain application independent attribute information student department year useful deriving attributes making access control decisions 
simplify authorization collaborative environments need system access control decisions authenticated attributes subjects attribute authority decentralized 
call systems attribute access control abac systems 
argue expressive abac system able express 
decentralized attributes entity asserts entity certain attribute 

delegation attribute authority entity delegates authority attribute entity entity trusts entity judgement attribute 

inference attributes entity uses attribute inferences attribute 

attribute fields 
useful attribute credentials carry field values age credit limit 
useful infer additional attributes field values delegate attribute authority certain entity certain specific field values spending level certain limit 

attribute delegation attribute authority 
key abac scalability ability delegate strangers trustworthiness determined certified attributes 
example may delegate authority identifying students entities certified universities delegate authority universities board 
doing avoids having know universities 
keynote spki attribute certificates express inference attributes attribute delegation 
sdsi spki sdsi support attribute fields 
tpl language supports delegation authority arbitrary attributes 
delegation logic dl express convenient :10.1.1.11.3049
basic attribute credential designated issuer able express judgement subject certain attribute 
basic certificate dl issuer statement 
encode subject attribute statement dl lacks explicit subject abstraction desire reasons 
explicit abstraction allows clear concise representation attribute delegation form linked local names sdsi 
subject abstraction enables distributed storage discovery credentials shown 
enables view attributes similarly roles role access control rbac concepts similar role activations enable entities selective roles :10.1.1.29.5742
tm system sd viewed delegation logic delegation constructs subject abstraction 
rt proposal meeting requirements abac systems 
rt uses notion roles represent attributes 
role rt defines set entities members role 
role viewed attribute entity member role attribute identified role 
notion roles captures notions groups systems 
rt combines strengths rbac tm systems 
rbac borrows notions role interposed assignment permissions users aid organizing assignments sessions selective role activations 
tm rt borrows principles managing distributed authority credentials clear notation denoting relationships authorities localized name spaces linked local names sdsi 
dl borrows logic programming approach tm 
addition rt policy concepts intersections roles operators manifold roles delegation role activations 
concepts express policies possible express existing systems express policies succinct intuitive ways 
basic part rt rt algorithms search chains rt credentials type system credential storage ensures chains credentials storage distributed 
rt meets requirements listed doesn supports attribute fields 
additional components rt framework rt rt rt rt rt adds rt parameterized roles express attribute fields 
rt adds rt logical objects group logically related objects permissions assigned 
rt provides manifold roles role product operators express threshold separation duty policies 
rt provides delegation role activations express selective ties delegation capacities 
goal designing rt expressive clean system intuitive formally defined tractable semantics 
formally define semantics rt credentials presenting translation credentials negation free safe datalog rules 
guarantees semantics precise monotonic algorithmically tractable 
decentralized collaborative systems agreement meaning credentials 
datalog subset order predicate calculus provides clear semantic point 
monotonicity semantics important especially distributed environments deal non monotonicity typically needs complete information hard obtain distributed environments 
datalog rule safe variables head appear body 
guarantees set generates finite bounded 
requirement rt credential translated safe datalog rule main constraint expressivity guiding design rt features 
rest organized follows 
section give overview main features components rt sections introduce components rt rt rt rt respectively 
discuss current status rt implementation issues related section conclude section 
overview rt framework section introduce core concepts rt framework summarize different components rt entities roles entity rt uniquely identified individual process 
entities called principals literature 
issue credentials requests 
rt assumes determine entity issued particular credential request 
public private key pairs clearly possible 
environments entity say secret key user account 
subscripts denote entities 
role rt defines set entities members role 
role access control rbac users roles permissions :10.1.1.29.5742
roles rbac form middle layer users permissions simplifying management relationships users permissions 
permissions associated roles users granted membership appropriate roles acquiring roles permissions 
advanced rbac models include role hierarchies 
role hier extends role layer multiple layers reducing number relationships managed 
role hierarchies partial orders 
role dominates written permission 
entities rt correspond users rbac 
roles rt represent roles permissions rbac 
rt view user role assignments role permission assignments domination relationships 
assigning user role represented assigning permission role represented way user role assignments role hierarchy role permission assignments define uniform partial order users roles permissions 
addition implications permissions equivalently read implying user member automatically member 
say contains user members 
contains ordering inverse dominates ordering 
partial order defined 
rt uses contains ordering entity centric corresponds better attribute interpretation roles 
localized authority roles rbac developed access control single organization 
authors consider essential characteristic rbac control role membership role permissions relatively centralized users :10.1.1.29.5742
centralized control feature distributed collaborative systems 
handle decentralized nature distributed collaborative systems rt borrows existing trust management systems focus systems decentralized control 
particular borrow sdsi concepts localized name spaces 
sdsi local name formed entity followed name identifier 
entity localized name space responsible defining local names name space 
rt role denoted entity followed role name separated dot 
subscripts denote role names 
role read role 
authority define members role issuing role definition credentials 
credential defines role contain entity role certain expressions evaluate set entities 
role may defined multiple credentials 
effect union 
entity define contain role defined credential reads means defines dominates time credential delegation authority user role assignment 
credential form define role mapping multiple organizations collaborate represents delegation linked role credential enables issuer delegate member role 
credential states contains contains set contains relationships implied credential dynamic depends credentials time credential issued issued 
rt allows intersection defining roles 
credential states contains role entity contained 
set contains relationships implied credential dynamic 
note role intersections exist rbac 
example illustrates rt credentials 
example fictitious web publishing service epub offers discount preferred customer student 
epub delegates authority identification preferred customers parent organization 
issues credential stating ieee members preferred customers 
epub delegates authority identification students entities accredited universities 
identify universities epub accepts credentials issued fictitious board universities abu 
credentials prove alice eligible discount epub epub preferred epub student epub preferred preferred preferred ieee member epub student epub university epub university abu accredited abu accredited alice ieee member alice parameterized roles rbac role name atomic string 
noted literature limited 
organization may contain large numbers roles differences 
example project project leader role rights project leaders documents projects 
desirable facilitate reuse role permission relationships 
address notion parameterized roles introduced called role templates 
rt allows atomic strings role names 
rt extends rt allow parameterized roles 
rt role name constructed applying role identifier tuple data terms 
subscripts denote role identifiers subscripts denote data terms 
rt introduced section 
parameterized roles represent relationships entities 
example alpha allows manager employee evaluate employee approve purchase request submitted employee alpha employee name manager employee 
similarly hospital beta allows physician patient access documents patient beta patient name physician patient 
parameterized roles represent attributes fields 
example diploma typically contain school degree year ieee membership certificate needs contain member number member grade 
digital driver license contain birthday information 
parameterized roles represent access permissions take parameters identifying resources access modes 
common vocabularies entity defines contain needs understand means role name 
problem establishing common vocabulary 
different entities need common vocabulary roles 
common vocabulary particularly critical systems support attribute delegations 
instance expression epub university sense universities purpose 
rt address problem scheme inspired xml namespaces 
introduce application domain specification documents 
defines vocabulary suite related data types role identifiers role ids short name data type parameters may declare common characteristics role ids storage type information studied 
generally give natural language explanations role ids including conditions credentials defining issued 
credentials contain preamble vocabulary identifiers defined refer particular giving uri 
role id inside credential incorporates vocabulary identifier prefix 
relatively short role id specifies globally unique role id refer data types defined mechanism just described 
concrete rt system defined multiple 
defines vocabulary 
notion vocabularies related notion localized name spaces 
address name space issues ad dress issues different levels 
notion localized name spaces concerns authority define members role 
notion vocabularies establishing common understandings role names 
example board issue defines format student id credentials 
university issue student id credentials 
university authority name space just uses vocabulary created entity 
university freely choose issuing credentials 
particular multiple student ids university issue multiple credentials different 
logical objects rt roles represent permissions 
permission typically consists access mode object 
useful group logically related objects access modes give permissions 
introduce rt extends rt notion sets group logically related objects 
sets defined ways similar roles 
difference members sets objects entities 
rt introduced section 
threshold separation duty policies threshold structures require agreement list entities common trust management systems 
systems delegation logic expressive dynamic threshold structures satisfied agreement set entities satisfy specified condition 
related distinct policy concept separation duty sod 
security principle requires different people responsible completion sensitive task ordering paying purchase 
sod discourage fraud requiring collusion entities commit fraud 
rbac sod achieved constraints mutual exclusion roles requiring cooperation mutually exclusive roles complete sensitive tasks 
entity allowed simultaneously occupy mutually exclusive roles sensitive tasks completed cooperation entities 
sufficient necessary ensure cooperation entities required perform sensitive task 
related threshold structures existing tm systems generally express sod policies 
threshold structures require agreement different entities drawn single set sod policies typically concerned agreement members different sets 
similar reasons mutually exclusive roles achieve thresholds 
constraints mutual exclusion roles nonmonotonic nature entity member role member role 
enforce constraints complete information role memberships needed 
allow monotonic credentials rt constraints 
call manifold roles achieve thresholds separation duty 
similar role defines set entities manifold role defines set entity collections set entities cooperation satisfies manifold role 
manifold roles defined role expressions constructed role product operators 
role expression represents dynamic threshold structure requires different entities members role expression represents set entity collections different entities 
force cooperation complete sensitive task goal sod forcing roles mutually disjoint 
permit important flexibility particularly small organizations individuals may need fulfill roles 
flexibility motivates mutual exclusion role activations known dynamic separation duty 
constructs monotonic allow sod supported de centralized framework role membership information may partial incomplete 
operator implement policies action allowed gets approval roles 
approval come entity member roles come different entities members role 
manifold roles role product operators part rt introduced section 
delegation role activations discussed delegation authority define role 
consider delegation capacity exercise membership role 
scenarios entity prefers exercise rights 
administrator logs ordinary user perform ordinary tasks 
example user temporarily delegated certain access rights manager manager absence 
user want exercise customary rights wishing temporary rights explicitly working manager behalf 
notion related privilege principle supported systems 
rbac supported notion sessions 
user selectively activate eligible roles session 
natural generalization user session delegation role activations process process delegation role activations 
need particularly acute distributed computing environments 
imagine scenario user starts session activating roles issues request 
fulfill request session process starts second process behalf user invokes third process running different host access back services needed complete requested task 
processes delegated authority act user behalf pass authority processes initiate 
process process delegation role activations supported rbac 
similar policy concepts studied logic intractable 
existing trust management tm systems support selective role activations delegation activations entity implicitly uses rights request 
system requester provides credentials support request requester limit rights exercised providing subset credentials 
depends architectural assumption credentials provided requester 
assumption mechanisms needed specifying rights support request enforcing specifications 
introduce rt handle delegation capacity exercise role memberships 
rt adds notion dele gation role activations rt framework 
del takes form means delegates ability act behalf capacity member form delegation express selective role activations delegation role activations access requests supported subset requesting entity roles 
rt introduced section 
summary components rt framework rt introduced 
components rt rt rt rt rt brief summary features components 
rt supports localized authorities roles role hierarchies delegation authority roles delegation authority role intersections 
rt adds rt parameterized roles 
rt adds rt logical objects 
rt provides manifold roles role product operators express threshold separation policies 
rt provides delegation role activations express selective capacities delegation capacities 
rt rt separately rt rt rt 
resulting combinations written rti rt rt dt rti 
rt system consists application domain specification documents definition credentials optionally delegation credentials rt 
rt defining roles section introduce rt 
rt credentials define roles 
syntax rt credentials syntax syntax designed understanding framework 
representation practice take various forms xml 
rt credential head body 
head credential form 
hn entity 
hn role name 

hn role name requires role identifier hi data term having type ith parameter rt data term constant variable just exception type credential 
say credential head 
hn defines role 
hn 
choice terminology motivated analogy name definitions sdsi predicate definitions logic programming 
credential issued call issuer credential 
types credentials having different form body corresponding different way defining role membership 
type 
hn possibly entities 
credential means defines member 
hn role 
attribute view credential read attribute equivalently says attribute type 
hn 
sm possibly entities 
hn 
sm possibly role names 
credential means defines role include members role 
words defines role powerful sense member automatically member role authorized 
attribute reading credential says entity attribute says attribute type 
hn 

sm call 

sm linked role 
attribute reading credential says entity attribute 
says entity attribute 
sm says attribute 
hn 
delegating authority believes attribute 
attribute delegation identifies authority knowing identity attribute viz 
data terms role name 
linked role 
special keyword 
predefined type entity 
meaning explained section 
type bk rk credential integer greater 
call bk rk intersection 
credential means entity member 
bk rk member attribute reading credential believes attributes 
bk rk attribute variable appears rt credential named anonymous 
named variable takes form question mark followed alpha numeric string 
variable appears credential need name anonymous 
anonymous variable represented question mark 
note different appearances credential represent distinct variables 
variable occurs parameter role name implicitly assigned type parameter 
variable may optionally constraints name separated colon 
constraint static value set possible values intersection contain entities linked roles 
restriction change expressive power add additional intermediate roles 
variable drawn 
syntax static value sets introduced section 
introduce notion formed credentials 
rt system credential formed ignored 
rt credential formed named variables typed safe 
named variable welltyped type appearances credential 
types name 
variable safe appears body 
seen section safety requirement ensures rt credentials translated safe datalog rules help ensures tractability rt 
example alpha allows manager employee evaluate employee 
alpha alpha policy expressed rt 
data types rt rt data types 
integer types 
integer type ordered 
declaring integer type restrict values optionally specifying facets min default max default step default base value default 
legal values type include integer value ks integer min max 
closed enumeration types 
declaration closed enumeration type declares ordered unordered lists allowed values type 
ordered type corresponding integer type default type elements 
corresponding type explicitly specified 
boolean type predefined unordered closed enumeration type 
open enumeration types 
open enumeration type unordered 
allowed values open enumeration type statically constant appears place requires type value type 
entity type predefined open enumeration type 
float types 
float type ordered 
defining float type similar defining integer type 
optionally specify facets facets take float values min default max default step default typical value default 
legal values type include values ks integer min max 
date time types 
predefined types date time types ordered 
type write static value sets constrain variables credentials 
value set said static values depend credentials 
contrast role viewed dynamic value set entity type 
static value set ordered type represented set non intersecting ranges 
ln un li ui values 
li ui written just li 
static value set unordered type takes form 
vn vi constants type 
note testing constant static value set takes time linear representation size value set 
example university gives special privileges graduates years operation matter degree conferred 
diploma year diploma role identifier takes parameters degree year anonymous variable 
translation logic rules tractability define translation rt credential logical rule 
translation serves definition semantics possible implementation mechanism 
output language special binary predicate ismember takes entity role arguments 
domain predicates static value set unary predicate pv introduced pv true value domain predicates translating constraints variables logical atoms 
credentials translated follows 
ismember 
viewed shorthand role 

ismember ismember conditions 
variable call implicit variable 
optional conditions part comes constraints variables 
static value set constraint variable credential conditions part includes logical atom pv call arithmetic atom 
call logical atom ismember relational atom 
rest omit optional conditions part translation formulas 
remember need added constraints variables 

ismember ismember ismember 
recall keyword data term 
appearance translated implicit variable see example 

bk rk ismember ismember ismember bk rk 
local access control policies take form credentials 
recall rt permissions represented roles 
entity submits request req request governed role request authorized ismember provable supporting credentials policies 
see collecting credentials stored distributed fashion 
example part annual review process alpha gives pay raise employee authorized evaluate employee says performance 
alpha alpha rules resulting translation straightforwardly translated datalog translating ismember 
hn member 
hn 
set rt credentials trans datalog program resulting translation 
implications defined set membership relationships implied determined minimal model trans 
show rt tractable 
proposition set rt credentials assuming credential variables role name arguments computing implications done time mn max pn number credentials size proof 
obvious evaluation algorithm follows 
compute trans 
compute ground instances resulting rules obtained substituting variables matching type constants 
arithmetic atoms generated constraints evaluated instantiation process ground rules thrown away constraints satisfied 
compute model remaining set ground rules 
computing minimal model set ground horn clauses done linear time total time process takes linear size resulting ground program 
consider translation credential cred trans cred resulting rule 
trans cred variables coming cred variables introduced translation 
variables cred instantiation process considers pn constants appear parameters role names heads credentials constants appear ci ground atom member 
cq minimal model trans 
follows variable head credential appear body 
cred type credential trans cred implicit variable instantiate entities appear right hand sides type credentials need considered 
cred type credential addition trans cred variable instantiated entities appear issuers credentials number variables rule translation max pn ways instantiate variable 
rule ways instantiate size ground program mn 
argue variable bound typically bounded maximum arity role names vocabulary 
type credential variable type credential variables variable head appears body type credential variables type credential kp variables 
bound kp reached intersecting roles contains completely different set variables rarely case practical policies 
note restriction type credential roles body number variables bounded 
roles intersection partitioned collections containing disjoint sets variables credential broken credentials fewer variables rule 
intersections containing lots variables broken 
extreme case variables arranged matrix atoms atom contains row column matrix 
see study tractability conjunctive queries 
set credentials time answer single request clearly bounded time compute implications polynomial size trivial algorithm compute minimal model trans check request true model 
efficient ways answer query computing minimal model 
extensive logic programming deductive databases answer queries efficiently 
systems requester presents credentials prove authorization concerned complexity searching credentials potential denial service attacks 
combat requester required credential chain organized proof authorization proof checking performed linearly 
rt describing logical rights rt adds rt notion sets group logically related objects resources access modes set formed entity followed set name separated dot 
set name formed applying set identifier set id short tuple data terms 
set id base type 
set names sets formed set id base type set id value set set values 
set definition credential similar credential 
head takes form 
hn 
hn set name base type 
body value base type set 
sm base type linked set 

sm 
role name 
sm set name base type intersection sets base type 
credential rt role definition credential set definition credential 
credentials rt general rt aspects 
variable type constrained dynamic value sets base type roles sets 
safety requirement variables relaxed 
variable safe appears role name set name appears body credential constrained set role appears role set constrains variable 
seen section relaxed requirement suffices guarantee tractability 
rt extensions enable examples expressible rt 
example alpha allows members project team read documents project alpha read alpha documents proj alpha team proj variable proj safe appears body variable safe constrained set 
alpha documents proj filea alpha team proj bob conclude alpha read filea bob 
example alpha allows manager owner file access file alpha read alpha manager alpha owner variable safe appears body variable safe appears role constrains variable alpha owner file userb alpha manager userb conclude alpha read file 
translation logic rules set definition credential translated logic rule exactly way role definition credential 
need extend predicate ismember take values types arguments 
constraint variable constrained add ismember body rule 
proposition rt computational complexity rt 
set rt credentials computing implications done time mn 
proof 
constraint role set translated relational atom body relaxed variable safety requirement suffices guarantee variable rule appears relational atom body 
variable constrained role set type constants appearing righthand side type credentials need instantiate variable 
rest follows proof proposition 
note rt rule contain variables rt rule due sets roles constraints 
rt supporting threshold separation duty policies express simple threshold structures intersections 
example policy says entity attribute say represented credentials intersections express policy says entity attribute different entities having attribute says 
potentially important policy allows happen entity role different entity role request 
common separation duty policy expressed threshold structures delegation logic previous trust management systems 
express policies introduce rt introducing operator just thresholds introduce basic expressive operators 
implement threshold separation duty policies 
specifically rt adds notion manifold roles generalizes notion roles 
contrast call roles rti single element roles 
manifold role value set call entity collections 
entity collection entity viewed singleton set set entities 
allows view single element role special case manifold role value set singletons 
rest extend notion roles include manifold roles single element roles continue denote role name generalized notion roles 
rt introduces new types credentials type bk rk ri single element manifold role names 
credential means members members bk rk sk si members bi ri 
si individual entity say implicitly converted singleton 
type bk rk credential means members members bk rk sk si members bi ri si sj example says entity attribute member different members say 
represented credentials suppose addition credentials conclude members members members members 
suppose credentials conclude members conclude members members 
noted section operator enforce separation duty sod requiring mutual exclusion roles 
see section additional examples sod 
rt type credentials generalized manifold role name appear role name allowed constraint variable 
role identifier size 
size manifold role id specified role id declared 
single element role id size 
role name 
th size size size 
size role limits maximum size member entity set 
example size members contain 
rt role definition credential formed satisfy additional requirement size head greater equal size body 
size body defined follows size size size size bk rk maxi size ri size bk rk size ri size bk rk size ri translation logic rules extend predicate ismember output language allow argument entity collection allow second argument manifold role single element role 
maximum size manifold roles system introduce new predicates set set takes entity collections arguments set 
sk true sk si entity treated set 
similar set 
sk true sk si sj 
translation type credentials section 
types translated follows size ismember ismember ismember 
size ismember ismember ismember ismember xk set 
xk 
bk rk ismember ismember ismember zk bk rk set 
zk 
bk rk ismember ismember ismember zk bk rk 
zk 
easy see translation extension section 
credential contains manifold roles resulting rule 
proposition set rt credentials maximal size roles computing implications done time mn 
proof 
resulting rules atoms set 
zk body atoms evaluated removed grounding process similar arithmetic atoms generated constraints 
consider rule translated type credential cred translation introduces new variables 
zk 
values variables 
zk fixed value uniquely determined set 
zk 
entities entity collections size size ri ways instantiate zi 
size size rk size ways instantiate 
zk 
variables coming cred instantiated ways 
rule instantiated ways 
similar arguments apply type credentials 
consider rule translated type credential translation introduces variables 
xk 

xk entities issuers credentials need considered 

xk fixed uniquely determined set 
xk 
size ways instantiate 
xk 
size ways instantiate type credential instantiated ways 
hard see type credential instantiated ways type type credential instantiated ways complexity result follows 
rt supporting delegation role activations discussed section rt notion delegation role activations express user session process process delegation capacity 
example entity activates role session represented delegation credential 
call role activation 
delegate role activation issuing credential 
entity issue multiple delegation credentials entity 
role activations delegated delegation credential 
viewed shorthand multiple delegation credentials 
delegation credential contains keyword 
example means del role activations means delegating role activations activating roles 
request rt represented delegation credential delegates requester request 
example requests read filea capacity represented read filea 
note read filea entity 
delegation interpreted dummy entity representing request read filea 
rt system assigns unique dummy entity request 
making request req ca represented req 
delegation role activations delegation capacity act role 
different kind delegation delegation authority define role role definition credential 
differences discussed section 
translation logic rules consider credentials definition credentials delegation credentials include requests mean rt presenting translation logic rules 
introduce predicate forrole 
logical atom forrole reads acting means acting role activation activates atom forrole true member delegates role activation chain note member forrole true 
member equivalent forrole 
delegated capacity act role strictly weaker member role 
represented forrole represented forrole 
difference clearly shown translation type credentials 
translation described subsumes translations section role definition credentials 
translation set definition credentials remain unchanged 
delegation credential forrole forrole 
translated rule means acting doing 
note source capacity act role entity explicitly maintained inferencing 
delegation credential forrole forrole 
translated rule means acting activating role role doing 
delegation credential forrole forrole 
translated rule means acting entity entity activating role role doing 
delegation capacities 
request translated way delegation credential request replaced dummy entity corresponding 
example req translated forrole forrole 
dummy entity request req 
request req governed role dummy entity req request req authorized forrole true 
note authorization query variable means behalf request issued affect request authorized 
variable instantiated authorizing chain resulting information auditing 
delegation directly controlled regulated auditing mechanisms 
forrole 
rule means acting member forrole forrole 
rule means acting acting activating implies activating powerful note rule subsumes forrole forrole means member member size forrole forrole forrole 
rule means member activating implies activating note member insufficient just delegated capacity act role 
credential implies member 
size forrole forrole forrole forrole xk set 
xk 
entity member role implicitly capacity act role 
converse hold 
particular delegated capacity act role access resources capacity capacity affect meanings definition credentials issued 
role memberships determined definition credentials affected delegation credentials 
delegated capacity provides additional authority define roles 
bk rk forrole forrole forrole bk rk 
bk rk forrole forrole forrole yk bk rk set 
yk 
bk rk forrole forrole forrole yk bk rk 
yk 
addition strictly weaker delegation role activations intended different delegation authority dynamic sense 
delegation credentials stored distributed fashion searched definition credentials 
entity keeps chain delegation credentials passes chain delegating entities 
second delegation credentials typically accompany request represented delegation credential processed processing request 
contrast definition credentials preprocessed stored 
third delegation credentials typically shorter valid life time definition credentials 
proposition adding rt adds factor complexity 
proof 
rules resulting definition credentials additional variable type entity rule 
adds additional factor 
need careful instantiating rules re delegation credentials involve key word 
example translated forrole forrole 
rules variable instantiated 
show increase complexity bound 
consider ways instantiate clause forrole forrole expensive kind clauses resulting delegation credentials 
suppose rt variable needs instantiated entities needs instantiated roles appear head ground rules 
clause needs instantiated ways clauses resulting type credentials 
rt instantiated ways maximum size roles number ways instantiate total number ways instantiate 
examples rt dt example small organization sorg purchasing order submitted approved placed 
employee submit purchasing order 
manager approve order 
manager employee manager approve order 
represented follows sorg place sorg submit sorg approve sorg submit sorg employee sorg approve sorg manager sorg employee sorg manager suppose alice bob managers sorg manager alice sorg manager bob alice submit order issuing alice sorg employee alice order bob approve issuing bob sorg approve bob order prove forrole alice bob sorg place dummy principal representing order 
bob issue approval alice approves order issuing alice sorg approve alice order prove forrole alice bob sorg place 
consider example 
exactly logic call ablp logic groups roles uses roles differently 
captures intended scenarios policies 
example expressed rt straightforwardly 
example server authorizes filea deleted requested workstation behalf user 
knows alice user trusts ca certifying public keys users 
knows ws workstation trusts ca certifying public keys workstations 
expressed credentials del filea user user ca alice ca ws credentials issued ca ca alice alice ca ws ws setting studied station stores private key tamper resistant firmware 
boots generates key pair operating system issues credential delegate activation new key 
user alice logs workstation ws new process set new key pair generated 
alice request server delete filea 
process sets secure channel ch server sends request channel 
delegation credentials needed 
ws ws os ws os alice user alice ws alice user ch request sent ch delete filea behalf user alice working workstation represented ws alice user ch del filea 
request authorized 
discussions related implemented rt process implementing components rt framework 
rt inference engine implemented java algorithms described 
constructed demonstration applications rt distributed scheduling calendar system web file sharing system 
implemented translating policies user interface rt 
policies applications require features outside rt 
needs drove development features reported additional features discussed section 
currently policies features outside rt handled adding ad hoc layer top rt 
process extending algorithms expressive components framework implementing 
replace ad hoc layer 
general credentials may contain sensitive information 
protect sensitive credentials allowing decentralized environment abac applied credentials resource 
trust established entities context iterative process revealing credentials called trust negotiation 
concurrently design rt developing system automated trust negotiation supports rt design supporting rt additional area 
implementation straightforward approach implement inference engine rt translation process described datalog inference engine 
drawbacks approach 
datalog prolog engines suit needs 
large number credentials stored distributed way require goal oriented top inference engine 
rules deductive database implementations bottom evaluation algorithms 
require inference engine guarantee termination 
rules prolog engines run infinite loops recursive rules 
second size datalog inference engine unacceptable applications 
instance xsb system satisfies goal orientation termination requirements 
fact authors xsb previously working delegation logic 
unfortunately stripped version xsb megabytes jar file current rt engine kb 
third experience hard integrate datalog engine closely control needed inference process 
example hard interleave credential collection inferencing steps needed applications 
require support functions predicates application defined data types 
reasons developing direct algorithms implemented general programming languages 
xml represent credentials 
credentials digitally signed 
plan address revocation issue requiring credential issue time validity period similar approach suggested 
delegation credentials short life time renewed needed 
definition credentials verification mechanism descriptions 
example verification mechanism include address finding credential revocation list crl address public key online certificate status verification server 
restricted design features implemented safe datalog 
features implemented datalog desirable 
non monotonicity typically inappropriate de centralized environment certain nonmonotonic constraints may useful appropriate 
example mutual exclusion roles activated time known dynamic separation duty may important organizations 
enforcing policy requires complete information roles activated expected available processing access requests 
second desirable feature enable authorization depend state information history environment data 
instance history information needed implement chinese wall policy 
policies representing policies result unsafe datalog rules 
plan address distinguishing class request processing rules connection specific request 
request supplies values variables request processing rule unsafe 
desirable feature able represent unbounded structured resources directory hierarchies 
handling requires going datalog 
plan address datalog constraints replace datalog underlying foundation 
ongoing extensions reported near 
related section discussed limitations systems keynote spki argued trust management systems spki sdsi keynote tpl express requirements attribute access control 
give additional comparisons rt related 
rt unifies rbac trust management concepts differs previous tm systems uses roles central notion 
advantage ability allow selective role activation delegation activations 
supports partial authority request previous tm systems support 
addition role product operators rt expressive threshold structures existing trust management systems 
sdsi part spki sdsi equivalent rt minus type credentials intersection 
spki part spki sdsi capability style system 
spki sdsi roughly equivalent rt variables compound data type tags 
keynote capability style system similar spki 
keynote credential similar rt credential form 
hn 
hn conditions conditions boolean expressions 
hn 
keynote allows conditions contain operators regular expression matching 
fairly expressive disadvantage 
discussed section dl abstraction subjects 
hand dl integer delegation depth allows query delegations allowed rt 
rt viewed syntactically sugared version subset dl 
treatment rt uses role activations atoms forrole 
ablp logic uses restricting privileges 
privilege furthermore may different privileges 
rt roles follows rbac interpreted activating roles 
rt privilege 
difference significant role product operator involved auditing desired 
ablp logic operator encoded quoting operator conjunction operator 
logic allows write arbitrarily long complex principal expressions operators 
combination ablp logic intractable support localized name space roles parameterized roles 
rt implicitly achieved having multiple credentials manifold roles 
statement forrole rt roughly read form statement rt allows 
note achieved delegation credentials distinguish 
achieved different credential chains privilege cases 
reduces computational complexity rt easier understand sufficient capture policy concepts motivating ablp logic 
introduce rt framework family trust management languages representing policies credentials distributed authorization 
rt combines strengths role access control systems especially suitable access control 
components rt framework rt rt rt rt forms credentials support localized authority roles delegation role definition linked roles parameterized roles manifold roles delegation role activations 
translation rt credentials datalog rules serves logic semantics rt shows semantics algorithmically tractable 
supported darpa contracts muri onr 
sri helpful comments earlier version 
anonymous reviewers helpful reports 
mart abadi michael burrows butler lampson gordon plotkin 
calculus access control distributed systems 
transactions programming languages systems october 
matt blaze joan feigenbaum john ioannidis angelos keromytis 
keynote system version 
ietf rfc september 
matt blaze joan feigenbaum jack lacy :10.1.1.44.6276
decentralized trust management 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
samarati 
regulating service access information release web 
proceedings th acm conference computer communications security ccs pages 
acm press november 
tim bray dave hollander andrew layman 
namespaces xml 
recommendation january 
david brewer michael nash 
chinese wall security policy 
proceedings ieee symposium security privacy pages los alamitos may 
ieee computer society press 
david clark david wilson 
comparision commercial military computer security policies 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
clarke jean emile carl ellison matt alexander ronald rivest 
certificate chain discovery spki sdsi 
journal computer security 
william dowling jean gallier 
lineartime algorithms testing satisfiability propositional horn formulae 
journal logic programming 
carl ellison bill butler lampson ron rivest brian thomas 
spki certificate theory 
ietf rfc september 
stephen farrell russell 
internet attribute certificate profile authorization 
luigi pietro 
role templates content access control 
proceedings second acm workshop role access control rbac pages november 
martin thomas schwentick luc 
evaluation conjunctive queries tractable 
proceedings rd annual symposium theory computing stoc pages july 
xsb research group 
xsb programming system 
xsb sourceforge net 
amir herzberg mass naor ravid 
access control meets public key infrastructure assigning roles strangers 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
trevor jim 
sd trust management system certificate evaluation 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
ninghui li 
delegation logic logic approach distributed authorization 
phd thesis new york university september 
ninghui li joan feigenbaum 
nonmonotonicity user interfaces risk assessment certificate revocation position 
proceedings th internation conference financial cryptography fc 
published springer 
crypto stanford edu ninghui papers fc pdf 
ninghui li benjamin grosof joan feigenbaum 
practically implementable tractable delegation logic 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
ninghui li william winsborough john mitchell 
distributed credential chain discovery trust management extended 
proceedings eighth acm conference computer communications security ccs pages 
acm press november 
emil lupu morris sloman 
reconciling role management role access control 
proceedings second acm workshop role access control rbac pages november 
ramakrishnan prasad rao sagonas swift david warren 
efficient access mechanisms tabled logic programs 
journal logic programming january 
ravi sandhu edward coyne hal feinstein charles :10.1.1.29.5742
role access control models 
ieee computer february 
simon mary ellen 
separation duty role environments 
proceedings th computer security foundations workshop csfw pages 
ieee computer society press june 
ullman 
principles databases knowledge base system volume 
computer science press 
william winsborough ninghui li 
practical automated trust negotiation 
ieee rd intl 
workshop policies distributed systems networks policy 
ieee press june 
william winsborough kent seamons jones 
automated trust negotiation 
darpa information survivability conference exposition 
ieee press january 
