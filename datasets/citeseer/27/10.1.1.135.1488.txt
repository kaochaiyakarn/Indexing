ifip acm middleware hierarchical architecture real time adaptive resource management rakesh jha honeywell technology center technology drive minneapolis mn usa cs umn edu jha honeywell com 
presents real time adaptive resource management system rtarm developed honeywell technology center 
rtarm supports provision integrated services real time distributed applications offers management services qos negotiation qos adaptation real time monitoring hierarchical qos feedback adaptation 
focus hierarchical architecture rtarm flexibility internal mechanisms protocols enable management resources integrated services 
architecture extensibility emphasized description service managers including object wrapper build real time network resource management 
practical experiments distributed automatic target recognition application synthetic pipeline application illustrate impact rtarm application behavior evaluate system performance 
current distributed mission critical environments employ heterogeneous resources shared host diverse applications cooperating common mission goal 
applications generally mix hard soft non real time applications different levels criticality variety structures ranging periodic independent tasks multimedia streams parallel pipelines event driven method invocation communicating components 
applications usually tolerate range quality services qos ready trade qos favor critical functions perform 
distributed systems able evolve adapt high variability resource demands criticality applications changing availability resources 
current industry trend build distributed environments mission critical applications common shelf cots commercial hardware software components 
middleware layer cots components provides consistent management system resources decreases complexity development costs 
funded darpa contract number 
coulson eds middleware lncs pp 

springer verlag berlin heidelberg ifip acm middleware presents real time adaptive resource management system rtarm developed honeywell technology center implements general middleware architecture framework adaptive management integrated services aimed real time mission critical distributed applications 
rtarm system basic features scalable criticality qos contract negotiation allows distributed applications share common resources maximizing utilization execution quality endto qos adaptation dynamically adjusts application resource utilization availability optimizing application qos integrated services cpu network resources qos guarantees realtime application qos monitoring integrated services plug play architecture components easy extensibility new services 
resource management architecture rtarm uses innovative approach unifies heterogeneous resources management functions hierarchical uniform service model 
building block architecture service manager sm 
encapsulates set services management functions exports common interface clients service managers 
facilitates recursive hierarchies heterogeneous services integrated bottom 
higher level service manager aggregates services provided lower level sms provides clients higher level qos representation 
focus architecture protocols implementation rtarm prototype supports integrated services real time distributed applications 
runs middleware network workstations uses corba portable communication 
major contribution hierarchical feedback adaptation mechanism provides efficient dynamic qos control distributed data flow applications 
illustrate rtarm capabilities practical experiment automatic target recognition atr distributed application synthetic pipeline demonstration application 
darpa quorum program provides extensive framework research projects 
similar efforts building adaptive management systems heterogeneous resources ara 
precursor rtarm 
introduced uniform resource model atomic ripple scheduling protocol 
hierarchical architecture reflects application data flow offer feedback adaptation 
ara considers discrete set runtime configurations distributed applications feedback adaptation resource reallocation 
ara architecture non recursive differs considerably uniform rtarm architecture proxies specific service providers 
designed multimedia applications defines basic resource management components resource scheduler qos broker adhere uniform resource model considering deeper recursive structures qos composition 
introduces portable qos enabled middleware platform suitable building multimedia real time distributed applications 
rest organized follows 
section describes rtarm hierarchical architecture system models interfaces 
section presents architecture service manager describes cpu network higher level sm 
section continues experiments involving atr application ifip acm middleware synthetic pipeline applications emphasize rtarm capabilities 
concludes section discussion plans 
rtarm system architecture designed implemented rtarm system prototype middleware layer operating system network resources 
middleware approach provides benefit flexibility portability increased distance basic resources fine grained control difficult 
rtarm servers developed run user level processes windows nt workstations export corba orbix interface clients applications 
rtarm model differentiates clients applications 
client entity issues request services negotiates qos contract defines allocated services 
application consumes services reserved client behalf continuously cooperates resource management system achieve best available qos maintaining runtime parameters contracted region 
qos contract may change application lifetime 
service manager hierarchy rtarm system employs hierarchical resource management architecture facilitates provision integrated services heterogeneous resources 
uniform resource model defines recursive structural entity called service manager sm encapsulates set resources management mechanism 
bottom hierarchy sms provide management functions basic resources cpu network resources directly control resource utilization application components 
higher level services assembled top lower level services giving rise service hierarchy 
sm integrated service cpu sm app clients hsm app network sm fig 

sample rtarm hierarchy consisting network sm cpu sm integrated service managers ifip acm middleware resources negotiation requests treated uniformly entire hierarchy 
higher level service managers hsm may act clients lower level sms lsm 
hierarchy allows dynamic configuration new service managers join system time 
request integrated service sent hsm may require resources lower level service providers 
admission protocol builds virtual reservation tree sm hierarchy remains valid entire application lifetime 
sm hierarchy forms directed acyclic graph sm nodes edges represented uses services relation 
illustrates simple rtarm hierarchy lsms cpu network sm bottom hierarchy 
clients request services applications consuming cpu network resources 
section describes service managers detail 
benefits hierarchical recursive resource management architecture 
services complex composite qos representations easier implement top basic services 
complex distributed applications benefit richer representation qos 
simplifies application design facilitates consistent resource management qos incompatible applications 
regardless complex application architecture qos semantics top sm hierarchy bottom hierarchy translates qos requests basic services cpu network prototype 
hierarchical architecture rtarm scales large distributed environments 
sms grouped clusters may benefit service localization avoid communication bottlenecks 
sharing lsms adds redundancy fault tolerance load balancing 
contrast centralized approach heterogeneous resource management distributed environments may introduce drawbacks central controller communication processing bottleneck point failure decreased flexibility certain performance benefits lower latency 
potential shortcoming deep rtarm hierarchies derives increased distance top level sm bottom layer hierarchy 
may cause high latency time sensitive rtarm functions feedback adaptation application control case deep sm hierarchies 
issues related deadlock prevention distributed sm synchronization studied project easily extended rtarm model 
rtarm system models qos model translation 
quality interaction mission critical application dynamic environment directly reflects performance 
wide magnitude interaction requires range quality measures 
rtarm supports multidimensional qos representation dimension specifying acceptable range qmax quality parameter application 
set range specifications dimension defines qos region 
qos model facilitates resource negotiation resource management flexible 
ifip acm middleware rtarm recursive hierarchy qos representation sm reflects type services provided sm 
hsm translates qos request integrated services individual qos requests services provided lowerlevel sms 
sm receives replies lsms returned qos qos representation process called qos reverse translation 
rtarm uses unique implementation qos independent addressed service 
define qos parameter set name value pairs value part sequence scalar primitive data values string short double name indicates specific qos dimension rate workload latency 
adaptation model 
rtarm recognizes situations application qos may changed admission qos shrinking reduction lower criticality applications new application comes qos expansion improvement applications depart release resources feedback adaptation 
imply contract changes involve applications feedback adaptation change contract varies current operational point application contracted qos region 
feedback adaptation closed loop control 
relies monitoring delivered qos uses difference delivered desired qos adapt application behavior 
rtarm interfaces sm implements exports interfaces negotiator admission control collateral adaptation qos expansion application control suspend resume service manager sm hierarchy set register sm monitor application monitoring event propagation 
admission control adaptation rtarm uses modified version ripple scheduling algorithm 
detailed description examples follows section 
briefly said rtarm admission adaptation employ transaction phase commit protocol applied recursively sm 
phase executes service availability test starting sm received admission request reservation tree resulted qos translation request dispatch process 
available reserved qos propagates back initiator sm lowest sm layer reverse translated way 
second phase initiator sm assesses success status reservation phase transaction committed aborted implying service reservations spanning tree committed cancelled respectively 
resources available sm try adapt lower criticality applications minimum contracted qos released resources new application 
resources available sm expands qos critical applications 
order admit new critical application squeeze qos part existing distributed application 
changes high level qos may require collateral adaptation components ifip acm middleware application directly impact admission new application 
instance multimedia stream application having frame rate qos parameter processing stage adapted minimum rate stages run low rate 
section presents object architecture sm details implementation cpu network higher level sm 
rtarm service managers service manager architecture implementation unified resource model provides benefits uniform internal architecture service managers common interface 
involved admission control cross application adaptation scheduler allocator adapter configuration manager translator negotiator fig 

internal object architecture service manager shared data structures sms application contracts fb adaptation monitoring fb adapter detector involved feedback adaptation monitor arrows indicate object service requests 
components sm follows negotiator brokers contract admission delegates responsibilities components exports external rtarm corba interface 
translator translates higher layer integrated qos lower layer qos representation 
allocator handles resource allocation release adaptation necessary 
adapter handles resource allocation release adaptation qos expansion contraction 
scheduler determines allocation resources expansion application qos feasible 
enforces changes application qos status 
ifip acm middleware monitor keeps eye applications execution passes status information qos usage detector 
exports external rtarm corba interface 
detector uses application runtime information current qos operational point detect significant changes application operation overload underutilization contract violation 
triggers feedback adapter actions 
feedback adapter decides corrective actions applications runtime status changes significantly 
additional data structures exist hold information regarding application contracts service managers available services 
applications implement simple corba interface allows sms change qos status 
lsms keep proxies application corba server objects 
rtarm corba servers applications started shared multi client activation mode 
sm component class object interface regardless sm position hierarchy resources sm controls 
instance adapter object implements functions sms way depends scope sm 
components required sm 
example translator may exist inside hsm 
rtarm provides common object oriented execution framework allows users dynamically load sm components shared libraries runtime configuration 
configuration manager uses mechanism similar factory method instantiate sm components 
passes configuration information extracted configuration file sm components initialization 
sms single executable program originally contains empty sm framework configuration manager 
loading specialized components shared libraries configuration manager practically starts different sms 
technique initialize cpu network higher level sms components specific windows nt dlls 
flexibility plug play feature permits implementation new sm just replacing set components realize particular sm component interface rewriting program 
writing new sm component requires header file object interface executable program common execution framework corresponding library 
cpu service manager cpu sm provides periodic applications access processor resource 
computing node cpu sm allowing concurrent applications share cpu 
application qos bi dimensional application execution rate iteration execution time 
cop current operational point represents current values multidimensional qos 
ifip acm middleware rate cpu utilization constant requested region feasible region workload fig 

cpu service manager qos representation admission adaptation 
specific cpu scheduling policy isolated scheduler object monitor keeps track application cpu utilization 
invariant condition admission schedulability applications processor utilization 
sophisticated cpu sm implemented time just plug play feature replacing default scheduler component specific scheduling discipline 
cpu sm service allocation unit periodic application fraction cpu utilization 
cpu sm communicates information applications assumes behaved keep process utilization allocated limits 
sm scheduler assigns application rates control underlying os scheduler 
policy works fine larger time scale experimental purposes 
real time performance solution implement soft real time cpu scheduling server os scheduler 
commercial operating systems soft real time capabilities windows nt solaris limit scheduler granularity ms 
cpu sm implements ripple scheduling admission protocol 
bottom sm hierarchy lsms recursive calls 
adaptation collateral adaptation reduce application rate minimum contracted value 
qos expansion increases application contracted qos rate best available value 
feedback adaptation 
cpu sm controls task rate real time 
change workload left exclusively application control 
applications send current qos operational point events cpu sm monitor periodic iteration 
moment qos cop may vary fraction contracted processor utilization 
cpu sm adjusts cop follows increase rate workload decreases decrease rate overload workload pushes cop outside contracted region 
ifip acm middleware network service manager integrated real time network management system texas university rtarm system 
runs middleware provides connection oriented real time communication guaranteed delay bandwidth cots network infrastructure atm switched mbps ethernet 
uses tri dimensional qos period delay message size adds connection source destination network addresses connection contract 
resource management interface incompatible rtarm interfaces 
different semantics export phase commit protocol 
built object oriented wrapper hides incompatibilities exports rtarm interface clients applications 
wrapper method integrate service provider rtarm architecture 
hsm negotiator adapter library allocator scheduler object wrapper application fig 

object wrapper communication manager wrapper implements sm components negotiator adapter map rtarm interface calls admission adaptation expansion native api 
provide feedback adaptation connections wrapper sm implement feedback adaptation 
important note hsm integrated services parallel pipeline applications implements hierarchical feedback adaptation 
detailed section 
higher level service manager integrated services rtarm service manager hierarchy aggregate services lsms cpu network type sm provide rtarm services ifip acm middleware applications need complex qos representation 
unified resource model enables recursive deployment 
hsm implementation generic able support various types distributed applications arbitrary qos representations map available lsm qos 
restriction ripple scheduling admission adaptation procedure hierarchical feedback adaptation contradict application semantics 
qos translator sm component inside hsm responsible translating qos request lsms understand 
replacing translator component different different qos representation produces hsm capable supporting different integrated services 
admission adaptation 
negotiator implements recursive twophase admission protocol runs heart hsm 
code phase reservation follows test reservation candidates requested qos region returned acceptable qos region candidates list applications may adapted order accommodate current request list adapted applications translate ls list requested services lsms corresponding qos service 
service ls lsm lsm provides service success lsm test reservation lsm candidates run lsm success mark admitted service continue service ls service admitted cancel previous successful reservations return false services ls admitted reverse translate maximize returned qos perform collateral adaptation necessary return true second phase commits resource reservation phase implemented ifip acm middleware commit reservation qos region commit list applications adapted phase adaptations committed translate list lsms committed qos service lsm lsm commit reservation lsm run lsm save application contract cancel reservation call similar commit reservation omitted 
figures illustrate examples admission new application id hsm lsms 
test reservation rtarm calls test reservation test adapt commit reservation commit adapt applications running services 
example application denoted runs denoted 
new application requires services maps 
example admitted 
admission needs adaptation application 
triggers collateral adaptations entire application adapted 
calls test adapt ask adapt application 
execution commit reservation call number collateral adaptation committed commit reservation calls plus extra commit adapt call 
example shows call sequence application accepted rejected 
hsm rejects returns false test reservation call 
commit reservation fig 

example successful admission application hsm ifip acm middleware rtarm calls test reservation cancel reservation test reservation implemented pipeline service manager psm hsm aggregates services lower level sms cpu network higher level integrated representation suited pipeline applications 
psm supports periodic independent tasks periodic parallel pipeline applications consisting communicating stages arbitrary configuration single source single sink node 
assume sensor enters periodically data frames pipeline 
frame processed stage composite stage consisting parallel strings elementary stages sent stage 
pipeline application depicted 
periodic pipeline applications qos consisting message latency rate final stage 
admission contract contains execution time stage message size inter stage connection 
job pipeline translator decompose integrated service pipeline request cpu network admission requests 
assume stages range rate 
pipeline qos latency frame rate plus state workloads message sizes translates cpu qos parameters stages network qos network connections 
cpu qos rate range pipeline frame rate 
pipeline translator uses rate range fraction pipeline latency generate network qos parameters 
admitted fig 

example failed admission application hsm 
stage denied fig 

sample parallel pipeline application stages ifip acm middleware hierarchical feedback adaptation parallel data flow applications 
implemented innovative efficient hierarchical feedback adaptation mechanism parallel pipeline applications 
performs feedback adaptation levels sm hierarchy 
pipeline latency controlled hsm level cpu sms perform cpu feedback adaptation independent hsm 
pipeline qos parameter consider critical want control toend latency 
pipeline evolves time rates intermediate stages may change result cpu sm feedback adaptation 
normal circumstances input sensor period maintained value greater current period stage parallel pipeline application get lower independent cpu feedback adaptation 
accumulation queues stages increases endto latency maximum threshold psm sets input sensor period maximum value pipeline contract 
finite state machine psm maintains maximal period fixed time allowing queues empty 
psm sets input sensor period maximal current period stages typically lower maximum period contract 
proved latency decreases finite number frames pipeline enters region stability latency output frame rate contracted region 
method simple quite efficient parameter adjusted sensor input period pipeline stages controlled corresponding cpu sm 
mechanism avoids costly communication coordination hsm cpu sms 
information required pipeline feedback adaptation minimal latency current frame maximal current period stages 
section experiments synthetic pipeline applications automatic target recognition application give performance estimates rtarm system 
experiments performance evaluations section preliminary experiments reflect current research progress 
need fully assess implication hierarchical architecture system performance 
experiment deals synthetic pipeline applications yields performance numbers admission adaptation qos expansion cpu network pipeline sms 
second experiment tests feedback adaptation parallel pipeline applications 
forward looking infrared automatic target recognition application provides excellent testbed prove efficiency hierarchical feedback adaptation technique 
runtime environment experiments consists mhz dell workstation machines running windows nt connected fore atm switch oc mbps links 
machine hosts cpu sm 
network sm controls inter stage communication pipeline sm run machines 
consider cpu resource consumption negligible 
ifip acm middleware inter sm corba communication uses secondary fast ethernet network atm lines remain available inter stage communication 
nt performance counter precise time measurements 
performance admission adaptation evaluating admission adaptation expansion performance pipeline applications devised scenarios 
client fig 

scenario 
sm configuration stage mapping scenario 
tested admission stage pipelines sm hierarchy hsm nsm cpu sms illustrated 
sequence events 
admit pipeline adaptation required 

admit pipeline higher criticality stage adapted due cpu constraints sm stages network connections adapted 

terminate pipeline pipeline expanded back original qos stages network connections 

try admission pipeline lower criticality cpu resources admission denied 

terminate pipeline 
scenario runs environment scenario similar pipeline applications stages adaptation caused network bandwidth constraints cpu resource insufficiency 
tests measured time required complete rtarm interface calls admission adaptation expansion cpu network pipeline pipeline ifip acm middleware pipeline sm 
measured time consists actual processing overhead time complete nested calls application corba servers cpu sm management subsystem application corba servers network sm wrapper lsms pipeline sm 
performance measurements pipeline sm listed table cpu sm table network sm table 
values expressed milliseconds 
table 
performance measurements pipeline service manager adaptation adaptation total time processing time total time processing time test reservation commit reservation cancel reservation test expansion commit expansion app table 
performance measurements cpu service manager adaptation adaptation corba corba corba corba test reservation commit reservation cancel reservation test adapt test expansion commit expansion app table 
performance measurements network service manager adaptation adaptation total processing corba total processing corba time time time time time time time time test reservation commit reservation test adapt test expansion commit expansion app psm total time columns include sequence recursive rtarm corba calls lsms algorithm processing overhead 
calls may ifip acm middleware require adaptation lower criticality applications test reservation step scenario calls expansion operations adaptation 
table notice reservation operations app require extra processing adaptation involved 
processing time test reservation considerably larger calls involves back forth qos translation reverse translation 
stands large total time consumed commit reservation stage pipeline application approximately seconds 
time includes duration commit reservation calls cpu sm take ms pipeline stage see table 
cpu commit reservation call generates set qos call committed application qos application stage corba server 
stages running admission happens 
orbix daemon starts stage process passes corba server iiop tcp port number ip address cpu sm 
stage initialized able respond set qos corba call cpu sm 
time start windows gui application pipeline stage windows nt half second test configuration 
table shows time measurements sm complex wrapper communicates tcp ip host traffic manager stages set qos corba calls commit reservation 
communication latency overhead caused comparable corba communication overhead ms 
conclude operation rtarm system efficient commit reservation call cpu applications 
major delay completely avoided pre loading applications client submits pipeline contract hsm 
system performance may improve faster corba implementation guarantees real time operation deadlines 
performance hierarchical feedback adaptation automatic target recognition experiment 
tested rtarm feedback adaptation mechanism true mission critical application 
atr application schematically shown processes video frames captured camera displays recognized targets display 
stage sensor generates frames passed series filters processing elements stage displays original image identified targets 
frames bit pixels monochrome images contain variable number targets depending frame 
stages expose variable workload proportional number targets feedback adaptation cause queue accumulations negative effect frame latency 
ifip acm middleware performance metrics evaluation 
atr pipeline contract requires acceptable output frame period interval frame latency atr stages run variable workload period interval timing measurements feedback adaptation cpu sm psm sm level 
measured processing overhead feedback adaptation code part time takes sm react moment receives current qos application adaptation command enforced part part 
event cop cpu sm application latency set qos frame arrival period fig 

atr pipeline application high level qos event cop fig 

measuring feedback adaptation performance pipeline sm cpu sm set qos measured times displayed table 
cpu feedback adaptation detection enforcing qos adaptation takes ms 
time ms spent set qos operation way normal local corba call 
pipeline adaptation enforcement includes set qos call cpu sm controls sensor stage calls directly stage set qos call 
explains enacting pipeline qos adaptation takes double cpu sm qos 
displays cpu feedback adaptation stage atr pipeline 
stage variable workload triggers cpu sm change rate 
points time ifip acm middleware table 
feedback adaptation performance results cpu sm psm cpu sm pipeline sm detection decision total time decision processing enactment ms ms ms ms ms ms indicate overload triggers rate decrease points indicate chronic underutilization determines rate increase 
experiment time seconds workload rate cpu load rate workload fig 

cpu sm feedback adaptation task variable workload running atr application pipeline feedback adaptation mechanism sure latency rate stay contracted range 
order practically demonstrate effectiveness disabled pipeline feedback adaptation time keeping sensor input period sustained low value hz 
caused accumulation frames stage queues translated increasing frame latency 
feedback adaptation disabled get latency measurements drew dotted line points latency reached way contracted value re enabled pipeline feedback adaptation 
immediately psm sensor increased sensor input period 
latency went rapidly threshold brief spike caused inertia frames transit pipeline 
ifip acm middleware elapsed time seconds fig 

latency variation atr pipeline feedback adaptation feedback adaptation algorithm implemented tends keep intermediary stage queues empty changing input sensor period 
effective introduces high oscillations latency 
research control theory design efficient algorithms target history prediction able smooth latency oscillations compromising performance response time 
hierarchical feedback adaptation algorithm proved effective efficient 
detection decision enforcement take ms involve cpu sms sensor stage reports latency rate 
disable pipeline feedback adaptation enable pipeline feedback adaptation presents middleware architecture implementation rtarm system 
focused architectural elements enable rtarm support integrated services uniform service management recursive hierarchy protocols common architecture service manager facilitates rapid object oriented prototyping massive code reuse features play support sm components 
detailed specific service managers constitute rtarm hierarchy 
clean flexible architecture sm allowed integrate quickly new service provider rtarm hierarchy 
built object wrapper incompatible interface network management system provided corba interface implemented rtarm service managers 
experiments illustrate practical rtarm system effectiveness real world automatic target recognition sensor input period latency threshold ifip acm middleware application 
demonstrated hierarchical feedback adaptation mechanism able efficiently control real time dynamic behavior parallel pipeline distributed application 
plan port rtarm real time corba implementation wustl tao optimize performance 
intend develop sophisticated feedback adaptation mechanisms prediction features decrease system reaction time optimizing application qos 

jha hierarchical feedback adaptation real time sensor distributed applications appear proceedings rd ieee international symposium object oriented real time distributed computing 
coulson configurable multimedia middleware platform ieee multimedia vol 
guan li zhao adaptive connection admission control mission critical real time communication networks appear international journal parallel distributed systems networks special issue network architectures quality service support 
gamma helm johnson vlissides design patterns 
elements reusable object oriented software addison wesley 
huang jha schwan zhao 
rt arm real time adaptive resource management system distributed mission critical applications proceedings ieee workshop middleware distributed real time systems services december 
huang wang cao developing distributed multimedia services qos criticality resource negotiation adaptation journal real time systems may 
huang wang cao global resource management system distributed qos criticality support proceedings th ieee international conference multimedia computing systems june 
iona technologies orbix programmer guide 
jha schwan rosu adaptive resource allocation embedded parallel applications proceedings rd international conference high performance computing december 
nahrstedt chu narayan qos aware resource management distributed multimedia applications appear journal high speed networking special issue multimedia networking 
quorum www darpa mil ito research quorum 
rosu schwan framework adaptive resource allocation complex real time systems proceedings th ieee real time technology applications symposium june 
li zhao design implementation toolkit delay guaranteed communications proceedings milcom december 
schmidt levine design tao real time object request broker computer communications special issue building quality service distributed systems elsevier science 
