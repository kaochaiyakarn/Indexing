language independent unsupervised model morphological segmentation morphological segmentation shown beneficial range nlp tasks machine translation speech recognition speech synthesis information retrieval 
number approaches unsupervised morphological segmentation proposed 
describes algorithm draws previous approaches combines simple model morphological segmentation outperforms approaches english german yields results agglutinative languages finnish turkish 
propose method detecting variation stems unsupervised fashion 
segmentation quality reached new algorithm improve grapheme phoneme conversion 
morphological segmentation shown beneficial number nlp tasks machine translation speech recognition information retrieval de rijke question answering 
segmenting word units particularly interesting morphologically complex languages words composed morphemes inflection derivation composition 
data sparseness languages significantly decreased vera school informatics university edinburgh edinburgh eh lw gb sms ed ac uk words decomposed morphologically 
exist number rule morphological segmentation systems range languages 
expert knowledge labour expensive analyzers updated regular basis order cope language change emergence new words inflections 
argue unsupervised algorithms interesting option engineering point view rule systems usually lead better results 
segmentations unsupervised algorithm language independent cheap resource needed unannotated text 
unsupervised system reaches performance level help task constitute attractive additional component 
number approaches unsupervised morphological segmentation proposed 
algorithms autonomously discover morpheme segmentations unannotated text corpora 
describe modification unsupervised algorithm reports 
reports algorithm performed best english competition unsupervised morphological segmentation low recall morphologically complex languages german finnish turkish 
add new step designed achieve higher recall morphologically complex languages propose method identifying related stems underwent regular non concatenative morphological processes morphological alternations morpheme boundaries 
structured follows section proceedings th annual meeting association computational linguistics pages prague czech republic june 
association computational linguistics discusses relationship level supervision learning algorithm 
give outline main steps reports algorithm section explain modifications original algorithm section 
section compares results different languages quantifies gains modifications algorithm evaluates algorithm grapheme phoneme conversion task 
summarize results section 
previous world languages classified morphology isolating languages little morphology chinese agglutinative languages word decomposed large number morphemes turkish inflectional languages morphemes fused latin 
phenomena difficult cope unsupervised algorithms processes vowel modifications boundaries morphemes write um wrote sin written german mach en ge mach done arabic broken plural sleep sleeping sleeping 
words subject processes trivial automatically group related words detect regular transformational patterns 
range automated algorithms morphological analysis cope concatenative phenomena base mechanics statistics hypothesized stems affixes 
approaches categorized ones conditional entropy letters detect segment boundaries harris weiss jean bernhard approaches minimal description length minimize size lexicon measured entries links entries constitute word form goldsmith creutz lagus 
types approaches closely tie orthographic form word morphemes 
suited coping stem changes modifications edges morphemes 
approaches addressed word internal variations 
popular effective approach detecting inflectional paradigms filter affix lists cluster affixes regular transformational patterns occur stem goldsmith gaussier jurafsky jacquemin 
draw idea clustering order detect orthographic variants stems see section 
approaches take account syntactic semantic information context word occurs jurafsky jacquemin 
exploiting semantic syntactic information attractive adds additional dimension approaches cope severe data sparseness issues approaches emphasize word internal cues computationally expensive especially lsa 
original reports algorithm assumes morphology concatenative specializes approaches developed implemented english goldsmith jurafsky gaussier 
languages morphologically complex 
example german algorithm needs cope compounding turkish words long complex 
extended original reports algorithm better adapted complex morphology suggest method coping stem variation 
modifications render algorithm language independent attractive applying languages 
reports algorithm english reports algorithm clearly outperformed systems morpho challenge obtaining measure prec recall 
best system obtained score 
algorithm perform languages turkish finnish german due low recall see 
main steps algorithm 
data structured trees provide basis efficient calculation transitional probabilities letter context 
second step affix acquisition step set morphemes identified corpus data 
third step uses morphemes segment words 
data structure data stored trees forward tree backward tree 
branches correspond letters nodes annotated total corpus frequency letter sequence root tree node 
affix identification process forward tree discovering suffixes calculating probability seeing certain letter previous letters word 
backward tree determine probability letter letters word order find prefixes 
transitional probability high word split low probability indicator morpheme boundary 
tree stems tend stay long unary branches branching factor high places morpheme boundaries occur 
underlying idea exploiting letter successor variety proposed harris number segmentation algorithms weiss bernhard 
finding affixes second step concerned finding affixes 
procedure quite simple divided subtasks 
generating possible affixes validating 
validation step necessary exclude bad affix candidates letter sequences occur frequently sch spr ch german sh th qu english 
www cis hut fi affix validated criteria satisfied occurrences 
substring remains peeling affix word lexicon 

transitional probability second stem letter 
transitional probability affix letter stem tolerance 
affixes concatenations suffixes ungen split ung en german removed 
step returns lists morphological segments 
prefix list contains prefixes stems usually occur words suffix list contains suffixes stems occur words 
remainder refer content lists prefixes suffixes include stems 
assumptions encoded procedure specific english cause recall low languages stems valid words lexicon affixes occur words change stems 
section propose ways relaxing assumptions step language specific 
segmenting words final step complete segmentation words list affixes acquired previous step 
original reports algorithm uses simple method probable suffix transitional probability smaller affixes match half word remains 
condition problematic scale languages complex morphology 
peeling process executed prefixes 
method better heuristic peel longest possible affix takes account probable sites fractures words sensitive affix context morphotactics language 
typical mistakes arise condition inflectional suffixes occur word split middle word previously having peeled number suffixes 
modifications extensions morpheme acquisition ran original algorithm german data set suffixes validated reasonable prefix lists 
algorithm works fine english suffixes fail german 
algorithm failure detect german suffixes caused invalid assumption stem word corpus 
german verb stems occur certain imperative forms 
stripping suffix verb fetch remaining string lexicon 
words part corpus 
problem occurs german nouns 
condition affix acquisition step needs replaced 
introduced additional step building intermediate stem candidate list affix acquisition process 
condition replaced condition checks stem stem candidate list 
new stem candidate acquisition procedure comprises steps step creation stem candidate list substrings satisfy conditions condition stored set affixes occur 
process similar idea registering signatures goldsmith 
example assume corpus contains words hrung hrt stem hr act valid german word 
conditions met transitional probability hr letter low lot different possible continuations transitional probability 
stem candidate hr stored suffix candidates ung en 
step ranking candidate stems types affix candidates type affix candidates words contained data base full words due compounding type affix candidates inflectional derivational suffixes 
ranking stem candidates take account number type affix candidates average frequency affix determining threshold validating best candidates stem candidate list 
candidates 
condition precision similar original method 
morphemes method predominantly stem forms occur compounding derivation mme mme 
second condition enables differentiate stems occur common suffixes high average frequencies affix list contains 
rare generated regular process 
step pruning stem candidates occur times removed list 
remaining stem candidates ordered average frequency non word suffixes 
criterion puts high quality stem candidates occur common suffixes top list 
order obtain high precision stem list necessary cut list candidates point 
threshold determined data choose point function list rank vs score changes steepness see 
visual change steepness corresponds point potential stems get noisy strings occur common affixes 
performance resulting morphological system quite stable score cutting point slope list german data set ranks importantly function tails 
threshold robust languages data sets 
morphological segmentation discussed section original implementation algorithm iteratively chops probable affixes edges word account context affix 
morphologically complex languages context blind approach leads suboptimal results allows segmentations impossible inflectional suffixes middle words 
risk letter sequence left removing potential prefixes suffixes ends proper stem just single letter vowel letter sequence 
problems solved bi gram language model capture properties particular language 
simply peeling probable affixes ends word possible segmentations word generated ranked language model 
probabilities language model learnt set words segmented original simple approach 
bootstrapping allows ensure approach remains fully unsupervised 
word edge marker attached word 
model acquire probabilities affixes occur edges words 
table shows filtering segmentation results gram language model caused significant improvement score languages led significant changes precision recall 
original segmentation yielded balanced precision recall new filtering boosts precision recall 
method preferable precision recall important task dependent 
plan draw creutz lagus hmm categories impose constraints 
approach element affix list assigned certain probability underlying categories stem prefix suffix depending left right perplexity morphemes morpheme length frequency 
transitional probabilities category model rules language learnt automatically 
learning stem variation stem variation english example run ran interesting problem captured algorithm outlined variations take place morphemes 
stem variations contextdependent constitute morpheme 
german leads data sparseness problems morphological segmentation affix acquisition 
problem affixes usually cause difficult find 
typically stems seen small number different affixes means affix sets stems divided unrelated subsets causing stem pruned stem candidate list 
secondly lead low transitional probabilities positions stems phenomena occur 
consider example affix set stem candidate contains ung nge 
morphemes spr ng derived root spring jump 
segmentation step low transitional probability leads oversegmentation 
investigated learn regular stem variations automatically 
simple way acquire stem variations look suffix clusters calculated stem acquisition step 
looking sets substrings clustered having prefix inflections lexicalized compounds frequently different inflectional variants 
example find nge corpus 
affix list stem candidate contains words spr nge 
edit distance find differences words certain affix list 
pairs small edit distances stored ranked frequency 
regular transformation rules occur top list automatically accepted rules see table 
method allows find relation words lexicon spr nge automatically learn rules applied unknown words check variant word lexicon 
freq 
diff 
examples sack cke br che stark st hen fl ge nde ge sse passes chor ch re strom str rohr en laden damm ss sst mi 
en 
en la um studios table excerpts stem variation detection algorithm results 
morphologically unrelated word pairs marked asterisk 
integrated information stem variation regular stem transformation rules highest frequencies segmentation step creating equivalence sets letters 
example rule generates equivalence set 
letters count letter calculating transitional probabilities 
evaluated benefit integrating stem variation information german german celex data set achieved improvement recall loss precision measure precision recall values reports stems 
better comparability systems languages results reported section refer system version incorporate stem variation 
evaluation evaluating different versions algorithm english turkish finnish training test sets enable comparison systems 
performance algorithm german evaluated manually annotated words celex german included data 
table shows stem candidate acquisition step led higher recall german finnish turkish caused losses precision 
english adding components large effect precision recall 
means component behaved improves performance languages intermediate stem acquisition step lang 
alg version meas 
prec 
recall eng original stems gram seg 
ger original stems gram seg 
tur original stems gram seg 
fin original stems gram seg 
max split table performance algorithm modifications different languages 
data german celex needed impair results languages 
recall finnish low 
improved expense precision selecting analysis largest number segments segmentation step 
results heuristic evaluated smaller test set ca 
marked asterisk table 
algorithm efficient trained tokens german taz corpus takes gb memory 
training phase takes approx 
min ghz machine segmentation test words takes min version simple segmentation min version generates possible segmentations uses language model 
comparison systems modified version algorithm performs second best english original reports ranks third turkish algorithm measure categories map 
german method significantly outperformed unsupervised algorithms see table 
systems compared developed languages german describes system initially built german 
trained deutscher corpus comprises sentences achieves score precision recall evaluated full celex corpus 
data personal communication 
morphology meas 
prec 
recall eti reports lm reports stems best bernhard orig 
reports best table evaluating rule data systems morphological segmentation respect celex manual morphological annotation 
rule systems currently common approach morphological decomposition perform better segmenting words state ofthe art unsupervised algorithms see table performance state art rule systems evaluated data 
eti schmid systems rely large lexicon set rules 
system returns set analyses disambiguated different ways 
details refer pp 

evaluation grapheme phoneme conversion morphological segmentation value question help improve results application 
performance improvements due morphological information reported example mt information retrieval speech recognition 
task morphological segmentations unsupervised systems shown improve accuracy 
motivation evaluating system task manually annotated data linguistically motivated morphological segmentation necessarily best possible segmentation certain task 
evaluation manually annotated corpus prefers segmentations closest linguistically motivated analyses 
furthermore important certain task find particular type morpheme boundaries boundaries stems task technology 
eti tts system 
www com cd ss htm morphology meas 
celex dt celex eti reports lm morphology orig 
reports bernhard reports stem table measure evaluation manually annotated celex phoneme error rate conversion decision tree dt 
important find boundaries stems suffixes 
standard evaluation procedure differentiate types mistakes 
evaluation task provide information high precision high recall important decision version algorithm chosen taken specific task 
reasons decided evaluate segmentation new versions reports algorithm german grapheme phoneme conversion task 
evaluation task motivated fact showed quality morphological preprocessing improve conversion results 
compare effect system segmentations range different morphological segmentations systems 
ran rule systems eti unsupervised algorithms original reports bernhard celex data set retrained decision tree implementation lucassen mercer different morphological segmentations 
table shows score different systems evaluated manually annotated celex data full data set phoneme error rate conversion algorithm annotated morphological boundaries smaller test set decision tree supervised method needs training data 
see results distribution precision recall see table important impact conversion quality reports version higher precision signifi cantly outperforms version task measures identical 
remarkably reports version uses filtering step unsupervised system beats morphology baseline 
unsupervised systems tested system perform worse morphological information new version improves accuracy conversion 
significant improvement score achieved simple modifications reports algorithm generating intermediary high precision stem candidate list language model disambiguate alternative segmentations learning patterns regular stem variation exploited segmentation 
modifications improved results different languages considered english german turkish finnish achieved best results reported far unsupervised system morphological segmentation german 
showed new version algorithm unsupervised system systems evaluated achieves sufficient quality improve transcription performance grapheme phoneme conversion task 
acknowledgments making available code reports algorithm stefan bernhard running algorithms german data 
evaluating data test sets finnish turkish english 
furthermore am grateful christoph gregor hler training decision tree new morphological segmentation 
want frank keller acl reviewers valuable insightful comments 
bernhard 

unsupervised morphological segmentation segment predictability word segments alignment 
proceedings nd pascal challenges workshop pages venice italy 
stefan 

step approach unsupervised morpheme segmentation 
proceedings nd pascal challenges workshop pages venice italy 
mathias creutz krista lagus 

unsupervised models morpheme segmentation morphology learning 
acm transaction speech language processing 
jean 

morphemes necessary concepts structures discovery untagged corpora 
workshop paradigms grounding natural language learning pages adelaide australia 
vera 

letter phoneme conversion german tts system 
master thesis 
ims univ stuttgart 
vera 

phonological constraints morphological preprocessing grapheme phoneme conversion 
proc 
acl 
eric gaussier 

unsupervised learning derivational morphology inflectional lexicons 
acl workshop proceedings university maryland 
celex german linguistic user guide 
center lexical information 
max planck institut psycholinguistics nijmegen 
john goldsmith 

unsupervised learning morphology natural language 
computational linguistics june 


improving statistical mt morphological analysis 
proc 
emnlp 
margaret stephen weiss 

word segmentation letter successor varieties 
information storage retrieval pages 
harris 

phoneme morpheme 
language pages 
christian jacquemin 

guessing morphology terms corpora 
research development information retrieval pages 


simpler intuitive approach morpheme induction 
proceedings nd pascal challenges workshop pages venice italy 
creutz 

segmentation words morphemes challenge evaluation report 
proc 
nd pascal challenges workshop italy 
lucassen mercer 

information theoretic approach automatic determination phonemic baseforms 
icassp 
lavie carbonell levin 

unsupervised induction natural language morphology inflection classes 
proceedings seventh meeting acl pages barcelona spain 
de rijke 

shallow morphological analysis monolingual information retrieval dutch german italian 
proceedings clef lncs 
sylvain sean 

unsupervised learning morphology morphemes 
proc 
morphological phonological learning acl pub 
helmut schmid arne ulrich 

german computational morphology covering derivation composition inflection 
proc 
lrec 
patrick daniel jurafsky 

knowledge free induction morphology latent semantic analysis 
proc 
conll lll lisbon portugal 
taz corpus 
media gmbh 
https www taz de pt nf dvd 
david richard 

minimally supervised morphological analysis multimodal alignment 
proceedings acl hong kong 
