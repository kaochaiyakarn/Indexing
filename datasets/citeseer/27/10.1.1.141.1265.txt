aggregate query answering anonymized tables qing zhang nick koudas divesh srivastava ting yu north carolina state university university toronto labs research ncsu edu koudas cs toronto edu divesh research att com privacy serious concern microdata need released ad hoc analyses 
privacy goals existing privacy protection approaches anonymity diversity suitable categorical sensitive attributes 
applying directly numerical sensitive attributes salary may result undesirable information leakage propose privacy goals better capture need privacy protection numerical sensitive attributes 
complementing desire privacy need support ad hoc aggregate analyses microdata 
existing generalization anonymization approaches answer aggregate queries reasonable accuracy 
general framework anonymization support accurate answering aggregate queries show grouping permutation techniques answer aggregate queries accurately generalization approaches 
propose criteria optimize permutations accurate answering aggregate queries develop efficient algorithms criterion 
compared data dissemination pre aggregated statistical forms release microdata offers significant advantages terms information availability particularly suitable ad hoc analyses variety domains public health population studies 
release microdata raises privacy concerns revealing private information individuals 
simple deidentification removing explicit identifiers name ssn shown insufficient protect individual privacy 
attributes called age zip code date birth usually needed data analyses kept deidentification 
allows individuals sensitive information revealed microdata linked publicly available information quasi identifiers 
anonymization diversity techniques address privacy problem 
domain generalization guarantee publicly available information linked records microdata database sensitive attribute value related group entities having distinct sensitive attribute values specific individual 
privacy goal anonymization diversity suitable categorical sensitive attributes disease attribute patient record table different attribute values incomparable 
practice categorical attributes sensitive attributes microdata databases numerical salary investment gains losses credit score white blood cell count applying existing privacy goals anonymity diversity sufficient protect numerical attributes 
example diversity satisfied salary values fall narrow range sensitive information revealed 
important define new privacy goals protection numerical sensitive attributes microdata 
complementing desire privacy microdata need support ad hoc aggregate analyses select subsets records arbitrary conditions quasi identifiers compute aggregates sensitive attributes average salary men age texas 
existing approaches achieve privacy generalization quasi identifiers answer aggregate queries reasonable accuracy reducing utility released microdata 
investigate effective techniques support accurate aggregate query answering microdata preserving privacy 
essential goal privacy protection break association identifiers publicly available information sensitive attributes microdata 
observe multiple ways 
existing generalization approaches weaken link quasi identifiers publicly available databases microdata 
propose permutation approaches reduce association quasi identifiers sensitive attributes contributions 
id quasi identifiers sensitive tuple id name age zipcode gender salary alex bob carl debra frank gary helen jason 
example microdata table propose new privacy goal better capture privacy protection numerical sensitive attributes section 
requiring group sensitive attribute values distinct values proposed privacy goal requires range group larger certain threshold threshold prevents attacker determining individual sensitive attribute value narrow range 
second propose general framework permutation techniques support accurate answering aggregate queries protecting privacy section 
grouping tuples permutation anonymization techniques answer aggregate queries accurately generalization approaches 
third design query rewriting algorithms auxiliary relations ensure existing dbmss directly support aggregate query answering permuted microdata section 
auxiliary relations completely derived anonymized microdata database compromise privacy microdata 
fourth identify alternative criteria optimize permutations accurate answering aggregate queries develop efficient algorithms criterion section 
permutation approach constrained domain generalization hierarchies optimization algorithms obtain partitions microdata help answer aggregate queries accurately 
conduct comprehensive experiments real synthetic data sets demonstrate advantages proposed techniques section 
detailed example illustrating approach benefits 
examples consider population table shown needs shared business economic research answer aggregate queries query 
sum salaries age 
query 
minimum salary females 
quasi identifiers sensitive group id tuple id age zipcode gender salary 
example anonymity microdata table generalization 
table satisfies diversity population table de identified identity attribute name removed quasi identifier attributes age zip code gender linked publicly available information containing identity quasi identifier attributes permitting sensitive attributes salary individuals revealed 
current approaches addressing problem generalize domains quasi identifiers tuples quasi identifiers 
shows generalization age generalized range width zip code keeps digits gender totally suppressed 
resulting table satisfies anonymity means generalization tuple find tuples 
satisfies diversity tuples quasi identifiers different sensitive attribute values 
generalized table fact forms partition original microdata table group contains tuples generalized 
shows group id tuple 
propose permutation approach anonymization 
approach tuples table partitioned groups group different sensitive attribute values 
perform permutation tuples quasi identifiers sensitive attribute inside group 
shows table permutation group different sensitive attribute values 
fact partition generalization 
section show permutation approach achieve privacy protection existing generalization approaches 
significant benefit permutation approach provide accurate answers aggregate queries 
consider queries previously mentioned section 
approaches introduce imprecise information get correct answer aggregate queries 
approach get de quasi identifiers sensitive group id tuple id age zipcode gender salary 
example anonymous microdata table permutation lower upper bounds correct answer 
compare accuracy bounds approach 
query sum salaries age 
tables tuples second group included aggregation 
generalized table face difficulty dealing tuples third groups 
generalized ranges ages available get correct lower upper bound assume tuples participate aggregation 
bounds 
hand permutation approach know exactly tuples included aggregation group helps get accurate bounds 
query know tuples groups respectively participate aggregation 
bounds accurate derived 
query minimum salary females 
difficult answer query 
gender attribute totally suppressed order achieve anonymity 
know tuple exists gender female original table 
assume female table best bound get 
permuted table know female groups group 
salaries group higher group conclude minimum salary females table 
accurate bounds derived 
section show partitions approach produces accurate bounds aggregation queries generalization approach 
nice property lower upper bounds aggregation operation table computed efficiently combining bounds group partition 
facilitate efficient query answering group id hits sum sum min min 
example help table permuted table propose help table bounds group possible numbers hits 
aggregate query simply rewrite query permuted table determining number hits group join information help table quickly get bounds query result 
example help table table shown 
due space reasons show bounds sum min table 
include aggregation operations 
generalized permuted tables satisfy diversity 
partitions may problem terms privacy 
attacker knows age alex zipcode able derive alex salary 
attacker know exact salary alex range narrow sensitive 
example shows numerical sensitive attributes number distinct values group need consider range values group prevent inference 
reason introduce privacy parameter require range distinct values group 
call privacy objective anonymity 
instance generalized permuted tables satisfy anonymity violate anonymity 
sections formally describe anonymity permutation approach anonymization microdata 
privacy goal microdata 
types attributes original microdata table identifiers quasi identifiers sensitive attributes 
simplicity assume sensitive attribute microdata table focus numeric sensitive attributes techniques easily adapted process categorical sensitive attributes 
example original microdata table identifier quasi identifiers sensitive attribute shown 
de identified microdata table projection quasi identifiers tive attributes 
call projection sensitive information table denoted 
public information 
model publicly available information table attributes 
practice may exist multiple sources public information county real estate databases voter registration records 
model represents public information attacker may derive combining information multiple sources 
aggregate queries 
consider queries select subsets records microdata table arbitrary conditions quasi identifiers compute aggregates sensitive attribute 
aggregate queries important microdata analysis variety domains 
domain sensitive attribute assumed numeric sql aggregation operations count sum average min max aggregate queries 
privacy goal 
privacy violated attacker successfully recovers tuples sensitive information table 
formally privacy definition yao 
definition 
tuple called association 
set associations called association cover tuples value 
association cover size called association cover 
example consider microdata association cover 
definition 
de identified microdata database satisfies anonymity public database attacker derive association cover size 
definition captures essence privacy microdata preventing association individual id sensitive attribute value 
originally proposed concept anonymity defined specifically generalization approaches 
required generalization tuple table exist tuples having quasi identifiers equal 
original definition viewed goal generalization order achieve anonymity 
definition hand declarative independent specific techniques anonymization 
serves privacy definition comparison different anonymization techniques 
shown section numeric valued attributes preventing attackers deriving association cover size may protect privacy especially range attribute values association cover small 
propose extended definition protection numeric valued sensitive attributes definition 
de identified microdata database satisfies anonymity public database association cover attacker derive satisfies size association cover range sensitive attribute values association cover 
anonymization permutation essential reason attacker may recover individual sensitive attribute value existence links link identifier quasi identifiers public database link quasi identifiers microdata link sensitive attribute 
breaking weakening associations links help protect privacy 
domain generalization weakens second third links 
propose break third link permutation 
set tuples de identified microdata table randomly permute association quasi identifiers sensitive attribute domain generalization quasi identifiers 
intuitively attacker link individual identifier tuple quasi identifier example background knowledge able know certainty exact value individual sensitive attribute 
definition 
table attributes random permutation 
define permutation denoted set tuples 
definition 
de identified microdata table attributes partition 
group anonymous projection sensitive attribute contains different values range different values 
say partition anonymous partition anonymous 
denote anonymous permutation 
example shows anonymous permutation table 
note publishing permuted table attach tuple id group belongs 
words compared schema de identified table schema anonymized table extra attribute group id 
theorem 
anonymous permutation public database association cover attacker derive satisfies anonymity 
aggregate query answering anonymous permutation query condition quasi identifiers tuple unchanged know exactly tuples satisfy condition group partition 
suppose number 
due random permutation quasi identifiers sensitive attribute actual result aggregate may sensitive attribute tuples group 
worst case may totally different results aggregate 
expensive enumerate possible results large groups 
interested efficiently computing statistics lower upper bounds possible aggregates useful ad hoc analyses 
lower upper bounds number tuples satisfy condition aggregate query 
aggregation operation monotonic lower upper bound result aggregation smallest largest sensitive attribute values 
standard sql aggregation functions sum min max count monotonic lower upper bounds result efficiently computed 
lower upper bounds query microdata table derived depending aggregation function 
sum lower upper bound summation lower upper bound 
know total number tuples satisfying query condition lower upper bounds average directly computed sum 
easy see lower upper bounds min minimum lower upper bounds 
bounds max obtained similarly 
theorem 
partition defined generalization 
aggregate query lower upper bounds generalized table include permuted table partition 
auxiliary relation query rewriting observe aggregation operation matter query condition long number tuples satisfying condition bounds aggregation remain unchanged 
need compute bounds fly answering query 
propose create help table facilitate efficient query answering 
primary key help table group id hits identifies group partition represents number tuples group satisfying query condition 
group partition number hits table lists lower upper bounds aggregate sensitive attribute 
shows help table permuted table aggregates sum min 
number tuples help table microdata table 
aggregate query form select agg sensitive attribute permuted table rewrite get bounds query result 
rewritten query counts number tuples group satisfy condition permuted table joined help table bounds aggregation group combined compute bounds final query result 
computation easily expressed sql permuted help tables 
emphasize help table constructed directly permuted table requiring access original microdata table 
help table compromise privacy microdata way 
need compute help table released microdata database 
done offline affecting performance ad hoc analyses 
criteria anonymous partition shown partition anonymized table obtained permutation answer aggregate queries accurately obtained domain generalization 
arbitrary partition permutation approach may get satisfactory answers aggregate queries 
section turn discussion problem generating anonymous partitions produce accurate answers aggregate queries 
formally denote total order multiset sensitive attribute values partition 
totally ordered multiset denote indices data point group respectively 
range obtained 
denote error measure defined group point wise additive function 
formally define optimal partition problem problem optimal partition 
total order sensitive attribute obtain anonymous partition minimizes suitable choices point query scheme return point inside answer 
result maximum error incurred point query inside group 
intuitively smaller range group smaller error introduced answer aggregate queries 
groups may querying define function way error groups assuming uniform random workload point queries minimized 
natural aim minimize additive error max error groups 
candidate point wise additive functions 
call optimization problems functions minimum sum error problem minimum max error problem respectively 
denote sum max errors groups partition respectively 
minimum sum error problem loss generality assume ordered index minimum value group implies means lemma 
exists optimal partition minimum sum error problem groups lemma shows ranges groups optimal partition disjoint 
suggests problem optimal substructure property amenable dynamic programming solutions 
denote minimum cost way partition number groups say partition anonymous 
optimal solution partitioning data points groups equal minimum cost way extending point wise additive function problem sum optimal partitioning group 
easy see dynamic programming algorithm runs number tuples table 
minimum max error problem seemingly similar minimum sum error problem minimum max error problem turns complex 
shown groups optimal partition sum error problem disjoint ranges different groups overlapping possibly boundary property significantly reduces search space optimal partition 
non overlapping property hold optimal partitions minimum max error problem 
simple example consider set sensitive attributes optimal partition anonymity range overlaps range hand observe minimum error problem property 
lemma 
exists optimal anonymous partition groups ranges overlap 
words value domain sensitive attribute value falls ranges groups 
optimal anonymous partition satisfies property 
consider groups ranges overlap contains values 
remaining groups fact form optimal partition rest items 
hand suppose ranges overlap means divide parts part includes items equal part includes items greater smallest index items lemma combined include values 
wehave 
suppose smallest value 
allows merge 
resulting partition optimal overlap groups observation forms partition 
group anonymous 
distinct values number distinct values width range words partition anonymous rest anonymous maximum mini mized partition forms optimal anonymous partition 
study general optimization problem problem 
obtain partition anonymous rest groups anonymous minimized 
clearly minimum max error problem special case problem argument shows problem optimal substructure property 
intuitively possible move values possible part long distinct values 
step denote number distinct values determined parameters 
denote minimum cost way partition group anonymous rest groups anonymous 
details algorithm full version 
purpose discussion far show minimum max error problem fact tractable 
complexity far practical 
desirable design efficient approximation algorithms problem 
purpose limit search space partitions groups overlap consider problem problem 
obtain anonymous partition ranges groups partition overlap minimized 
call problem non overlapping minimum max error problem 
similar argument optimal solution minimum sum error problem hard see problem optimal substructure property solved dynamic programming space time 
theorem 
optimal partitions minimum max error problem non overlapping minimum max error problem 
experiments data sets experiment design experiments conducted adult database uci machine learning repository 
database obtained census data contains attributes tuples 
database previous works anonymity diversity :10.1.1.147.2134
choose quasi identifiers contain attributes previous works 
approach focuses numerical valued sensitive attributes experiments choose capital loss sensitive attribute 
particular interested people capital loss 
remove tuples capital loss attributes null 
leaves tuples 
range capital loss tuples distinct values 
conduct experiments synthetic data set uses schema adult database adjust variety parameters comprehensively evaluate permutation approach 
populate database different numbers tuples distributions capital loss attribute correlations capital loss attribute quasi identifiers 
details synthetic data set described experimental results 
main experiments report focus query answering accuracy 
set experiments compare accuracy bounds derived generalized table permuted table 
specifically lower upper bound aggregate query result respectively 
define relative error bounds 
smaller accurate bounds 
compare accuracy bounds different optimization criteria get anonymous partitions 
designed experiments study query answering overhead 
described previously answer aggregate query permuted database rewrite query queries permuted help tables 
experiments measure running time rewritten query demonstrate quite reasonable compared time takes execute un permuted microdata table 
details experiments full version 
accuracy generalization vs permutation compare relative errors bounds derived generalized table permuted table partition 
specifically partition satisfies anonymity diversity diversity obtained diversity algorithm generalization hierarchies reported 
resulting diverse partition composed groups 
note experiments diversity computed diverse partitions 
generalization diverse partitions majority quasi identifiers including age race native country generalized essentially removes attributes microdata table 
relative error number tuples selected generalization permutation 
relative errors arbitrary queries generalized table permuted table respectively consider general model aggregate queries 
note matter query condition result condition select set tuples group partition 
query viewed subset 
selecting different tuples group may model arbitrary aggregate queries 
experiment issue queries randomly touch arbitrary number tuples table compute average sensitive attribute values 
call queries arbitrary queries 
shows relative errors introduced generalized table significantly higher twice actual query results permuted table 
total number tuples selected increases relative error introduced permuted table drops dramatically introduced generalized table drop 
range queries common practice experiment issue aggregated queries certain range age attribute 
particular issue sequence queries form select avg capital loss age vary range 
relative errors range queries shown 
see accuracy bounds derived generalized table permuted table improve range queries 
generalized table error high span range query small groups partially covered query 
span range query increases groups completely covered query 
comparison meaningful favor generalization approach choose diverse partitions interesting attributes age generalized reasonable domains 
fact prevent age generalized diversity algorithm remove outliers tuples age 
age attribute suppressed diversity 
relative error rate span range query generalization permutation 
relative errors range queries generalized table permuted table observe dramatic drop relative errors generalized table 
error generalized table higher permuted table 
adult database contains attributes quasi identifiers 
fewer attributes generalization hierarchy may coarse lead smaller partitions 
study impact dimensions accurate query answering conducted experiments assuming age quasi identifier 
observed similar trends figures 
due space limitations show results experiment 
experiments suggest poor query answering accuracy generalized table intrinsic domain generalization approach caused high dimensionality quasi identifiers 
accuracy partitioning strategies way microdata table partitioned great impact accuracy bounds derived permuted table 
compare relative errors permuted tables partitions generated algorithms see section diversity domain generalization optimization algorithm approximation algorithm minimum max error problem optimization algorithm optimal algorithm minimum sum error problem random algorithm algorithm sequentially scans tuple long scanned tuples distinct sensitive attribute values range form group partition 
random algorithm serves baseline comparison 
set set optimization algorithms random partitions 
favor generalization approach groups partition generated diversity algorithm required distinct values 
parameters relative error rate number tuples selected partition generalization optimization algo optimization algo random partition 
relative errors arbitrary queries different partitioning algorithms arbitrary queries range queries experiment experiments 
relative errors corresponding algorithms shown arbitrary queries range queries omitted due space 
clear optimization algorithms introduce significantly relative errors algorithms 
easily explained optimization algorithms constrained pre defined domain hierarchies 
flexibility partition table achieve better accuracy 
observe partition derived predefined generalization hierarchies worse random partition arbitrary queries 
accuracy correlations intuitively strong correlation sensitive attribute tuples group tend similar values partition generated domain generalization 
may result accurate bounds answering range queries 
experiment investigate impacts correlation accuracy query answering 
compare partitions obtained algorithms varying correlation quasi identifiers sensitive attribute 
run range queries select tuples age attributes range synthetic data set introduce correlation age capital loss 
larger tuple age attribute larger capital loss certain variance controls strength correlation 
shows relative errors algorithms strength correlation varies 
observe correlation strong variance tuples age capital loss 
higher generalization needed causes partition gen relative error rate correlation variance partition generalization optimization algo optimization algo random partition 
relative errors range queries partitions different partitioning algorithms strength correlation quasi identifiers sensitive attribute varies 
yield large error 
variance goes lower generalization sufficient tuples group different capital loss values 
explains quick drop error variance 
variance keeps increasing tuples group tends quite different sensitive attribute values cause error increase 
age quasi identifier synthetic data set range query may completely cover groups partition obtained domain generalization 
yields comparable accuracy partitions generated optimization algorithms 
randomly algorithm take advantage correlation age capital loss performs poorly expected 
studied tradeoff privacy query answering accuracy 
intuitively larger tuples group anonymous partition tends include turn introduce errors answering aggregate queries 
conducted experiments see change query answering accuracy varying respectively 
observe fixing vary relative errors optimization algorithms deteriorate increase 
suggests optimization algorithms capable generate partitions preserve high privacy supporting accurate aggregate query answering 
similar observations varying 
omit figures due space limits 
related privacy vulnerability release de identified microdata discussed sweeney proposed anonymity model protecting privacy microdata 
concept diversity introduced guard attackers background knowledge 
considerable anonymity including finding optimal generalizations approximation algorithms pruning techniques reduce imprecision microdata see 
proceedings li address anonymization problem case numerical attributes 
propose notion closeness requires distribution sensitive attribute group close distribution attribute table 
framework generalization quasi identifiers 
previous works discuss impact accuracy answering aggregation queries 
permutation anonymization natural generalization data swapping techniques privacy achieved exchanging sensitive attributes pairs randomly selected records 
data swapping done globally larger impact microdata utility 
done controlled manner rank data swapping produces large errors aggregate queries shown 
data swapping limitations terms privacy protection 
example assuming attacker knows particular tuple sensitive attribute record value unique table may able derive exact attribute tuple 
sense data swapping offers privacy similar anonymity 
permutation approach satisfies anonymity forces attacker acquire records sensitive attributes order reveal record exact value 
perturbation approaches proposed privacy noise certain distribution added sensitive attribute tuple 
approach inevitably changes important statistics marginal distributions sensitive attributes variance 
depending distribution added noise gaussian distribution difficult derive deterministic bounds answering aggregate queries 
xiao propose achieve anonymity separating quasi identifiers sensitive attributes tables connected group id tuple 
easy see scheme equivalent permutation sensitive attributes tuples group 
works anonymity focuses categorical sensitive attributes techniques directly applied handle numerical sensitive attributes 
proposed privacy goal better capture protection numeric sensitive attributes microdata 
permutation anonymization showed achieve privacy guarantees generalization techniques answer aggregation queries accurately 
interesting issues explored 
particular investigate permutations privacy objectives identify efficient optimal approximation algorithms privacy objectives study impact accuracy answering aggregation queries 
adam 
security control methods statistical databases comparative study 
acm computing surveys 
aggarwal feder motwani thomas zhu 
anonymity algorithms hardness 
technical report stanford university 
agrawal srikant 
privacy preserving data mining 
proceedings acm sigmod international conference data dallas texas may 
bayardo agrawal 
data privacy optimal anonymization 
proceedings st ieee international conference data engineering tokyo japan apr 
koudas srivastava yu zhang 
aggregate query answering anonymized tables 
technical report tr north carolina state university 
dewitt ramakrishnan 
efficient full domain anonymity 
proceedings acm sigmod conference baltimore md june 
li li venkatasubramanian 
closeness privacy anonymity diversity 
proceedings ieee international conference data engineering 
gehrke kifer 
diversity privacy anonymity 
ieee international conference data engineering atlanta ga apr 
moore 
controlled data swapping techniques masking public microdata sets 
technical report statistical research division report series rr bureau census 

security random data perturbation methods 
acm transactions database systems 
sweeney 
guaranteeing anonymity sharing medical data system 
journal american medical informatics association pages 
machine learning repository 
www ics uci edu mlearn mlrepository html 
xiao tao 
anatomy simple effective privacy preservation 
international conference large data bases seoul korea sept 
yao wang jajodia 
checking anonymity views 
international conference large data bases trondheim norway aug 
