resource allocation grid reinforcement learning aram karl czajkowski kristina lerman usc information sciences institute admiralty way marina del rey ca isi edu isi edu lerman isi edu study minimalist decentralized algorithm resource allocation simplified grid environment 
consider system consisting large number heterogenous reinforcement learning agents share common resources computational needs 
communication agents information agents receive expected completion time job submitted particular resource serves reinforcement signal agent 
results experiments suggest reinforcement learning improve quality resource allocation large scale heterogenous system 

grid computing emerging technology enables users share large number computing resources distributed network 
dynamic nature grid policy environments dominated virtual organizations vos associate heterogeneous users resource providers 
known large individual vos reasonable imagine resource sharing populations tens thousands users thousands resources 
allocation mechanisms need highly scalable robust localized failures resources communication paths 
challenge grid resource allocation lies lack accurate resource status information global scale 
feasible allocation mechanisms depend strongly availability current global knowledge 
considerable attention resource allocation problem grid researchers addressed problem perspective learning adaptation 
multi agent systems mas distributed ai communities shown groups autonomous learning agents successfully solve different load balancing resource allocation prob permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm lems 
goal apply multi agent learning techniques problem resource allocation grid 
mas approach suited describing grid distributed autonomous nature agents grid users resources reflects federated nature grid 
introducing learning allows multi agent system adapt changes changing resource capacities resource failure new agents system 
furthermore believe mas approach prove useful policy design study performance vo implementing resource allocation strategy verify lead unintended global consequences 

model real grid applications problem mapping resources specific jobs complex may require allocation different resources specific amount cpu hours system memory network bandwidth data transfer neglect need allocation assume jobs generated user require certain cpu time uniquely characterized duration 
resources providers scheduling decision contemporary batch system computationally expensive perform thousands times time step agent simulations 
model consider simplified representation resources local schedulers 
assume resource characterized capacity defined inverse cpu time needed complete job unit length 
framework single job running system time note approach different adopted ref capacity resource assumed shared equally jobs queue 
simplicity assume local schedulers prioritize jobs arrival time fcfs 
users model users heterogenous selfish agents try maximize utilities 
clearly de fine agent utilities various ways 
weighted contributions metrics ai queue wait time job execution time normalized duration job inverse resource capacity constant weight contribution 
resource selection complete definition model need describe agents reinforcement learning rl select resources 
learning greedy selection rule 
possible action selecting specific resource agent keeps value indicates efficiency resource past 
completed job agent gets reinforcement signal containing start time time job calculates metric translates resource chosen follows sign stands averaging submitted jobs 
agent updates values qi qi qi learning rate 
compare performance rl algorithm studied resource selection rules random selection rs agents choose randomly uniform probability resources 
loaded ll model agents choose loaded resource submit job 
study impact crowding effect agents choose loaded resource simultaneously introduce parameter job submitted resource load resource updated probability results 

experimental results section results simulations agents resources 
time step agents independently generate jobs rate andthe length jobs taken randomly uniform distribution interval jmin jmax 
take account wide dispersion job sizes real grid applications chose jmin jmax 
capacities resources chosen uniformly interval cmin cmax cmax cmin 
results indicate small value job arrival rate rs algorithm performs comparably better ll rl job load sufficiently low choosing resources randomly guarantees load balancing 
situation changes drastically increase job arrival rate performance rs algorithm deteriorates due bottlenecks 
rl algorithm hand allows agents distribute jobs resources efficiently rs rule 
remarkably find parameter settings permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july new york new york usa 
copyright acm average wait time 
average wait time ll loaded rl selection rules rl algorithm performs quite compared loaded algorithm illustrated fig plot time evolution average job wait time 
certain transient learning time average wait rl algorithm falls wait time ll rule 
agents exchange information global knowledge current load levels system learning mechanism allows efficiently distribute jobs resources 

benefit observed rl algorithm random selection suggests improvement existing grid strategies performing substantial planning job sequences random uniform distribution decisions spread large scale resources 
attempt environmental information load levels results suggest rl algorithm provide better adaptive behavior learn environment responses queries weiss 
ligo detection gravitational waves 
physics today 
czajkowski foster karonis kesselman martin smith tuecke 
resource management architecture metacomputing systems 

lerman 
resource allocation games changing resource capacities 
aamas 
schaerf shoham tennenholtz 
adaptive load balancing study multi agent learning 
journal artificial intelligence research 
research supported darpa contracts number 
ll rl 
