outlier detection high dimensional data aggarwal ibm watson research center yorktown heights ny ibm com outlier detection problem important applications eld fraud detection netw ork robustness analysis intrusion detection 
suc applications high dimensional domains data con tain hundreds dimensions 
algorithms concepts pro order nd outliers relationship rest data 
ho high dimensional space data sparse notion proximity fails retain meaningfulness 
fact sparsity high dimensional data implies point equally outlier perspective de nitions 
consequently high dimensional data notion nding meaningful outliers substantially complex non obvious 
discuss new techniques outlier detection nd outliers studying behavior projections data set 

outlier de ned data di rest data measure 
suc con tains useful information abnormal system described data 
outlier detection tec nds applications credit card fraud net ork detection nancial applications marketing 
problem typically arises context ery high dimensional data sets 
nding outliers methods implicit assumptions ely lo dimensionality data 
methods quite dimensionality high data sparse 
data mining algorithms literature nd outliers side product clustering algorithms :10.1.1.131.5152
ho tec de ne outliers ts lie clusters 
th techniques implicitly de ne outliers bac noise clusters em 
class techniques de nes outliers points part permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page :10.1.1.17.947
copy republish post servers redistribute lists requires prior specific permission fee 
acm sigmod may santa barbara california usa copyright acm philip yu ibm watson research center yorktown heights ny ibm com cluster part background noise speci cally ts di erently norm 
outliers useful diagnosis data characteristics signi cantly average behavior 
applications net ork detection characteristics may pro disco abnormal underlying application 
algorithms determine outliers deviation value 
algorithms proposed years outlier detection methods speci cally designed order deal curse high dimensionality :10.1.1.17.947
statistics studied concept outliers quite extensively 
techniques data points modeled stochastic distribution determined outliers depending relationship model 
ho increasing dimensionality increasingly di cult inaccurate estimate multidimensional distributions data points 
interesting algorithms de ne outliers full dimensional distances points :10.1.1.17.947
measure naturally susceptible curse high dimensionality 
example consider de nition knorr ng data set outlier respect points data set distance pointed method sensitive parameter hard gure priori 
addition dimensionality increases increasingly di cult pic lie thin shell point 
th pic smaller shell radius ts outliers pic larger point outlier 
means user need pick avery high degree accuracy order nd modest number points de ned outliers 
aside data real applications noisy abnormal deviations low er dimensional subspace 
deviations embedded subspace determined full dimensional measures lp norm noise ects dimensions 
introduces de nition outlier point outlier eto kth ne smaller corresponding value 
xx view view ob view view ob dimensional views expose outliers views 
full dimensional measures increasingly susceptible sparsity noise ects high dimensionality 
de nition advantages provided speci cally designed high dimensional problems 
sparse behavior distance distributions high dimensionality actual values distances similar pair points 
interesting technique nds outliers densities local neighborhoods 
technique advantages accounting local levels skews abnormalities data collections 
order compute outlier factor point method computes local reachability density average smoothed distances points locality 
unfortunately di cult computation perform meaningfully high dimensionality concept locality di cult de ne data sparsity 
order concept local density need meaningful concept distance sparse high dimensional data exist outliers useful 
techniques proposed try dene outliers distances full dimensional space way 
sparsity data high dimensionality interpreted slightly di erently infer point outlier high dimensional space 
pairs points equidistant meaningful clusters data similarly di cult detect abnormal deviations 
problems clustering similarity search shown examining behavior data subspaces possible design effective algorithms 
di erent localities data dense respect di erent subsets attributes 
insight true outliers typical applications credit card fraud subset attributes ected abnormality activity useful detecting behavior 
order better explain point consider example illustrated 
example shown dimensional cross sections high dimensional data set 
quite high dimensional data cross sections may structured may noisy 
example points show abnormal behavior views data 
views points show average behavior 
context credit card fraud application points may correspond di erent kinds fraudulent behavior may show average behavior distances measured dimensions 
full dimensional distance measures di cult detect outliers ectively averaging behavior noisy irrelevant dimensions 
furthermore impossible prune speci features priori di erent points asa may show di erent kinds abnormal patterns di erent features views 
problem outlier detection similar large number problems data mining literature lose algorithmic ectiveness high dimensional case 
previous focussed critical problem high dimensional case relatively straightforward proximity measures applicable low dimensional versions 
hand note practical data mining applications arise context large number features 
discussed concept knowledge distance outliers terms subsets attributes 
technique provides excellent interpretability providing reasoning may considered outlier 
hand technique uses roll drill method tends quite expensive high dimensional data 
desiderata high dimensional outlier detection algorithms section provide intuition desiderata ective high dimensional outlier detection algorithms 
order ectively high dimensional outlier detection algorithms satisfy properties devise techniques handle sparsity problems high dimensionality ectively 
provide interpretability terms reasoning creates abnormality 
possible probabilistic level signi cance reasoning applies determined 
proper measures identi ed order account physical signi cance de nition outlier dimensional subspace 
example distance threshold outlier dimensional subspace directly comparable dimensional subspace 
outlier detection algorithms continue computationally cient high dimensional problems 
possible algorithms devised avoid combinatorial exploration search space 
algorithms provide importance local data behavior determining point isan outlier 
note aims achieved di erent methods ectively high dimensional case 
discuss new technique outlier detection nds outliers observing density distributions projections data 
intuitively speaking new de nition considers point outlier lower dimensional projection local region abnormally low density 
defining outliers lower dimensional projections essential idea technique de ne outliers examining projections data abnormally low density 
rst step identify mine patterns randomness justify abnormally low presence 
important value outlier patterns noise value deviation value 
patterns identi ed outliers de ned records patterns 
interesting observation lower dimensional projections mined data sets missing attribute values 
quite useful real applications feature extraction di cult process full feature descriptions exist 
defining abnormal lower dimensional projections abnormal lower dimensional projection density data exceptionally lower average 
order de ne projections rst perform grid discretization data 
attribute data divided equi depth ranges 
range contains fraction records 
reason equi depth ranges opposed equi width ranges di erent localities data di erent densities 
wewould account nding outliers 
ranges form units locality de ne lower dimensional regions unreasonably sparse 
consider dimensional cube created picking grid ranges di erent dimensions 
attributes statistically independent expected fraction records region equal course data far statistically independent 
actual distribution points cube di er signi cantly average behavior 
precisely average deviations useful outlier detection 
assume total points database 
data uniformly distributed presence absence point dimensional cube bernoulli random variable probability assumption number points cube approximated normal distribution central limit theorem 
expected fraction standard deviation points dimensional cube 
number points dimensional cube calculate sparsity coe cient cube follows sparsity coe cients negative indicate cubes presence points signi cantly lower expected 
note assumed normal distribution normal distribution tables quantify probabilistic level signi cance point deviate signi cantly average behavior priori assumption uniformly distributed data 
general uniformly distributed assumption true 
sparsity coe cient provides intuitive idea level signi cance projection 
note nature problem stage comment nature problem nding sparse dimensional cubes data 
nature problem upward downward closed properties set dimensions associated ranges unusually sparse 
unexpected problems large itemset detection looking large aggregate patterns problem nding subsets dimensions sparsely populated avor nding needle haystack looking patterns rarely exist 
furthermore may case particular regions may populated certain sets dimensions sparsely populated dimensions combined 
example may large number people age large number people diabetes 
perspective outlier detection technique person age diabetes interesting record 
di cult nd pattern structured search methods 
best projections created priori unknown combination dimensions determined examining subset superset projection 
solution change measure order force better closure pruning properties 
worsen quality solution substantially forcing choice measure driven algorithmic considerations 
general possible predict behavior data sets dimensions combined best qualitative option develop search methods identify hidden combinations dimensions 
order search exponentially increasing space possible projections borrow ideas class evolutionary search methods order create cient ective algorithm outlier detection problem 
methods quite successfully problem high dimensional nearest neighbor search 

evolutionary algorithms outlier detection section discuss algorithms useful outlier detection high dimensional problems 
natural class methods outlier detection naive brute force techniques subsets dimensions examined possible patterns sparse 
patterns order determine points outliers 
discuss algorithms outlier detection naive brute force algorithm isvery slow nding best patterns exhaustive search entire space faster evolutionary algorithm able quickly nd hidden combinations dimensions data sparse 
total dimensionality data denoted assume inputs algorithm dimensionality projection order determine outliers 
aside algorithm uses input number projections determined 
brute force algorithm illustrated 
algorithm works examining possible sets dimensional candidate projections corresponding grid ranges retaining projections negative sparsity coe cients 
order determine candidate projections method uses bottom recursive algorithm candidate cubes determined concatenating candidate projections possible sets dimensional projections grid ranges denoted 
concatenation operation illustrated note cube algorithm number dimensionality set ranges ri ri determine sparsity coe cients elements rk set elements rk negative sparsity coe cients set points covered return brute force technique algorithm number dimensionality initial seed population strings null termination criterion selection crossover mutation update solutions negative sparsity coe cients set data points covered return outlier detection algorithm algorithm selection compute sparsity coe cient solution population rank solution order sparsity coe cient negative occurs rst null top roll die ith side proportional add solution corresponding ith side replace return selection criterion genetic algorithm algorithm crossover match solutions population pairwise pair solutions matched recombine replace population return algorithm recombine set positions set positions enumerate jrj possibilities recombining positions pick string negative sparsity coe cient extend string greedily picking position negative sparsity coe cient complementary string complementary string de ned position derived di erent parent derives return crossover algorithm algorithm mutation string set positions flip coin success probability ip success convert random position random number convert random position de ne set positions flip coin success probability ip success pick position ip random number return mutation algorithm sense concatenate grid ranges dimensions included current projection order create higher dimensional projection 
candidate set dimensionality denoted ri 
termination set projections rk negative sparsity coe cients retained 
set points data contain corresponding ranges projections reported nal set outliers 
shall see sections algorithm discussed computationally untenable problems modest complexity 
exponentially increasing search space outlier detection problem 
order overcome illustrate innovative evolutionary search techniques outlier detection problem 
overview evolutionary search evolutionary algorithms methods imitate process organic evolution order solve parameter optimization problems 
fundamental idea underlying darwinian evolution nature resources scarce leads competition species 
consequently species undergo selection mechanism ttest survive 
consequently tter individuals tend mate resulting better individuals 
time nature occasionally throws variant process mutation ensure su cient amount diversity species greater scope improvement 
basic idea evolutionary search technique similar solution optimization problem disguised individual evolutionary system 
measure tness individual equal objective function value corresponding solution species individual compete group solutions problems optimization methods hill climbing simulated annealing entire population current solutions single solution 
reasons evolutionary algorithms ective search methods hill climbing random search simulated annealing techniques essence techniques methods conjunction recombination multiple solutions population 
appropriate operations de ned order imitate recombination mutation processes simulation complete 
feasible solution problem de ned individual 
feasible solution form string genetic representation individual 
process conversion feasible solutions problem string representations called coding 
example possible coding feasible solution traveling salesman problem string containing sequence numbers representing order visits cities 
genetic material locus string referred gene possible values possibly take alleles 
measure tness individual evaluated tness function argument string representation individual returns avalue indicating tness 
tness value individual analogous objective function value solution better objective function value better tness value 
process evolution progresses individuals population genetically similar 
phenomenon referred convergence 
dejong de ned convergence gene stage population value gene 
population said converged genes converged 
application evolutionary search procedures understanding problem hand 
typically black box ga software straightforward string encodings nontrivial task design recombinations selections mutations problem 
section discuss details evolutionary search procedures ectively outlier detection problem 
evolutionary outlier detection algorithm section discuss application search technique outlier detection problem 
assume grid range ith dimension denoted mi 
value mi values take value denotes don care 
total values dimension mi take 
consider dimensional problem 
possible example solution problem 
case ranges second fourth dimension identi ed rst third left don cares 
tness corresponding solution may computed sparsity coe cient discussed earlier 
evolutionary search technique starts population random solutions iteratively processes selection crossover mutation order perform combination hill climbing solution recombination random search space possible projections 
process continued population converged global optimum 
de jong convergence criterion order determine termination condition 
stage algorithm best projection solutions negative sparsity coe cients kept track 
algorithm solutions reported best projections data 
procedure genetic algorithm illustrated 
population solutions iteration denoted set re ned subsequent iterations algorithm best set projections far maintained evolutionary algorithm 
selection alternatives possible selection evolutionary algorithm popularly known ones rank selection tness proportional selection 
idea replicate copies solution ordering rank biasing population favor higher ranked solutions 
called rank selection stable straightforward tness proportional methods sample set solutions proportion actual value objective function 
strategy biasing population favor tter strings conjunction ective solution recombination creates newer set children strings results global hill climbing entire population solutions 
particular case implementation roulette wheel mechanism probability sampling string population proportional total number strings rank ith string 
note strings ordered way strings negative sparsity coe cients occur rst 
selection mechanism ensures new population biased way abnormally sparse solutions greater number copies 
selection algorithm illustrated 
crossover crossover technique key method evolutionary algorithms nding optimum combinations solutions important implement operation ectively making method ectively 
rst discuss natural point crossover mechanism evolutionary algorithms show suitably modify outlier detection problem 
unbiased point crossover standard procedure evolutionary algorithms uniform point crossover order create recombinant children strings 
point crossover mechanism works determining point string random called crossover point exchanging segments right point 
example consider strings 
crossover performed third position resulting strings 
note case parent children strings correspond dimensional projections dimensional data 
crossover occurred fourth position resulting children strings 
correspond dimensional dimensional projections 
general evolutionary algorithm nds projections dimensionality run kind crossover mechanism creates infeasible solutions crossover process 
solutions discarded subsequent iterations assigned low tness values 
general evolutionary algorithms poorly recombination process create sets solutions high quality viable terms feasibility 
order take care create optimized crossover process takes factors account 
clear dimensionality projection needs kept mind performing crossover operation desirable children obtained solution recombination correspond dimensional projection 
order achieve goal need classify di erent positions string types 
classi cation speci pair strings 
type strings don care 
type ii don care 
assume positions type 
type iii don care 
string exactly positions string positions disjoint 
total positions 
crossover designed di erently segment string 
technique obvious type segment strings don care 
case spring strings 
order perform crossover type ii type iii positions children strings apply optimized crossover mechanism optimized crossover optimized crossover technique useful method nding best combinations features solutions 
idea create child string parent strings tter solution recombination parent 
nature children strings biased away strings ective solution recombination parent strings 
ideal goal nd best possible recombination parents di cult achieve total possibilities children 
order implement crossover operation ectively observation typically quite small looking low dimensional projections high dimensional data 
rst search space possibilities type ii positions best possible combination 
having optimal combination type ii positions greedy algorithm order nd solution recombinant type iii positions 
order nd remaining positions extend string position results string negative sparsity coe cient coe cient 
keep extending string extra positions positions set 
string recombinant ofthe parent strings 
idea procedure create new solution combines aspects parent strings 
crossover technique key process evolutionary algorithms available hill climbing simulated annealing methods doing possible create new strings population combine features parent solutions 
remains create second child order replace parent strings 
second child created picking positions di erent parent string derives positions 
crossover algorithm illustrated 
mutation perform mutations types type set positions string pick position string change time change randomly picked position total dimensionality projection represented string remains unchanged process mutation 
type ii kind mutation ects position value position changed value value purpose sets mutation probabilities 
mutation probability perform interchange type corresponding probability perform interchange type ii 
purpose implementation equal number type type ii mutations 
mutation algorithm illustrated 
postprocessing phase termination algorithm followed postprocessing phase 
postprocessing phase nd sets data points contain abnormal projections reported algorithm 
example point covers projection nd th coordinates correspond grid ranges 
points outliers denoted 
choice projection parameters important issue algorithm able choose projection parameters note reasons nding outliers projections method sparsity data 
dimensional projection dimensional data set subcube represented ak dimensional projection contains expected fraction data 
pick dimensional projection expected number points subcube fraction 
data set contains points dimensional cubes expected contain point 
means possible nd cube high sparsity coe cient covers point 
general values picked small sparsity coe cient cube containing exactly point reasonably negative 
time picked high su cient number intervals dimension corresponds reasonable notion locality 
picked determine method 
calculate sparsity coe cient empty cube 
equation nk value pre decided choice data set 
remains pick appropriately results high sparsity coe cient 
data set uniformly distributed distribution data points cube represented normal distribution sparsity coe cient number standard deviations actual number points di ered expected number points 
choice sparsity coe cient result level signi cance data cube contains points expected abnormally sparse projection 
general course normal distribution assumption true value point order decide value expressing entire equation terms obtain blog note rounding process ective sparsity coe cient slightly negative chosen user 
real application user may wish test di erent values intuitively interpretable parameter order determine appropriate values value returned largest value abnormally sparse projections may ects high dimensionality result sparse projections default 
value informative purpose outlier detection highest dimensional embedded space useful outliers may 

empirical results algorithm implemented mhz machine running aix mb main memory 
tested outlier detection real data sets obtained uci machine learning repository 
data sets naturally designed classi cation machine learning applications 
data sets picked way result considerable variability terms size data number attributes 
addition data sets cleaned order take care categorical missing attributes 
tested performance method brute force evolutionary technique 
expected brute force technique required considerably computational resources evolutionary search technique high dimensional data sets 
high dimensional data sets musk data set brute force algorithm unable terminate reasonable amount time high dimensionality prob lem 
example order nd dimensional tions dimensional problem total possibilities 
modestly complex problem results possibilities 
case musk data set dimensions brute force algorithm unable nd dimensional projections 
clearly dimensionality increases computational complexity problem untenable 
goal evolutionary algorithm provide outliers reasonably comparable brute force algorithm 
table illustrated results data sets uci machine learning repository 
data sets picked order test behavior method di erent dimensionalities 
case best projections reported outlier points corresponding projections 
evident results performance brute force technique quickly untenable large data sets 
fact musk data set dimensions outlier detection algorithm terminate reasonable amount time unable report results particular case 
important observation utility technique primarily high dimensional case 
discussed earlier implemented crossover mecha nisms 
rst simple point crossover mechanism performs crossover exchanging segments strings 
implemented optimized crossover mechanism nds recombinations solutions search space 
results optimized mechanism superscripted clearly optimized mechanism performs substantially better terms quality ofthe nal solution 
point crossover mechanism resulted strings feasible search space dimensional projections 
hand optimized crossover solution identi ed combinations dimensions feasible high quality 
wehave reported average sparsity coe cients best non empty projections indicated column quality 
data sets average quality best best projections evolutionary algorithm 
marked cases 
note brute force method provides optimum solution terms sparsity coe cient 
cases evolutionary algorithm equally nding solutions reasonable quality 
interesting observation optimized mechanism significantly faster point crossover mechanism data sets 
importance ective solution recombination tailored speci problem important high solution quality reasonable amount running time 
results show evolutionary algorithm works qualitatively quite data sets 
relatively small level qualitative sacri ce evolutionary algorithm method set huge performance gain brute force method 
intuitive evaluation results qualitative evaluation outlier detection algorithm provides challenges subjectivity de ning abnormal behavior 
interesting way test qualitative behavior look actual points outlier detection algorithm reason points picked outliers 
interesting data sets uci machine learning repository data set attributes corresponding di erent measurements physical heart beat characteristics order diagnose 
data set contains total non empty classes 
class largest corresponds people kind heart disease 
remaining classes correspond people diseases form common 
example class corresponds changes coronary artery relatively common condition 
considered kinds class labels occurred data set rare labels 
corresponding class distribution illustrated table 
way test outlier detection algorithm worked run method data set test percentage points belonged rare classes 
outlier detection works expect abnormal classes represented set points 
kinds classes interesting practical perspective 
ran evolutionary algorithm order nd sparse projections data set correspond table performance di erent data sets data set brute gen gen brute gen gen time time time quality quality quality breast cancer ionosphere segmentation musk machine table class distribution data set case class codes percentage instances commonly occuring classes rare classes sparsity coe cient 
total points contained projections 
examined points belonged rare classes 
furthermore ofthe points belong instances showed interesting properties errors recording data see 
contrast ran algorithm data set best outliers belonged rare class 
results obtained nearest neighbor results change signi cantly fact worsened slightly nearest neighbor 
ective performance technique known ects data getting spread sparsely high dimensionality 
cases sparsity ects di erent dimensions start dominating di cult meaningfully identify points outliers small number dimensions show abnormal behavior masked noise ects dimensions 
note algorithm de nes outliers somewhat similar way uses full dimensional nearest neighbor distances noise ects results obtained algorithm applicable technique 
interesting knowledge obtained examining projections determined algorithm 
looking projections possible nd actual patterns correspond abnormal behavior 
cases interesting outliers created errors recording data example examining patterns record height cm weight 
obviously compatible standard human measurements clear error recording data 
ability outlier detection algorithm mine appropriate combination attributes attributes case important local patterns discovered distance algorithms discussed :10.1.1.17.947
interesting data set tested outlier detection method housing data set attributes concerning housing values boston 
feature values data set correspond various factors uenced housing prices crime rate accessibility highways concentration distances employment centers picked attributes eliminating single binary attribute 
ran outlier detection algorithm order nd interesting dimensional projections 
interesting example outlier record high crime rate high pupil teacher ratio low distances employment centers 
reason record outlier localities high crime rates pupil teacher ratios typically far employment centers 
interesting outlier point projection correspond low oxide concentration high proportion pre houses high index accessibility radial highways 
attributes usually correspond high oxide concentration 
interesting points showed informative trends respect housing price 
example usually case points high index accessibility radial highways high crime rates 
interesting outlier point low crime rate modest number business acres town median home price 
contrarian point rst features values usually indicative high housing prices rest data 
data points useful classi er training algorithm points contrarian trends confuse training process 
outlier detection techniques order pre screen points data set applying classi cation algorithm 

discussed new technique outlier detection especially suited high dimensional data sets 
method works nding lower dimensional projections locally sparse discovered easily brute force techniques number combinations possibilities 
technique outlier detection advantages simple distance outliers overcome ects dimensionality curse 
illustrated implement technique ectively high dimensional applications evolutionary search technique 
implementation works brute force implementation search space terms nding projections negative sparsity coe cients lower cost 
techniques discussed extend applicability outlier detection techniques high dimensional problems cases valuable perspective mining applications 

aggarwal 
re designing distance functions distance applications high dimensional data 
acm sigmod record march 
aggarwal fast algorithms projected clustering 
acm sigmod conference proceedings 
aggarwal yu 
finding generalized projected clusters high dimensional spaces 
acm sigmod conference proceedings 
aggarwal orlin tai 
optimized crossover independent set problem 
operations research march 
agrawal gehrke gunopulos raghavan 
automatic subspace clustering high dimensional data data mining applications 
acm sigmod conference proceedings 
agrawal imielinski swami 
mining association rules sets items large databases 
acm sigmod conference proceedings 
agrawal raghavan 
linear method deviation detection large databases 
kdd conference proceedings 
barnett lewis 
outliers statistical data 
john wiley sons ny 
beyer goldstein ramakrishnan shaft 
nearest neighbors meaningful 
icdt conference proceedings 
breunig 
kriegel ng sander 
lof identifying density local outliers 
acm sigmod conference proceedings 
chakrabarti mehrotra 
local dimensionality reduction new approach indexing high dimensional spaces 
vldb conference proceedings 
darwin 
origin species natural selection 
published 
hawkins 
identi cation outliers chapman hall london 
de jong 
analysis behavior class genetic adaptive systems 
ph 
dissertation university michigan ann arbor mi 
ester 
kriegel sander xu 
density algorithm discovering clusters large spatial databases noise 
kdd conference proceedings 
grefenstette 
genesis software version 
available www santafe edu 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading ma 
guha rastogi shim 
cure cient clustering algorithm large databases 
acm sigmod conference proceedings 
hinneburg aggarwal keim 
nearest neighbor high dimensional spaces 
vldb conference proceedings 
holland 
adaptation natural arti cial systems 
university michigan press ann arbor mi 
kirkpatrick gelatt vecchi 
optimization simulated annealing 
science pages 
knorr ng 
algorithms mining distance outliers large data sets 
vldb conference proceedings september 
knorr ng 
finding intensional knowledge distance outliers 
vldb conference proceedings 
ng han 
cient ective clustering methods spatial data mining 
vldb conference proceedings pages 
ramaswamy rastogi shim 
cient algorithms mining outliers large data sets 
acm sigmod conference proceedings 
sarawagi agrawal 
discovery driven exploration olap data cubes 
edbt conference proceedings 
zhang ramakrishnan livny 
birch cient data clustering method large databases 
acm sigmod conference proceedings 
