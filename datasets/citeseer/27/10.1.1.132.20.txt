practical parameterization rotations exponential map sebastian carnegie mellon university final version published journal graphics tools volume 
reprint included permission peters publisher 
parameterizing degree freedom dof rotations difficult 
graphics applications demand able compute differentiate positions orientations articulated figures respect rotational parameters integrate differential equations optimize functions dofs interpolate orientations 
widely parameterizations euler angles quaternions suited operations 
exponential map maps vector describing axis magnitude dof rotation corresponding rotation 
graphics researchers applied limited success interpolation orientations virtually ignored respect operations mentioned 
formulae computing differentiating integrating dof rotations exponential map 
show formulation numerically stable face machine precision issues applications singularities map avoided simple technique dynamic reparameterization 
demonstrate exponential map solve freely rotating body problem important ball socket joint required accurately model shoulder hip joints articulated figures 
examining common graphics applications explain benefits formulation exponential map euler angles quaternions including robustness small state vectors lack explicit constraints modeling capabilities simplicity solving ode interpolation behavior 
ways parameterize rotations 
want particular parameterization parameterization depends entirely performance applications interest 
primary applications rotations graphics encode orientations describe control motion rigid bodies articulations transformation hierarchies 
hierarchies backbone character animation systems require free rotations constrained degree freedom dof rotations angular range motion limited faithfully model motion human joints ll explore ball socket joints section 
parameterizing rotations applications problematic mainly rotations non euclidean nature travelling infinitely far direction bring back starting point infinite number times 
attempt parameterize entire set dof rotations open subset euclidean space euler angles suffer gimbal lock loss rotational degrees freedom due singularities parameter space 
parameterizations defined non euclidean spaces set unit quaternions embedded may remain singularity free avoid gimbal lock 
employing parameterizations complicated numerical tools employed graphics assume euclidean parameterizations develop new tools domains non euclidean complicate systems imposing explicit constraints intuitively singularity continuous subspace parameter space elements correspond rotation movement subspace produces change rotation 
distinguish non euclidean parameter space euclidean space embedded impose constraints ensure quaternions retain unit length 
non zero vector direction magnitude 
associate rotation vector specifying direction axis rotation magnitude amount rotate axis 
augment relationship associating zero vector identity rotation relationship continuous known exponential map 
quaternion parameterization parameterization euclidean contain singularities 
primary purpose show common graphics applications singularities cause gimbal lock exponential map far away domain resulting parameterization possesses desirable qualities quaternion parameterization needing worry falling unit quaternion sphere non euclidean manifold 
discuss strengths weaknesses exponential map commonly parameterizations applied important graphics applications aid practitioner selecting correct parameterization job 
section examine rotations graphics applications describe pros cons commonly parameterizations 
section develop exponential map explain advantageous map quaternions mapping directly rotation matrices formulae computing quaternions differentiating respect section show parameterization extremely suited applications differential control forward dynamics discuss limitations applied interpolation spacetime optimization 
section motivate constrained dof rotation extend method straightforwardly handle 
conclude section summary strengths limitations formulation include appendices pseudocode pointer supplemental code computing differentiating formulation exponential map 
evaluation common parameterizations primitive means describing controlling rotations graphics forward kinematics including keyframe interpolation inverse kinematics forward inverse dynamics spacetime optimization 
consider higher level methods procedural animation motion controllers generally expressed terms primitives 
applications built primitives discuss section vary considerably size complexity motion problems address require operations 
ability compute positions orientations points body parts functions parameters position direction humanoid pointing finger aspect forward kinematics 
existence ability compute derivatives positions orientations respect parameters necessary inverse kinematics dynamics spacetime 
ability integrate ordinary differential equations odes parameter space required inverse kinematics dynamics spacetime 
ability interpolate smoothly sequences parameter keyframes 
ability combine rotations parameter space rotation space 
existence inverse operation calculates parameter values corresponding rotation operations naturally occur parameter space 
operations conveniently carried expressing rotation transformation matrix allows rotations included articulation transformation hierarchy right alongside translations scales linear transformations gives common baseline computation various parameterizations interested computing rotation matrix partial derivatives rotation matrix respect parameters 
parameterization possesses element vector parameters able compute see method computing jacobians hierarchies translations rotations involve transformation matrices 
excellent inverse kinematics 
rv matrix xn tensor element vector matrices partial derivative respect parameters easily compute jacobians points orientations respect parameters demonstrated supplementary pseudocode see appendix 
know quantities interested computing examine parameterizations today see unsatisfactory 
rotation matrices rotation represented matrix columns unit length mutually orthogonal determinant 
set matrices forms group operation matrix multiplication member group turn corresponds rotation 
stipulated primarily interested generating rotation matrices parameters simply take elements rotation matrix parameterization 
rotation linear function parameters means rotation partial derivatives trivial compute potentially linear optimization control algorithms positions orientations articulated figures linear functions parameters translations common transformation hierarchies linear functions parameters 
unfortunately optimize differentially control parameterization impose non linear constraints ensure matrix remains parameters independently altered constraints maintain unit length columns keep mutually orthogonal 
similarly step taken integrating ode require rotation re 
euler angles euler angle dof represents rotation coordinate axes 
distinct functions rx ry rz computing rotation matrices depending coordinate axis euler angle rotates 
functions involve sine cosine euler angle functions nonlinear derivatives easy compute 
problems applying euler angles intended applications known graphics 
dof euler rotations formed concatenating single axis rotations suffer gimbal lock rotation axes align causing rotational dof lost 
means direction mechanism orientation controlled euler rotation respond applied forces torques locks straightforward place limits legal range motion euler angles gimbal lock typically occurs second rotation chain value depending choice euler angles able avoid gimbal lock ball socket joints example shoulder joints require range rotation greater 
furthermore interpolation euler angles results poor interpolation rotations euler angles interpolate axes independently ignoring interaction axes arises rotations non euclidean nature 
euler angles quite suitable integrating odes inverse kinematics dynamics spacetime optimization require freedom gimbal lock euler angles unsuitable applications 
note euler angles provide easy interface animators form independent sliders equivalent quite applications requiring dof rotations 
seventh constraint defining determinant opposed possibility subtly dependent generally require explicit enforcement 
quaternions quaternions rich mathematics history including losing vector algebra accepted mathematical foundation classical mechanics 
reader probably familiar quaternions graphics community shoemake touch highlights discussing strengths weaknesses 
quaternions form group underlying set dimensional vector space multiplication operator combines dot product cross product vectors 
set unit length quaternions sub group underlying set named quaternions interest mechanical engineers primarily describe carry rotations 
interpreting members quaternion quaternion corresponds identity rotation 
encodes rotation cos radians unit axis qy qz sin cos words may parameterize rotation radians unit axis unit quaternion constructed sin cos interesting thing want rotate vector rotation encoded carry quaternion multiplication rotate qo vector extended zero scalar component quaternion conjugate vector part negated prove result quaternion multiplications case zero scalar component step rotate function simply strips scalar part arrive furthermore simple formulae computing rotation matrix partial derivatives unit quaternion shoemake partial derivatives linearly independent means unit quaternions free gimbal lock control orientations 
scheme relies quaternions remaining maintaining unit length process differential control optimization integration directions quaternion change rotational dofs optimizer differential control algorithm free move quaternion unit quaternion sphere leading non rotations 
integrating odes parameter space problematic instantaneous velocity direction change generally lies tangent plane movement tangent plane push quaternion strategies developed deal complications 
integration problem generally addressed re normalizing quaternion integration step relying small stepsizes prevent error getting control 
derivative dof problem typically dealt ways 
impose explicit constraints force quaternions maintain unit length generally suffices long slightly altered rotation formula uses inverse conjugate produces rotations non unit quaternions 
formulation undefined origin furthermore rotating vectors way convenient transformation hierarchies results far complicated derivatives rotation matrices 
rotation matrix transforms row vectors transpose matrix desire transforming column vectors 
convention rotating vectors quaternions opposite consistent transforming column vectors 
constraints higher precedence constraints imposed increases size systems solve degrading performance 
function rq defined zero element formulae gleicher similarly function discussed footnote 
problem method jacobian rank deficient means direction quaternion change producing change orientation 
effect corrupt singular mass matrix commonly achieve parameterization independent scaling simulated physical systems 
excellent place interpolate rotations possesses local geometry topology results interpolating quaternions generally pleasing eye possess desirable variational properties 
kim developed closed form quaternion curves bezier hermite spline blending functions able calculate high order parametric derivatives curves 
great news applications compute optimize integrate fixed orientation curves aid greatly differential control optimization curve shape provides correspondingly simple method differentiating curve respect quaternion control points face described preceding paragraphs 
ability specify closed form hermite curves quaternion keys angular velocities keys promising keyframe animation systems suitable methods visualizing quaternion curves 
summary quaternions parameterize rotations leads numerically conditioned systems applications consideration incurs overhead efficiency code complexity derivatives control optimization 
especially light developments may best choice interpolation dof rotations 
exponential map problems encounter quaternion parameterization arise subspace full quaternion parameter space represents rotations 
interested parameterizing dof rotation parameterization embedded free gimbal lock interpolates rotations euclidean interpolants cubic splines 
goal course unrealizable standard exercise topology show mapped singularities gimbal lock 
show inevitable singularities exponential map avoidable 
exponential map maps vector describing axis magnitude dof rotation corresponding rotation 
different formulations exponential map map popular robotics texts matrix exponential maps summing infinite series exponentiated skew symmetric matrices infinite series generally evaluated compact rodrigues formula 
advantages map standard quaternion matrix formulae conversion 
advantages inverse exponential map log map simpler log map require log map derive important auxiliary quantities example see section may useful easily convert needs perform optimal interpolation section spacetime optimization section 
formulate exponential map follows sin cos idea raising scalar base non scalar power best intuitive term exponential map 
historically formulation map infinite series form series expansion exponential real numbers mathematical community adopted name exponential map 
maps unit quaternion representing rotation computed quaternion multiplication 
formula right look familiar exactly formula section create unit quaternion unit axis angle description rotation 
exponential map allowed encode magnitude axis rotation single vector 
problem particular formulation calculating goes zero numerically unstable 
rearranging formula bit able see exponential map computed robustly neighborhood origin 
sin cos sin cos done reorganize problematic term computing compute sin 
sin sinc sinc function known computable continuous zero 
assured function computable need formula computing sinc included standard math libraries 
taylor expansion sine get sin sin 


see term defined evaluating entire infinite series give exact value 
successive term smaller terms alternately added subtracted approximate true value terms error greater magnitude st term 
fact machine precision limited evaluate function numerical error machine precision just terms expansion sin perform actual sine computation division dropped terms involve factors approximation actual function agree derivatives essence quaternions compute derivatives rotation matrix respect exponential map parameters applying chain rule 
qv wish compute compute product know compute partial derivatives new quantities need twelve partial derivatives quaternion respect exponential map parameters follow 
additionally appendix discusses supplemental source code computing quantities 
express similarity form twelve derivatives range components vector part range components formulae computing partial derivatives respect usual case qw sin vn cos sin sin cos sin vv vv vn neighborhood replace sine cosine taylor expansions simplifying discard terms powers greater numerator 
result forms computing partial derivatives simplification sin vv limitations far formulation exponential map fulfill requirements parameterizing axis angle rotation euclidean parameters 
discuss application animation problems talked clear versus straight quaternion parameterization 
singularities purposes control simulation principal advantage quaternions euler angles freedom gimbal lock 
know exponential map singularities useful locate singularities show avoided cost outweighed benefits 
exponential map singularities spheres radius 
sense rotation axis equivalent rotation entire shell points distant origin collapses identity restrict parameterization inside ball radius avoid singularity 
fortunately member rotation zero radians possible representations ball rotation radians rotation radians control simulation operate moving time small steps possible change rotation step small certainly easily keep orientations inside ball time step rotation queried value derivative examine close replace equivalent rotation better derivatives 
dynamic reparameterization theory applied avoiding gimbal lock euler angles reparameterization simply scales current parameters corresponding operation euler angles involves switching functions define rotation matrix sequence inverse trig functions determine new parameters 
point reparameterization ability simply interpolate successive state snapshots produced simulator inverse kinematics animation engine doing sure consecutive rotation values close see section 
choose gives maximal buffer zone abnormally large steps allowing orientations representable 
combining rotations nice feature quaternions multiplication operator corresponds matrix multiplication rotation matrices 
unit quaternions combined rotation result rotating corresponds unit quaternion exponential map possesses simple analogous operation 
compute vector corresponding combined rotation rotating need map corresponding quaternions perform quaternion multiplication convert back incurring trig inverse trig functions 
fortunately operation typically needed inner loops applications talked 
rotations changed direct parameter manipulation incrementally derivatives 
combined usually context transformation hierarchy rotations converted transformation matrices 
applications seen exponential map works theoretical limitations time focus reason presenting simplification algorithms parameterized rotations 
applications discussed control simulation optimization interpolation believe exponential map suited tasks differential control simulation forward dynamics plus integration 
sections explain discuss complications arise applying interpolation optimization 
differential control dynamics simulation motivating applications differential control enables direct manipulation interfaces inverse kinematics real time control robotic manipulators 
control positions velocities objects effectors articulated assemblies demands imposed differential control derivatives continuous free gimbal lock 
control performed discrete instants time simple dynamic reparameterization technique section assure demands met 
dynamics simulation applications track object instantaneous position pose linear angular velocity 
linear velocity stored vector represents cartesian direction magnitude velocity 
angular velocity represented vector meaning nearly identical exponential map magnitude represents rate rotation axis absolute orientation 
update position orientation correctly simulation moves forward time need addition derivatives necessary differential control formula mapping instantaneous angular velocity tangent space parameterization 
quaternion orientation formula angular velocity vector extended zero scalar component quaternion 
formula subsequent ones explicitly denoted function time time derivative 
derive similar formula inverse exponential map dubbed appropriately log map domain rotations magnitude implicit differentiation gives cos log log log vector part quaternion 
take derivative log function respect put entire formula right terms simplification occurs 
formula terms contains roughly number kind operations quaternion multiplication compute required 
normal case cot cot limit taylor expansions cot cos sin simplify forms pas conclude exponential map ideally suited control simulation despite small measure take avoid singularity enjoys advantages basic quaternion parameterization need explicit constraints jacobians rotation dependent quantities need re normalize integration steps system state vector smaller rotation requires parameters vs 
interpolation described methods applying log maps orientations get applied euclidean cubic splines interpolate keys applying exponential map back 
discussed section interpolating nice properties fact geodesic interpolant easily computed shoemake orientations corresponds shortest path orientations 
notes straight line orientations exponentially mapped general equivalent geodesic orientations approximation far optimal fact approximation quite far optimal quantifying far open question general error increases axes rotation diverge parallel 
axes rotation successive keys close parallel approximation approach optimality uses proper log map discusses issue shall briefly 
orientation maps quaternion negation means ensure get geodesic interpolant orientations need ensure quaternions lie hemisphere dot product positive simply replace 
log map map orientation infinite number points corresponding rotations np axis axis integer arbitrary log mapping log general infinitely mappings approximate geodesic linearly interpolated procedure followed limiting range log map log suffice 
log mapping guarantee geodesic approximation picks mapping successive key minimizes euclidean distance mapping previous key 
log map considers previous mapping calculating current mapping results interpolating may visually indistinguishable applications including 
furthermore hard evidence user tests back may intuitive control shape interpolating curve euclidean bezier hermite tangent knobs setting angular velocities keys 
degrees freedom ball socket joint 
arm pictured uses ball socket model proposed shoulder joint 
image left twist dof exercised arm spins axis 
right swing dofs hand swing circle starting bottom position finishing closest 
note entire motion spin arm axis 
spacetime optimization spacetime optimizations operate entire animation simultaneously dofs simply angles instant time rotation valued functions time 
instance function optimized single joint angle cubic spline defined animation time interval case dofs positions spline control points need compute derivatives orientations various points time curve respect control points simply applications chain rule existing formulae 
representing dof rotation functions fraught curve crosses singularity shells discussed section derivatives disappear 
functions dynamically doing change shape curves potentially perturbing optimization state space currently traversing 
possible range rotations greater tumbling bodies exponential map suited parameterization 
noted spacetime problems including humanoid character animation problems optimization solves motion displacements motions operate domain rotations magnitude ball socket joints unconstrained dof orientations primarily rigid bodies entire state consists translation rotation 
step articulated figures majority state internal joints dof rotations joint limits restrict allowable angular motion 
somewhat crude reasonable modeling joints humanoid breaks hinge pivot ball socket joints 
hinge joints knee dof readily modeled euler angle 
pivot joint wrist dofs modeled sequenced euler angles 
ball socket joints joint arm shoulder dofs broken twist limb axis swing limb see 
model motion accurately important able limit twist component independently swing limits twist component generally small making euler angle reasonable choice dof swing component human arms reach possible construct single dof euler angle param twist swing completely decoupled human joints coupling get euler angles addition prone gimbal lock closer true behavior decoupled model 
furthermore model easily accommodate controlled coupling data 
experience gimbal lock second angle chain quaternions lock difficult place meaningful limits angular motion 
stated twist parameterized euler angle principal axis limb happens coordinate axis single dof exponential map rotation derivation follows straightforwardly presentation 
trick parameterizing swing component ensure rotational component twist axis 
fortunately simple axis angle parameterization exponential map necessary sufficient condition rotation contains spin specified vector rotation axis orthogonal vector 
means achieve desired dof swing rotation need exponential map rotation vector lies plane perpendicular major axis limb canonical zero rotation position 
rotation pick orthogonal unit vectors perpendicular plane vectors basis desired swing rotation exponential map rotation compute dofs gather vector call unit vectors length angular magnitude swing rotation place limit swing widest arc limb describe need place inequality constraint vector magnitude max allowable swing angle fact difficult impose flexible ellipsoidal angular limit 
know angular limits rotation major minor axes ellipse choose correspond major minor axes plane limb extends axis axes pose inequality constraint dof rotation formed reparameterization dof rotation formulae apply computing vector vector compute derivatives respect simply apply chain rule dof rotation suitable applications dof additionally optimization 
recall dof rotation optimization dynamically control points avoid singularity shells unacceptable 
shell occurs angular magnitude angular motion limits types joints dof rotation models crossing shells problem 
believe single parameterization rotations best applications animation system exponential map euler angles inverse kinematics spherical quaternions interpolation presents robust method computing exponential map dof rotations outperforms parameterizations important applications 
conclude summary feel main strengths weaknesses recommend implementor inverse kinematics dynamics simulation systems 
strengths exponential map remains free gimbal lock range axis angle rotations magnitude suitable control optimization algorithm operates single instants time provided time forward small steps 
exponential map uses parameters parameterize means need normalization integrating ode danger falling meaningful subspace falling need explicit constraints smaller state vectors combines previous point result faster performance parameterization easily address ball socket joint problem important articulated animation 
interpolation ordinary cubic splines possible may produce visually acceptable results provided successive keyframes distant limitations exponential map spacetime optimizations tumbling bodies 
simple formula combining rotations akin quaternion multiplication matrix multiplication 
method avoid gimbal lock impossible simply interpolate successive state snapshots output dynamics simulation inverse kinematics engine output system form suitable interpolation technique log map section 
david baraff helpful discussions singularities computing matt mason mike erdmann providing handle robotics knowledge base area zoran popovi mike gleicher critical reads especially john hughes efforts giving author long distance mathematical education sufficient recognize correct mathematical problems originally contained 
bibliography 
alan barr steven gabriel john hughes 
smooth interpolation orientations velocity constraints quaternions 
edwin catmull editor computer graphics siggraph proceedings volume pages july 

michael gleicher andrew witkin 
lens camera control 
edwin catmull editor computer graphics siggraph proceedings volume pages july 

michael gleicher 
retargeting motion new characters 
michael cohen editor computer graphics siggraph proceedings volume pages july 

gabriel bernard 
interactive control interpolations animation modeling 
tom calvert program chair graphics interface proceedings pages may 

david 
new foundations classical mechanics 
kluwer academic publishers dordrecht netherlands section equation 

jun kim soo kim sung yong shin 
general construction scheme unit quaternion curves simple high order derivatives 
robert cook editor computer graphics siggraph proceedings volume pages august 

richard murray li shankar sastry 
mathematical robotic manipulation 
crc press boca raton pages 

richard tom david 
mechanical universe mechanics heat 
cambridge university press new york page 

ken shoemake 
animating rotations quaternion curves 
brian barsky editor computer graphics siggraph proceedings volume pages july 

ken shoemake 
euler angle conversion 
paul heckbert editor graphics gems iv academic press pages 

chris 
inverse kinematics geometric constraints articulated manipulation 
master thesis simon university available ftp fas sfu ca pub cs theses ps gz 

andrew witkin william welch 
fast animation control non rigid structures 
computer graphics siggraph proceedings volume pages august 

hussein andr 
interactive animation object orientations 
proceedings nd international conference 

pages september paris france 
appendix sample code sample source code computing rotation matrix partial derivatives dof versions exponential map rotations temporarily www cs cmu edu exp map 
site eventually moved www acm org papers 
included site supplementary documents containing documented pseudocode function uses code functions compute jacobian contribution node transformation hierarchy respect effectors hierarchy inverse kinematics application 

