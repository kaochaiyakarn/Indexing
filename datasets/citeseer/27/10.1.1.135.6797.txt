ieee acm transactions networking vol 
october algebraic approach network coding ralf koetter member ieee dard senior member ieee take new look issue network capacity 
shown network coding essential ingredient achieving capacity network 
building li examined network capacity multicast networks extend network coding framework arbitrary networks robust networking 
networks restricted linear network codes find necessary sufficient conditions feasibility set connections network 
consider problem network recovery link failures 
multicast setup prove exist coding strategies provide maximally robust networks require adaptation network interior failure pattern question 
results derived delay free networks networks delays 
index terms algebraic coding network information theory network robustness 
issue network capacity generally considered context networks links exhibiting ergodic error processes 
channel coding theorems capacity regions certain networks type broadcast channels multiple access channels relay channels 
renewed attention paid capacity error free networks 
particular coding error free networks purpose transmitting multicast connections considered 
discussion network coding refer ch 

examined network capacity multicast networks related capacity cutsets 
capacity achieved coding network 
new surprisingly simple effective framework studying networks capacity 
framework essentially algebraic straight connection network information flow problem algebraic variety closure finite field 
results li ahlswede contain algebraic elements linear coding pertaining convolutional codes connection concepts algebraic geometry opens opportunity employ powerful theorems developed mathematical disciplines 
networks restricted linear codes precise meaning linear codes codes bitwise linear find necessary manuscript received may revised january approved ieee acm transactions networking editor lee 
supported national science foundation awards ccr ccr ccr hp wireless center mit 
koetter coordinated science laboratory university illinois urbana champaign urbana il usa mail koetter uiuc edu 
dard laboratory information decision systems lids massachusetts institute technology cambridge ma usa mail mit edu 
digital object identifier ieee fig 

networks multicast 
cient conditions set connections achievable network 
framework show case multicast connection network exhibits special structure feasibility verifiable polynomial time 
similar results show linear codes network sufficient implement feasible multicast connection 
networks connections multicast show giving necessary sufficient conditions connections feasible equivalent problem finding point algebraic variety general np complete problem 
cutset conditions necessary sufficient establish feasibility certain set connections multicast connections cutset conditions necessary provably sufficient case general connections arbitrary collection point point connections 
usefulness coding error free networks easily viewed example 
consider fig 

link transmit single bit error free consider delays 
left hand side network source may easily transmit bits receivers switching broadcasting right hand side network code required code arc capacity networks shown maximum flow source receiver network 
approach may generalized directed acyclic graphs general directed graphs long consider delays links 
networks experience ergodic error processes may reasonable models networks reality built links exhibiting ergodic failure processes 
appropriate coding links network may render links effect error free network coding achieve capacity recovery error free network possible delays due coding 
explicitly consider relation link coding ergodic failures network coding 
links assumed error free operational 
links allowed fail altogether 
koetter dard algebraic approach network coding coding applicable networks order achieve capacity recover network failures 
early pointing direction refer coding strategies simple networks suggested 
failures different link errors described ergodic processes typically dealt channel coding 
failures consider entail permanent removal edge occur network long term failure due link cut disconnection 
show network coding provide maximal robustness network link failures 
prove exist coding strategies require adaptation specific link failure pattern 
ii 
problem formulation communication network collection directed links connecting transmitters switches receivers 
may represented directed graph vertex set edge set allow multiple edges vertices subset integer enumerates edges vertices 
edges links denoted round brackets assumed directed 
confusion arise denote edges simply edge denoted define set edges vertex set edges originating formally degree defined degree defined network called cyclic contains directed cycles exists sequence edges network called acyclic contain directed cycles 
link associate nonnegative number called capacity collection discrete random processes observable node want allow communication selected nodes network want replicate means network subset random processes different node define triple denotes power set rate connection defined entropy rate random process connection call write notational convenience assume node send information link originating rate bits time unit 
random process transmitted link denoted addition random processes node observe random processes general random process transmitted link function sink connection collection random processes denotes output connection established successfully possibly delayed copy subset network set desired connections 
number simplifying assumptions 
capacity link constant bits time unit 
assumption satisfied arbitrary degree accuracy 
capacity exceeds bits time unit model parallel edges unit capacity 
fractional capacities approximated choosing time unit large 
link communication network delay 
allow case zero delay case call network delay free 
assume delay free networks acyclic order avoid stability problems 
random processes independent constant integral entropy rate bits unit time 
unit time chosen equal time unit definition link capacity 
implies rate connection integer equal assumption satisfied arbitrary accuracy letting time basis large modeling source larger entropy rate number parallel sources 
random processes independent different assumption reflects nature communication network 
particular information injected network different locations assumed independent 
addition constraints assume communication network performed transmission vectors symbols bits 
length vectors equal transmissions assume links synchronized respect symbol timing 
binary vector length interpreted element finite field elements 
random processes modeled discrete processes consist sequence symbols definition delay free assumption acyclic linear communication network 
definition delay free communication network 
say linear network links random process link satisfies coefficients elements ieee acm transactions networking vol 
october definition concerned formation random processes transmitted links network 
possible consider time varying coefficients call network time invariant time varying depending choice 
output node formed random processes sufficient purpose restrict case linear combinations coefficients elements prove section iii linear networks suffices consider formation linear functions concepts definition illustrated example network 
emphasize freely choose field containing constants particular frequently choose consider algebraic closure defined union possible algebraic extensions find suitable coefficients clear coefficients lie finite extension network set connections formally define network coding problem pair problem give succinct algebraic conditions set desired connections feasible 
equivalent finding elements suitably chosen field desired connections established successfully network 
set numbers called solution network coding problem solution exists network coding problem called solvable 
solution time invariant time varying independent dependent time 
consider case networks suffer link failure 
link failures assumed ergodic processes assume link working perfectly effectively removed network 
link failure pattern identified binary vectors length position associated edge link fails assume corresponding position equals entry corresponding link equals zero 
say network solvable link failure pattern solvable links corresponding support removed 
straightforward investigate solvability failure pattern finding common solutions classes failure patterns interesting task 
say network solution static set link failure pattern exists solutions network link failure pattern elements static solutions particularly desirable new solution distributed network failure pattern occurs individual nodes interior network oblivious failure pattern basic operation performed node network independent particular error pattern 
fundamental questions strive answer 
conditions linear network coding problem solvable 
efficiently find solution linear network coding problem 
static solution exist network subject link failures 
main tools answering questions involve concepts algebraic geometry 
particular relate network coding problem problem finding points algebraic varieties central questions algebraic geometry 
section iii introduce part algebraic framework 
goal section reader familiar employed concepts 
base theorem algebraic reformulation min cut max flow theorem 
point algebraic interpretation theorem context ford fulkerson algorithm 
section iv apply algebraic framework acyclic networks 
rapidly recover extend li ahlswede 
particular able answer problems left open authors 
section iv address general network coding problem cycle free networks derive necessary sufficient conditions guarantee solvability network coding problem 
case robust networks subject link failure treated section main surprising result robust multicast achieved static solutions network coding problem 
section vi extends results networks delay networks cycles 
iii 
algebraic formulation section develop algebraic concepts 
reader convenience follow simple example point point connection communication network fig 

communication network 
node partition vertex set classes vertices contains contains value cut defined koetter dard algebraic approach network coding fig 

point point connection simple network 
network nodes representing random processes transmitted network 
famous min cut max flow theorem formulated follows 
theorem min cut max flow network single source single sink desired connection network problem solvable rate connection equal minimum value cuts proof see 
ford fulkerson labeling algorithm gives way finding solution point point connections provided network problem solvable 
algorithm graph theoretic design finds assumptions section ii solution parameters definition zero 
ford fulkerson labeling algorithm provides elegant solution point point connections technique powerful handle involved communications scenario 
remainder section develop theory notation necessary complex setups 
consider point point setup 
node source network 
denote vector input processes observed similarly sink node network 
vector output processes 
important consequence considering linear network give transfer matrix describing relationship input vector output vector system transfer matrix network input output fixed set coefficients matrix coefficients elements field case go step consider coefficients indeterminate variables 
consider elements matrix polynomials ring polynomials variables example consider network fig 

set equations governs parameters random processes network 
straightforward compute transfer matrix describing relationship particular matrices defined system matrix equal determinant matrix equals choose parameters extension field determinant nonzero choose identity matrix matrix identity matrix 
solution ford fulkerson algorithm parameters type chosen equal zero 
clearly point point communication possible rate bits unit time 
note algebraic closure exists infinite number solutions posed networking problem assignments parameters render nonzero determinant transfer matrix inspecting example see crucial property network equation admitted choice variables polynomial evaluate zero 
simple lemma foundation existence proofs 
lemma ring polynomials infinite field variables nonzero element exists infinite set tuples ieee acm transactions networking vol 
october proof proof follows induction number variables fact infinite field 
theorem connection network transfer matrix algebraic quantity min cut max flow theorem graph theoretic tool 
theorem linear network source node sink node desired connection rate statements equivalent 
point point connection possible 
min cut max flow bound theorem satisfied rate determinant transfer matrix nonzero ring proof theorem direct consequence min cut max flow theorem 
particular equivalent theorem 
fact theorem treats single source single sink case network integer flows assumption 
ford fulkerson algorithm yields edge disjoint paths source sink nodes 
show equivalence 
turn show equivalence 
ford fulkerson algorithm implies solution linear network coding problem exists 
choosing solution parameters linear network coding problem yields solution identity matrix determinant vanish identically 
conversely determinant nonzero invert matrix choosing parameters accordingly 
lemma know choose parameters determinant nonzero 
implies equivalence shown 
example lemma theorem conclude studying feasibility connections linear network scenario equivalent studying properties solutions polynomial equations field third statement theorem allows translate graph theoretical properties network max flow connectivity algebraic condition 
powerful algebraic tools employed arrive statements concerning original network 
worthwhile point sufficient theorem consider expressions fields fixed characteristic 
words solution point point network problem exists exists solution restricted algebraic closure binary field need advantage consider fields characteristic 
clear linear coding strategies sufficient general network problem 
section iii investigate structure general transfer matrices polynomial equations give rise 
transfer matrices linear communication network definition node transmits outgoing edge linear combination symbols observed incoming edges 
relationship edges linear communication network natural fig 

directed labeled line graph corresponding network depicted fig 

incidence structure problem 
say edge feeds edge equal define directed labeled line graph vertex set edge set edge labeled corresponding label fig 
shows directed labeled line graph network fig 

define adjacency matrix graph elements 
lemma adjacency matrix labeled line graph cycle free network matrix polynomial inverse coefficients proof provided original network acyclic graph acyclic 
may assume vertices ordered ancestral ordering 
follows strict upper triangular matrix invertible field definition claim invertible ring polynomials corresponding quotient field rational functions follows direct back substitution algorithm 
order consider case network contains multiple sources sinks consider vector input processes vertices vertex network source node set corresponding parameter equal zero 
vector length entries matrix defined 
similarly vector output processes 
sink node connection equal zero 
vector length entries matrix defined 
example consider network depicted fig 

corresponding labeled line graph depicted fig 

koetter dard algebraic approach network coding fig 

network source sink nodes 
corresponding labeled line graph 
labels omitted clarity 
edge feed edge edge feeds vertex labeled line graph 
renders isolated assume network supposed accommodate connections fix ordering edges ordering adjacency matrix labeled line graph equal shown bottom page 
matrices equal respectively shown bottom page 
definition matrices easily find transfer matrix network 
theorem network matrices transfer matrix network identity matrix 
proof matrices substantially contribute transfer matrix perform linear mixing input output random processes 
order find impulse response link input random process output add gains paths random process take order contribute straightforward verify path nodes network accounted series matrix nilpotent eventually zero matrix 
write theorem follows 
transfer matrix considered matrix ring polynomials sequel vector denote set variables consider matrix elements explicit form vector want statements specific solution particular network problem conclude section sufficient form output processes linear function processes provided network problem solvable output process equal arbitrary function edges definition processes linear function input processes provided output equals particular input function describes vector space homomorphism linear function 
proves form restriction solvability network coding problem 
iv 
delay free networks multicast information simplest form multicast problem consists distribution information generated single source node set sink nodes sink nodes get source bits 
words set desired connections clearly connection satisfy cut set bound ahlswede showed condition sufficient guarantee existence coding strategy ensures feasibility desired connections 
li showed linear coding strategies sufficient ieee acm transactions networking vol 
october achieve goal 
theorem recovers result algebraic framework developed section iii 
theorem delay free network set desired connections 
network problem solvable min cut max flow bound satisfied connections proof single source network system matrix matrix dimension assumption theorem submatrix corresponding connection nonzero determinant consider product determinants submatrices 
product nonzero polynomial lemma find assignment determinants submatrices simultaneously nonzero matrix chosen block diagonal matrix contains main diagonal inverse corresponding submatrices choosing matrix way guarantee fold repetition identity matrix proves theorem 
important ingredient theorem fact sink nodes get information 
sink nodes receive entire data injected network 
words provided sink nodes know part system matrix describes connection interfering signals network 
interesting aspect setup sink nodes aware topology network 
knowledge effects coding occurring network sufficient resolve connection 
construction special codes multicast network coding problem easy 
proof theorem clear polynomial product determinants find point lie algebraic variety cut polynomial 
simple greedy algorithm suffice find solution 
formulate algorithm follows 
algorithm input polynomial indeterminates integer iteration find maximal degree smallest number find element halt goto 
output determination coefficients renders network transfer matrices single source sink node invertible 
choosing matrix matrices identity matrix solves multicast network problem 
theorem proves correctness algorithm provides simple bound degree extension consider 
theorem delay free communication network solvable multicast network problem source receivers 
product determinants transfer matrices individual connections maximal degree respect variable exists solution multicast network problem smallest number algorithm finds solution 
proof show algorithm terminates properly 
suffices show find rest proof follows induction 
consider polynomial coefficients definition coefficients divisible exists element substituting coefficients evaluates nonzero element substituting repeating procedure yields desired solution 
simple general upper bound necessary degree extension field multicast problem corollary 
corollary delay free communication network solvable multicast network problem source receivers 
rate source generates information 
exists solution network coding problem finite field proof entry matrix degree variable 
degree variable determinant particular transfer matrix follows relevant polynomial degree variable 
general network coding problem situation changed consider general network coding problem network arbitrary set connections problem considerably difficult multicast problem 
progress characterizing achievable set connections case arbitrary nonlinear coding strategies 
set achievable connections bounded yeung framework information inequalities 
focus linear network coding allows concise statements number network coding problems 
order accommodate desired connections ensure min cut max flow bound satisfied single connection disturbing interference connections 
example outlines basic requirements general case 
example network depicted fig 

corresponding labeled line graph fig 

assume want accommodate connections network vectors koetter dard algebraic approach network coding fig 

network source sink nodes 
corresponding labeled line graph 
straightforward check system matrix write block matrix denotes transfer matrix denotes transfer matrix easy see network problem solvable determinants unequal zero matrices zero matrices 
note determinant nonzero min cut max flow bound satisfied 
interesting note min cut max flow condition satisfied connection individually cut sources sinks 
condition guaranteed edge edge removed determinant transfer matrix vanish identically indicates violation min cut max flow condition applied cuts separating order satisfy choose implies equals zero 
satisfy requirements simultaneously network problem solvable 
worthwhile point verified network coding problem pertinent coding strategy shortcoming linear network coding 
denote vector input processes denote vector output processes 
example consider transfer matrix block form submatrix describing transfer matrix input processes output processes theorem states succinct condition network problem solvable 
theorem generalized min cut max flow condition acyclic delay free linear network problem corresponding transfer matrix relating set input nodes set output nodes 
network problem solvable exists assignment numbers variables pairs vertices contains connections submatrix nonsingular matrix 
proof assume conditions theorem met assume network operates corresponding assignment numbers condition ensures disturbing interference sink nodes 
sink node invert transfer matrix sent information 
recover conversely assume conditions satisfied 
condition satisfied collection random processes observed incoming edges superposition desired information interference 
sink node possibility distinguishing interference desired information desired processes reliably reproduced condition equivalent min cut max flow condition clearly satisfied network problem solvable 
theorem gives succinct condition satisfiability network problem 
checking conditions tedious task find solution assignment number exhibits desired properties 
sketch algebraic approach problem remainder section 
denote entries evaluate zero order satisfy ieee acm transactions networking vol 
october condition theorem 
consider ideal generated denote ideal hilbert know ideal proper ideal find assignment numbers satisfy condition theorem 
order satisfy second condition theorem denote determinants matrices nonzero 
introduce new variable consider function call ideal ideal linear network problem denoted algebraic variety associated denoted theorem linear network problem 
network problem solvable nonempty ideal proper ideal proof assume ideal proper ideal hilbert implies variety points elements vanish nonempty 
exists assignment condition theorem satisfied 
solutions variety generating set ideal identified condition theorem satisfied element solution linear network problem 
conversely assume follows variety empty solution satisfies required conditions 
choosing proper value solution network coding problem immediately give rise nonempty variety theorem reduced problem deciding solvability linear network problem problem deciding variety empty 
decide problem buchberger algorithm compute gr bner basis ideal known gr bner basis ideal equals corresponding variety nonempty 
techniques involving gr bner bases exceed scope refer reader cox thorough treatment material 
note known general complexity gr bner basis computations polynomially bounded number variables 
mathematics software routinely solves large gr bner basis computations 
careful study structure obtained network problems optimizing computation gr bner basis ideal linear network problem important tasks deriving efficient algorithms deciding network problem 
special network problems cases relatively straightforward satisfy conditions theorems 
approaches subsumed principle conditions theorem satisfied means linear algebra 
multicast scenario section iv simplest example situation 
start case multiple sources multiple sinks network coding problem sources want communicate information sinks 
words set desired connections sources sinks characterization setup interference free due fact sinks supposed receive information 
interference free situation exploited similar theorem stated context general potentially nonlinear coding strategies 
theorem linear acyclic delay free network set desired connections network problem solvable min cut max flow bound satisfied cut source nodes sink node proof consider transfer matrices source nodes sink nodes individually 
matrix considered matrix nonsingular assumption 
find assignment numbers variables matrix evaluated points nonsingular holds relevant matrix 
sink nodes obtain desired information choosing matrix appropriately 
note theorem contains theorem special case situations relatively similar theorem reduced theorem introducing super node having access entire information feeding information nodes surprising fact solving set connections setup theorem encoding necessary source nodes 
clear observation case interference free allowing proper encoding source node crucial general networking problem 
number special cases encoding opportunity sources guarantee existence solution network coding problem 
remaining theorems section specialize case source gives complete control encoding matrix specific type network coding problem covered subsequent theorems specified set desired connections 
say min cut max flow satisfied source node set sink nodes rates satisfied cut set rate theorem linear acyclic delay free network set desired connections collections random processes mutually disjoint network problem solvable min cut max flow bound satisfied koetter dard algebraic approach network coding set sink nodes rates proof assume loss generality mutually disjoint random processes partition set transfer matrix square matrix nonsingular assumption 
choosing matrix source node properly guarantee transfer matrix realizes identity matrix sink node receives data stream intended 
conversely assume min cut max flow satisfied subset sink nodes 
follows corresponding submatrix transfer matrix contains linearly dependent columns transfer matrix nonsingular 
note setup theorem breaks allow source node imposes restriction particular form matrix loosen restrictions disjointness information distributed different nodes 
particular augment set connections theorem number connections receive entire information injected network node theorem linear acyclic delay free network set desired connections collections random processes mutually disjoint network problem solvable min cut max flow bound satisfied set sink nodes rates rate proof proof extension proof theorem 
transfer matrix proof augmented number square matrices corresponding connections matrix chose proof theorem nonsingular product square matrices corresponding connections nonsingular 
matrices inverted proper choice matrix theorem interesting corollary case sink nodes best described level multicast 
setup assumes sinks sink receive information second sink receives subset corollary linear acyclic delay free network set desired connections network problem solvable min cut max flow bound satisfied rate rate large number special cases treated similarly results section 
proofs theorems adaptable situations minor modifications 
turn attention problem robust networks 
robust networks interesting challenge added problem network coding assume links network may fail 
ques tion failure pattern successful network usage guaranteed 
failing link 
assume downstream sink node node reached directed path notified failure link nodes notified link failure 
network link failure pattern straightforward consider network obtained deleting failing links applying results sections ii iv setup 
interested static solutions network oblivious particular failure pattern 
idea node transmits outgoing edges function observed random processes functions independent current failure pattern 
convention constant observed failing links 
achieve effect failing link setting parameters zero effectively influence random process transmitted edge system matrix particular linear network coding problem 
set parameters affected failing link correspond denoted particular link failure pattern define lemma connection network problem link failure pattern lemma system matrix linear network coding problem system matrix particular link failure pattern system matrix network obtained deleting failing links 
relation proof effect failed link modeled fact information random process fed failed link fed failed link link 
setting coefficients zero compliant assumption constant observed failed nodes 
set failure patterns network coding problem solvable 
multicast scenario case surprising result 
theorem linear network set connections 
exists common static solution network problems proof particular failure pattern renders solvable network 
determinant transfer matrix corresponding connection consider product lemma find assignment numbers single determinant evaluates nonzero value simultaneously 
follows regardless error pattern basic multicast requirements satisfied 
ieee acm transactions networking vol 
october theorem robust multicast scenarios possible sense multicast organized robustly possible 
interesting note choosing value variables random large field yields solution high probability achieves maximum robustness network 
give equivalent theorem corollary 
formulating theorem price pay exceptional robustness apparent 
theorem delay free communication network solvable multicast network problem source receivers 
set failure patterns want recover 
rate source generates information 
exists solution network coding problem finite field proof product determinants transfer matrices individual connections maximal degree respect variable proof corollary know bounded altogether consider product determinants 
theorem follows 
question arises statements theorem derived general network problem 
example shows simple network coding problems exist allow static solution different failure patterns example consider network depicted fig 

capacity edges bit time unit set desired connections example small possible verify directly network coding problem solvable single failure involving single link exist static solution linear nonlinear coding strategy 
show observation reflected algebraic setup approach 
input vector output vector transfer matrix equal account way elements fed network account linear mixing performed sink nodes 
ideal network coding problem generated polynomials easily find point corresponding variety 
fig 

communication network source nodes sink nodes 
corresponding labeled line graph 
consider case link fails 
lemma find corresponding transfer matrix letting variables zero 
ideal generated similarly consider case link fails case find generated necessary condition existence common solution network problems obtained fails smallest ideal containing proper ideal words intersection corresponding varieties empty 
ideal generated seen condition equal zero leads situation equation satisfied 
exist static solution allows failure link vi 
networks delay far dealt delay free assumption cycle free networks 
extension networks delays relatively straightforward technical multicast scenario 
general scenario requires considerably technical tools 
main problem treatment general setup system matrix matrix polynomial ring coefficients rational functions delay variable natural field consideration algebraic closure field rational functions koetter dard algebraic approach network coding acyclic network delay operate network continuous mode information continuously injected network operate network burst oriented mode 
mode vertex transmits information outgoing node input observed incoming links 
approach taken li leads situation network delay thought instantaneous results section iv apply 
time fraction particular link idle controlled choosing frame length large 
treat case continuous operation network delay 
problem arises injected information take different routes causing different delays network 
delay necessitates memory sink nodes 
consider input random processes output random processes random processes transmitted link power series delay parameter particular ordering sources sinks notation denote vectors random processes input output system 
restrict interior network nodes operate memoryless fashion means internal node network take linear combinations symbols observed simultaneously incoming edges 
turns restrictive general linear network problem 
memoryless operation nodes sufficient treat robust multicast scenario 
case see allow memory sink source nodes 
formally definition 
definition networks delay communication network delay 
say linear network edges random process link satisfies coefficients elements output node formed observed random processes suitable fashion 
turns sufficient consider linear operation output coefficients elements accounts memory required sink node process encoding information network nodes feeding outgoing edges captured adjacency matrix corresponding directed line graph 
distinguish case acyclic networks delay case network contains cycles 
lemma adjacency matrix labeled line graph cycle free network matrix polynomial inverse ring proof ancestral ordering edges network see written upper triangular matrix entries ring claim follows back substitution algorithm give explicit form inverse lemma adjacency matrix labeled line graph network matrix inverse field rational functions proof determinant nonzero seen letting equal zero 
matrix invertible field definition taken case delay free networks consider system matrix entries defined rational functions response system excitation system matrix composed multiplication matrices matrix defined section iii 
matrices general contain rational functions particular entries matrix defined 
similarly entries matrix defined 
call matrices constant polynomial rational depending domain definition 
call rational matrix realizable entries realizable rational functions entry defined evaluated theorem gives equivalent theorem case networks delay 
theorem communication network delay rational matrices adjacency matrix corresponding labeled line graph transfer matrix network identity matrix 
proof proof essentially identical proof theorem omitted 
base theorem underlying development section iv theorem 
reformulation applies networks cycles 
theorem communication network 
statements equivalent 
ieee acm transactions networking vol 
october point point connection possible 
min cut max flow bound satisfied rate determinant transfer matrix nonzero field proof theorem direct consequence min cut max flow theorem true case cyclic networks 
statements equivalent theorem 
ford fulkerson algorithm yields solution network problem satisfies requirements linear solution 
associate system transfer matrix solution consequently nonzero determinant 
conversely determinant nonzero invert matrix choosing parameters accordingly 
lemma know choose parameters determinant nonzero 
implies equivalence shown 
position state main results concerning networks cycles multicast robust multicast setup 
start formulation multicast scenario 
theorem communication network set connections 
network problem solvable min cut max flow bound satisfied connections proof changing field constants field rational functions proof essentially proof theorem 
determinants relevant transfer matrices considered ratio polynomials ring lemma find assignment determinants nonzero submatrices invertible 
choose realizable matrix matrix elements fold repetition large integer unit matrix 
corollary linear network set desired connections network problem solvable min cut max flow bound satisfied cut source nodes sink node li give result multicast problem concerns min cut max flow bound networks cycles 
codes employed setup time varying question raised time invariant multicast network exists satisfies simultaneous min cut max flow bound 
important consequence proof theorem corollary answers question affirmatively 
corollary communications network set connections 
network problem time invariant solution min cut max flow bound satisfied connections proof proof follows proof theorem 
particular individual determinants nonzero choosing assignment noted operations performed interior nodes network time invariant individual sink nodes implement rational functions involving memory order output possibly delayed input arguments lead derivation robust networks theorem extended case networks delays allowing sink nodes implement rational functions particular corollary robust solution time invariant 
clear particular network problems treated section iv equivalent formulation networks cycles 
brevity reformulate theorems 
vii 
algebraic framework investigating capacity issues networks linear codes 
introduced technique connection certain systems polynomial equations solutions network problems 
algebra context significant enabling tool possible capitalize powerful theorems established field mathematics 
see roads opening research 
investigation network behavior randomly chosen codes intriguing question context self organizing networks 
avenues structured investigation network management requirements robust networks 
particular relating change network change receiver function give insight minimum number bits required respond failure scenarios 
issues involve development protocols capitalize insights network coding 
theoretical issues address questions sufficiency network coding general separability network coding coding ergodic link failures 
cover comments broadcast channels ieee trans 
inform 
theory vol 
pp 
oct 
broadcast channels ieee trans 
inform 
theory vol 
pp 
jan 
achievable rate region broadcast channel ieee trans 
inform 
theory vol 
pp 
july 
ahlswede multi way communication channels proc 
ieee int 
symp 
information theory pp 

liao multiple access channels ph dissertation univ hawaii 
van der meulen terminal communication channels adv 
appl 
probabil vol 
pp 

cover el gamal capacity theorems relay channel ieee trans 
inform 
theory vol 
pp 
sept 
gallager gaussian parallel relay network proc 
ieee int 
symp 
information theory 
li yeung cai linear network coding ieee trans 
inform 
theory vol 
feb 
ahlswede cai 
li yeung network information flow ieee trans 
inform 
theory vol 
pp 
july 

li yeung network multicast flow linear coding proc 
int 
symp 
operations research applications pp 

koetter dard algebraic approach network coding yeung course information theory 
norwood ma kluwer 
yeung zhang distributed source coding satellite communications ieee trans 
inform 
theory vol 
pp 
may 
chih lin diversity coding error control self healing communication networks proc 
ieee infocom vol 
pp 


li yeung network information flow multiple sources proc 
ieee int 
symp 
information theory 
bertsekas network optimization continuous discrete models 
belmont ma athena scientific 
elias feinstein shannon note maximum flow network ieee trans 
info 
theory vol 
pp 
dec 
fulton algebraic curves 
new york benjamin 
cox little shea ideals varieties algorithms computational algebraic geometry commutative algebra 
new york springer 
ralf koetter received diploma degree electrical engineering technical university darmstadt darmstadt germany ph degree department electrical engineering link ping university sweden 
visiting scientist ibm almaden research laboratory san jose ca 
visiting assistant professor university illinois urbana champaign visiting scientist cnrs sophia antipolis france 
joined faculty university illinois urbana champaign currently assistant professor coordinated science laboratory 
research interests include coding information theory application communication systems 
dr koetter received ibm invention achievement award national science foundation career award ibm partnership award 
served associate editor coding theory techniques ieee transactions communications 
started term associate editor coding theory ieee transactions information theory 
dard sm received degrees electrical engineering computer science mathematics degree humanities degree electrical engineering sc degree electrical engineering massachusetts institute technology mit cambridge 
esther harold associate professor department electrical engineering computer science mit member laboratory information decision systems 
previously assistant professor department electrical computer engineering member coordinated science laboratory university illinois urbana champaign 
staff member mit lincoln laboratory optical communications advanced networking groups 
research interests areas reliable communications particularly optical wireless networks 
dr dard received ieee leon prize award 
associate editor optical communications networking series ieee journal selected areas communications guest editor journal technology associate editor osa journal optical networking 
