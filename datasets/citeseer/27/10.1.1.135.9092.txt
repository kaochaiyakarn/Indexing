clickstream clustering weighted longest common subsequences banerjee joydeep ghosh ghosh ece utexas edu dept electrical computer engineering university texas austin austin tx categorizing visitors interactions website key problem web usage mining 
generated various users follow distinct patterns knowledge may help providing customized content 
propose novel effective algorithm clustering function longest common subsequence takes account trajectory taken website time spent page 
results weblogs www com illustrate techniques 
keywords web usage mining clickstream subsequence clustering 
rapid increase web traffic commerce understanding user behavior interaction website important website owners 
identifying nature user visiting website may enable site provide customized content users making sticky enhancing user experience 
business implications ability huge specially portals personalized content providers 
sequence pages visited user particular website clickstream site session 
purpose clustering users particular website find groups users similar interests motivations visiting website 
site designed strong correlation similarity user similarity users interests intentions 
clustering predict groupings 
lot research done area web usage mining directly indirectly addresses issues involved extraction web navigational patterns ordering relationships prediction web surfing behavior clustering web usage sessions web logs possibly supplemented web content structure information 
fundamental difficulty problems raw data form sequences vectors 
result developed mining techniques vector type data applied directly 
specific problem web usage clustering studied past years 
authors looked clustering web usage sessions generalization approach making hierarchical clustering algorithm called birch 
authors introduced idea path feature space path angles clustered paths means algorithm 
definitive solution emerge 
categorizing visitors clickstream difficult problem typically number possible sequences page visits huge 
time spent page may differ significantly user user 
time spent user particular page clear indication user interest page ignored 
webserver logs developed formal definition path corresponding session website contact author phone fax needs set heuristic upper bound time spent page user take care outliers distracted users way compute similarity measure paths resolution account trajectory taken time spent page 
getting user paths webserver logs need extract user sessions weblog files 
extracting user sessions weblogs specially absence cookie information difficult task address 
shall assume sessions extracted cookies reasonable heuristics 
define path generated session propose method finding similarity pairs paths obtained extracted sessions 
method determines intersection paths consideration defined longest common subsequence lcs sequences pages visited user 
similarity value computed lcs function closeness times spent corresponding pages weighted certain importance factor 
similarity values graph constructed nodes paths 
edge connecting nodes weight equal similarity value corresponding paths 
clustering sessions performed similarity space efficient graph techniques 
large websites paths considered webpage level resolution similarity values turn zero paths actual page overlaps 
may reflect user behavior properly 
introduce idea concept paths paths conceptually similar pages non null intersection direct webpage overlap 
procedure effective yielding meaningful clusters user paths 
reduces computations significant amount 
organized follows 
section define path website formally briefly discuss algorithm finding intersection paths 
propose path similarity measure paths making intersection show properties measure section 
formation similarity graph pairwise similarity values methods obtaining path clusters graph discussed section 
section extend idea path concept path explain reasons doing 
section discuss sample results 
study flexibility issues algorithm section 
draw section 
path intersection session user visits pages represented length sequence ordered pairs sequence webpages visited jth page visited session corresponding sequence times spent page time spent shall call sequence path corresponding session consideration 
shall outline dynamic programming algorithm finding intersection paths 
formally sequence sequence subsequence exists strictly increasing sequence jl indices ji sequences say common subsequence subsequence 
interested finding maximum length longest common subsequence lcs paths sequences page visits lcs studied optimal sub structure property theorem sequences lcs 

lcs 
implies lcs 

implies lcs 
proof theorem 
efficient recursive algorithms compute lcs exist property lcs 
shall go details algorithms lot literature exists topic 
implemented mn algorithm wagner fischer added module outputs subsequence indices sequences match forming longest common subsequence 
example lcs indices forming lcs respectively 
pair paths obtain functions take particular index longest common subsequence generate corresponding indices sequences respectively 
example 
path similarity measure section propose path similarity measure paths website longest common subsequence 
similarity measure propose takes account time spent important refinement 
product times spent corresponding pages similarity measure 
returns similarity values 
measure gets rid problems adds lot flexibility formulation 
previous looked finding path similarity substring matches 
shall show complexity proposed approach subsequence matches lower previous 
pair paths obtained functions lcs extraction algorithm 
note functions cardinality range sets functions equal length lcs 
shall denote cardinality lcs represent indices respectively focus sequences 

time subsequences corresponding page subsequences forming lcs sequences 
compute total time spent lcs user lcs note total time spent user similarity measure paths components 
similarity component component computes similar paths region overlap case lcs 
spent time page similarity page computed min max similarity si min max average similarity paths entire overlap region si min max 
importance component component computes important overlap region paths 
importance estimated fraction total time spent region path lcs lcs importance paths attach overlap region path mean fractions implementation geometric mean fractions 
contribution importance component lcs total similarity paths min max lcs lcs proposed similarity measure properties 
case overlap paths overlap 
summation 
reason lcs 
lcs 

case identical paths case 
result si 
lcs 

general property follows fact average terms lies 
arithmetic mean fractions lying 
product lies 
similarity measure commutative similarity graph clustering previous section technique find similarity pair paths outlined 
paths 
consideration similarity values obtained 
construct weighted similarity graph 
edge eij nodes exists weight equal path similarity value paths computed section 
shall represent edge weight edge eij eij 
note eij property similarity measure 
property get eij undirected graph constructed follows 
initialize null set 

choose edge threshold 
eij eij note equality occurs 
disconnected graph isolated vertices 
property proved appendix idea construction number observations shall discuss 
lot show similar behavior surfing automatically categorized meaningful groups 
quite behavior follow general group characteristics 
result nodes similarity graph representing paths taken users weakly connected nodes graph 
clustering undesirable outlier users forced nearest cluster 
thresholding approach described takes outliers clustering 
noted path taken graph unique outlier path strong similarity path stay 
think variations generalizations lines shall go 
problem clustering formulated partitioning graph min cut balancing constraints 
set edges removal partitions graph pair wise disjoint subgraphs gl vl el called edge separator objective find separator minimum sum edge weights min eij eij el vl mentioned min cut objective achieved balancing constraint max vl graphs weighted vertices vl term replaced sum vertex weights 
imbalance threshold higher imbalance allowed vice versa 
partitioning parts gives sets relatively closely connected nodes 
nodes represent paths getting clusters paths clustering set unique outliers thresholding 
efficient fast graph partitioning algorithm called metis partitioning 
concept clustering paths considered webpage level resolution paths tend little similarity 
high resolution exact webpage matches paths 
results lot small zero length turn number paths clustered pretty small small values 
number outliers large desirable 
point observe exact webpage matches lot webpages site semantically equivalent 
webpages grouped categories suitable analytics metadata information 
shall call categories concept new paths formed concept category pages original path 
may exact webpage matches paths paths similar concepts sports politics shall get non zero similarity value paths 
websites contents categorized subject topic ontology structure readily form concepts 
method successfully weblogs www com highly community site www ece utexas edu website department ece ut austin 
shall briefly discuss concept categories followed examples conversion webpage paths concept paths 
structured website identified concept categories level branchings root page com root page category 
identified categories home stands www com index html articles authors books coffeehouse contests creative fun games movies personal philosophy politics sports wo men corresponds level branching home misc stands webpages site fall previously mentioned categories 
convert raw paths concept paths average size path reduces get paths easily understood 
examples conversion shown table 
original path concept path authors ramesh mahadevan html authors articles rm html articles articles rm html authors arun html authors philosophy messages html philosophy philosophy messages html philosophy messages html philosophy articles abbas hindi html articles wo men messages html wo men wo men messages html wo men messages html wo men messages html fun messages html fun fun messages html fun messages html movies messages html movies movies messages html books messages html books articles vaccine html articles articles html original paths converted concept paths 
number vertices graph size isolated points threshold variation change 
example pages www com books foo html www com books foo bar html fall category books concept paths formed treat ordinary paths apply developed techniques sections get concept path clusters outliers 
results meaningful simple page path case 
section clusters outliers obtained concept paths 
corresponding cluster assigned meaningful cluster label looking general nature paths cluster 
sample results due lack space just clustering results obtained doing concept clustering website 
data mb raw logs collected month period 
certain standard preprocessing logs reduce mb 
total pages accessed unique hosts 
session extraction time heuristics total sessions extracted 
sessions single page access rejected way compute time spent page 
sessions extremely large number page accesses rejected probably generated crawlers bots 
left sessions analysis 
converting original paths concept paths session consisted visits webpages average time span minutes 
concept paths average session consisted concept pages 
examples paths fall cluster interpretation cluster 
clusters obtained partitioning thresholded similarity graph 
number clusters generated user defined parameter set case 
format path results sequence category time spent category tuples 
cluster users interested contests path movies contests path contests path coffeehouse contests path contests path contests cluster users interested men women relationships path wo men path wo men path coffeehouse philosophy wo men path wo men path wo men cluster users glance articles path articles path articles path articles path articles path articles cluster users read articles path articles misc articles path articles path authors articles path misc articles misc articles authors articles path articles authors articles outliers path coffeehouse fun personal wo men books path philosophy books coffeehouse wo men fun movies personal path personal personal misc personal path coffeehouse philosophy movies authors articles misc path creative movies philosophy books personal cluster users spend time authors articles path authors articles path authors articles path authors articles path authors articles path authors articles cluster users interested philosophy path philosophy path coffeehouse philosophy path philosophy path wo men philosophy path philosophy books change size sets change shown fig 

increases highly similar paths go clustering phase resulting extremely pure clusters 
paths discarded outliers 
hand lower values number outliers quality clusters degrade 
trade value needs decided depending application 
order study results clustering time factor account assumed time spent concept pages user unity repeated experiments 
observed lot paths different clusters came cluster desirable 
example boxed paths cluster cluster examples similarity appeared cluster 
see behavior users clearly different articles read 
extra information comes time component turns important meaningful analysis weblogs 
comments take closer look techniques proposed terms scalability design parameters involved 
scalability path similarity algorithm essentially computes similarity pair total paths 
average case complexity number paths consideration max min random variables length pair paths taken jointly 
better substring approach 
comparison raw path average length pages concept approach group pages map concept reduces average length path significantly resulting significant reduction complexity 
choice choice determines nature nature clusters 
example nodes corresponding pairs paths exactly equal treated outlier algorithm ends pushing real outliers nearby clusters 
interested pure clusters shall keep value high high depend distribution edge weights 
hand interested categorizing paths group low value desirable depending distribution edge weights 
defining concepts defined concepts branchings homepage website 
simple naive definition think 
ways defining concept involved manner 
cluster documents website content define cluster concept 
take consideration ontology pages website think multi resolution concept 
aspect needs investigation 
concluding remarks current approaches path clustering correlations associations markov approaches fail time information scale longer paths 
novel noteworthy approach problem taken web utilization miner wum system individual paths combined aggregated tree queries corresponding desired path patterns mapped intermediate nodes tree structure 
time information 
defining suitable similarity measure pair paths map paths similarity space 
technique enables naturally incorporate path time information 
idea thresholding similarity graph particularly useful data mining applications way reducing size data handled clustering stage robust outliers 
fast scalable efficient graph partitioning algorithm clustering 
avoids curse dimensionality problems encountered traditional clustering methods means applied high dimensional spaces 
superiority graph partitioning methods clustering demonstrated web analytics domains clustering web documents 
contribution metadata pre existing category labels 
captures notion content level 
possible extracting textual meta tag information contents pages viewed enhance quality user clustering provided additional information complexity managed properly 
purity may defined completeness subgraph induced nodes cluster research supported part nsf ecs gift intel 
want express gratitude prabhakar providing weblog data 
processing done user anonymous fashion preserve privacy visitors com 
property property isolated nodes graph 
proof possible isolated point 
eij 
isolated eij 
note conditions hold time 
isolated points 
cooley 
web usage mining discovery applications interesting patterns web data 
phd thesis dept computer science university minnesota may 
spiliopoulou 
wum tool web utilization analysis 
extended version proc 
edbt workshop webdb pages 
springer verlag 
mannila meek 
global partial orders sequential data 
proc 
th intl 
conf 
knowledge discovery data mining kdd pages aug 
pitkow pirolli 
mining longest repeating subsequences predict world wide web surfing 
proc nd usenix symposium internet technologies systems usits oct 
fu sandhu shih 
generalization approach clustering web usage sessions 
spiliopoulou masand editor web usage analysis user profiling pages 
springer 
shahabi shah 
knowledge discovery users web page navigation 
proc 
th intl conf research issues data engg pages 
banerjee ghosh 
concept clustering clickstream data 
proc 
rd intl 
conf 
information technology pages dec 
cormen leiserson rivest 
algorithms 
mit press 
vladimir dan expected length longest common subsequences 
phd thesis university warwick 
aho hirschberg ullman 
bounds complexity longest common subsequence problem 
assoc 
comput 
mach 
hirschberg 
algorithms longest common subsequence problem 
acm 
wagner fischer 
string string correction problem 
assoc 
comput 
mach 
karypis kumar 
fast high quality multilevel scheme partitioning irregular graphs 
siam journal scientific computing 
strehl ghosh mooney 
impact similarity measures web page clustering 
proc 
th natl conf artificial intelligence workshop artificial intelligence web search aaai pages 
aaai july 
