hedging uncertainty approximation algorithms stochastic optimization problems ravi amitabh sinha july initiate design approximation algorithms stochastic combinatorial optimization problems formulate problems framework stage stochastic optimization provide nearly tight approximation algorithms 
problems range simple shortest path vertex cover bin packing complex facility location set cover contain representatives different approximation ratios 
approximation ratio stochastic variant typical problem order magnitude deterministic counterpart 
furthermore common techniques designing approximation algorithms lp rounding primal dual method greedy algorithm carefully adapted obtain results 
increasing success optimization algorithms process optimization methods making earlier planning stages large scale projects 
inherent difference optimization planning stage post facto optimization data fully available 
costly decisions wide ranging implications need taken face incomplete data 
quite forecasts uncertainty available planning model 
forecasts nature imprecise provide best range possible futures 
field stochastic optimization attempt model situations 
detailed please consult texts topic birge wallace klein van der 
parallel development field approximation algorithms evolved counter prohibitive resource requirements exact solution np hard combinatorial optimization problems 
informally algorithms run polynomial time deliver performance ratio quality output solution instances 
size models solved increases scale solution approach gains importance 
detailed exposition topic reader referred vazirani ausiello 
approximation algorithms sophisticated scope technique refrain real world practitioners need algorithms input data seldom defined diminishing value solutions guarantees provided algorithm 
conversely field stochastic optimization models uncertainty data fairly running times carnegie mellon university pittsburgh pa 
ravi cmu edu carnegie mellon university pittsburgh pa 
andrew cmu edu exact algorithms developed stochastic optimization community prove prohibitive 
combines best worlds providing approximation algorithms stochastic version classical optimization problems 
background stage model popular models stochastic optimization stage model recourse 
outset data may known deterministically uncertain characterized probability distribution 
decisions point referred stage decisions 
subsequently actual realized may opportunity augment stage solution order optimized realized scenario 
second stage decision making called recourse stage 
goal optimize stage decision variables minimize expected cost stages 
mathematical formulation formally stage stochastic optimization problem recourse defined follows 
vector set decision variables fixed stage partial information available 
full information available choose second stage recourse variables augment stage solution represent random vector defines constraint matrix cost vector requirement vector full information available define stage 
denote additional constraints non negativity integrality components need satisfy 
stochastic program written min ips ax min represents optimal cost second stage conditioned scenario having realized stage setting variables expectation taken respect 
stochastic optimization finite scenarios popular restriction stage model second stage characterized finite set scenarios 
scenario constraint matrix cost vector requirement vector take values respectively scenario occurs probability pk 
case write ips extensive form follows represents choice variable scenario materializes min pk ips ax 

interested reader may refer texts cited complete description models stochastic optimization uses 
schultz van der provide excellent survey stage stochastic integer programming kong schaefer provided approximation algorithms class problems 
relevance finite scenario model pronounced light scenario reduction 
approximation algorithms raison etre approximation algorithms prohibitively high running time exact algorithms integer programming combinatorial optimization due np completeness 
approximation algorithms required run time polynomial size input 
time provide guarantees form approximation ratios 
class minimization problems op respectively denote value optimal solution solution output algorithm approximation ratio algorithm defined follows max op area approximation algorithms active areas optimization past decade 
barring exceptions approximation algorithms assume complete knowledge input outset 
mohring schulz studied approxima tion algorithms scheduling problems karger considered steiner tree problem slightly different model stochastic optimization 
results aims 
demonstrate relevance applicability developing approximation algorithms stochastic optimization problems 
carefully adapt existing techniques deterministic versions problems study provide approximation guarantees stochastic versions constant factors 
provide polynomial time approximation algorithms classical combinatorial optimization problems stage stochastic optimization setting finitely scenarios 
results sum 
current best known deterministic approximations listed meaning problem solved optimally polynomial time 
stochastic approximation ratios derived 
hardness results carried underlying deterministic problems mentioned citations 
remaining proved 
table refer number scenarios refer number combinatorial elements number vertices shortest paths problems number elements problem det stochastic stochastic hardness approx 
elements approximation shortest sink max snp paths sink metric log log log bin packing object sizes np complete facility client demands location facility costs vertex cover vertex weights incidence set cover log set weights log nm log set inclusions log summary results 
set cover problem 
ausiello asymptotic polynomial time approximation scheme algorithm performance ratio approaches number objects increases 
problem said max snp hard papadimitriou yannakakis abbreviated max snp table constant impossible approximate problem performance ratio smaller np sequel consider problems order listed 
approximation algorithms hardness results underlying deterministic versions problems surveyed algorithms stochastic versions 
shortest paths motivation consider supplier wishes ship single unit single destination single source graph shipping cost just cost edge 
solution problem compute shortest path easily done polynomial time example algorithm due dijkstra 
consider stochastic extension 
supplier know advance destination going 
particular scenarios materialize destination scenario supplier enter contracts stage ship edge cost ce disadvantageous destination turns opposite direction 
supplier decides wait scenarios materialize cost edge scenario changes disadvantageous fk large 
supplier wish reserve edges cost ce augment network scenario necessary 
problem definition graph metric edge costs ce single source set scenarios scenario specified destination vertex tk cost scale factor fk probability pk 
feasible solution specified set edges stage cost solution ce scenario second stage solution path pk tk second stage costs assume edges pk bought stage cost zero remaining edges increased cost factor fk giving second stage cost fk pk ce 
objective compute minimizes sum stage edge costs expected second stage edge costs 
abbreviate problem ssp stochastic shortest paths 
obvious induces connected component lemma proves connected fact tree 
lemma set edges bought stage optimal solution ssp induces tree containing source proof suppose contradiction connected component set scenarios optimal solution uses edge es connected component stage edges include source optimality case edge pk implying fk 
consider paths scenarios scenario second stage cost segment source cheapest 
re route paths scenarios path path point scenario paths intersect fk total cost increase 
purchase edges re routing increase cost 
proceeding way components infer induces connected graph containing need tree second stage solutions look single path interpretation network design problem armed lemma ssp interpreted tree star network design problem defined follows 
tree star network design demand nodes demand dj units goods shipped source 
feasible solution specified tree cost solution times cost tree pre specified plus length shortest path demand node tree weighted demand node 
constant factor approximation algorithm problem provided ravi studied subsequently connected facility location problem karger kumar asymmetric vpn design problem gupta 
theorem polynomial time constant factor approximation algorithm ssp 
proof ssp equivalent tree star network design problem transformation 
fixed cost multiplier tree set 
demand node tk set 
purchasing tree stage ssp equivalent building tree star problem 
expected second stage cost exactly tk incurred tree star problem demand node tk 
equivalence ssp tree star network design implies np hardness ssp 
note ssp different problem studied karger model node terminal independently certain probability edge costs change scenarios solution required single tree spanning potential terminals 
stochastic metric problem interesting harder metric allowed change arbitrarily scenarios 
happen example shipping sea cheaper air transport scenario vice versa 
problem defined exactly section cost edge stage scenario call stochastic metric shortest paths problem 
general stage component optimal solution need tree 
consider example second stage scenario 
graph path vertices 
source sink respectively 
large constant 
costs edges 
stage respectively second stage 
optimal solution clearly purchase edges stage second stage solution cost 
solution requires stage tree cost hardness restriction stage set edges form tree hard group steiner tree problem gst defined follows 
undirected graph edge weights ce vertex subsets called groups sk 
objective compute minimum cost tree includes vertex group 
problem studied garg ravi gave approximation algorithm performance ratio roughly log log halperin showed inapproximability threshold log tree 
rest section consider restriction stage solution tree dub tree 
log hardness tree follows reduction gst tree shown 
theorem instance gst modeled special case tree 
proof suppose instance group steiner tree specified metric edge costs groups 
sm 
create instance scenario group 
graph remains stage edge costs edge costs gst instance 
scenario metric follows 
distance vertices sk zero distances infinity 
vertex sk defined destination tk scenario scenarios equally 
optimal solution instance tree select stage tree includes vertex sk avoid infinite cost 
tree includes vertex sk augmented cost zero tree includes tk scenario materializes 
approximation algorithm approximation algorithm relies ip formulation tree 
variable uv edge direction part path traversed tk edge chosen recourse solution 
variable uv edge chosen path tk edge part stage solution 
variable xuv edge chosen stage tree 
min pk tk tk uv uv vu vu tk uv tk vu xe non neg 
integers third set inequalities strengthenings valid tree version insisting flows recourse arcs tk node non increasing crucial obtaining result 
polynomial size linear relaxation solved optimally polynomial time 
denote optimal solution linear program op value 
theorem describes rounding algorithm 
theorem fractional solution rounded polynomial time integer solution cost log log op tt ree proof destination tk rk cost incurred recourse component fractional path tk 
sk set nodes distance tk metric idea incur factor pay path tk node sk charging need stage tree reaches node sk 
construct sets sk scenario create instance group steiner tree problem metric markov inequality shown sk sk sk xe fractional solution linear relaxation ip formulation group steiner tree problem min xe sk result garg ravi construct integer solution cost log log op tree includes vertex sk 
scenario augment tree include tk cost approximation ratio follows 
bin packing problem definition algorithm stochastic bin packing motivated applications storage capacity reserved advance arrival objects reserved capacity insufficient purchase additional capacity possibly higher costs 
formally bin capacity known advance 
set possible scenarios scenario specified probability pk occurrence set sk objects size bin cost fk 
feasible solution specified number bins purchased stage unit cost bin 
scenario materializes objects sk need packed bins capacity may necessitate purchase additional number bins cost fk bin 
objective compute minimize expected total cost 
denote integer nearest denote approximation ratio best approximation algorithm bin packing problem 
locally optimal algorithm fit example achieves 
asymptotic ptas fernandez de la vega lueker uses op bins 
theorem shows extend bin packing algorithm handle stochastic bin packing 
theorem order scenarios integer 
sk 
sm largest asymptotic approximate solution 
proof consider fractional relaxation problem pack items fractionally bins 
case sk optimal solution point expected marginal cost buying additional bin recourse goes 
expected total cost purchase bins ski lower bound value optimal solution stochastic bin packing 
ski bins asymptotically sufficient pack objects sk need purchase ski additional bins scenario materializes 
scenario realized bins sufficient additional bins needed 
expected cost solution ski asymptotically times lower bound 
facility location definition classical uncapacitated facility location problem set facilities set clients metric cij specifying distances client facility 
demand client known stage 
scenario client demand dk may zero 
facility stage opening cost recourse costs scenario may infinity reflecting unavailability facilities various scenarios 
abbreviate problem sfl 
min fiy pk ij ij ij yk non negative integers problem best explained integer program formulation 
algorithms extend arbitrary demands client simplicity study case dk 
variable ij client served facility scenario xk ij opened stage recourse scenario yk facility 
history non triviality problem classical deterministic uncapacitated facility location problem rich history see nemhauser wolsey survey 
introduced integer programming formulation problem led approximation algorithms 
constant factor approximation formulation due shmoys tardos current best algorithm due ye zhang uses formulation differs slightly 
formulation extends formulation stochastic setting 
stochastic optimization community peeters considered slightly different version stochastic facility location provided dual ascent exact non polynomial time algorithm 
preliminary insights obtain examining formulation stochastic facility location closely 
notice second stage facility costs identical stage scenarios de couple stochastic components problem solve scenario independently 
hand second stage facilities opened stage sfl reduces instance usual ufl probability multipliers expected service costs incorporated demand terms thinking demands scaled probability occurrence 
extends allowing arbitrary demand distributions vertices independent 
case existing approximations ufl apply directly 
added difficulty interesting aspect model arises varying typically increased second stage facility costs different scenarios 
direction sfl viewed special case multicommodity facility location problem treat scenario distinct commodity cost facility depends commodities serves 
best known approximation ratio log due ravi sinha number scenarios need different techniques better approximations sfl 
main difficulty stems fact treat scenario different scenarios interact utilizing stage facilities 
simple heuristic compare solution obtained demand satisfied stage solution stage facilities opened 
heuristic works certain instances particularly maximization problems maximum weight matchings kong schaefer easily shown perform badly case due interaction scenarios 
algorithm approximation algorithm proceeds lines lp rounding algorithm due shmoys tardos crucial differences 
solving linear relaxation denote optimal lp solution 
step rounding fractional solution filtering technique lin vitter 
fix constant 
client scenario pair define optimal fractional service cost jk ij order facilities serve pair non decreasing distance point gj client scenario pair smallest distance jk cij jk ij 
theorem feasible fractional solution find fractional solution feasible lp relaxation polynomial time jk jk 
iii yk min yk proof jk jk ii xk ij cij 
jk get contradiction application markov inequality jk jk jk proving 
define follows satisfies ii definition min xij cij ij jk furthermore define maxj ij 
definition follows min yk satisfying iii 
definitions ensure feasible solution lp relaxation algorithm shmoys tardos proceeds iteratively round ij jk variables smallest 
case rounding algorithm close facilities needed scenarios need rounding algorithm carefully treats distinction stage facility variables recourse facility variables proceed earlier algorithms obtaining optimal lp solution step progres choose clients scenarios minimum fractional service cost neglect serve clients conflicting overlapping facility utilization assigning served client serving facility 
serving facility open neglected client scenario 
main difference stage facility opened serve client clients conflict served stage facility variable rounded serve client clients scenario conflict client neglected assigned client 
strategy suffices pay opened facilities disjointness different scenarios contributions objective function rule considering clients increasing order fractional service cost allows bound service cost 
rounding algorithm described detail 
fixed constant 

initialize set facilities opened scenario 
mark client scenario pairs 

client scenario pair smallest jk consider cases case marking served proceeding client scenario pair 
set facilities ij set facilities ij 
facility smallest facilities move facility set set 
facilities sk set yk 
client scenario pairs exists facility sk ci set ij mark served 
cij jk 
case facility sk smallest move facility set set 
facilities sk set 
clients exists facility sk ci set xk ij mark served 

facilities facilities opened stage facilities facilities opened recourse scenario materializes 
clients served zero variables ij lemma rounding algorithm produces integer solution feasible client scenario pair ij cij jk 
ii 
iii yk yk 
proof client assigned facility ij set assign facility distance jk assigned client jk considered 
case simple application triangle inequality yields cij jk facility chosen opening stage set case occurred 
case sufficiently large fraction facilities shutting charge cost opening fractional solution 
similar argument holds case facility opened recourse scenario solution produced feasible start feasible solution step maintain feasibility ensuring client scenario pair marked served ij variable set assigned facility facility theorem polynomial time approximation algorithm performance ratio sfl 
proof setting theorem lemma yields performance guarantee 
running time algorithm polynomial extensions algorithm easily extends allowing demands client scenario pairs non negative real numbers just 
may allow costs transport unit demand unit length different scenarios different motivated different scenarios having different prices gas 
words scenario multiplier distance scenario 
essentially incorporated demand variables dk rest algorithm proceeds give identical results 
vertex cover problem definition stage undirected graph 
usual possible scenarios consisting probability occurrence pk set edges ek may necessarily subsets stage edge set 
stage cost vertex cost scenario objective identify set vertices selected stage expected cost extending set vertex cover edges realized second stage scenario minimized 
problem defined edges ek covered second stage points chosen stage 
generalization case stage vertices cover second stage edges incident 
provide approximation generalized stochastic vertex cover problem 
best known approximation algorithm deterministic version vertex cover performance ratio log log log due monien 
lower bound hardness approximating problem shown astad 
approximation ratio generalized stochastic version vertex cover asymptotically matches best known approximation deterministic version 
integer program formulation algorithm primal dual algorithm rounds natural ip formulation stochastic vertex cover 
variable indicates vertex purchased scenario usual denotes stage 
edges ek may covered second stage edges ek covered second stage 
min pkc uv ek uv ek non neg 
integers dual program dual linear relaxation shown 
variable packs edge ek ek packs ek 
max ek ek uv pkc algorithm algorithm greedy dual ascent type primal dual algorithm phases 
phase raise dual variables uniformly edges separately vertices tight dual constraint packed pkc set deleted adjacent edges 
proceed way edges covered deleted 
phase ii greedy dual ascent uncovered edges ek 
edges contained ek 
time slightly different rule purchasing vertices 
vertex tight second dual constraint packed select stage solution setting tight tight packed dual constraint select recourse solution set 
theorem integer program rounded primal dual algorithm described factor polynomial time 
proof analyze performance algorithm described 
consider edge uv scenario definition algorithm selected points phase phase ii algorithm yields feasible solution 
linear programming duality bound cost solution showing cost solution dual solution constructed algorithm 
yk uv show performance ratio algorithm follows 
time set variable assign dual variables sum dual variables assigned variable equals pkc ii dual variable assigned twice 
consider vertex selected set scenario phase phase ii 
assign dual variables point vertex selected constraint ek yk pkc goes tight maintain 
edge ek assigned vertex set edge points ensure ii edges ek 
consider vertex set 
happen constraint ek yk gone tight edges sum assigned variable assignment ensures 
assignment includes edges ek edges assigned variable ensuring ii edges ek 
cases cover possibilities proving theorem 
set cover problem definition input stochastic set cover problem consists universe elements collection subsets set stage cost cost ck scenario infinity reflecting unavailability set certain scenarios 
element demand vector du th component required cover scenario 
feasible solution specified collection stage cost scenario realized extended purchasing sets sk cover elements dk 
cost recourse solution sk cks incur probability pk 
objective solution minimizes sum stage expected second stage costs 
reduction classical set cover deterministic version set cover earliest np hard problems approximated log approximation provided johnson 
problem shown np hard approximate better factor log arora sudan 
instance deterministic set cover define instance stochastic set cover creating distinct scenario element setting second stage set costs infinity 
implies inapproximability threshold log stochastic set cover 
show instance stochastic set cover elements transformed instance deterministic set cover elements 
means exists log nm log log approximation stochastic set cover transformation applying approximation algorithm deterministic set cover 
approximation ratio matches inapproximability ratio upto constants 
reduction theorem allows extend model generalization approximation guarantee holds scenario set sk covers subset elements stage set covers 
theorem stochastic set cover problem equivalent classical set cover problem mn elements sets 
proof associate element uk element scenario pair 
create copies set set contains elements uk 
set contains uk cost sk pkc construction solution stochastic set cover instance yields solution transformed deterministic instance vice versa 
proves equivalence 
directions research remains done classical combinatorial optimization problems algorithms stage stochastic model known 
direction research develop approximation algorithms complex models tic optimization extension stage model multiple stages allows detailed modeling variant uncertainty modeled continuous distribution considered 
hope models provide rich setting application optimization practice 
acknowledgments gratefully andrew schaefer nan kong university pittsburgh introducing topic research kong schaefer 
arora sudan 
improved low degree testing applications 
proceedings th annual acm symposium theory computing 
ausiello crescenzi kann marchetti spaccamela 
com plexity approximation combinatorial optimization problems approximability properties springer berlin germany 

finding integer solutions linear programs 
proc 
ibm scientific computing symposium combinatorial problems 
birge 
stochastic programming springer berlin 
borodin el yaniv 
online computation competitive analysis cambridge 

chen 
stochastic approximation application kluwer dordrecht 
coffman jr garey johnson 
approximation algorithms bin packing survey 
hochbaum approximation algorithms np hard problems pws boston 
nemhauser wolsey 
uncapacitated facility location problem 
mir francis eds discrete location theory wiley new york 
dijkstra 
note problems connexion graphs 
numerische mathematik 
fernandez de la vega lueker 
bin packing solved linear time 
combinatorica 
garg ravi 
polylogarithmic approximation algorithm group steiner tree problem 
journal algorithms 
guha khuller 
greedy strikes back improved facility location algorithms 
proceedings th acm siam symposium discrete algorithms 
gupta kleinberg kumar rastogi 
provisioning virtual private network network design problem multicommodity flow 
proceedings rd annual acm symposium theory computing 
halperin 
polylogarithmic inapproximability 
proceedings rd annual acm symposium theory computing 
astad 
optimal inapproximability results 
proceedings th annual acm symposium theory computing 

scenario reduction algorithms stochastic programming 
computational optimization applications 
johnson 
approximation algorithms combinatorial problems 
journal computer system sciences 
wallace 
stochastic programming wiley chichester england 

speed powerful 
journal acm 
karger 
building steiner trees incomplete global knowledge 
proceedings st annual ieee symposium foundations computer science 
klein van der 
stochastic programming dept econometrics university groningen netherlands 
kong schaefer 
factor approximation algorithm class stage stochastic mixed integer programs 
manuscript submitted informs journal computing 
kumar 
primal dual algorithms connected facility location problems 
approx imation algorithms combinatorial optimization 

lin vitter 
approximations minimum packing constraint violation 
proceedings th annual acm symposium theory computing 
peeters 
dual procedure stochastic facility location 
operations re search 
ye zhang 
approximation algorithm uncapacitated facility location problem 
approximation algorithms combinatorial optimization 
schulz 
approximation stochastic scheduling power lp priority policies 
journal acm 
monien 
ramsey numbers approximation algorithm vertex cover problem 
acta informatica 
nisan ronen 
algorithmic mechanism design 
proceedings st annual acm sym theory computing 
papadimitriou yannakakis 
optimization approximation complexity classes 
journal computer systems sciences 
ravi :10.1.1.19.4863
approximation algorithms traveling purchaser problem variants network design 
european symposium algorithms 
ravi sinha 
multicommodity facility location 
working carnegie mellon university pittsburgh 
schultz van der 
stage stochastic integer programming survey 
statist 

shmoys tardos 
approximation algorithms facility location problems 
proceedings th acm symposium theory computing 

scheduling precedence constrained jobs stochastic processing times parallel machines 
proceedings th annual acm siam symposium discrete algorithms 

design analysis algorithms stochastic integer programming 
cwi tract vol 
cwi amsterdam 
vazirani 
approximation algorithms springer berlin germany 

