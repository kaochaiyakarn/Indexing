scientific workflow management database management ailamaki yannis ioannidis miron livny department computer sciences university wisconsin madison wi yannis miron cs wisc edu working environments production involves repeated executions certain procedures 
workflow describes individual tasks performed procedures interrelationships 
current workflow management systems wfmss database management system dbms store task descriptions implement workflow functionality modules run top dbms 
motivated scientific workflows propose dbms centric architecture conventional database technology provides desired scientific wfms functionality 
key element approach viewing workflow web data objects interconnected active links carry process descriptions 
workflow fully defined database schema execution gradual buildup instance schema active object links 
modeling querying tools horse object oriented dbms developed context desktop experiment management environment 

procedures working environments repeated 
insurance time claim filed standard procedure followed supported part national science foundation iri scientific databases initiative iri dbi 
martha anderson invaluable help workflow dimitris georgakopoulos panagos providing insights workflows earlier andy implementing external condor application various workflows 
additionally supported part national science foundation iri pyi award dec ibm hp oracle informix 
author address department informatics university athens greece 
evaluation car rental agency sequence steps followed customer asks car laboratories scientific experiment executed fresh input data available 
procedures usually consist set smaller tasks represent self contained units naturally dependent 
set tasks involved procedure interdependencies inputs outputs called workflow 
workflow management systems wfmss define execute monitor workflows 
input output workflow 
transactional view workflows 
workflow input output task task task task task 
object view workflows 
typical conceptualization workflows focal point action processes take place workflow execution 
workflows considered transactions information manipulate playing subordinate role side effect speak 
transactional view workflows leads imposes architecture depicted followed majority existing wfmss commercial systems research prototypes 
dedicated software system runs top data base management system dbms process management separate data management 
dbms simply stores information workflow tasks software layer uses information conduct workflow execution 
process management data management special purpose tools workflow specific software dbms optional process data management 
wfms architectures special purpose tools dbms motivated primarily scientific applications propose different conceptualization workflows focal point information data generated workflow execution 
workflows considered graphs objects processes created expressed links 
object view workflows suggests architecture depicted 
provided data model express active workflow aspects dbms workflow execution class wfms 
essentially build case object view scientific workflows 
demonstrate dbms wfms offering needed functionality respect process management additional software 
show critical functionality missing conventional dbmss easily provided minimal natural extensions remain faithful philosophy database technology 
providing needed process management dbms reap benefits reduced implementation effort needed workflow functionality need implementing special purpose workflow tools 
increased optimization opportunity entire op eration workflow controlled dbms proper optimizer global knowledge database interactions 
uniformity workflow management speci fication execution monitoring workflow functionality exported user uni fied access language 
immediate information availability drill requests result aspects workflow generated direct database queries 
proof concept object view describe workflows captured horse objectoriented dbms built part zoo desktop experiment management environment key characteristics approach workflow defined object oriented database schema instance workflow schema created execution invocation workflow processes captured triggered active rules restricted form external applications implementing workflow pro cesses scheduled updates system catalogs status kinds information run ning finished workflow processes obtained database queries information workflow data obtained database queries rest organized follows 
section provide example workflow 
section discuss functionality required wfms support scientific workflows 
section briefly describe moose data model fox data definition query language horse 
section discuss horse achieves desired functionality wfms 
section workflows operated scientific laboratories applying tools workflow management section discuss related 
section summary contributions plans 

workflow example example depicted actual scientific workflow captures operation experimental study soil sciences department univ wisconsin 
objective experiment produce daily forecasts near surface temperatures wisconsin 
forecasts give farmers advance warning night frost conditions take action protect frost damage 

noon day satellite ground meteorological observations processed atmospheric sciences department uw generating hour weather forecast heights atmosphere united states 
forecast fed bog forecast extraction program extracts forecasts points meters specified bog locations main interest emphasis scientific workflows results apply equally business workflows 
case wisconsin 
satellite observations ground observations forecast generation forecast model combine inputs forecast bog forecast extraction bog forecast bog forecast upd 
statistical analysis visualization forecast 
workflow gif graphs temp vs time obs level forecast choose inputs 
forecasts sent soil science department processed derive forecast level canopy level 
day new weather observations available initial bog forecast updated scaled output forecasts compared new observed weather conditions package statistical routines 
appropriate corrections original bog forecast determined rerun 
feedback mechanism canopy level forecast updated continuously day 

text files generated fed de vise visualization tool generate gif plots canopy temperature vs time 
plots published web readily accessed farmers wisconsin 
sequel refer example workflow 


basic wfms functionality section attempt closer look workflows analyze basic functionality wfms definitely provide workflow specification workflow execution workflow evolution workflow auditing functionality necessary types applications sufficient arise single user read environments 
scientific laboratories physical virtual tend belong categories general main motivation discussion focuses exclusively functionality 
clearly multi user dynamic environments business sector additional workflow functionality necessary including transaction management workflow recovery workflow interaction cooperative 
believe object view workflows benefits support additional functionality demonstrating remains part 

workflow specification specification workflow consists items process includes workflow tasks related 
flexibility allow various forms task interrelationships 
tasks operating series parallel 
tasks receiving input providing possibly distinct input multiple tasks 
tasks choosing receive input possible tasks provide 
tasks receiving input directly indirectly feedback 
tasks abstracted grouped higherlevel tasks simple workflow see need 
example task statistics package accepts multiple inputs task chooses input task statistics package generates bog forecast extraction generates part indirectly affected produces forecast generation abstracts sequence tasks detailed steps unimportant 
data includes input output data workflow tasks 
invocation includes mechanism rule triggers execution task 
main choices explicit invocation human initiates task implicit invocation task begins immediately creation input long specified conditions satisfied 
example workflow may choose tasks associated implicit invocation depending automation desired 
currently entire process completely automated 

workflow execution execution workflow involves dealing main elements specification follows process typically involves execution applica tions outside wfms 
example task workflow executed external surface energy budget program 
wfms follow logic workflow point interact appropriate external system transfer control execution needed 
data may need translation execution 
instance wfms able translate bog forecast data wfms internal format input format canopy level forecast data output format back wfms internal format 
invocation may automatic depending specification 
completely automated workflow users retain ultimate control execution monitoring influencing operation status monitoring point users may ask execution status entire workflow parts 
status information may provided wfms external system workflow 
information obey universal format important users deciding intervene execution 
example status workflow may reveal incoming weather observations garbled lead temporary deactivation feedback loop statistical analysis task earlier bog forecast input task 
vcr functionality user intervention execution workflow reminiscent functionality vcr user execution pause execution soon rewind execution certain point 

workflow evolution changes workflow may day routine working environment 
changes types modification new workflow objective different logic replaces old 
versioning new workflow re place old exists 
extension new workflow different objective additional logic replaces old 
addition environments require dynamic static workflow evolution changing part workflow part running 

workflow auditing workflow executions related pieces kinds information including original input final output data results intermediate tasks interim final status wfms relevant external systems 
users constantly auditing workflows accessing exploring information analyzing workflow results obtaining reports efficiency validating process models scientific workflows primary time science done 

moose data model fox query language vehicle demonstrate power approach horse object oriented dbms developing part zoo desktop experiment management environment horse objectoriented data model query language 
understanding rest requires familiarity moose fox important features described 
details 

moose various kinds object classes tuple collection primitive 
objects classes connected binary relationships relevant 
structure tuple class defined arbitrary number part relationships pointing single object 
association relationships connect individual objects classes kind 
relationship classes usual meaning 
relationships bidirectional traversed direction 
relationship classes may specified derived 
case object related object constructed identified objects indirectly connected object relationships similarly cases 
construction identification rule may command returns object 
includes exec command invokes external system case receives input file containing parts objects 
semantics derivation rule class class invoked time object inserted object produces placed modeling objects scientific environments finding objects experiments object value corresponding relationship vice versa 
derivation rules restricted form triggers sense event trigger rule insertion specific class 
data definition language moose provides statements create destroy rename classes relationships associate rules relationships deactivate rules temporarily modifying schema rule exist back 
rule deactivation holds current user session affect users schema 

fox fox declarative query data manipulation language 
may refer object command unique object id assigned system name optionally assigned user universal keyword cases object uniquely identified context command nested 
addition may specify object variable query bind members class extent collections defined path expression 
path expressions fox navigate interrelated classes 
path expression starts known object specification constant bound variable follows relationships object 
basic structure query derived directly sql range binding list projection list select qualification name clause optional defines set objects object variables constants 
select clause defines projections sql path expressions 
clause optional involves condition defines selection results 
clause optional specifies name query results 
data modification statements insert delete update load exec 
middle described load bulk insertion data file generally multiple classes 
insert command generates new objects class values relationships specified directly list result fox query sql 
exec command schedules execution program agent external 
arguments name program list path expressions form program input 
examples commands sections context describing workflows captured 

database way workflow functionality section describe capture moose fox horse aspects wfms functionality earlier section workflow specification execution evolution auditing 

workflow specification important characteristics approach workflows directly represented database schemas 
offers tremendous flexibility aspects desired functionality fall free 
essence workflow schema mapping follows tasks input data output data represented classes task interconnections represented ordinary moose relationships task invocation expressed assigning rules appropriate relationships 
details mapping respect workflow data process invocation separately 
simple task data workflow task process operates input produces output 
depending aspects task wants capture different schemas 
input output data represented moose classes straightforward way 
cases process interest store information duration execution 
corresponding task represented schema moose class connected part relationships corresponding input output classes 
cases task presents interest appear generated schema 
corresponding input output classes connected association relationship 
row row shows single task associated data schema represent cases discussed process interest 
case similar explicit task class missing input output classes connected association 
holds remaining rows workflows left column corresponding schema captures workflow tasks second column shown 
sequel workflows schemas row referred 
action produces task output specified derivation rule associated appropriate relationship output class 
part relationship connected task class association connected input class 
indicated input class label appropriate relationship workflow specification part moose relationships notation associated moose schema relationship value derived rule task execution rules shown 
task interconnections model close output class 
assume task implemented external application input 
corresponding rule exec task invoked system send appropriate object possibly parts external application generate output 
task interrelationships concentrates set atomic workflows workflows simplest form capture possible task interrelationships 
shows natural consistent way represent workflow moose schema forced designer 
combining appropriate schemas shown construct represent ar complex workflows workflow 
workflow tasks operating series similarly tasks tasks operating parallel 
corresponding schema straightforward associated schema workflow needs explanation 
workflow task receiving multiple inputs providing multiple outputs 
basic schema enhanced auxiliary classes act input output respectively 
workflow task receiving alternative inputs uses time 
assuming general case inputs different type modeled inheritance making classes capturing input types subclasses auxiliary general input class alternative inputs type inheritance necessary 
workflow task receiving input indirectly 
schema corresponding feedback cycle direct derivatives corresponding single task schema 
simplicity assumed output task type input inheritance appear schema 
workflow simple workflow series task followed task abstracted grouped higher level task simply modeled connecting classes input entire series output explicit task class shown individual task classes input output classes parts direct association 
schema shown derived relationships rules essentially retrieve path expressions respectively 
rules indicated bring rules capture task execution 
exposition clear workflows arbitrary complexity captured ordinary moose schemas special constructs effortlessly 
example workflows require constructs captured parallel tasks 
condition expressed qualification derivation rule task complementary condition qualification derivation rule task 
likewise workflows require programming constructs captured loops workflow schema 
desired condition construct expressed qualification corresponding derivation rule initiates loop rule inserts object task 
long condition satisfied rule fires loop continues time condition satisfied loop stops 
desired information workflow executions uniformly centrally captured schema including data manipulated details execution exact steps followed workflow mechanism invoke schema formal document describing aspect workflow 
workflow history afforded greatest benefits approach implementation workflow management inside dbms attractive 
invocation consider simple example 
corresponding schema semantics derivation rules section task invoked soon object inserted class triggering rule relationship class class additional rule relationship class class form insert instance captures implicit invocation task 
soon object inserted rule inserts object turn fires task 
hand absence relationship derived captures explicit invocation task 
task execution begins human application program explicitly inserts object connects appropriate object 
clearly generalized arbitrary schemas decision implicit explicit invocation independently task defining appropriate derivation rules 
ease capturing behavior purely database means clear 
example entire methodology described shows schema workflow 
simplicity show actual rules invocation mechanism simply indicate existence rules names labels capture task execution 
note tasks forecast model captured explicit classes due importance remaining ones workflow designer soil sciences department expressed interest incorporating schema information execution 

workflow execution schema captures workflow described executing trivial reduces simple database insertions rules rest 
soon objects initial workflow inputs inserted appropriate classes execution starts immediately tasks associated implicit invocation human inserts task objects appropriate classes associated explicit invocation 
continues workflow execution explicit implicit insertions causing task firing 
workflow monitoring accomplished fox queries featuring novel path expression connector 
particular traditional connector indicates moving relationships specific kind retrieved object related 
presence derived rules relationships may construction 
querying execution status construction task essentially querying status corresponding derived relationship 
take advantage mapping tasks relationships introduce novel connector appropriate path expressions 
informally new connector indicates retrieval status information generated external system processing corresponding task 
information stored object possibly independent database created individual system purpose schema necessarily known workflow user 
connector indicates normal traversal object relationships constructed connectors path expression may correctly interpreted 
connector placed relationships derived involve external execution equivalent connector 
example consider workflow schema 
assume interested status forecast model execution rule initiated weather data added object weather observations 
assume object named 
obtaining status information interest simply achieved query select result object status schema maintained executions forecast model task happens 
likewise interested status entire workflow initiated excluding visualizations feedback appropriate query select 
note query contains connector relationships derived workflow tasks regular connector 
result includes zero objects depending corresponding tasks initiated 
example query posed bog forecast extraction running rule objects retrieved final status object execution forecast model rule current status object bog forecast ex satellite observations forecast generation weather observations forecast model ground observations fm forecast statistical input obs level forecast traction 
form vcr functionality corresponds simple database manipulation 
pause execution corresponds deactivating set derivation rules 
resume corresponds activating rules back 
rewind certain task followed resume corresponds insertion new object relevant task class input object 
overwriting old data simply set delete commands 

workflow evolution representing workflows schemas flavors workflow evolution reduce schema evolution obtained free 
workflow modification extension reduce changing schema workflow versioning reduces obtaining versions schema operations studied understood database world 
schema evolution require isolation database users portion evolved workflow execution done statically dynamically 

workflow auditing information relevant workflow executions stored database populating workflow schema accessed queries 
workflow execution workflow weather observations time vs temperature graphs 
workflow abstraction bfe sa bog forecast forecasts canopy level forecast 
schema workflow vi gif graphs temp vs time viewed web holds information produced way input output 
example assume entire workflow abstracted single task accepts set weather observations files input produces set graphs output 
graphs naturally connected objects containing execution information individual tasks happen 
single query specific output graph information connected corresponding object brought user 
addition schemas objects populating meta schema schema database information workflows obtained queries 
clearly schema representation workflow auditing fall squarely database technology 

system status customized installations past years implementing zoo system features geared supporting wfms functionality discussed section 
currently aspects specification execution auditing operational including invoking external applications status monitoring 
workflow evolution designed implementation just begun 
addition workflow currently experimental installations system soil sciences department national magnetic resonance facility madison hosted biochemistry department university wisconsin madison 
zoo installation soil sciences department runs experiment predicts watershed response rainfall sediment delivery area interest specification vegetation soil properties 
zoo installation runs experiment uses powerful spectrometer processing resulting nmr data software packages elucidates dimensional structure 
experience scientists groups various tests system encouraging 

related past years workflows favorite topic commercial research worlds 
workflow management involves broad area issues systems resulted activity considerable diversity goals approaches making difficult compare entire field 
main essentially universal difference approach existing workflow systems architecture 
independent goals primary applications workflow type common denominator systems appears dbms storage manager file system data repository top software modules implement desired workflow functionality 
contrary dbms workflow activities benefits database technology maturity obtaining desired functionality free 
similar approach taken active dbms uses database rules trigger database operations external applications 
offers complete rule system zoo includes rules needed run workflow tasks case active dbmss 
technology design workflows workflow necessities monitoring vcr functionality dynamic evolution 
state art workflow area determined commercial products goals different include cooperative task routing data sharing business environments 
probably reacting predominant lack commercial attention issues scalability reliability concurrency control recovery research efforts focused interoperability transaction management high availability business workflows interests 
characteristic fact interoperability main goal workflow management coalition standardization bureau provides generic model workflows 
general existing commercial research systems offer functionality outlined section 
critical capabilities missing systems exceptions invocation ad hoc external software dynamic execution monitoring reporting 
exist systems offer interaction specific office applications specific vendor operating system platform ability deal ad hoc systems largely offered 
likewise existing systems permit retrieval statistics workflow execution fixed predefined form collection intertwined workflow execution predetermined fashion 
ability offer users ask point status information may defined independently arbitrary external systems workflow results information related creation 
scientific workflows explicitly addressed mainly projects wasa 
goals approach efforts different 
wasa uses commercial wfms top dbms extended advanced features user interface decision support analysis tools offer useful front scientific workflow management 
wasa offers functionality described section possibly restricted capabilities underlying wfms 
dbms specialized genome laboratories database benchmark tests usability storage managers serve basis wfms development top 
systems fall scope general aware system uses dbms provide run time workflow management 
efforts scientific database area similarities aspects directly addressing workflow issues 
opm effort lbnl probably closest effort 
opm prominent genome database community implement important international genome databases 
philosophy workflows represented schemas opm data model offers kinds classes data protocols facilitate definition experimental processes 
protocol classes capture active aspects corresponding workflow tasks simply data containers indicators executions corresponding tasks 
workflow execution driven opm schemas externally resulting data stored opm 
key difference opm 
essence current opm centered tools approach workflows traditional architecture architecture able provide run time support workflows dbms 
respect data models extended entity relationship eer model enhanced features model processes active features captured schema 
respect invocations external systems computational proxies proposed interaction scientific dbms external chem ical models 
similar corresponding zoo module operates achieve goal 
differences generic translation tool reading declarative specifications translated database object structures external formats 

summary introduced object view workflows demonstrated needed workflow functionality supported dbms regular database operations need developing specialized workflow software 
key enabling element database centric approach dbms data model express active aspects workflows 
allows dbms control workflow executions provide complete run time support workflow management interacting external systems implementing workflow tasks obtaining status execution modifying workflow execution optimizing workflow tasks globally possible object oriented schema representation workflow provides integrated view workflow related information captures natural way connection workflow process data manipulates permitting important types queries analysis workflow execution 
implementation desired functionality dbms experimental installations scientific laboratories indicate object view workflows benefits serve needs environments 
main goal demonstrate object view workflows resulting dbms asa wfms architecture provide remaining workflow functionality addressed transaction management workflow recovery workflow interaction 
believe case possible success endeavor important beneficial business environments 
tasks include completion implementation respect features necessary workflows investigation additional forms derivation rules triggers potential benefits workflow management developing visual user interface suitable designing workflows level higher schema 
anderson february 
soil sciences department university wisconsin madison personal communica tion 
bonner 
database benchmark high throughput workflow management 
proc 
fifth international conference extending database technology pages avignon france march 
chen markowitz 
object protocol model design implementation scientific applications 
acm transactions information systems 

consortium 
active database management system manifesto 
sigmod record september 
maier rao abel feller de 
computational proxies modeling scientific applications object databases 
proc 
scientific statistical database management 
georgakopoulos hornick sheth 
overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases 

workflow model 
technical report tc workflow management coalition av marcel brussels belgium december 
ioannidis livny gupta 
zoo desktop experiment management environment 
proc 
nd international vldb conference pages bombay india september 
livny devise integrated querying visualization large datasets 
proc 
acm sigmod international conference management data pages tus con az may 
markowitz 
representing processes extended entity relationship model 
proc 
ieee international conference data engineering 
mccarthy dayal 
architecture active data base management system 
acm sigmod interna tional conference management data pages portland oregon june 
medeiros vossen weske 
wasa workflow architecture support scientific database applications extended 
tjoa editors proc 
th dexa conference pages london england 
springer lncs 
vossen weske 
workflow management dna sequencing 
proc 
st international conference cooperative information systems ifcis pages brussels belgium june 
wiener ioannidis 
moose fox aid sci data management problems 
proc 
th international workshop database programming languages pages new york ny august 
