hierarchical identity encryption constant size ciphertext 
dan boneh xavier boyen eu jin goh computer science department stanford university cs stanford edu voltage palo alto xb boyen org appear cramer ed advances cryptology eurocrypt lecture notes computer science springer verlag 

available online www cs stanford edu xb eurocrypt 
hierarchical identity encryption hibe system ciphertext consists just group elements decryption requires bilinear map computations regardless hierarchy depth 
encryption efficient hibe systems 
prove scheme selective id secure standard model fully secure random oracle model 
system number applications gives efficient forward secure public key identity cryptosystems short ciphertexts converts nnl broadcast encryption system efficient public key broadcast system provides efficient mechanism encrypting 
system supports limited delegation users restricted private keys allow delegation bounded depth 
hibe system modified support sublinear size private keys cost ciphertext expansion 
identity encryption ibe system public key system public key arbitrary string email address 
central authority uses master key issue private keys identities request hierarchical ibe hibe generalization ibe mirrors organizational hierarchy 
identity level hierarchy tree keys descendant identities decrypt messages intended identities details section 
construction due silverberg security bilinear diffie hellman bdh assumption random oracle model 
due boneh boyen gives efficient selective id secure hibe bdh random oracles 
constructions ciphertexts private keys time needed decryption encryption grows linearly depth hierarchy 
extended 
full version available cryptology eprint archives 
supported nsf 
currently principal applications hibe 
due halevi katz forward secure encryption 
forward secure encryption enables users periodically update private keys period read private key period provide time periods chk construction uses hibe depth identities binary vectors length time tor encrypts identity corresponding th node depth tree 
consequently previous hibe systems ciphertexts forward secure construction size private keys size reduced size updateable public storage 
hibe due dodis hibe convert nnl broadcast encryption system public key broadcast system 
un fortunately resulting public key broadcast system better simpler constructions ciphertext length previous hibe constructions depth hierarchy 
contribution 
hibe system ciphertext size aswell decryption cost independent hierarchy depth 
hibe system just group elements decryption requires bilinear map computations 
private keys basic system contain group elements previous hibe constructions 
system gives forward secure encryption system short group elements number time periods basic hibe system private key size forward secure encryption system 
section describe hybrid system features boneh boyen hibe results forward secure encryption scheme private key size reduced pt 
updateable public storage chk private systems reduced size pt respectively addition instantiating dodis system hibe system results public key broadcast system efficient nnl method 
worth noting private keys system shrink identity shrinkage opposite behavior previous hibe systems private keys larger descend deeper hierarchy tree behavior leads limited delegation identity depth restricted private key lets issue private keys descendants limited depth opposed descendant 
security system natural assumption closely diffie hellman inversion assumption 
describe assumption section 
full prove lower bound computa tional complexity problem generic group model discuss relation existing assumptions bilinear groups 
section prove security selective identity model random oracles 
observe selective id secure hibe results secure hibe random oracle model 
sections discuss extensions applications system 
example addition mentioned show private keys compressed sublinear size describe efficient mechanism 
preliminaries briefly review definition hibe bilinear groups introduce diffie hellman exponent assumption groups 
fully secure hibe systems identity encryption ibe system hierarchical identity hibe system consists algorithms setup keygen encrypt decrypt 
hibe identities vectors vector dimen sion represents identity depth setup algorithm generates denoted params master key master key 
refer master key private key depth note ibe system identities depth 
algorithm keygen takes input identity id 
ik depth private key parent identity id 
ik depth outputs private key id encryption algorithm encrypts messages identity decryption algorithm decrypts ciphertexts private key 
chosen ciphertext security hibe systems defined chosen iden attack adversary allowed adaptively chose public key challenged 
precisely hibe security ind id cca isdefined game adversary challenger setup challenger runs setup algorithm gives parameters params keeping master key 
phase adaptively issues queries 
qm query qi private key query 
responds running algorithm keygen private key di corresponding public key sends di decryption query idi cii 
responds running algorithm keygen gen erate private key corresponding idi 
runs algorithm decrypt ciphertext ci private key sends challenge decides phase outputs identity id equal length plaintexts wishes challenged restriction previously issue private key query id prefix id 
picks random bit sets ct encrypt params id mb sent phase issues additional queries qm 
qn qi private key query idi id idi prefix id decryption query cii hci id prefix id 
cases responds phase 
queries may adaptive 
guess adversary outputs guess wins 
refer adversary ind id cca adversary 
define adversary attacking scheme adve pr probability random bits challenger adversary 
canetti halevi katz define weaker notion security adversary commits ahead time public key attack 
refer notion selective identity chosen ciphertext secure hibe ind 
game exactly ind id cca discloses challenger target identity id setup phase restrictions private key queries phase hold phase 
definition 
say hibe system qid qc ffl secure time ind id cca respectively ind sid cca adversary qid chosen private key queries qc chosen decryption queries adv ffl 
shorthand say qid qc ffl ind id cca resp 
ind sid cca secure 
semantic security 
usual define chosen plaintext security preceding game adversary allowed issue decryption queries 
adversary may issue adaptive private 
security notion termed ind id cpa ind sid cpa selective identity adversary 
definition 
say hibe system qid ffl ind id cpa secure resp 
ind sid cpa qid ffl ind id cca secure resp 
ind sid cca 
bilinear groups briefly review bilinear maps bilinear map groups 

multiplicative cyclic groups prime order 
generator 
bilinear map 
groups 
bilinear map map properties 
ua vb ab 
non degeneracy 
say bilinear group group action exists group efficiently computable 
bilinear diffie hellman exponent bdhe assumption bdhe problem follows ff 

input output ff 
ff missing list powers bilinear map help computing ff 
shorthand ff algorithm advantage ffl solving bdhe pr ha gamma 

delta ff ffl probability random choice generators choice ff zp random bits decisional ver sion bdhe problem defined usual manner 
ff 


algorithm outputs advan tage ffl solving decision bdhe pr hb gamma ff ff delta pr hb gamma ff delta ffl probability random choice generators choice ff zp random choice random refer distribution left bdhe right bdhe 
definition 
say decision ffl bdhe assumption holds gif time algorithm advantage ffl solving decision conciseness occasionally drop ffl simply refer deci sion bdhe full version show assumptions including bdhe assumption hold generic discuss relation assumptions 
show bdhe natural extension bilinear diffie hellman previously various constructions 
hibe system constant size ciphertext bilinear group prime order map 
assume public keys identities id vectors elements write id 
ik th component corresponds identity level extend public keys hashing component ij collision resistant hash assume encrypted elements 
hibe system works follows setup generate system parameters hibe maximum depth select random generator random ff zp set gff 
pick random elements 
public parameters params 
master key gff keygen id generate private key identity id 
ik depth pick random zp output gamma hi delta gr 
hr 
note shorter depth id increases 
private key generated just private key id 
ik required 
gamma hi hik delta gr hr 
hr bk 
private key id 
generate pick random zp output ia gamma hi delta gt bk htk 
ht private key properly distributed private key id 
ik zp 
encrypt params id encrypt message public key id 
ik pick random zp output ct gs gamma hi delta sj 
decrypt ct consider identity id 
ik 
decrypt ci ct private key bk 
output valid ciphertext hi sj igs gff hi rj sff observe identities depth ciphertext contains ele ments decryption takes pairings 
previous hibe systems ciphertext size decryption time grow linearly identity depth 
note encryption precomputed substituted parameters encryption require pairings 
security show hibe scheme selective identity secure ind sid cpa decisional bilinear diffie hellman exponent assumption 
describe provide chosen ciphertext security ind sid cca security ind id cca 
theorem 
bilinear group prime order suppose decision ffl bdhe assumption holds previously defined qs ffl selective identity chosen plaintext ind sid cpa secure qs theta qs maximum time proof 
suppose advantage ffl attacking hibe system 
algorithm solves decision bdhe problem generator ff zp yi ff algorithm input random tuple 

sampled ff bdhe uniform 
algorithm goal output input tuple bdhe 
algorithm works interacting witha selective identity game follows initialization 
selective identity game begins outputting id 
depth intends attack 
pads id zeroes right id vector 
assume id vector length 
setup 
generate system parameters algorithm picks random fl sets gff ff 
picks random fl 
fl zp sets hi 
algorithm picks random ffi zp sets yi gives system parameters params 
observe values distributed uniformly independently required 
master key corresponding system parameters gff gff ff fl unknown 
phase 
issues qs private key queries 
consider query corresponding id 
iu 
id id prefix id 
restriction ensures 
ik id prefix id respond query algorithm derives private key identity 
ik constructs private key requested identity id 
ik 
iu generate private key identity 
ik picks random zp 
pose ff ik zp 
generates private gff hi gr 
hr properly distributed private key identity 
ik 
compute elements private key values disposal 
fact ff yi generate component private key observe hi ii ik yi 

denote product second fourth terms 
ii yi 
verify compute terms values disposal 
observe third term eq yr ik yr ik ik ik ffk ik ik 
component private key equal gff hi ik ik cancels terms expression known compute private key component 
second component gr ik compute 
similarly remaining elements 
hr computed term 
derive valid private key 
ik algorithm uses private key derive private key descendant identity id gives result 
challenge 
decides phase outputs messages wishes challenged 
algorithm picks responds challenge ciphertext ct mb hfl hffi fli input tuple note gc forsome unknown zp hffi fli yi 
hi hi ff hfl gamma delta ff input tuple sampled challenge ciphertext valid encryption mb original identity id 
chosen adversary ct gamma mb gc hi hi mm hi delta gamma mb gc hi hi mm delta hand uniform independent sampled bdhe ct independent adversary view 
phase 
issues queries issued phase 
responds 
guess 
outputs guess 
algorithm concludes outputting guess follows 
outputs meaning ff 
outputs meaning random input tuple sampled bdhe ff view identical view real attack game pr ffl 
input tuple sampled uniform pr 
ff uniform zp uniform pr hb gamma ff ff delta pr hb gamma ff delta ffl ffl required 
completes proof theorem 
chosen ciphertext security 
canetti show general method ind sid cca secure hibe ind sid cpa secure hibe efficient construction boneh katz 
applying method hibe construction results ind sid cca secure hibe ciphertext length independent hierarchy height 
arbitrary identities 
extend hibe handle arbitrary identities id 
ii 
hashing ii resistant hash function key generation 
standard argument shows original hibe scheme ind sid cca secure hibe scheme full hibe security theorem shows hibe system selective id secure 
system secure adversary commits ahead time identity intends attack 
boneh boyen observed ibe selective id secure fully secure secure adversaries adaptively select identity attack long hashes 
reduction tight 
hash function bits 
assuming collision resistant reduction introduces multiplicative security loss factor standard model 
viewed random oracle reduction introduces security loss factor qh number hash 
similar observation applies hibe systems 
selective id depth 
eh hibe system identity id 
ik hashed 
ik keygen encrypt collision resistant follows eh fully secure hibe reduction introduces loss factor random oracle model eh fully secure hibe reduction introduces loss factor random oracle model public parameters size contain group elements param eters 
need specified derived oracle predetermined input string 
note construction waters fixed depth hibe give constant ciphertext hibe polynomial time reduction underlying complexity assumption 
resulting private larger size opposed system 
extensions discuss number extensions hibe system previous section 
limited delegation bk 
private key identity id note decrypt algorithm uses terms keygen remaining terms bk 
removing number bk 
identity id depth restricted private key lets issue private keys descendants bounded depth 
example private key id contains bk bk bk bk 
id issue private keys descendants descendants private keys limited 
hibe short private keys certain applications time lock encryption described sec tion better served hibe system short private keys ciphertexts 
show construct hibe system private grows sublinearly hierarchy depth 
idea construct hybrid hibe section boneh boyen hibe 
recall system private key shrinks identity depth increases system private key grows identity 
hybrid algebraic similarities systems exploits opposite behavior regard private ensure private key contains group elements 
specifically hybrid scheme achieves 

size 
ciphertext size level hierarchy depth 
corresponds hibe corresponds boneh boyen hibe 
efficient hybrids obtained 
forexample private keys ciphertexts size 
hybrid scheme 
assume bilinear group map prime order basic idea partition levels hierarchy consecutive size 
group system section 
boneh boyen hibe 
id 
ik identity depth 
represent id pair matrix filled 
ik typographic order row time starting row starting left note entries undefined 
convenience decompose indices 
row column pairs 
shorthand write follows representation id ii 
pictorially id maximum depth 
bbb 



bbb 



convention describe hybrid hibe system follows 
setup hibe maximum depth determine 
select random generator random ff zp set gff 
pick random elements 

public parameters params secret master key params 

master key gff keygen id generate private key identity id 
ik depth pick random 
rk zp output gff gamma hi hi fi delta ri 
gamma hi hi fk delta gr 
gr hr 

note factors 
ri sign contain identity terms factor rk terms 
size grows shrinks private key alternatively shorter depth id increases exceeds elements private key id generated private key id 
ik required 
decompose 
cases 
written row index know private key id form gff gamma hi hi fi delta gamma hi fk delta rk gr 


bk ck 
case generate pick random zp output ci gamma hi hi fk delta 
bk bk gr ck hr 
hr 
tuple form eq rk 

row indices differ necessarily private key id form gff gamma hi hi fi delta ri gr 

bk gk 
case generate pick random zp output gamma hi fk delta 
bk gr hr 
hr gk 
tuple conforms eq rk set encrypt params id encrypt message public key id 
ik pick random zp output ct gs gamma hi hi delta 
gamma hi hi fk delta gamma hi hi fk delta 
decrypt ct consider identity id 
ik 
ciphertext ct 
ck ck private key 
bk ck 
output bi ci note private key components ck 
decryption 
complexity 
easy see hierarchy depth private keys levels contain elements ciphertexts contain atmost elements element 
encryption decryption level key generation require operations forthe choice claimed 
note combination having se parameter option asymmetric geared reducing ciphertext private key size described section gives great flexibility achieving optimal trade fora application 
security 
prove security bdhe assumption bdhe assumption implies bdh assumption 
note security level hierarchy bdhe assumption 
theorem 
bilinear group prime order consider hybrid hibe system identity hierarchy partitioned groups size 
suppose decision ffl bdhe assumption holds hibe system qs ffl selective identity chosen plaintext ind secure arbitrary qs theta qs exponentiation proof similar theorem full 
asymmetric bilinear groups mnt curves 
desirable bilinear maps groups 
maps take advantage certain curves called mnt curves 
typically elements group tend afford representation compared elements 
property constructing short signatures 
system shrink private keys ciphertexts 
details full 
applications discuss applications compact hibe system extensions 
forward secure encryption main purpose forward secure encryption scheme guarantee messages encrypted secret key compromised remain secret 
elegant public key encryption scheme forward security canetti halevi katz chk 
number periods forward secure system 
implemented previous hibe systems chk framework results ciphertexts size private keys size 
public updateable storage canetti reduce private key size affecting ciphertext length encrypt private key time period public key store resulting ciphertext size public storage consequently hibe private key size kept private storage hibe system section chk framework obtain forward secure encryption scheme ciphertext size decryption time independent number time periods 
private keys basic system size 
alternatively hybrid hibe section inwhich set obtain forward secure encryption scheme size case ciphertext size decryption time pt canetti store private key updateable public storage order lessen private storage requirement 
applied forward secure system public storage reduce size keeping ciphertext size constant 
system private storage requirement pt cost updateable public storage case remains pt 
forward secure hibe forward secure hibe scheme proposed yao 
essentially uses hibe hierarchies manner canetti obtain forward security ability derive subordinate keys system ciphertexts size depth number time periods 
pose forward secure hibe scheme linear complexity possible 
instantiating hierarchies construction hibe gives forward secure hibe scheme ciphertexts size resolves question 
propose specific forward secure hibe construction linear size components including private keys parameters ciphertexts longer constant size construction 
construction hybrid hibe section boyen hibe described detail full 
public key nnl broadcast encryption broadcast encryption schemes introduced fiat naor tems designed efficient broadcast data dynamic group users authorized receive data 
naor naor considered broad cast encryption stateless receiver setting provided general subset cover framework broadcast encryption schemes gave framework complete subtree cs method efficient subset difference sd method 
improvements proposed suchas layered subset difference lsd stratified subset difference ssd 
symmetric key setting center secret keys broadcast users 
public key broadcast encryption system allowed broadcast selected subsets users hibe framework dodis showed translate sd lsd methods public key setting 
users sd lsd constructions previous hibe systems give ciphertexts size log better basic cs method substituting hibe system section restores full benefits sd lsd results ciphertexts size 
encrypting mont observed ibe system gives mechanism trusted server 
certain date string 
view asa public key ibe system 
day trusted server publishes private key corresponding day enables messages encrypted decrypted 
methods encrypting trusted server proposed rivest shamir wagner problem ibe mechanism days server publish bulletin board private keys key day 
amount data bulletin board greatly reduced chk forward secure encryption scheme reverse suppose chk framework set total time periods depth log 
encrypt message day chk public keyfor time period similarly day trusted server publishes chk private key corresponding time period single private key derive private keys chk time periods 
decrypt messages intended days range 
implementing encoding ciphertext hibe day needs publish single private key comprising log group elements 
hybrid hibe system section private key posted server reduced log group elements cipher texts size 
parameters better ibe bulletin board contains group elements 
open problems new hibe system ciphertexts consist decryption requires computing bilinear maps independent hierarchy depth 
encryption time efficient hibe systems 
hierarchy depth proved security bdhe assumption 
expect bdhe useful short ciphertexts 
example bdhe broadcast encryption system ciphertexts private keys short discussed applications system including efficient forward secure encryption efficient public key version nnl broadcast tion system efficient mechanism encrypting 
hibe system allows limited delegation combined boneh form hybrid hibe sublinear private key size 
note selective id proof security tight 
hand full security random oracle standard model discussed section degrades exponentially hierarchy depth 
existing hibe systems 
open problem construct hibe system security degrade exponentially hierarchy depth 
acknowledgments authors mihir bellare helpful comments 

boneh boyen 
efficient selective id identity encryption random oracles 
cachin camenisch editors proceedings eurocrypt volume lncs pages 
springer 

boneh boyen 
short signatures random oracles 
cachin camenisch editors proceedings eurocrypt volume lncs pages 
springer 

boneh boyen 
goh 
hierarchical identity encryption constant size ciphertext 
cryptology eprint archive report 

boneh boyen shacham 
short group signatures 
franklin editor proceedings crypto lncs pages 
springer 

boneh franklin 
identity encryption weil pairing 
kilian editor proceedings crypto volume lncs pages 
springer 

boneh waters 
collusion resistant broadcast encryption short ciphertexts private keys 
cryptology eprint archive report 

boneh katz 
improved efficiency cca secure cryptosystems built identity encryption 
proceedings rsa ct 

boneh lynn shacham 
short signatures weil pairing 
boyd editor proceedings asiacrypt volume lncs pages 
springer 

canetti halevi katz 
forward secure public key encryption scheme 
biham editor proceedings eurocrypt volume lncs 
springer 

canetti halevi katz 
chosen ciphertext security identity encryption 
cachin camenisch editors proceedings eurocrypt volume lncs pages 
springer 

dodis 
public key broadcast encryption stateless receivers 
feigenbaum editor proceedings digital rights management workshop volume lncs pages 
springer 

dodis 
verifiable random function short proofs keys 
proceedings workshop theory practice public key cryptography 

fiat naor 
broadcast encryption 
stinson editor proceedings crypto volume lncs pages 
springer 

silverberg 
hierarchical id cryptography 
zheng editor proceedings asiacrypt volume lncs pages 

goodrich sun tamassia 
efficient tree revocation groups low state devices 
franklin editor proceedings crypto volume lncs pages 
springer 

halevy shamir 
lsd broadcast encryption scheme 
yung editor proceedings crypto volume lncs pages 

horwitz lynn 
hierarchical identity encryption 
knudsen editor proceedings eurocrypt volume lncs pages 
springer 

joux 
round protocol tripartite diffie hellman 
editor proceedings algorithmic number theory symposium iv volume lncs pages 
springer 

sakai 
new traitor tracing 
ieice transactions fundamentals 

miyaji takano 
new explicit conditions elliptic curve traces fr reduction 
ieice trans 
fundamentals 

mont harrison sadler 
hp time vault service exploiting ibe timed release confidential information 
proceedings international world wide web conference pages 
acm 

naor naor 
revocation tracing schemes stateless receivers 
kilian editor proceedings crypto volume lncs pages 
springer 

rivest shamir wagner 
time lock puzzles timed release crypto 
technical report mit lcs tr mit laboratory computer science 

shamir 
identity cryptosystems signature schemes 
blakley chaum editors proceedings crypto volume lncs pages 
springer 

shoup 
lower bounds discrete logarithms related problems 
editor proceedings eurocrypt volume lncs pages 
springer 

waters 
efficient identity encryption random oracles 
cramer editor proceedings eurocrypt lncs 
springer 

yao dodis lysyanskaya 
id encryption complex hierarchies applications forward security broadcast encryption 
pfitzmann editor proceedings acm conference computer communications security pages 
