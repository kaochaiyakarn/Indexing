modeling tcp throughput simple model empirical validation jitendra padhye victor firoiu don towsley jim kurose cs umass edu cs umass edu towsley cs umass edu kurose cs umass edu fax department computer science university massachusetts box amherst ma usa may develop simple analytic characterization steady state throughput function loss rate round trip time bulk transfer tcp flow flow unlimited amount data send 
models model captures behavior tcp fast retransmit mechanism considered effect tcp timeout mechanism throughput 
measurements suggest behavior important modeling perspective tcp traces contained timeout events fast retransmit events 
measurements demonstrate model able accurately predict tcp throughput accurate wider range loss rates 
material supported national science foundation ncr ncr cda 
opinions findings recommendations expressed material authors necessarily reflect views national science foundation 
www cs umass edu significant amount today internet traffic including www file transfer ftp email smtp remote access telnet traffic carried tcp transport protocol 
tcp udp form core today internet transport layer 
traditionally simulation implementation measurement tools choice examining performance various aspects tcp 
efforts directed analytically characterizing throughput tcp congestion control mechanism function packet loss round trip delay 
reason interest simple quantitative characterization tcp throughput operating conditions offers possibility defining fair share tcp friendly throughput non tcp flow interacts tcp connection 
notion adopted design development multicast congestion control protocols :10.1.1.102.1697:10.1.1.102.1697
develop simple analytic characterization steady state throughput bulk transfer tcp flow flow large amount data send ftp transfers function loss rate round trip time 
model captures behavior tcp fast retransmit mechanism considered effect tcp timeout mechanism throughput 
measurements section indicate behavior important modeling perspective observe timeout events fast retransmit events tcp traces 
important difference previous ability model accurately predict throughput significantly wider range loss rates measurements measurements indicate important 
explicitly model effects small receiver side windows 
comparing model predictions number tcp measurements various internet hosts demonstrate model able accurately predict tcp throughput able wider range loss rates 
remainder organized follows 
section describe model tcp congestion control detail derive new analytic characterization tcp throughput function loss rate average round trip time 
section compare predictions model set measured tcp flows internet having endpoints sites united states europe 
section discusses assumptions underlying model number related issues detail 
section concludes 
model tcp congestion control section develop stochastic model tcp congestion control yields relatively simple analytic expression throughput saturated tcp sender flow unlimited amount data send function loss rate average round trip time rtt 
tcp protocol exhibit complex behavior especially considered context current internet traffic conditions quite complicated subtle 
focus attention congestion avoidance behavior tcp impact throughput account dependence congestion avoidance ack behavior manner packet loss inferred duplicate ack detection fast retransmit timeout limited receiver window size average round trip time rtt 
model reno flavor tcp far popular implementation internet today :10.1.1.134.20
assume reader familiar tcp reno congestion control see example adopt terminology 
model focuses tcp congestion avoidance mechanism tcp congestion control window size increased time ack received 
conversely window decreased lost packet detected amount decrease depending packet loss detected duplicate acks timeout discussed shortly 
model tcp congestion avoidance behavior terms rounds round starts backto back transmission packets current size tcp congestion window 
packets falling congestion window sent back back manner packets sent ack received packets 
ack reception marks current round round 
model duration round equal round trip time assumed independent window size assumption adopted implicitly explicitly 
note assumed time needed send packets window smaller round trip time behavior seen observations reported 
round group new packets sent new size congestion control window 
number packets acknowledged received ack 
tcp receiver implementations send cumulative ack consecutive packets received delayed ack typically 
packets sent round received acknowledged correctly acknowledgments received 
acknowledgment increases window size window size second round congestion avoidance absence loss window size increases linearly time slope packets round trip time 
subsections model tcp behavior presence packet loss 
packet loss detected ways reception tcp sender triple duplicate acknowledgments acks sequence number time outs 
denote event td triple duplicate loss indication loss indication 
assume packet lost round independently packets lost rounds modeling assumption justified extent past studies shown periodic udp packets separated little msec tend get lost singleton bursts 
hand assume packet losses correlated back back transmissions round packet lost remaining packets transmitted round lost 
bursty loss behavior shown arise drop tail queuing discipline adopted internet routers discussed 
discuss section 
develop stochastic model tcp congestion control steps corresponding operating regimes loss indications exclusively td section loss indications td section congestion window size limited receiver advertised window section 
note model certain aspects tcp behavior fast recovery believe captured essential elements tcp behavior indicated generally fits model predictions measurements numerous commercial tcp implementations discussed section 
detailed discussion model assumptions related issues section 
note measure throughput terms packets unit time bytes unit time 
loss indications exclusively triple duplicate acks section assume loss indications exclusively type triple duplicate ack td window size limited receiver advertised flow control window 
consider tcp flow starting time sender data send 
time define number packets transmitted interval throughput interval 
note number packets sent unit time regardless eventual fate received 
represents throughput connection goodput 
define long term steady state tcp throughput assumed packet lost round remaining packets transmitted round lost 
define probability packet lost packet round preceding packet round lost 
interested establishing relationship throughput tcp connection loss probability defined 
tdp tdp tdp evolution window size time loss indications triple duplicate acks sample path evolution congestion window size 
td loss indications sender congestion avoidance window increases packets round discussed earlier 
immediately loss indication occurs window size reduced factor 
define td period tdp period td loss indications see 
th td period define number packets sent period duration period window size period 
considering markov regenerative process rewards see example shown order derive expression expressions mean long term steady state tcp throughput derive packets sent legend acked packet lost packet 

tdp td occurs tdp ends rounds round penultimate round packets sent td period consider td period 
td period starts immediately td loss indication current congestion window size equal half size window td occurred 
round window incremented number packets sent round incremented rounds 
denote packet lost round loss occurs see 
packet packets sent additional round td loss indication occurs current td period ends discussed detail section 
total packets sent rounds 
follows derive consider random process number packets sent td period including packet lost 
assumption packets lost round independently packets lost rounds sequence independent identically distributed random variables 
loss model probability equal probability exactly packets successfully acknowledged loss occurs mean form follows derive consider define duration round trip time th round duration consider round trip times random variables assumed independent size congestion window independent round number follows henceforth denote average value round trip time 
derive expression consider evolution function number rounds 
simplify exposition derivation assume integers 
observe th td period window size increases increase linear slope fact packets transmitted expressed number packets sent round see 
markov process stationary distribution obtained numerically probability density function 
compute probability distribution simpler approximate solution obtained assuming mutually independent sequences random variables 
assumption follows consider number packets round uniformly distributed observe small values follows observe expressed small values reduces throughput formula extend model include tcp behaviors timeouts receiver limited windows considered previous analytic studies tcp congestion control 
loss indications triple duplicate acks time outs td evolution window size loss indications triple duplicate acks time outs far considered tcp flows loss indications due triple duplicate acks 
measurements show see table cases majority window decreases due time outs fast retransmits 
model capture time loss indications 
section extend model include case tcp sender times 
occurs packets acks lost duplicate acks received 
sender waits period time denoted retransmits non acknowledged packets 
time congestion window reduced packet resent round time 
case time occurs successfully retransmitting packets lost time period time doubles doubling repeated unsuccessful retransmission reached time period remains constant example evolution congestion window size 
denote duration sequence time outs time interval consecutive time sequences 
define define number packets sent sequence random variables extend definition td periods section include periods starting loss indication periods td loss indications 
number td periods interval th td period interval define number packets sent period duration period number rounds period window size period 
denotes number packets sent time sequence observe counts total number packet transmissions just number different packets sent 
discussed section interested throughput tcp flow goodput 
assume sequence random variables independent derive observe time consecutive time sequences td tdp ends 
follows loss indications 
denote probability loss indication tdp consequently depend time outs means derived 
compute tcp throughput determine sequence number legend received packet lost packet ack td occurs tdp ends rtt penultimate round rtt round packet ack transmissions preceding loss indication time deriving expression consider round packets loss indication occurs referred penultimate round see current congestion window size 
packets sent penultimate round 
packets acknowledged packet lost acked 
assume packet losses correlated round packet lost packets follow till round 
packets penultimate round lost 
packets 
acked packets sent round refer round 
round packets may loss say packet assumptions packet loss correlation mandates packets lost round 
packets successfully sent round responded acks packet counted duplicate acks 
acks delayed number duplicate acks equal number successfully received packets round 
number acks higher td indication occurs occurs 
cases current period losses tdp ends 
denote probability packets acked round packets sequence losses round 
define probability packets acked sequence round packets sent rest packets round lost 

ack acknowledges individual packets acks delayed 
chosen simplicity illustration 
see analysis depend acks delayed 

probability loss window size occurs number packets successfully transmitted penultimate round number packets successfully transmitted round 
due assumption packet different rounds probability loss round equals algebraic manipulations follows 
lost independently packet occur penultimate round loss observe example rule numerically find approximation probability loss indication approximate 
consider derivation need probability distribution number timeouts sequence 
observed tcp traces cases packet transmitted time outs sequence 
sequence tos occurs consecutive losses loss followed successfully transmitted packet 
consequently number tos sequence geometric distribution compute mean focus average duration time sequence excluding retransmissions computed similar way 
know time outs sequence length immediately timeouts having length duration sequence time outs mean armed expressions substitute expressions equation obtain 
approximated impact window limitation far considered limitation congestion window size 
tcp flow establishment receiver advertises maximum buffer size determines maximum congestion window size consequence period loss indications window size grow grow value 
example evolution window size depicted 
max td evolution window size limited max 
rounds tdp tdp tdp fast retransmit window limitation simplify analysis model assumption 
denote unconstrained window size mean assume approximation words receiver window limitation negligible effect long term average tcp throughput tcp throughput 
hand approximate case consider interval time sequences consisting series td periods 
tdp window grows linearly rounds remains constant rounds td indication occurs 
window drops process repeats 
implies considering number packets sent th td period number packets th td period depend window limitation substituting result obtain tcp throughput window limited complete characterization tcp throughput 
sections refer full model 
approximation follows section verify equation approximation equation 
henceforth refer approximate model 
measurements trace analysis equations provide analytic characterization tcp function packet loss indication rate rtt maximum window size 
section empirically validate formulae measurement data tcp connections established hosts scattered united states europe 
table lists domains operating systems hosts 
data sets unidirectional bulk data transfers 
gathered measurement data running tcpdump sender analyzing output set analysis programs developed 
programs account various measurement implementation related problems discussed :10.1.1.134.20
example analyze traces linux sender account fact td events occur getting duplicate acks 
trace analysis programs verified checking ns 
table summarizes data data sets corresponds hour long tcp connection sender behaves infinite source data send tcp throughput limited tcp congestion control 
experiments performed randomly selected times 
third forth column table indicate number packets sent number loss indications respectively triple duplicate ack timeout 
dividing total number loss indications total number packets sent gives approximate value approximation similar 
columns show breakdown receiver domain operating system ada edu irix cs umn edu linux cs wm edu linux alps cc gatech edu sunos babel cs umass edu sunos cs arizona edu sunos cs ucla edu sunos imagine cs umass edu win manic cs umass edu irix inria fr sunos maria wustl edu sunos modi ncsa uiuc edu irix pif inria fr solaris pong usc edu hp ux sics se sunos sutton cs columbia edu sunos tove cs umd edu sunos void site linux table domains operating systems hosts loss indications type number td events number single timeouts having duration number double timeouts note depends number loss indications type 
columns report average value round trip time average duration single timeout values averaged entire trace 
calculating round trip time values follow karn algorithm attempt minimize impact timeouts retransmissions rtt estimates 
table reports summary results form additional data sets 
cases data set represents serially initiated tcp connections sender receiver pair 
connection lasted seconds followed second gap connection initiated 
experiments performed randomly selected times 
data columns table cumulative set traces source destination pair 
columns report average value round trip time single timeout 
values averaged traces source destination pair 
important observation drawn data tables traces timeouts constitute majority significant fraction total number loss indications 
underscores importance including effects timeouts model tcp congestion control 
addition single timeout events column seen exponential backoff multiple timeouts occurs significant frequency 
manic rtt wmax hr pif imagine rtt wmax hr number packets sent td td proposed full number packets sent td td proposed full frequency loss indications frequency loss indications manic pif imagine measurement data described validate model proposed section 
figures plot measured throughput trace data model predicted throughput proposed model described 
title trace indicates average round trip time average single timeout duration maximum window size advertised receiver number packets 
axis represents frequency loss indications axis represents number packets sent 
hour trace divided consecutive second intervals plotted point graph represents number packets sent versus number loss indications interval 
dividing continuous trace fixed sized intervals lead inaccuracies measuring sender receiver packets loss td rtt time sent 
manic alps manic manic manic manic maria manic manic sutton manic tove void alps void void void maria void void sutton void tove babel alps babel babel babel babel sutton babel tove pif alps pif imagine pif manic table summary data hr traces sender receiver packets loss td rtt time sent 
larger manic ada manic manic manic alps manic manic manic manic maria manic modi manic pong manic manic sutton manic tove table summary data second traces pif manic rtt wmax hr void alps rtt wmax hr number packets sent td td proposed full number packets sent td td proposed full frequency loss indications frequency loss indications pif manic void alps interval boundaries may occur timeout intervals attributing loss event interval impact felt believe interval sizes longer timeouts minimized impact inaccuracies 
second interval classified categories intervals type td suffer timeout triple duplicate acks intervals type suffered single timeout exponential backoff represents intervals suffered single exponential backoff double timeout line labeled td stands triple duplicate acks plots predictions model described essentially model described accounting delayed acks 
line labeled proposed full represents model described equation 
pointed void tove rtt wmax hr babel alps rtt wmax hr number packets sent td td proposed full number packets sent td td proposed full frequency loss indications frequency loss indications void tove babel alps td model may accurate frequency loss indications higher 
observe traces frequency loss indications higher td model predicts values tcp throughput higher measured 
traces see example observe tcp throughput limited receiver advertised window size 
accounted td model td overestimates throughput low values 
figures show similar graphs point represents individual second tcp connection 
plot model predictions round trip timeout durations averaged traces values appear table 
equation section represents simple approximate form full model 
plot predictions approximate model full model 
results data sets similar 
manic rtt wmax manic rtt wmax number packets sent td td proposed full number packets sent td td proposed full frequency loss indications frequency loss indications manic manic order accurately evaluate models compute average error follows hour long traces divide trace second intervals compute number packets sent interval denoted value loss frequency 
calculate average value round trip time timeout entire trace manic rtt wmax manic rtt wmax number packets sent td td proposed full number packets sent td td proposed full frequency loss indications frequency loss indications manic manic manic sutton rtt wmax rtt wmax number packets sent td td proposed full number packets sent td td proposed full proposed approx frequency loss indications frequency loss indications manic sutton model manic approximate values available table 
second interval calculate number packets predicted proposed model 
average error number observations average error approximate model td calculated similar manner 
smaller average error indicates better model accuracy 
plot error values allow visual comparison 
axis traces identified sender receiver names 
order traces appear left right average error td model increasing 
points corresponding model joined line segments better visual representation data 
second traces value round trip time timeout calculated second trace 
error values shown 
traces comparison models hr comparison models traces seen figures cases proposed model better estimator observed values td model 
approximate model generally provides accurate predictions td model quite close predictions full model 
expect model match observations 
show example 
probably due large number triple duplicate acks observed trace set 
discussion model experimental results section discuss various simplifying assumptions constructing model section impact results described section 
model capture subtleties fast recovery algorithm 
believe impact omission quite small results section validate assumption indirectly 
assumed time spent slow start negligible compared length traces 
assumptions 
assumed packet losses round correlated 
justification assumption comes fact vast majority routers internet today drop tail policy packet discard 
policy packets arrive full buffer dropped 
packets round sent back back packet arrives full buffer happens rest packets round 
packet loss correlation drop tail routers pointed 
addition assume losses round independent losses rounds 
justified fact packets different rounds separated rtt encounter buffer states independent 
confirmed findings 
assumption implicit round trip time independent window size 
measured coefficient correlation duration round samples manic rtt wmax hr number packets sent td td proposed full frequency loss indications manic number packets transit sample 
traces summarized table coefficient correlation range lending credence statistical independence round trip time window size 
conducted similar experiments receivers modem line coefficient correlation high 
speculate combined effect slow link buffer devoted exclusively connection probably isp just modem 
result model models described fail match observed data case receiver modem 
plot results experiment 
receiver pentium pc running linux connected internet commercial service provider kbps modem 
results hour connection divided second intervals 
assumed senders implement tcp reno described 
observed implementation protocol stack operating system slightly different :10.1.1.134.20
tried account significant differences example linux td loss indications occur duplicate acks tried customize model nuances operating system 
example observed linux exponential backoff exactly follow algorithm described 
observations indicate irix implementation exponential backoff limited aware observation sunos tcp implementation derived tahoe reno :10.1.1.134.20
customized model cases 
simple model tcp reno protocol 
model captures essence tcp congestion avoidance behavior expresses throughput function loss rate 
model takes account behavior protocol presence timeouts valid entire range loss probabilities 
compared model behavior real world tcp connections 
observed connections suffered significant number timeouts 
model provides match observed behavior cases models proposed significantly overestimate throughput 
conclude timeouts significant impact performance tcp protocol model able account impact 
simplified expression tcp bandwidth equation approximation proposed model cases 
simple approximation protocols described ensure tcp friendliness :10.1.1.102.1697:10.1.1.102.1697
number avenues remain 
model enhanced account effects fast recovery fast retransmit 
second precise throughput calculation obtained congestion window size modeled markov chain 
third assumed packet round lost remaining packets round lost 
assumption relaxed model modified incorporate loss distribution function 
estimating distribution function path internet significant research effort 
fourth interesting investigate behavior tcp slow links dedicated buffers modem lines 
currently investigating closely data sets model estimator 
working tcp friendly protocol control transmission continuous media 
protocol model modulate throughput ensure tcp friendliness 
bolot vega garcia 
control mechanisms packet audio internet 
proceedings ieee infocom 
fall floyd 
simulation comparisons tahoe reno sack tcp 
computer communication review july 
floyd jacobson 
random early detection gateways congestion avoidance 
ieee acm transactions networking august 
jacobson 
modified tcp congestion avoidance algorithm 
note sent interest mailing list 
karn partridge 
improving round trip time estimates reliable transport protocols 
computer communication review august 
mahdavi floyd 
tcp friendly unicast rate flow control 
note sent interest mailing list jan 
mathis mahdavi ott 
macroscopic behavior tcp congestion avoidance algorithm 
computer communication review july 

ns lbl network simulator 
obtain www nrg ee lbnl gov ns 
ostermann 
tcp dump file analysis tool 
cs edu software 
ott mathis 
stationary behavior ideal tcp congestion avoidance 
preprint 
padhye firoiu towsley kurose 
modeling tcp throughput simple model empirical validation 
technical report umass cs tr 
paxson 
automated packet trace analysis tcp implementations 
proceedings sigcomm 
paxson :10.1.1.134.20
internet packet dynamics 
proceedings sigcomm 
paxson floyd 
don know simulate internet 
proccedings winter simulation conference 
ross 
applied probability models optimization applications 
dover 
stevens 
tcp ip illustrated vol protocols 
addison wesley 
stevens 
tcp slow start congestion avoidance fast retransmit fast recovery algorithms 
rfc jan 
thompson miller wilder 
wide area internet traffic patterns 
ieee network november december 
turletti bolot 
experiments layered transmission scheme internet 
technical report rr inria france 
obtain www inria fr rr html 
vicisano rizzo crowcroft 
tcp congestion control layered multicast data transfer 
proceedings infocomm 

