autonomous agents multi agent systems kluwer academic publishers boston 
manufactured netherlands 
roadmap agent research development jennings qmw ac uk department electronic engineering queen mary westfield college london ns uk katia sycara cs cmu edu school computer science carnegie mellon university pittsburgh pa usa wooldridge qmw ac uk department electronic engineering queen mary westfield college london ns uk received november revised march editor 

provides overview research development activities field autonomous agents multi agent systems 
aims identify key concepts applications indicate relate 
historical context field agent computing contemporary research directions 
range open issues challenges highlighted 
keywords autonomous agents multi agent systems history 
autonomous agents multi agent systems represent new way analysing designing implementing complex software systems 
agent view offers powerful repertoire tools techniques metaphors potential considerably improve way people conceptualise implement types software 
agents increasingly wide variety applications ranging comparatively small systems personalised email filters large complex mission critical systems air traffic control 
sight may appear extremely different types system little common 
case key abstraction agent 
naturalness ease variety applications characterised terms agents leads researchers developers excited potential approach 
observers feel certain aspects agents dangerously stops soon agents suffer similar experienced artificial intelligence ai community :10.1.1.25.322
degree interest level activity comparatively new multi disciplinary subject surprising field agent computing appear chaotic incoherent 
purpose try impose order coherence 
aim tease common threads agent tapestry 
purpose provide detailed review field leave example :10.1.1.119.2204
depth analysis critique field briefly introduce key issues indicate inter related 
appropriate detailed treatments provided 
embark discussion define mean terms agent agent system multi agent system 
unfortunately immediately run difficulties key concepts field lack universally accepted definitions 
particular real agreement core question exactly agent see discussion 
course need serious obstacle progress ai community progress having universally accepted definition intelligence example 
feel worth spending time issue terms come lose meaning 
agent computer system situated environment capable flexible autonomous action order meet design objectives definition adapted :10.1.1.119.2204
key concepts definition situatedness autonomy flexibility 
situatedness context means agent receives sensory input environment perform actions change environment way 
examples environments agents may situated include physical world internet 
situatedness may contrasted notion disembodied intelligence expert systems 
example mycin paradigm expert system interact directly environment 
received information sensors user acting middle man way act environment gave feedback advice third party 
autonomy difficult concept pin precisely mean simply sense system able act direct intervention humans agents control actions internal state 
stronger sense mean systems capable learning experience 
course situated autonomous computer systems new development 
examples systems existence 
examples include process control system monitor real world environment perform actions modify conditions change typically real time systems range simple example extremely complex example nuclear reactor control systems software daemons monitor software environment perform actions modify environment conditions change simple example program monitors user incoming email obtains attention displaying icon new incoming email detected 
certainly examples situated autonomous systems consider agents capable flexible action order meet design objectives 
flexible mean system responsive agents perceive environment respond timely fashion changes occur pro active agents simply act response environment able exhibit opportunistic goal directed behaviour take initiative appropriate social agents able interact appropriate artificial agents humans order complete problem solving help activities :10.1.1.119.2204
researchers emphasise different aspects agency including example mobility adaptability believe properties essence agenthood 
naturally agents additional characteristics certain types applications attributes important 
believe presence attributes single software entity provides power agent paradigm distinguishes agent systems related software paradigms object oriented systems distributed systems expert systems see discussion :10.1.1.25.322
basic building block notion agent place define terminology 
agent system mean key abstraction agent 
principle agent system terms agents implemented software structures corresponding agents 
draw parallel object oriented software entirely possible design system terms objects implement objectoriented software environment 
best unusual worst counterproductive 
similar situation exists agent technology expect agentbased system designed implemented terms agents 
defined agent system may contain agents 
cases single agent solution appropriate 
example shall see article class systems known expert assistants agent acts expert assistant user attempting computer carry task 
multi agent case system designed implemented interacting agents arguably general interesting software engineering standpoint 
multi agent systems ideally suited representing problems multiple problem solving methods multiple perspectives multiple problem solving entities 
systems traditional advantages distributed concurrent problem solving additional advantage sophisticated patterns interactions 
examples common types interactions include cooperation working common aim coordination organising problem solving activity harmful interactions avoided beneficial interactions exploited negotiation coming agreement acceptable parties involved 
flexibility high level nature interactions distinguishes multi agent systems forms software provides underlying power paradigm 
remainder article structured follows 
section focuses individual agents providing background concepts involved indicating key issues addressed highlighting directions research development 
section presents similar discussion multi agent systems 
section draws strands 
discusses exemplar agent applications pro vides pointers direction applied agent 
section presents 

autonomous agents purpose section identify various threads resulted contemporary research development activities agent systems 
section identifying key developments history pre history autonomous agents area including current systems 
section identify key issues research directions autonomous agents 

history current interest autonomous agents emerge vacuum 
researchers developers different disciplines talking closely related issues time 
main contributors artificial intelligence object oriented programming concurrent object systems human computer interface design 

artificial intelligence 
undoubtedly main contributor field autonomous agents artificial intelligence 
ultimately ai building intelligent artifacts artifacts sense act environment considered agents 
despite fact agency seen central study ai comparatively little effort ai community directed study intelligent agents 
primary reason apparently strange state affairs ai researchers historically tended focus various different components intelligent behaviour learning reasoning problem solving vision understanding isolation 
expectation progress aspects intelligent behaviour studied individually synthesis components create integrated agent straightforward 
early assumption implicit mainstream ai research 
period area research activity closely connected autonomous agents ai planning 
ai planning research sub field ai concerns knowing action perform 
ultimately agent just system performs actions environment surprising ai planning research closely involved study agents 
ai planning paradigm traces origins newell simon gps system commonly associated strips planning system descendents 
typical strips style planning system components symbolic model agent environment typically represented limited subset order predicate logic symbolic specification actions available agent typically represented terms pda pre condition delete add lists specify circumstances action may performed effects action planning algorithm takes input representation environment set action specifications representation goal state produces output plan essentially program specifies agent act achieve goal 
planning systems decide act principles 
order satisfy goal formulate entirely new plan program goal 
planning systems continually execute cycle picking goal generating plan executing picking new goal 
crucially planning entirely symbolic representations reasoning 
attention ai planning research early focussed primarily representations required actions planning algorithms 
particular concern demonstrated efficiency planning algorithm 
simulated micro world examples known blocks world strips style planning algorithms appear give reasonable performance 
rapidly discovered techniques scale realistic scenarios 
particular algorithms predicated assumption rationality 
rationality assumption may informally defined follows 
suppose agent accept observation world input computation generate action output 
said enjoy property rationality action gives output optimal performed time began decisionmaking 
algorithms property rationality definition guaranteed best decision possible necessarily time 
rationality tends arise circumstances decision action perform unconstrained search space possible decisions 
size search spaces inherently exponential complexity task solved 
consequence search techniques tend impractical results required fixed time bound 
building burgeoning area algorithmic complexity analysis emerged late number theoretical results appeared indicated principles planning viable option agents operate time constrained environments 
best known results due david chapman demonstrated circumstances principles planning undecidable 
building reactive agents respond changes environment time responses useful possible principles planning techniques 
apparent failure early ai planning techniques scale real world problems complexity results chapman led researchers question viability symbolic reasoning approaches planning particular ai general 
problem deploying algorithms real world systems prompted researchers turn somewhat neglected issue agent design 
mid increasing number researchers began question assumptions traditional symbolic ai approaches agency 
particular researchers began express grave reservations symbolic ai particular logicist tradition symbolic ai ultimately viable 
arguably best known critics rodney brooks series papers number objections symbolic ai model sketched alternative research program variously known behavioural ai reactive ai situated ai 
papers brooks emphasised aspects intelligent behaviour suggested neglected traditional approaches agency ai 
particular suggested intelligent rational behaviour attribute disembodied systems theorem provers traditional expert systems mycin intelligence product interaction agent environment 
addition brooks emphasised view intelligent behaviour emerges interaction various simpler behaviours 
part research program brooks developed subsumption architecture agent control architecture employed symbolic representations reasoning 
broadly speaking subsumption architecture agent collection task accomplishing behaviours 
behaviour finite state machine continually maps perceptual input action output 
implemented versions subsumption architecture mapping achieved situation action rules simply determine action perform basis agent current state 
brooks implementations behaviours somewhat sophisticated example allowing feedback previous decisions 
main point behaviours symbolic reasoning search 
behaviour generating suggestions respect action perform decision action perform determined interactions behaviours 
behaviours interact ways 
example behaviour suppress output 
typically behaviours organised layered hierarchy lower layers representing behaviours obstacle avoidance physically embodied agents higher layers representing behaviours 
developing agents exhibit coherent behaviour process carefully developing experimenting new behaviours usually placing agent environment observing results 
despite apparent simplicity subsumption architecture demonstrated impressive applications see 
number disadvantages subsumption architecture relatives agents employ models environment sufficient information available local environment determine acceptable action 
purely reactive agents decisions local information information agent current state difficult see decision making take account non local information inherently take short term view 
difficult see purely reactive agents designed learn experience improve performance time 
perceptual input 
layered agent architectures layer 
layer layer horizontal layering action output perceptual input layer 
layer layer vertical layering action output major selling point purely reactive systems behaviour emerges interaction component behaviours agent placed environment 
term emerges suggests relationship individual behaviours environment behaviour understandable 
necessarily hard engineer agents fulfill specific tasks 
ultimately principled methodology building agents laborious process experimentation trial error engineer agent 
effective agents generated small numbers behaviours typically layers harder build agents contain layers 
dynamics interactions different behaviours complex understand 
early researchers accepted reactive architectures suited certain domains problems suited 
fact problems purely deliberative principles planner architecture purely reactive architecture appropriate 
domains architecture required incorporates aspects 
result number researchers began investigate hybrid architectures attempted marry best aspects deliberative reactive approaches 
typically architectures realised number software layers 
layers may arranged vertically layer access agent sensors effectors horizontally layers access sensor input action output see 
subsumption architecture see layers arranged hierarchy different levels hierarchy dealing information environment different levels abstraction 
architectures find layers sufficient 
lowest level hierarchy typically reactive layer decisions raw sensor input 
layer implemented techniques similar brooks subsumption architecture implemented hierarchy task accomplishing behaviours behaviours task accomplishing finite state machines 
middle layer layer typically abstracts away raw sensor input deals knowledge level view agent environment typically making symbolic representations 
uppermost level architecture tends deal social aspects environment social knowledge level view 
typically find representations agents layer goals beliefs 
order produce global behaviour agent layers interact specific way layers interact differs architecture architecture 
approaches touring machines layer constantly producing suggestions action perform 
case mediation layers order ensure behaviour agent coherent consistent issue 
touring machines mediation achieved control subsystem determines layer control agent 
control subsystem touring machines implemented set rules refer actions proposed layer 
similar idea interrap 
similar architecture autonomous agents 
final tradition area agent architectures practical reasoning agents 
practical reasoning agents architecture modelled inspired theory practical reasoning humans 
practical reasoning simply mean kind pragmatic reasoning decide 
practical reasoning long area study philosophers interested developing theories account human behaviour 
typically theories practical reasoning folk psychology behaviour understood attribution attitudes beliefs desires intentions 
human behaviour thought arising interaction attitudes 
practical reasoning architectures modelled theories interactions 
probably best known influential type practical reasoning architecture called belief desire intention bdi model 
name indicates bdi agents characterised mental state components beliefs desires intentions 
intuitively beliefs correspond information agent environment 
desires represent options available agent different possible states affairs agent may choose commit 
intentions represent states affairs agent chosen committed resources 
agent practical reasoning involves repeatedly updating beliefs information environment deciding options available filtering options determine new intentions acting basis intentions 
philosophical foundations bdi model bratman account role intentions play human practical reasoning 
number bdi agent systems implemented best known probably procedural reasoning system prs 
researchers interested practical reasoning architectures developed number logical theories bdi systems :10.1.1.28.7820
closely related practical reasoning agent architectures shoham proposal agent oriented programming multi agent programming model agents explicitly programmed terms mentalistic notions belief desire 

object concurrent object systems 
object oriented programmers fail see novel new idea agents 
stops consider relative properties agents objects surprising 
objects defined computational entities encapsulate state able perform actions methods state communicate message passing 
obvious similarities significant differences agents objects 
degree agents objects autonomous 
recall defining characteristic object oriented programming principle encapsulation idea objects control internal state 
programming languages java declare instance variables methods meaning accessible object 
course declare public meaning accessed methods objects 
instance variables generally considered poor programming style 
way object thought exhibiting autonomy state control 
object exhibit control behaviour 
method available objects invoke wish object control method executed 
course object methods available objects unable build system 
normally issue build system design objects go assumed share common goal 
types multi agent system particular contain agents built different organisations individuals common goal assumed 
taken granted agent execute action method just agent wants may best interests think agents invoking methods requesting actions performed 
requests perform may perform action may 
locus control respect decision execute action different agent object systems 
object oriented case decision lies object invokes method 
agent case decision lies agent receives request 
distinction objects agents summarised slogan objects free agents money 
note implementing agents object oriented techniques 
example build kind decision making execute method method way achieve stronger kind autonomy objects 
point autonomy kind component basic object oriented model 
second important distinction object agent systems respect notion flexible reactive pro active social autonomous behaviour 
standard object model whatsoever say build systems integrate types behaviour 
argue build object oriented programs integrate types behaviour 
argument misses point standard object oriented programming model types behaviour 
third important distinction standard object model view agent systems agents considered thread control standard object model single thread control system 
course lot devoted concurrency object oriented programming 
example java language provides built constructs multi threaded programming 
programming languages available admittedly prototypes specifically designed allow concurrent object programming 
languages capture idea agents autonomous entities 
note active objects come quite close concept autonomous agents agents capable flexible autonomous behaviour 

human computer interfaces currently interact computer user interface making interaction paradigm known direct manipulation 
put simply means computer program word processor example explicitly tell 
way interaction 
desirable computer programs certain circumstances take initiative wait user spell exactly wanted 
leads view computer programs cooperating user achieve task acting simply servants 
program capable initiative way effect operating semi autonomous agent 
agents referred expert assistants digital 
key figures development agent interfaces nicholas 
vision agents interface set digital agent answers phone recognizes callers appropriate may tell white lie behalf 
agent trained timing versed finding opportune moments idiosyncrasies 
somebody knows shares information person act behalf effectively 
secretary falls ill difference agency send albert einstein 
issue iq 
shared knowledge practice best interests army commander sending scout ahead 
dispatch agents collect information behalf 
agents dispatch agents 
process multiplies 
process started interface delegated desires main application agents date area information management systems particularly email managers active new readers active worldwide web browsers :10.1.1.31.3135
section discuss applications detail 

issues directions area agent architectures particularly layered hybrid architectures practical reasoning architectures continues area considerable research effort agent field 
example ongoing investigate appropriateness various architectures different environment types 
turns quite hard evaluate agent architecture suggestions done neutral way 
agent technology kind described section move research lab office everyday computer worker serious attention development environments programming languages systems 
date architectures implemented ad hoc manner 
programming languages tools agents developer layer abstraction architectures 
shoham agent attempt build language congolog language described concurrent metatem programming language :10.1.1.20.4630
april language provides developer set software tools implementing mas 

multi agent systems traditionally research systems composed multiple agents carried banner distributed artificial intelligence dai historically divided main camps distributed problem solving dps multi agent systems mas 
term multi agent systems come general meaning refer types systems composed multiple semi autonomous components 
distributed problem solving dps considers particular problem solved number modules nodes cooperate dividing sharing knowledge problem evolving solutions 
pure dps system interaction strategies incorporated integral part system 
contrast research mas concerned behavior collection possibly pre existing autonomous agents aiming solving problem 
mas defined loosely coupled network problem solvers solve problems individual capabilities knowledge problem solver 
problem solvers agents autonomous may heterogeneous nature 
characteristics mas agent incomplete information capabilities solving problem agent limited viewpoint global system control data decentralized computation asynchronous 
reasons increasing interest mas research include ability provide robustness efficiency ability allow inter operation existing legacy systems ability solve problems data expertise control distributed 
mas provide potential advantages face difficult challenges 
problems inherent design implementation mas list includes problems posed added 
formulate describe decompose allocate problems synthesize results group intelligent agents 

enable agents communicate interact 
communication languages protocols 
communicate 

ensure agents act coherently making decisions action accommodating nonlocal effects local decisions avoiding harmful interactions 

enable individual agents represent reason actions plans knowledge agents order coordinate 
reason state coordinated process initiation completion 

recognize reconcile disparate viewpoints conflicting intentions collection agents trying coordinate actions 

effectively balance local computation communication 
generally manage allocation limited resources 

avoid mitigate harmful system behavior chaotic oscillatory behavior 

engineer constrain practical mas systems 
design technology platforms development methodologies mas 
solutions problems course intertwined 
example different modeling schemes individual agent may constrain range effective coordination regimes different procedures communication interaction implications behavioral coherence different problem task decompositions may yield different interactions 
backdrop provide historical context field section discuss contemporary distributed problem solving section multi agent systems section discuss open issues section 

history group ai researchers held dai workshop mit discuss issues concerning intelligent problem solving systems consisting multiple problem solvers 
decided distributed ai concerned low level parallelism issues distribute processing different machines parallelize centralized algorithms issues intelligent problem solvers coordinate effectively solve problems 
beginnings dai field grown major international research area 

actors models multi agent problem solving actors model 
actors proposed universal primitives concurrent computation 
actors self contained interactive autonomous components computing system communicate asynchronous message passing 
basic actor primitives create creating actor behavior description set parameters possibly including existing actors send sending message actor changing actor local state 
actor models natural basis kinds concurrent computation 
noted actor models dai models face issue coherence 
low level granularity actors poses issues relating composition actor behaviors larger communities achievement higher level performance goals local knowledge 
issues addressed overview open systems science challenges organizational architecture called org proposed included new features extensions actor model support organizing large scale 

task allocation contract net protocol issue flexible allocation tasks multiple problem solvers nodes received attention early history dai 
davis smith resulted known contract net protocol 
protocol agents dynamically take roles manager contractor 
task perform agent determines break subtasks performed concurrently 
employs contract net protocol announce tasks transferred requests bids nodes perform tasks 
node receives task announcement replies bid task indicating thinks perform task 
contractor collects bids awards task best bidder 
contract net considered smith davis subsequent dai researchers negotiation technique really coordination method task allocation 
protocol enables dynamic task allocation allows agents bid multiple tasks time provides natural load balancing busy agents need bid 
limitations detect resolve conflicts manager inform nodes bids refused agents refuse bids pre emption task execution time critical tasks may attended communication intensive 
rectify shortcoming number extensions basic protocol proposed example 

early applications air traffic control cammarata studied cooperation strategies resolving conflicts plans group agents 
applied strategies air traffic control domain aim enable agent aircraft construct flight plan maintain safe distance aircraft vicinity satisfy additional constraints reaching destination minimal fuel consumption 
agents involved potentially conflicting situation aircraft close current flight path choose agents involved conflict resolve 
chosen agent acts centralized planner develop multi agent plan specifies conflict free flight paths agents follow 
decision agent planning different criteria example informed agent constrained agent 
authors carried experimental evaluations compare plans agents chosen different criteria 
distributed vehicle monitoring task domain set agents distributed geographically capable sensing portion area monitored 
vehicles move sensed area agent detects characteristic sounds vehicles discrete time intervals 
analyzing combination sounds heard particular location specific time agent develop interpretations vehicles created sounds 
analyzing temporal sequences vehicle interpretations knowledge mobility constraints different vehicles agent generate tentative maps vehicle movements area 
communicating tentative maps agents obtain increased reliability avoid redundant tracking overlapping regions 
blackboards early mas applications blackboard systems coordination 
put crudely blackboard simply shared data structure 
agents blackboard communicate simply writing data structure 
early lesser corkill blackboards data agents goals 
minds project huhns specialized blackboards 
minds project distributed information retrieval system agents shared knowledge tasks order cooperate retrieving documents users 
hayes roth proposed elaborate blackboard structure interacting sub agents perception control reasoning 

cooperative multi agent interactions interest increases applications cooperative agents working common goal agents built cooperate teams virtual training internet information integration robocup robotic synthetic soccer interactive entertainment important understand principles underpin cooperation 
discussed section planning single agent process constructing sequence actions considering goals capabilities environmental constraints 
planning mas environment hand considers addition constraints agents activities place agent choice actions constraints agent commitments place choice actions unpredictable evolution world caused un modeled agents 
early dai dealt groups agents pursuing common goals 
agent interactions guided cooperation strategies meant improve collective performance 
light early distributed planning took approach complete planning action 
produce coherent plan agents able recognize subgoal interactions avoid resolve 
instance georgeff included synchroniser agent recognize resolve interactions 
agents send synchroniser plan synchroniser examines plans critical regions example contention resources cause fail 
synchroniser inserted synchronization messages akin operating systems semaphores ensure mutual exclusion 
cammarata air traffic control see section synchronizing agent dynamically assigned different criteria alter plan remove interaction avoid collision 
significant approach resolving sub problem interdependencies functionally accurate model fa 
fa model agents need necessary information locally solve sub problems interact asynchronous coroutine exchange partial results 
starting fa model series sophisticated distributed control schemes agent coordination developed static meta level information specified organizational structure dynamic meta level information developed partial global planning pgp 
partial global planning flexible approach coordination assume particular distribution sub problems expertise resources allows nodes coordinate dynamically 
agent interactions take form communicating plans goals appropriate level abstraction 
communications enable receiving agent form expectations behavior sending agent improving agent predictability network coherence 
agents cooperative recipient agent uses information plan adjust local planning appropriately common planning goals planning effectiveness criteria met 
common pgp agents common knowledge pgps 
decker addressed limitations pgp creating generic pgp framework called handle issues real time scheduling deadlines meta control obviate need detailed planning possible node interactions :10.1.1.32.8351
research direction cooperative multi agent planning directed modeling teamwork explicitly 
particularly helpful dynamic environments team members may fail may new opportunities 
situations necessary teams monitor performance reorganize current situation 
joint intentions framework natural extension practical reasoning agents paradigm discussed section 
focuses characterising team mental state called joint intention see survey :10.1.1.37.83
team jointly intends team action team members jointly committed completing team action mutually believing doing 
joint commitment defined joint persistent goal 
enter joint commitment team members establish appropriate mutual beliefs commitments 
done exchange request confirm speech acts 
commitment protocol synchronizes team members simultaneously enter joint commitment team task 
addition team members consent confirmation establishment joint commitment goal joint commitment goal established team member refuses 
case negotiation done remains open issue 
sharedplan model different mental attitude intending action done :10.1.1.35.341:10.1.1.35.341
intending concerns group joint activity collaborator actions 
concept defined set axioms guide team mate take action enter communication enables facilitates team mates perform assigned tasks 
collagen prototype toolkit origins sharedplan model applied building collaborative interface agent helps air travel arrangements 
jennings framework called joint responsibility joint commitment team joint goal joint recipe commitment common recipe 
model implemented grate system applied domain electricity transport management 
tambe presents model teamwork called steam shell teamwork enhancements soar architecture plus set domain independent soar rules 
teamwork operationalized steam teams implemented operate commercially available simulation military training third robocup synthetic soccer 
steam uses hybrid approach combines joint intentions partial sharedplans 

self interested multi agent interactions notion interactions self interested agents centered negotiation 
negotiation seen method coordination conflict resolution resolving goal disparities planning resolving constraints resource allocation resolving task inconsistencies determining organizational structure 
negotiation metaphor communication plan changes task allocation centralized resolution constraint violations 
negotiation ill defined notion agent 
give consider main characteristics negotiation necessary developing applications real world 
presence form conflict resolved decentralized manner agents conditions bounded rationality incomplete information 
furthermore agents communicate iteratively exchange proposals counter proposals 
persuader system sycara rosenschein represent dai researchers negotiation self interested agents 
approaches differ assumptions motivations operationalization 
rosenschein game theory 
utility single issue agents consider agents assumed omniscient 
utility values alternative outcomes represented payoff matrix common knowledge parties negotiation 
party reasons chooses alternative maximize utility 
despite mathematical elegance game theory game theoretic models suffer restrictive assumptions limit applicability realistic problems real world negotiations conducted uncertainty involve multiple criteria single utility dimension utilities agents common knowledge private agents omniscient 
persuader implemented system operates domain labor negotiation 
involves agents union mediator inspired human negotiation 
models iterative exchange proposals counter proposals order parties reach agreement 
negotiation involves multiple issues wages pensions 
agent multi dimensional utility model private common knowledge 
belief revision change agents utilities agreement reached achieved persuasive argumentation 
addition case learning techniques incorporated model 
kraus focuses role time negotiation 
distributed mechanism agents negotiate reach efficient agreements delays 
shown individual approach agent negotiation time affects may determine final agreement reached 
electronic commerce rapidly reality need negotiation techniques take consideration complexities real world incomplete information multiple negotiation issues negotiation deadlines ability break contracts critically needed 
non binding contracts includes decommitment penalties introduced contract net protocol adept system penalty contract violation built negotiation agreement 
important aspect successful interaction self interested agents ability adapt behaviour changing circumstances see survey :10.1.1.1.8859
learning multi agent environment complicated fact agents learn environment effectively changes 
agents actions directly observable action taken learning agent strongly bias range behaviors encountered 
hu wellman characterize agent belief process terms conjectures effect actions 
equilibrium defined agents expectations realized agent responds optimally expectations 
multi agent system agent builds model response 
experimental results show depending starting point agent may better worse attempted learn model agents 
bazaar negotiation model included multi agent learning agent interactions :10.1.1.119.2204:10.1.1.119.2204
benefits learning individual utilities agents joint system utility examined 
experimental results suggest agents learn joint system utility near optimal agents individual utilities similar agent learns agents individual utilities equal joint utility low lower agents learn condition agent learns individual utility increases expense individual utility agents joint utility system agent learning harmful effect 

issues directions important driving forces mas research development internet agents populating internet increasingly rapid pace 
agents invariably need interact order meet designer objectives 
open environments agents coordinate cooperate negotiate example face major challenges able find open environment agents appear disappear unpredictably done able inter operate 
address issue finding agents open environment internet middle agents proposed 
agent advertises capability middle agent 
number different agent types identified including yellow page agents match advertisements requests advertised capabilities blackboard agents collect requests brokers process 
preliminary experiments seen behaviors type middle agent certain performance characteristics 
example brokered systems vulnerable certain failures able cope quickly rapidly fluctuating agent force 
middle agents advantageous allow system operate robustly face agent appearance disappearance intermittent communications 
allow agents inter operate number agent communication languages designed :10.1.1.15.9293
provide set performatives speech acts 
performatives characterize message types efficient languages express message content allows agents understand effectively demonstrated 
ontology problem agents share meaning open 
critical issue effective allocation limited resources multiple agents 
example experienced large time lags response internet queries network congestion 
economics mechanisms utilized mas address problems resource allocation central theme economic research 
economics approaches market mechanisms particular increasingly attractive mas researchers ready availability underlying formal models potential applicability internet commerce 
approaches agents assumed self interested utility maximizers 
areas economics approaches applied mas research date resource allocation task allocation negotiation 
markets agents control scarce resources labor raw materials goods money agree share exchanging respective resources achieve common goal 
resources exchanged explicit prices 
markets assume exchange prices publicly known 
auctions central auctioneer coordination happens 
agents need exchange minimal amounts information 
self interested agents definition simply choose course action maximizes utility 
society self interested agents desired agent maximizes local utility society exhibits desirable behavior words locally behavior implies globally behavior 
goal design mechanisms self interested agents agents follow mechanisms system behavior acceptable 
called mechanism design 
problems facing society self interested agents 
agents overuse shared resource communications network 
problem called tragedy commons 
problem tragedy commons usually solved pricing schemes 
second society self interested computa tional agents exhibit oscillatory chaotic behavior 
complex behavior exhibited simple computational ecosystems 
experimental results indicate imperfect knowledge suppresses oscillatory behavior expense reducing performance 
addition enhancing decision making abilities individuals system improve severely degrade system performance 
systems remain non optimal meta stable states long periods reaching globally optimal state 
similar problem considered 
approaches evaluated corresponding heterogeneous preferences heterogeneous transaction costs 
empirically transaction cost case shown provide stability near optimal payoffs certain conditions 
final problem self interested systems agents order increase individual utility 
may harmful effect society 
mechanism design techniques reported beneficial agents report truth 

applications agent technology rapidly breaking universities research labs solve real world problems range industrial commercial applications 
fielded applications exist today new systems developed increasingly rapid rate 
background purpose section twofold 
aims identify main areas agent approaches currently provide pointers exemplar systems areas section 
secondly aims anticipate directions applied agent highlight open issues need addressed technology fulfill full potential section 

key domains exemplar systems date main areas agent applications reported follows manufacturing process control telecommunication systems air traffic control traffic transportation management information filtering gathering electronic commerce business process management entertainment medical care 
whilst comprehensive review systems areas scope see attempt outline key systems areas 

industrial applications industrial applications agent technology developed today agents applied wide range industrial systems manufacturing parunak describes system manufacturing system applies contract net protocol see manufacturing control 
basic problem described follows 
manufacturing enterprise modelled hierarchy 
example milling grinding painting 
grouped flexible manufacturing systems fms provides functionality assembly paint buffering products 
collection grouped factory 
single organisation may different factories factories may duplicate functionality capabilities 
goal efficiently manage production process plants 
process defined constantly changing parameters products manufactured available resources time constraints 
order achieve enormously complex task adopts multi agent approach factory factory component represented agent 
agent collection plans representing capabilities 
contract net protocol allows tasks production orders delegated individual factories individual factories individual cells 
systems area include configuration design manufacturing products collaborative design scheduling controlling manufacturing operations controlling manufacturing robot determining production sequences factory 
process control process control natural application agents process controllers autonomous reactive systems 
surprising number agent process control applications developed 
best known archon software platform building multi agent systems associated methodology building applications platform 
archon applied process control applications including electricity transportation management application northern spain particle accelerator control 
archon distinction world earliest field tested multi agent systems 
agent process control systems written monitoring diagnosing faults nuclear power plants spacecraft control climate control steel coil processing control 
telecommunications telecommunication systems large distributed networks interconnected components need monitored managed real time 
competitive market telecommunication companies service providers aim distinguish competitors providing better quicker reliable services 
achieve differentiation increasingly turning state art software techniques including agent approaches 
application negotiating agents tackle feature interaction problem 
features telecommunication system provide added functionality top basic communication call forwarding caller id 
new features added phone network increasing rate correspondingly difficult determine features interact inconsistent features 
traditional approach analysing services design time hard wiring solutions possible interaction permutations doomed failure 
situation velthuijsen decided adopt different strategy tackle problem needed basis run time 
employing negotiating agents represent different entities set call 
conflicts detected agents negotiate resolve acceptable call configuration established 
problems agent systems constructed include network control transmission switching service management network management 
see comprehensive review area 
air traffic control lucas describe sophisticated agent realised air traffic control system known oasis 
system undergoing field trials sydney airport australia agents represent aircraft various air traffic control systems operation 
agent metaphor provides useful natural way modelling real world autonomous components 
aircraft enters sydney airspace agent allocated agent instantiated information goals corresponding real world aircraft 
example aircraft goal land certain runway certain time 
air traffic control agents responsible managing system 
oasis implemented belief system called dmars 
transportation systems domain traffic transportation management suited agent approach geographically distributed nature 
example describe multi agent system implementing car pooling application 
types agent representing customers require offer transportation representing stations customers order picked 
customer agents inform relevant stations requirements want go station agent determines requests accommodated car booked 
applications area described 

commercial applications industrial applications tend highly complex systems operate comparatively small niche areas commercial applications especially concerned information management tend oriented mass market 
information management richness diversity information available everyday lives grown need manage information grown 
lack effective information management tools rise colloquially known information overload problem 
put simply sheer volume information available internet world wide web www represents real problem 
potential resource enormous reality disappointing 
reasons 
human factors users getting bored distracted organisational factors poorly organised pages semantic mark conspire users attempting resource systematic way 
characterise information overload problem ways information filtering day enormous amounts information email usenet news example tiny proportion relevant important 
need able sort wheat chaff focus information need 
information gathering volume information available prevents finding information answer specific queries 
need able obtain information meets requirements information collected number different sites 
important contributing factor information overload certainly user required constantly direct management process 
principle reason searches carried agents acting autonomously search web behalf user 
idea compelling projects directed doing exactly probably single active area agent applications 
typical projects maxims electronic mail filtering agent learns prioritise delete forward sort archive mail messages behalf user 
works looking shoulder user works email reading program uses action user performs lesson 
maxims constantly internal predictions user message 
predictions turn inaccurate maxims keeps 
finds having useful degree success predictions starts suggestions user 
warren financial portfolio management system multi agent system integrates information finding filtering context supporting user manage financial portfolio 
system consists agents cooperatively self organize monitor track stock quotes financial news financial analysts reports earnings reports order portfolio owner evolving financial picture 
agents answer relevant queries continuously monitor available information resources occurrence interesting events particular stock gone past threshold alert portfolio manager agent user 
applications area include webmate personal assistant learns user interests basis compiles personal newspaper personal assistant agent automating various user tasks computer desktop home page finder agent web browsing assistant expert locator agent :10.1.1.31.3135
electronic commerce currently commerce entirely driven human interactions humans decide buy goods willing pay 
principle reason commerce automated 
mean commercial decision making placed hands agents 
widespread electronic commerce lie distance increasing amount trade undertaken agents 
example describes simple electronic marketplace called kasbah 
system realises marketplace creating buying selling agents purchased sold respectively 
commercial transactions take place interactions agents 
commerce applications include bargainfinder agent discovers cheapest cds jango personal shopping assistant able search line stores product availability price information magma virtual marketplace electronic commerce agent interactive catalogues 
business process management managers informed decisions combination judgement information departments 
ideally relevant information brought judgement exercised 
obtaining pertinent consistent date information large complex time consuming process 
reason organisations sought develop number systems assist various aspects management business processes 
project adept tackles problem viewing business process community negotiating service providing agents 
agent represents distinct role department enterprise capable providing services 
agents require service agent enter negotiation service obtain mutually acceptable price time degree quality 
successful negotiations result binding agreements agents 
application area include system supply chain management system managing heterogeneous workflows system mobile agents inter organisational workflow management 

entertainment applications leisure industry taken seriously computer science community 
leisure applications frequently seen peripheral serious applications computers 
leisure applications computer games extremely challenging 
agents obvious role computer games interactive theatre related virtual reality applications systems tend full semi autonomous animated characters naturally implemented agents 
games grand cliff built highly successful creatures game agent techniques 
creatures provides rich simulated environment containing number synthetic agents user interact real time 
agents intended sophisticated pets development shaped experiences lifetime 
wavish describe applications agent technology computer games 
interactive theatre cinema interactive theatre cinema mean system allows user play role analogous played real human actors plays films interacting artificial computer characters behavioural characteristics real people 
agents play part humans theatre style applications known believable agents software programs provide illusion life permitting audience suspension disbelief :10.1.1.47.8186
number projects set investigate development agents 

medical applications medical informatics major growth area computer science new applications computers day health industry 
surprising agents applied domain 
earliest applications areas patient monitoring health care 
patient monitoring guardian system intended help manage patient care surgical intensive care unit 
system motivated concerns patient care model essentially team collection experts distinct areas expertise cooperate organise patient health care second important factors patient health care adequate sharing information members critical care team 
particular specialists tend little opportunity monitor minute status patient task tends fall nurses contrast expertise interpret information obtain way appropriate expert 
guardian system distributes patient monitoring function number agents different types perception action agents responsible interface guardian world mapping raw sensor input usable symbolic form translating action requests guardian raw effector control commands reasoning agents responsible organising system decision making process control agents top level control system 
agents organised hierarchies system closely blackboard model control 
health care prototypical agent distributed medical care system described 
system designed integrate patient management process typically involves individuals 
example general practitioner may suspect patient breast cancer suspicion confirmed rejected assistance hospital specialist 
specialist confirms hypothesis care programme devised treating patient involving resources individuals 
system allows natural representation process agents mapped individuals potentially organisations involved patient care process 

directions aforementioned systems considered wave agent applications 
addition providing solutions meet real world needs demonstrate agent systems useful powerful solution technology conception multiple autonomous problem solvers interacting various ways achieve individual system goals useful software engineering abstraction just objects data types 
abstraction useful extent enables software engineers things cheaply 
developments show designing building agent systems difficult 
problems associated building traditional distributed concurrent systems additional difficulties arise having flexible sophisticated interactions autonomous problem solving components 
reasons extant agent system applications built consultation designers developers active agent research community 
whilst may suffice niche software technology feel agents potential far ubiquitous 
firmly believe agent technology potential enter mainstream software engineering solutions way object oriented technology 
occur possible professional software engineers design build multi agent systems 
big question achieved 
time major technical impediments widespread adoption agent technology lack systematic methodology enabling designers clearly specify structure applications multi agent systems ii lack widely available industrial strength multi agent system toolkits 
means extant applications designed fairly ad hoc manner borrowing methodology typically object oriented trying shoe horn multi agent context working methodology designing system intuition past experience 
clearly situation unsatisfactory 
required systematic means analysing problem working best structured multi agent system determining individual agents structured 
impediment means multi agent system projects expend significant development effort building basic infrastructure main thrust agent inter agent development commence 
position 
position alleviated certain extent exploiting existing technologies corba appropriate re inventing wheel happens moment 
believe greater support needed process building features 
toolkit flexible set tools required providing facilities specifying agent problem solving behaviour specifying agents interact visualising debugging problem solving behaviour agents entire system 
major impediment widespread adoption agent technology social technical aspect 
individuals comfortable idea delegating tasks agents trust 
individuals organisations need accustomed confident notion autonomous software components widely 
users gain confidence agents behalf process take time 
period agent strike balance continually seeking guidance needlessly distracting user seeking guidance exceeding authority 
put crudely agent know limitations 

concluding remarks field autonomous agents multi agent systems rapidly expanding area research development 
represents melting pot ideas originating areas distributed computing object oriented systems software engineering artificial intelligence economics sociology organisational science 
core concept autonomous agents interacting individual collective 
basic conceptual framework common currency range closely related disciplines offers natural powerful means analysing designing implementing diverse range software solutions 
past decades number significant conceptual advances design implementation individual autonomous agents way interact 
technologies find way commercial products real world software solutions 
despite obvious potential number fundamental research development issues remain 
indicated issues cover gamut agents field robust scalable solutions full potential agent systems realised 
notes 
noted game theoretic models directly motivated considerations dropping relaxing assumptions 
interesting progress reported literature fundamental framework methodology game theory remains early tell new results reshape current game theoretic framework 

true implemented systems techniques simpler reported literature 

adler davis 
conflict resolution strategies nonhierarchical distributed agents 
gasser huhns editors distributed artificial intelligence volume ii pages 
pitman publishing london morgan kaufmann san mateo ca 

agha 
actors model concurrent computation distributed systems 
mit press cambridge ma 

agha hewitt 
concurrent programming actors 
yonezawa tokoro editors object oriented concurrent programming 
mit press 

agha wegner yonezawa editors 
research directions concurrent object oriented programming 
mit press cambridge ma 

allen hendler tate editors 
readings planning 
morgan kaufmann publishers san mateo ca 

bates 
role emotion believable agents 
communications acm july 

binmore 
fun games text game theory 
heath lexington ma 

bonasso kortenkamp miller slack 
experiences architecture intelligent reactive agents 
wooldridge ller tambe editors intelligent agents ii lnai volume pages 
springer verlag berlin germany 

bond gasser editors 
readings distributed artificial intelligence 
morgan kaufmann publishers san mateo ca 

booch 
object oriented analysis design second edition 
addison wesley reading ma 

bradshaw editor 
software agents 
mit press cambridge ma 

bratman 
intentions plans practical reason 
harvard university press cambridge ma 

bratman 
planning stability intentions 
minds machines 

bratman israel pollack 
plans resource bounded practical reasoning 
computational intelligence 

brooks 
robust layered control system mobile robot 
ieee journal robotics automation 

brooks 
intelligence reason 
proceedings twelfth international joint conference artificial intelligence ijcai pages sydney australia 

brooks 
intelligence representation 
artificial intelligence 

burmeister haddadi 
applications multi agent systems traffic transportation 
iee transactions software engineering february 

griffiths 
cooperating intelligent agents service management communications networks 
editor proceedings workshop cooperating knowledge systems pages 
centre university keele uk 

jones kumar 
open sesame learning agent engine 
applied artificial intelligence 

cammarata mcarthur 
strategies cooperation distributed problem solving 
proceedings eighth international joint conference artificial intelligence ijcai karlsruhe federal republic germany 

chaib draa 
industrial applications distributed ai 
communications acm 

chapman 
planning conjunctive goals 
artificial intelligence 

chavez maes 
kasbah agent marketplace buying selling goods 
proceedings international conference practical application intelligent agents multi agent technology paam pages london uk 

chen katia sycara 
webmate personal agent browsing searching 
proceedings second international conference autonomous agents agents minneapolis st paul mn may 

chung wu 
dynamic scheduling intelligent agents 
application note palo alto ca 

clearwater dixon schroeder 
saving energy market control 
clearwater editor market control pages 
world scientific singapore 

cohen levesque 
teamwork 
nous 

jennings 
archon part electricity transportation management 
ieee expert 

corkill lesser 
meta level control coordination distributed problem solving network 
proceedings eighth international joint conference artificial intelligence ijcai pages karlsruhe germany 

fikes engelmore genesereth mark gruber tenenbaum weber 
pact experiment integrating concurrent engineering systems 
ieee transactions computers 

birmingham 
attribute space representation algorithm concurrent engineering 
ai 

davis smith 
negotiation metaphor distributed problem solving 
artificial intelligence 

decker lesser 
designing family coordination algorithms 
proceedings international conference multi agent systems icmas pages san francisco ca june 

decker sycara williamson 
designing behaviors information agents 
proceedings international conference autonomous agents agents pages marina del rey ca february 

decker sycara williamson 
middle agents internet 
proceedings fifteenth international joint conference artificial intelligence ijcai nagoya japan 

doorenbos etzioni weld 
scaleable comparison shopping agent world wide web 
proceedings international conference autonomous agents agents pages marina del rey ca 

durfee 
coordination distributed problem solvers 
kluwer academic publishers boston ma 

durfee lesser 
negotiating task decomposition allocation partial global planning 
gasser huhns editors distributed artificial intelligence volume ii pages 
pitman publishing london morgan kaufmann san mateo ca 

engelmore morgan editors 
blackboard systems 
addison wesley reading ma 


interface agent network supervision 
proceedings ecai workshop intelligent agents telecom applications budapest hungary 

etzioni 
moving information food chain deploying softbots world wide web 
proceedings thirteenth national conference artificial intelligence aaai portland 

ferguson 
touringmachines architecture dynamic rational mobile agents 
phd thesis clare hall university cambridge uk november 
available technical report university cambridge computer laboratory 

ferguson 
integrated control coordinated behaviour case agent models 
wooldridge jennings editors intelligent agents theories architectures languages lnai volume pages 
springer verlag berlin germany january 

fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 

fischer ller 
cooperative transportation scheduling application domain dai 
applied artificial intelligence 

fisher 
representing executing agent systems 
wooldridge jennings editors intelligent agents theories architectures languages lnai volume pages 
springer verlag berlin germany january 

foner 
entertaining agents sociological case study 
proceedings international conference autonomous agents agents pages marina del rey ca 

foundation intelligent physical agents 
see cselt fipa 

sullivan 
logistics management system integrating decision technologies dispatch scheduling semi conductor manufacturing 
zweben fox editors intelligent scheduling pages 
morgan kaufmann publishers san mateo ca 

fox 
integrated supply chain management system 
technical report department industrial engineering university toronto 

franklin graesser 
agent just program 
ller wooldridge jennings editors intelligent agents iii lnai volume pages 
springer verlag berlin germany 

garijo hoffmann 
multi agent architecture operation maintenance telecommunications networks 
proceedings twelfth international conference ai expert systems natural language pages avignon france 

gasser 
social conceptions knowledge action 
artificial intelligence 

georgeff 
communication interaction multi agent planning 
proceedings third national conference artificial intelligence aaai washington 

georgeff 
distributed multi agent reasoning systems dmars 
technical report australian ai institute level la street melbourne australia 

georgeff lansky 
reactive reasoning planning 
proceedings sixth national conference artificial intelligence aaai pages seattle wa 

grand cliff 
creatures entertainment software agents artificial life 
autonomous agents multi agent systems 

velthuijsen 
negotiating agents approach run time feature interaction resolution 
bouma velthuijsen editors feature interactions telecommunications systems pages 
ios press 

barbara grosz sarit kraus 
collaborative plans complex group actions 
artificial intelligence 

barbara grosz candace sidner 
plans discourse 
phil cohen jerry morgan martha pollack editors intentions communication pages 
mit press ma 

gruber 
translation approach portable ontologies 
knowledge acquisition 

hardin 
tragedy commons 
science 

hayes roth 
blackboard architecture control 
artificial intelligence 

hayes roth 
agents stage advancing state art ai 
proceedings fourteenth international joint conference artificial intelligence ijcai pages montr qu bec canada august 

hayes roth 
multiagent collaboration directed improvisation 
proceedings international conference multi agent systems icmas pages san francisco ca june 

hayes roth washington 
distributing intelligence individual 
gasser huhns editors distributed artificial intelligence volume ii pages 
pitman publishing london morgan kaufmann san mateo ca 

hewitt inman 
dai intelligent agents open systems science 
ieee trans 
smc 

hu michael wellman 
self fulfilling bias multiagent learning 
proceedings second international conference multi agent systems icmas kyoto japan 

huang jennings fox 
agent approach health care management 
applied artificial intelligence 

huberman clearwater 
multiagent system controlling building environments 
proceedings international conference multi agent systems icmas pages san francisco ca june 

huberman hogg 
behavior computational ecologies 
huberman editor ecology computation 
north holland amsterdam 

huhns mukhopadhyay stephens 
dai document retrieval minds project 
huhns editor distributed artificial intelligence pages 
pitman publishing london morgan kaufmann san mateo ca 

huhns singh editors 
readings agents 
morgan kaufmann publishers san mateo ca 

huhns singh 
managing heterogeneous transaction workflows cooperating agents 
jennings wooldridge editors agent technology foundations applications markets 
springer verlag berlin germany 

ingrand georgeff rao 
architecture real time reasoning system control 
ieee expert 

jennings 
commitments conventions foundation coordination multi agent systems 
knowledge engineering review 

jennings 
specification implementation belief desire joint intention architecture collaborative problem solving 
journal intelligent cooperative information systems 

jennings 
controlling cooperative problem solving industrial multi agent systems joint intentions 
artificial intelligence 

jennings campos 
social level characterisation socially responsible agents 
iee transactions software engineering february 

jennings mamdani varga 
archon develop real world dai applications electricity transportation management particle acceleration control 
ieee expert december 

jennings faratin johnson norman brien wiegand 
agent business process management 
international journal cooperative information systems 

jennings wooldridge 
applying agent technology 
jennings wooldridge editors agent technology foundations applications markets 
springer verlag berlin germany 

jordan 
exponential bayesian learning normal form games 
games economic behavior 

kautz selman shah 
hidden web 
ai magazine 

kraus zlotkin 
multiagent negotiation time constraints 
artificial intelligence 

krulwich 
bargainfinder agent comparison price shopping internet 
williams editor bots internet pages 
macmillan computer publishing indianapolis 

kuokka harada 
issues extensions information matchmaking protocols 
international journal cooperative information systems 

levesque lin marcu reiter scherl 
foundations logical approach agent programming 
wooldridge ller tambe editors intelligent agents ii lnai volume pages 
springer verlag berlin germany 

lesser durfee corkill 
trends cooperative distributed problem solving 
ieee transaction knowledge data engineering 

lesser 
retrospective view fa distributed problem solving 
ieee transactions systems man cybernetics special issue distributed artificial intelligence december 

lester stone 
increasing believability animated pedagogical agents 
proceedings international conference autonomous agents agents pages marina del rey ca 

levesque cohen nunes 
acting 
proceedings eighth national conference artificial intelligence aaai pages boston ma 

lieberman 
letizia agent assists web browsing 
proceedings fourteenth international joint conference artificial intelligence ijcai pages montr qu bec canada august 

lucas 
oasis air traffic management system 
proceedings second pacific rim international conference ai pricai seoul korea 

ovum intelligent agents revolution software 

maes 
agents reduce information overload 
communications acm july 

mayfield labrou finin 
evaluating kqml agent communication language 
wooldridge ller tambe editors intelligent agents ii lnai volume pages 
springer verlag berlin germany 

clark 
april agent process interaction language 
wooldridge jennings editors intelligent agents theories architectures languages lnai volume pages 
springer verlag berlin germany january 

merz lieberman lamersdorf 
mobile agents support inter organizational workflow management 
applied artificial intelligence 

mori masuda 
computer control system iron steel plants 
hitachi review 

mullen wellman 
issues design market oriented agents 
wooldridge ller tambe editors intelligent agents ii lnai pages 
springer verlag heidelberg germany 

ller 
design intelligent agents lnai volume 
springer verlag berlin germany 

ller 
modelling interacting agents dynamic environments 
proceedings eleventh european conference artificial intelligence ecai pages amsterdam netherlands 

roger myerson 
credible negotiation statements coherent plans 
journal economic theory 


digital 
stoughton 

newell 
knowledge level 
artificial intelligence 

newell simon 
gps program simulates human thought 

oldenbourg kg 

allen newell 
unified theories cognition 
harvard university press 

kuwabara suda ishida 
distributed channel allocation atm networks 
proceedings ieee globecom conference pages houston tx 

hare jennings editors 
foundations distributed artificial intelligence 
wiley interscience new york 

oliveira fonseca steiger 
dai resource management system 
applied artificial intelligence 

petersen 
reactive motion planning multi agent approach 
applied artificial intelligence 

parunak 
industrial practical applications dai 
wei editor multi agent systems 
mit press cambridge ma 

parunak baker clark 
agent architecture example agent system design 
proceedings international conference autonomous agents agents pages marina del rey ca 

parunak ward fleischer sauter 
marketplace design agents distributed concurrent set design 
proceedings fourth international conference concurrent engineering research applications 

varga jennings 
archon particle accelerator control 
ieee expert 

pollack ringuette 
introducing tileworld experimentally evaluating agent architectures 
proceedings eighth national conference artificial intelligence aaai pages boston ma 

rao georgeff 
intelligent real time network management 
proceedings tenth international conference ai expert systems natural language avignon france 

rao georgeff 
modeling rational agents bdi architecture 
fikes sandewall editors proceedings knowledge representation reasoning kr pages 
morgan kaufmann publishers san mateo ca april 

rao georgeff 
architecture rational agents 
rich swartout nebel editors proceedings knowledge representation reasoning kr pages 

rich sidner 
collagen agents collaborate people 
proceedings international conference autonomous agents agents marina del rey ca 

rosenschein 
rational interaction cooperation intelligent agents 
phd thesis computer science department stanford university stanford ca 

rosenschein zlotkin 
rules encounter designing conventions automated negotiation computers 
mit press boston ma 

russell norvig 
artificial intelligence modern approach 
prentice hall 

russell subramanian 
provably bounded optimal agents 
journal ai research 

sandholm lesser 
issues automated electronic commerce extending contract net protocol 
proc 
int 
conf 
multiagent systems icmas june 

tuomas sandholm 
implementation contract net protocol marginal cost calculations 
proceedings eleventh national conference artificial intelligence pages washington july 

schoonderwoerd holland bruten 
ant agents load balancing telecommunications networks 
proceedings international conference autonomous agents agents pages marina del rey ca 

van de velde 
software agent foundation dynamic interactive electronic catalogues 
applied artificial intelligence 

quan 
enhancing performance cooperating agents real time diagnostic systems 
proceedings thirteenth international joint conference artificial intelligence ijcai pages chamb ry france 

searle 
speech acts essay philosophy language 
cambridge university press cambridge england 

shoham 
agent oriented programming 
artificial intelligence 

shortliffe 
computer medical consultations 
elsevier science publishers amsterdam netherlands 

smith cohen 
semantics agent communication language speech acts 
proceedings thirteenth national conference artificial intelligence aaai portland 

ller 
multi agent system designing flexible assembly lines 
applied artificial intelligence 

steels 
cooperation distributed agents self organization 
demazeau ller editors decentralized ai proceedings european workshop modelling autonomous agents multi agent world maamaw pages 
elsevier science publishers amsterdam netherlands 

stone veloso 
multiagent systems survey machine learning perspective 
ieee transactions knowledge data engineering forthcoming 

sycara 
negotiation planning ai approach 
european journal operational research 

sycara 
resolving goal conflicts negotiation 
proceedings seventh national conference artificial intelligence aaai st paul mn 

sycara 
persuasive argumentation negotiation 
theory decision 

takahashi 
intelligent pages collecting shop service information software agents 
applied artificial intelligence 

tambe 
recursive agent agent group tracking real time dynamic environment 
proceedings international conference multi agent systems pages san francisco june 
aaai press 

milind tambe 
flexible teamwork 
journal artificial intelligence research 

thomas sycara 
stability heterogeneity multi agent systems 
proceedings third international conference multi agent systems icmas paris france july 

trappl petta 
creating personalities synthetic actors 
springer verlag berlin germany 

gini mobasher 
magma agent virtual marketplace electronic commerce 
applied artificial intelligence 

van dyke parunak 
manufacturing experience contract net 
huhns editor distributed artificial intelligence pages 
pitman publishing london morgan kaufmann san mateo ca 

manuela veloso peter stone han achim 
cmunited team robotic soccer agents collaborating adversarial environment 
proceedings international workshop robocup nagoya japan august 


wang wang 
intelligent agents nuclear industry 
ieee computer 

wavish graham 
situated action approach implementing characters computer games 
applied artificial intelligence 

sheridan 
distributed architecture cooperative management strategic communications networks 
proceedings iee milcom conference boston ma 

velthuijsen 
intelligent agents telecommunications 
jennings wooldridge editors agent technology foundations applications markets 
springer verlag berlin germany 

wei editor 
multi agent systems 
mit press cambridge ma 

wilkins 
practical planning extending classical ai planning paradigm 
morgan kaufmann publishers san mateo ca 

wooldridge 
agent software engineering 
iee transactions software engineering february 

wooldridge bussmann 
production sequencing negotiation 
proceedings international conference practical application intelligent agents multi agent technology paam pages london uk april 

wooldridge jennings 
intelligent agents theory practice 
knowledge engineering review 

zeng katia sycara 
benefits learning negotiation 
proceedings aaai providence rhode island 

zeng katia sycara 
bayesian learning negotiation 
international journal human computer studies press 
