anomaly detection web attacks web vulnerabilities represent substantial por tion security exposures computer networks 
order detect known web attacks systems equipped large number signatures 
unfortunately difficult keep daily disclosure web related vulnerabilities addition vulnerabilities may intro duced installation specific web applications 
misuse detection systems mented anomaly detection systems 
presents intrusion detection system uses num ber different anomaly detection techniques detect attacks web servers web applica tions 
system correlates server side programs referenced client queries parameters con tained queries 
application specific characteristics parameters allow system form focused analysis produce reduced number false positives 
system derives parameter profiles associated web applications length structure parameters fromthe analyzed data 
deployed different application environments perform time consuming tuning configuration 
keywords anomaly detection world wide web network security 
web servers web applications lar attack targets 
web servers usually accessible corporate firewalls web applications developed security methodology 
attacks exploit web servers server extensions programs common gateway interface active server pages represent substantial por tion total number vulnerabilities :10.1.1.33.60
example period april march web related vulnerabilities accounted total number vulnerabilities disclosed addition large installation base web applications servers privileged target exploit web related vulnerabilities spread networks 
detect web attacks intrusion idss configured number signatures support detection known attacks example time writing snort devotes signatures detect web 
unfortunately hard keep intrusion detection signature sets updated respect vulnerabilities discovered daily 
addition vulnerabilities may introduced applications developed house 
developing ad hoc signatures detect attacks time intensive error prone activity requires substantial security expertise 
overcome issues misuse detection composed anomaly detection systems support detection new attacks 
addi tion anomaly detection systems trained detect attacks custom developed web ap plications 
unfortunately best knowledge available anomaly detection detect attacks web servers webbased applications 
presents anomaly detection detects web attacks number different techniques 
anomaly detection system input web server log files conform common log format produces anomaly web requests 
precisely analysis techniques tool take advantage par ticular structure queries contain parameters 
parameters queries compared profiles specific program active document referenced 
approach sup ports focused analysis respect generic anomaly detection techniques take ac count specific program invoked 
structured follows 
section presents related detection web attacks anomaly detection general 
section describes model data analyzed intrusion detection system 
section presents detection techniques 
section contains experimental evaluation system real world data discusses results obtained far limitations approach 
sec tion draws outlines 
related anomaly detection relies models users applications interprets deviations normal behavior evidence ma activity :10.1.1.94.6821:10.1.1.39.5901
approach complementary respect misuse detection anumber attack descriptions usually form signatures matched stream looking evidence modeled attacks occurring basic assumption underlying anomaly detection attack patterns differ normal behavior :10.1.1.116.8880:10.1.1.17.9158
anomaly detection assumes difference expressed quantitatively 
sumptions techniques proposed analyze different data streams data mining network traffic statistical analysis sequence analysis operating system calls particular relevance described techniques learn detection parameters fromthe analyzed data 
instance framework developed lee provides guidelines useful building intrusion classification models 
approach uses labeled data best set features intrusion detection approach described similar lee relies set selected perform classification link analysis data 
hand approach different cause rely labeling attacks training data order derive features threshold values detection 
learning process purely past data 
data model anomaly detection approach analyzes re quests logged common web servers apache 
specifically analysis fo get requests parameters pass values server side programs active documents 
nei ther header data get requests post head requests taken account formally input detection process consists ordered set fu extracted successful get requests requests return code greater equal uri ui expressed composition ofthe path desired resource path information component string 
query string pass pa rameters referenced resource identified leading character 
query string con sists ordered list pairs parameters nov get scripts access pl user cred admin path sample web server access log entry tributes corresponding values 
vn ai setof attributes vi string 
set sq subset attributes query fig ure shows example entry web server log corresponding elements 
example query sq fa analysis process focuses association programs parameters values 
contain query string irrelevant removed addition uris partitioned subsets ur resource path 
referred program assigned set corresponding queries ur 
detection algorithms run set queries ur independently 
means model ing detection process performed separately program text term request refers requests queries 
terms parameter attribute query interchangeably 
detection models anomaly detection process uses number dif ferent models identify anomalous entries set input requests ur associated program model set procedures evaluate certain feature query attribute string attribute value certain feature query presence absence 
model associated attribute set attributes program means pro file 
consider example string length model username attribute login program 
case profile string length model normal string length feature value user name attribute login program depending type model task assign probability value query attributes 
probability value reflects probability occurrence feature regards established profile 
assumption feature values sufficiently low probability abnormal values indicate potential attack 
model outputs probability val ues query individual attributes decision query reported attack normal 
decision reached calculating anomaly score individually attribute query 
anomaly scores query oneof attributes exceed detection threshold determined training phase see marked anomalous 
necessary prevent attackers hiding single malicious tribute query normal attributes 
anomaly scores query derived probability values returned corresponding models associated attributes 
anomaly score value calculated weighted sum shown equa tion 
equation wm represents weight sociated model pm returned prob ability value 
probability pm subtracted value close zero indicates anomalous event yield high anomaly score 
anomaly score models wm lambda gamma pm model operate modes detection 
training phase required determine characteristics normal events feature specific model establish anomaly score thresholds regular anomalous inputs 
phase divided steps 
step sys tem creates profiles server side program attributes 
second step suitable thresh olds established 
done evaluating queries attributes profiles created step 
program attributes highest anomaly score stored set value certain adjustable percentage higher maximum 
default setting experiments 
modifying value user adjust ity system perform trade number false positives expected 
length training phase number queries attributes utilized es profiles thresholds determined adjustable parameter profiles created models learned characteristics suitable thresholds derived system switches detection mode 
mode anomaly scores calculated anomalous queries reported sections describe algorithms analyze features considered relevant de malicious activity 
algorithm explanation model creation process learn ing phase included 
addition mechanism derive probability value new input element detection phase discussed 
attribute length cases length query attribute detect anomalous requests 
usually parameters fixed sized tokens session iden short strings derived human input fields html form 
length ofthe parameter values vary requests associated certain program 
look different malicious input passed program 
example overflow buffer application necessary ship shell code additional padding depending length buffer 
consequence attribute contains bytes goal model approximate actual unknown distribution parameter lengths instances significantly deviate observed normal behavior 
clearly expect thatthe probability density function underlying real distribution follow smooth curve 
assume large variance 
model able identify 
learning approximate mean variance oe ofthe real attribute length distribution calculating sample mean sample variance oe ln parameters processed dur ing learning phase assuming attribute processed 
detection estimated query attribute length parameters oe determined previ ous learning phase task detection phase assess regularity parameter length probability calculated inequality shown 
jx gamma oe chebyshev inequality puts upper bound onthe probability difference value random variable exceeds certain thresh old arbitrary distribution variance oe mean upper bound strict ad vantage assume certain underlying distribution 
substitute threshold dis tance attribute length mean attribute length distribution jl gamma 
obtain upper bound probability length parameter deviates current instance 
resulting probability value attribute length shown 
jx gamma jl gamma oe gamma value returned model oper ating detection mode 
chebyshev inequality independent underlying distribution com puted bound general weak 
applied model weak bound results high degree tol erance deviations attribute lengths empirical mean variance 
undesirable situations leads reduced number false alarms case flagged suspicious 
attribute character distribution attribute character distribution model captures normal regular query parameter looking character distribution 
approach observation attributes regular structure human readable contain printable characters 
large percentage characters drawn small subset possible bit values mainly letters numbers characters 
english text characters uniformly distributed occur 
obviously expected frequency distribution identical text 
frequency certain character frequency letter varies consider ably different attributes 
similarities character frequencies parameters 
apparent relative frequencies possible characters descending order 
algorithm frequency val ues rely distributions particular characters 
character occurrences 
sorted relative char frequencies attribute called character distribution example consider parameter string passwd corresponding ascii values 
absolute frequency distribution absolute counts transformed sorted relative frequencies character distri bution resulting values followed occurring times attribute legitimate query expect relative frequencies slowly decrease value case malicious input frequencies drop extremely fast peak caused bya high frequency single character nearly case nearly uniform character distri bution 
character distribution attribute normal non anomalous called attribute idealized character distribution icd 
character distribution discrete distribution icd 
fn fp rj icd 
relative frequency character denoting maximum icd 
character distribution parameter passwd interpreted ide character distribution icd icd icd value contrast signature approaches model advantage known attempts hide malicious code side string 
fact signature systems rules raise alarm long sequences bytes nop operation intel detected packet 
intruder may substitute sequences instructions similar behavior add ra ra value register stores result back 
doing possible pre vent signature systems detecting attack 
sequences cause attribute character distribution character distribution analysis yields score 
addition characters malicious input disguised xor ing shifting fixed value rot code 
case payload con tains small routine clear text task decrypting launching primary attack code 
attempts change resulting character distribution anomaly score parameter unaffected 
learning idealized character distribution determined dur ing training phase 
observed query attribute character distribution stored 
ide character distribution approximated calculating average stored character distri butions 
done setting icd nth entry stored character distributions individual charac ter distributions sum unity average 
ensures idealized defined 
detection idealized character distribution icd detection phase determine probability character distribution query attribute sample drawn icd 
probability precisely confidence hypothesis character distribution sample ideal ized character distribution calculated statistical test test yield high confidence correctness hypothesis normal non anomalous attributes reject anomalous ones 
detection algorithm uses variant test goodness fit test intended statistical calculations necessary operate values icd directly 
stead consider small number intervals bins 
example assume domain icd divided segments shown table choice bins somewhat arbitrary significant impact results 
segment values table bins test expected relative frequency characters easily determined adding values icd corresponding values 
relative frequencies sorted descending order expected values icd anomaly score small 
clearly reflected division icd main 
new query attribute analyzed numberof occurrences character string determined 
afterward values sorted combined table aggregating values belong segment 
test calculate probability thatthe sample drawn idealized character distribution 
standard test requires steps performed 

calculate observed expected frequencies number particular relevance field anomaly detection 
observed values oi bin ready 
expected number occurrences ei calculated multiplying relative fre bins determined icd times length attribute string 

compute value pi oi gamma ei ei note ranges bins 

determine degrees freedom obtain degrees freedom test identical number formula minus yields forthe bins 
actual probability thatthe sample derived idealized character distribution significance read predefined table value index 
derived value return value model 
probability sample drawn idealized character distribution creases increases 
structural inference manifestation exploit query attributes unusually long parameters parameters contain repetitions non 
anomalies easily identifiable mechanisms explained 
situations attacker craft attack manner manifestation appear regular 
example non printable characters replaced groups printable characters 
situations need model query attribute contains evidence attack 
model acquired parameter structure 
purposes structure parameter regular grammar normal legitimate values 
learning structural inference applied query tribute resulting grammar able produce training examples 
unfortunately unique grammar derived set input elements 
negative examples elements derivable grammar possible create gram mar contains exactly training data grammar allows production arbitrary strings 
case form simplification resulting grammar able derive learned providing level abstraction 
means new information deduced 
second form generalization grammar capable producing possible strings structural information left 
basic approach structural generalize grammar long reasonable structural formation lost 
notion reasonable generalization specified help markov bayesian probability 
step consider set training items query attributes stored training phase output probabilistic grammar 
tic grammar grammar assigns probabilities productions 
means produced 
fits evidence gathered query parame ters 
values appear important information lost mod eling step 
probabilistic regular grammar non deterministic finite automaton nfa 
state automaton set ns possible put symbols emitted probability ps 
transition marked probability characterizes likelihood taken 
automaton probabilities associated symbol emissions transitions considered markov model 
output markov model consists start state terminal state 
probability value assigned output word thatis sequence output symbols ok 
value shown equation calculated sum probabilities distinct automaton produce probabil ity single path product probabilities emitted symbols psi oi taken transitions ti 
probabilities possible output words 
ok paths states psi oi lambda ti example consider nfa 
cal probability word ab sum probabilities possible paths fol lows left arrow follows right 
start state emits symbol probabilityof 
equation result start terminal markov model example lambda lambda lambda lambda lambda lambda lambda lambda lambda lambda target structural inference process nfa highest likelihood training elements 
excellent technique markov model empirical data explained 
uses bayesian theorem state goal odel lambda odel probability training data considered factor equation subsequently ignored 
interested maximizing pos probability left hand side equation maximize product shown right hand side equation 
term probability training data model calculated certain automaton certain model adding probabil ities calculated input training element discussed 
second term prior probabilityof model straightforward 
reflect fact general smaller models preferred model probability calculated heuristically takes account total number states number transitions trans emit state justified smaller models described states fewer emissions transitions 
derived shown equation 
odel states trans lambda emit term maximized product model data times prior probability model reflects conflict simple models tend generalize models perfectly fit complex 
models simple high model prob ability likelihood producing training data extremely low 
yields small product terms multiplied 
models complex high likelihood producing model contains training input abstractions probabilityof model low 
maximizing product bayesian model induction approach cre ates generalize reflect general structure input discarding information 
model building process starts ton exactly reflects input data gradually merges states 
state merging contin posteriori probability longer increases 
number optimizations suchas viterbi path approximation path prefix compression need applied pro cess effective 
interested reader referred details 
detection markov model built detection phase evaluate query attributes determining probability 
probability tribute calculated way similar likelihood training item shown equation 
probability value options 
directly return derived value decision pro cess 
probability values possible input words sum individual probability small 
legitimate input regularly seen training phase receive avery small value 
chose option change return value valid output markov model return value derived grammar 
token finder purpose token finder model deter mine values certain query attribute drawn limited set possible alternatives tokens elements enumeration 
web applications require pos sible values certain query attributes flags indices 
malicious user attempts attributes pass illegal values application attack detected 
enumeration canbe identified assumed attribute values random random identifiers query 
learning classification argument random identifier observation number different occurrences bound unknown threshold enumeration unrestricted case random identifiers number different argument instances grows proportional total number argument stances random identifiers indicated 
increase observed assume 
formally decide argument ais enumeration calculate statistical correlation ae values functions numbers occurrences defined follows 

gamma xth value new gamma gamma xth value seen correlation parameter ae derived data processed 
calculated respective variances var var covariance covar shown 
ae covar pvar lambda var ae negatively cor related enumeration assumed 
motivated fact case increasing func tion values reflecting increasing number parameters correlate decreasing values reflecting fact argument previously occurred 
opposite case ae greater values variation support hypothesis drawn small set predefined tokens enumeration assumed complete set identifiers stored detection phase 
detection determined values query tribute tokens drawn enumeration new value expected appear set known identi 
returned 
assumed parameter values random iden model returns 
attribute presence absence time server side programs di rectly invoked users typing input parameters uris 
client side pro grams scripts html forms pre process data transform suitable request 
process ing step usually results high regularity number name order parameters 
empirical ev shows hand crafted attacks focus exploiting vulnerability code processes cer tain parameter value little attention paid order completeness parameters 
analysis takes advantage fact deviate way parameters legitimate client side scripts programs type anomaly detected different algorithms 
described section deals presence absence attributes query second parameters discussed section 
note models differ pre vious ones way analysis done query utilizing parameters parameter 
algorithm discussed assumes thatthe absence abnormal presence parameters query indicate malicious behavior particular argument needed server side program missing mutually exclusive request considered anomalous 
learning test presence absence parameters cre ates model acceptable subsets attributes appear simultaneously query 
done distinct subset sq fai seen training phase 
detection detection phase algorithm performs foreach query lookup current attribute set 
set parameters encountered phase returned 
attribute order discussed previous section legitimate cations server side programs contain parameters order 
program logic relative order attributes preserved parameters omitted 
case hand crafted requests order chosen human arbitrary influence execution program 
test parameter order query order attributes consistent model deduced learning phase 
learning order constraints attributes ai query gathered train ing phase 
attribute program precedes attribute appear inthe parameter list query ordered list attributes appear 
definition allows introduce set attribute pairs ai aj ai precedes aj ai aj set attribute pairs determined fol lows 
consider directed graph numberof vertices equal number distinct attributes 
vertex vi associated correspond ing attribute ai 
query qj analyzed training period ordered list attributes ai processed 
foreach attribute pair list directed edge inserted vs vt learning process graph con tains order constraints imposed queries training data 
order dependencies represented direct edge connecting corresponding vertices path series directed edges 
point graph potentially contain cycles precedence relationships attributes derived different queries 
relationships im possible removed final order constraints determined 
done help tarjan algorithm strongly connected components sccs foreach component edges connecting vertices scc removed 
resulting graph utilized determine set attribute pairs precedes relationship 
thisis obtained enumerating vertex vi nodes vg vh adding pairs ai ag ai ah detection detection process checks query satisfy order constraints deduced learning phase 
query attributes ai set order constraints pairs aj ak analyzed detect potential violations 
violation occurs single pair aj ak cor responding pair swapped elements ak aj case algorithm returns score returns 
evaluation section discusses approach validate models evaluate detection effectiveness system 
assess ity models accurately capture properties analyzed attributes ability potentially malicious deviations 
evaluation performed data sets data sets apache log files production web server google com puter science department web servers located university california santa barbara ucsb andthe technical university vienna tu vienna 
full access log files univer 
access log file google restricted privacy issues 
obtain re sults data set tool run behalf locally google results mailed 
data set time interval size mbyte queries program requests attributes programs google hour ucsb days tu vienna days table data set properties structure attribute token attribute presence query order query data set normal anomalous normal anomalous normal anomalous normal anomalous google ucsb tu vienna table probability values table provides information important prop erties data sets 
table shows time interval data recorded log 
lists total number queries log file number requests invoke server side programs cgi requests total number attributes number different server side programs 
model validation section shows validity claim models able accurately describe properties query attributes 
purpose detec tion tool run data sets determine distribution probability values differ ent models 
length training phase set experiments 
system queries invoked certain server side program profiles determine suitable detection thresholds 
show distribution assigned query attributes length character distribution models respectively 
axis shows percentage attribute values appeared specific probabil ity 
figures aggregated probability values real numbers interval bins bin covering interval 
probabilities interval added bin values added second bin 
note probability indicates completely normal event 
relative number occur shown logarithmic scale 
table shows number attributes rated normal probability anomalous probability token finder model 
table provides number queries normal anomalous presence absence model attribute order model 
number number attributes relative number attribute values probability values tu vienna attribute length relative number attribute values probability values tu vienna attribute character distribution data set number alerts number queries false positive rate alarms day google ucsb tu vienna table false positive rates query contain multiple attributes distributions anomaly scores table show models capa ble capturing normality corresponding features 
vast majority analyzed classified normal reflected anomaly score close figures instances de established profiles 
graphs quickly drop instances bin values 
seen data collected shows highest variability especially case attribute length model 
due google search string included distribution 
naturally string users web browsers issue google search request varies great extent 
detection effectiveness section analyzes number hits false pos raised operation tool 
assess number false positives system deployed intrusion detection system run data sets 
experiment assumed training data contains real attacks 
original log significant number entries nimda code red worm attacks queries model building detection process 
note due fact apache server 
web server fails locate targeted vulnerable program fails execute 
include queries result invocation existing programs training detection process worm attacks ignored 
false positive rate easily calculated number reported anomalous queries total number analyzed queries 
shown foreach data set table 
relative numbers false positives sim ilar sites absolute numbers differ tremendously reflecting different web 
alerts day google server appears high number glance take account initial result 
alerts raw output system training phase parameters chosen university log files 
possibility number change training detection thresholds account higher variability inthe google traffic 
nearly half number false positives caused anomalous search strings instances non printable characters probably requests issued users incompatible charac ter sets extremely long strings urls directly pasted search field 
ity perform post processing output signature intrusion detection system anomalous queries known deviations 
addition completely impossible deal amount alerts manually 
full time employees browse list alerts quickly dis obviously incorrect instances concentrating suspicious ones 
attack class length char 
distr 
structure token presence order buffer overflow directory traversal xss cross site scripting input validation code red table detection capabilities analyzing output files encountered anomalous queries attributes malicious interpreted correct way 
example tool reported character string afield application transmit index 
discussing queries administrators sites concluded mistakes may introduced users system purposes security 
estimating false alarm rates tool analyzed 
experiment number attacks introduced set tu vienna 
chosen data set insert attacks reasons 
log file inject queries impossible google data set 
second programs attacked installed site regularly 
base evaluation real world training data eleven real world exploits downloaded popular security sites experi ment 
set attacks consisted buffer overflow php message board traversal attacks xss cross site scripting exploits launched imp web email client exploits search utility 
web directory service variations input validation errors 
wanted assess ability detect worms nimda code red 
mentioned log files cre ated apache web servers 
apache vulnerable attacks worms exploit ities microsoft internet information server iis 
solved problem installing microsoft manually creating training data vulnerable program injecting signature codered attack 
transformed log file apache format run system eleven attacks code red worm reliably detected anomaly detection sys tem thresholds training data evaluate false alarm rate dataset 
attacks known existing code unmodified 
malicious queries injected log files experiment model designed false alarm rate assessed 
manual tuning adjustment neces sary 
table shows models reported query anomalous attribute class attacks 
evident model alert attacks 
underlines importance choosing combining different proper ties queries attributes cover large number possible attack venues length model character distribution model structural model effective broad range attacks inject substantial malicious payload attribute string 
attacks buffer overflow exploits including codered worm bases spreading mechanism buffer overflow microsoft iis cross attempts require substantial amount characters increasing attribute length notice ably 
human operator easily tell maliciously modified attribute look right observation reflected anomalous character distribution structure differs previ ously established profile 
input validation errors including directory harder detect 
required number characters smaller number needed overflow xss exploits range legitimate attribute 
directory traversal unusual structure attribute string repetitions slashes dots anomalous structure character distribution 
unfortunately true input validation prob lems general 
attacks exploit error result anomalous character distribution model structural model 
particular case raised alert different values involved attribute encountered training phase 
presence absence parameter effort adversary sufficient knowledge legitimate query 
note available exploits experiments resulted models cases buffer overflow directory traversal input validation attacks 
decided include models intrusion detec tion system especially account low number false alarms 
results section show able detect high percentage attacks limited number false positives attacks false alarms exper iments 
attacks detectable signature intrusion detection systems represent variations known attacks code red buffer overflows 
malicious manipulation query parameters signature system tice correctly flagged anomaly detection system 
limitation system reliance web ac cess logs 
attacks compromise security web server logging performed may 
approach described advocates direct instrumentation web servers order form timely detection attacks query processed 
approach may introduce un wanted delay certain cases delay acceptable system described fit model 
web attacks addressed tools compose precision detection flexibility anomaly detection system 
introduces novel approach detection input queries containing parameters 
ways 
best knowledge anomaly detection system specif ically tailored detection web attacks 
second system takes advantage application specific correlation server side programs parameters invocation 
third pa rameter characteristics length structure learned input data 
ideally system installation specific configuration level sensitivity anomalous data canbe configured thresholds suit different site policies 
system tested data gathered universities united states europe 
focus number false positives refining algorithms developed far looking additional features ultimate goal able perform anomaly detection real time web sites process queries day virtually false alarms 

application integrated data collection security monitoring 
proceedings advances detection raid lncs pages davis ca october 
springer 
apache documentation 
www apache org 
patrick billingsley 
probability measure wiley interscience edition april 
cert cc 
code red worm exploiting iis indexing service dll 
advisory ca july 
cgi security homepage www com 
robinson 
www interface version 
internet draft june 

www net 

www uk 
denning 
intrusion detection model ieee transactions software engineering february 
fielding hypertext transfer protocol 
rfc june 
forrest 
sense self unix processes proceedings ieee symposium security privacy pages oakland ca may 
ghosh charron 
de anomalous unknown intrusions programs 
proceedings security application conference acsac pages scottsdale az de 
ilgun kemmerer porras 
analysis rule intrusion detection system 
ieee transactions march 
imp client 
www org imp 
javitz valdes 
sri ides sta tistical anomaly detector 
proceedings ieee symposium security privacy may 
ko levitt 
execu tion monitoring security critical programs distributed systems specification ap proach 
proceedings ieee symposium security privacy pages may 
toth 
service spe cific anomaly detection network intrusion detection 
symposium applied computing sac 
acm scientific press march 
lane brodley 
temporal data reduction anomaly detection 
proceedings th acm confer ence computer communications security pages 
acm press 
lee stolfo 
framework con features models intrusion de tection systems 
acm transactions informa tion system security november 
lee stolfo mok 
mining data flow environment experience network intrusion detection 
proceedings th international conference knowledge discovery data mining kdd ca august 
liberty :10.1.1.33.60
net 
reilly february 
porras 
detecting com puter network misuse expert system toolset best 
security privacy pages oakland california may 

www 
com 
paxson 
bro system detecting real time 
proceedings th usenix security symposium san antonio tx january 
php message board 
www org 
php advisory homepage www com 

snort lightweight intrusion detec tion networks 
proceedings usenix lisa conference november 
security focus homepage www securityfocus com 
andreas stolcke stephen omohundro 
hid model induction bayesian model merging 
advances neural information pro cessing systems 
andreas stolcke stephen omohundro 
probabilistic grammars bayesian model merging 
international conference inference 
tan maxion 

defining limits stide anomaly intrusion detector 
proceedings security privacy pages oakland ca may 
robert tarjan 
depth search algorithms 
siam journal computing june 
security tracker 
vulnerability statis tics april march 
www com learn statistics html april 

