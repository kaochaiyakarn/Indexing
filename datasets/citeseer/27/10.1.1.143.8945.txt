proc 
international joint conference artificial intelligence ijcai 
efficient failure detection mobile robots particle filters gaussian process proposals christian dieter fox wolfram burgard albert university university washington department computer science department computer science engineering freiburg germany seattle wa usa burgard informatik uni freiburg de fox cs washington edu ability detect failures analyze causes preconditions truly autonomous mobile robots 
especially online failure detection complex task effects failures typically difficult model resemble noisy system behavior fault free operational mode 
extremely low priori likelihood failures poses additional challenges detection algorithms 
approach applies gaussian process classification regression techniques learning highly effective proposal distributions particle filter applied track state system 
result efficiency robustness state estimation process substantially improved 
practical experiments carried real robot demonstrate system capable detecting collisions unseen obstacles time estimating changing point contact obstacle 
detection reaction unforeseen failure events fundamental ability autonomous systems improper treatment situations may cause loss control possibly harm system environment 
consider example mobile service robot collides low planetary rover hits small rock 
situations mobile robot able detect unexpected event quickly infer cause event order react appropriately 
successful previous approaches online failure detection problem sequential monte carlo method 
typically track multiple system modes parallel decide probable 
crucial problem sampling approaches especially real time scenarios lies high dimensionality state space tracked low frequency unpredictability failure events 
increase efficiency sample representations different techniques lookahead sampling de freitas risk sensitive sampling thrun hierarchical sampling verma proposed 
propose alternative approach gaussian processes gp learn proposal distributions represent informed guesses failure mode parameters 
demonstrate gp classification predict discrete failure modes gp regression model continuous failure parameters 
gaussian processes provide full predictive distributions including predictive uncertainties readily proposal distributions particle filter implementation 
including sensor measurements received robot proposals seen approximation optimal proposals respective state variables 
system require additional hardware inertial sensors bumper rings may expensive unfavorable certain domains aerial 
proposed algorithm implemented real robot executed real time 
discuss results test runs realistic scenarios compared achievable detection rates pose tracking quality system optimized standard particle filter implementation informed proposals 
organized follows 
discussing related describe particle filters sequential state estimation failure detection section 
gaussian process proposals introduced section followed experimental results 
related close coupling mobile system environment hard detect abnormal behavior instantaneous statistical tests tracking possible failure modes time dearden clancy 
reason probabilistic state tracking techniques applied problem 
particle filters represent belief state system set state samples thrun 
particle filter approaches fault diagnosis system typically modeled non linear markov jump process dynamic mixture linear processes de freitas 
look ahead particle filter introduced approximates optimal proposal distribution considering sensor measurements contrast focuses case discrete failure modes continuous failure graphical model dynamic system view left detailed form right system states st split include discrete failure mode ft failure parameters ot robot state xt 
parameters 
combine approaches livingstone system particle filter state estimation techniques 
verma introduce variable resolution particle filter failure detection 
approach build abstraction hierarchy system models 
models consideration build partition complete state space hierarchy defined terms behavioral similarity 
different kind model abstraction hierarchy explicit model assumptions developed detect failures online 
approaches deal time efficiency particle filters include kwok real time constraints considered single system models 
gaussian processes widely studied machine learning community 
excellent introductions mackay rasmussen 
girard gaussian process model multiple step ahead prediction time series 
classification models discussed neal 
application gaussian processes localization signals wireless phone network 
sequential state estimation temporal evolution dynamic systems mobile robots described graphical model depicted left diagram 
st denotes state system time zt stands received sensor measurements ut issued control command 
modeled independence assumptions state system evaluated recursively bayes filter formalism thrun st zt st observation model st st ut transition model st dst recursive term particle filters widely sample implementation recursive filter 
represent state system set weighted samples 
sample representation integral equation simplifies finite sum samples resulting previous iteration 
transition model observation model applied directly predict weight individual samples respectively 
modeling failure events parameters dynamic systems influence external internal failure events state st system split include discrete failure mode ft continuous failure parameters ot remaining part robot state xt 
assume commonly constant failure rate model see ng failure event depend rest system 
right diagram shows underlying graphical model 
observations independent failure state ft ot state xt robot observation model simplifies zt st zt xt 
transition model factorized st xt ft ot ft ft ot ft xt ot xt ot xt ut 
failure event model failure parameter model robot motion model constant failure rate model states failure events distributed exponentially depending failure rate parameter ft denotes time failure event 
easily shown model mean time failures mtbf realistic failure rates model results extremely low failure probabilities filter iteration 
assume example mean time minutes collisions service robot unseen obstacles 
implies filter frequency seconds yields failure probability ft ft iteration 
small value just particles jump failure mode average 
need extremely large particle set risk failures remain undetected 
problem amplified fact discrete failure mode sampled unknown continuous failure parameters 
general prior knowledge parameters randomly occurring failures assume uniform distribution ot ft xt ot ot certain interval 
note model applies case system transitions failure state 
evolution failure parameters failure state typically governed peaked distribution similar motion model robot 
section describe model evolution collision parameters rigid body dynamics 
model able track collisions sufficiently accurate initial collision parameters estimated 
main focus improve detection failure events efficiently estimate initial parameters 
address problem low sampling probabilities important parts state space thrun introduced risk sensitive particle filter incorporates learned risk function force filter important states 
approach ensures reasonable amount samples important failure modes adapt specific situation robot sampling decision 
propose learned proposal distributions able informed guesses discrete failure mode continuous failure parameters online 
data driven proposal distributions sequential importance sampling scheme see doucet arbitrary proposal distribution directly sample relevant areas state space long possible states non zero possibility chosen importance weights particles adjusted appropriately 
proposal distributions depend sensor measurements features extracted separate algorithms typically denoted datadriven proposals detector mediated proposals see khan 
proposals aim approximating optimal proposal st st zt ut fully includes current sensor measurement zt 
process model defined equations weight particle time zt zt zt ft zt ft proposal distribution transition model defined equation failure event model exchanged failure parameter model exchanged learned proposal distributions discrete ft continuous ot respectively 
control commands ut omitted clarity straightforward include 
normalizing factor constant particles furthermore ft denotes arbitrary feature vector extracted time feature vector ft functions task long assumptions ft ft ft 
hold means possible failure states assigned non zero probability chosen 
visually speaking equation states filter iteration particle weights multiplied current observation likelihood zt correction terms learned proposal distributions 
calculate correction terms specific sample divide probabilities defined equations likelihoods state variables drawn precondition learned proposals availability likelihoods sampled values 
see section gaussian processes ensure non zero probability assumptions easily sampled provide transition probabilities needed weight correction described 
gaussian processes proposals discrete continuous state variables gaussian processes powerful tool learning representing full predictive distributions non linear functions rasmussen proven successful solving classification problems 
training set priors function learned gaussian process model allows predict function values new input locations supplies predictive uncertainties 
introduce regression classification models role general failure detection setting described 
section describe specific application detail detection tracking collision events mobile robots 
non linear regression assuming non linear functional dependency dimensional input vectors 
yn real valued targets 
tn ti yi independent error terms task predict targets tn new input locations yn idea gaussian processes view target values tn jointly gaussian distributed dimensional mean covariance cov specified kernel distance function input vectors 
predictions new query point yn performed conditioning known target values tn see neal 
mean variance gaussian predictive distribution tn turn tn tn tn tn covariance matrix targets dimensional vector target values dimensional vector covariances new target value tn known targets tn 
failure detection setting regression model predict continuous parameters new failure events 
take extracted features ft input vectors failure parameters ot targets training set quantities properly chosen covariance function compute predictive distribution ot ft ft detailed equations 
normal distribution naturally meets requirements proposal distributions named previous section 
sampled directly supplies likelihoods sampled values infinite support assigns non zero likelihoods 
important aspect left far choice covariance function parameters set 
covariance function plays important role gaussian process framework represents prior knowledge underlying function changing form parameters control generalization behavior smoothness predictor 
common choice covariance function see mackay diff vt collision collision diff vr diff vr diff vt contact point regression result training data diff diff vr collision event training set feature values mapped class instances left learned class probabilities ft gaussian process classification middle learned regression model collision parameters visualized cut dimensional pdf maps velocity deviations contact points collision right 
exp wd yd constant component non linear stationary term depends distance input points 
parameters covariance function called hyperparameters gaussian process 
fixed maximizing likelihood data points fully bayesian treatment integrated parameter specific prior distributions 
experiments reported section employed strategy gamma priors hyperparameters 
set priors favor smooth regression functions avoid overfitting training data 
analytically intractable integration hyperparameters approximated markov chain sampling prediction results cached fine grained grid 
binary classification binary classification problems consistently modeled framework including binary target ti real valued latent variable li ti li known logistic model links class probabilities real values see neal 
latent variables gaussian process prior regression setting predictions class probabilities performed predicting corresponding latent variables evaluating equation 
failure detection problem feature vectors ft inputs binary failure labels ft targets 
predicted class probabilities new features directly define failure event proposal ft ft 
learning predict collision events parameters section apply sequential failure detection approach described hard problem collision detection mobile robots noisy sensor measurements additional hardware bumpers inertial sensors 
learning collision event proposal proposal contact point robot obstacle achieve excellent results simple features rotational translational velocity robot 
input gaussian process classifier twodimensional feature vector ft vt vr vt difference translational velocity estimated particle filter estimated local laser scan matching 
furthermore vr difference rotational velocities respectively 
training set automatically labeled trajectories generated simulating random collisions different obstacles simulator koenig howard 
left diagram depicts gathered data points middle diagram shows learned class probabilities depending velocity differences described 
seen left diagram vt negative nearly collision data points corresponds fact robot slowed collision occurs 
data points collision spread widely separate collision data points due noisy sensor measurements imperfect labeling collision events 
classification problem hard 
stressed classifier proposal distribution collisions collision detector directly features ambiguous allow perfect instantaneous classification 
experiments real robot see section showed yields high detection rates low number false alarms 
collision event continuous collision parameters estimated simulate effects system continue tracking process 
task fully track pushed obstacle time simple model abstracts obstacle geometry exact pose proven sufficient describe effects robot 
collision unseen obstacle represented obstacle mass contact point front robot 
collision parameters 
learn proposal distribution ot ft parameters ot velocity features simulated training set described gaussian process re correctly detected collisions triangles estimated trajectory solid line ground truth dotted 
average trajectory error std pf gp pf number particles average deviation estimated trajectory ground truth meters varying number particles 
estimated heading true heading collision likelihood true collision estim 
contact point filter iteration estimation details correctly detected collision including manually labeled true collision event 
filter iteration corresponds seconds 
technique 
right diagram depicts cut learned dimensional distribution collision parameter contact point obstacle front robot 
point contact measured meters center robot front right 
seen diagram unexpected clockwise rotations vr robot mapped positive values contact point corresponds collision righthand side robot 
experimental results system implemented real pioneer dx robot extensively tested office environment 
presenting experimental results describe motion model implemented localization system 
model focus give brief overview 
widely motion model mobile robots wheel encoder measurements see thrun 
information actual control command taken control input ut normal circumstances results accurate predictions performed movement 
influence failures collisions wheel slip motion wheels consistent robot motion 
appropriate model situations efficient evaluated online simple rigid body dynamics see 
model robot rigid body dimensional plane represented set constant values variable state vector xt pos includes translational velocity rotational velocity 
filter iteration wheel thrusts calculated actual velocity command sent motors 
state vector computed numerical simulation physical relationships forces acceleration speed 
due space limitations refer witkin baraff details rigid body physics 
model collisions rigid object point contact simulated type physical abstraction computing impulse resulting forces ultimately influence robot state vector 
time model describes point contact robot obstacle changes time defines transition model failure parameters equation 
experience physical model achieves best balance accuracy efficiency 
simpler models fail handle important test cases complex models free parameters evaluated real time 
quantitative evaluation failure detection tracking performance quantitatively evaluate usefulness approach compared particle filter implements process model standard uninformed proposals described section 
parameters standard filter optimized best tracking performance failure detection rates ensure comparability 
recorded data manually steering robot environment arranged collisions boxes milk box bottles 
obstacles placed arbitrary positions obstacle heights low laser sensor detect 
depicts typical test run system successfully tracked pose robot detected collisions 
recorded data set tested improved particle filter gaussian process proposals gp pf standard particle filter std pf different parameter settings 
filter executed times parameter setting 
table gives failure detection performance different filters 
detection rate defined number correctly identified failures relative full number 
false positives rate amount false alarms relative number detections 
ground truth collision events manually entered collision counted correctly detected marginal failure likelihood exceeded threshold maximum filter iterations seconds true failure event 
threshold optimized independently filter allow unbiased comparison 
std pf std pf gp pf gp pf particles detection rate false positives table detection results optimized standard particle filter std pf approach uses gaussian process proposals gp pf 
diagram gives average deviation tracked poses robot compared ground truth trajectory 
ground truth trajectory computed scan matcher 
results visualized diagram show system stays centimeters closer true trajectory produces variance estimates standard approach 
mainly due fact failure parameter point contact obstacle estimated accurately 
give impression accuracy filter estimates point contact path robot failure event depicted detail diagram 
seen estimated failure likelihood increases shortly labeled failure event heading angle robot correctly estimated 
detection rates tracking results show learned gaussian process proposals increase reliability efficiency online state estimation approaches 
time requirements improved particle filter higher standard implementation gaussian process proposals 
implemented system particles processes minute recorded data seconds pc mhz cpu 
showed efficient proposal distributions particle filters learned gaussian process models discrete continuous state variables treated consistent manner 
applied approach hard problem online failure detection mobile robots system detecting collisions 
experiments real robot demonstrated developed system able track state robot reliably collision events optimized version standard particle filter uninformed proposals 
system require additional hardware trained conveniently simulator 
current system deals binary failure variables believe multi class case potentially including different simultaneous failures formulated solved similar models 
limited set discrete failure modes combination system look ahead particle filter de freitas may beneficial 
extend approach general problem domain learning sampling models dynamic bayesian networks 
acknowledgments supported ec fp cosy german ministry education research bmbf desire project national science foundation nsf career iis 
dearden narasimhan 
combining particle filters approaches 
th int 
workshop principles diagnosis france 
de freitas de freitas dearden hutter morales poole 
diagnosis waiter mars explorer 
proc 
ieee 
dearden clancy dearden clancy 
particle filters real time fault detection planetary rovers 
proc 
thirteenth int 
workshop principles diagnosis 
doucet doucet 
sequential simulation methods bayesian filtering 
technical report signal processing group dept university cambridge 

efficient particle filter nonlinear jump markov systems 
ieee sem 
target tracking algorithms appl sussex uk 
girard girard rasmussen qui candela murray smith 
gaussian process priors uncertain inputs application multiple step ahead time series forecasting 
nips 
khan khan balch dellaert 
particle filter tracking multiple interacting targets 
eccv pages 
koenig howard koenig howard 
design paradigms open source multi robot simulator 
tech 
rep usc center robotics emb 
systems 
kwok kwok fox meila 
real time particle filters 
advances neural information processing systems nips pages 
mackay mackay 
gaussian processes 
neural networks machine learning 
neal neal 
monte carlo implementation gaussian process models bayesian regression classification 
technical report dept computer science university toronto 
ng ng pfeffer dearden 
continuous time particle filtering 
proceedings ijcai 
burgard 
efficient failure detection mobile robots particle filters 
europ 
robotics symposium 
rasmussen rasmussen 
evaluation gaussian processes methods non linear regression 
phd thesis dept computer science univ toronto 
tresp hoffmann 
gpps gaussian process positioning system cellular networks 
nips 
thrun thrun langford verma 
risk sensitive particle filters 
nips 
thrun thrun burgard fox 
probabilistic robotics 
mit press 
verma verma thrun simmons 
variable resolution particle filter 
proc ijcai 
witkin baraff witkin baraff 
physically modeling 
siggraph course notes 
