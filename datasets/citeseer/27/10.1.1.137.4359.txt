balanced aspect ratio trees combining advantages trees octrees christian duncan michael goodrich center geometric computing center geometric computing johns hopkins university johns hopkins university duncan jhu edu goodrich jhu edu set points lrd show fixed construct log time data structure call balanced aspect ratio bar tree 
bar tree binary space partition tree logn depth region convex fat bounded aspect ratio 
previous hierarchical data structures trees quadtrees octrees fair split trees balanced box decompositions guarantee properties know previous data structure combines ali properties simultaneously 
bar tree data structure numerous applications ranging solving geometric searching problems fixed dimensional space aiding visualization graphs dimensional worlds 
geometric searching multi dimensional spaces fundamental operation fields including geographic information systems gis com puter graphics information retrieval pattern recogni tion natural language processing statistics 
typ ical searches include nearest neighbor searches farthest neighbor searches range queries inter section queries geometric shapes 
study efficient data structures performing ies moderate dimensional spaces spaces dimensionality space viewed constant compared number multi dimensional points space 
research partially supported ar daah 
research partially supported nsf ccr ar daah 
research partially supported ar 
view constant relative 
stephen kobourov center geometric computing johns hopkins university kobourov cs jhu edu previous 
data structures perform ing multi dimensional geometric searching moderate dimensional spaces studied problem compu tational geometry spatial databases 
previous data structures performing geometric searching multi dimensional point set instances gen eral class structures known binary space partition bsp trees see 
node bsp tree represents convex region space ai points lying inside region 
leaf node represents region 
number points inside 
node associated hyperplane cut partitioning region corresponding child node 
root associated bounding hyperbox containing main advantages bsp trees allow simple multi dimensional searching typical comparison node simply involving test hyperplane cut associated 
bsp trees solve problems computer graphics ll global shadow generation ray casting visibility 
information retrieval finding nearest neighbors farthest neighbors performing range queries 
performance bounds bsp tree answering queries point set directly related depth boundedness aspect ratios regions associated vertices 
known class bsp trees known trees uses axis parallel cutting hyperplanes placed divide set points associated node half 
trees excellent depth properties depth log 
unfortunately objects points fat sets objects studied regions associated vertices tree arbitrarily large aspect ratios 
unbounded aspect ratio property trees partly accounts simple theoretical results better nl lld average running time approximation versions 
known class search structures known quadtrees octrees alternate approach axis parallel hyperplanes divide region volumes equally 
structures produce space partitioning trees regions having aspect ratios depths quite large results poor worst case search times 
poor worst case performances trees octrees motivated researchers abandon bsp tree framework altogether search alternate structures depth aspect ratio bounds 
ln particular balanced box decomposition bbd tree structure arya fair split tree callahan kosaraju provides space partitioning tree logn depth achieving vertex associated regions bounded aspect ratios 
arya show structure example perform approximate nearest neighbor searching range searching logn time size output 
draw back approach partitions space non cuts holes sacrifices convexity property vertex associated regions 
sacrifice bbd tree inappropriate applications computer graphics graph drawing convexity partitioned regions desirable see 
results 
building earlier authors dimensional balanced space partition data structure useful context graph drawing introduce multi dimensional space partition tree data structure call balanced aspect ratio bar tree defined set points lrd 
bar tree data structure conceptually quite simple follows traditional format binary space partition bsp tree 
bar trees simultaneously achieve desired properties having log depth regions convex fat bounded aspect ratios 
having sections give general framework bar trees geometric searching applications realized bar trees give efficient method constructing bar tree 
method constructing bar tree point set uses hyperplane cuts parallel coordinate axis form angles coordinate axes call corner cuts method viewed extension traditional tree bar tree identical tree defined long tree maintains balanced aspect ratio corner cuts axis parallel cut produce region skinny general bar tree framework section develop general framework constructing bar trees 
defining mean bounded aspect ratio 
definition 
convex region aspect ratio asp ir respect underlying metric radius smallest scribed hypersphere rd ir radius largest inscribed hypersphere 
balanced aspect ratio maximum aspect ratio cy asp say region balanced region max imum aspect ratio cr 
collection regions balanced aspect ratio balancing factor cz region balanced region 
typically standard metrics define aspect ratios polynomial factor 
keeping current custom terms fat skinny refer regions respectively balanced unbalanced aspect ratios 
definition states region minimum width associated diameter 
arya property show worst case bounds geometric approximation problems 
definition 
canonical cut set vi 
collection ily independent vectors span rd 
canonical cut hyperplane rd normal canonical convex polyhedron lrd facet having normal definition 
canon cuts normal vector parallel opposing canonical cuts 
bounded region define canonical bounding cuts respect direction unique opposing cuts normal tangent intuitively opposing cuts 
canonical set define partition tree vary method method 
example standard tree algorithm uses canonical set axis parallel directions 
notation refer canonical cut normal vector gi tree model represent cut axis lo 

refer opposing pair direction fli positive negative form normal vector 
represent number points data set contained region size terms points volume 
definition 
balanced canonical region table reduction factor cut called cut dividing subregions ri 
ri balanced canonical regions 
lr 
definition 
balanced canonical region table reduction factor cut sk called cut dividing subregions ri 
ri balanced canonical regions 
lr 
jr ri ri cuttable reduction factor words sequence cuts sk sk sl results balanced canon ical regions containing pn points 
understood simply say cuttable 
theorem 
canonical set possible balanced canonical region cuttable reduction factor fi bar tree maximum aspect ratio constructed depth set points 
proof 
start initial bounding balanced canon ical region region cuttable sequence cuts divide region balanced canonical subregions containing fewer points 
repeat process resulting subregions subregion constant number points 
process path subregions repeated times resulting stated tree depth bound 
main challenge creating specific instance bar tree defining canonical set possible balanced canonical region cuttable reduction factor reasonable choices motivate describing applications bar trees 
bar tree applications suppose point set points rd minkowski metrics 
constructing bar tree able perform useful queries 
query point lrd able efficiently report approximate nearest approximate farthest neighbors radius able efficiently return points distance plus possibly points ely near form approximate range searching 
formally describe applications shortly 
arya propose technique solve approximate nearest neighbor range query prob lems constructing balanced box decomposition tree 
similar bar trees trees maintain balanced aspect ratio introducing non convex hole cuts 
arguments techniques solving query problems easily trans data structure 
definition 
set points rd query point lrd point nearest neighbor true nearest neighbor words constant error factor true nearest neighbor 
definition extended report sequence nearest neighbors 
adapt theorems arya extended prove useful query operation applicable methods establish important packing feature bar trees 
definition 
set points query point lrd point farthest neighbor dw ed true farthest neighbor diameter point set 
absolute error bound standard relative error bound tighter case 
imagine point set tightly contained unit sphere query point extremely units far sphere 
point returned farthest neighbor relative error bound 
definition query point better absolute relative distances constant factor diameter set query point half diameter away points set 
letting see contain real point farthest ed 
wlog insert queue 
extracted node continue 
lemma 
bar tree depth log canonical vectors query point farthest neighbor log time number leaf nodes visited algorithm 
absolute error bound ate farthest neighbor query gives point distance far distance obtained relative error bound 
fact extend tion arguments compensate problem nearest neighbor queries query point relatively far away entire data set 
briefly discuss farthest neighbor ap proximation algorithm bar tree 
query point finding leaf node farthest away region maximum distance point considered implying theory node containing point node farthest priority queue leaf nodes decreasing order distance farthest leaf nodes 
leaf node compute distance node data point maintain current farthest vis point 
distance current farthest node cd terminate search ed 
priority queue maintained way running time logn times number leaf nodes visited 
key algorithm success number leaf nodes visited packing argument 
describe priority queue technique packing argument needed limit number leaf nodes visited 
proof 
see correctness algorithm looking leaf node containing 
visited algorithm set return correct solution termination 
visited implying see ll ed 
node extracted queue 
algorithm extract operation reaches leaf node depth perform log queue inserts leaf node visited extract leaf node 
fibonacci heap practice necessary insertions take amortized time extractions take logn queue size kn 
split deciding node farther takes time node regions complexity 
number leaf nodes visited algorithm terminates steps 
packing constraint 
nearest neighbor algorithm arya number leaf nodes need visit running time known 
packing constraint comes 
searching farthest nodes 
describe detail searching technique uses priority queue 
avoid confusion points space data set call point data point point real point rd lemma 
packing lemma bar tree maximum aspect ratio cr set data points rd size parameters metric leaf nodes pierce annulus radii node associated region distance node distance farthest real point region initially priority queue starts root node current farthest neighbor initially set stage extract node farthest ed return approximate proof 
leaf node tree associated region annulus means outer radius 
region recall inner radius ir 
know volume metric greater volume hypersphere diamond plane farthest neighbor 
leaf node node associated data point 
vr oj hnd 
remove consideration continue objects convex intersection node leaf ur volume vb cx children 
nodes metric volume annulus radius equal difference volume outer inner boxes length respectively metric 
va 
leaf nodes overlap number leafs nodes larger ratio volumes va ad 
concern leaf nodes contain points stipulation general framework scenario highly 
problem noticing regions cuttable regions sequence empty cuts regions fraction points 
defer costs empty leaf node non empty leaf nodes sibling region 
actual split cuts ensure leaf node gets deferred charges running time increases factor theorem 
suppose bar tree depth balancing factor canonical vectors point set dia meter data points 
query point farthest neighbor logn time 
proof 
leaf node visited ed halting condition 
leaf node visited contained point fact farthest point 
similar method arya know node containing point visited algorithm completely pierce annulus radii ed sides annulus :10.1.1.15.3125
diameter point set leaf node containing point partly inside ball radius leaf node piercing original annulus annulus radii 
ap packing lemma lemma compensation empty leaf nodes get running time cx ed stated bound follows 
notion corner cuts 
corner cut plane 
corner cut 
face forces cut close opposing face divide significant portion points region resulting unbalanced depth 
solution introduce simple comer cut yields freedom direction construct bar tree 
definition 
corner cut rd hyperplane normal vector form 
id ii 
notice possible corner cuts combinations fl 
plane cut forms angle axes see 
advantage corner cuts soon apparent 
show cuts define canonical cut set sufficient constructing efficient bar tree 
cut set define specific canonical set set cuts axis parallel corner cuts words cuts normal form 

uo il 
id 
set axis parallel cuts set comer cuts 

region canonical respect consider direction vector gi distance bounding canonical cuts normal gi 
simplicity normalize distance opposing planes metric 
region means bounding canonical comer cuts normal gi equations form width corner cut bar trees see 
show specific instance bar tree 
ideally notice normal vector corner cut constructing bar tree prefer forms axis regular euclidean axis parallel cuts possible 
ex distance planes distances ample vast majority points concentrated axis parallel cuts metrics particular corner hyperbox region cutting identical 
oo 
metric change parameter 
definition 
canonical region canonical aspect ratio casp width ing aspect ratio cr words canonical aspect ratio ratio longest smallest widths face pairs bounded box aspect ratio aspect ratio bounding hyperbox region ignoring corner cuts 
metric maximum distance region cut direction implying casp 
region asp casp acceptable canonical aspect ratio general aspect ratio construction bar tree factor cost aspect ratio performance respect general framework 
result call canonical region balanced respect current canonical set casp cr 
new cuts introduced algorithm difficult fact impossible guarantee single cut divide region proportionally equal regions 
prove balanced canonical region cuttable sufficiently large values cr lemma bound bar tree depth 
process proving existence cut show simple time method discovery cut 
properties 
corner cuts gives certain useful important properties 
process making comer cut region possible create subregion ri illustrates distance corner cuts plane 
illustrates notion shielding cut 
length corner cut shielding cut distance corner cut 

cuts divide region subregions rr ii 

pairs parallel cuts ii 
rl rs divide region subregions 
shaded areas intersections outer regions 
bounding canonical cut longer bounding canonical cut ri longer tangential new subregion ri 
case simply take bounding canonical cut ri parallel represent part ri 
refer canonical cuts region referring region bounding canonical cuts 
corner cut having opposing corner neighboring axis parallel cuts opposing axis parallel cuts 
comer cut 

ij 
th neighboring cut 
lemma 
suppose convex polyhedral region parallel hyperplanes intersect ing see 
possibly empty subregions lying left middle right hyperplanes respectively rl rr 
exists hyperplane parallel intersecting divides region subregions points points lies rl 
proof 
assume contrary 
know rr implies line suitable choice similarly know 
continually sweep hyperplane ri subregions left right ri ri implies exists 
lr jr 
exists hyp plane parallel intersects divides regions size flir contradicting original assumption 
words cut divides region subregions fraction original number points outside corollary 
canonical region vector regions fraction points 
reduction factor case holds call region large outer opposing canonical cuts normal region parallel ci 
cut hyperplanes 
exists dividing cut exists divides ba la region rr 
rz points shield regions points 
theorem 
suppose convex region pairs hyperplanes ri proof 
regions intersect 
see 
fi cuts defining shield divide exists hyperplane regions lemma size constraints hold 
parallel pairs divides region importantly ion ld re subregions size ri ipi fact shield regions nf 
intersect cut lying regions produce balanced 
regions 
proof 
assume exist hyperplane dividing region small subregions 
refer shield region lemma pair maximal outer large outer shield region dividing hyperplane dividing cut exists 
notice corollary 
pair zi ri pi lemma added guarantee large outer region pair hyperplanes 
regions produced cut chosen cr know lemma balanced 
furthermore corollary may exten ir 
induction assume theorem ded multiple hyperplane directions extends values recall set theory 
jai ibi 
pi 
know lp lr 
definition 
canonical region canonical corner cut length ien defined ipi iri ri iri ri 
th true distance cutting hyperplane 
associated comer bounding hyperbox containing far region cut measured corollaries derived metric 
simple theorem 
example intersection large outer regions empty imagine axis parallel hyperbox 
hyperplane cut exist divides region remove corner continue cutting inward subregions size traveling certain length shrink alternative location points lie 
bounding box remaining region axis dimensions 
going little farther definition 
balanced canonical region bounding box canonical cut normal sweep cut dimension simultaneously 
instant opposing cut calling region happens largest comer cut possibly cuts empty guaranteeing bounding hyperbox just casp cy 
notice empty remaining region hypercube 
maximum aspect ratio 
call region exploit property proving certain regions shield region shield 
cuttable formally state prove corollary 
theorem 
defined shield continue sweeping corollary 
canonical region region cand corner cut ien aspect ratio empty 


equality holds proof 
intuitively convex region starts fat process cutting constant direction 
wlog assume 
skinny continuing direction upper left hand comer corresponding corner fat 
bounding hypercube placed origin 
equation hyperplane 
len ma maximum width bounding canonical cuts 
correspond particular pair axis parallel cuts 
wlog assume cl 
opposing cut br 
left right sides 
assume len 
intersection hyperplanes hyperplane 
len notice cr 
point lie 
len 
second statement len similar argument know distance axis parallel side length point lie intersection hyperplanes 
lemma 
balanced canonical region corner cut len width proof 
simplicity assume corner cut normal vector ci associated comer bounding hyperbox origin 
hyperplane equation corner cut dlen opposing bounding comer cut equation len 
distance axis parallel sides region associated bounding hyperbox len 
metric maximum distance bounding hyperplanes correspond axis parallel sides hyperplane bounding box result follows see 
lemma 
corner cut shield lemma balanced canonical region comer cut width len proof 
ien width 
lemma shield region casp metric minimum width implying solving get xd cy see 
lemma main advantage comer cuts comes 
corner cut small cuts little region cut direction close corner cut proportion size disregarding dimensions rest region entirely 
cut existence theorem 
prove balanced canonical region cuttable describe regions cuttable 
theorem 
balanced canonical region cuttable exists corner cut opposing cut 

len 
proof 
wlog assume 

recall corollary 
look various shield regions axis parallel directions neighboring face bi look hyperspace cut direction region formed neighboring face 
comer cut cuts neighboring face simultaneously 
pi 
direction qi shield balanced aspect ratio implies axis parallel directions 
pairs shield regions pi qi vi 

corollary means cut exists lri points lies intersections regions 
determine intersection regions 
contained pi regions intersection empty pi empty notice strictly greater condition 
longest side bounding box region shorter sum length distance corner cuts 
example basic cuttable region plane 
notice point lie look notice len cr 

empty points lie intersection 
consequently cut theorem 
cy balanced canonical region cuttable 
proof 
iri 
axis parallel direction gi shield regions pi associated opposing cuts 
wlog look 
notice pi implies pi qi 
dividing cut exists los 
dividing cut exists done region definition cuttable 
know corollary ipi 
quite clear construction corresponds corners bounding hyperbox wlog upper left corner comer associated cut 

empty len pc pt opposing cut diagonal len width leq width qc means width cut exists creates balanced regions 
means pt pc 
know pb 
dividing cut exists case finished points lies pc 
jr pi lr implies pc pbl contradiction 
claim pc cuttable 
observe ir pc pc definition cuttable 
comer cut shield lemma width len cr le len pc dlen 
recall len lew cx 

means dz cr 
types regions may formed 
know bounding box pc minimum width case pc cuttable pc nearly identical region theorem may additional corner cuts 
simple addition extra shield cut axis parallel directions difficult see produce region cuttable leave details journal version 
theorem 
balanced canonical region cuttable 
proof 
width done region cuttable 
exists axis parallel direction width means 
direction corresponding corresponding longest side opposing canonical cuts normal large easy see 
look 
dividing cut exists direction gi cuttable 
note cases especially applications find trees practical empty usually dividing cut longest direction produces cr balanced subregions 
wlog sume shield large outer region 
cut shield region cut dir ection create region notice shield larger shield region cuttable cuttable 
sides width greater cut reduce count cuts balanced canonical region cuttable 
balanced ca region cuttable 
notice scheme generally cuts longest axis parallel side 
alter include searching cuts axis parallel direc tions doing mimic performance trees 
practice trees appear perform quite special cuttable regions may 
added safety net comer cuts fact finding ap cuts cuts quite easy existence prove 
theorem 
canonical set bar tree depth logn balancing factor constructed logn time size canonical set 
nlogn fixed dimensions 
proof 
notice stage naive search large outer regions region lri ime shielding regions stage easily time 
find cut region lr time 
depth bounded running time log time 
noticing dl stated rn get open problems introduced general framework bar tree described important applica tions may solved type tree 
showed dimensionality fixed bar tree constructed nlogn time number points data set 
results preliminary 
open problems new type data structure 
example complexity canonical regions number cuts needed ensure balance maximum balance factor far optimal careful analysis significantly dropped choosing different canonical set entirely 
pi agarwal grove murali vitter binary space partitions fat rectangles proc 
th annu 
ieee sympos 

comput 
sci oct pp 

pi agarwal katz sharir computing depth orders fat objects related problems comput 
geom 
theory appl pp 

aref samet perspective viewing objects represented octrees comput 
graph 
forum pp 

university maryland computer science tr 
arya mount searching proc 
th annu 
acm sympos 
comput 
geom pp 

arya mou netanyahu silverman 
wv optimal algorithm nearest neighbor searching proc 
th acm siam sympos 
discrete algorithms pp 

pi bentley multidimensional binary search trees associative commun 
acm pp 

trees point sets proc 
th 
acm sympos 
comput 
geom pp 

pi callahan kosaraju algorithms dynamic closest pair body potential fields proc 
th acm siam sympos 
discrete algorithms pp 

pi callahan kosaraju decomposition multidimensional point sets applications nearest neighbors body potential fields acm pp 

wi pll wi wi po chen huang survey construction manipulation octrees comput 
vision graph 
image process pp 

chin feiner near real time shadow gen eration bsp trees proc 
siggraph new york aug acm siggraph pp 

de berg linear size binary space partitions fot fat objects proc 
rd annu 
european sympos 
algorithms vol 
lecture notes comput 
sci springer verlag pp 

duncan goodrich balanced aspect ratio trees drawing large graphs sixth symposium graph drawing published 
efrat sharir union fat objects plane proc 
th annu 
acm sympos 
comput 
geom pp 

finkel bentley quad trees data structure retrieval composite keys acta inform pp 

fuchs kedem naylor visible surface generation priori tree structures comput 
graph pp 

proc 
siggraph 
improving performance multidimensional access kd proc 
th ieee intl 
conf 
data engineering pp 

tanimoto ott trees representing objects comput 
graph 
image process pp 

katz vertical shooting point enclosure range searching arc shooting amidst fat objects comput 
appear 
geom 
theory appl 
matou ek pach sharir welzl fat triangles determine linearly holes siam comput pp 

pll van der range searching point location fat objects algorithms pp 

wi van leeuwen dynamic multi dimensional data structures quad trees acta inform pp 

paterson yao binary space partitions hidden surface removal solid modeling discrete comput 
geom pp 

optimal binary space partitions orthogonal objects algorithms pp 

samet quadtree related structures acm comput 
surv 
data overview quadtrees octrees related data theoretical foundations computer graphics cad ed vol 
nato asi series berlin west germany pp 

design analysis tures addison wesley reading spatial data struc ma 
wi torres optimization binary space partition algorithm bsp visualization dynamic scenes eurographics north holland pp 

