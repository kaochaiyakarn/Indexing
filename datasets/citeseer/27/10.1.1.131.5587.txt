selecting forwarding neighbors wireless ad hoc networks ion peng jun wan alexander zelikovsky broadcasting fundamental operation frequent wireless ad hoc networks 
simple broadcasting mechanism known flooding node retransmit message hop neighbors receiving copy message 
despite simplicity flooding inefficient result high redundancy contention collision 
approach reducing redundancy node forward message small subset hop neighbors cover node hop neighbors 
propose practical heuristics selecting minimum number forwarding neighbors time algorithm selects times forwarding neighbors optimum time algorithm improved approximation ratio number hop neighbors 
best previously known algorithm due goodrich guarantees approximation time 
keywords wireless ad hoc networks broadcast approximation algorithms unit disk graphs disk cover 
wireless ad hoc networks flexibly quickly deployed applications automated battlefield search rescue disaster relief 
wired networks cellular networks wired backbone infrastructure installed wireless ad hoc networks 
communication session achieved single hop radio transmission communication parties close relaying intermediate nodes 
assume nodes wireless ad hoc network distributed dimensional plane equal maximum transmission range unit 
gc research partially performed visiting department combinatorics optimization university waterloo supported nserc research 
partially supported nsf ccr award 
mm moldovan research development association civilian research development foundation independent states soviet union state georgia initiative 
computer science department illinois institute technology chicago il 
department computer science engineering university california san diego la jolla ca computer science department illinois institute technology chicago il department computer science georgia state university university plaza atlanta georgia broadcasting fundamental networking operation wireless ad hoc networks 
widely frequently performed networking tasks paging particular host sending alarm signal finding route particular host 
simple broadcasting mechanism known flooding node retransmit message hop neighbors receiving copy message 
despite simplicity flooding serious drawback known broadcast storm 
radio propagation omnidirectional physical location may covered transmission ranges nodes retransmissions redundant 
second heavy contention exist retransmitting nodes probably close 
third collisions occur rts cts dialogue inapplicable timing retransmissions highly correlated 
simple technique exploited see reduce redundant re transmissions virtue beaconing node maintains local topology hop neighborhood relays message small subset hop neighbors cover terms radio range nodes hops away 
subset hop neighbors selected node referred forwarding set multipoint relaying set 
consider problem finding forwarding set minimum size 
minimum forwarding set problem source sets hop neighbors 
find minimum size subset node coverage area node 
node nodes nodes 
opt 
opt node 
nodes nodes instance size solution computed greedy algorithm optimum solution logarithmic factor 
previous see jacquet sinha considered minimum forwarding set problem assuming knowledge geographic location nodes 
case minimum forwarding set problem essentially studied set cover problem 
surprisingly heuristic proposed translation chv tal greedy algorithm set cover guarantees approximation factor maximum neighborhood size 
greedy algorithm iteratively selects hop neighbor covering maximum number hop neighbors covered terminates hop neighbors covered 
greedy algorithm take account geometric properties minimum forwarding set problem fact shows family instances size solution greedy algorithm larger optimum logarithmic factor 
assumption nodes wireless network distributed dimensional plane node unit transmission range topology network modeled unit disk graph 
graph edge nodes distance 
minimum forwarding set problem source node asks minimum size set hop neighbors dominating hop neighbors unit disk graph 
related dominating set problem unit disk graphs asks subset nodes dominating adjacent nodes 
dominating set problem unit disk graphs np hard admits ptas 
minimum forwarding set problem reduce dominating set problem unit disk graphs dominators restricted set hop neighbors 
minimum forwarding set problem related unit disk cover problem asks minimum number unit disks covering set points plane 
unit disk cover problem np hard admits ptas 
unit disk cover problem disk centers chosen arbitrarily plane algorithms problem apply minimum forwarding set problem disks centered hop neighbors 
minimum forwarding set problem special case np hard disk cover problem asks minimum size subset set disks covering set points 
complexity minimum forwarding set problems known 
constant ratio approximation algorithm disk cover minimum forwarding set goodrich algorithm special case sophisticated algorithm spaces bounded vc dimension impractical running time proven approximation ratio large constant 
contributions exact time approximation time algorithm special case min imum forwarding set problem hop neighbors quadrant respect source node 
approximation algorithm minimum forwarding set problem running time total number hop neighbors 
approximation algorithm minimum forwarding set problem running time 
constant factor approximation disk cover problem disks radius rounding optimal solution linear programming relaxation 
preliminary version presents results exact algorithm quadrant case approximation algorithm run time 
organized follows 
section reformulate minimum forwarding set problem geometric terms give high level algorithm decomposition quadrants establish basic geometric properties partitioned sets hop neighbors 
sections deal covering hop neighbors quadrant describe approximation algorithm section give exact algorithm section describe details data structures needed obtain implementation exact algorithm section 
section give extension techniques disk cover problem conclude section 
partition algorithm unit disk short refers closed disk radius 
boundary region euclidean plane denoted boundary circle disk denoted 
assumption network node unit transmission range reformulate minimum forwarding set problem follows 
hop disk cover problem unit disk aset unit disks centered inside set points outside find minimum size subset 
high level algorithm algorithm partitions points quadrants defined orthogonal lines center independently solves hop disk cover problem quadrant 
union disk covers disk cover points 
usual approximation ratio algorithm minimization problem supremum instances ratio algorithm hop disk cover input unit disk set unit disks centered inside set points outside output subset 
partition exterior quadrants orthogonal lines containing points center see 

compute disk cover points 

output 
output value optimal value 
theorem relates approximation ratio algorithm approximation ratio guaranteed hop disk cover restricted points single quadrant 
theorem disk covers computed step factor optimum algorithm approximation ratio hop disk cover problem 
proof 
opt optimal set disks denote opt subset disks opt having centers th sector disk 
key observation points quadrant covered disks opt mod points covered disks opt opt opt assumption factor respective optimum solutions similarly output algorithm size opt opt opt opt opt opt opt opt opt opt opt opt opt opt opt opt opt quadrants algorithm 
show achieved time see section achieved time see section 
algorithm achieves approximation factor respectively time bounds 
natural ask approximation ratios improved partitioning set points equal sectors defined half lines starting center 
proof theorem generalized show partitioning sectors gives approximation ratio hop disk cover problem disk cover sector approximated factor 
decomposition equal sectors lead approximation ratio better obtained decomposition quadrants 
improvements decomposition equal sectors possible provided find algorithm covering points sector approximation ratio ideas section solve exactly problem quadrant extend sectors lack second essential topological properties established quadrants lemma 
lemma exterior quadrant border set disks intersecting interior 
disk 
disks 
disks tangent 
proof 
loss generality may assume unit disk centered origin defined positive axes 
boundary quadrant consists half lines quarter circle 
points coordinates extreme configuration proof lemma 
respectively 
denote quarter circle enclosed 
non empty intersection interior circle intersection points 
closed simple jordan curve infinite simple jordan curve intersect number times tangent happen intersect times 
complete proof part need show intersect times 
denote center disk 
inside 
note intersect axis points coordinate bigger 
similarly intersect axis points coordinate bigger 
furthermore intersects 
unit circles centers distance intersect intersection points apart circles quarter circle may contain 
assume contradiction distinct disks intersect points 
centers respectively 
change configuration bit obtain extreme case 
translate right hits assume symmetry 
assume right 
start rotating rhombus clockwise hits axis whichever happens see 
procedure keeps inside unit disk 
point line intersects axis 
lie side line 
angle diameter unit disk centered contains 
outside triangle consequently side line contradiction 
disks 
tangent interior radius 
tangent exterior distance centers common point origin 
skyline skyline set disks quadrant 
fast geometric disk covering quadrant section give fast approximation algorithm hop disk cover problem points coming exterior quadrant unit disk 
skyline upper envelope see 
skyline consists arcs border disks 
algorithm algorithm starts computing skyline numbered counter clockwise order polar coordinates points satisfying 
established lemma skyline disks covering point form interval sequence 
algorithm computes intervals point outputs minimum size set skyline disks hitting intervals containing disk interval 
computing minimum size hitting set step done simple greedy algorithm similar algorithm finding minimum weight dominating set interval graph 
clearly hitting set computed algorithm disk cover points 
furthermore theorem algorithm runs time approximation ratio hop disk cover problem quadrant 
theorems immediately give algorithm geometric hop disk covering quadrant input unit disk set unit disks centered inside set points exterior quadrant output subset 
find skyline polar coordinates 
disk containing arc 

polar coordinates find interval skyline disks cover binary searches find 
find minimum set skyline disks hitting interval interval hitting algorithm sort set intervals ascending order right 
output add right disk interval remove intervals hit corollary combined algorithm algorithm runs time approximation ratio minimum forwarding set problem 
rest section devoted proof theorem 
lemma point belongs disk half line center point intersects point belongs segment 
proof 
disk contains 
segment fully contained point outside segment exterior 
lemma point polar coordinates 
proof 
follows immediately lemma 
skyline lemma 
lemma disks appearing order skyline 

proof 
assume andlet skyline see 
lemma implies 
complete proof suffices show contains point 
half line 
intersects exactly 
intersect arc skyline 
similarly intersect follows intersects lemma straightforward corollary lemma lemma skyline disks covering form interval sequence 
lemma optimum cover disks set skyline disks contains times disks optimum cover disks 
proof 
suffices prove covered skyline disks 
furthermore lemma implies set disks covering fully covers need show covered skyline disks 
tight example approximation ratio algorithm 
points intersection boundary central disk 
lemma skyline disk intersecting contains points key observation skyline disks containing containing arc contained arc vice versa 
minimal set skyline disks covering disks 
proof theorem 
approximation ratio algorithm follows lemma 
step algorithm implemented time adaptation divide conquer algorithm computing manhattan skyline 
binary searches step take time 
interval hitting algorithm implemented interval hit disk left covering disk skyline 
traversing intervals sorted ascending order left ends delete hit interval constant time interval 

approximation ratio theorem tight gives instance optimum disk cover consisting skyline disks size single non skyline disk covering points 
exact combinatorial disk covering quadrant section exact algorithm hop disk cover problem points coming exterior quadrant unit disk 
section describe faster implementation algorithm efficient data structures 
different algorithm hop disk cover problem points coming 
algorithm easier implement involved correctness proof 
furthermore algorithm appear implementation faster new exact algorithm see algorithm starts sorting renumbering disks respect intersection points step 
disk order covering point determined 
modified version interval hitting algorithm see step algorithm finds minimum disk cover 
algorithm combinatorial hop disk covering quadrant input unit disk set unit disks centered inside set points exterior quadrant output minimum size subset 
find points intersection boundaries 
assume fixed orientation 
disks denotes disk smaller index disk 
point compute 
set 

output find minimum disk exists disks containing 
replace disk containing set remove points start proof correctness algorithm definition crucial topological lemma 
say disks disk point 
lemma optimum solution uses disk 
proof 
assume contradiction opt optimum solution area opt maximum disk opt say 
means point 
disk opt 
consider case case symmetric 
existence nonempty region implies lemma implies see illustration 
consider walk starting 
point walk inside disk inside disk opt 
cases 
opt 
point walk comes walk solution size opt bigger total area includes arc contradicts assumption opt optimum solution maximum area 
assume comes walk 
disks opt 
fact point lemma imply comes walk 
comes lemma implies implying opt solution 
contradicts fact opt optimum solution completes proof 
assume opt fixed optimum solution contains disk 
previous lemma exact algorithm disk cover immediate eliminate disks 
point set disks cover forms interval 
interval hitting algorithm finds optimum solution 
prove runtime algorithm need show total time spent inner loop step fact follows lemma 
lemma disk appear inside inner loop step different points 
proof 
assume contradiction points selected order step step removed processing wehave disk contains wehave selected step processed deduce contains disk selected step processing processing considered selected step selected processing check statement ensures contains eliminated step processing contradiction 
lemma runtime algorithm proof 
straightforward loops inner step inner loop step algorithm takes time replacement disk previous disk inside inner loop takes time point 
checking condition inner loop step takes time lemma ensures check done disk 
proving correctness algorithm give intuition motivates steps 
current set uncovered points 
iteration outer loop step interval hitting algorithm pick point covering disk 
select disk includes point close possible covering disk order include larger number points subject excluding disks 
note inner loop step simply jumps disks 
theorem algorithm gives optimal solution hop disk cover problem quadrant 
proof 
show point covered 
look current situation execution outer loop step 
time step inner loop finished removed 
opt disk covers disk ignored algorithm step choice step inner loop earlier 
prove optimality set points selected algorithm step claim disk include disk selected cover step note processing algorithm ignore step 
assuming contradiction contains obtain step 
removed follows theorem follows fact algorithm selects disks 
theorems lemma imply theorem combined algorithm algorithm runs time approximation ratio minimum forwarding set problem 
implementation combinatorial disk covering algo rithm section describe enhanced data structure voronoi diagrams allows implement algo rithm time step obviously executed describe data structure step 
construct balanced binary search tree centers individual disks leaves sorted order obtained step 
node denote set centers subtree rooted 
node construct voronoi diagram preprocess diagram membership queries 
membership query returns give point face voronoi diagram lies 
preprocessing time constructing voronoi diagrams level see example chapter total space requirement level total preprocessing node membership queries takes time space query answered time see example chapter 
total time total space data structure node point find disk subtree rooted covers time finding cell voronoi diagram lies computing distance center cell 
observation binary search find point disks time proceeding step time sort points respect put list position point points removed step consecutive include uncovered point representation allows implementation step total time remove points simply move forward checking step 
time sort points respect put separate list allows implement step run total time keeping track point moving forward ignoring points current 
describe data structure implement replace statement inside inner loop step time start leaf center 
current node parent left child replace parent repeat 
assume right child sibling 
time check center disk includes 
starting find center disk covers binary search procedure compute 
replace parent repeat 
theorem implies exists disk contains procedure correct 
condition loop step checked data structure describe 
balanced binary tree leaves points smaller 
node denote set points subtree rooted 
node construct furthest site voronoi diagram preprocess diagram membership queries 
cell furthest site voronoi diagram contains points furthest site furthest site voronoi diagram constructed uses space see example chapter time space bounds preprocessed membership queries chapter 
total preprocessing time total space center disk node finding points contained done time membership query furthest site voronoi diagram 
describe exactly check point 
points consecutive denote respectively point 
note point remaining part binary search time 
checking condition takes constant time 
locate leaves binary search find common ancestor parent long left child sibling check contains similarly long right child sibling check contains checks fails point point 
total time disk queries type check points contained 
lemma implies disk need processing 
step takes time 
discussion theorem algorithm implemented run time general minimum disk cover problem section describe constant factor approximation algorithm minimum disk cover problem 
set unit disks set points euclidean plane find minimum size subset 
problem np hard contains special case dominating set unit disk graphs problem shown np hard 
polynomial time algorithm constant approximation ratio minimum disk cover provided 
obtain constant ratio covering unit side equilateral triangle obtain constant ratio plane tiling plane triangles separately covering triangles fact disk optimum cover points constant number triangles 
triangle 
point triangle done 
disk center triangle covers triangle 
assume points triangle centers disks outside triangle 
algorithm phases 
removing disks intersect triangle partition remaining disks sets centers disks side line centers disks side line centers disks side line 
disk put pick arbitrarily 

triangle line separates centers disks interior triangle 
find skyline section compute set disks containing arc skyline 

write natural integer programming formulation involving disks solve linear programming relaxation 

round linear programming optimum integer solution described subsection 
prove theorem claims algorithm described approximation ratio problem covering points inside triangle 
note lemma holds easily straight line 
lemma holds 
assume sorted sorted followed sorted followed sorted lemma holds contains solution twice size optimum solution 
rounding natural ip variables minimize subject lp linear programming relaxation ip obtain replacing constraints value ip optimum 
argued 
fractional solution lp 
point set disks covering consists intervals say intervals call simply wehave introduce second integer program able solve polynomial time exactly see details approximates lp linear programming relaxation described 
precisely consider integer program ip variables minimize subject lp linear programming relaxation ip 
matrix ip totally unimodular see theorem page example page solution lp 
ip solution size optimum ip easily greedy algorithm described proof theorem 
optimum solution lp solution greedy algorithm size 
rounding consists finding point interval greedy algorithm hit elements 
proved theorem algorithm described section approximation ratio covering points inside unit size equilateral triangle sizes equal unit disks fixed set 
single disk optimum solution cover points triangles tiling conclude corollary approximation algorithm minimum disk cover problem 
geometric approximation algorithm combinatorial approximation algorithm selecting forwarding neighbors wireless ad hoc networks significantly improving running time approximation ratio best previously known algorithm 
extension method obtain alternative constant ratio polynomial time algorithm minimum disk cover problem 
mention theorem true general setting 
infinite simple jordan curve separates plane exactly regions regions 
points region bordered simple closed jordan curve 
assume intersects infinite curve exactly points regions point 
assume curves intersect cross 
lemma holds polynomial time exact disk covering algorithm exists 
side disks arbitrary radii boundaries disks region paragraph cross distinct points 
arguments rely implicitly assumption boundaries intersect point inside region points lie algorithms fail applied arbitrary disks 
centers separated straight line apply techniques obtain rounding procedure ratio natural linear program lp 
section follows linear program lp constant integrality ratio general disk cover problem 
disks weighted know integrality ratio corresponding integer linear programs 
linear program minimize subject research assumed wireless nodes able adjust range transmission 
nodes able adjust range transmission possible congestion reduced 
leave research design forwarding algorithms variable transmission range setting 
leave research formulation broadcast problem algorithms obtains doing centralized practical 
comparison classical broadcasting problems telephone post office models beneficial 
student wu wish implemented geometric hop covering algorithm quadrant algorithm exact combinatorial algorithm quadrant 
random instances simpler geometric algorithm finds solutions average larger optimum exact combinatorial algorithm 
broch johnson maltz dynamic source routing protocol mobile ad hoc networks ietf internet draft draft ietf manet dsr txt march 
goodrich optimal set covers finite vc dimension 
proc 
th acm symp 
compu tational geometry scg 

wan zelikovsky selecting forwarding neighbors wireless ad hoc networks proc 
international workshop discrete algorithms methods mobility 
chv tal 
greedy heuristic set covering problem 
mathematics operation research 
clark johnson unit disk graphs discrete mathematics 
cook cunningham pulleyblank schrijver combinatorial optimization wiley interscience 
cormen leiserson andr algorithms hill 
goodman rourke editors handbook discrete computational geometry crc press 
haas pearlman samar 
routing protocol ad hoc networks ietf internet draft draft ietf manet zone txt january 
hochbaum maass approximation schemes covering packing problems vlsi journal acm 
hunt iii marathe radhakrishnan ravi rosenkrantz stearns nc approximation schemes np pspace hard problems geometric graphs journal algorithms 
jacquet viennot clausen optimized link state routing protocol ietf internet draft draft ietf manet olsr txt march 
viennot multipoint relaying efficient technique flooding mobile wireless networks proc 
th annual hawaii international conference system sciences hicss 
marathe breu hunt iii ravi rosenkrantz simple heuristics unit disk graphs networks vol 
pp 

moret shapiro 
algorithms np volume design efficiency 
benjamin cummings 

ni 
tseng chen 
sheu broadcast storm problem mobile ad hoc network pro ceedings fifth annual acm ieee international conference mobile computing networking pages 
perkins royer das ad hoc demand distance vector aodv routing ietf internet draft draft ietf manet aodv txt march 
ramalingam rangan unified approach domination problems interval graphs information processing letters pp 

sinha sivakumar enhancing ad hoc routing dynamic virtual infrastructures proc 
ieee infocom pp 

author biographies assistant professor computer science illinois institute technology 
diploma university bucharest phd georgia institute technology 
research interests area algorithms 
mail cs iit edu 
ion received degree bucharest university ph degree georgia institute technology computer science 
worked research assistant bucharest university instructor georgia institute technology postgraduate researcher university california los angeles 
research scientist university california san diego 
research interests include approximation algorithms vlsi physical layout design combinatorial optimization 
mail cs ucsd edu 
peng jun wan assistant professor computer science illinois institute technology 
received phd computer science university minnesota ms operations research control theory chinese academy science bs applied mathematics university 
research interests include optical networks wireless networks 
mail wan cs iit edu 
alexander zelikovsky received ph degree computer science institute mathematics academy sciences 
worked institute mathematics senior research scholar 
visited bonn university institut fur informatik germany 
dr zelikovsky research scientist virginia university postdoctoral scholar ucla 
assistant professor computer science department georgia state university 
author refereed publications 
dr zelikovsky research interests include vlsi physical layout design discrete approximation algorithms combinatorial optimization ad hoc wireless networks 
mail cs edu 
