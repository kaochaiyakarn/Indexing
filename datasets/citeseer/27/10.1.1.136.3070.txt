adaptive hyperbooks adaptation project learning resources vom fachbereich mathematik und informatik der universit hannover zur des grades der naturwissenschaften dr 
nat 
dissertation von dipl math 
nicola henze am 
november hannover referent prof dr nejdl prof dr tag der promotion 
april datum der ver mai contents adaptive hypermedia systems hypertext hypermedia 
adaptive hypermedia systems 
user modeling adaptive hypermedia systems 
user models 
characteristics user 
methods techniques adaptation 
examples adaptive hypermedia systems 
elm art 
interbook 
pt 
push 
avanti 
aha 

plan recognition multi user 

epi 

kbs hyperbook system 
discussion 
teaching specific situation distance learning 
constructivism theory knowledge 
contents constructivism teaching 
implementing constructivist teaching concepts cs course project learning 
excursion kbs virtual classroom project 
discussion requirements enabling project learning 
kbs hyperbook system definition hyperbooks 
conceptual modeling adaptive hyperbooks 
modeling courses lectures 
modeling different information resources 
modeling index 
modeling portfolios 
system architecture 
adaptation component kbs hyperbook system modeling knowledge domain 
knowledge items 
describing knowledge domain 
modeling user knowledge 
indexing information html pages examples projects 
indexing html pages 
indexing chapters areas 
indexing portfolios 
indexing examples projects 
update observations users 
indexing constraints 
discussion 
bayesian network engine calculating probabilities bayesian network graph 
dependencies ki 
clustering formalism 
finding conditional probability tables 
advantages bn 
interpreting bayesian network 
contents bayesian network cs hyperbook 
enabled adaptation link annotation 
calculating educational state link 
access relevant information trails information index 
generating learning sequence 
generating glossary 
generating information index 
direct guidance 
goal learning 
project learning 
matching fits project student goal 
fitness parts selected project belong student current goal 
integrating portfolios 
project updating 
outlook complete list knowledge items cs hyperbook summary hypermedia systems popular tools user driven access information 
adaptive hypermedia systems bring ideas hypermedia systems intelligent tutoring systems enable personalized access information 
kbs hyperbook system framework modeling organizing maintaining adaptive hypermedia systems 
thesis describes concept realization adaptation component kbs hyperbook system 
adaptation component guides student information space showing reasonable learning steps selecting projects generating proposing reading sequences annotating educational state information selecting useful information user actual goal knowledge 
learning hypermedia systems usually takes place distance learning scenarios 
enable active learning kbs hyperbook system follows constructivist pedagogic approach building project learning group discussion 
special focus adaptation component support project learning integration projects curriculum user hyperbook 
adaptation component uses indexing concept describing content various information resources 
indexing concept taken base constructing model application domain 
bayesian inference mechanism calculates estimations user knowledge top domain model 
aid described adaptation component intelligent user support enabled hypermedia systems 
furthermore system serve development experimentation framework research kbs hyperbook system area educational adaptive hypermedia systems 
keywords adaptive hypermedia systems user modeling constructivism dem einsatz von hypermedia systemen als zum zeit zu 
adaptive hypermedia systeme aus den der hypermedia systeme und der systeme und erm glichen 
das kbs hyperbook system ist eine zur modellierung und systeme 
diese arbeit und der des kbs hyperbook systems 
die hrt oder den durch die sie gem und vern eine gt und auf informationen 
zur unterst das kbs hyperbook system einem ansatz der auf lernen und 
die unterst dabei vor lernen und die integration von den des 
zur beschreibung der verwendet die ein das auch die die eines der ne ist 
dieser dom ne sch ein das wissen des ab 
es sich da die eine hypermedia systemen erm 
kann das system als und auf dem der und der hypermedia systeme 
adaptive hypermedia systeme chapter books times papyrus slabs favourite holder information invention writing 
advantages collecting information books various information grouped red thread 
learn reading book 
discussing human 
main difference scenarios human partner take special learner account adapt learning speed depth information vis vis 
conventional book adapt particular needs readers written printed remains static 
think books personally written suppose lots useful ideas 
example books boring telling things know interested 
think textbooks demonstrate difficult topics giving examples related favourite hobbies 
think textbooks give solid foundation topic refer years actual research area 
imagine textbook draws attention new relevant information provides explanations tailored actual knowledge state 
emergence world wide web www value information got new dimension 
nowadays millions computers connected internet humans collect information nearly world 
enormous amount information chance experience learning 
effectively selecting information internet hot research topic effectiveness search machines increase precision query 
information contained internet useless exploring learning learners need guidance build mental model area working able sufficiently exact queries 
helpful different textbooks different types learners students different interests different initial knowledge topic 
step direction adaptive hyperbooks personalize content hyperbooks particular needs users 
give users ability define learning goals propose reasonable learning steps take support project learning give alternative views extended documents written learners 
adaptive hyperbooks information repositories accessing distributed information 
implemented internet applications integrate documents located web adapt documents learner goals knowledge 
promising approaches research come area adaptive hypermedia systems 
adaptive hypermedia systems combine hypermedia systems intelligent tutoring systems adapt systems particular users 
step intelligent textbooks 
propose concept realization adaptation component open adaptive hypermedia system hand implements advanced teaching strategies hand enables integration adaptation learning material www 
chapters outline scope focussing adaptive hypermedia systems chapter applications learning chapter 
chapter propose list requirements fulfilled adaptive hyperbooks education 
interested building open hypermedia systems www follows adaptation hyperbooks sufficiently general integrating adapting arbitrary material internet 
general functionality kbs hyperbook system modeling approach proposed chapter 
chapters describe adaptation component detail chapter introduces main ideas adaptation approach 
indexing concept underlying approach discussed demonstrated applicability shown 
index twofold 
classifies content information 
second index serves base describing application domain describing knowledge 
making inferences user knowledge updating hyperbook due user changing knowledge state bayesian inference mechanism 
improving performance bayesian inference propose clustering algorithm tailored application domain chapter 
adaptation functionalities enabled general approach described chapter 
outlook accomplish thesis 
chapter adaptive hypermedia systems user building trail names inserts name code book taps keyboard 
years 
tapping keys projects head trail 
lever runs stopping interesting items going side excursions vannevar bush hypertext hypermedia vannevar bush visionary ideas kind mechanized private archive book collection allows quick access content seen step idea hypertext 
ideas vannevar bush describe personal archive associative connections documents possible 
augment project douglas engelbart developed tools enhancing efficiency 
term hypertext invented ted nelson context xanadu project 
ted nelson world wide users reuse material adding links annotations 
scope thesis give general definition hypertext 
discussions definitions hypertext example 
definition hypertext set nodes text connected links 
node contains amount information text number links nodes 
definition hypermedia extension hypertext multiple forms media text video audio graphics terms hypertext hypermedia synonymous 
thesis prefer term hypermedia 
adaptive hypermedia systems tools designing accessing hypermedia documents called hypermedia systems 
adaptive hypermedia systems adaptive hypermedia system enlarges functionality hypermedia system 
aim systems personalize hypermedia systems individual users 
user individual view individual navigational possibilities working hypermedia system 
adaptive hypermedia system combines ideas hypermedia systems ideas intelligent tutoring systems 
belongs group user adaptive systems example user adaptive interfaces user model interfaces 
discussion adaptive hypermedia systems context user adaptive systems refer 
adaptive hypermedia systems model user collect information knowledge goals experience adapt content navigational structure 
look example 
user little knowledge useful read introductory information going detail 
information interesting expert 
choice right information right time task user model 
give example tourist information system consider abilities disabilities users 
handicapped user requires opening hours city hall system return contain hints parking possibility handicapped people public transport station information entrance 
see example :10.1.1.1.6186
adaptation hypermedia systems attempt overcome lost hyperspace problem discussion see example 
user goals knowledge limiting number available links hypermedia system 
definition adaptive hypermedia systems follow proposal brusilovsky 
definition adaptive hypermedia system adaptive hypermedia systems mean hypertext hypermedia systems reflect features user user model apply model adapt various visible aspects system user support adaptive methods hypermedia systems advantageous common system serves users different goals knowledge experience underlying hyperspace relatively large 
typical applications adaptive hypermedia systems educational hypermedia systems user student certain learning goal learning goal 
systems focus knowledge students vary enormously 
knowledge state changes system 
correct modeling changing knowledge proper updating ability right base updated knowledge estimations critical part educational hypermedia system 
applications online information systems particular online help systems 
online information systems example electronic user modeling adaptive hypermedia systems data user update hypermedia system requests user adaptation component user model adaptation results get current knowledge schematic view adaptive hypermedia systems document stores tourist guides 
select right information users different background knowledge systems need model user knowledge 
context user requires information system important quick elaborating presentation refreshing knowledge 
online help systems take particular system environments account example location launched context sensitive help systems 
limiting navigational possibilities adaptive hypermedia systems combined information retrieval information retrieval hypermedia systems 
links systems designed author system similarities link documents provided documents satisfy similarity condition 
user modeling adaptive hypermedia systems adaptive hypermedia system collects information users 
base individual characteristics adapts content navigational possibilities particular user see 
section describes general approaches building user models section user characteristics section 
user models user model stores information individual user 
discussion user modeling see example 
distinguish main types user modeling techniques overlay modeling stereotype user modeling 
user modeling adaptive hypermedia systems overlay modeling overlay modeling user state knowledge described subset expert knowledge domain term overlay 
student lack knowledge derived comparing expert knowledge 
critical part overlay modeling find initial knowledge estimation 
number observations estimating knowledge sufficiently small 
addition student misconceptions knowledge concepts modeled 
stereotype user modeling stereotype user modeling approach classifies users stereotypes 
users belonging certain class assumed characteristics 
stereotype classification done adaptation feature 
stereotype user modeling problem occur stereotypes specialized obsolete consist user user classified 
characteristics user adaptive hypermedia systems need data making assumptions user 
brusilovsky identified features taken account existing hypermedia systems user knowledge goals preferences background experience 
claim learning speed taken account 
user knowledge currently existing adaptive hypermedia systems knowledge user important information adaptation 
especially educational systems changing knowledge state user critical part adaptation 
system update estimation user knowledge adaptation component actual knowledge state making adaptation steps 
user goals goals user depend current hypermedia system 
system book requires different adaptation learning goal 
educational hypermedia systems distinguish different types goals 
hand learning goal stretches sessions user system hand problem solving task vary session 
user preferences users adaptive hypermedia systems different preferences example font types pictures examples 
characteristics estimated system input users 
systems reflect user modeling adaptive hypermedia systems different kinds preferences users tune features 
assume preferences subject rapid change 
user background user background mean experiences knowledge user topic adaptive hypermedia system 
example programming experience language prolog belong background user hypermedia system learning java 
user experience characteristic concerned hypertext experience user 
user worked hypermedia system worked adaptive hypermedia system 
user learning speed opinion important user characteristic educational hypermedia systems reflected 
users different learning preferences different learning speed supported sufficiently 
methods techniques adaptation seen section hypermedia consists documents connected links 
generally aspects adapted users content content level adaptation links link level adaptation 
content level adaptation adapting content user document content tailored needs user example hiding specialized information inserting additional explanations 
identify methods content level adaptation additional explanations parts document displayed user fit knowledge goal 
prerequisite explanations user model checks prerequisites necessary understand content page 
user lacks know prerequisites corresponding information integrated page 
comparative explanations idea comparative explanations explain new topics stressing relations known topics 
user modeling adaptive hypermedia systems explanation variants providing different explanations parts document explanations selected suited user 
extends method prerequisite explanations 
sorting different parts document sorted relevance user 
techniques implementing stated adaptation methods 
conditional text kind information knowledge concept broken text parts 
text parts required knowledge displaying user defined 
stretch text keywords document replaced longer descriptions user actual knowledge requires 
page page fragment variants different variants pages parts stored 
frame technique technique stores page fragment variants concept frames 
frame slots page page fragments special order 
certain rules decide slot user 
content level adaptation requires sophisticated techniques improved presentation 
current systems content level adaptation enriching documents meta information prerequisite required knowledge outcome documents fragments contained systems written order obtain different explanations 
link level adaptation link level adaptation user possibilities navigate hypermedia system personalized 
methods show examples adaptive navigation support 
direct guidance guide user sequentially hypermedia system 
methods distinguished best provide button navigate hypertext 
page sequencing trails generate reading sequence entire hypermedia system part 
adaptive sorting sort links document due relevance user 
similarity sorting prerequisite knowledge relevance link user systems assumptions user 
systems sort links depending similarity page 
ordering required prerequisite knowledge 
adaptive hiding limit navigational possibilities hiding links irrelevant information 
hiding links realized making unavailable invisible 
examples adaptive hypermedia systems link annotation annotate links give user hints content pages point 
annotation text coloring icon dimming 
traffic light metaphor traffic light metaphor popular method link annotation 
educational state link estimated system due user actual knowledge state 
link pointing page annotated colored ball 
red ball front link indicates user lacks knowledge understanding pages page recommended reading 
yellow ball indicates links pages recommended reading recommendation strict case red ball 
green ball front links lead recommended pages 
grey balls give hint content corresponding page known user 
variants coloring exist 
traffic lights hiding mix traffic light metaphor adaptive hiding systems 
evaluation adaptive hiding adaptive navigation refer 
map annotation graphical overviews maps adapted mentioned methods 
techniques link level adaptation example discussed depend specific system 
system assumptions user play important role decide adapt 
link level adaptation restricts number links number navigational possibilities 
useful prevent user getting lost hyperspace 
case content level adaptation description content documents required implementing adaptation tasks 
examples adaptive hypermedia systems elm art elm art system successors elm art ii interbook adaptive hypermedia systems www 
stand system elm pe introductory course programming lisp 
authors episodic learner model elm diagnosing complete incomplete problem solutions 
episodic learner model stores knowledge user terms collection episodes 
episodes comparable cases case learning 
construct learner model programming code produced learner analyzed terms domain knowledge hand task description hand 
cognitive diagnosis results derivation tree concepts rules learner 
elm art concepts related prerequisites outcomes 
conceptual network constructed 
observations user monitoring visited pages concept corresponding visited page marked conceptual network known 
annotating links authors traffic light metaphor 
red ball indicates pages contain information user lacks knowledge green ball indicates suggested links examples adaptive hypermedia systems elm art contains interactive examples translated lisp compiler web 
elm art ii developed translating normal textbooks electronic textbooks 
elm art ii improves knowledge representation elm art 
conceptual network hierarchically organized lessons sections subsections terminal pages 
unit conceptual network slot text page information relating page units 
static slots contain prerequisite concepts related concepts outcome 
terminal pages contain test slots 
problem pages specific slot storing description programming problem 
individual learner model stores visited pages solved tests solved programming problems marking corresponding concepts conceptual model known 
direct guidance provided best button help proposed finding relevant example individual learning history diagnosis programming code learners solutions 
systems able inferences users knowledge marked concepts conceptual model 
prerequisites known concepts marked recursively known 
interbook interbook project electronic textbooks created base hierarchically structured ms word file 
steps creating list domain concepts structuring annotating pages outcome prerequisite knowledge translation html parsing information lisp structure done obtain interbook 
interbook uses domain user model 
glossary textbook domain model 
glossary visualized domain network 
structure glossary resembles structure domain knowledge 
glossary item corresponds domain concepts 
addition glossary entry provides links book sections concept 
textbook unit indexed domain model concepts 
concepts different roles 
concepts describe outcome knowledge user reading page prerequisite income knowledge necessary read page 
interbook supports adaptive annotation links traffic light metaphor 
implements prerequisite help presenting annotated list pages contain prerequisite information 
page sequencing done steps 
system computes scores supposed state knowledge concept 
scores system decides concept learned 
second system decides pages contain suggested teaching operations missing prerequisites 
links concepts sections different educational states annotated different icons 
third system selects optimal page available pages introduce unknown concepts missing prerequisites 
pages certain priority presentation assigned default value modified state knowledge required introduced concepts 
examples adaptive hypermedia systems interbook adaptive interfaces approach implement user adaptive interface interbook project section described 
domain model student model representation 
interface feature treated domain concept hint learning unit 
applying task sequencing algorithm similar mentioned sequence interface features learned sequence hints user generated 
pt pt personalized text system textbook learning programming language 
uses conventional book base generating hypermedia system 
course supported pt programming course pascal programmers 
pt uses stereotypical user model target audience pascal programmers individual model 
stereotype provides certain values knowledge components initializes user model 
individual model knowledge values individual user stored pt 
enabling adaptation pt uses similarities pascal presenting information users 
preprocessor commands added raw html page define pascal define active learner pascal user model 
preprocessor commands raw html page control parts page passed user 
preprocessor technique selection links 
push push project plan user sensitive help aims develop test intelligent help solutions information seeking tasks 
user enter questions followup questions navigate graphical presentation application domain 
user posed question manipulate system answer opening closing subsections manipulating graphics clicking follow questions 
knowledge application domain modeled isa hierarchy 
idea system provide questions user reading document 
questions concerned related concepts knowledge 
combinatorial construction possible questions concept relations isa hierarchy complex probably contain information set possible questions limited concepts contained page follow questions concept 
system implementation rulebased approach queries 
user verifies tasks selecting proposed links system obtains secure information user knowledge 
examples adaptive hypermedia systems avanti aim project avanti develop evaluate information system metropolitan area variety users different needs example tourists citizens travel agency clerks users disabilities 
sources information users initial interview certain user actions example requests explanations technical term 
stereotypes contain assumptions classes users 
assumptions stereotypes information individual user drawing inferences particular user 
results stored refined assumptions user serve better classifying stereotypes 
aha free web course hypermedia structures systems implemented aha system 
aha adaptive hypermedia architecture generate conditional text adapt link structure link removal link hiding link annotation 
preprocessor commands html pages cgi scripts filter content fragments page enable content adaptation 
preprocessor technique link adaptation 
aims differentiated reliable assessment student knowledge subdomain physics 
bayesian network constructed problem user working 
bayesian network reflects things likelihood user type particular equations know corresponding rules 
systems uses retrospective diagnosis called knowledge tracing 
designed performing model tracing invoked repeatedly problem solving process 
constructs underlying bayesian network incrementally adding nodes time student performs observable action 
plan recognition multi user aim system determine early possible quest player attempting multi user mud predict action player perform move 
authors employ keyhole plan recognition information available plan recognizer non interactive incomplete observations user looking room keyhole 
system learn actions positions sequences actions positions tend lead particular quest 
information modeled dynamic bayesian network 
testing phase dynamic bayesian network predict player quest action location 
examples adaptive hypermedia systems cognitive theory knowledge structures 
builds network implications knowledge units small sample user data sets uses induced network assess knowledge state limited number observations questions 
application area adapted construction user interfaces 
overlay model 
epi epi implements stereotype user model bayesian networks 
uses separate bayesian network stereotype special conditional dependencies knowledge items implemented 
attribute stereotype represents statement user knows particular concept 
functionality systems aircraft taught technicians pilots 
focusses system understanding trouble shooting strategies optimizing action take point problem 
authors hierarchical model necessary capabilities learners construct bayesian network entire application scenario 
bayesian network updated partially 
kbs hyperbook system aim kbs hyperbook system build framework designing maintaining open adaptive hypermedia systems internet 
implements project learning 
kbs concepts related base conceptual model hyperbook 
observations users user performed project hyperbook project library 
hyperbook unit indexed knowledge concepts 
separate knowledge model constructed containing knowledge concepts application domain learning dependencies 
hypertext documents contain prerequisite outcome information 
glossary containing concepts knowledge model generated 
glossary item links examples hyperbook units pages electronic books available www generated 
kbs uses traffic light metaphor see section adaptive annotation 
page sequencing algorithm generates reading sequences user goals knowledge 
helping user find way hyperbook system generates learning step user comparing actual knowledge state knowledge finishing book 
kbs supports explicitly goal learning 
users define learning goals request learning goal system 
goals reading sequence containing necessary knowledge prerequisite actual necessary knowledge reaching goal generated 
addition suitable projects discussion selected information index contains documents hyperbook documents located internet 
selection suitable projects algorithms reflect prerequisite knowledge necessary perform project project matches user actual learning goal 
kbs adapts different learning speeds users supporting kind goal oriented learning 
users define learn 
system observes user mastering advanced project sufficiently updates estimation user relation mastered topics prerequisite knowledge concepts 
user go advanced topics 
system observes user quite familiar topic proposes similar examples projects contain amount new information 
implementation technique kbs bayesian network operates complete model application domain 
observations particular user propagated entire network 
focus kbs extendibility system respect world wide web 
create open adaptive hypermedia systems indexing approach chosen kbs allows treat information unit equally independent origin 
html pages world wide web integrated way documents stored hyperbook library 
discussion compare kbs hyperbook system hyperbook approaches 
approach chosen push designed different scenario compared kbs 
addition push binds adaptation information documents authors different implementation strategies 
application avanti project different compared approaches 
application domain information systems different educational hypermedia systems techniques incomparable 
approach chosen focusses problem solving support 
bayesian networks different kbs hyperbook system uses smaller networks employs recognizing problem solving strategies knowledge estimation 
holds epi 
epi uses bayesian network class users kbs uses user 
updates parts bayesian network different techniques 
application bayesian networks plan recognition interesting approach 
application learning system different 
dynamic bayesian networks 
implement goal driven learning time critical tasks time critical sense dynamic bayesian networks 
comprehensive review current uncertainty management techniques user modeling 
size purpose bayesian network kbs differs approaches bayesian net discussion characteristics user aha elm art interbook kbs pt knowledge goals back ground learning speed characteristics user taken account hyperbook approaches navigation support aha elm art interbook kbs pt page sequencing course page course page course ad 
nav 
support hiding annotation annotation annotation hiding user observation tests tests tests direct feedback tests goal support user defined user def proposed example support section section section page section project support knowledge goals openness www methods link level adaptation hyperbook approaches works 
kbs system uses bayesian network modeling propagating knowledge domain see section 
comparable approaches kbs aha elm art ii interbook pt 
compare systems due identified criteria proposed section 
shows characteristics user taken account hyperbook approaches 
uses background information source done example epi tutor 
pt assumes users system background 
general assumption background characteristic 
content level adaptation done systems 
stated examples epi uses content level adaptation 
methods navigation support seen 
approaches interbook elm art ii means concept idea similar kbs 
adaptation features link adaptation goals page sequencing systems 
implementation strategies obtain functionalities vary 
comparing interbook kbs see difference domain description 
interbook uses conceptual network domain kbs uses conceptual model knowledge model 
slots interbook necessary kbs assumptions prerequisite discussion outcome knowledge base knowledge model 
algorithm page sequencing proposed interbook neglects connections pages 
pages selected recommended visit explicitly taken account fit previously read page 
page sequencing algorithm kbs generates sequence pages reflects ordering aware wider context learning goal information request 
example selection kbs done page contained hypermedia system 
example project libraries hyperbook checked examples illustrating content actual page 
interbook elm art ii choose examples chapter section subsection hierarchy 
preprocessor techniques pt aha differ kbs implementation 
navigational help strategies comparable 
see indexing concept underlying kbs general techniques hyperbook approaches separates documents information reading orders 
enables kbs system integrate information arbitrary origins documents adjusted existing documents 
addition kbs able select propose projects supports learners projects 
chapter teaching hyperbooks web applications typically distance learning scenarios learner uses information hyperbook 
important think useful teaching strategies encourage learner learn actively read consume passively information 
purpose emphasize constructivist learning strategies example integrating problems real world tasks curriculum hyperbooks structuring hyperbook projects relationship information pages 
learners reach learning goals receive answers information requests working problems introduce explain show learning items 
specific situation distance learning computational learning environments benefit strong background educational theory 
simply reproducing conventional teaching learning concepts computational environment utilize new technologies 
educational models show particularly interesting features parts academic education constructivist models learning teaching see discussion relationship models field instructional technology 
virtual learning environments designed properly provide functionality support improved concepts education theory difficult realize help new communication networking technologies 
critical elements design constructivist learning environments specification integration authentic complex activities learning process 
constructivist environment students encouraged solve problems occur real world 
learning environment simulates context problems students perform authentic activities decide structure solve problem collect background information develop solution strategies authentic activities shift responsibility selecting performing tasks teacher learner 
students course material actively gain deeper insight 
project approach chosen implement constructivist learning model global project constructivism theory knowledge context stimulates learning activity responsibility students find suitable solution strategy leads activities increase students problem solving competence 
environment projects provide case studies background related information working environment software projects carried students parallel lecture 
environment reflect user knowledge state appropriate information 
teacher role coach student teach initial concepts necessary task 
real world examples characterized complex context arise applications techniques concepts occur simplified forms highly abstracted exercise problems learners see discussion 
abstraction course necessary small exercises discuss specific issues project learning rebuild real world complexity 
global project context determines learners perspective task subtasks smaller context provide guidance learning process 
ability develop multiple alternative perspectives problem central skill performing tasks authentic activity 
collaborative learning promotes exchange reflection different views 
project done teams learners train capabilities team collaboration 
constructivism theory knowledge years constructivism philosophical epistemological pedagogical approach great deal attention 
authors concentrated various aspects approach influential authors ernst von discussed radical constructivism theory knowledge cognition applications teaching 
defined constructivism principles knowledge passively received sensing communicating actively built subject 
function cognition adaptive tries increase fitness viability 
serves organization experiential world subject discovery ontological reality 
characterization oriented knowledge construction subject explicitly account social aspects knowledge construction various researchers suggested context socially oriented view constructivism see example discussion 
ambitious definition just acknowledges learners including scientists construct reconstruct meaning ideas world works concentrating just principle definition 
leads change role teacher discussed teacher needs create situations student useful problems teacher provides counter examples compelling reflection reconsideration solutions teacher acting mentor stimulating initiative research lecturer transmits ready solutions 
chapter review approaches taken researchers educators constructivist approach proceed show conceptual constructivism theory knowledge modeling helps implement didactic goals approach introductory computer science course 
constructivism teaching sees constructivist pedagogy counterpart pedagogy stresses importance teaching aims generation understanding versus pure training performance geared perfectly solving textbook problems 
knowing adaptive activity leads set successful viable concepts models theories relative context goals purposes 
learning requires self regulation building conceptual structures reflection abstraction problems solved retrieval memorized right answers 
stresses need understand students thinking encourage reflect models means improve verbalizing 
social interaction important stimulus reflection motivating knowledge construction adaptation 
constructivist concepts discussed papers include problem oriented inquiry oriented learning discussion thought protocols obtain insight student mathematical thinking necessity contradictions construction awareness depending previous knowledge importance student models learning cognitive restructuring teaching problem solving class interactions small group interactions curiosity reflection 
papert colleagues term stress learning social design activity computer science computer learning 
similar stress students construct new knowledge particular effectiveness engaged personally meaningful products 
goals teacher engage learner active participation problem solving interdisciplinary reflection discussion 
stress intrinsic motivation resulting learners choosing projects open learning community mentors students 
members group focus mainly learning children principles approach applicable student professional learners 
social knowledge sharing aspect stressed long running project project computer supported intentional learning environments successor knowledge forum see aims networked collaborative learning environment designed support classroom knowledge building community collaborative knowledge building modeled scientific research team 
provides communal database stores notes annotations discussion items links network nodes visualized knowledge map 
focuses intentional learning learners strive expand knowledge collectively 
implementing constructivist teaching concepts cs course implementing constructivist teaching concepts cs course especially ideas learning design activity advocated papert colleagues learning intentional activity involving knowledge building discussion focus cs course issues integrating goal oriented learning projects authored lecturers students course materials connecting student projects rest course material showing cs concepts applied learned part project 
conceptual model see section hyperbook concentrates problem oriented inquiry oriented aspect explicitly models relevant aspects support goal directed inquiry oriented learning style 
students need know materials necessary specific projects personalized learning sequences information indexes retrieve required information hyperbook pages 
goal orientation important aspect educational hyperbooks 
want determine learning path student student group students free define learning goals learning sequence 
step ask hyperbook relevant material teaching sequences hints practice examples projects 
need advice find learning path ask hyperbook suitable learning goal 
project learning constructivist learning models project learning supported different approaches viewed different perspectives 
sketch starting concepts discussed learning principles 
simulation learning doing acquisition knowledge guided goals projects actively pursued students 
knowledge techniques learned fulfill specific tasks needed reach project goals 
teachers give help needed 
support learning doing simulations kinds tasks built 
incidental learning projects goals course selected teacher way skills knowledge needed pursue goals correspond conventional course content 
obviously task oriented learning environment single set techniques leads project success 
base set knowledge skills learnt set students individually control learning depending previous knowledge individual preferences 
learning reflection students encouraged reflect problems different solutions student groups 
continuous discussion teachers students leads original solutions new insights 
excursion kbs virtual classroom project case teaching presentation knowledge teaching staff depends certain extent progress students solving problems 
support oriented mainly cases attached related knowledge facts problem solving methods 
cases continuously added knowledge base learning environment represent increasing knowledge support base students 
learning exploring communication teachers students main part approach 
topics course discussed study groups teacher 
small learning units contain needed knowledge 
learning units knowledge base extended students teachers 
students engaged study find facts skills research results 
excursion kbs virtual classroom project kbs virtual classroom project working virtual learning environment internet world wide web 
main goal project utilize full power techniques innovate teaching learning courses just ordinary lectures internet 
kbs virtual classroom project provides environment adaptive hyperbooks university teaching 
evaluated 
results evaluations directly subsequent implementation learning environment kbs hyperbook system 
availability working environment order working environment continuously available access parts working environment including information software tools enabled internet 
access internet students campus computers phone lines terminal servers university computing center students internet providers 
tools available current operating systems students locally computer access including course home computers 
license restrictions impossible case large software engineering tool anytime access internet available currently interface 
locally tools internet access central servers repository communication facilities possible 
online information downloadable offline 
project learning courses supported kbs virtual classroom environment projects tailored specifically course contents 
example cs course undergraduates consists large programming project stretches semester software engineering course larger project spanning 
excursion kbs virtual classroom project project results programs documentation project world wide web available groups students 
motivates students solve larger real world problems elaborate way suitable external presentation 
team oriented learning mentoring project learning done groups students 
groups formed semester 
students group common project results 
collaborative learning working encouraged 
group assign personal mentor graduate student ph student professor 
mentor available personally specific hours weeks anytime electronic communication facilities 
group meetings discussions possible personal electronic form 
electronic communication facilities student group group communication center includes mail lists students group plus including group mentor communication room www read write access restricted members group presentation room www readable 
course includes discussion groups implemented newsgroups official announcements general discussion questions course oriented exercises plus student answers discussion forum free communication directly related course cyber cafe 
announcements discussion forum automatically archived indexed available www 
synchronous communication take place text chat tool kbs online chat forum 
facilities available operating systems computers connected internet anyway 
network environment server located institute serves central repository material lecture slides tutorials web pages hyperbook programs central repositories www communication presentation area stored institute server 
variety working environments accessing data supported classically working client institute accessing data ethernet nfs accessing data home pc modem connection dedicated machine network accessing data university computer pool student home pc connecting modem dedicated student server configured support large number parallel modem isdn connections 
discussion requirements enabling project learning discussion requirements enabling project learning central requirement constructivist teaching approach keep hyperbook maintainable extendible possible 
maintainable structure allows integrate students results seamlessly keep theoretical course materials date minimum effort 
implementation sophisticated conceptual backbone requires rigorous modeling 
propose conceptual modeling approach hyperbooks see section explicitly represents aspects hyperbook application domain access information 
integrating student projects hyperbook idea portfolios discussed section 
students demonstrate portfolio concepts course project 
important requirement information presentation project learning approach 
students supposed course projects smaller projects examples contained hyperbook require information background knowledge 
task hyperbook select suitable information user 
students working hyperbook internet integration useful information internet learning material near hand 
hyperbook serve date information repository 
selecting annotating information student goals knowledge support project 
addition reading sequences generated 
lead student actual knowledge requested information including necessary prerequisites lacks know 
working larger project requires definition subtasks solved hyperbook support goal learning 
user able define learning goals 
system able generate appropriate learning goals learning steps user 
reach proposed self defined learning goal system able find relevant projects examples related goal 
selecting algorithms 
suitable projects user match current learning goal consider actual knowledge 
kbs hyperbook system implements stated requirements 
chapter describe functionality kbs hyperbooks system modeling approach focussing conceptual modeling integration projects portfolios openness system integrating material located www 
chapter describe concept realization adaptation component kbs hyperbook system detail 
chapter adaptation kbs hyperbook system shown 
chapter kbs hyperbook system kbs hyperbook system tool modeling organizing maintaining adaptive open hypermedia systems www 
open context means hypermedia systems able integrate distributed information 
system developed institut university hannover english name knowledge systems group kbs gave name project 
adaptive hyperbooks personalize information user needs knowledge 
typical applications books educational hypermedia systems system models course guides student course learning material supports student access useful information 
project teaching approach chosen creating adaptive hyperbooks education described chapter 
chapter starts definition adaptive hyperbooks overview modeling approach apply kbs hyperbook system 
describe conceptual model modeling course instruction material hyperbook system example cs computer science course introductory course programming java undergraduate students electrical engineering computer science 
show way integrate student projects hyperbook idea portfolios 
definition hyperbooks emergence world wide web concept hypertext main representation presentation format variety applications 
quite prominent hypertext books hyperbooks characterized grouping electronic texts considered entity 
cases hyperbooks retain conventional book structure partitioned sub documents called chapters sections subsections appendices 
definition includes electronic books characterized existing books meant read computer screen 
starting simple definition transfer printed books electronic form emerged wide research area 
projects deal broad variety printed books translated data formats plain text ascii acrobat reader format table contents trans conceptual modeling adaptive hyperbooks lated hypertext interface book 
sophisticated approaches re edit existing printed books adding pictures remarks annotations hypertext links 
start specialized hypertext system build networks documents way possible printed versions web intermedia system applications realized athena system 
research done design specialized hardware electronic books organizers portable pcs electronic book readers 
focus definition hypertext books particular emphasis structure semantic contents corresponding functionality book term adaptive hyperbook distinguish variants hypertext books 
definition adaptive hyperbook adaptive hyperbook information repository integrates set distributed information explicit conceptual models 
research development hyperbooks focused educational sector hypertext technologies implement learning environments intelligent tutors 
systems provide contents covered far normal text books integrate hypertext system guides users learning processes 
conceptual modeling adaptive hyperbooks structuring concepts domain ontologies important activity example natural language processing information retrieval 
related terminological research comparison see 
kbs hyperbook system structures displays hypertext materials conceptual models 
ontologies wider sense discussed including conceptual models representation ontologies task ontologies just taxonomic domain ontologies domain ontologies play role hyperbook system want structure hyperbook contents 
avoid misunderstandings term conceptual models 
section describes conceptual model models courses different kinds materials projects examples portfolios html pages integration information world wide web see 
example show integration sun java tutorial hyperbook 
sun java tutorial free available internet suited integrated learning material cs hyperbook 
declarative representation hyperbook data models dialect object oriented conceptual modeling language telos implemented conceptbase system 
language combines object oriented concepts conceptual modeling adaptive hyperbooks course group illustrated relevant information goal relevant information trail generated goal 
goal text unit lecture course knowledge items glossary hyperbook unit relevant relevant examples information relevant information documented area example project relevant examples relevant information sun java tutorial student projects conceptual model cs hyperbook legend er modeling constructs static relations dynamically generated relations student group portfolio projects actual projects conceptual modeling adaptive hyperbooks course group course student projects actual projects 
goal goal projects generated goal glossary area lecture trail relevant information knowledge items portfolio documented sun java tutorial relevant information relevant relevant examples information relevant information student group text unit hyperbook unit relevant examples relevant information illustrated example project legend er modeling constructs static relations dynamically generated relations conceptual model cs hyperbook course related modeling highlighted deductive rules constraints 
due representational power telos suitable meta modeling describing domain specific modeling languages 
allows research meta modeling kbs hyperbook system ideas concepts resource description framework rdf 
modeling courses lectures central part conceptual model see highlighted concepts entity course represents real course university institutions 
course consists lectures 
course relation course group 
course group integrates different courses topic 
take example cs course 
winter semester institut university hannover held course undergraduate students electrical engineering technical computer science 
similar course support institute europ akademie 
cs courses modeled courses belong course group cs 
course glossary generation glossary entries see section number areas structure application domain see section 
embedding project portfolios learning material important part teaching concept see section 
model integration course related projects 
projects actual projects course students 
projects give examples projects performed students past courses contain portfolios see section 
conceptual modeling adaptive hyperbooks example course modeled kbs hyperbook system support goal oriented learning students define learning goals user defined goals request new reasonable goals hyperbook generated goals 
selection support goals see sections 
gives example cs course winter semester 
mentioned relation course concepts displayed link left frame 
specific lectures course seen current student projects areas domain course examples projects reasonable learning goal lecture group 
modeling different information resources lecture consists sequence text units teacher lecture see highlighted concept 
text unit hyperbook unit information page belonging hyperbook library 
example showing concept 
kbs hyperbook system allows integrate information located www text units information pages www example pages sun java tutorial 
types text units links related information generated see section 
example hyperbook unit links relevant examples generated links relevant sun tutorial pages give alternative descriptions concepts 
see right hand side html page methods hyperbook library 
methods studied example student group uppermost link left hand side sun java tutorial contributes links relevant information pages 
conceptual modeling adaptive hyperbooks course group course student projects actual projects 
goal goal projects generated goal glossary area lecture trail relevant information knowledge items portfolio documented sun java tutorial relevant information relevant relevant examples information relevant information student group text unit hyperbook unit relevant examples relevant information illustrated example project legend er modeling constructs static relations dynamically generated relations conceptual model cs hyperbook modeling different information resources highlighted hyperbook unit methoden links examples sun java tutorial pages lectures occurs 
hyperbook unit methoden contained lecture find link lecture 
conceptual modeling adaptive hyperbooks example integration sun java tutorial pages kbs hyperbook system see integration sun java tutorial page hyperbook 
page displayed manner origin hyperbook library 
stream pages modifications hyperbook 
links contained page remain valid 
user clicks link corresponding page displayed way 
links left hand side remain unchanged 
sun tutorial page link example hyperbook unit generated 
modeling index relate different types text units support student goals provide guidance enabling different adaptation features kbs hyperbook system introduced indexing concept explained detail chapter 
conceptual model see index concepts called knowledge items relations glossary areas portfolios goals text units see highlighted concepts 
concepts indexed set knowledge items 
modeling portfolios order support project learning described section conceptual model contains concept portfolio see 
discussed assessment conceptual modeling adaptive hyperbooks course group course student projects actual projects 
goal goal projects generated goal glossary area lecture trail relevant information knowledge items portfolio documented sun java tutorial relevant information relevant relevant examples information relevant information student group text unit hyperbook unit relevant examples relevant information illustrated example project legend er modeling constructs static relations dynamically generated relations conceptual model cs hyperbook emphasized index strategy course group course student projects actual projects 
goal goal projects generated goal glossary area lecture trail relevant information knowledge items portfolio documented sun java tutorial relevant information relevant relevant examples information relevant information student group text unit hyperbook unit relevant examples relevant information illustrated example project legend er modeling constructs static relations dynamically generated relations conceptual model cs hyperbook modeling portfolios emphasized portfolios realizes idea project results represent assess concepts student successfully applied learned 
model portfolio part hierarchy representing different parts student project 
see hierarchy enlarges conceptual model section 
hierarchy mirrors simplified software modeling process cs course 
important parts specification written students object oriented design proposal consisting documenting implementation program code 
program code conceptual modeling adaptive hyperbooks project assignment portfolio specification design static design diagram classes attributes relations student group program fragments dynamic design interactions scenarios program schematic view portfolio part hierarchy broken different program fragments showing specific concept application domain 
help students defining portfolios propose list concepts containing topics java domain 
concepts mandatory portfolios example scenarios interactions dynamic design project lot optional concepts 
students choose optional concepts representing portfolio individually 
part portfolio concepts seen list 
concepts marked asterisk contained student portfolio concepts optional 
concept list indexed exactly knowledge item easily integrate portfolio concepts student group hyperbook 
object oriented design specification static design classes attributes relations object oriented diagram dynamic design interactions interaction diagram scenarios java applet applet methods html tag 
user interface event model event source system architecture event listener adapter events action event text event item event adjustment event awt classes panel frame 
conceptual model hyperbook group portfolio concepts student group area concepts 
area consists knowledge items able integrate portfolios students index portfolio concepts 
define basic structure student projects connection remainder course material 
shows portfolio student group called implemented car racing game java 
clearly important part portfolio self presentation students worked 
student homepages integrated hyperbook see relation concepts student group portfolio 
shows example homepage student group worked portfolio cs course 
system architecture kbs hyperbook system implemented entirely java 
servlet residing java web server see fig 
represents system 
student browses hyperbook html browser capable handling frames necessary processing done server side 
presentation functionalities trails see section realized java client applets 
user navigates hyperbook activating links 
links represent static html pages 
hyperlink activated name corresponding domain object plus name user passed java servlet residing server 
page composition program queries data base url page representing domain object domain object navigational possibilities 
information constructs user specific page displays user www browser 
server side different components resolve users requests 
describe functionality components 
storage module base kbs hyperbook system storage module 
contains data specific hyperbook instances concepts conceptual model system architecture portfolio student group homepage student group 
system architecture adaptation module resolving requests generate individually hyperbook page adaptation ii educational state relations adaptation dynamically generated relations visualisation module navigation module storage module www server java web server hyperbook servlet intra internet browser schematic view implementation hyperbook system hyperbook question implements query interface 
serves data repository called modules 
navigation module navigation module describes navigational possibilities hyperbook 
uses relations defined conceptual model generate navigational constructs reading viewing navigating resulting hyperbook 
relations conceptual model correspond navigational constructs displayed hyperbook page hypertext links 
modifications extensions conceptual model automatically translated navigational structure hyperbook 
adaptation module navigation module calls adaptation module adapting hyperbook particular user 
adaptation module dynamically generates relations dotted lines trails learning steps annotates link structure traffic light metaphor 
adaptation module asks storage module type actual concept 
text unit adapted dynamically generated relations examples information sun java tutorial hyperbook library see section returned 
adaptation instances course concept reasonable learning goal user knowledge generated section navigation module receives corresponding relation 
student defines learning goal requests learning goal hyperbook system text units containing useful information particular project system architecture selected section 
addition learning sequence containing information necessary reaching learning goal generated section projects selected project library section 
having collected static dynamic relations navigation module asks adaptation module educational state relations particular page 
visualization module visualization module takes information relations static dynamically relations plus actual educational state displaying annotated hypertext links left hand side hyperbook web page displayed right hand side hyperbook 
exception access reasonable hyperbook page guides user hyperbook displayed link left frame symbolized dog ear bottom right hand side 
arrow bottom left hand side brings user back current course working 
chapter adaptation component kbs hyperbook system main goals student modeling educational hypermedia student guidance 
students learning goals previous knowledge reflected hyperbook adapting content link structure hyperdocument 
kbs hyperbook system follow constructivist pedagogic approach building project learning group discussions see chapter 
project learning environment leads particular requirements adaptation order adapt project resources set hypermedia documents student goals specific project student knowledge 
support student learner implementing adaptation functionality adaptive information resources give students appropriate information performing projects annotating necessary project resources depending current student knowledge 
adaptive navigational structure annotate navigational structure order give student additional information appropriate material explore learn 
adaptive trail generation provide guidance generating sequential trail part hyperbook depending student goals 
adaptive project selection provide suitable projects depending student goals knowledge 
adaptive goal selection propose suitable learning goals depending particular student knowledge 
chapter describe concept realization adaptation component kbs hyperbooks 
student modeling component fulfill various tasks 
hand enable stated adaptation functionality 
hand enable adaptation functionality depends openness kbs hyperbook approach information resources located www included curriculum student hyperbook explanations examples origin hyperbook libraries location www 
modeling knowledge domain modeling knowledge domain knowledge items connection kbs hyperbook system user modeling component indexing kind information resources html pages hyperbook projects examples web pages hyperbook 
index concepts called knowledge items ki 
knowledge items similar domain model concepts knowledge units 
example knowledge items ki cs hyperbook example classes datagram socket run method ki may compound control structures 
put partial order set ki represent learning dependencies 
ki ki denotes fact ki learned ki understanding ki prerequisite understanding ki 
example understand ki control structures necessary know ki branching looping looping control structures branching control structures 
describing knowledge domain identify relevant knowledge items application domain hyperbook specify main knowledge items book 
done different ways depending application domain 
example hyperbook course java programming contains main ki related acm computing classification system version language constructs features 
classes objects 
methods procedures functions subroutines 
inheritance 
interfaces polymorphism resp 
design tools techniques modules interfaces 
data types operators data types structures resp 
subtopics data structures 
control structures 
concurrent programming structures 
error handling recovery testing debugging error handling recovery 
java windowing system user interfaces windowing systems 
java networking constructs local wide area networks internet 
algorithms 
recursion resp 
files searching sorting 
input output www acm org class ccs html better classified modeling user knowledge 
java applets related processors run time environment 
java applications related procedures functions subroutines additional java specific topics 
java api software libraries modules packages 
programming environment subtopics coding tools processors introductory software engineering concepts 
object oriented design methods ki accompanied set knowledge items describing aspects topic precisely 
example control structures subtopics branching looping return statement exit statement execution block 
ki branching subtopics switch 
resulting set knowledge items seen appendix modeling user knowledge knowledge user modeled knowledge vector kv 
component vector conditional probability describing system estimation user knowledge topic ki base observations system definition knowledge vector kv kv ki ki 
kin ki 
ki knowledge items application domain denotes evidence system monitors hyperbook 
observations student hyperbook stored ki observation expresses grade knowledge user ki grades student expert knowledge ki rating excellent advanced knowledge rating difficulties mainly excellent beginner knowledge rating difficulties master concept novice knowledge rating ready concept 
thematically related methods classes objects data types operators indexing information html pages examples projects ki hand concepts describing application domain book hand random variables discrete values coding knowledge grades 
evidence obtain student hyperbook changes time 
normally student knowledge increases working hyperbook lack knowledge equally taken evidence 
kind observation student collected evidence knowledge vector gives time snapshot student current knowledge 
indexing information html pages examples projects section see index various information resources 
information resource indexed set knowledge items describing content resource 
resources general html pages examples projects origin information resource relevant indexing content defines index 
definition content map set ki set html pages 
content map gives information resource index resource set ki describing content 
identify index information resource scan text keywords phrases 
indexing done author information resource hand 
indexing html pages html page indexed ki describe content page 
difference indexing information resources belonging hyperbook indexing information resources belonging server web 
content html page relevant indexing 
indexing introductory pages general ki knowledge model indexing 
introductory concepts set knowledge items phrase 
concepts useful describing entry points detailed information 
authors prefer give short overview topic going detailed description 
furthermore new convention enables system generate glossary seen section 
indexing information html pages examples projects example explain applet programming java author starts description stand programs distributed www 
information resource contain information writing java applets useful information understanding idea applets 
index page contains ki ki ki java applets 
example cs hyperbook applets resource indexing detailed information information resource contains detailed description topic corresponding ki knowledge model indexing 
example information resource describing main method java application indexed ki public static void main 
page contains information reading command line parameters index contain ki public static void main input parameter 
hierarchy knowledge items abbreviating indexing process 
example page contains basic information applications index may consist system println input parameter public static void main executable 
seen complete list ki appendix mentioned ki exactly subtopics ki java application 
avoid unnecessary indexing author ki java application indexing content particular page java application 
indexing chapters areas kbs hyperbook system concept areas partition application domain see section 
example concepts acm classification see section area concepts cs hyperbook 
area pages need different index sets 
describing range area 
indexing content 
simplify indexing step avoid different index sets ask authors pages index relevant ki chapter area item index ki describing content actual page 
indexing portfolios portfolio concept indexed ki describe particular content portfolio page see section 
indexing examples projects indexing examples projects similar indexing arbitrary hyperbook pages topic explained example indexed corresponding ki discussion higher level ki 
emphasize specific topics important explained example author project provide weights ki indexing project 
weight percentage ki particular project 
example threads applets project shows threads loading data applets 
indexed ki java applet single thread 
update observations users systems detect fact student reads information update estimate knowledge 
include reading time sequence read pages enhance estimation 
viable approach disadvantage difficult measure knowledge student gains reading html page 
current state development decided take account information visited pages student path hypertext 
projects updating system 
motivated teaching approach hyperbooks see section 
motivating students explore learning material doing projects hyperbook updated results student performance project 
updating happen ways ask student direct feedback working project 
student judges performance selecting categories topic easy mastered effortless topic okay problems arising topic hard ideas get thing right idea topic 
categories correspond grades knowledge user ki see section 
second way ask experts judging student project performance 
indexing constraints obtaining correct indexing hyperbook see section index set obey constraint motivated project learning approach see section underlying hyperbooks 
seen section performance students projects indicators learning progresses 
projects source updating hyperbook 
requires ki contained index set project discussion ki project ki section seen knowledge items indexing kinds information belonging hyperbook located www 
indexing concept student user modeling way new 
discussion approaches model dependencies prerequisites outcomes directly information resources 
separate knowledge information model learning dependencies solely set ki hyperbook 
connection student modeling component hyperbook system content map see definition maps information resource set ki separation advantageous aspects 
kbs hyperbook system allows different authors write parts book independent write index information entries caring content hyperbook 
kbs hyperbook system open hypermedia system allowing include information resources located www 
information resources equal sense need indexed integrated particular hyperbook openness enabled indexing concept 
addition see chapter kinds information resources arbitrary origins fully integrated adapted student needs propose programming examples www generate reading sequences contain material hyperbook library www calculate educational state html pages www student actual knowledge state clearly separate knowledge model hyperbook system robust changes 
add additional information pages change contents re index pages accordingly 
spent updating material necessary knowledge reading learning dependencies coded material 
chosen way implementation enables apply different inference mechanisms student modeling component 
inference technique currently kbs hyperbook systems bayesian inference see chapter 
adaptation component features robust changes different information origins hyperbook electronic books arbitrary information resources www multiple authors hyperbook may independently student modeling component serving arbitrary dependency engine 
chapter bayesian network engine calculating probabilities far seen knowledge items describing knowledge domain describing student knowledge indexing different kinds information resources 
probabilities giving estimation student knowledge intuitive approach 
give estimation student knowledge topic calculating conditional probability known student condition evidence evidence previously detected information student section 
conditional probabilities describing student knowledge obvious look inferring mechanisms allow handle networks dependent random variables 
bayesian networks bn useful tools inferring graphs dependent vertices 
bn calculate probability distribution ki calculating knowledge vector users 
definition bayesian network bn bayesian network directed acyclic graph properties vertex graph represents random variable 
edge dependent vertex labeled conditional probability table cpt quantifies effect parents 
vertex called children called parents 
vertex called root 
construct bayesian network calculates probability distribution ki hyperbook particular user main steps take generating acyclic graph contains knowledge items vertices learning dependencies edges see section 
second defining probability tables vertices see section 
bayesian network graph bayesian network graph dependencies ki partial order defined section construct dependency graph ki hyperbook 
look main ki hyperbook describe areas application domain 
case cs hyperbook ki acm classification section 
dependency graph neighbouring graph partial ordering set ki edge exists subgraph dependency graph cs hyperbook contains main ki seen 
error handling recovery interfaces inheritance java api concurrent programming java windowing system control structures networking java application classes objects software engineering programming environment algorithms input output java applet data types operators methods dependency graph ki acm classification ki acm classification set ki describing detail section construct main ki dependency graph containing ki subconcepts 
sequel assume graphs rooted trees having main concept root 
root tree containing ki classes objects subtopics 
dependency graph ki acm classification rooted trees ki basic graph bayesian network 
structure basic graph categorize main ki level aspects level contains simple topics require prerequisite knowledge understanding 
second level contains advanced topics require knowledge level concepts 
third level level compound topics understood knowing second level topics 
assume sequel distinct main ki level related independent random variables 
second level divided parts necessary understand third level concepts level part required third level concept level 
optional topics bayesian network graph classes objects variable variable declaration class body constants classes objects import declaration packages packages package declaration class declaration class instantiation constructors life time objects rooted tree acm classification ki classes objects level level level level schematic model bayesian network underlying user model occur level level 
want optional topics topics contained user knowledge vector user read hyperbook skipping 
cs hyperbook sectioning level level consists topics classes objects methods data types operators programming environment object oriented concepts software engineering 
level consists topics input output java application object oriented design methods 
level contains control structures interfaces inheritance java applet java api 
bayesian network graph bayesian network cycle bayesian network applying clustering method example eliminating continuously directed cycle clustering level java windowing system error handling recovery concurrent programming structures java networking constructs algorithms 
clustering formalism concerns construct bayesian network random variables give probability distribution calculating knowledge user 
seen section random variables discrete values 
recall range size 
assume random variables number discrete values 
matter simplification 
course random variables different values considerations theorems remain true 
exact inference bayesian networks known np hard 
general bayesian network represent propositional logic problem probabilities propositional logic problems known np hard 
linear time algorithms exist bayesian networks cycles underlying undirected graph 
methods deal continuously directed cycles clustering conditioning stochastic simulation algorithms 
clustering algorithms glue nodes avoid continuously directed cycles see example 
example clustering method seen 
variables clustered single node bc 
range bc cross product ranges query average values variable cluster node 
finding right cluster nodes important part clustering 
conditional probability tables cluster nodes contain cross product range clustered variables number required calculations querying network may increase exponentially 
case previously constructed bn graph containing lots continuously directed cycles seen 
attempts apply clustering bn led networks large number cluster nodes 
necessary bayesian network graph bayesian network cycle 
bayesian network applying conditioning method example eliminating continuously directed cycle conditioning cluster nodes twice querying ki constructed network dependent number average calculations 
conditioning methods transform network simpler networks see example 
networks contains random variables instantiated values 
example random variable discrete values conditioning method leads new networks variable instantiated values 
number networks conditioning method increases exponentially number instantiated variables values approach disadvantageous application propagate large number constructed bayesian networks 
stochastic simulation methods run repeatedly simulations network calculating approximations exact evaluation see example 
likelihood weighting performance problematic 
cpsc project example bn nodes links needs minutes calculating accurate values 
network cs hyperbook contains nodes answers realtime possible approach 
decided investigate solution tailored application domain 
discussion advantages probabilistic reasoning compared fuzzy logic methods rule reasoning artificial intelligence see 
developed special clustering formalism enables generate directed graph cycles underlying undirected graph see section 
algorithm able apply bayesian inference generated graph exact inferring algorithm 
reimplemented algorithm java 
needs average seconds sparc machine query node 
clustering formalism introduces new additional cluster node nearly nodes remain unchanged conditional probability tables child vertices cluster modified 
additional cluster node takes information parent nodes passes child nodes seen 
continuously directed cycles dependencies parents children deleted 
cluster node distribute evidence parents directly children bayesian network graph nodes level 
nodes level 
cluster nodes level cluster 
basic concepts nodes level graph applying clustering twice evidence child nodes propagated parent nodes poor 
kind updating need bn 
example observation student masters ki control structures say secure knowledge algorithms event model 
see student implementing search algorithm say high probability knows control program flow 
mainly interested carrying information parents child nodes 
construct cluster distributes information parents children see define node random variable range sum ranges child nodes 
doing exactly part range cluster variable holds particular child node 
child listen part cluster variable range holds information 
example observe user knowing ki grade expert knowledge ki grade beginner knowledge parents ki information pass child best grade knowledge user parent variables 
example grade knowledge distribute definitions show construct conditional probability tables cluster node children 
theorem shows children cluster vertex depend original parents clustering formalism serves purposes 
definition cond 
probability table cpt cluster node 
xn 
ym random variables 
yi 
dependent xk 

conditional probability table cluster node xl yi matrix denotes range discrete random variable yi 
denote part range carries information node yi 

xn 
xn best grade xl 
xl dependent bayesian network graph parent nodes parent nodes cluster node child nodes child nodes 
xk 
xn 
xk 
xn 
xk 
xn 
xk 
xn 
role cluster node 





range holds range holds evidence node evidence node ym 

ym 
ym 
cpt cluster node parents children 
best grade returns maximum value random variables interpretation best grade knowledge observe parent variables depends 
note random variable cluster node values sum values children cluster 
gives example cpt cluster node 
probability table assigned child node cluster node consists parts blueprint table values random variable cluster node correspond particular child node equal distribution values 
example cpt value discrete random variables see 
definition cpt child nodes cluster node 
xn random variables dependent xk 

range 
ly denote part range holds information cpt cluster node parents 
xn child defined follows 

ly bayesian network graph cluster node 







range holding evidence conditional probability table child node cluster node theorem cluster nodes serve probability distributors 
xn parents cluster node 
ym children ij 
yi xj yi 

xi xi xl dependent proof range yi 
denote part range holds evidence yi 
range xi conditional independent xi xi 
xik il 
handle left side stated equation xi cond 
independent ly xi xi xi xi xi xi bayesian network graph yi obtain case yi ly ly ym yi xi xi 
xi exactly ly cases xi exactly ly cases left hand side equation yields xi handle right hand side equation xi xi xi xi ln xi xi bayesian network graph ly 
ly case yi ly changed ly case yi ly changed ln xi xi xi xi xi ln xi ln xi ln xi ln ln ln ly exactly ly cases components possible values component terms ly xi xi xi ln xi ln bayesian network graph xi exactly ly cases ln ln obtain right hand side stated equation xi compare obtain stated equation 
corollary xi yj 

independent random variables bn 
yj child node xi cluster node theorem 
yj xi yj proof theorem obtain yj xi total prob 
formula theorem cond 
prob 
total prob 
formula yi 
xi xi xn xi xi xn xi xi xn yj xi xi yj yj shows sum conditional probabilities nodes influence xi carries new evidence case evidence propagated bn value equals old value 
finding conditional probability tables apply clustering formalism twice obtain directed graph cycles underlying directed graph see 
cluster node eliminating continuously directed cycles level concepts eliminating continuously directed cycles level level concepts 
ready step construction bayesian network 
finding conditional probability tables generating directed acyclic graph dependency graph add node graph probability table containing conditional probabilities child node respect parent node 
sorting quicksort 
quicksort 
quicksort 
quicksort 
conditional probability table node quicksort dependent node sorting provide blueprint tables express strong dependency parent node child node assume example user familiar sorting know quick sort algorithm 
conditional probability table node quick sort reflects kind dependency assuming expert advanced beginner novice parent node sorting high probability expert advanced beginner novice respectively child node quick sort 
find conditional probability table investigated distributions 
result seen 
similar way conditional probability tables weaker dependencies example child node layout manager complicated layout manager java parent node layout manager see root nodes bn see 
layout manager 



weak conditional probability table node layout manager dependent node layout manager advantages bn algorithms algorithms algorithms algorithms algorithms conditional probability table root nodes example cs hyperbook knowledge control structures related knowledge algorithms observe user knowing implement algorithm probably operations control execution program said see user doing building graphical interface 
control structures necessarily 
finishes step construction process bayesian network 
advantages bn bayesian networks useful user modeling enable manage uncertainty observations 
making observations currently values values finer grades distinguishing knowledge possible 
making estimate conditional probability student knowing ki grade expert ki grade expert advanced beginner novice 
bayesian community states conditional probabilities relatively easy estimate 
go far interpret conditional probability persons subjective belief body knowledge may include person particular assumptions 
advantage bn inferences top complete knowledge model application domain 
knowledge model contains necessary prerequisites particular knowledge item models dependencies knowledge items able infer example prerequisite knowledge ki acquired user ki understood user 
bn possible observations user hyperbook hyperbook projects update system estimate user knowledge way application requires 
example system estimate user knowledge pessimistic user solves advanced project hyperbook thought difficult system observation update estimate successful completion project unit indexing project units knowledge items 
hand observe advanced user failing understand simple concepts bn selectively change estimate user respect concepts classifying complete beginner suggest specific project units learning concepts 
advantage bns managing uncertainty observations 
degree information user knowledge failed failed 
interpreting bayesian network probability distribution continuous random variable legend probability distribution discrete random variable interpretation adaptation semantic information units concept known user concept known user concept known user concept partly known user expert knowledge advanced knowledge beginner knowledge newcomer knowledge concept known user interpretation probability distributions bayesian network interpreting bayesian network having inferring mechanism knowledge model interpret results calculation classify user knowledge expert beginner 
compared continuous variable look maximum distribution see 
knowledge item example known user known user 
bayesian network cs hyperbook bayesian network cs hyperbook far constructed acyclic graph base set ki learning dependencies see section defined suitable conditional probability tables kinds vertices graph see section 
part bayesian network cs hyperbook seen 
bayesian network contains nodes 
shows system estimation knowledge new user priori knowledge topics concerned java 
probabilities assigned vertices algorithms searching seen snapshot 
part bayesian network cs hyperbook chapter enabled adaptation chapter describe facilities adaptation component enabled indexing knowledge estimation approach proposed chapters 
solve adaptation tasks content map see definition refined 
authors arbitrary knowledge items indexing find dependencies knowledge model implicitly index 
example author uses ki leaf bayesian network ki children form index 
refining content map index concepts completed recursively child concepts 
completion affect levels children belonging acm classification topics see section parents added index seen 
link annotation annotation links useful user wants browse hyperbook 
links enriched additional information heading short concept links hint indicating educational state link 
heading index concepts author information resource index concepts resource adding child concepts example completion index set 
access relevant information trails information index short page belong meta description information resource displayed kbs hyperbook system link generated see chapter section 
calculating relevance information student actual knowledge state simple traffic light metaphor see section annotation links marked ready reading green ball front link ready reading red ball known grey ball help user selecting appropriate information units 
calculating educational state link ready reading function calculates different types information resources educational state information specific user current knowledge 
definitions ready reading function ki child known known known known ki parent known known known see section 
calculating educational state html page look index page 
page recommended reading child concepts ki index child known ready reading student child child known ready reading function checks children depending level approach bayesian network separated original parent concepts cluster nodes 
known student parent parent known ready reading known recommended reading 
functions information resource 
glossary concepts example pages html pages www html pages hyperbook access relevant information trails information index student needs information specific topics lacks prerequisite knowledge understanding 
example student wants project algorithms understand control structures methods case help start reading information unit algorithms 
support student system compares actual knowledge knowledge required understand topic question 
student lacks prerequisites system generates sequence information units trail guides learning selected topic 
access relevant information trails information index project synchronizing threads beginner 
generating learning sequence generating trail implemented depth traversal algorithm checks system estimation student knowledge ki prerequisites actual goal 
algorithm checks prerequisite knowledge sufficiently known student 
corresponding information units hyperbook marked 
sequence marked units generated guides student consistently topics selected ones 
learning sequences generated user selects goal enters project example 
shows project synchronizing threads beginner 
trail leading required information detailed 
generating glossary hyperbook glossary generated knowledge model 
ki glossary item ki ki section leaf node bayesian network 
glossary cs hyperbook seen access relevant information trails information index glossary cs hyperbook generating information index hyperbook provides direct access information needed actual task information goal project student 
relevant information selected base index concepts actual task 
access information sorted index 
link index annotated student knowledge traffic light metaphor see section 
list related relevant information generated student reads glossary item propose relevant examples information sun java tutorial information hyperbook reads page hyperbook propose relevant examples links sun java tutorial reads sun java tutorial pages display resource www provide links relevant examples corresponding information hyperbook studies examples generate access relevant hyperbook pages sun java tutorial pages 
see information index belonging project synchronizing threads 
index contains knowledge project 
direct guidance site knowledge required working example contained accompanying trail 
direct guidance student wants guidance learning hyperbook may ask hyperbook reasonable learning step 
request answered determining suitable learning goal depending current knowledge 
goal hyperbook propose suitable project set html pages relevant information trail leading goal 
goal defined set knowledge items 
determine suitable learning goal sequential trail covering hyperbook calculated 
item trail system estimation student knowledge checked 
student fails know knowledge item proposed subsequent suitable goal 
guide student learning process proposing reasonable learning goals including links suitable projects learning sequence proposing page read generating reading sequences projects user defined goals 
goal learning reader hyperbook certain goal 
requires specific information searches examples illustrating certain topic wants learn special part hyperbook 
inform hyperbook directly current goals selecting knowledge items list seen 
hyperbook takes user defined goals selects examples explain concepts goal gives access relevant information generates reading sequence containing information reach goal 
project learning order select suitable projects student hyperbook contains project library 
project indexed ki understood order successfully accomplish project 
bayesian network modeling student knowledge include prerequisite knowledge items taken care dependency structure modeled bn 
project useful student current knowledge state situation ki comprising student goal sufficiently contained project project learning user defines learning goal ki part student goal necessary project understood 
requirements determine selection criteria finding appropriate project student simultaneously helps student achieve learning goal reflects current knowledge state 
implemented algorithms calculates project matches goal user project goal distance 
second determines actual knowledge user sufficient performing suggested project difficulties fitness 
example student interested learning simple control structures java difficulties project uses control structures build graphical user interface provided beginner knowledge graphical user interfaces 
hyperbook selects projects comparing weighted sums measures 
weights allow emphasize aspects matching fitness 
matching fits project student goal 
implemented distance function calculates project goal distance project actual goal ki contained goal relevance project 
ki contained goal assumed relevance 
relevance ki project defined percentage relation project 
short distance means ki important performing project integrating portfolios large value represents fact ki relevant project 
ki goal contained project distance set maximum value 
ki distance ki relevance ki ki cases relevance ki distribution index project defined project author see section 
project goal distance project goal calculated mean value distances project goal distance ki distance ki 
fitness parts selected project belong student current goal 
second algorithm determines fitness user project 
determine fitness evaluate knowledge user concerning parts project belong user goal enables select projects prerequisites known user lead fast possible goal 
fitness ki knowledge ki 
recall denotes index project 
function knowledge ki system estimation user knowledge respect ki knowledge ki ki ki ki 
example assume student defined learning goal containing java applets animation 
evaluation matching algorithm column fitness algorithms column resulting ordered list column useful projects seen 
presentation selected projects learning goal java applet animation shown 
integrating portfolios observe student studied portfolio integrate links parts specific portfolio useful 
example student reads glossary finds links relevant part portfolio 
integrating portfolios evaluation matching fitness algorithms generating sorted list projects reaching learning goal java applets animation 
presenting useful projects reaching learning goal java applets animation accompanying trail 
project updating portfolio example student studied portfolio student group duck 
links relevant parts portfolio generated student 
seen glossary item sorting relation corresponding part portfolio duck 
project updating shows student self judgement worked project 
project concerned foundations object oriented programming paradigm 
student judges knowledge classes objects feel familiar inheritance 
project updating self judgement student chapter described concept realization adaptation component kbs hyperbook system 
adaptive hypermedia systems advantageously education especially distance learning 
characteristics existing adaptive hypermedia systems identified compare classify kbs hyperbook system adaptation component accordingly 
constructivist learning approaches identified requirements building educational applications benefit improved teaching strategies 
shown advantages project learning derived requirements implementing project learning web applications 
general functionality kbs hyperbook system focus learning internet proposed 
conceptual models structuring lectures courses information materials demonstrated 
addition conceptual model modeling projects student portfolios 
information repository extended teachers learners 
requirements adaptation component modeled conceptual model 
shown index various information units derived adaptation functionality conceptual model 
general indexing approach underlying adaptation component enables kbs hyperbook system integrate adapt distributed information resources 
exemplary shown integration sun java tutorial hyperbook programming java 
main part thesis description concept adaptation component implementation top bayesian inference mechanism 
chapter described indexing approach detail 
shown structure index concepts order construct domain knowledge model 
user model consists estimations user knowledge respect concepts knowledge model proposed 
resulting adaptation component robust changes hyperbook pages updated course information changed addition arbitrary information material integrated adapted multiple authors independently hyperbook 
making inferences user knowledge reimplemented domain knowledge model chapter bayesian network 
construction steps obtaining bayesian network containing domain knowledge described detail 
order improve performance propagating network specialized clustering algorithm developed chapter 
clustering algorithm tailored requirements application enables bayesian network contains entire domain knowledge 
allows adaptation component quickly update estimation user current knowledge state base observations 
tricky generation bayesian network observations knowledge advanced topics knowledge prerequisites derived 
lack knowledge easy topics decreases knowledge advanced topics moderate 
way proposed adaptation component serves hyperbooks personalize content navigational structure shown chapter 
hyperbooks guide users generating reading sequences show reasonable learning steps take propose learning goals 
users define learning goals give hints valuable examples select projects serve reaching learning goals answer information requests select useful information located www 
adaptation component kbs hyperbook systems various workshops conferences author colleagues institut university hannover 
examples hyperbooks tested url www kbs uni hannover de hyperbook chapter outlook may concerned enlarging indexing functionality kbs hyperbook system 
current state authors index pages 
tasks needs supported semi automatically best automatically 
propose employ information retrieval methods determining index information resource 
addition adaptive hyperbooks flexible serving information repositories users finished learning 
description domain knowledge index critical part 
domain knowledge enlarged new developments hand reflect observations user gained knowledge 
idea exchangeable user models base user controlled interfaces step direction 
interesting extensions modeling author hyperbook supporting construction courses selection course materials examples including proposal material internet visualization adaptation component estimations 
appendix complete list knowledge items cs hyperbook classes objects classes objects class declaration class modifier class body variable constants variable declaration packages packages package declaration import declaration class instantiation life time objects constructors methods methods method modifier method parameter actual parameter fill ins function procedure method declaration inheritance interfaces interfaces interface implementation interface declaration multiple inheritance extends keyword data types operators types operators primitive types primitive types class boolean boolean class integer int class short short class long long class character char class float float class double double class string class stringbuffer class system casting types types object array write data array array declaration read data array multidimensional arrays operators operators boolean operators numerical operators coding numbers operators comparison numerical operators statements assigning values expression identifier control structures control structures branching switch looping return exit block concurrent programming structures concurrent programming single thread single thread start run sleep multiple threads multiple threads synchronization synchronization deadlock monitor wait notifyall priority error handling recovery security error handling error handling security manager security applets security aspects applets possibilities applets restrictions general exceptions general exceptions errors errors virtual machine error exceptions exceptions try catch exception handling exception handling giving exceptions caller separating exceptions grouping exceptions java exception hierarchy io exception java virtual machine java virtual machine instruction set jvm object oriented concepts jvm startup jvm jvm java windowing system awt gui awt events awt events events events action event text event item event adjustment event components container window focus key event paint mouse event event model event model listener adapter standard events user defined events event model jdk event model jdk graphical user interface graphical user interface elements layout manager layout manager flow layout border layout grid layout layout card layout panel frame graphics graphics manipulating graphics manipulation graphics flashing animation manipulation java networking constructs networking url connection manipulating urls sockets sockets datagram algorithms algorithms sorting sorting costs bubble sort bubble sort algorithm costs quicksort quicksort algorithm searching searching costs binary search binary search costs linear search linear search recursion input output input output file handling sequential access file random access file serialization streams print java applets applets life cycle html tag java applications system println input parameter public static void main method executable java api java util package java util package enumeration vector stack hashtable java lang package java lang package math exception thread java api programming environment programming environment editor file text file binary file executable file jar archive java interpreter bytecode interpreter java compiler compiler program programming programming programming java garbage collector keywords object oriented design methods object orientation object orientation oo class oo object oo message oo inheritance software engineering se se process se process se phases simplified se process simplified se process se specification specification se subject method se analyzing method se generating specification requirements se analysis design analysis design se static analysis design static analysis design se object oriented diagram se classes se attributes se inheritance se relations se dynamical analysis design dynamical analysis design se interaction diagram se scenarios se interactions implementation testing knowledge items describing application domain hyperbook 
cluster nodes see section generating graph bayesian network consists vertices 
list figures schematic view adaptive hypermedia systems 
characteristics user taken account hyperbook approaches 
methods link level adaptation hyperbook approaches conceptual model cs hyperbook 
conceptual model cs hyperbook course related modeling highlighted 
example course modeled kbs hyperbook system 
conceptual model cs hyperbook modeling different information resources highlighted 
hyperbook unit methoden links examples sun java tutorial pages lectures occurs 
example integration sun java tutorial pages kbs hyperbook system 
conceptual model cs hyperbook emphasized index strategy 
conceptual model cs hyperbook modeling portfolios emphasized 
schematic view portfolio part hierarchy 
portfolio student group 
homepage student group 
schematic view implementation hyperbook system 
dependency graph ki acm classification 
rooted tree acm classification ki classes objects schematic model bayesian network underlying user model example eliminating continuously directed cycle clustering 
example eliminating continuously directed cycle conditioning 
list figures graph applying clustering twice 
role cluster node 
cpt cluster node parents children 
conditional probability table child node cluster node conditional probability table node quicksort dependent node sorting 
weak conditional probability table node layout manager dependent node layout manager 
conditional probability table root nodes 
interpretation probability distributions bayesian network 
part bayesian network cs hyperbook 
example completion index set 
project synchronizing threads beginner 
glossary cs hyperbook 
user defines learning goal 
evaluation matching fitness algorithms generating sorted list projects reaching learning goal java applets animation 
presenting useful projects reaching learning goal java applets animation accompanying trail 
portfolio 
self judgement student 
bibliography albrecht zukerman nicholson bud bayesian model keyhole plan recognition large domains 
proceedings sixth international conference user modeling um sardinia italy 
user modelling interactive anatomy tutoring system tutor 
user modeling user adapted interaction 
ben ari constructivism computer science education 
proceedings ninth sigcse technical symposium computer education atlanta georgia february acm press 
berners lee world wide web illustrated seminar 
held online seminar 
www org pub www talks general html 
network library 
www com 
brusilovsky methods techniques adaptive hypermedia 
user modeling user adapted interaction 
brusilovsky pesin isis tutor intelligent learning environment cds isis users 
proc 
interdisciplinary workshop complex learning computer environments finland 
brusilovsky schwarz user student adaptive interface advanced web applications 
proceedings sixth international conference user modeling um sardinia italy 
brusilovsky schwarz weber elm art intelligent tutoring system world wide web 
intelligent tutoring systems lecture notes computer science vol 
berlin gauthier lesgold eds springer pp 

brusilovsky schwarz weber tool developing adaptive electronic textbooks www 
proceedings webnet world conference web society boston ma usa june 
bush may think 
atlantic monthly 
de bra improving usability hypertext courseware adaptive linking 
eighth acm international hypertext conference southampton uk april 
bibliography java tutorial nd ed 
addison wesley 
www javasoft com docs books tutorial index html 
contextual constructivism impact culture learning teaching science 
practice constructivism science education ed 
lawrence erlbaum associates 
conati vanlehn druzdzel online student modeling coached problem solving bayesian networks 
proceedings sixth international conference user modeling um sardinia italy 
cooper computational complexity probabilistic inference bayesian belief networks 
artificial intelligence 
dagum horvitz dynamic network models forecasting 
eighth conference uncertainty artificial intelligence san mateo morgan kaufmann publishers pp 

de bra teaching hypertext hypermedia web 
proceedings webnet world conference san francisco usa october 
de bra hypermedia structures systems online course eindhoven university technology 
win tue nl 
dechter enhancement schemes constraint processing backjumping learning cutset decomposition 
artificial intelligence 
dechter pearl tree clustering constraint networks 
artificial intelligence 
user expertise modeling empirically derived probabilistic implication networks 
user modeling user adapted interaction 
duffy eds 
constructivism technology instruction 
lawrence erlbaum associates 
epistemological perspectives conceptual change implications educational practice 
journal research science teaching 
eklund knowledge navigation support hypermedia courseware west 
australian educational computing 
engelbart augmented knowledge workshop 
history personal workstations goldberg ed 
addison wesley 
geschichte der 
verlag 
originally published 
fellbaum wordnet electronic lexical database 
mit press 
fink kobsa personalized hypermedia information provision adaptive adaptable systems features user modeling privacy security issues 
intelligence services networks technology cooperative competition reed eds 
springer verlag pp 

bibliography henze nejdl wolpers hyperbook model developing hypertext books 
second international workshop knowledge representation interactive multimedia systems research experience ii italy 
fr hlich henze nejdl conceptual modeling educational hyperbooks 
th international conference multimedia modelling singapore nov 
fr hlich henze nejdl meta modeling hypermedia design 
proc 
second ieee metadata conference maryland sept 
fr hlich henze nejdl virtual institutes virtual classrooms enhance teaching mentoring productivity 
european conference virtual enterprises networked solutions paderborn apr 
fr hlich henze nejdl hyperbook data modeling 
international conference electronic publishing document manipulation typography saint malo france apr 
fung chang weighting integrating evidence stochastic simulation bayesian networks 
fifth conference uncertainty artificial intelligence windsor usa morgan kaufmann 
nejdl wolpers combining ontologies terminologies information systems 
proc 
th international congress terminology knowledge engineering innsbruck austria 
elements hypermedia design 
birkh user 
goldstein genetic graph evolution procedural knowledge 
intelligent tutoring systems sleeman brown eds 
academic press 
julien cautionary notes appeal new ism constructivism science education 
practice constructivism science education ed 
lawrence erlbaum associates 
gr nb trigg web workplace designing open hypermedia systems 
mit press 
guarino formal ontology information systems 
formal ontology information systems guarino ed 
ios press 
guarino masolo ontoseek large linguistic ontologies gathering information resources web 
tech 
rep ladseb cnr national research council ladseb cnr padova 
henrion propagation uncertainty bayesian networks probabilistic logic sampling 
uncertainty artificial intelligence vol 

pp 

henze auswertung der der der ge der informatik 
tech 
rep university hannover feb 
bibliography henze evaluation zur ge der informatik ws 
tech 
rep university hannover oct 
henze nejdl wolpers adaptive hyperbooks constructivist teaching 
ki 
henze nejdl eine internet 
hannover uni intern 
henze nejdl web learning environment applying constructivist teaching concepts virtual learning environments 
ifip joint working conference virtual campus trends higher education training madrid nov 
henze nejdl constructivism computer science education evaluating environment project oriented learning 
workshop interactive computer aided learning concepts applications oct 
henze nejdl das kbs virtual classroom informatik ber das internet 
informatik und claus ed springer verlag 
henze nejdl adaptivity kbs hyperbook system 
nd workshop adaptive systems user modeling www toronto canada may 
henze nejdl bayesian modeling adaptive hypermedia systems 

gi workshop und magdeburg sept 
henze nejdl student modeling active learning environment bayesian networks 
proceedings seventh international conference user modeling um banff canada 
henze nejdl wolpers modeling constructivist teaching functionality structure kbs hyperbook system 
cscl computer supported collaborative learning standford usa dec 
appeared preliminary version aied workshop ontologies intelligent educational systems july le mans france 
hewitt design principles support distributed processes 
symposium distributed cognition theoretical practical contributions annual meeting american educational research association new york april 
hodges eds 
multimedia computing case studies mit project athena 
addison wesley 
duffy constructivism design learning context authentic activities learning 
nato advanced workshop design constructivist learning environments 
karlgren ck jansson karlgren glass box approach adaptive hypermedia 
user modeling user adapted interaction 
bibliography horton designing writing online documentation 
john wiley sons 
horvitz suermondt cooper bounded conditioning flexible inference scare resources 
fifth conference uncertainty artificial intelligence windsor usa 
jameson numerical uncertainty management user student modeling overview systems issues 
user modeling user adapted interaction 
jameson rest learn research adaptive hypermedia vice versa 
tech 
rep university saarbr cken 
jarke jeusfeld staudt conceptbase deductive object base meta data management 
journal intelligent information systems 
jones willet eds 
readings information retrieval 
morgan kaufmann 
resnick eds 
practice designing thinking learning digital world 
lawrence erlbaum associates 
kass student modeling intelligent tutoring systems implications user modeling 
user models dialog systems kobsa wahlster eds 
springer 
kay user models customized hypertext 
intelligent hypertext advanced techniques world wide web nicholas mayfield eds lncs vol 

springer 
kay course programming language 
proc 
nd international world wide web conference chicago usa 
keep mclaughlin electronic labyrinth 
tech 
rep electronic labyrinth 
jefferson village virginia edu elab hfl html 
knight luk building large scale knowledge base machine translation 
proceedings th national conference artificial intelligence aaai seattle washington aug vol 
pp 

kobsa user modeling prospects hazards 
adaptive user interfaces principles practice schneider hme eds 

kobsa pohl user modeling shell system bgp ms tech 
rep university konstanz 
chan brett beliefs learning constructive processes reading effects computer supported intentional learning environment 
annual meeting educational research association atlanta april 
bibliography course assignments hypertext example 
journal research computing education 
kahn hypertext 
web system independent hypertext 
proceedings th acm echt conference hypertext milano italy dec acm pp 

lauritzen local computations probabilities graphical structures application expert systems 
journal royal statistical society 
lowe hall hypermedia web 
wiley sons 
mahesh nirenburg situated ontology practical nlp 
proceedings ijcai workshop basic ontological issues knowledge sharing montreal canada aug 
martin vanlehn progress multi activity bayesian student modeler 
proceedings artificial intelligence education aied edinburgh pp 

mcguinness ontological issues knowledge enhanced search 
proceedings international conference formal ontology information systems trento italy june guarino ed ios press pp 

milosavljevic dale text generation dynamic hypertext environment 
proceedings th australian computer science conference melbourne australia january february 
role probability inference intelligent tutoring system 
user modeling user adapted interaction 
ller writing hypertext books 
tech 
rep fu berlin 
www inf fu berlin de tec mosaic htb 
mylopoulos borgida jarke koubarakis telos language representing knowledge information systems 
acm transactions information systems 
nejdl wolpers kbs hyperbook data driven information system web 
eighth international world wide web conference toronto canada may 
nejdl wolpers rdf schema specification revisited 
workshop modellierung st germany 
nelson replacing printed word complete literary system 
proc 
ifip congress netherlands ed pp 

nielsen multimedia hypertext und internet grundlagen und praxis des 
vieweg 
nissen jeusfeld jarke huber requirements analysis multiple perspectives experiences conceptual modeling technology 
ieee software 
bibliography kahn machine mind vannevar bush memex 
memex hypertext vannevar bush mind machine kahn eds 
academic press 
papert children machine rethinking school age computer 
basic books new york 
pearl probabilistic reasoning intelligent systems networks plausible inference 
kaufmann publishers 
pearl bayesian decision methods 
readings uncertain reasoning shafer pearl eds 
morgan kaufmann 
piaget understand invent 
viking 
pradhan provan henrion knowledge engineering large belief networks 
international conference uncertainty artificial intelligence san francisco usa 
rada interactive media 
springer 
digital collections nationale de france experiment internet 
ieee international conference advances digital libraries washington usa 
resnick computer preparing life digital world 
ibm systems journal 
rich user modeling stereotypes 
cognitive science 
russo berry molina modeling user knowledge belief networks 
user modeling user adapted interaction 
russell norvig artificial intelligence modern approach 
prentice hall 
technologies discourse 
commun 
acm 
sch fer assessing temporally variable user properties dynamic bayesian networks 
proceedings sixth international conference user modeling um sardinia italy 
schank cleary engines education 
lawrence erlbaum associates 
sony electronic book reader 
jefferson village virginia edu elab hfl html 
shachter peot simulation approaches general probabilistic inference belief networks 
fifth conference uncertainty artificial intelligence windsor usa 
shafer pearl eds 
readings uncertain reasoning 
morgan kaufmann publishers 
specht empirical evaluation adaptive annotation hypermedia 
ed media ed telekom freiburg germany 
bibliography spiegelhalter unified approach imprecision sensitivity beliefs expert systems 
artificial intelligence statistics 
pp 

fischer steinmetz dynamically generated tables contents guided tours hypermedia systems 
proceedings ed media conference seattle usa 
line books page 
www cs cmu edu books html 
von radical constructivism mathematics education 
kluwer 
von constructivist approach teaching 
constructivism education gale eds 
lawrence erlbaum associates 
von 
ergebnisse probleme 
frankfurt 
originally appeared radical constructivism 
way knowing learning 
working group 
resource description framework 
www org tr pr rdf schema oct 
weber episodic learner modeling 
cognitive science 
weber elm programming environment tutoring system lisp beginners 
cognition computer programming 
cker eds 
ablex publishing 
weber specht user modeling adaptive navigation support www tutoring systems 
proceedings sixth international conference user modeling um sardinia italy 
nicola henze 
november hannover mai der st hannover 
feb der mathematik mit informatik universit hannover 
februar mathematik aug sep am lehrstuhl und seminar organisation und wirtschaftsinformatik universit mannheim am institut technische informatik abteilung universit hannover 
april promotion 
