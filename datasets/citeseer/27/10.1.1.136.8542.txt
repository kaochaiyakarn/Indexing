line robot adaptation environmental change scott lenser cs cmu edu september robots performing tasks constantly encounter changing environmental conditions 
changes environment vary dramatic rearrangement furniture subtle burnt light bulb 
recognize changes especially subtle changes robots 
propose robotic sensor data identify adapt environmental changes 
traditional sensor models scale face frequent environmental changes 
approach aggregate sensor readings probability distributions associate line state environment 
sony aibo robots test platform verify efficacy techniques develop 
thesis committee manuela veloso chair takeo kanade sebastian thrun minoru asada osaka university japan contents motivation 
approach 
expected contributions 
related previous sensor resetting localization 
srl 
localization 
results 
state estimation guide behavior 
summary 
adaptation changing lighting conditions 
algorithm 
labelling classes 
application 

proposed ii focuses problem identifying repeated states changing environment knowledge improve behavior robots adapting environment 
section details motivation 
section discusses approach taken 
section describes expected contributions 
motivation extremely important robots able autonomously adapt environment 
robust robotic behavior depends adapting current conditions environment state environment 
robot actions need change depending environmental state 
consider robot driving car approaching intersection 
traffic light red robot intersection 
hand traffic light green robot proceed intersection 
behavior robot depends state environment 
environmental state affects robot actions 
consider robotic driver attempting slow quickly 
car robot driving currently dry pavement applying brakes strongly result bringing car quick 
car currently ice applying brakes strongly result car spinning control 
case robot apply brakes slowly maintain control 
behavior robot choose depends state environment case conditions road type braking system car 
behavior robot change environmental conditions change adapting current state environment 
important understand addition dramatic changes ones illustrated robot adapt countless subtle changes carries assigned tasks 
robots extremely sensitive small changes environment 
changes environment encountered performing mundane tasks 
humans adapt rarely notice changes robots notice adapt poorly 
consider walking office environment 
room different arrangement lights room different number lights different objects casting shadows different types light emitting different frequencies light differing amounts sunlight causing changes perceived lighting conditions 
usually notice eyes brains built mechanisms automatically adjusting different light levels different colors light 
understand effect small change lighting conditions robot investigate popular approaches high speed vision 
approach color maps pixel color colors interesting objects colored 
pixel value mapped quickly symbolic color 
processing needs carried rapidly subsequent processing stages mapping hard 
example pixel labelled red orange reddish orange 
adaptation object orange blue fluorescent light appear red red lights 
color pixels captured camera turning causes orange object mistaken red 
suddenly robot unable see orange object effectively making robot blind 
popular high speed vision technique gray scale images look edges image construct objects edges 
done image looking pixels brighter darker neighbors 
difference brightness neighboring pixels thresholded binary image edge edge processing faster 
difference brightness actual edges depends lighting environment 
bright lights cast strong shadows result strong edges 
contrast diffuse lighting result softer edges 
reason threshold carefully tuned environment robot operate 
incorrect threshold results objects combined split apart erroneously 
vision method robot effectively blind lighting conditions environment change 
types changes affect robots 
consider typical wheeled robot moving house 
robot uses feedback motors help localize house 
localization techniques require robot internal model maps motor feedback gets distance traveled world 
suppose model programmed performance robot carpet 
consider happens robot enters room tiled floor 
wheels robot slip surface mapping motor feedback distance changes making robot think gone farther 
result robot turning enter hallway running wall hallway 
robot needs adapt openness surroundings 
floor room cluttered child room robot needs move slowly ensure obstacles hit 
room open robot move faster finish tasks quicker 
just changes robots need detect adapt 
robots adapt environment fail perform tasks environment changes 
environmental changes may violate robot assumptions cause models inaccurate 
inaccurate models lead unpredictable erroneous behavior 
examples importance environmental changes follow 
consider walking robot 
robot walks normal icy surface robot fall hurt 
worse consequences possible 
think robotic taxi driver driving bridge california 
robot internal map detailing get area showing go bridge turn right 
suddenly powerful earthquake hits sections bridge collapse 
luckily section robotic taxi driver unaffected 
robotic taxi driver fails detect adapt new state bridge continue driving right bridge destroying killing passengers 
robot adapts changed conditions car wait passengers safely 
robots adapt environment order perform tasks dynamic world 
problem adaptation addressed order robust robotic performance ignored avoided 
problem ignored environment changes frequently robots adapt fail environment changes 
time door opened closed environment changes 
lighting conditions vary room room indoor outdoor 
varies tile low pile carpet high pile carpet concrete grass dirt 
environment changes state due people crowded lunch time hallways cluttered classes parking lots empty night 
problem adaptation avoided environmental changes avoided want robots environments perform real tasks 
environmental changes occur due people agents controlled 
caused movement environment needed perform robot task 
causes damage changes robot may avoidable 
caused passage time day night 
robot avoided theses changes useless confined uniform room inside building agents people damaged 
reasons robots adapt environment 
order adapt environmental state robot identify state environment continuously adapt state environment 
robot identifies environmental state robot adapt environment choosing control parameters identified environmental state 
identify state environment robot continuously adapt environment environment segmented robot 
continuously adapting identify current state serious drawbacks 
environment changes robot may perform poorly adapted new state environment 
continuous adaptation amount time needed adapt new environment including time needed learn new environment 
robot uses state identification adapt response time limited time necessary identify new state shorter adapting 
time reduction important robot may perform poorly cause damage adjusts new environmental state 
continually adapting environment lacks safety 
state identification robot detect environment changed seen state 
allows robot notice new environment may prepared handle properly 
robot extra cautious call human assistance cases 
state identification robot options 
state environment identified robot information select appropriate behaviors sensor models action models 
plan focus problem identifying discrete states 
implies sudden necessarily large changes state environment 
environmental changes happen rapidly approximated profitably discrete transition 
examples environmental changes happen suddenly include doors opening closing lighting difference rooms differences rooms people movements lunch hour breaks 
unsolved problems occur frequently attempting robots field 
solving problem discrete state identification robots able operate better sorts changing environments 
making simplifying assumption allow robust algorithms developed discrete transition case important problem 
assume number states enumerable 
large step general problem changing environmental conditions 
sensors mean identify state environment 
problem identifying environmental state sensor readings hard 
sensors usually large amounts noise readings produce 
noise non gaussian aspects difficult characterize 
individual sensor readings usually uninformative 
consider pixels camera distance measurements sonar sensor 
individual pixel distance reading gives little information entire set readings provides lot information 
sensor reading influenced multiple processes 
example pixels image value pixel depends camera pointed objects camera camera moving lighting conditions 
processes affect value pixel eventually sensed 
harder identify changes due causes 
difficult obtain information changes robot interested 
current techniques inadequate determine state environment sensor readings 
current techniques problems discussed related section require human labor assumptions line solve part problem 
techniques require human labor usually caused need develop accurate mathematical models environment sensors hand 
sensor models characterize sensor readings expect state world 
developing accurate sensor models expensive terms human effort 
models depend exact characteristics sensors 
inverse model required maps sensor readings implications state environment 
models expensive develop forward sensor models 
models environment task specific 
degree specificity varies sensor model employed models usually need redone time sensor robot task changes 
techniques assumptions 
techniques require model usually unknown 
techniques require specific noise properties 
require algorithm able accurately predict sensor readings requiring excellent model available 
techniques run line robot continuously performing useful tasks 
techniques fail address parts problem 
particular robotic data properties kinds data 
properties cause techniques fields directly applicable 
shortcomings particular techniques discussed fully related section section 
approach approach adaptation propose aggregate sensor data identify repeated environmental states information adapt environment 
approach builds long experience working real robots performing complex tasks completely autonomously :10.1.1.2.564:10.1.1.37.4334
sensor readings broken contiguous homogeneous regions 
regions grouped similarity 
identity region select parameters models control 
regions representing repeated states state label indexes set previously parameters state 
regions representing new environmental states robot calls human assistance invokes learning procedure obtain parameters state 
selected parameters models world directly control parameters adapt robot performance environmental state 
step careful assumptions technique applicable wide range problems robots sensors 
graphical depiction architecture shown 
details steps involved provided 
segmentation step break sensor data contiguous homogeneous regions 
sensor reading consists sensor values context values 
exam commands environment control stream sensor values control parameters proposed architecture 
segmentation regions sensor values clustering state identification state relationships adaptation parameter selection ples typical sensor values brightness distance force 
examples typical context values time position 
vector context values element context space 
context values define meant contiguous 
specifically contiguous regions ones contiguous context space temporarily spatially contiguous 
vector sensor values element sensor space 
sensor space defines meant homogeneous 
specifically region contiguous splitting region results regions probability distributions sensor space distinguished 
statistical tests determine regions resulting candidate split distinguishable 
detected changes split sensor readings contiguous homogeneous regions 
contiguous homogeneous region contains vectors sensor values 
performs aggregation sensor values 
aggregation allows noise individual sensor readings overcome 
allows statistical tests principled approach noise remains 
aggregation overcomes problem individual sensor readings relatively uninformative 
homogeneous cluster associated state environment 
way robot incrementally builds complete database possible environmental states encounter 
clustering resulting contiguous homogeneous regions grouped clusters distance metric 
important distance metric statistical identity test robot able generalize nearby states 
states different closely related require similar control parameters 
distance metric allows robot take advantage similarities 
region detection subsystem reports current state environment related states adaptation subsystem 
adaptation adaptation module uses identified state environment index set response parameters 
stored parameters variety things 
instance describe sensor action behavioral models 
parameters human provided learned robot 
robot state old parameters state reused 
robot encounters new state learns new response parameters calls human assistance 
investigate identified state markov model learner 
markov model help guide segmentation clustering processes 
integration allow distinguishing states identical precepts 
increase number domains technique applicable 
extra information contained markov model robot plan ahead particularly robot affect state transition probabilities 
expected contributions thesis expected concrete contributions algorithm robot identifying state environment sensor readings complexity analysis algorithm quantify costs associated running algo rithm empirical validation algorithm real robot performing variety tasks involving multidimensional data empirical validation usefulness algorithm adapting environment real robot algorithm created features executes line real time robotic platform priori model sensors environment required sensors environment required behave particular predefined distribution applicable multidimensional sensor data related large body analysis signals 
signal analysis problem occurs fields 
techniques developed analyze signals 
problem detecting state environment sensors adapting divided steps 
changes sensor readings detected 
different sets sensor readings organized sets correspond environmental state 
identified state adapt environment 
vast amount research done detection changes signals 
done context control manufacturing systems 
varies number assumptions detection changes 
focussed case strong knowledge state system change available 
part research deals unknown initial final conditions applicable problem dividing sensor data regions self similar 
see basseville depth analysis :10.1.1.22.6332
signal segmented different regions approximately homogeneous regions grouped correspond different environmental states regimes 
viewed line clustering problem regions regimes 
clustering algorithms applicable problem line cluster regions data individual data points 
clustering individual data points sufficient noise data point may great clustering meaningful 
may take data points characterize underlying process clustering meaningful 
example line clustering algorithm growing neural map 
usually clustering algorithms require distance metric order function 
unclear appropriate distance metric distributions data 
see section possibility 
special case number classes known samples classes available clustering problem reduces classification problem 
case classification algorithms operate distance metrics applicable appropriate distance metric defined see section 
example possible classification algorithm nearest neighbor 
available data labelled classes training improve classification 
training unlabelled data labelled data improve performance learner 
dempster introduced known em approach unlabelled data 
see blum mitchell training :10.1.1.114.9164
systems combine steps larger step segments data clusters time 
techniques generally assume data segmented meaningful clusters data single data point 
noisier system complex underlying process problematic assumption 
ways techniques divided groups 
division predictive non predictive systems 
predictive systems try predict sensor value system experience 
error predictor internal state predictor segment data similar regions 
techniques rely data predictable predictor 
contrast non predictive approaches attempt predict sensor value 
techniques directly compare sensor readings experienced detect differences 
thesis focussed generating non predictive technique 
techniques combined segmentation classification divided general approach taken solving problem 
division covering related detail 
techniques divided approaches neural representations prototypes probabilistic reasoning methods 
neural approaches connectionist representations biologically inspired learning 
prototype approaches attempt create complete set pro sensor readings experienced associate prototype state world 
probabilistic approaches apply probability theory problem variety assumptions world 
approaches fit neatly categories address problem 
variety neural techniques proposed deal segmentation clustering problem 
techniques tend suffer long line training times sensitive specific architecture neural networks nns 
das mozer created technique improving performance neural networks representing finite state machines 
basic architecture recurrent neural network feedback loop hidden state passed soft clustering module fed back input 
clustering successively harder training progress temperature training procedure 
training uses gradient descent cost function including error network number clusters 
gaussian distribution hidden states network assumed 
hidden states correspond environmental states case binary language classes 
predictive line technique 
weigend propose technique neural network environmental state neural network nn select correct neural network :10.1.1.27.993
em associate data point sensor reading nn experts 
maximization step corresponds normal neural network training 
technique trained offline predictive 
nolfi tani propose technique cascaded nns 
lowest level nn tries predict sensor reading 
hidden units nn clustered states neural network 
clustered hidden states train higher level nn attempts learn state transitions lower level nn 
method takes extremely long time train 
method successfully automatically segment robotic infrared range readings khepera robot simple environment 
technique interesting techniques address problem identifying state multiple time scales 
unfortunately technique trained line slow train predictive sensitive architecture nns 
tani proposed technique analyzing sonar readings mobile robot navigate :10.1.1.137.2777
control restricted local maximum sonar reading 
robot controls goes making binary decision local maxima decision points environment 
sonar readings dimensionality reduced kohonen map 
reduced sonar readings control decisions training input nn predicts reduced sonar reading experienced 
technique successfully guide mobile robot 
technique trained line predictive 
variety prototype methods developed segmenting clustering sensor data 
techniques lack model noise extremely noisy sensors usually require careful setting distance threshold creating new prototype 
deng classify sensor data driving simulator drunk sober drivers 
constructing autoregressive arma model sensor data 
parameters arma model local learning technique classify performance pre trained sober drunk classes 
predictive technique trained line 
lin niklasson propose adaptive resource allocating vector quantization method segmenting clustering sensor data 
method learns segmentation robotic sonar data line regions similarity 
updates prototypes conditioned prototype fit data 
prototypes added distance sensor data existing prototypes exceeds threshold 
moving average input vectors help combat noise 
technique line uses robotic data 
techniques technique lacks proper model amount noise sensor readings resort ad hoc averaging input vectors combat noise 
techniques incapable noticing differences distribution sensor readings don affect mean 
marsland proposes grow required network segmenting data 
technique focuses problem novelty detection 
technique topology preserving prototype method similar kohonen maps 
nodes chosen similar input patterns 
new nodes created existing node nearby familiar habituation 
technique successfully real robotic data sonar sensors camera attentional model 
novelty detector extended problem detecting environments 
done training novelty detector environment identified 
environments identified novelty detector detecting novelty 
technique trained line environments 
proposed growing neural map gnm technique segmentation clustering 
technique similar kohonen map nodes created ability current hypothesized network represent data 
lee arkin group data states case reasoning framework robot navigation 
cases created line spatial temporal similarity current situation prototype cases performance current cases 
case parameters matching case prototype adjusted learning algorithm 
technique choose behaviors behavior library navigate robot goal 
technique line handle general changes distributional changes changes extremely noisy data 
various probability techniques proposed 
techniques benefit having strong mathematical basis require assumptions met practice 
goldberg uses probabilistic tests detect changes data 
case data segmented discrete segmented markov model represents behavior data 
technique applied adapt robots behavior changes environment 
technique fully line data discrete technique directly applicable case continuous sensor data 
hashimoto developed technique fault identification adaptation mobile robot 
sensor failures detected adapted probabilistic methods 
failure modes sensor readings known priori 
technique runs line trained human 
developed system learning motion patterns people :10.1.1.18.4328
data segmented person moving lengthy period time 
problem case cluster motions 
clustering done line em gaussian way point representation trajectories 
number trajectory classes modification em procedure drop useless classes introduce new classes trajectories large error 
technique trained line doesn perform segmentation requires assumptions distribution data comes 
hashimoto propose method visual tracking objects :10.1.1.2.342
object assumed switch linear dynamics circular dynamics 
current mode dynamics sampling data reduce noise creating certainty factor represent likelihood class 
certainty factor encodes likelihood transitions 
identified class prediction visual tracker improve tracking performance 
method predictive trained human 
techniques segmenting clustering data developed easily classified categories 
penny roberts describe way hidden markov model hmm autoregressive ar techniques segment data 
techniques em learn hmm data ar model state hmm 
techniques trained line seeded reasonable guesses hmm order training algorithm converge correctly 
class techniques trained line switching state space models 
see overview techniques :10.1.1.30.5334
kohlmorgen developed technique automatically segmenting clustering time series :10.1.1.21.5205
input sequence projected higher dimensional space including sensor reading delayed values previous sensor readings 
sliding window moved sensor values resulting series probability distributions 
probability distributions smoothed gaussian kernel generate probability density function pdf 
distances pdfs computed norm 
cost function defined takes account ability prototype distributions explain data number switches 
prototype distributions selected line order minimize cost function 
prototype distributions clustered simple distance threshold 
technique applied eeg data 
unclear technique perform robotic domains 
technique non predictive parameters completely line 
problems technique need adjust cost transition effectively encoding probability transition significance differences probability distributions assumption effectiveness gaussian smoothing pdfs poor clustering method influences segmentation 
final step adaptation process identified state adapt environment 
approaches adapting environment discussed segmentation clustering techniques 
existence different tasks feedback environmental state shows importance able identify state environment 
various techniques described summarized tables 
information technique lines indicate technique addresses segmentation clustering feedback adaptation 
entries self explanatory meaning entries describes table 
naturally entries somewhat subjective 
indicated especially ambiguous entries entries apply reason marked table description selected table entries 
distributional changes indicates technique applies changes affect distribution data mean 
continuous running indicates memory cpu resources technique bounded independent time 
sensor model indicates technique requires description sensor readings expect particular states 
state model indicates technique model containing states 
transition model indicates technique model relating transition probabilities 
probability distributions indicates technique clusters distributions data opposed individual data points 
table proposed previous description proposed srl light adaptation author lenser lenser lenser segmentation clustering feedback segmentation change detection abrupt changes drifting changes distributional changes line running line training continuous running non parametric parameterless data properties robotic periodic noisy multi dimensional multiple time scales non gaussian information missing sensor model state model transition model clustering line running line training probability distributions continuous running multiple time scales parameters information missing state model transition model number classes feedback robotic tasks table neural network techniques description dolce gated experts cascaded nn neural navigation author das weigend nolfi tani segmentation clustering feedback segmentation change detection abrupt changes drifting changes distributional changes line running line training continuous running non parametric parameterless data properties robotic periodic noisy multi dimensional multiple time scales non gaussian information missing sensor model state model transition model clustering line running line training probability distributions continuous running multiple time scales parameters information missing state model transition model number classes feedback robotic tasks description proposed table probabilistic techniques amm regimes robot fdi human motion switching visual servoing author lenser goldberg hashimoto hashimoto segmentation discrete clustering discrete feedback segmentation change detection abrupt changes drifting changes distributional changes line running line training continuous running non parametric parameterless data properties robotic periodic noisy multi dimensional multiple time scales non gaussian information missing sensor model state model transition model clustering line running line training probability distributions continuous running multiple time scales parameters information missing state model transition model number classes feedback robotic tasks table prototype techniques description lwl arma gnm cbr behaviors author deng lin marsland lee segmentation clustering feedback segmentation change detection abrupt changes drifting changes distributional changes line running line training continuous running non parametric parameterless data properties robotic periodic noisy multi dimensional multiple time scales non gaussian information missing sensor model state model transition model clustering line running line training probability distributions continuous running multiple time scales parameters information missing state model transition model number classes feedback robotic tasks description table miscellaneous techniques line segmentation hmm ar switching state space models vision disparity change detection author kohlmorgen penny ghahramani dima basseville segmentation clustering feedback segmentation change detection abrupt changes drifting changes distributional changes line running line training continuous running non parametric parameterless data properties robotic periodic noisy multi dimensional multiple time scales non gaussian information missing sensor model state model transition model clustering line running line training probability distributions continuous running multiple time scales parameters information missing state model transition model number classes feedback robotic tasks previous section describes previous adaptation robotic systems :10.1.1.22.6332:10.1.1.2.342:10.1.1.137.2777:10.1.1.27.993:10.1.1.37.4334:10.1.1.18.4328:10.1.1.30.5334
section describes sensor resetting localization 
localization technique monitors probability sensors location estimate divides probability states corresponding localization working properly localization failing 
section describes automatically adapting lighting conditions 
luminance lighting conditions monitored identify lighting conditions 
localization lighting case identified state adapt environment produce better performance 
sensor resetting localization section describes localization algorithm called sensor resetting localization srl 
localization algorithm extension monte carlo localization :10.1.1.2.342
key idea srl monitor likelihood sensor readings current estimate robot pose 
monitoring likelihood algorithm detects phase transition global localization localization unknown position tracking updating position estimates robot moves senses 
algorithm detects phase transition algorithm failure due insufficient representative power probability distribution tracking 
detecting phase transitions algorithm able adapt temporarily weighting sensor readings heavily usual 
adaptation allows quick error recovery 
rest section describes srl detail compares monte carlo localization 
results published icra :10.1.1.37.4334
srl localization algorithm developed sony legged league robotic soccer competition robocup 
algorithm tested domain separate tests hardware environment simulation 
part devoted detailing environment localization algorithm operates 
start description robot software follow description soccer field robot plays 
rest explains features domain localization problem especially challenging 
hardware robots competition tests generously provided sony 
robots excellent platform research development provide exceptional hardware commercially viable 
robot consists quadruped designed look small dog 
robot approximately cm long plus cm due head 
neck legs degrees freedom 
neck pan side allowing robot scan field markers 
robot stands cm high shoulder head extending cm 
vision vision provided color ccd camera resolution 
robot field view horizontally vertically 
input camera processed color separation hardware analyzed vision system return distance angle markers seen 
distance estimated distance color blob centers 
distance estimates vary robot standing 
mean value usually distance angle 
markers partially camera look noise vision system 
sides edges markers commonly missed vision system 
effects sensor readings occasionally larger errors usual 
vision system subtracts neck angle passing result localization algorithm 
neck angle sensed board sensor accurate high granularity 
locomotion locomotion tests developed sony 
due complexities legged locomotion lot variability motion performed robot motion commands 
repeatedly executing path approximately length turns results final positions robot vary 
robot moves feet slip randomly surface field contributing large movement error 
robot transition different types motion forward forward right right forward turn right backward different gaits 
robot slips randomly field surface transitioning motion 
slippage transitions tend affect position 
additional errors movement introduced different results robot behavior slight changes environment slightly different field surface somewhat lower battery charge 
day day variations robot behavior expensive model time takes determine model parameters 
systematic errors observed lab 
field field robot operates length width 
field surrounded low walls keep robots ball field 
color coded goal field cyan yellow input localization 
surface field short goals surface smooth plastic 
field surrounded markers long sides field 
marker corner center line 
marker color coded cylinder mounted cm surface field eye level robot 
cylinder cm high cm diameter 
cylinder divided vertically equal sized colored patches pink cyan green yellow indicate position long axis field refer axis 
pink top bottom indicates side field marker 
uniquely distinguishable markers robot estimate distance angle 
challenges sony legged league robotic soccer competition robocup provides challenging domain localization 
due nature legged locomotion significant errors odometry occur robot moves 
noise introduced odometry readings frequent extended collisions walls robots 
unable detect collisions unable locate robots model collisions robots introducing error system 
noise vision processing localization difficult 
additional complication introduced rules specify certain circumstances robot moved referee telling robot 
challenges addressed localization system errors occasionally large sensor readings systematic errors sensor readings large amounts noise odometry systematic errors odometry collision induced unmodelled movements referee induced large unmodelled movements localization section gives brief overview bayesian approach localization year followed description monte carlo localization sensor resetting localization 
previous localization approach previous sony dogs robocup team vision navigation system developed bayesian localization algorithm 
able landmarks effectively robots probabilistic method localization triangulation landmarks 
described classical bayesian approach field discretized grid locations continuous robot head angle discretized set possible values 
grid cells robot headings define state space 
observations landmarks combined state space position calculation 
localization algorithm passes uses bayes rule updates 
pass incorporates observations probability distribution discretized state space grid cells robot headings 
second pass updates probabilities function movement actions selected 
monte carlo localization monte carlo localization mcl uses general bayesian approach localization :10.1.1.2.342
monte carlo localization represents probability density location robot set discrete samples 
sample exact point locale space updates samples easy implement 
density samples area proportional probability robot area 
points distributed evenly entire locale space mcl focuses computational resources needed increase resolution near believed location robot 
position robot calculated samples mean 
uncertainty estimate estimated calculating standard deviation samples 
kinds update operations applied sample set movement updates sensor updates 
movement updates require convolution locale probability density movement probability density movement updates done updating samples sample set independently 
new sample drawn movement probability density replace locale sample 
note known may depend 
sensor updates require multiplication locale probability density sensor reading probability density sensor updates done steps 
samples weights equal probability locale sensor readings second new set unweighted locale samples generated randomly sampling replacement old locale sample set probability sample selected proportional weight 
note step generates new sample points 
optionally random noise added sensor update help algorithm recover errors 
total weight samples gives indication approximation error resampling step 
total weight proportional probability locale sample set sensor readings 
possible information adjust sample set size dynamically try keep errors roughly constant 
complete description monte carlo localization please see fox dellaert :10.1.1.2.342:10.1.1.18.8488
summary monte carlo localization movement update 
convolved item 
foreach sample 
draw sample 
replace sensor update 
constant 

optional step replace samples random samples 
foreach sample 
set weight sample equal probability sensor reading 
foreach sample 
calculate store cumulative weight samples current sample cw 
calculate total weight samples tw 
foreach sample desired 
generate number random tw 
binary search find sample maximum cw 
add sample monte carlo localization discussion modeled movements gaussians movement distance movement direction heading change 
represented sensor distributions gaussians distance landmark egocentric angle landmark 
set deviation equal percentage mean distance constant value angle 
attempted sensor update stage movement update stage 
discovered samples localization algorithm slow 
algorithm real time ignored sensor readings localization algorithm fell movement updates 
throwing away sensor readings able execute twice fast sacrificed small amount accuracy large amount precision 
samples normally needed monte carlo localization global localization tracking similar resolution needed samples spread larger area 
mcl run samples global localization locale probability density prematurely collapses points 
testing samples commonly observed sample set collapse distinct samples global localization single marker 
number samples remains constant course number distinct samples reduced greatly sensor update phase 
single marker reading localizes robot circle marker set distance heading relative center circle 
obviously distinct samples sufficient represent circle accurately 
adaptive sample set sizes help movement update step resampled 
robot takes steps sees marker probability density consist tightly grouped blobs points doesn fix problem 
premature collapse probability density results increased time global localization misleading error position global localization 
robots continually losing track position due collisions moved falling extremely important localization algorithm capable globally localizing quickly 
mcl capable handling small systematic errors movement 
sensor reading gives mcl chance correct small amount systematic error 
amount systematic error corrected increases larger movement deviations larger numbers samples 
systematic error movement gets large mcl slowly accumulate error 
need handle systematic errors movement measuring movement parameters robot time consuming 
systematic errors movement occur environment changes unmodelled ways 
example robot moves plastic surface goal movement robot motion commands change 
mcl handle unexpected unmodelled robot movements 
time mcl takes recover proportional magnitude unexpected movement 
time mcl reports incorrect locations 
unexpected movements happen frequently robotic soccer domain working 
collisions robots walls result motions having unexpected results 
collisions difficult detect robots modelled localization algorithm 
unexpected movement incur teleportation due application rules referee 
mcl takes long time recover 
drawbacks mcl alleviated adding adaptive sample set sizing 
adaptive sample set sizing mcl sensitive systematic errors movement srl 
mcl adaptive sample set sizing requires different computational resources number samples changes 
adaptive sample set sizing described fox take extremely long time robot thinks position sensor readings indicate different position especially robot movements accurate :10.1.1.2.342
unable apply mcl adaptive sample set sizing working real time domain additional computational power available 
sensor resetting localization sensor resetting localization srl extension monte carlo localization 
srl motivated desire fewer samples handle larger errors modelling handle unmodelled movements 
srl adds new step sensor update phase algorithm 
probability locale designated samples low sensor readings replace samples samples drawn probability density sensors number samples kept proportional average probability locale sample sensors divided expected average probability locale samples 
average probability threshold samples kept 
average probability locale samples falls threshold samples replaced samples sensor readings call sensor resampling 
logic step average probability locale sample approximately proportional probability locale sample set covers actual location robot probability think 
minus value probability wrong suggests replace proportion samples equal probability wrong samples sensors 
constant proportionality average probability locale sample probability wrong parameter tweaked control localization algorithm resets 
summary sensor resetting localization movement update 
convolved monte carlo localization 
sensor update 
constant 

monte carlo localization 

calculate number new samples ns avg sample prob prob threshold num samples 
ns repeat ns times 
sample draw 
replace sample sensor resetting localization discussion modelled robot movements sensor readings way monte carlo localization 
sensor resampling threshold equal expected result samples distributed sensor gaussians having probability 
sensor resetting localization applicable domains possible sample sensor readings problem landmarks sensor readings sensor distributions easy sample 
possible locations robot known sensor sampling done rejection sampling 
rejection sampling increases run time resampling proportion probability having reject sample 
advantages srl fewer samples sacrificing accuracy 
possible part efficient globally localizing 
marker seen global localization probability samples low 
average probability sample small srl replaces locale samples samples sensors 
results samples distributed evenly circle determined marker 
samples samples mcl represent circle marker 
naturally reduces misleading errors global localization 
reduces time required converge correct localization correct answer thrown prematurely 
seeing marker circle collapses small area circles intersect 
average probability locale samples higher seeing marker samples concentrated right place sensor reading 
threshold sensor resampling set correctly new samples drawn due second sensor readings 
long tracking working new samples generated sensors algorithm behaves exactly mcl 
srl handle larger systematic errors movement error accumulated srl replace current estimate robot location sensor readings effectively resetting localization 
adaptive sample set sizing helps mcl mcl sensitive systematic errors movement unexpected unmodelled robot movements 
srl easier apply real time domains running time step nearly constant easy bound 
srl handle larger unmodelled movements mcl 
localization algorithm needs handle extended collisions robots wall gracefully 
srl resetting estimate current robot position gets far sensor readings 
srl able handle large unmodelled movements movement referee easily 
srl resetting time gets sensor reading conflicts estimated position 
mcl take long time correct long distance teleportation error movement occur move mean samples new location 
results mm mm theta average error average interval error rms interval error box percentage table performance summary real robots 
tested sensor resetting localization robots provided sony simulation 
simulation testing compared sensor resetting localization monte carlo localization random noise samples added 
tested srl real robots parameters robocup 
samples tests 
order execute real time forced ignore sensor readings 
due inevitable changes conditions measuring model parameters parameter distance moved angle movement amount rotation step 
deviations reported localization movement vision 
test robot run set trajectory steps slowly turning neck side side 
robot instructed different numbers steps executed 
final position robot measured hand run 
runs number steps averaged results 
compared actual location robot data points location reported localization algorithm 
calculated error mean position time deviation localization reported time 
calculated interval dimension mean reported localization adding subtracting standard deviations reported localization 
calculated distance interval dimension refer interval error 
report average interval error root mean squared interval error 
feel root mean squared interval appropriate measure weights larger misleading errors heavily 
calculated percentage time actual location robot fell box defined intervals 
table shows localization accurate cm despite erroneous parameter values 
actual location robot box time outside box close box 
fact localization seldom gives misleading information important making effective behaviors 
show error position quickly converges steady level 
shows deviation reported algorithm quickly converges fairly steady level 
deviation tends go time error goes keeps interval error low avoids misleading output 
competition observed localization algorithm quickly resets unmodelled errors picked occur 
simulation tested sensor resetting localization monte carlo localization random noise 
developers monte carlo localization suggested adding position error mm position deviation mm srl real robots mean steps taken error real robots versus time 
srl real robots mean steps taken deviation reported localization real robots versus time 
position error mm srl mean error bands mcl noise mean error bands samples simulation error versus number samples 
random samples help algorithm recover errors tested monte carlo localization adding random noise samples adding random noise samples 
test run times results averaged 
tests run samples noted 
simulator models movement robot probability density localization algorithm 
step probability density motion sampled generate new position robot 
parameters movement model parameters robocup 
robot vision system modelled assuming vision system correctly identifies robot view cone estimates correct distance angle marker 
reported deviation vision information localization algorithm 
modelled movement robot neck simulator having sweep set degrees relative body pace real robot 
neck movement allowed robot see different markers field positions 
shows srl error mcl localization small sample sets 
figures show mean error confidence interval error bands 
sample set increased samples algorithms give identical performance 
performance mcl noise samples slightly worse mcl noise samples especially small sample sizes mcl noise shown figures 
interestingly error srl stayed constant samples usable samples 
shows srl gives fewer misleading results mcl 
srl gives fewer misleading results intermediate sample counts error srl mcl disappeared 
position interval error mm srl rms error bands mcl noise rms error bands samples simulation interval error versus number samples 
figures show srl able global localization quicker mcl samples 
figures show mean error standard deviations mean deviation lines error bars 
srl able globally localize steps mcl takes steps 
noisy domains adversarial robots afford spend steps localizing 
global localization performed srl consistent mcl making output easier reason 
surprisingly adding noise mcl hurts global localization 
noticed testing mcl noise pays penalty larger deviations algorithms 
shows average interval error time algorithms see experiment real robots description interval error 
srl mcl generates large interval errors global localization indicates producing misleading outputs 
tested response srl mcl systematic errors movement vision 
simulated systematic movement errors multiplying actual distance robot moved turned simulator constant factor telling localization algorithm 
shows sensitivity algorithm movement parameters important movement parameters expensive difficult measure 
simulated systematic error vision multiplying distance estimates passed localization constant factor 
shows srl robust modelling error mcl especially regards systematic movement error 
shown figures mean confidence interval error bands 
tradeoff robustness systematic movement error systematic vision error 
srl mcl noise favor robustness movement errors mcl noise favors position error mm position error mm srl rms standard deviations mcl noise rms standard deviations steps taken simulation srl mcl noise error versus time 
srl rms standard deviations mcl noise rms standard deviations steps taken simulation srl mcl noise error versus time 
position interval error mm position error mm position error mm srl rms mcl noise rms mcl noise rms steps taken simulation srl mcl interval error versus time 
srl mean error bands mcl noise mean error bands systematic movement error srl mean error bands mcl noise mean error bands systematic vision error position error mm position error mm srl mean error bands mcl noise mean error bands systematic movement error srl mean error bands mcl noise mean error bands systematic vision error simulation srl mcl error versus systematic model error 
robustness vision errors 
mcl noise performs better srl large systematic vision errors 
srl performs better mcl noise cases similar response vision errors lower errors movement errors 
srl robust errors movement mcl noise especially movement error larger standard deviations 
state estimation guide behavior useful estimate state system influence behavior 
representation behavior system uses represent inherit uncertainty system affects system ability reason uncertainty 
simplistic representation results inability distinguish different kinds uncertainty 
combination knowledge states results performing action different states different actions performed 
complex representation behavior system excessive superfluous detail 
slows system practical cases results system able look far 
simple representations provide sufficient expressive power perform tasks keeping system simple 
summary sensor resetting localization srl provides effective localization option real time systems limited computational resources 
technique applicable markovian domains locale samples drawn sensor readings possible sample srl requires constant amount processing power monte carlo localization mcl adaptive sample set sizes attempt address issues srl 
srl achieves better results mcl small sample sets translates smaller computational resource requirements 
srl able localize effectively small sample sets little computational power 
part reason srl able accomplish srl ability globally localize fewer samples 
srl automatically resets errors accumulate allowing gracefully recover errors modelling collisions teleportation 
srl sensitive mcl systematic errors modelling large errors vision mcl random noise samples added 
srl particularly robust respect systematic errors movement 
addition benefits algorithm returns misleading information 
algorithm correctly reports reliability best guess location robot 
sensor resetting localization accurate easy technique able perform robust localization small computational resources 
benefits due ability srl determine state performance adapt information 
comparison localization techniques including srl created :10.1.1.116.6293
best performing localization test adaptive mcl mcl derivative srl improves detection phase transitions performance algorithm 
localization techniques occasionally fail due lack resolution approximation probability density representing robot location inaccurate models 
srl pioneered addressing problem failure localization algorithm 
shown performance srl mcl evaluation continues show value 
adaptation changing lighting conditions section describes automatically adapting changing lighting conditions 
uses sony aibo robots 
lighting conditions monitored average luminance camera images robot camera 
data automatically identify current lighting conditions choose appropriate thresholds match 
rest section describes detail technique results obtained 
submission 
practical color robotic vision systems rely consistent pixel readings allow colors segmented surrounding pixel context 
actual pixel readings vary lighting conditions separation colors small systems highly dependent consistent lighting conditions 
changing lighting conditions involves vision system new conditions 
propose solution problem automatically detects current lighting conditions switches corresponding human machine supplied calibration 
describing algorithm segmenting data different states section 
section describe algorithm converting segmented data class labels identify current state environment 
describe knowledge improve performance robotic vision adapting current environmental state section 
describe testing procedures results section 
finish section 
algorithm order understand line algorithm helps start considering line version 
basic problem identify current lighting conditions data summarizing camera seeing 
desirable small amount information summarize lighting scene captured camera reduce memory computation requirements 
simply average luminance brightness scene sufficient separation economical representation 
course average luminance scene depends highly looked 
relying single measure average luminance distribution luminance values past considered 
basic problem segment time series average luminance values distinct regimes regions similar distributions average luminance measurements 
having decided look similar distributions measurements necessary way determine distributions fact distribution similar 
shape form distribution unknown non parametric distance metric 
particular distance metric important long indicative difference distributions 
note statistical difference tests kuiper procedure segment input space split input space non overlapping windows size create leaf node window 
initialize set contain leaf nodes 
calculate distance dist pairs elements choose dist dist create new internal node children 
line segmentation data test smirnov inappropriate measure probability difference distributions distance 
form input data determined necessary consider form output algorithm produce 
simplicity input data split equal size windows size window size parameter system affects latency robustness resulting detection 
larger window sizes robust higher latency 
basic idea representing output avoid making binary decisions possible moment 
done representing division input space binary tree leaf represents region input space 
regions similar stored close tree common ancestor nodes 
internal node stores distance children reported statistical test 
internal nodes internal nodes children union data leaves performing comparisons 
resulting tree determine number modes data applying threshold split criterion tree 
alternatively number different modes known tree select segmentation data different modes 
tree determining location number modes data shown determining current mode system relating available calibrations 
line segmentation tree easy construct simple slow line algorithm 
algorithm starts dividing input space non overlapping windows size window compared window get distance value 
similar windows joined creating new internal node windows children 
new internal node treated mega window replaces original windows 
leaves windows 
process repeated windows joined 
pseudo code algorithm shown 
procedure insert tree window root 
done false 
done foreach children 
dist 
dist 
dist 
done 
choose minimizes dist 
create new node children replace tree 
update similarity measurements ancestors line segmentation data line segmentation main obstacle building tree line find efficient way insert new window growing tree 
strategy tried simply start root follow branch new window similar 
done recursively leaf node reached children node similar node inserted 
algorithm works reasonably fails find best place tree insert new window 
usually happens top levels tree contain mixtures different modes new window tends look different 
inherently lot noise compared distance signal produced actual similarity 
robust algorithm developed improves naive algorithm trying different branches tree find best place insert new window 
pseudo code insertion shown 
practice algorithm consider nodes nodes tree tend similar children traversing short depth tree 
distance metric distance metric simple measure average distance data points distribution need moved order match data points second distribution 
cumulative probability distribution formed distributions call inverse respectively 
average distance points moved distribution match labelling classes class current window determined robot decide current state environment done labelling class node tree scratch time window node added tree see 
algorithm starts labelling leaf labelled examples common class label leaf 
note may different states correspond label 
labels propagated tree assigning node common label subtree 
remaining unlabelled subtrees labelled label parent 
class window taken class current state environment 
application algorithm applied task automatically selecting vision thresholds automatically identifying current state lighting matching thresholds 
robots usually limited working specific lighting condition trained 
occurs thresholds robotics fast leaving processing available non vision tasks 
automatically selecting pre trained thresholds robot better adapt current lighting conditions environment finds 
procedure node leaf num classes examples hand label count class class foreach child children child 

foreach child children child 
class class procedure node class class class 
foreach child children child class 
procedure tree clear class label nodes root 


labelling classes find set thresholds generalize lighting conditions applying state identification technique described robot thresholds generalizes smaller region state space possible lighting conditions 
possible find thresholds generalize reasonable amounts lighting state space allows robot adapt large variety situations 
resulting specialized thresholds give better performance general thresholds lighting level 
measured ability robot correctly identify colors image different lighting conditions algorithm described simply set thresholds 
test methodology robot placed front set objects easy confuse colors red pink orange yellow interested segmenting 
robot started lighting conditions matching thresholds allow auto center camera objects 
robot recorded colors saw fourth frame log file raw images camera 
lighting conditions changed different brightness levels schedule timed stopwatch 
baseline adaptation bright thresholds test case adaptation algorithm run separate trials due hardware limitations 
raw images selected log hand labelled human 
robot performance graded number pixels robot classified correctly pixels labelled color human 
robot penalized pixels colored robot thought colors 
misclassifications easily filtered threshold generating algorithm tends produce errors 
results results testing robot image segmentation performance shown 
cases algorithm chose correct thresholds small delay collect data 
run adaptation bright thresholds bright conditions fair medium conditions poorly dim conditions 
sequence lighting conditions seen clearly performance adaptation case bright dim mid bright mid bright dim 
small amount registration error transitions runs due starting watch slightly different times 
notice robot adapting conditions robot performs poorly small period time performance approves 
corresponds robot collecting information determine lighting conditions changed time window transition plus full window worth data 
strange looking performance adaptation run largely artifact test setup 
performance starts high robot focused objects drops suddenly improving 
due training data provided order bright medium dim robot starts thinking lighting conditions dim 
sudden drop radio packet reaches robot switches thresholds dim 
delay switching back due robot gathering data takes extra long fewer radio packets sent robot starting 
percent correct percent pixels classified correctly adaptation adaptation time sec image segmentation results 
results adaptation shown solid black 
results bright thresholds shown dashed lines 
seen adaptation dramatically improves performance robot segmenting image degrading performance lighting conditions consistent 
improvement color segmentation image carries improvement object identification turn improves performance robot task 
demonstrated proof concept system showing sensors identify state environment system state identification improve performance robots 
important step form base improvements advances 
naturally new line improvements algorithm improve performance generality 
despite possible improvements algorithm performs useful tasks difficult impossible existing methods 
identification repeated states step generating markov higher order model world 
particular shown algorithm improve robustness performance robot face varied lighting conditions 
task needs solved robotics practical lighting conditions vary constantly robot moves reasonably sized environment 
techniques described demonstrate robot usefully adapt environment 
form foundation thesis 
proposed propose investigate robots autonomously adapt environments 
particularly investigate adaptation possible robot lacks models sensors world limitations lack knowledge imposes robot 
research question creating line algorithm module robotic system automatically detect state environment robotic sensor data priori knowledge 
propose accomplish enhancing system built describe section handle varied types data 
propose test completed system variety robotic tasks 
study algorithm enhance ways computation memory resources required reduced depend time 
study effect increasing number classes performance algorithm 
reduced time change detected adaptation completed 
algorithm able handle data robotic systems properties kinds data 
enhancements needed handle additional types robotic data 
features robotic data enhancements required shown bold 
features probably supported shown italics 
features robotic data multi dimensional periodic changing multiple time scales abrupt non linear changes model available unknown number classes drifting changes propose apply algorithm robotic tasks automatic adaptation changing light levels task robot play soccer lighting conditions keep changing periodically 
task requires identification current lighting conditions known set possible lighting conditions selection vision parameters match current lighting conditions 
robot set vision parameters possible lighting conditions 
processes involved determining lighting conditions perceived robot 
processes include lighting conditions choices robot pointing head various directions objects immediate surroundings robot 
challenges task extract changes corresponding lighting conditions rest changes process data including periodicities caused robot behavior process data changing multiple time scales changes due viewing directions vs changes lighting conditions 
automatic pose stability discovery task determine accelerometer readings correspond fallen states appropriate action execute return upright posture 
robot examples accelerometer readings corresponding standing 
robots tries different motions predefined set motions 
robot encounters new types accelerometer readings robot tries return standing state 
stopping successful returning standing state new state considered part set stable states require corrective action 
stopping unsuccessful robot tries series predefined maneuvers try return standing state 
maneuver successful recorded state henceforth right robot state encountered 
number different states accelerometer readings unknown task discovered algorithm 
challenges task determine number classes accelerometer readings associate classes readings actions successfully periodic data caused periodicity walk 
topological mapping task create topological map environment sensor readings 
topological map annotated information identify locations map sensor readings 
locations corresponding different sensor readings organized map showing possible transitions states 
challenges task determining number different locations incorporating model possible transitions 
memory computational complexity algorithm determined proved 
additional algorithmic features added needed robotic domains 
investigate integrating algorithm markov model learner 
basseville :10.1.1.22.6332
detection abrupt change theory application 
prentice hall englewood cliffs 
burgard thrun :10.1.1.18.4328
learning motion patterns persons mobile service robots 
proceedings ieee international conference robotics automation icra volume pages 
blum mitchell :10.1.1.114.9164
combining labeled unlabeled data training 
colt proceedings workshop computational learning theory morgan kaufmann publishers 
bruce lenser veloso 
fast parametric transitions smooth motion 
birk coradeschi editors robocup fifth robocup competitions conferences berlin 
springer verlag 
das mozer 
unified gradient descent clustering architecture finite state machine induction 
cowan tesauro alspector editors advances neural information processing systems volume pages 
morgan kaufmann publishers 
dellaert fox burgard thrun :10.1.1.18.8488
monte carlo localization mobile robots 
proceedings iros 
dempster laird rubin 
maximum likelihood incomplete data em algorithm 
journal royal statistical society 
deng moore 
learning recognize time series combining arma models memory learning 
ieee int 
symp 
computational intelligence robotics automation volume pages 
dima lacroix 
disparity hypotheses improved indoor stereo 
proceedings ieee international conference robotics automation icra volume pages 
fox burgard dellaert thrun :10.1.1.2.342
monte carlo localization efficient position estimation mobile robots 
proceedings aaai 
fox burgard dellaert thrun :10.1.1.2.342
monte carlo localization efficient position estimation mobile robots 
proceedings aaai 
fujita veloso uther asada kitano 

vision strategy localization sony legged robots robocup 
ai magazine 
ghahramani hinton :10.1.1.30.5334
switching state space models 
technical report king college road toronto canada 
goldberg matari detecting regime changes mobile robot multiple models 
proceedings international conference intelligent robots systems iros pages 
:10.1.1.116.6293
fox 
experimental comparison localization methods continued 
proceedings ieee rsj international conference intelligent robots systems iros 
hashimoto :10.1.1.2.342
mode switching estimator visual servoing 
proceedings ieee international conference robotics automation icra volume pages 
hashimoto 
sensor fault detection identification dead reckoning system mobile robot interacting multiple model approach 
proceedings international conference intelligent robots systems iros pages 
kohlmorgen 
dynamic hmm line segmentation sequential data 
dietterich becker ghahramani editors nips advances neural information processing systems volume 
mit press 
kohlmorgen :10.1.1.21.5205
line method segmentation identification nonstationary time series 
neural networks signal processing xi pages 
kuiper 
proceedings akademie van ser 
volume pages 
lee arkin 
selection behavioral parameters integration discontinuous switching case reasoning continuous adaptation learning momentum 
proceedings ieee international conference robotics automation icra volume pages 
lenser bruce veloso 
cm pack complete software system autonomous legged soccer robots 
proceeding fifth international conference autonomous agents 
lenser bruce veloso 
cm pack 
stone balch editors robocup robot soccer world cup iv pages berlin 
springer verlag 
lenser bruce veloso 
modular hierarchical behavior architecture 
birk coradeschi editors robocup fifth robocup competitions conferences berlin 
springer verlag 
lenser veloso 
automatic detection response varied lighting conditions 
lenser veloso :10.1.1.37.4334
sensor resetting localization poorly modelled mobile robots 
proceedings icra 
arkin 
spatio temporal case reasoning behavioral selection 
proceedings ieee international conference robotics automation icra volume pages 
arkin 
learning behavioral parameterization spatiotemporal case reasoning 
proceedings ieee international conference robotics automation icra volume pages 
lin niklasson 
time series segmentation adaptive resource allocating vector quantization network change detection 
proceedings ieee inns international joint conference neural networks ijcnn pages 
marsland 
line novelty detection self organization application inspection robotics 
phd thesis university manchester 

growing neural map line competitive clustering algorithm 
proceedings ieee international conference robotics automation icra volume pages 
nolfi tani 
extracting regularities space time cascade prediction networks case mobile robot navigating structured 
connection science 
penny roberts 
dynamic models nonstationary signal segmentation 
computers biomedical research 
tani :10.1.1.137.2777
model learning mobile robot navigation dynamical systems perspective 
ieee transactions systems man cybernetics 
uther lenser bruce hock veloso 
cm pack fast legged robot walking robust localization team behaviors 
birk coradeschi editors robocup fifth robocup competitions conferences berlin 
springer verlag 
veloso uther 
sony legged robot team 
asada kitano editors robocup robot soccer world cup ii pages 
springer verlag berlin 
veloso winner lenser bruce balch 
vision localization behavior planning autonomous quadruped legged robot 
proceeding aips 
weigend srivastava :10.1.1.27.993
nonlinear gated experts time series discovering regimes avoiding overfitting 
international journal neural systems 

