learning text patterns web information extraction assessment doug downey oren etzioni stephen soderland daniel weld department computer science engineering university washington seattle wa cs washington edu etzioni cs washington edu cs washington edu weld cs washington edu learning text patterns suggest desired type information common strategy extracting information unstructured text web 
introduce idea learned patterns extractors generate new information discriminators assess truth extracted information 
demonstrate experimentally web information extraction system knowitall improved terms coverage accuracy addition simple pattern learning algorithm 
learned patterns extractors able boost recall patterns discriminators able reduce classification errors 
addition reports theoretical results optimally selecting ordering discriminators shows theory yields heuristic reduces classification errors additional giving error reduction 

variety aimed extracting information free text uses form pattern learning soderland riloff jones lin yangarber grishman ravichandran hovy 
starting set seed examples class pattern learning algorithms scan corpus discover contextual patterns instances class commonly 
discovered patterns corpus extractors generate instances class 
pattern learning applied large corpus web automatic creation large knowledge bases exciting possibility agichtein gravano brin 
common problem information extraction systems quality extracted information variable degrade extraction progresses 
inspired turney pmi ir algorithm turney addressed problem patterns discriminators etzioni 
gather hit counts web search engines compute pointwise mutual information pmi extraction copyright american association artificial intelligence www aaai org 
rights reserved 
pattern learner pl patterns extractors increase coverage discriminators increase accuracy patterns pl produces extractors discriminators 
discriminator class web scale statistic independent assessment veracity extraction 
example hit count phrase boston cities estimate probability boston fact city 
investigate applying simple pattern learning algorithm pl task web information extraction 
primary contributions 
shown introduce insight pl increase coverage learning extractors accuracy learning discriminators 

quantify efficacy approach experiments multiple classes describe design decisions enhance performance pattern learning web 

introduce theoretical model discriminator ordering selection show general problem np hard ordering discriminators marginal utility mu optimal important special cases 
suggested theory mu shown effective increasing accuracy practice 
knowitall etzioni web information extraction system baseline experiments 
baseline knowitall system rely pattern learning uses set domain independent patterns cf 
hearst extractors discriminators 
example generic pattern np np indicates head noun phrase np member class named np 
instantiated different classes producing pattern cities city patterns successful generating large high accuracy collections facts web 
experiments compare baseline knowitall system enhanced version includes learned patterns addition domain independent patterns 
method learn patterns described section 
describe experience learned patterns extractors section discriminators section 
related discussed section conclude directions section 
learning patterns pattern learning algorithm pl proceeds follows start set seed instances generated domain independent extractors 
seed instance issue query web search engine occurrence returned documents record context string comprised words placeholder class instance denoted class name words 

output best patterns metric pattern defined substring context string includes instance placeholder word 
goal pl find high quality patterns 
pattern quality recall fraction instances target class web surrounded pattern text precision fraction strings surrounded pattern text target class 
web contains large number candidate patterns example pl patterns class city poor quality 
estimating precision recall patterns efficiently searching web candidate pattern important 
estimating precision patterns especially difficult labeled negative examples positive seeds 
manner similar lin yangarber grishman exploit fact pl learns patterns multiple classes take positive examples class negative examples classes 
pattern distinct seeds target class distinct seeds classes define total number seeds target class constant prior estimate precision perform laplace correction 
prior estimate chosen testing extractions sample learned patterns pmi assessment 
number instances baseline baseline pl city baseline baseline baseline baseline pl film unique instances city film precision 
pattern learning increases coverage baseline 

learned patterns extractors patterns pl produces extractors search web new candidate facts 
example learned pattern city search web pages containing phrase 
proper noun phrase occurring directly returned documents new candidate extraction class city 
patterns pl finds class choose extractors patterns able efficiently generate new extractions high precision 
patterns select high precision extractor efficiency number unique instances produced search engine query important 
class select top patterns heuristics brin prefer patterns appear multiple distinct seeds 
banning patterns just single seed requiring equation potential rules eliminated 
experiments class city improve average efficiency resulting patterns factor 
sort remaining patterns equation experiments class city ranking increase average efficiency significantly improve average precision 
patterns pl generates class take patterns satisfy ranked highly subject analysis applying web pages testing precision pmi assessment 
case ties assume longer patterns precise similar brin 
extractor pattern correct precision extractions cities city city city city movie film film movie movie review film table productive extractors city film number different correct extractions produced extractor extractor precision assessment 
results performed experiments testing baseline system knowitall domain independent patterns enhanced version baseline pl knowitall including extractors generated pattern learning 
configurations perform pmi assessment assign probability extraction domain independent discriminators 
estimated coverage number unique instances extracted configurations manually tagging representative sample extracted instances grouped probability 
case city automatically marked instances correct appeared tipster gazetteer 
ensure fair comparison compare coverage level precision computed proportion correct instances probability 
results shown show learned patterns extractors improves knowitall coverage substantially choose precision level representative high quality extraction results qualitatively similar precision levels 
examples productive extractors class shown table 
patterns discriminators learned patterns discriminators perform pmi assessment 
pattern discriminator extraction computing pmi defined hits pmi hits discriminator pattern extraction substituted instance placeholder 
example city city chicago indicates phrase city chicago 
pmi scores extraction features na bayes classifier 
experiments show learned discriminators provide stronger features domain independent discriminators classifier improving classification accuracy percentage extractions classified correctly pmi assessment 
large set learned discriminators determining discriminators best terms impact classification accuracy especially important limited access web search engines 
baseline knowitall system discriminators executed extraction 
may case discriminator perform better extractions 
example discriminator cities city high precision appears rarely web 
pmi score cities city may give strong evidence extraction city city appears times web probability discriminator returning false zero high 
rare extractions choosing prevalent discriminator albeit lower precision city hotels offer better performance 
lastly executing discriminators extraction best choice 
example discriminators executed extraction high precision return true system resources better spent assessing extractions truth certain 
express problem choosing discriminators execute extractions optimization problem give heuristic method includes enhancements mentioned 
show heuristic provably optimal behavior important special cases verify experimentally heuristic improves accuracy 
discriminator ordering problem define discriminator ordering problem optimization problem goal obtain accurate assessment probabilities set extractions limited number resources 
specifically problem defined set extractions set discriminators 
assume precision recall discriminator known 
system apply discriminator extraction define set possible actions action performed 
executing action returns system binary assessment true false truth extraction action cost 
denote system current belief extraction system estimate probability true 
executing action system changes belief na bayes update assume outcomes actions conditionally independent actual truth value goal system choose actions way final beliefs correspond accurately possible actual state world 
specifically reward function maximized true false penalty factor falsely asserting extraction true 
mentioned action cost associated system goal maximize subject cost constraint transitions states probabilistic optimization problem find policy mapping belief states actions maximizes total expected reward cost equal discriminator ordering problem identical problem active classification object classified set unknown attributes obtained performing tests varying costs heckerman breese turney 
similar formulation na bayes classifier guo shows problem finding optimal policy special case classifying single object mapped partially observable markov decision process pomdp 
finding optimal policies pomdps known pspace complete papadimitriou tsitsiklis particular pomdps produced guo mapping special structure guo asks polynomial time algorithms particular problem may exist 
state fact single object classification task nphard detail assumptions relevant knowitall allow construction provably optimal policy 
reason subproblems discriminator ordering problem single extraction multiple discriminator ordering problem original problem multiple extraction ordering problem original problem 
theorem single extraction multiple discriminator ordering problem np hard number discriminators 
proofs theorem subsequent theorems downey 
corollary theorem general discriminator ordering problem np hard 
mu heuristic stated discriminator ordering problem np hard single extraction 
define mu heuristic policy chooses action highest expected marginal utility mu state conditions gives provably optimal performance mu heuristic shown similar properties different problem etzioni 
definition expected marginal utility mu applying discriminator extraction defined expected increase reward result 
compute divided cost mu precision recall current belief downey 
mu achieves enhancements choosing discriminators mentioned ways 
system certain classification belief approaches zero shown mu tends decrease mu prioritizes uncertain extractions 
secondly described downey computing mu hit count adjust expected outcome allows mu account fact rare extractions true pmi zero discriminators appear rarely 
assumptions ordering discriminators knowitall simpler general formulation discriminator ordering problem 
applying discriminator currently requires issuing single query web search engine assuming hit count extraction known cost actions 
formalize assumption cost assumption allows theoretical guarantee theorem assumption mu heuristic optimal multiple extraction single discriminator ordering problem 
discriminators pl finds dominate extraction discriminator higher mu extraction belief level tend higher mu extraction belief levels 
formally mu mu mu mu 
theorem assumptions mu heuristic optimal single extraction ordering problem 
assumptions shown mu heuristic offers provably optimal performance multiple extraction single discriminator multiple discriminator cases 
general interested multiple extraction multiple discriminator case mu heuristic shown give suboptimal performance case extractions discriminators 
assumption true 
strong assumptions needed prove optimality classification accuracy baseline baseline pl film mu baseline mu baseline pl city classification accuracy classes film city 
adding pattern learning pl improves accuracy ordering marginal utility mu better baseline ordering precision 
performance difference best method mu baseline pl baseline method statistically significant class chi square test 
experimentally validate performance mu heuristic 
experimental results tested performance pmi assessment different configurations domain independent patterns baseline learned patterns baseline pl discriminators ordering execution discriminators mu baseline measure precision 
configuration run total discriminators set extractions classes film city drawn experiments learned rules section 
baseline ordering executes discriminators extraction 
mu ordering contrast dynamically chooses discriminator extraction highest expected marginal utility may choose execute discriminators extractions zero 
theory assumes precision recall discriminators known experiment estimate quantities hand labeled training set disjoint test set extractions 
training test set choose settings maximized performance methods evaluated methods cross validation runs 
average results cross validation runs shown 
adding pattern learning pl improves accuracy ordering marginal utility mu better baseline ordering 
ordered properly domain independent discriminators perform especially class city due particularly useful discriminator cities city explored heuristics ensure discriminators conditionally independent possible assumed na bayes classifier 
tried requiring discriminator phrases executed extraction substrings left right handed discriminators alternate extraction left handed discriminator instance placeholder appears right side pattern text left film film 
adding enhancements reduced error average mu ordered configurations 
heuristics decreased performance slightly configurations executing discriminators fact employed configurations 
chosen metric classification accuracy compare methods represents point precision recall curve performance different precision recall points vary 
particular ordering discriminators precision tends give superior performance lower levels recall 
expect mu offers benefit cases resources discriminators executed scarce 
increase number discriminators ordering mu offers small accuracy benefit data set increasing number discriminators increase maximum achievable accuracy 
increase accuracy ordering discriminators mu opposed precision suggests metrics combining recall precision perform 
experiments similar ordering discriminators measure beta results accuracy closer mu mu baseline pl provides error reduction measure ordering film class 

related pl similar existing approaches pattern learning primary distinction learned patterns perform pmi ir turney assessment extraction 
pl differs pattern learning algorithms details 
riloff jones uses bootstrapped learning small corpus alternately learn instances large semantic classes patterns generate instances similar bootstrapping approaches larger corpora include snowball agichtein gravano dipre brin 
similar approaches differs pl bootstrapping learns patterns initial set seeds uses somewhat different heuristics pattern quality 
ravichandran hovy web search engines find patterns surrounding seed values 
goal support question answering training set question answer pairs known 
pl measure pattern precision seed questions checking correspondence extracted answers answers seed 
thelen riloff pl uses fact learns patterns multiple classes improve precision 
particular way multiple classes estimate pattern precision equation similar lin yangarber grishman 
unique feature approach heuristic computed solely searching web seed values searching corpus discovered pattern 
variety information extraction performed sophisticated structures simple patterns pl produces 
wrapper induction algorithms kushmerick weld doorenbos muslea minton knoblock attempt learn wrappers exploit structure html extract information web sites 
variety schemes soderland califf mooney ciravegna designed extracting information semi structured free text 
restrict attention simple text patterns natural fit approach leveraging web search engines extraction pmi assessment 
extraction may possible richer set patterns web search engines proper query generation strategy agichtein gravano item 
lastly described extension previous results showing learning extractors increase coverage knowitall system etzioni 
extend results applying pl learn discriminators adding theoretical model choosing discriminators apply showing experimentally pattern learning theoretical results positive impacts accuracy 

addition pattern learning pl improves coverage accuracy baseline system 
learned patterns boost coverage decrease classification errors pmi assessment 
suggested theoretical results mu heuristic reduces classification errors additional error reduction 
offers directions notably generalizing pl extract patterns ary predicates developing improved methods automatically estimating precision recall patterns 
success mu heuristic discriminator ordering suggests avenues improving information extraction systems general 
similar framework optimize choices executing extractors discriminators performing pattern learning depending constraints objectives information extraction system 
research supported part nsf iis iis darpa contract onr gift google 
google generously allowed issue large number queries xml api facilitate experiments 
jeff tal shaked ian simon alex yates comments previous drafts 
agichtein gravano 
snowball extracting relations large plain text collections 
proc 
th acm intl 
conf 
digital libraries 
agichtein gravano 
querying text databases efficient information extraction 
proc 
icde 
brin 
extracting patterns relations www 
proc 
intl wkshp 
web databases 
califf mooney 
relational learning rules information extraction 
proc 
aaai 
ciravegna 
adaptive information extraction text rule induction generalisation 
proc 
ijcai 
downey etzioni soderland weld learning text patterns web information extraction assessment extended version 
technical report uw cse 
etzioni 
embedding decision analytic control learning architecture 
artificial intelligence 
etzioni cafarella downey kok popescu shaked soderland weld yates 
information extraction knowitall 
proc 
www 
etzioni cafarella downey popescu shaked soderland weld yates 
methods domain independent information extraction web experimental comparison 
proc 
aaai guo 
active classification bounded resources 
proc aaai symp 
information refinement revision decision making 
hearst 
automatic acquisition hyponyms large text corpora 
proc th intl 
conf 
computational linguistics 
heckerman breese 
troubleshooting uncertainty 
technical report msr tr microsoft research 
kushmerick weld doorenbos 
wrapper induction information extraction 
proc 
ijcai 
lin yangarber grishman 
bootstrapped learning semantic classes 
proc 
icml wkshp continuum labeled unlabeled data 
muslea minton knoblock 
hierarchical approach wrapper induction 
proc 
rd intl 
conf autonomous agents 
papadimitriou tsitsiklis 
complexity markov decision processes 
mathematics operations research 
ravichandran hovy 
learning surface text patterns question answering system 
proc th acl conf 
riloff jones 
learning dictionaries information extraction multi level bootstrapping 
proc 
aaai 
soderland 
learning information extraction rules semi structured free text 
machine learning 
thelen riloff 
bootstrapping method learning semantic lexicons extraction pattern contexts 
proc 
conf 
empirical methods nlp 
turney 
types cost inductive concept learning 
proc 
wkshp 
cost sensitive learning icml 
turney 
mining web synonyms pmi ir versus lsa toefl 
proc 
th european conf 
machine learning 
