wrl technical note tn aren operating systems getting faster fast hardware 
john ousterhout western research laboratory hamilton avenue palo alto california usa western research laboratory wrl computer systems research group founded digital equipment 
focus computer science research relevant design application high performance scientific computers 
test ideas designing building real systems 
systems build research prototypes intended products 
second research laboratory located palo alto systems research center src 
digital research groups located paris prl cambridge massachusetts crl 
research directed mainstream high performance computer systems 
prototypes intended computing environments digital customers 
long term goal wrl aid accelerate development high performance uni multi processors 
research projects wrl address various aspects high performance computing 
believe significant advances computer systems come single technological advance 
technologies hardware software advance pace 
system design art composing systems level technology appropriate balance 
major advance system performance require reexamination aspects system 
design fabrication packaging hardware language processing scaling issues system software design exploration new applications areas opening advent higher performance systems 
researchers wrl cooperate closely move freely various levels system design 
allows explore wide range tradeoffs meet system goals 
publish results variety journals conferences research reports technical notes 
document technical note 
form rapid distribution technical material 
usually represents research progress 
research reports normally accounts completed research may include material earlier technical notes 
research reports technical notes may ordered 
may mail order technical report distribution dec western research laboratory uco hamilton avenue palo alto california usa reports notes may ordered electronic mail 
addresses digital net wrl techreports darpa internet wrl techreports dec com wrl techreports dec com uucp wrl techreports obtain details ordering electronic mail send message addresses word help subject line receive detailed instructions 
aren operating systems getting faster fast hardware 
john ousterhout october note evaluates hardware platforms operating systems set benchmarks test memory bandwidth various operating system features kernel entry exit file systems 
operating system performance improving rate base speed underlying hardware 
copyright digital equipment western research laboratory hamilton avenue palo alto california usa 
technical note contains results benchmark programs ran machines dec western research laboratory university california berkeley 
benchmarks micro benchmarks meaning measures particular hardware operating system feature memory memory copy speed kernel entry exit 
micro benchmarks identify particular strengths weaknesses systems may give indication system performance 
benchmarks include macro benchmark exercises variety file system features gives better idea operating system speed 
goal running benchmarks partly compare different hardware platforms operating systems understand operating system performance scale base performance hardware platforms 
answer today risc workstations risc mainframes including machines dec sun mips computer comparing slower older machines newer risc machines speedup benchmarks difference raw hardware speed 
benchmarks suggest possible factors contribute non scalability operating systems 
memory bandwidth scaled match processor speed faster machines 
second factor file systems require synchronous disk os common situations 
synchronous requirements limit performance operating systems processors get faster disks don 
hardware hardware platforms benchmarks listed table 
table includes abbreviation platform rest note approximate mips rating indication machine risc processor cisc processor 
mips ratings estimates intended give rough idea base integer performance provided platform 
main mips ratings establish expectation level benchmarks 
example operating system performance scales base system performance ds run various benchmarks times fast sun times fast sun 
hardware abbreviation risc cisc mips mips risc decstation ds risc sun sun risc vax cisc sun sun cisc microvax ii cisc table hardware platforms operating system benchmarks machines generously endowed memory 
far know significant paging occurred benchmarks 
file related benchmarks relevant files fit main memory buffer caches maintained operating systems 

operating systems operating systems benchmarks ultrix sunos risc os sprite 
ultrix sunos dec sun derivatives berkeley bsd unix similar respects 
risc os mips computer systems operating system machine 
appears derivative system bsd features added 
sprite experimental operating system developed research group berkeley provides user interface bsd unix kernel implementation completely different 
particular sprite file system radically different ultrix sunos ways handles network ways handles disks 
differences seen benchmark results 
version sunos sun measurements version sun measurements 
sunos incorporates major restructuring virtual memory system file system example maps files virtual address space keeping separate buffer cache 
difference reflected benchmark results 

kernel entry exit benchmark measures cost entering leaving operating system kernel 
repeatedly invoking getpid kernel call 
getpid return caller process identifier 
table shows average time call different platforms operating systems 
configuration time mips relative microseconds speed risc os ds sprite ds ultrix ultrix sun sunos sun sprite sun sprite sun sunos ultrix table getpid kernel call time operating system benchmarks third column table labeled mips relative speed 
column indicates machine performed benchmark relative mips rating table sun times table 
entry third column computed ratio sun time particular machine time dividing ratio machine mip rating sun mip rating 
unix derivative operating systems ultrix sunos risc os sun sunos time sprite sun sprite time 
example mips relative speed 
mips relative speed means machine ran benchmark just speed expected sun times mips ratings table 
mips relative speed means machine ran benchmark slowly expected mips rating larger means machine performed better expected 
risc machines mips relative speeds table 
indicates cost entering exiting kernel improved risc machines basic computation speed 

context switching second benchmark called 
measures cost context switching plus time processing small pipe reads writes 
benchmark operates forking child process passing byte back forth parent child pipes 
table lists time round trip processes includes context switches read write kernel call process 
getpid benchmark speeds computed scaling sun times mips ratings table 
risc machines didn perform expected ds ultrix combination 
configuration time mips relative ms speed risc os ds ultrix ds sprite ultrix sun sunos sun sprite sun sunos sun sprite ultrix table echo byte processes pipes 

select operating system benchmarks third benchmark exercises select kernel call 
creates number pipes places data pipes repeatedly calls select determine pipes readable 
zero timeout select call kernel call waits 
table shows long select call took microseconds configurations 
configuration single pipe contained data 
second configuration pipes empty third configuration pipes containing data 
column speed computed full data 
performance benchmark generally line machines mips ratings 
numbers table surprisingly high pipes empty quite low long pipes contain data 
suspect risc os emulation select kernel call faulty causing process wait ms calling program requested immediate timeout 
configuration pipe empty full mips relative microseconds microseconds microseconds speed risc os ds sprite ds ultrix sun sunos ultrix sun sprite sun sprite sun sunos ultrix 
block copy table time select kernel call 
fourth benchmark uses bcopy procedure transfer large blocks data area memory 
doesn exercise operating system different operating systems differ hardware libraries contain different bcopy procedures 
main differences due cache organizations memory bandwidths different machines 
results table 
configuration ran benchmark different block sizes 
case blocks large aligned properly bcopy efficient way possible small source destination block fit cache 
second case increased transfer size larger cache size cache misses occur continuously 
case transfers source destination average bandwidth copying shown table 
operating system benchmarks configuration cached uncached bytes instruction mbytes second mbytes second risc os ultrix sun sprite ds sprite ds ultrix sun sunos sun sprite ultrix table throughput bcopy procedure large blocks 
column table relative showing configuration move large uncached blocks memory relative fast executes normal instructions 
computed number second column uncached dividing mips rating table 
value 
interesting thing notice cisc machines sun normalized ratings risc machines ratings 
dec sun risc workstations faster processors appear accompanied increase memory bandwidth 
memory intensive applications scale machines 
fact relative performance memory copying drops monotonically faster processors risc cisc machines 

read file cache benchmark consists program opens large file reads file repeatedly kbyte blocks 
configuration chose file size fit main memory file cache 
benchmark measures cost entering kernel copying data kernel file cache back buffer benchmark address space 
file large data copied kernel call resident hardware cache 
buffer re receive data call machines caches receiving buffer stay cache 
table lists bandwidth data transfer averaged large number kernel calls 
numbers table reflect fairly closely memory bandwidths table 
noticeable difference sun relatively better benchmark due writeback cache 
receiving buffer stays cache contents get overwritten flushed memory 
ds contrast write cache causes information buffer flushed immediately memory 
operating system benchmarks configuration mbytes second mips relative speed risc os ultrix sun sunos sun sprite ds ultrix ds sprite sun sprite sun sunos ultrix 
modified andrew benchmark table bandwidth reading file cache large scale benchmark ran 
modified version andrew benchmark developed satyanarayanan measuring performance andrew file system 
benchmark operates copying directory hierarchy containing source code program stat ing file new hierarchy reading contents copied file compiling code copied hierarchy 
order results comparable different machines modified benchmark uses compiler 
words regardless machine executing benchmark compiler gnu compiler generating code machine called spur 
raw andrew results shown table 
table lists separate times different phases benchmark 
copy phase consists compilation file copying scanning compile phase consists just compilation 
ran benchmark local remote configurations 
local means files accessed benchmark stored disk attached machine running benchmark 
remote means files possible stored server machine accessed network 
sprite sunos measurements remote means benchmark run diskless workstation absolutely file accesses remote 
ultrix measurements temporary files compilation may stored locally remote measurements 
files directory hierarchy copied program binaries stored remotely 
ultrix sunos nfs remote accesses 
sprite sprite caching network file system see details 
remote cases server kind machine client 
table gives additional relative numbers mips relative speed local operation percentage slow experienced benchmark ran remote disk local 
remote penalty figures wasn able benchmark remote configuration 
operating system benchmarks configuration copy compile total seconds seconds seconds risc os local ds sprite local ds sprite remote sun sprite local sun sunos local sun sprite remote ds ultrix local ultrix local ds ultrix remote sun sunos remote sun sprite local sun sprite remote ultrix local ultrix remote table modified andrew benchmark configuration mips relative remote penalty speed local risc os local ultrix sun sprite ds sprite sun sprite ultrix ds ultrix sun sunos table modified andrew benchmark cont interesting results tables 
operating system scaled match hardware speedups 
second sprite comes consistently faster ultrix sunos remote access 
sprite shows hardly performance degradation remote access compilation phase sprite faster remote local don explanation remote faster local assumed experimental anomaly seen effect different occasions 
contrast nfs risc workstations slow relative local access 
appears relative penalty operating system benchmarks nfs increasing machine speeds increase example slowed nfs local disk 
third interesting result benchmark ds ultrix combination somewhat slower expected 
example ds ultrix local slower ds sprite remote ds ultrix remote faster sun sunos remote 

open close ran benchmarks attempt explain results table 
open close benchmark repeatedly opens closes particular file 
results shown table cases name single element elements 
local case unix derivatives consistently faster sprite 
remote case sprite faster sunos slower ultrix 
case benchmark explain differences table 

create delete configuration foo foo ms ms ds ultrix local risc os local sun sunos local ultrix local ds sprite local sun sprite local ultrix local ds ultrix remote ds sprite remote sun sprite local sun sprite remote sun sprite remote ultrix remote table time open close file benchmark interesting terms identifying differences operating systems 
helps explain results table 
benchmark simulates creation deletion temporary file 
opens file writes amount data file closes file opens file reading reads data closes file deletes file 
tried different amounts data kbytes kbytes 
operating system benchmarks table gives total time create delete file hardware operating system configurations 
configuration data kbytes kbytes ms ms ms ds sprite local sun sprite local ds sprite remote sun sprite local risc os local sun sprite remote ultrix local sun sprite remote sun sunos local ds ultrix local ultrix local ds ultrix remote ultrix remote table time create delete file benchmark highlights basic difference sprite unix derivatives 
sprite short lived files created deleted data written disk 
information goes disk lived seconds 
unix derivatives file system appears closely tied disk 
data written file unix derivatives required ms create delete file regardless performance machine 
suggests creation deletion operations forcing data disk waiting disk operations complete 
create delete benchmark helps explain poor performance ds ultrix andrew benchmark 
basic time creating empty file greater ds ultrix local ultrix local time kbyte file ds ultrix remote times long ds sprite remote 
poor performance relative may due slower disks rz ds poor remote performance probably due nfs writing policy requires new data written disk file closed 
note ds ultrix remote achieves write bandwidth kbytes sec 
twice slow measured hardware running earlier version ultrix twice slow measured previously sun machines running sunos nfs 
lastly table exposes behavior sunos 
note time file data ms time kbytes ms tried data sizes kbytes kbyte intervals 
sunos time stayed ms range file size increased kbytes kbytes point jumped ms range 

operating system benchmarks benchmark faster machines ran slowly guessed raw processor speed 
cases getpid don explanation discrepancy additional registers risc machines account difference example 
benchmarks highlight issues hardware designers operating systems people think 
hardware side memory bandwidth allowed slip relative processor speed 
trend continues machines particularly workstations cost considerations may designers memory system performance limited performance memory bandwidth 
fast cache may reduce need low latency main memory doesn eliminate need high bandwidth main memory 
software side operating system designers need decouple file system performance disk performance 
operating systems derived unix caches speed reads require synchronous disk operations modify files 
coupling isn eliminated large class file intensive programs receive little benefit faster hardware 
course delaying disk writes may result information loss crashes challenge operating system designers maintain reliability decoupling performance 
final consideration area network protocols 
biased opinion assumptions inherent nfs write close particular represent fundamental performance limitation 
users benefit faster machines nfs choice nfs changed synchronous 

john howard michael kazar menees david nichols satyanarayanan robert sidebotham michael west 
scale performance distributed file system 
acm transactions computer systems february 
michael nelson brent welch john ousterhout 
caching sprite network file system 
acm transactions computer systems february 
john ousterhout andrew fred douglis michael nelson brent welch 
sprite network operating system 
ieee computer february 
operating system benchmarks wrl research reports titan system manual architecture papers michael nielsen 
norman jouppi jeremy dion david boggs mich wrl research report september 
ael nielsen 
wrl research report april 
global register allocation link time david wall 
fast printed circuit board routing wrl research report october 
jeremy dion 
wrl research report march 
optimal heat sinks william 
compacting garbage collection ambiguous wrl research report october 
roots joel bartlett 
mahler experience intermediate wrl research report february 
language machine description david wall michael powell 
experimental literature internet wrl research report august 
annotated bibliography jeffrey mogul 
packet filter efficient mechanism wrl research report august 
user level network code jeffrey mogul richard rashid michael measured capacity ethernet myths accetta 
reality wrl research report november 
david boggs jeffrey mogul christopher kent 
fragmentation considered harmful wrl research report september 
christopher kent jeffrey mogul 
wrl research report december 
visa protocols controlling inter organizational datagram flow extended description cache coherence distributed systems deborah estrin jeffrey mogul gene tsudik christopher kent 
anand 
wrl research report december 
wrl research report december 
register windows vs register allocation scheme portable scheme compiler david wall 
joel bartlett 
wrl research report december 
wrl research report january 
editing graphical objects procedural optimal group distribution carry skip representations adders paul 
silvio 
wrl research report november 
wrl research report february 
usenet cookbook experiment precise robotic paste dot dispensing electronic publication william 
brian reid 
wrl research report february 
wrl research report december 
operating system benchmarks simple flexible datagram access controls long address traces risc machines unix gateways generation analysis jeffrey mogul 
anita borg kessler georgia david wrl research report march 
wall 
wrl research report september 
nfs implementation performance cache consistency protocols link time code modification srinivasan jeffrey mogul 
david wall 
wrl research report may 
wrl research report september 
available instruction level parallelism superscalar machines norman jouppi david wall 
wrl research report july 
unified vector scalar floating point architecture norman jouppi jonathan david wall 
wrl research report july 
architectural organizational tradeoffs design cpu norman jouppi 
wrl research report july 
integration packaging plateaus processor performance norman jouppi 
wrl research report july 
mips sustained bit cmos microprocessor high ratio sustained peak performance norman jouppi jeffrey tang 
wrl research report july 
leaf netlist layout converter ecl gates robert norman jouppi 
wrl research report july 
distribution instruction level machine parallelism effect performance norman jouppi 
wrl research report july 
tcp ip print server protocol brian reid christopher kent 
wrl technical note tn september 
tcp ip server architecture implementation christopher kent 
wrl technical note tn november 
smart code stupid memory fast server dumb color frame buffer joel 
wrl technical note tn september 
aren operating systems getting faster fast hardware john ousterhout 
wrl technical note tn october 
copying garbage collection picks generations joel bartlett 
wrl technical note tn october 
operating system benchmarks wrl technical notes operating system benchmarks ii operating system benchmarks table contents 

hardware 
operating systems 
kernel entry exit 
context switching 
select 
block copy 
read file cache 
modified andrew benchmark 
open close 
create delete 

iii operating system benchmarks iv operating system benchmarks list tables table hardware platforms table getpid kernel call time table echo byte processes pipes 
table time select kernel call 
table throughput bcopy procedure large blocks 
table bandwidth reading file cache table modified andrew benchmark table modified andrew benchmark cont table time open close file table time create delete file 
