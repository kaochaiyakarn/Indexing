effective model theory number models complexity khoussainov cornell university ithaca ny university new zealand richard shore cornell university ithaca ny effective model theory studies model theoretic notions eye issues computability effectiveness 
consider possible starting points 
basic objects taken theories appropriate effective version investigates decidable theories set theorems computable decidable structures ones decidable theories 
objects initial interest typical mathematical structures starting point computable structures 
aspects effective model theory organized roughly themes number types models theories particular attention categoricity hypothesis analysis various computability issues families models 

basic notions lectures intended brief effective model theory centered set issues number primarily short course model theory second author asl summer meeting logic colloquium university leeds 
material authors invited talks special session asl annual meeting university california irvine usa discrete mathematics theoretical computer science logic conference victoria university wellington new zealand special session feasible mathematics ams annual meeting orlando usa annual meeting asl university wisconsin madison usa special session computable mathematics applications ams annual meeting baltimore january 
partially supported aro msi cornell university daal 
partially supported nsf dms dms int aro msi cornell university daal 
khoussainov richard shore models specified type particular notion categoricity 
general introductions refer reader handbook recursive algebra ershov especially articles ershov goncharov 
handbook contains useful survey papers aspects effective model theory algebra extensive bibliography 
closely related theme goncharov 
interesting survey millar handbook computability theory 
books progress subject ash knight 
sources material 
extensive useful bibliography prepared ershov 
question effective model theory 
course investigating subjects model theory eye questions effectiveness 
model theory mean effectiveness 
model theory simply quote standard texts refer reader terminology notation results classical model theory 
chang keisler say model theory branch mathematical logic deals connection formal language interpretations models hodges says model theory study construction classification structures specified classes structures take definitions expressing views proper subject model theory 
starts formal languages may say theories 
take theory simply set sentences order language called language say theory complete sentence second starts mathematical structures 
think views respectively logical algebraic 
lead basic dichotomy approach effective model theory 
theories structures 
course answer investigate approaches interconnections 
means effectiveness notions ranging ones computer science ones descriptive set theory claim versions effectiveness 
reasonably called analyze different model theoretic questions 
limit view primary notion effectiveness turing computability equivalently recursiveness 
lead formal definitions basic notions subject effective theories structures 
definition theory decidable theorems form computable set 
structure language underlying set domain decidable complete elementary diagram set sentences constant symbols element true com 
computable atomic sentences negations constant symbols element true computable 
atomic diagram set effective model theory number models complexity basic object interest starting point consists theories decidable theories natural effective objects study 
line standard model theoretic usage structure complete theory property said property decidable structures 
logical point view 
hand general mathematician usually starts structures 
point view effective objects computable structures 
thinks computable group thinks group structure group operation computable similarly typical algebraic structures 
certainly assume word problem complete diagram computable 
note deliberately avoiding issues coding del numbering 
common approaches issue 
eastern especially russian school favors 
starts classical structure provides enumeration map natural numbers underlying set structure enumerated structure called constructive appropriately coded atomic diagram constant symbols interpreted computable recursive 
strongly constructive complete diagram constant symbols interpreted computable 
notions essentially correspond call computable decidable structures respectively 
established western approach say elements natural numbers sets subsets functions functions view languages del numbered structures consist set numbers relations functions set 
formal definitions computable recursive subsets functions simply applied directly theories structures 
adopt viewed formal version second approach lines followed shoenfield think prevalent thinking writing computability 
considering issues raised theory enumerations see reason explicitly code objects numbers 
know effective computable mean numbers kinds data structures strings arrays arbitrary finite alphabets 
talk computable language del numbering computable theories types similarly computable structures lists names elements diagrams theories 
may may sets functions reader prefers explicit del numbering certainly able appropriate translations 
may times resort indices clarify certain uniformity issues 
interested issues related specifically refer reader ershov 
course notions effectiveness associated turing computability sense countable setting 
khoussainov richard shore languages sets structures assumed countable explicitly stated 
sets structures computable 
classically typically identifies isomorphic structures 
course eliminates issues effectiveness appropriate 
distinguish classically isomorphic models 
definitions presentations help distinctions 
definition structure computably presentable isomorphic computable decidable structure call computable decidable presentation launching theorems analyses examples decidable computable theories structures 
theories structures serve examples notions results consider 
proofs facts cite structures chang keisler 
example language linear orders binary cate consider theories dense linear orderings element discrete linear orderings element 
axiomatizable categorical countable models isomorphic complete decidable 
axiomatizable complete decidable categorical 
standard structures associated theories respectively natural orderings 
decidable 
categorical model remember considering countable structures isomorphic presentable 
effective quantifier elimination computable model decidable 
hand model computably presentable computable model decidable shall see example proposition 
see model computably presentable note cost couple jumps form quotient equivalence relation finitely far apart 
procedure produce arbitrary ordering element 
quotient ordering arithmetic original model computably 
example theory mention algebraically closed fields characteristic language field theory axiomatizable categorical models cardinality isomorphic complete decidable 
effective quantifier elimination computable model decidable 
categorical model presentable prove general theorem establishing fact theorem 
effective model theory number models complexity example briefly discuss peano arithmetic prefers suitable finitely axiomatized subtheory robinson 
language usual axioms 
course axiomatizable del incompleteness theorem complete decidable 
categorical compactness theorem provides nonstandard models isomorphic 
model decidable incompleteness theorem standard model computably presentable 
proposition nonstandard model robinson computably presentable 
proof sketch 
assume developed theory question say prove unique factorization primes standard universal partial computable function representable formula 
bother differentiate number numeral representing 
shows proves simple fact formula saying prime divides nonstandard model nonstandard element element guaranteed 
define function clearly computable atomic diagram searching element 
exist 
clearly computable 
diagonally noncomputable computably presentable 

effective completeness theorem common theme model theory investigation questions theories models specified properties 
typical examples include characterizing theories atomic prime universal homogeneous saturated models 
questions involve models various ranks dimension attempts characterize models theory 
effective model theory naturally wants know theories decidable computable models type attempt characterize decidable computable models theory 
investigate examples questions 
issue theory model del completeness theorem 
theorem completeness theorem theory consistent model 
effective analog completeness theorem decidable theories proof modeled henkin proof classical completeness khoussainov richard shore theorem 
method construction simple basic results classical effective model theory see variants 
theorem effective completeness theorem theory consistent decidable decidable model 
proof 
assume classical henkin construction known provide sketch check effective content 
language extended infinitely new constants computable list sentences construct increasing sequence finite sets sentences consistent union henkin proof completeness theorem 
need satisfy requirements form construction stage ask consistent put put consistent put verifications obviously complete standard argument shows consistent 
usual elements desired model equivalence classes equivalence relation iff relations functions determined natural way formulas issue effectiveness construction 
note verify decidable computable 
question answer stage inconsistent equivalent new free variables substituted constants appearing theorem decidable answer questions computable function equivalence relation computable 
just look equivalence classes form computable set domain relations functions determined usual sentence true decidable required 
theme effective model theory pursue investigates question hard say terms turing degree levels hyper arithmetic hierarchy construct models type possible produce decidable computable ones 
consider completeness theorem example 
construction step deciding consistent answer question computably turing jump consistent theory model computable decidable effective model theory number models complexity corollary consistent model elementary theory computable 
low basis theorem proof 
assertion follows immediately construction discussion 
second single build binary tree choices henkin axioms appropriate 
terminate path inconsistent find proof inconsistency produces infinite binary tree computable particular constructed infinite path tree 
low basis theorem jockusch soare says infinite path tree construct desired model complete diagram computably required 
sake convenience assume theories con sistent 
say sense theory decidable model 
corollary complete theory decidable model decidable 
arbitrary theory decidable model decidable complete extension 
proof 
model complete set theorems simply intersection sentences language decidable decidable 
complete decidable model set decidable complete extension direction assertions corollary follow theorem 
general assume theories complete 
finite models little interest viewpoint turing computability 
assume theories infinite models 
know theory decidable model ask decidable models theory 
identify models classical isomorphisms better ask presentable models theory 
issues identifying computable models computable isomorphism taken 
incomplete decidable complete extension decidable model theorem course models distinct extensions isomorphic 
decidable model model complete decidable extension interested number presentable models theory suffices consider complete decidable khoussainov richard shore 
possibility example decidable categorical theory 
proposition theory categorical conditions equivalent 
decidable 

decidable model 

models presentable 
proof 
categoricity implies completeness equivalences follow directly hypothesis definitions theorem 
remarkable classical theorem due complete theory exactly isomorphism types models 
effective analog decidable models false 
theorem millar decidable theory exactly isomorphism types presentable models 
proof sketch 
partial computable function range total computable extension 
consider computably enumerable computably inseparable sets effective approximation language contains infinitely unary binary predicates set statements respectively 



consider theory axioms check properties hold 
decidable model completion unique type definition 
model elements realizing presentable 

model presentable 
fewer elements realizing 
models finite number elements realizing isomorphic 
properties show exactly presentable models 
effective model theory number models complexity proof easily generalized corollary exists theory exactly nonisomorphic decidable models 
examples analysis structure models chang keisler easily implies countably distinct decidable models 
true shall see theorem 
natural effective version theorem fails proof properly give similar result decidable models theorem 
need study aspect question decidable models theory classically studied types models prime atomic saturated models decidable theory presentable 

decidable prime models study specific types models prime atomic models 
play crucial role sections 
definition type theory set formulas free variables language consistent belongs formula 
type theory principal formula case say complete formula generates definition model theory language prime model elementarily embedded model atomic tuple elements satisfies complete formula 
models unique isomorphism exists 
notions prime atomic coincide countable models motivate characterization decidable prime models classical characterizations 
theorem complete theory language prime model formula consistent member principal type theorem complete theory language atomic model formula consistent extended complete formula 
notions atomic prime coincide countable models theorems provides characterization theories prime models 
khoussainov richard shore consider appropriate effective versions theorems 
direction note type realized prime model principal principal types realized model decidable prime model formula consistent member principal type uniformly computable list principal types ones realized decidable prime model 
classical theorems glance suggest condition sufficient 
list computable types construct model 
additional possible uniformity suggested classical characterization 
characterization prime models suggests need able go uniformly effectively formulas indices principal types containing 
characterization atomic models suggests need able go uniformly effectively formulas generating formulas principal types containing 
classical versions equivalent effective versions 
clearly necessary formula consistent decidable prime model computably find tuple elements satisfying set formulas satisfied tuple computable principal type containing turns condition sufficient 
second condition clearly implies sufficient turns necessary 
theorem harrington goncharov complete decidable theory decidable prime model computable function formula index computable principal type containing 
proof 
construct desired model priority argument reminiscent sacks splitting theorem computably enumerable sets producing henkin construction restricts types realized principal ones 
list formulas language extended new constants construct stages sequence finite sets sentences consistent union proof theorem 
stage construction principal type containing formula goal satisfy requirements theorem new ones guarantee model constructed prime making sure principal types realized 
satisfy making sure eventually constant satisfies principal type 
denote equivalence class model built constants theorem form effective model theory number models complexity realizes principal type construction stage consistent put suppose put complete type consistent problem adding form may member var ious numbers force change choice type realized view injury require ment requires eventually stabilize 
sacks splitting theorem act minimize priority requirement injured 
precisely 
exists redefine uniformly computable list principal types contains put put unused clearly require change defined 
verifications decidable types list uniformly computable construction clearly computable 
clearly satisfy requirements construct decidable model theorem 
sentences involving put stage belong principal type show exists say shown realizes principal type required guarantee prime model prove induction stage suppose exists 
need show greater sufficiently large definition choice construction generator principal stage added claim consider way consistent complete mean khoussainov richard shore respectively inconsistent assumption 
required stage contrary finish section alternative version theorem remarks various uniformity conditions 
corollary complete decidable theory decidable prime model prime model set principal types uniformly computable 
proof 
direction corollary clearly implied theorem 
suppose prime model set principal types uniformly computable 
prime model formula member principal type search set containing terminates provides computable function required theorem 
effective uniformity listing computable principal types necessary explicit hypothesis theorem millar complete decidable theory types computable prime model decidable computable 
show possible alternate version theorem asks computable way go formula completion false uniformly atomic stronger uniformly prime decidable categorical theories 
proposition complete decidable decidable prime model computable function formulas complete extensions 
categorical theory proof 
language infinitely unary predicates axioms say cardinality exactly disjoint distinct designated triples consists element distinct designated triples entry common 
actual list axioms determined list designated triples 
list defined recursively diagonalize possible computable partial function candidate function formulas complete extensions 
axiomatizable 
categorical 
part model consisting elements uniquely determined axioms 
rest just consists elements complete decidable 
effective model theory number models complexity list designated triples effectively enumerated increasing order computable waiting diagonalize formula converges stage choose larger number mentioned designate triple particular generating formula implies mention claim prove implies implies function formulas complete extensions 
see information implied consider theory gotten restricting language predicate clearly categorical consistent model element realizing element elements 
disjoint construction 
easily expand model interpreting imply 
saturated models number decidable models definition model theory language saturated model realizes type finitely parameters 
exists saturated model unique 
characterization decidable theories decidable saturated models somewhat easier prime ones 
theorem morley millar goncharov decidable theory decidable saturated model types uniformly computable 
proof sketch 
decidable saturated model types uniformly computable simply list tuples set formulas satisfies 
direction uniformly computable list types effective henkin construction 
construction proceeds designate new constants realize potential type previously introduced constants 
potential types new constants uniformly computably restrictions subset free variable ones list procedure effectively organized 
roughly speaking plan continue designated constants realize appropriate type inconsistency reached 
check inconsistencies previously assigned types uniformly computable 
priority ordering guarantee despite need cancel attempts realizing certain potential types actual type constants introduced fact realized 
model constructed saturated required 
khoussainov richard shore millar explicit assumption uniformity necessary assumes decidable theory saturated model types computable 
millar suggests proof results modified show connection decidability saturated prime models exist 
show fact decidable saturated model decidable prime model 
proposition ershov see goncharov theorem complete theory decidable saturated model decidable prime model 
proof 
decidable model decidable corollary 
decidable saturated model theorem gives uniformly computable list types theorem suffices prove formula consistent go effectively principal type containing type list containing proceed recursively define type containing extend list formulas number free variables ask find clear sequence consistent respectively 
larger defined accordingly 
nondecreasing step construction take larger 
procedure effective generates computable type containing eventually constant type equal contradiction 
stabilized say define finitely stages time extend eliminate possible consideration 
eventually stabilizes say clear required principal type containing see proof theorem complete theory exactly models gives 
corollary complete model decidable models 
generates type categorical theory decidable sat proof 
decidable saturated model proposition categorical decidable saturated decidable prime model model prime model isomorphic 
realizes computable type clearly expanded saturated model properly interpreting constants decidable saturated model decidable prime model proposition 
course restriction decidable model proof theorem chang keisler theorem model isomorphic effective model theory number models complexity hand decidable theory decidable prime model decidable saturated model infinitely decidable prime models 
see quote simple case millar effective omitting types theorem 
theorem millar decidable theory finite set computable types decidable model omitting realizing corollary decidable theory decidable prime model infinitely decidable models 
proof 
theorem decidable model prime model realizes type theorem decidable model omitting prime realizes type distinct construction 
get decidable omitting continuing way get infinite sequence computable types decidable nonisomorphic models required 
realizes variation question decidable models decidable theory asks model presentable 
obvious necessary condition types computable 
type realized model computable types realized decidable model 
particular countably types 
condition sufficient problem remains open general 
couple partial answers 
answer simple categorical theories supplied proposition 
result categorical theories turn 

categorical theories theory categorical complete categorical baldwin theorem supplies full classification models terms defined notion dimension 
countably models arranged liner order type respect elementary embedding ascending increasing dimension model dimension zero prime model unique model infinite dimension saturated model model model dimension classic example categorical theory dimension model transcendence degree prime field khoussainov richard shore prime model algebraic closure saturated model algebraic closure rationals extended infinitely transcendental elements 
algebraic closure extended 
general problem wish address question categorical theory models computably presentable 
decidable models categorical theories course categorical complete decidable model decidable theorem 
decidability guarantee model presentable theorem harrington categorical decidable model presentable 
proof 
results baldwin show reduce problem existence decidable prime models decidable theory 
model theoretic facts cite proof baldwin 
categorical principal type new constants strongly minimal formula formula language expanded new constants model formula exactly finite 
course categorical 
note decidable principal decidable generator 
models extended ones assume proof theorem strongly minimal formula model categorical theory strongly minimal formula prime model extension constants satisfying type says holds algebraically inde pendent formula 
fact cardinality set dimension model uniquely determines 
clearly categorical 
verify decidable ber corresponding types computable 
prove induction num uniformly decidable 
complete definition 
consider theories formula model exactly finite strong minimality compactness effective model theory number models complexity decidable search find decidable models precisely prime models theories 
prove theorem suffices show theories decidable prime model 
theorem suffices show decidable categorical theory strongly minimal formula computable function formula computable principal type containing construct computable type stages starting adding turn consistent put far add algebraic course consistent far add point consistent far formula gotten adding realized prime model say model algebraic realizations element witnessed algebraic satisfies algebraic formula consistently added desired 
claim principal required consider prime model prime model realizes principal type generated say algebraic formula hand construction contradiction 
algebraic solutions model dimension prime model realized principal required 
argument attributed harrington 
harrington proof instructive 
begins observation function formula rank defined baldwin seen computable map formulas arguments 
formula consistent may computably define type contain preserve ing putting turn consistency reduce rank possible 
eventually rank stabilize produce principal type containing computable models turn question models categorical categorical theory computably presentable find theory computable models coding noncomputable set decidable 
easy khoussainov richard shore model 
example extend acf adding new unary predicates models known 
axioms question computable decidable model computable 
facts theorem goncharov categorical categorical theory computably presentable proof 
fix language required theory consist unary predicate ary predicate axioms code computably enumerable computable set model dimension greater maintaining possibility models dimension equal computably presentable 
axioms nested downward respect exactly element drops axioms wish require enforce requirement axioms verifications easy see cardinality isomorphism type model models size elements dimension uniquely determines categorical 
cardinality claim model computably presentable fewer distinct elements direction suppose distinct case computably presentable computable 
direction wish construct computable model elements desired model natural numbers put computably define predicates elements distinct elements effectively find smallest effective model theory number models complexity hold clearly defines computable model required 
initial segment models computably presentable ones 
obvious questions arise possible 
question subsets set computably presentable models categorical categorical theory computable model 
particular prime model computably presentable 
saturated model computably presentable 
theorem answers specific questions asked 
instances general question open 
theorem khoussainov shore categorical categorical theories models prime computably presentable 
ii models saturated computably presentable 
proof 
construct structure signature binary predicate symbol having properties theory structure categorical prime model model computable presentation computable prime model provides certain recursion theoretic property exists set property 
building blocks structures finite structures call cubes define induction definition cube structure holds disjoint cubes get cube expansion union letting isomorphism cubes 
cube increasing union cubes signature definition disjoint union cubes lemma infinite categorical model cubes prime model 
proof 
easy see model satisfies conditions expressible set axioms language khoussainov richard shore 
defines partial function 
abuse notation denoting partial function 

defined defined 

defined 

exists exactly cube contained cube 
model satisfies statements 
cube contained cube 
belong cube cube 
models satisfy list axioms isomorphic number cubes 
particular models cardinality cubes cube countable 
isomorphic categorical theory 
clear prime model cubes 
lemma model computably presentable proof 
model computably presentable di note suffices construct computable model cube 
computably add cubes desired 
build putting cube representation fails merge cube cube building 
formally stage start build substructure cube stage construction cube 
stage put cube associate cube number associated merge existing cubes fails currently associated cube larger number construction 
clearly substructure cube cube final structure required 
witness witness provide recursion theoretic property guaranteed existence computable prime model models computably presentable 
effective model theory number models complexity definition function monotonic exists computable function exists lemma prime model computably presentable range monotonic function 
proof 
suppose computable prime model define largest holds clear monotonic cube equal sufficiently large lemma exists set range monotonic function 
proof 
list candidates representations monotonic functions stage define finite set exists 
satisfy requirements guarantee range monotonic func tion 
strategy satisfy single works follows stage pick witness enumerate set 
satisfied remains stage find ensures keeping conflict lower priority requirement case point number prevents candidate restriction transitory monotonic candidate eventually released prevented chosen final value lower priority eventually able choose witness change actions way requirement satisfied typical finite injury priority argument 
proof sketch 
take set defined 
computable predicate code computable structure unary predicates predicates arity relevant properties guaranteed axioms language follows form descending chain sets element dropping khoussainov richard shore code approximation requiring distinct holds 
particular axioms saying hold theory categorical dimension model determined cardinality intuition elements model approximation recover diagram particular saturated model infinite saturated model computably presentable 
nonuniformly build computable model elements information needed holds 
theorems subsection computable models categorical theories infinite signatures 
known existence structures theories finite signatures ones extensions standard algebraic theories 
interesting example ziegler established theorem extension theory groups standard signature 

computable dimension categoricity taken classical approach identifying models classical isomorphism 
obvious computable decidable models happen isomorphic identified interested effective procedures 
shall see structures presentations presentations different effective properties 
example computable presentations successor function computable 
proposition computable presentation successor function computable 
proof 
consist numbers usual order plus infinite set odd numbers determined placed ordering procedure designed guarantee computable function successor function stage check converged stage equal put place obvious computable successor effective model theory number models complexity natural approach issue raised examples identify structures presentations computable isomorphism 
course sense structures computable 
definition computably isomorphic com isomorphism 
say computable isomorphism type 
henceforth structures computable 
definition computable dimension structure number computable isomorphism types 
computably categorical computable dimension isomorphic computably isomorphic note computably categorical structure definable relation computable presentation computable presentation structures effectiveness definable properties independent presentation 
example rationals usual linear order computably categorical standard back forth argument showing theory dense linear orderings endpoints countably categorical effective produces computable isomorphisms orderings 
example model structure successor function language arithmetic computably categorical isomorphic defines required computable recursion 
element defined computably categorical 
successor function easy see proposition computable isomorphism proposition computable successor function example finitely generated structure computably categorical natural generalization preceding argument example algebraic closure rationals prime model computably categorical countable saturated model algebraic closure rationals extended infinitely computable dimension corollary 
examples dimension possible 
theorem goncharov structure dimension khoussainov richard shore goncharov uses priority argument construct families uniformly computably enumerable sets precise sense exactly distinct enumerations codes structures preserve dimension 
see approaches results theorem corollary 
interesting codings families familiar types mathematics structures groups rings see know natural structures dimension classes structures possible prove computably categorical dimension cases possible characterize structures computably categorical 
theorem goncharov remmel goncharov boolean algebra computably categorical finitely atoms 
dimension theorem remmel goncharov linear order computably categorical finitely pairs adjacent elements 
dimension deduce similar result algebraically closed fields general theorem computable categoricity decidable presentations structure 
theorem suppose decidable structure 
finitely elements prime model theory set complete formulas theory computable decidable presentations computably isomorphic 
hand infinitely decidable presentations computably isomorphic 
corollary nerode algebraically closed field finite transcendence degree prime field computably categorical 
infinite transcendence degree dimension proof 
theory algebraically closed fields characteristic quantifier elimination computable model decidable 
sentence quantifiers expanded language constants elements find quantifier free equivalent 
truth decided computability categorical model prime model computable principal type providing theory strongly minimal formula type sequence independent elements described proof theorem 
particular needed strongly minimal 
sequence finite transcendence degree prime field finite 
particular transcendence degree infinite finite sequence required effective model theory number models complexity infinite computable dimension 
hand sequence finite effectively decide formula atom 
proof theorem go effectively computable principal type containing particular theory enumerate complete formulas 
characteristic just say ordering turn satisfies irreducible polynomial previous ones 
find generating formula ask complete 
nerode give direct proof corollary 
important program characterize classify computably categorical structures theories models computably categorical 
major success lines characterization goncharov computably categorical structures quantifier theory decidable terms scott families 
definition scott family structure computable sequence formulas prenex ones existential quantifiers satisfiable finite tuple elements tuple elements satisfies formulas tuples satisfying formula sequence interchanged automorphism definition structure sentences example existential universal quantifiers decidable 
decidable set prenex alternations quantifiers computable 
decidable set prenex sentences proposition structure scott family 
computably cate proof 
scott family computable presentations define mapping stages 
assume element corresponding constant stages define images elements odd stages define preimages elements stage 
set stage 
suppose function defined 
assume extended isomorphism number domain consider tuple find holds holds find holds 
extend letting khoussainov richard shore stage 
define similarly put element range clearly computable isomorphism 
theorem goncharov decidable computably categorical scott family 
course direction theorem follows preceding proposition 
direction uses priority argument build isomorphism attempts sure isomorphism attempts fails construction builds scott family 
see ash knight details ingenious relatively simple proof 
note definition computable categoricity face prop erty 
theorem gives equivalent having scott family 
property having scott family easily seen arithmetic requirement isomorphism replaced existence set finite partial isomorphisms back forth property 
decidable structures theorem gives characterization significantly simpler underlying definition computable categoricity 
turn specific issue persistence computable categoricity expansions constants turn route various results examples sorts listed 
particular lead proof existence scott family necessary computable categoricity 
persistence computable categoricity classically easy consequence theorem having countably categorical theory persistent preserved expansions finitely constants 
theorem theory structure countably categorical theory expansion finitely constants 
natural question computable categoricity considered millar goncharov 
posed millar goncharov problem ershov goncharov question millar goncharov computable categoricity persistent computably categorical expansion finitely con 
hard see structure scott family expansion finitely constants 
simply slightly modify original scott family 
essentially replaces formula effective model theory number models complexity lists satis fied formulas 
easily check sequence scott family expanded structure theorem gives answer decidable 
corollary goncharov finitely constants computably categorical 
decidable expansion millar improved result quantifier quite different proof 
roughly speaking suffices able solve systems equalities inequalities 
theorem millar finitely constants computably categorical 
proof 
suppose decidable expansion isomorphic computably cat decidable build henkin construction sequence partial isomorphisms partial map potential isomorphism total isomorphism exists isomorphism iso morphism second alternative contradicts hypothesis desired computable isomorphism computably cat construction act guarantee isomorphism worry 
requirement isomorphism construction proceeds say satisfied depending certain type witness isomorphism convenience assume domain model considered effective list atomic sentences language expanded adding constant mean respectively 
conjunction literals containing constant partial computable function computable domain denote formula example sentence hand note immediate consequences definition 
follows khoussainov richard shore proposition 
extension 
extension domain 

sequences natural numbers 

suppose total surjective literal total computable identity describe construction 
construction 
stage define partial functions computable construct atomic diagram adding literals stage notations conjunction literals stage number exists say stage injective 
infinitely stages assume induction stage find satisfied conditions holds 
total injective surjective 


stage 

exists say active stage declare effective model theory number models complexity unsatisfied 
holds abandon current attempt isomorphism holds witness fact isomorphism declare satisfied 
holds cases 
restart definition assumed isomorphism find tuple distinct numbers define partial function mapping 

define manner 
tuple exists satisfied extend keep looking isomorphisms 
number number larger previously appearing construction de fine odd number exists case continue extend diagram isomorphism add number number larger previously appearing construction odd number set notice whichever case holds induction hypotheses needed stage construction 
verifications 
stage added negation atomic diagram structure decidable construction effective computable 
suppose active infinitely number 
wish show desired computable isomorphism stage active follows definition exists active infinitely satisfied stage condition holds stage 
stage follows definition exists khoussainov richard shore isomorphism claim possible condition hold infinitely 
suppose 
inspecting way defined case holds tuple 

see tuple exists suppose stage condition holds condition 
hand extension part condition proposition exists contrary assumption 
condition holds finitely 
say holds stage condition holds infinitely infinitely stages 
satisfied computable isomorphism furthermore computable isomorphism defined fact defined 
computable isomorphism suppose sake contradiction active finitely 
hard see stage conditions hold 
infinitely stages eventually permanently satisfied 
mentioned stage computable isomorphism fact desired active stage fact active finitely implies exists isomorphism isomorphic computably isomorphic contradicting computable categoricity decidability suffices guarantee persistence computable categoricity 
see section assumption computable categoricity need persistent 
equivalence computable categoricity having scott family established goncharov assumption decidability hold decidable structures theorem 
effective model theory number models complexity computable categoricity see addition single constant element computably categorical structure change dimension 
theorem goncharov khoussainov shore computably categorical expansion gotten adding constant naming element dimension exactly idea proof 
construct uniformly computably able family distinct pairs sets symmetric addition computable enumeration natural computable enumeration family defined family constructed type priority argument dimension sense computable function computable enumeration family computable function metrically graph structure computably categorical 
adds constant distinguishes coded enumerations structure dimension enumerations family coded sym generalize notion symmetric family enumerations families tuples sets 
combinatorial details fairly complicated 
simpler approach proof general theorem provided section corollary results degree spectra 

degree spectra relations important topic computable model theory turns closely connected computable categoricity dependence computability properties relations included language structure presentation 
example standard presentations successor function computable computable presentation proposition 
similarly standard presentations algebraically closed field characteristic infinite transcendence degree relation algebraic dependence computable presentations 
algebraic dependence computable isomorphic computable algebraically closed fields computably isomorphic 
corollary says infinite transcendence degree dimension infinite 
hand particular relations easily seen computably enumerable computably enumerable respectively 
remain computable computably enumerable presentation 
relations singled studied ash nerode 
khoussainov richard shore definition ash nerode ary relation structure intrinsically computable computably enumerable computable computably enumerable isomorphism example successor intrinsically computable 
example computable relation intrinsically computable 
know structures discussed computably categorical similar ones algebraically closed extension finite transcendence degree computably categorical phenomena relation computable presentation arise 
naturally ask computable categoricity guarantees relation computable presentation computable 
answer 
restrict attention relations definable invariant automorphisms answer 
proposition structure computably categorical definable relation invariant automorphisms computable presentation intrinsically computable computable presentation proof 
suppose morphism computably categorical computable isomorphism computably categorical computable iso wish show computable 
computable images computably enumerable complementary computable 
invariant automorphisms particular computable 
computably categorical structures effectiveness definable properties independent presentation 
ask computable relation definable intrinsically computable answer question 
computable categoricity suffice guarantee computable relation intrinsically computable 
see example 
led stronger notion 
definition 
computably stable isomorphism com example computably stable 
isomorphism presentations uniquely determined computable procedure sending element presentation proceeding recursion example 
example fact presentations computably categorical computably stable 
usual back forth argument effective model theory number models complexity shows continuum isomorphisms 
usual back forth argument run countably intervals example construct automorphism computable subset noncomputable set consisting element interval 
proposition ash nerode computably stable computable relation intrinsically computable 
proof 
isomorphism presentations computable argument proposition shows image computable relation isomorphism computable 
direction consider structure set relation giving successor function isomorphism computable construction example computes fact give informative characterization computable stability provided computable categoricity terms scott families theorem 
place sequence formulas determines sequence elements structure automorphisms needs sequence formulas uniquely define elements hand need decidability characterization 
theorem ash nerode goncharov decidable computably stable constants com existential formulas sequence unique satisfying satisfies proof sketch 
easy see existence family described insures isomorphism computable image con fixed send unique solution solution formula proof direction theorem involves finite injury priority argument 
attempts build isomorphic isomorphism computable isomorphism 
failure diagonalization requirement occurs elements diagonalize uniquely defined fixed higher priority requirements 
fixed elements constants required 
portions diagram committed various stages construction provide desired formulas various extra parameters replaced existentially quantified variables 
generally know specified computable computably enumerable relation intrinsically computable computably gives clue relation intrinsically relation saying able 
examination examples considered khoussainov richard shore immediate successor definable structure existential formula computably enumerable presentation binary relation saying algebraically dependent equivalent disjunction infinite computable list existential formulas asserting language fields nonzero polynomial degree equals relation clearly computably enumerable presentation field 
enumerate dependent pairs simply searches witnesses existential formulas phenomena suggest definition 
definition relation structure formally computably enumerable equivalent disjunction computable sequence existential formulas free variables formally computable formally computably enumerable 
clearly formally computable computably enumerable relation intrinsically computable computably enumerable 
ash nerode prove mild decidability conditions condition necessary 
theorem ash nerode decidable intrinsically computably enumerable formally computably enumerable 
intrinsically computable formally computable 
decidability bit stronger ash nerode need 
need able decide tial conditions necessary goncharov manasse constructed examples intrinsically relations formally lot primarily ash ash knight students generalizing results stronger decidability conditions syntactic characterizations relations intrinsically levels hierarchy 
provide similar generalizations notions results computable categoricity stability higher levels hierarchy computable infinitary formulas 
papers include ash ash knight barker chisholm 
related results notions relativized degree noncomputable models ash knight manasse ash knight chisholm 
results proven forcing arguments extra decidability hypotheses needed 
faced computable relation intrinsically computable say image isomorphisms 
particular complicated computable relation arbitrary isomorphism computable course 
approach question suggested definition 
effective model theory number models complexity definition ary relation degree spectrum isomorphism number results giving conditions degree spectrum computable relation consists precisely particular standard class degrees degrees degrees concentrate issue finding instances spectrum finite connections issue dimension structure 
results sort due 
example 
theorem ex noncomputable computable presentations problem remained open time replaced result generally possible intrinsically relations especially structures finite dimension 
goncharov announced solution khoussainov constructing structure dimension relation degree spectrum consisting nonzero constructs families sets codes structure 
khoussainov shore independently directly constructed directed graphs finite dimension relations having various degree spectra 
structures simply modified provide examples ones computably categorical expanded constant dimension state main result dimension 
theorem khoussainov shore rigid directed graph nontrivial automorphisms dimension subset noncomputable extends map isomorphism relation computable 
sketch proof theorem 
give generalizations corollaries 
theorem khoussainov shore computable partially ordered set rigid directed graph dimension cardinality subset 
ordering turing reducibility 
guarantee computable presentation element element 
uniformly computable sequence representatives computable isomorphism types relation isomorphism computable 
extends map khoussainov richard shore corollary natural number exists computably categorical structure expansion finitely constants exactly computable isomorphism types 
proof 
take structure theorem partial order consisting incomparable elements 
computable representatives computable isomorphism types particular sets turing incomparable 
computability paste produce required 
precisely consists disjoint union edges ones addition extra binary predicate defined relation theorem equivalence relation equivalence classes clearly computable structure 
computable presentation equivalence classes substructures considered graphs isomorphic computably isomorphic loss generality suppose computably isomorphic computable function computably isomorphic computable function able decide follows belongs structures pairwise isomorphic represent computable isomorphism types computably isomorphic order 
clearly computably isomorphic computably categorical 
element consider expanded structures consisting new constant interpreted image clear isomorphic computably 
dimension hand rigid choices interpretation computable categoricity structure isomorphic say computably isomorphic dimension structures precisely required 
corollary khoussainov shore exists computably categorical structure scott family 
proof 
structure previous corollary scott family remain computably categorical constants added 
similar construction provides example showing structure persistently computably categorical need scott family 
theorem khoussainov shore exists structure scott family expansion structure finite number constants computably categorical 
independently proved 
effective model theory number models complexity theorem computably categorical decidable structure scott family 
proof sketch 
slightly modifies family computable enumerations constructed codes family unary algebra way produce computably categorical structure decidable existential theory scott family 
course theorem shows assumption decidability necessary goncharov characterization theorem computably categorical structures ones scott families 
millar result persistence theorem structure persistently computably categorical witness theorem 
natural question degree realized degree spectrum 
answered question adapting extending methods 
theorem degree relation replaced uniformly array degrees 
construction precisely controls degree spectrum relation control dimension question open 
question goncharov khoussainov tuples degrees realized degree spectrum relation structure dimension move degrees results possible degree spectra known 
point natural strengthenings results ruled classical descriptive set theoretic results 
relation computable structure set computable presentation countable partial orderings realized degrees degree spectrum relation computable structure 
just consider cated similarly partial ordering element realized turing degrees degree spectrum computable relation computable structure true finite set degrees realized degree spectrum relation com structure degree spectrum containing degree degree uncountable set member uncountable 
khoussainov richard shore 
algebraic examples saw examples theories models dimension algebraic conditions characterizing models class 
theories sort considered linear orderings boolean algebras algebraically closed fields 
cite 
theorem real closed field finite transcendence degree computably stable 
infinite transcendence degree dimension proof 
real closed field finite transcendence degree isomorphism transcendence basis image calculate element finding equation satisfied find solutions place solutions order solution equation lies place solutions listed order 
computable 
hand infinite transcendence degree theorem dimension 
note theory real closed fields effective quantifier elimination computable model decidable 
prime model finite list elements finite transcendence degree 
theorem goncharov abelian group dimension proof result particularly interesting relies important sufficient condition structure dimension theorem goncharov isomorphism computable dimension hand results described earlier papers supply examples structures dimension results supply examples structures dimension presentations characterized turing degree specific relation structure 
representatives computable isomorphism types structures pasted produce single computably categorical structure expansion constants yields structure dimension course characterization theorems show dimension constructions possible 
hand familiar algebraic theories provide dichotomy characterization possible construct examples models finite dimension ones exhibiting additional properties enjoyed examples 
effective model theory number models complexity theorem goncharov goncharov goncharov personal communication khoussainov shore theories model subset dimension degree spectrum consists different degrees 
model computably categorical expansion constants dimension graphs lattices partial orders nilpotent groups rings zero divisors integral domains 
case subset taken substructure appropriate type 
results existence models theories finite dimension due various people goncharov coauthors integral domains due 
typically proved codings families sets 
graphs results involving degree spectra extensions constants due khoussainov shore described 
original directed graphs examination construction shows possible undirected graphs 
ones involving degree spectra extensions constants proven khoussainov shore 
direct constructions possible results derived results graphs finding sufficiently effective coding graphs models theory 
idea coding sufficiently effective computability properties involved carry 
theories undecidable codings say graphs needed prove universal code predicate logic highly effective 
addition simple codings domain edge relation initial graph important issue effective reversibility coding 
wants model coding graph effectively determine original graph 
hand theories discussed models computably categorical dimension decidable strong structure theorems proofs 
expect natural theories decidable undecidable ones theorem 
particular suggest theory fields test case undecidable proofs undecidability know interpret specific way arbitrary structures 

basic theorem degree spectra section sketch proof theorem case main theorem degree spectra 
theorem khoussainov shore rigid directed graph dimension computable computably isomorphic presentations subset noncomputable khoussainov richard shore relation isomorphism extends map computable 
proof sketch 
directed graph consist disjoint components special type 
graph denote uniquely determined set consists cycle cycle addition element cycle called top graph edge element cycle element cycle called coding location convenience denote build graph operations sum graphs simply disjoint union 
product graphs special form gotten disjoint copies identifying top elements associated cycles graphs 
example note plan construct graph enumerations sets guarantee 
clearly rigid 
required subset coding points enumerate presentations isomorphic interpretations computably enumerable computable construction proceeds enumerate elements set enumerated noncomputable standard diagonalization procedure 
computable enumerate number sure corresponding element new large number 
enumerated increasing order 
computable procedure alluded choosing corresponding pairs enumerated increasing order 
guaranteed previous requirements computable 
rigidity isomorphism take computable preserve computability interpretation computable presentation computably isomorphic plan define maps stage construction looks isomorphic monomorphism stage extend current map switch monomorphism stage switch potential isomorphism fact desired computable isomorphism effective model theory number models complexity hand switch infinitely guarantee special component component isomorphic crucial idea needed construction diagonalize noncomputable isomorphic image remains computable maintain control potential isomorphisms diagonalization procedure symmetric operations left right sequences graphs definition graph graph apply operation example graph components clude removing inserting adopt convention elements component ones corresponding subgraph component elements new graph corresponding ones original graph new elements 
convention important establishing computability properties graphs constructed 
apply operation construction 
corresponding convention ele ones corresponding graph apply ments component component elements new graph corresponding ones original graph new elements 
lemma immediate definitions 
lemma sequence graphs isomorphic extend components replacing sum produces isomorphic graphs extending plan diagonalization easily described 
sure choose numbers insert copies definiteness say number coding location graphs 
wait converge win converges stage replace components respectively put crucial point conventions image element image khoussainov richard shore new large number 
diagonalize keep computable 
remaining issue simultaneously satisfy requirements isomorphic computably isomorphic consider requirement single idea described choose special component image participate infinitely left right operations done 
definition stage measures extent possible isomorphism finitely stages isomorphic actions necessary 
suppose infinitely stages 
stage monomorphism components corresponding special component wish diagonalize coding location range wait stage perform operations respectively sequence numbers chosen advance requirement sets participated locations previous operation case components range perform operations 
suppose mapped crucial point get stage possible extend keep mapped possible extend map key idea component original sequence grow components final immediately left right depending 
image components remains fixed see reverse order operation performed component turn remains fixed place go 
case extend mapping possible keep mapped change define map means component kept fixed 
component depending specifics situation 
guarantee old component operation 
ultimate consequence procedure change range infinitely infinite component potential image involved finitely operations finite 
case isomorphic hand isomorphic keep extending stage changing maps case arrange definition eventually maps determines required computable isomorphism course omitted combinatorics particularly way extend domain case requirement 
effective model theory number models complexity full construction consists module sort requirement typical priority tree 
course precise actions diagonalization requirement node special components go sequence operations performed order go list depend outcome nodes higher priority contained devoted various 
choices infinitely stages range fixed point change infinitely 
details khoussainov shore 
take opportunity point corrections details general construction khoussainov shore 
applies considers application operation node sequence form transform defined sequence list order designated isomorphism list order designated isomorphism second concerns marking numbers symbols numbers marked case construction 
result condition subcase weakened requiring image nonempty intersection designated isomorphism designated isomorphism marking take place stage construction follows stage additional cancelation marking 
suppose recovery stage 
components isomorphic necessarily participated operation cancel appoint new ones respectively 
mark marked 
cancelled component 

component associated node left 
component form 
components form 
components form 
components form designated isomorphism form designated isomorphism khoussainov richard shore 
performed operation transform sequence mark previously participated operation mark designated isomorphism mark designated isomorphism mark changes needed verifications take advantage corrections straightforward 
complete corrected version math cornell edu shore 
bibliography ash recursive labeling systems stability recursive structures degrees trans 
amer 
math 
soc 

ash stability recursive structures arithmetical degrees ann 
pure appl 
logic 
ash categoricity degrees ann 
pure appl 
logic 
ash knight permitting forcing copying recursive relation ann 
pure appl 
logic 
ash knight pairs recursive structures ann 
pure appl 
logic 
ash knight completeness theorem certain classes recursively infinitary formulas math 
logic quart 

ash knight possible degrees recursive copies ann 
pure appl 
logic 
ash knight possible degrees recursive copies ii ann 
pure appl 
logic 
ash knight computable structures hierarchy preparation 
ash knight manasse generic copies countable structures ann 
pure appl 
logic 
ash knight relatively recursive expansions 
ii fund 
math 

ash nerode intrinsically recursive relations aspects effective algebra clayton upside book glen vic 
baldwin finite categorical trans 

effective model theory number models complexity baldwin strongly minimal sets symbolic logic 
barker intrinsically relations ann 
pure appl 
logic 
chang keisler model theory third edition studies logic foundations mathematics north holland amsterdam new york 
chisholm effective model theory vs recursive model theory journal symb 
logic 
chisholm complexity intrinsically subsets existentially decidable models journal symb 
logic 
goncharov khoussainov shore computably categorical structures expansions constants journal symb 
logic appear 
ershov yu 
russian theory 
monographs mathematical logic foundations mathematics nauka moscow 
ershov yu 
russian decision problems models monographs mathematical logic foundations mathematics nauka moscow 
ershov yu 
goncharov eds 
tetrad russian logic notebook ff 
unsolved problems mathematical logic akad 
nauk sssr 
inst 
mat 
ershov yu 
goncharov elementary theories constructive models ershov 
ershov yu 
goncharov nerode remmel eds marek assoc 
ed 
handbook recursive mathematics elsevier new york 
goncharov boolean algebras russian algebra translation algebra logic 
goncharov computable families russian algebra translation algebra logic 
goncharov constructive models categorical theories russian mat 
akad nauk ssr translation math 
notes acad 
sci 
ussr 
goncharov strong homogeneous models russian algebra translation algebra logic 
khoussainov richard shore goncharov models abelian groups russian algebra translation algebra logic 
goncharov problem number russian translation algebra logic 
goncharov groups finite number russian dokl 
akad 
nauk sssr translation sov 
math 
dokl 

goncharov limit equivalent russian mathematical logic theory algorithms inst 
mat 
nauka 

goncharov countable boolean algebras consultants bureau new york 
goncharov models algorithmic dimension ershov 
goncharov models russian algebra translation algebra logic 
goncharov algorithmic dimension nilpotent groups russian 
mat 
zh 
translation math 

goncharov khoussainov spectrum degrees decidable relations russian dokl 
akad 
nauk translation dokl 
math 

goncharov nilpotent groups finite algorithmic dimension russian 
mat 
zh 
translation math 

goncharov constructive models complete decidable theories russian algebra translation algebra logic 
ed 
handbook computability theory north holland 
possible turing degree nonzero member element degree spectrum ann 
pure appl 
logic 
pure computable model theory ershov computable model theory preparation 
harrington recursively presentable prime models symbolic logic 
ziegler proc 
amer 
math 
soc appear 
ph 
thesis cornell university 
khoussainov shore degree effective model theory number models complexity spectra computable categoricity algebraic structures preparation 
hodges model theory encyclopedia mathematics applications cambridge university press cambridge england 
bibliography recursive algebra model theory ershov 
strongly constructive models decidable theory russian 
akad 
nauk 
ssr ser 
mat 
khoussainov shore computable models theories models notre dame formal logic 
khoussainov shore computable isomorphisms degree spectra relations scott families ann 
pure applied logic appear 
theory strongly constructible models russian algebra translation algebra logic 
models undecidable theories russian 
mat 
zh 

decidable model computable scott family formulas russian algebra translation algebra logic 
recursively represented boolean algebras notices amer 
math 
soc 

manasse techniques counterexamples categorical recursive model theory ph 
thesis university wisconsin madison 
nerode effective content field theory ann 
math 
logic 
millar foundations recursive model theory ann 
math 
logic 
millar complete decidable theory decidable models symbolic logic 
millar omitting types type decidability symbolic logic 
millar recursive categoricity persistence symbolic logic 
millar recursive model theory 
morley decidable models israel math 

strong weak computable families russian algebra translation algebra logic 
remmel recursive isomorphism types recursive boolean algebras symbolic logic 
khoussainov richard shore remmel recursively categorical linear orderings proc 
amer 
math 
soc 

robinson essentially undecidable axiom system proc 
intl 
cong 
math cambridge 
sacks degrees ann 
math 

families general recursive functions algebra logic translation algebra logic 
shoenfield degrees unsolvability mathematical studies north holland amsterdam 
non models arithmetic notices amer 
math 
soc 

denumerable models complete theories methods proceedings symposium foundations mathematics warsaw september press oxford 
