presents control theoretic approach reactive flow control networks reserve bandwidth 
assume round robin queue service discipline output queues network switches propose deterministic stochastic models single conversation network switches 
models motivate packet pair rate probing technique provably stable rate flow control scheme 
kalman state estimator derived crete time state space analysis difficulties estimator practice 
difficulties overcome novel estimation scheme fuzzy logic 
technique extract additional information horn system develop continuous time system model 
design control law provably stable addition takes control action rapidly possible 
practical issues correcting parameter drift window flow control described 

networks move integrated service need network control mechanisms provide users different qualities service terms throughput delay delay jitter 
shown guarantees provided network bandwidth research supported defense advanced agency darpa agreement ncr national ini lab micro 
tbe views am authors bs policies si expressed implied gov organizations 
belt 
ave nj 
permission copy fee part material granted provided copies distributed commercial advantage acm copyright notice publication date appear notice copying permission association computing machinery 
copy republish fee specific permission 
acm control theoretic approach flow control srinivasan keshav computer science division department eecs university cali mi berkeley international computer science berkeley ca usa 
keshav tenet 
berkeley 
edu tions behalf conversation called channel circuit virtual circuit conversation 
reservations reduce statistical multiplexing network making system expensive 
interesting problem arises control reserve bandwidth performance guarantees network 
conversations adapt changing network conditions order achieve data transfer goals 
approach conversation satisfy throughput queueing delay requirements data transfer rate changes network state prove adaptations lead instability 
approach 
control transport connections networks called best effort connections networks 
control theoretic approach flow control requires changes state observable 
shown possible measure network state easily servers output queues switches type called rate allocating server transport uses packet pair probing technique described 
assumption queue service discipline ras type sources implement packet pair 
approach extend fmt come served fcfs simple way probe network state 
laid follows 
describe rate allocating servers deterministic stochastic models networks servers 
nex describe packet pair state probing technique 
design stable rate flow control scheme 
problem non linearity system discussed 
state estimator 
estimator impractical designed novel estimation scheme fuzzy logic 
technique increase frequency control additional information horn system serves basis new control law 
practical implementation issues discussed include correcting parameter drift interaction window flow control 
conclude remarks limitations approach review related 

rate servers 
choice network model notion rate allocating server 
consider queue service output queues routers communication network 
packets scheduled strict time division multiplexing tdm order conversation time slot comes data send output trunk kept idle bandwidth wasted 
suppose packets stamped priority index corresponds time service packet server tdm 
shown service order increasing priority index effect approximately emulating tdm attendant inefficiencies 
idea lies fair queueing service discipline 
shown fair quite similar virtual clock discipline 
refer rate allocating servers reason name shortly clear 
virtual clock scheduling discipline originally context reservation oriented network layer study behavior networks 
raises important point 
reservation oriented networks call set conversation specifies desired service rate servers lie path 
information allows server prevent overbooking bandwidth service rate conversation receives constant 
networks allowed refuse conversations bandwidth 
assume ras divide bandwidth way fair queueing server equally currently active conversations 
ras perceived rate service conversation may change 
total number conversations served change 
service rate selected conversation inversely proportional number conversations service rate conversation changes 
conversation arrival rate slower allocated bandwidth share bursty arrival packets send ras treat conversation idle 
number active conversations decreases rate allocated conversations increases 
resumes service rate decreases 
note variations service rate ras provides conversation consistent rate fcfs server 
fcfs server service rate conversation linked detail arrival pattern conversation server perceived service rate varies rapidly 
example consider situation number conversations sending data server fixed conversation data send scheduled service 
fcfs server conversation sends large burst dat service rate conversations effectively drops burst served 
ras conversations unaffected 
server allocates rate service conversation tit independent arrival patterns conversations 
source sending data ras server rate flow control scheme determines allocated service rate sends data rate 
section consider model network rate allocating servers 
theoretically sound flow control mechanism operating network requires model network transients 
network modeled queueing system usually kind results cart obtained hold average case 
differential equations give exact dynamics queue solution equations equivalent evaluating sum bessel functions 
problem complicated network non case 
feel queueing network model transient analysis cumbersome impossible 
flow control depends precisely transients 
approach models network explicitly 
choose model network shown modeling ras network allows network transients calculated exactly 
agrawala developed analyzed det model studying effect window flow control protocols virtual circuit dynamics 
approach simplistic ignores variations allocated service rate discussed 
summarize mo similar stochastic extension 

deterministic model model conversation fq network regular flow packets source destination sink series servers routers switches connected links 
servers path conversation numbered source numbered destination assumed acknowledge 
strictly speaking assumption required ease exposition 
assume ease analysis sources ta send 
simplification allows ignore start transients analysis 
start costs fac analyzed 
time taken get service server finite tic 
ith server idle packet arrives time service si service rate defined pi si 
note time serve packet includes time taken serve packets conversations round robin order 
rate inverse time cm packet services conversation 
server idle packet arrives service time si 
ignored model consider implications section 
packets conversation server incoming packet waits turn get service assume fcfs queueing packets conversation 
source sending rate denoted source assumed send packets spaced exactly time units apart 
define si sn bottleneck time conversation index bottleneck server 
bottleneck service rate defined 
henceforth discrete time continuous time parameter replaced step index step corresponds round trip explained section 
addition number unacknowledged packets source time 
stochastic model determines tic model assumed constant 
changes due creation deletion active conversations 
number active conversations large expect change time interval small compared 
change interval small close 
way represent fluctuation nominal value adequately capture dynamics process close fixed value model random walk step random variable zero mean low variance 
part changes small rule sudden large change 
model simple represents order dynamics feel sufficient purpose 
define random variable represents zero mean gaussian white noise 
problem small possibility increase larger decrease 
distribution symmetric bias positive values making distribution non gaussian 
sufficiently far away assumption zero mean justi able 
white noise assumption means changes service rate time time uncorrelated 
changes service rate due effect lated input traffic think valid 
assumption harder justify 
mentioned noise sources nature second rule thumb gaussian assumption reflect order dynamics noise distribution 
reasonably simple control theoretic formulation estimation gaussian white noise assumption unavoidable 
reasons assume noise gaussian 
strict assumptions system noise necessary mainly doing estimation 
describe fuzzy approach assumptions note queueing theoretic approach modeling define density function say supplied system administrator 
system performance expectations taken distribution 
contrast explicitly model dynamics control scheme depend currently measured value opposed asymptotic time average 

detailed dynamics packet pair state probing done packet pair mechanism shown 
presents time diagram 
time increases vertical axes axis represents node communication network 
parallelograms represent transmission packet correspond kinds delays source server bottleneck sew packet pair probing scheme bottleneck rate vertical sides long transmission delay packet size divided line capacity 
second slope longer sides proportional propagation lay 
network store forward packet sent till completely received 
packet arrives may queued receives service 
represented space dotted lines de 
packet pair scheme source sends back back packets time 
serviced bottleneck definition inter packet service time service time bottleneck 
acks preserve spacing source measure inter ack spacing estimate consider possible sources error estimate 
server marked spaces back back packets affect measurement 
moment reflection reveals long second packet pair arrives bottleneck ends semi fist packet problem 
packet arrive time definition server bottleneck 
spacing packets servers bottleneck server consequence introduce errors scheme 
detail error packet may arrive server serving packets may delayed example de 
delay common packets pair matter 
introduce error fact acks may spread sb due different queueing delays ack return path 
note ack net queueing delay ij bn second zero queueing delay 
effect increasing estimate note source error persist inter ack spacing noted sink sent source state exchange scheme 
measuring sink reduce effect noise eliminate server bottleneck cause noise measurement 
model error measurement observation noise 
observed value increased decreased noise equal probability expect noise distribution symmetric simplification assumed distribution gaussian noise white 

design strategy section describes strategy design flow control mechanism preliminary considerations detailed design 
design strategy flow con ol mechanism separation theorem 
informally theorem states linear stochastic system observer estimate system state eigenvalues state estimator controller separate 
theorem allows technique state estimation implement control estimated state actual state derive control law assuming required estimators available estimators derived section 
fist assumptions preliminary considerations 

choice setpoint aim control maintain number packets bottleneck queue desired setpoint 
system delay components possible control stay setpoint times 
system oscillate value 
choice setpoint reflects tradeoff mean packet delay packet loss bandwidth loss bandwidth conversation loses data send eligible service 
discussed 
denote number buffers switch allocates conversation general may time accounted 
assume static 
consider controlled system pr nb strictly speaking lebesgue measure denote point probabilities 
sharply delimited left aud right tells things pr loss bandwidth pr ras server schedules conversation service nb 
events reasonable find pr loss bandwidth proportional 
pr loss packet pr packet arrival nb density proportional probability packet loss 
tie mean queuing delay average packet takes sb units time get service bottleneck 
setpoint small distribution driven left probability bandwidth loss increases mean packet delay decreased probability packet loss decreased 
trade bandwidth loss lower mean delay packet loss 
choose large set trade packet loss larger mean delay lower bandwidth loss 
sequel assume setpoint 
justification tha system noise symmetric control tracks system noise expect symmetric setpoint 
case setpoint balances tradeoffs 
course setpoint chosen loss generality 
mitra shown asymptotic analysis product form queueing networks derive optimal value setpoint 
application ideas problem explored 

frequency control initially restrict control actions round trip time mt restriction removed section 
purpose divide time epochs length queueing delays 
done simply transmitting specially marked packet pair control action sending mother marked pair 
control action taken epoch 

assumptions regarding round trip time delay assume propagation delay constant conversation 
usually true propagation delay due speed light fiber hardware switching delays 
fixed rare rerouting 
assume round trip time large compared spacing acknowledgments 
analysis treat arrival packet pair single measures round trip time bottleneck service rate 
assume measured round trip time epoch rtt estimate round trip time epoch justification system equilibrium queue lengths expected approximately successive epochs 
case wide area networks propagation delay larger additional delay caused change queueing delay 
change ignored 
assumption removed section 

controller design consider situation kth epoch 
time know kit round trip time mi epoch number packets outstanding time 
predict estimator average service rate th epoch 
service rate bursty time average may lead problems 
example average value large fist part control cycle actual value low buffers overflow 
cases take control action arrival probe cussed section 
shows time diagram control 
vertical axis left axis right bottleneck 
line axes represents packet pair 
control epochs marked source bottleneck 
note epochs time delayed respect source 
convention kth epoch called time rib refers number packets bottleneck kth epoch 
estimators marked hat 
line represents packet pair epoch 
epoch 
source bottle time scale control ki rtt lb och lt nb observations regarding 
distance ab measured source time packet pair sent time ack received 
earlier assumption propagation delay th special pair ktb pair 
ub cd length epoch source bottleneck equal iu 
time marked kth epoch packets sent epoch ack 
unacknowledged packets sent kth epoch number outstanding packets 
approximated sending rate multiplied sending interval 
rm number packets bottleneck th epoch simply number packets kth epoch plus came minus went kth epoch ignoring non linearity discussed 
packets sent packets serviced intend nb equations fundamental equations analysis 
combined give nb rib lz nh determined sent kth epoch way control 
try control nb 
nb nb nb rtt control set 
set obtain 
gives nb rib rit rm rit replacing values estimators rived rz ib rfi unknown cart safely assume 
earlier assumption set rit rtt 
gives fib rz control law 
control tries get buffer 
may reach stay wound 
control law requires maintain esti 
effectiveness control depends choice estimators 
considered sections 
stability analysis state equation rib rtt rtt stability analysis controlled system substituted control law 
know state equation derived just step forward time 
gives nb nb substitute fmd state evolution controlled system 
nb nb rtt rtt close rtt 
order canceling rtt moving back steps time rib nb th transform sizes assuming nb nb get rib zu jz fu ring state variable easily shown characteristic equation system asymptotically stable roots characteristic equation eigenvalues system lie inside unit circle complex plane 
solving get distance eigenvalues lie unit circle controlled system stable 
place pole characteristic equation system asymptotically stable 
consider control law jjk rm leads characteristic equation roots xz poles symmetric real axis need ensure means tx system provably asymptotically stable separation theorem system observer eigenvalues stability result holds choice estimators 
physical interpretation tx simple reach epoch source send exactly rate computed 
system may unstable 
sends slightly lower rate ensures system asymptotically stable 
note ct constant independent system dynamics artd chosen advance desired value smaller 
exact chosen rs controls rise time system adequate responsiveness small 
simulations indicate value compromise responsiveness instability 
similar studies 

system non linearity section discusses non system accounted analysis 
note state equation correct lies range system physically incapable having packets bottleneck queue equation incorrect endpoints range 
correct equation 
rib rib rtt max min terms state equation system nonlinear boundaries 
earlier proof stability valid linear system 
note equilibrium set point chosen lie interior range system linear setpoint 
small deviations earlier stability proof assumes sufficient 
large deviations stability proved methods second method page 
academic exercise 
prac instability system means nb cart move arbitrarily away setpoint 
lit section show window flow control conjunction rate approach 
nb window flow control protocol ensures exceeds true instability possible 
system return detects moved away operating endpoint range 
automatically assured equation shows system chooses nb 
system detects immediately takes steps ensure moves away 
non linearity system practical consequence flow control mechanism suitably modify state equations updating 
rigorous proof system method possible gain analysis slight 

kalman state estimation section presents ka state estimator rmd shows estimation impractical 
practical scheme 
derived control law proved stability need determine stable system state 
choose estimation known robust technique 
technique applied state space description system necessary 

state space description standard linear stochastic state equation hu vi cx vz state input output vectors sizes respectively 
nxn state matrix matrix matrix 
vi represents system noise vector assumed zero mean gaussian white 
observation assumed characteristics system noise 
clearly scalar 
epoch source receives probes epoch 
precise probes received epoch epoch loss generality modeled part observation noise 
time knows average service time lth epoch 
observation system state scalar 
derived state vector multiplication constant matrix state contain 
state include number packets buffer leads state vector elements needed part delay chain leading corresponding signal flow graph 
nb represents state element stores step delayed value torn vi matrices 
state equations rib rtt nk rit known kth epoch represent rtt 
gives matrices rtt rtt rol ool simply scalar variance observation noise 
completes state space description flow control system 

filter solution estimation problem kalman filter minimum variance state estimator linear system 
words possible estimators kalman estimator minimize value fact zero 
filter manipulated yield filters 
desirable construct filter order construct need determine matrices defined implicitly kronecker delta defined expanding left hand side eo noise variables assumed expected product zero need know 
combining state equation kk oi vz indicates observed affected state observation noise 
component separately determined observations 
order filtering values supplied simulation measurement actual system 
practically speaking guesses values supplied filter optimal performance 
assume value noise variances supplied 
system administrator matrices known 
straightforward apply filtering resultant system 
follow derivation pg 
state estimator rived gi hu filter gain matrix gx ct cz ct state difference equation gt cz ct time assumed note filter requires gain matrix updated time step 
computation involves matrix appears expensive 
matrices practice problem 
summarize variances system observation noise available kalman filtering attractive estimation technique 
variances available filtering 
section heuristic estimator works absence knowledge system observation noise 

fuzzy estimation section presents design fuzzy system predicts value time series 
consider scalar variable assumes sequence values ej ej ek ek cok ok called system random variable unknown distribution 
suppose observer sees sequence values 
gk wishes sequence estimate current value 
assume observed sequence observation noise observed values cj actual values random variable unknown distribution 
perturbation noise variables stochastic ex ct value ek determined 
desired ek predictor ek sense 

assumptions model parameter state variable dynamical system 
sequence ek sequence states system assumes 
weak assumptions system dynamics 
fml time scale system perturbations occur assumed art order magnitude slower corresponding time scale observation noise 
second assume system span spectrum steady noisy 
steady varian system perturbations close zero changes due observation nok xu ek changes time constant longer time constant observation noise 
assume zero mean distribution 
note approach general assumptions exact distributions 
hand guarantee resulting predictor optimal claim method practice 

exponential averaging basis approach predictor ct predictor controlled parameter weight past history 
larger weight past history relation observation 
method called exponential averaging predictor discrete convolution observed sequence exponential curve time constant ct jj tz exponential averaging technique number applications 
major problem exponential averaging predictor choice principle determined system observation noise variances practice variances unknown 
useful automatically determine value able change line system behavior changes 
approach uses fuzzy control effect tuning 

fuzzy exponential averaging fuzzy exponential averaging assumption system thought belonging spectrum behavior ranges horn steady noisy 
steady system ek approximately const ek affected mainly observation noise 
large past history weight transient changes ignored 
system noisy vary considerably reflects changes observation noise 
choosing lower value observer quickly tracks changes ek ignoring past history provides old information 
choice extremal cases simple choice intermediate values spectrum hard 
fuzzy controller determine value gracefully responds changes system behavior 
system moves noise adapts change allowing obtain estimate times 
observer know priori automatically determines appropriate value 

system identification linked noise system amount noise system determined 
assume variance order magnitude larger variance 
system steady exponential averaging predictor usually accurate prediction errors small 
large 
contrast system noisy exponential averaging predictor large estimation 
system noise large past history predict 
matter value usually large error 
case best give little weight past choosing small value observer track changes system 
summarize observation predictor error large small vice versa 
treating small large fuzzy linguistic variables basis fuzzy controller estimation 
fuzzy controller controller implements fuzzy laws error low high error medium medium error high low linguistic variables low medium high error defined 
input fuzzy controller value error outputs steps 
error value mapped membership fuzzy sets low medium high definition 
linguistic variables ix linguistic variables describe definition linguistic variables control rules determine applicability outcome resultant control 
fuzzy set expressing control centroid 
error gi processed steps input 
converted proportional le value error idea gk absolute error value directly spikes cause error large drops past history lost 
absolute error smoothed exponential 
obtained fuzzy controller links change error value 
idea change error large large spikes ignored 
small 
change error defined variables low high exactly corresponding variables ct changes assumption variance observation noise small removed 
resulting system shown 
details pre ction system performance analysis 

additional information section describes frequency control increased information propagation delay 
note fib 
estimate number packets bottleneck queue plays critical role control system 
controller tracks changes estimator nb 
cm mi de mcu rate additional information available 
piece information value propagation delay 
error exponential estimate smoothed proportional error fuzzy system fuzzy prediction system round trip time packet delays due causes propagation delay speed light processing switches interfaces queueing delay switch previous packets conversation serviced phase delay introduced packet previously inactive conversation waits server fish service packets conversations propagation delay depends geographical spread network wans order tens milliseconds 
phase delay roughly magnitude time takes send packet conversations sharing server round time 
queueing delay order round times packet queue takes round time get 
high speed networks expect propagation queueing delays roughly magnitude phase delay order magnitude smaller 
queueing delays avoided measured round trip time approximately propagation delay conversation 
easy way avoid queueing delays measure trip time packet fist packet pair 
packet queueing delays estimate propagation delay conversation packet measured round trip time 
call propagation delay value useful number packets bottleneck queue epoch nb estimated number packets transmitted pipe subtracted number unacknowledged packets epoch 
known gives way determining 
update art alternative equation 
advantage approach equation susceptible parameter drift 
successive errors cm add differ substantially nb 
new scheme risk considerably reduced systematic error frequent sampled smoothed fuzzy system smaller concern 
substantial advantage approach enables control actions taken faster round trip time 
explained section 

faster rtt control useful take control actions fast possible controller react immediately changes system 
system described far limited rtt control enables simple relationship equation 
control actions taken faster rtt epoch size smaller relationship longer true 
new relationship easily shown state input vectors expand include time delayed values nb 
clear faster control actions required larger state vector complicates analysis control 
contrast information propagation delay control done quickly packet pair change length state vector 
demonstrated 
control done probe easier continuous time 
fluid approximation packet boundaries ignored data flow fluid hydraulic system 
approximation commonly analysis simulations show approximation close particularly bandwidth delay product large 
assume held fixed duration nb rib average service rate time interval assumed lie linear region space 
note rib rp control goal nb setpoint value 
lfi tie control law 
stability system easily determined 
note fib equation fib li nb rib fine state system rib equilibrium point state equation clearly system positive system lyapunov stable stable 
system pole placement parameter plays exactly role rs discrete time system 
close system close system reach equilibrium point rapidly 
larger values cause system move equilibrium point slowly 
intuitively satisfying choice round trip time easily estimated 
values known estimated fuzzy predictor described earlier 

practical issues section considers practical considerations correct parameter coordinate rate window flow control 

correcting parameter drift system estimated parameters possibility estimators drift away true value detected 
case estimate number packets bottleneck time fi computed estimator 
estimators incorrect drift away nb 
require correction parameter drift 
note set amount time nb decrease set system 
practi source sends special pair sends packets till special pair acknowledged 
data sent pair acks received source sure bottleneck queue gone reset fib continue 
penalty implementing correction loss bandwidth round trip time 
conversation lasts round trip times loss may insignificant lifetime conversation 
alternately user sends data bursts conversation idle bursts value csn desynchronized transmission data burst 

role windows note control system give guarantees shape buffer size distribution 
non zero probability packet loss 
applications packet loss undesirable endpoints retransmit messages frequent retransmissions lead congestion 
desirable place sharp cut right strictly speaking ensure packet arrivals nb arranged having window flow control algorithm operating simultaneously rate flow control algorithm described 
scheme rate flow con ol provides operating point setpoint user selects 
addition source number packets outstanding window size server path reserves window worth buffers conversation 
assures system deviates horn system lose packets possible congestive losses completely avoided 
note reserving buffers conversation introduced reservations network earlier claimed 
argument strict bandwidth reservation leads loss statistical multiplexing 
aa long conversation refused admission due lack buffers statistical multiplexing bandwidth affected buffer reservation multiplexing gain identical received network buffer reservations 
large cheap memories claim possible reserve buffers loss statistical multiplexing 
rate flow control select operating point window flow control cut point 
respec agree jain forms flow control diametrically opposed fact 
choice window size critical 
fixed sized windows usually possible high speed networks bandwidth delay product required window large order hundreds kilobytes conversation 
view adaptive window allocation scheme proposed attractive 
scheme conversation allocated flow control window larger product allocated bandwidth bottleneck round trip propagation delay 
conversation constrained size flow control window 
signa mg scheme dynamically adjusts window size response changes network state 
believe window flow control scheme complementary rate flow control scheme proposed 

approach main limitation control theoretic approach restricts form system model 
results hold linear systems system model cast form 
restrictive certain aspects system window flow control scheme adequately modeled 
similarly standard noise assumptions restrictive may reflect actual noise distribution target system 
mainly limitations control 
growing body literature dealing non control direction study non models flow control 
limitation control theory controller design network state observable 
fcfs server state easily observed hard apply control theoretic principles control fcfs 
contrast ras state probed packet pair ras networks amenable formal treatment 

related contributions control theoretic approaches flow control studied past 
body considered dynamics system users update sending rate synchronously asynchronously response measured round trip lays explicit congestion signals example 
approaches typically assume poisson sources availability global information simple update rule exponential servers 

deal dynamics entire system sending rate users explicitly taken account 
contrast consider system single user effects users considered system noise 
approach user uses complex flow update pa fuzzy prediction analysis amenable simplistic approach authors 
control principles appealed jain jacobson approaches authors quite informal 
control systems take multiple round trip times react change system state 
contrast system take control action multiple times lt high bandwidth delay product network significant advantage 
ko studied identical problem applied principles predictive control hop hop flow control 
appeal primarily intuitive heuristics formal control theoretic model able prove stability system 
believe fuzzy scheme better way predict service rate moving average approach 
control theoretic approach optimal flow control described originally exten 
approach conversation modeled order differential fluid approximation 
modeling parameters tuned steady state solution equation solution corresponding queueing model agree 
model service rate bottleneck random walk assume service rate queue length 
nonlinear function 
true ras service rate independent queue length 
apply techniques problem 
hsiao lazar control theoretic approach optimal flow control double bus tdma integrated voice data networks 
assume exponential fcfs servers network geo graphically dispersed propagation delays ignored 
modeling service rate random variable opposed random walk propose recursive minimum mean squared error filters estimate system state bulk results assume complete information network state lazar considered design optimal filters state fully observable filters specialized voice traffic 
lazar hsiao shown variety conditions optimal flow control network poisson traffic bang bang approximated window scheme 
clear result holds strong assumptions removed 
summary feel approach substantially different literature 
packet pair estimate system state unique estimation critical enabling control scheme 
described provably stable rate flow control schemes novel estimation scheme fuzzy logic 
practical concerns implementing scheme addressed 
control law extensively simulated number scenarios 
considerations space allow detailed results summarized performance flow control fair queueing servers benchmark suite described comparable decbit scheme need switches set bits 
flow control algorithm responds quickly cleanly changes network state current flow control algorithms decbit jacobson modifications bsd system behaves extraordinarily situations bandwidth delay product large cross traffic misbehaved bursty 
implementation tuning algorithm straightforward complex ad hoc controls current flow control algorithms 
complicated dynamics simple understand contrast dynamics jacobson algorithm messy partially understood 
believe decision formal control theoretic approach design flow control algorithm success 
algorithm behaves great stress importantly simple implement tune 
fortuitous reflect theoretical underpinnings approach 

simplifications assumptions 
useful measure real networks see far theory practice agree 
plan measurements ii experimental high speed testbed 
extensions design minimum controller non controller 

noise variable model bottleneck service rate suggested srinivasan 
fact system noise distribution symmetric close pointed prof 
gave valuable comments fuzzy controller 
prof ferrari source encouragement keen questioning 
helpful advice criticism dr singh dr prof prof varaiya anonymous aspects appreciated 



ferrari client requirements real time communications services ieee communications magazine november 
kanakia keshav rate controlled servers high speed networks proc 
globecom december 
ferrari scheme real time channel establishment wi area networks ieee selected areas communications april 
golestani go queueing framework congestion proc 
acm sigcomm september 
















zhang new architecture packet switching network protocols phd kris institute technology july 
keshav agrawala sing design analysis flow control algorithm network rate allocating servers protocols high speed networks elsevier science publishers april 
proc 
second ifip tc wg wg workshop protocols high speed networks nov 
singh agrawala keshav deterministic analysis flow congestion control policies vial circuits tech 
rpt university maryland june 
keshav packet pair flow control protocol may 
greenberg madras fair fair queueing proc 
performance 
demers keshav shenker analysis simulation fair queueing algorithm journal internetworking research experience september 
proc 
acm sigcomm sept pp 
zhang keshav comparison rate service proc 
acm sigcomm september 
international comp 
sci 
institute tech 
rpt 
berkeley ca 
rmd duda tree dependent analysis queueing systems infor 
window dynamics phd thesis university maryland college park may 
agrawala dynamic behavior data flow virtual circuits comp 
sci tech 
rpt university maryland may 
anderson moore optimal filtering prentice hall 
netravali high speed transport protocol datagram circuit networks proc 
acm sigcomm september 
anderson moore linear quadratic methods prentice hall 
mitra dynamic adaptive windows speed data networks theory simulations proc 
acm september 
asymptotically optimal design congestion control high speed data networks appear ieee trans 
communications 
keshav congestion control computer networks phd thesis preparation university california berkeley june 
bandwidth management congestion control strategy broadband packet network characterizing throughput burstiness filter proc mc spec seminar adelaide 
discrete time control systems prentice hall 

goodwin sk adaptive filtering prediction control prentice hall 

zimmerman fuzzy set theory applications kluwer academic publishers 

zadeh outline new approach analysis complex systems decision processes ieee trans 
systems man cybernetics 
analysis design fuzzy control systems phd preparation university california berkeley 

za fuzzy sets journal information control 

keshav fuzzy preprint april 

dynamic modeling control congestion prone systems operations research 

numerical methods modeling computer networks nonstationary conditions december 

bo ol dynamical behavior rate flow control mechanisms comp 
sci tech 
rpt 
maryland october 

jain myths congestion management high speed networks technical report digital equipment october 

tmd morgan fairness congestion control large atm data network dynamically adjustable windows th international congress copenhagen june 

kumar jaffe new approach performance oriented flow control ieee trans 
communication com april 

shenker theoretical analysis feedback flow control proc 
acm sigcomm september 

majumdar user optimal flow control integrated environment proc 
indo workshop systems signals january 
india 

lazar asynchronous algorithms optimal flow control networks tech 
rpt 
wucs washington university st louis mo february 

decentralized algorithms optimal flow control proc 
th allerton conference communications control computing october 
university illinois urbana champaign 

congestion avoidance computer networks connectionless network layer part ii explicit binary feedback technical report digital equipment april 

congestion avoidance control proc 
ach sigcomm august 

ko mishra tripathi predictive congestion control high speed wide area networks protocols high speed ii science publishers north holland april 








modelling control dynamic flows networks springer verlag 
hsiao flow control integrated local area networks vol 

law flow control protocols integrated networks partially observed ieee transaction automatic control 
lazar modeling snd optimal flow control network performance evaluation 
hsiao lazar optimal flow control multi queueing networks partial ieee transactions control july 
jain binary feedback scheme congestion avoidance computer networks acm acm trans 

sys 
may 
zhang shenker clark observations dynamics congestion control algorithm effects way traffic proc 
acm september 
nationwide testbed speed networking comp 
sci 
tech 
rpt march bell labs mountain ave hill nj 
