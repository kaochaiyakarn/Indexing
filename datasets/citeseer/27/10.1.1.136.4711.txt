fully automatic wrapper generation search engines zhao weiyi meng dept computer science suny binghamton binghamton ny usa meng cs binghamton edu query submitted search engine search engine returns dynamically generated result page containing result records usually consists link snippet retrieved web page 
addition result page contains information irrelevant query information related hosting site search engine advertisements 
technique automatically producing wrappers extract search result records dynamically generated result pages returned search engines 
automatic search result record extraction important applications need interact search engines automatic construction maintenance metasearch engines deep web crawling 
novel aspect proposed technique utilizes visual content features result page displayed browser html tag structures html source file result page 
experimental results indicate technique achieve high extraction accuracy 
categories subject descriptors information storage retrieval online information services commercial services web services 
general terms algorithms performance design experimentation 
keywords information extraction wrapper generation search engine 

search engines important tools people reach vast information world wide web 
studies indicate web searching email second popular activities internet 
surveys indicate hundreds thousands search engines web 
web users interact search engines web applications need interact search engines 
example metasearch engines utilize existing search engines perform search need extract search results result pages returned search engines 
example deep web crawling crawl documents data records deep web search engines needs extract search results result pages returned search engines 
copyright held international world wide web conference committee iw 
distribution papers limited classroom personal 
www may chiba japan 
acm 
wu vijay raghavan center adv 
compu 
studies univ louisiana lafayette lafayette la usa vijay cacs louisiana edu clement yu dept computer science university illinois chicago chicago il usa yu cs uic edu focuses issue extract search result records srrs dynamically generated result pages returned search engines response submitted queries 
srr typically consists link retrieved web page pertinent information snippet 
typical result page contains multiple srrs plus information irrelevant user query information related hosting site search engine advertisements 
objective extract srrs discard irrelevant information result page 
search engine experienced developer may manually write program extract srrs result pages returned search engine manually analyzing sample result pages 
manually generating srr extraction programs wrappers costly time consuming impractical applications 
example search engines frequently change result display format changes require manual maintenance extraction program 
example project aims connect hundreds thousands search engines practical manually construct wrapper search engine 
need automated solution 
search engines web services interface google amazon com automated tools may extract srrs result formats clearly described wsdl file web services 
investigation indicates search engines web services interfaces currently 
reason may web services designed support applications search engines applications 
need deal search engines web services interfaces extract results html files 
describe solution problem automatically extracting srrs dynamically generated html result pages returned search engines 
specifically visual information tag structure wrapper generator tool automatically producing wrappers search engines 
heart soul search engine wrapper set srr extraction rules wrapper srr extraction rules interchangeably 
hand reasons difficult derive accurate wrappers entirely html tags 
html tags designed describe presentation data facilitate browsing human users 
tags convey limited semantic information data 
second html tags ways far imagination html tag designers 
result little convention relied 
third html loose grammar browsers typically enforce grammar displaying web pages ill formed html pages perfectly displayed 
fourth script program produces result pages generates tags srrs may contain tags 
hand web pages designed facilitate human browsing contain rich visual content features help people locate understand information 
fact users typically rely entirely visual content features recognize srrs 
natural consider utilizing visual content features srr extraction 
main contribution development evaluation method utilizes visual content features result page displayed browser html tag structure html source file result page derive srr extraction rules 
previous works field exploit regularities html tag structure directly utilizes visual content html tags identify regularities content combines html tag structure regularities generate wrappers 
method fully automated experimental results indicate technique achieve considerably higher extraction accuracy state art web information extraction systems mdr utilize html tag structures result pages 
rest organized follows 
section presents architecture 
section introduces fundamentals method visual content features 
section discusses find candidate srrs 
section presents method deriving wrappers 
section reports experimental results 
section reviews related works 
section concludes 

system architecture shows architecture automatic wrapper generation system 
input system url search engine interface page contains html form accept user queries 
output system wrapper search engine 
search engine form extractor figures connect search engine information available html form 
extracted form information query sender component sends queries search engine receives result pages returned search engine 
readers may refer details components 
sample result pages web page rendering tag tree building wrapper integration wrappers query sender sample query generator content line extraction wrapper selection search engine form extractor line separator extraction wrapper refining wrapper building input url search engine block extraction wrapper generation 
system architecture wrapper building module shown dash line box focus 
input module set sample result pages produced search engine response automatically generated sample queries 
requirement sample result page contains sufficient number srrs better permit regularities srrs explored wrapper building 
input module contains special result page called result page contains srrs 
page contains information irrelevant user query filter useless information result pages 
sample query yields result page called impossible query 
sample queries generated sample query generator 
component implemented system discussed 
utilize visual content features render sample result page wrapper building 
objects links texts result page anchor text associated url called link 
result page rendered object result page rendering box rectangle containing object produced 
coordinate system browser window help describe positions rendering boxes 
wrapper generation method sketched 
sample result page analyze types say link text positions rendering boxes identify candidate result records section 
records hypothesis general format srr wrappers build initial wrappers sections 
wrappers refined enable detection boundaries separating different types records srrs non srrs section 
promising wrapper selected result page refined wrappers additional visual features section 
search engines may produce different irrelevant information different result pages advertisements may query dependent 
result different sample result pages may lead slightly different wrappers 
final step integrate wrappers sample result pages search engine produce final wrapper search engine section 
detail method sections 

method fundamentals mentioned earlier existing techniques web information extraction analysis html tag structures 
believe regularities visual content strings images shown web pages utilized achieve higher performance 
visual content features designed help people locate understand information web page help information extraction 
example profile contour left side srr result page tends similar visual separators blank lines consecutive srrs srrs tend arranged special section result page section occupies large portion result page tends centrally located page 
describe basic visual content features study sub sections 
content line result page usually consists multiple sections containing information category 
example result page consists sections left contains srrs right contains sponsored links 
section containing srrs called srr section 
definition content line content line group characters visually form horizontal line section rendered page 
category home personal finance tax preparation forms content line 
note tax info center forms different content line visually line line starting category appear different sections result page 

result page google different types content lines observed typical result pages arrangements useful identifying records 
approach types content lines identified link area rendering box line link area 
anchor text clickable text underlying url considered link 
url anchor text considered link text 
code text area rendering box line text area 
code link text contains link text occupies area 
code link head link line started number code text head text line started number 
code link text head link text line started number 
code hr line visual line generated html tag hr 
code blank blank line 
code record contains content lines 
link line followed text lines link line invisible blank line 
facilitate computation code assigned type content line 
content line rendering box left coordinate rendering box called position code content line 
position code blank line set position code visible line immediately 
summarize content line represented type code position code pair 
shape block record consists content lines form block 
observation records result page left side profiles records section tend similar records different sections tend different left side profiles 
observation consistent fact result pages generated computer programs different sections usually generated different scripts 
define block shape represent left side profile block 
definition shape block ck content lines block top order pci position code ci shape block ordered list position codes member content lines block pc 
pc called shape code block 
consider block 
content lines fifth blank line 
suppose position codes content lines top bottom respectively 
shape block represented 

record block shape block similarity block consists pieces information ordered top bottom type codes content lines position codes content lines block shape 
define metrics measure similarity blocks content lines type distance shape distance position distance 
type distance 
type distance blocks capture difference content line type sequences 
detail described 
define type code block sequence type codes content lines block 
tci type code ith content line block tc type code block number content lines block 
furthermore multiple consecutive text type codes compressed occurrence observation texts snippets srrs vary length significantly 
definition type code block text type code suppressed 
implementation type distance blocks edit distance type codes blocks 
shape distance 
distance measure difference sequences shapes blocks 
focus shape ignore block starts coordinate system subtract smallest position code shape code position code 
convert 
concentrate multiple consecutive occurrences position code suppressed 
consequently transformed indicating shape indent value 
final list called modified shape code block 
msc denote modified shape code block block shapes assume value indent msc msc msc msc msc msc 
note blocks modified shape code blocks different modified shape codes 

sample block shapes summary shape block represented sequence method 
shape distance blocks defined maximum difference corresponding modified shape codes blocks modified shape code longer pad shorter lengths shape codes calculating shape distance 
position distance 
distance measures difference closest points blocks left boundary rendered result page 
words position distance blocks difference smallest position code content line 
finding candidate search result records section discuss find candidate srrs result page exploiting regularities visual content features 
candidate srrs generate wrapper result page section 
result page search engine render extract content lines 
remove content lines appear result page search engine get rid useless content lines 
step method find candidate srrs 
visually different records separated certain separator 
step try identify candidate content line separators section 
ccls tentatively segment content lines blocks 
second step blocks clustered different groups blocks group appear result page consecutively visually similar section 
intuitively group corresponds section result page 
separator may help identify records may reliably separate records correctly 
solve problem third step algorithm identify line candidate record section 
clearly find lines multiple consecutive records correctly identify candidate srrs easily 
identifying candidate content line separators task identify content lines segment result page blocks 
visually different records separated blank line tag visual line hr tag 
different records organized different items list li tag ol ul tags different rows tr tag table special image lines 
tags may appear different records 
furthermore observation separator may consist multiple tags example sequence tags may collectively form separator 
consequently problem correctly identifying content line separators arbitrary search result pages challenging 
solution problem identify result page steps determine yielded wrapper correct section 
subsection discuss identify 
approach ccls sequence consecutive content lines pattern sequence content lines define ccls 
pattern defined sequence type code position code pairs content lines ccls 
ccls segment result page multiple blocks content lines ccls included blocks 
fact content line ccls content line block containing ccls 
sample result page required srrs approach pattern defines ccls appear times 
avoid missing potentially correct content line separator content line patterns appear times result page recognized 
suffix tree accomplish step 
efficiently find distinct type code position code pair represented special symbol 
transform result page content lines string symbols 
suffix tree constructed symbol string complexity number symbols string 
suffix tree sub strings appearing times linear time complexity 
block grouping ccls result page segmented multiple blocks content lines 
mentioned result page consists multiple sections srr section 
divide blocks groups 
blocks consecutive visually similar put group 
blocks visually similar type distance shape distance position distance certain thresholds 
point know group may contain srrs 
result groups analysis section 
identifying line record blocks group may equivalent records group ccls obtain blocks may incorrect 
nice feature approach require identification correct ccls correctly extract srrs 
far srrs correctly obtained build wrapper srrs extract srrs page 
attempt identify line record 
clearly line record correctly identified records correctly identified 
blocks obtained play important role identifying lines records 
block aim identify exactly line line record 
block contains exactly line record line correctly identified consecutive blocks approach extract records correctly blocks correspond records exactly 
feature approach reduces reliance correctly identifying content separator 
analysis large number srrs different search engines developed set heuristic rules identify line record block 
heuristic rules line hr line line line starting number block line line line block smallest position code position codes lines strictly larger line line blank line block line blank line line 
heuristics applied certain order reflect priorities 

wrapper building step described section result page set block groups consisting consecutive visually similar blocks 
call groups candidate groups may contain srrs 
candidate group contains number candidate records obtained record lines blocks see section 
section describe build wrappers srr extraction rules exploiting regularities visual content features html tag structures 
note wrappers approach expressed html tag structures 
advantage wrapper efficiently applied result pages user queries extract srrs rendering result pages avoided 
section review concepts tag tree tag paths introduce obtain tag paths candidate records group 
tag path record tag path line 
observation indicates srrs different result pages may laid differently srrs result page usually arranged sub tree tag tree page tag paths follow certain pattern section 
observation propose hypothesis general format wrappers search engines form regular expression section 
basis hypothesis build initial wrappers tag paths candidate records candidate group section 
initial wrappers refined detect boundaries separating different candidate groups section 
may multiple candidate groups result page multiple initial wrappers may built candidate group multiple refined wrappers may generated 
promising wrapper selected result page refined wrappers additional visual content features section 
final step integrate wrappers sample result pages search engine produce final wrapper search engine section 
tag paths records result page transformed tree representation tags source html file called tag tree 
root tag tree html tag content nodes texts images leaf nodes 
internal node represents pair tags starting tag corresponding tag tag tag just tag tag tag br example 
root tag internal nodes called tag nodes 
tag node sub tree rooted tag represent starting tag corresponding tag tags elements 
shows sample result page partial tag tree 
note tag nodes head center expanded 
htm ea im en er st im st im inal id orm ingham ton 
sample result page tag tree node tag tree located path root node 
call path tag path 
tag path consists sequence path nodes 
path node pn consists components tag name tag node direction indicates node pn path sibling pn indicated child pn indicated 
example tag path img tag html head body tag path link financial aid forms note part link srr html head body img center hr hr dl dt strong 
know line record search tag tree reverse order node line root tag tree find tag path record 
candidate group size get tag paths 
table lists tag paths sample result page 
difficult see regular expression exists tag paths table 
problem automatic regular expression grammar inference known difficult generally obtain regular expression grammar positive samples case 
approach provide hypothesis general format wrappers try build wrappers hypothesized format 
table 
tag paths extracted result page tag path html head body img center hr hr dl dt strong html head body img center hr hr dl dl dt strong html head body img center hr hr dl dl dl dt strong html head body img center hr hr dl dl dl dl dt strong structure minimal sub tree contains srrs exists minimal sub tree tag tree result page srrs located minimal means proper sub tree contains srrs 
srr corresponds sub forest see dotted circles 

structure minimal sub tree containing srrs 
structure variation minimal sub tree contains srrs search engine result pages dynamically generated computer program 
result page typically multiple srrs reasonable think loop program wraps data extracted underlying database producing result page 
result corresponding sub forests srrs identical similar tag structures parent child relationships tags roots sub forests srrs siblings 
identify srrs identifying corresponding sub forests 
words divide descendants set sub forests hopefully srr corresponds sub forest 
separator perform segmentation 
valid separator satisfies conditions common subset sub forests srrs appears sub forest srr sub forest appears sub forest srr exactly incorrectly divide single srr multiple records contains rightmost subtrees sub forest srr separator separates part 
note separator different content line separator introduced section 
tag structure tag forest separator section set content lines 
possible separator needed search engine 
happens search engine arranges srrs way different srrs example srr may arranged indented relative srr preceding 
section example 
shows tag tree structure case parent node level sub forest 
note similar tag structure 
general srrs search engine arranged different ways different kinds separators need identified 
practice usually occasionally 
wrapper format hypothesis wrapper defined tag tree needs specify things location minimal sub tree contains srrs separator set 
minimal sub tree determined tag path root tag tree root srrs separated possibly different kinds separators separator part record 
addition search engine may display certain number srrs result page 
analysis hypothesize wrapper represented regular expression prefix separator separator min max wild card sub forests tag tree prefix tag path separators sub forests tag tree alternation operator concatenation separator corresponds record min max select records list records 
example wrapper min max restriction extracts list records records min th max th records extracted 
general min max infinite search engines limit number results displayed result page 
prefix determines minimal sub tree contains srrs result page 
separators segment descendants srrs 
wrapper generated search engine extracting srrs result page search engine straightforward 
parse result page build tag tree 
follow prefix wrapper locate root minimal sub tree contains srrs 
find existing occurrences separators descendants arrange order appearances sub tree extract ith srr descendant nodes located ith th occurrences separators nodes representing th occurrence separators part ith srr 
extract srrs serial numbers range min max 
initial wrapper building give candidate record group form sub groups consecutive records size experiment 
records form sub group second th records form sub group 
tag paths records sub group hypothesis format wrapper expression try build initial wrapper records sub group 
possible different initial wrappers generated different sub groups 
possible initial wrapper generated sub groups 
produced wrappers passed refinement step method 
discuss generate initial wrapper subgroup step focus identifying prefix separator expression 
parameters min max determined refinement step section 
suppose records appear order rk 
path ri denote tag path ri 
tag paths second third fourth records table running example explain method 
main ideas method follows 

find maximum common prefix pre input tag paths records 
running example pre html head body img center hr hr dl note pre may different prefix needed expression 
reason record group shortest tag path may general correct prefix contained pre pre may contain extra path nodes 
identify extra path nodes remove pre tag path path pre compute diff suffix 
diff separator expression 
running example diff dl separator 
remove occurrences diff pre 
pre new pre node pre 
point effort identify additional separators tag path diff identical tag pattern composed child node diff appears immediately conditions satisfied path node identified new separator occurrences separators including previously identified ones removed pre 
process repeated new separator identified remaining tag path pre prefix expression 
running example separator identified correct prefix html head body img center hr hr 
diffs different cases identified 
case common suffix diffs exist 
case wrapper generating process fails process terminated 
case common suffix exists multiple occurrences diff 
case suffix separator 
subtract pre suffix identical diffs subtraction possible remaining pre prefix expression 
case common suffixes multiple occurrences diffs 
case attempt expand diff structure child nodes deeper descendant nodes nodes diff consideration structures child nodes help differentiate different nodes diff help find separator multiple occurrences diffs 
expanded diffs identify separators second case 
separator wrapper building process fails 

prefix separator identified steps initial wrapper generated assuming min max 
example initial wrapper generated running example html head body img center hr hr dl wild card 
initial wrapper extract matching records result page see records correctly extracted consecutive order 
true wrapper accepted evaluation refinement section 
true possible reason separator incorrect 
attempt expand nodes separator child descendant nodes step see new separator 
revise initial wrapper repeat process 
new wrapper accepted new separator wrapper building process fails wrapper refining task determine values parameters min max wrapper see expression 
input wrapper refining process includes initial wrapper generated section list consecutive records extracted applying wrapper 
records numbered rm record middle 
wrapper refining process works follows 
start rm move ends list 
consider process moving list 
record encountered contain link block visually similar block rm serial number record plus min 
similarly max determined consider process moving list 
wrapper selection sample page step set wrappers record groups extracted applying wrappers 
wrappers cases may occur 
wrappers correctly extract srrs 
second may extract correct srrs 
third may retrieval srrs non srr records 
fourth may suitable neatly arranged information result page ads host information 
wrapper selection step determine wrapper belongs case 
approach uses content features visual non visual help find correct srr group correct wrapper 
difficult observe rendered result page correct srr group occupies large area centrally located contains characters large number records 
utilize content features define weights 
rendering area weight raw 
group raw defined relative rendering area record group largest rendering area record groups 

center distance weight cdw 
cdw distance center group rendering box center rendering box result page distance called center distance group 
center page rendering box 
rendering box group contains center distance defined euclid distance center group rendering box define cdw relative center distance smallest center distance 

number records weight 
group defined number records group divided number records largest group 

average number characters weight 
average number characters group average number characters block group 
group defined relative average number characters group largest average number characters groups 
combine weights weighted summation pick group highest combined weight search result group output corresponding wrapper correct wrapper input sample page 
wrapper integration wrapper selection able build wrapper sample result page 
wrappers built different sample result pages search engine may different correct respect corresponding sample result pages 
reason frequently search engines may include information result page query dependent changes time time 
result tag paths prefixes wrapper expressions minimal sub tree contains srrs separator sets may vary 
wrapper built sample page may correctly extract srrs applied page 
wrapper integration integrate wrappers built multiple sample result pages search engine single robust wrapper search engine 
integration involves parts separator integration prefix integration min max integration 
integration process wrappers considered time 
separator sets prefixes integrated wrappers integrated 
integrated wrapper may integrated possibly integrated wrapper 
process may multiple integrated wrappers integration carried 
time integrated wrapper largest support integrated largest number input wrappers selected final wrapper search engine 
current implementation tie broken arbitrarily 
outline wrappers integrated 
separator integration separator sets set subset set take larger set integrated separator set 
case separator sets identical special case case 
sets subset integration separator sets fails 
prefix integration prefix integration carried converting prefix compact form removal unimportant path nodes 
remove noises prefixes 
conversion rules keep path nodes direction code 
keep path nodes direction code tag name closest path node direction code 
path node node direction code tag name identical tag name node separator wrapper kept deleted 
example prefix wrapper section item html body obvious compact prefix find minimal sub tree original prefix 
prefix integration carried reasonably easily prefixes converted compact forms 
min max integration input min max min max min max respectively 
min max integration result 
min min min min max max max max 

experiments built operational wrapper generation prototype system method 
result page rendering tag tree construction performed commercial tool 
pentium gh pc current build wrapper search engine sample result pages result page seconds 
wrapper built search engine srrs new result page search engine extracted small fraction second milliseconds 
wrappers generated practically useful real time web applications 
fact development commercial news metasearch engine www com 
prototype system data sets evaluate accessed www data binghamton edu html 
data sets data sets test described 
data set contains search engines categories education government medical general 
search engines education category randomly selected yahoo search engine query american universities 
search engines government medical categories collected search com 
general category contains general purpose search engines google altavista yahoo data set training set learning optimal performance parameters weights section 
search engines data set document search engines search text documents 
data set contains search engines collected profusion com included data set 
search engines exposed tested 
non document search engines jobs ecommerce entertainment 
mention data sets contain search engines return multiple sections results current method designed extract records just major section search engine result page 
search engines result pages rendered excluded cases 
search engine data sets queries submitted result pages manually collected 
addition result page collected search engine submitting non existent term query search engine 
search engines limit number records displayed result page say 
search engines display results hundreds result page 
avoid bias may caused search engines performance records result page contains records 
data set obtained testbed available sourceforge net projects 
testbed consists web pages collected websites commerce search engines 
number web pages web sites highly uneven dozens decide take random page website 
data set consists web pages websites page site 
data set compare method mdr state art web information extraction system html tag structure analysis downloaded www cs uic edu mdr mdr download html 
currently standard testbed web information extraction 
result researchers report performance systems testbed 
easily cause biased results 
data set third party fairer comparison 
performance measures recall precision measures widely evaluate information retrieval system evaluate performance system extracting srrs 
recall precision defined ec recall ec precision nt ec total number correctly extracted srrs nt total number srrs result pages total number records extracted 
experimental results data sets determine impact visual content features wrapper generation approach implemented version uses visual content features 
version content lines identified html tags br tr block similarity type distance wrapper selection visual features rendering area 
search engine data sets result pages result page build wrapper applied extract srrs result pages 
table shows results wrapper applied pages build wrapper table shows results wrapper applied pages build wrapper 
columns headed vw results regular columns headed nv results visual content features utilized 
table 
results samples build wrapper data set data set vw nv vw nv srrs extracted srrs correct srrs recall precision table 
results samples build wrapper data set data set vw nv vw nv srrs extracted srrs correct srrs recall precision seen tables generate high quality wrappers recall precision close data set close data set 
small decrease performance data set data set strongly indicates approach robust considering facts data set completely new search engines non document search engines system trained document search engines 
main reason decrease performance due failure search engines data set 
failure caused wrapper selection step wrong wrapper selected reason failure immediately clear 
comparing results columns vw nv see utilizing visual content features moderately increased precision significantly increased recall especially data set 
note increases large absolute terms highly significant increases base performance percentage points usually difficult achieve 
result pages non document search engines usually complex document search engines data set search engines utilizing visual content features effective complex result pages 
plan carry experiments verify observation 
comparison mdr mdr extracts single page time 
compare mdr configure build wrapper single page apply wrapper extract srrs page 
returns srrs major section web page mdr reports identified sections 
major section considered multiple sections srrs 
mdr similarity threshold set test suggestion authors mdr 
mdr produce output web pages data set mdr program terminated abnormally worked pages 
pages comparison reason abnormal termination mdr program pages test clear 
misaligned srrs extracted srr consisting part actual srr part srr counted error 
table shows summary test results web pages mdr produced results 
detailed test result accessed demo site 
see table performance considerably better mdr 
test mdr better extracting records html tables recall precision data set non tables recall precision method performs situations recall precision tables non tables 
table 
comparison results mdr mdr srrs extracted srrs correct srrs recall precision 
related works problem extracting search results search engine result pages information extraction problem 
received lot attention years 
survey current works 
earlier works mainly semiautomatic manual 
rely training human assistance generate extraction rules web pages 
new applications building large scale metasearch engines building metasearch engines demand require fully automated wrapper generation techniques 
automated nearly automated methods proposed representative ones method mdr roadrunner pickup 
roadrunner extracts template analyzing pair web pages class time 
uses page derive initial template tries match second page template 
mismatches modify template eventually fit input pages template 
works set web pages class 
equivalence classes sets tokens having frequency occurrence input pages computed large frequently occurring equivalence classes extracted template generation 
employs multi level pattern extraction algorithm build regular expression represent nested schema data web page 
pickup identifies table structures web pages mining repeated patterns html tag sequence 
roadrunner pickup support complicated data types general works developed primarily flat record extraction 
reported experimental results data level lower search result records extracted 
consequently results directly comparable 
possible systems extract data record level able implement complicated algorithms lot details left published papers 
result able compare method experimentally 
methods mdr relevant method extract data record level 
symbolizes html tokens parsed web page string uses pat tree heuristics find candidate patterns 
human user selects best pattern candidate patterns 
result fully automated 
method build tag tree input web page apply heuristics extract sub tree contains data objects interest 
set heuristics applied find separator tag segment minimum object rich sub tree data objects 
addition method uses match heuristics manually constructed ontology truly automatic 
ontology uses different set heuristics achieve better performance 
idea separator method similar separators general 
separators contain html tag insufficient samples tested separator tag forest expanded desired depth necessary 
support optional separators 
experimental results separator identification reported results wrapper generation reported 
results reported indicate low effectiveness recall precision extracting data records 
mdr identifies data regions finding existence multiple similar generalized nodes tag node generalized node collection child nodes tag node 
generalized node checked decide contains multiple records 
near perfect results recall precision reported mdr 
third party data set mdr lower performance method see section 
major reason discrepancy probably due fact mdr primarily designed handle tables 
addition definition record mdr slightly different srr 
mdr identify correct section search result records extracts records sections 
extract advertisement records 
furthermore mdr generate wrapper needs perform complex time consuming extraction result page 
practical dealing large number result pages user query metasearch engine context 
main difference method existing techniques method utilizes visual content features html tag structure regularities existing techniques html tag structures 
method sensitive misuse html tags 
method utilizes html tag structure differently 
example separators general wrapper generation process generating multiple candidate wrappers page selecting best wrapper page integrate wrappers multiple pages different 
method fully automated highly accurate average recall precision data sets respectively 
point similar studies experiments largest number search engines 
works visual information process web pages applications directly related search engine result extraction 
methods method different sets visual features 

fully automated technique generate wrappers extracting search result records result pages dynamically generated search engines 
technique utilizes visual content features result page displayed browser html tag structures html source file result page 
differentiates technique competing techniques similar applications 
experimental results indicate technique achieve high extraction accuracy 
plan utilize additional visual features font type color reduce reliance html tag structure 

acknowledgments supported part nsf iis iis 


nodose tool semi automatically extracting structured semistructured data text documents 
acm sigmod conference 
arasu garcia molina 
extracting structured data web pages 
acm sigmod conference june 
baumgartner flesca gottlob 
visual web information extraction lixto 
vldb conference 
bergman 
deep web surfacing hidden value 
white www com tutorials index asp liu pu 
fully automated object extraction system world wide web 
international conference distributed computing systems icdcs 
chang lui 
information extraction pattern discovery 
world wide web conference 
chang li zhang 
structured databases web observations implications 
technical report uiucdcs uiuc 
chen jamil wang 
automatic composite wrapper generation semi structured biological data table structure identification 
sigmod record june 
de rijke 
automatic wrapper generation web search engines 
conf 
crescenzi mecca merialdo 
roadrunner automatic data extraction large web sites 
vldb conference pp 

www cs binghamton edu meng metasearch html 
embley jiang 
ng 
record boundary discovery web documents 
acm sigmod conf 
gold 
language identification limit 
information control 
gu chen ma chen 
visual content understanding web adaptation 
int conf 
adaptive hypermedia adaptive web systems pp 
hsu dung 
generating finite state transducers semi structured data extraction web 
information systems 

www com kovacevic diligenti gori 
recognition common areas web page visual information possible application page classification 
icdm conference 
kushmerick weld doorenbos 
wrapper induction information extraction 
int joint conf 
ai 
laender ribeiro neto da silva teixeira 
brief survey web data extraction tools 
acm sigmod record 
liu grossman zhai 
mining data records web pages 
sigkdd 
liu pu han 
xwrap xml enabled wrapper construction system web information sources 
int conf 
data engineering 
meng yu liu 
building efficient effective metasearch engines 
acm computing surveys march pp 
muslea minton knoblock 
hierarchical approach wrapper induction 
int conf 
autonomous agents 
raghavan garcia molina 
crawling hidden web 
vldb conference italy 
ukkonen 
line construction suffix trees 
algorithmica 
wang lochovsky 
data extraction label assignment web databases 
www conference 
wu manber 
fast text searching allowing errors 
communications acm 
wu meng raghavan yu qian 
automatic incorporation search engines large scale metasearch engine 
ieee wic wi conference october 
yang zhang 
html page analysis visual cues 
th international conference document analysis recognition 
