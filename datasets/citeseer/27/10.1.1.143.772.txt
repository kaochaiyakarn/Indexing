translation bpmn bpel conceptual mismatch process modeling languages jan recker jan mendling queensland university technology margaret street brisbane qld australia recker qut edu au vienna university economics business administration vienna austria jan mendling wu wien ac 
business practice shows different process models employed various phases business process management life cycle providing different paradigm capturing representing business process domain 
significant efforts overcome process models providing complementary language standards process design bpmn execution bpel claim languages semantically integrated 
conceptual mapping languages remains unclear undecided bpmn diagram transformed bpel 
argue conceptual mismatch bpmn bpel needs identified order guide language integration process semantically 
analysis take account various perspectives business process management life cycle particular business technical analyst perspectives 
approach generic utilized guiding framework identifying conceptual mismatch business process modeling languages 
theory business process management bpm efforts follow certain life cycle phases development deployment business processes stages design implementation enactment evaluation 
principle design phase involves development conceptual process models business analyst perspective 
second step models serve input technical analysts concerned development technical process models implementation models form executable workflow specifications 
specifications serve templates enactment process instances deployed workflow engine 
lastly execution process monitored evaluated guide revision improvement process models part iteration life cycle 
business practice transition phases broken 
process design execution stages usually employ different modeling languages translation prone semantic ambiguities 
may cause loss design considerations execution models 
refer undesirable cases conceptual mismatch process modeling languages deployed different phases bpm life cycle 
accordingly transition phases important prerequisite process management life cycle particular business analyst technical analyst models 
business process modeling notation bpmn developed ambition bridge gap business analyst technical analyst providing standard visual notation executable bpel processes specifying formal mapping bpmn bpel 
fact specification document states bpmn creates standardized bridge gap business process design process implementation 
discuss course translation bpmn bpel far trivial 
specifically argue mapping issues arise conceptual mismatch process modeling languages assumption languages differ expressive power turn hinders translation models languages 
accordingly foremost objective discuss conceptual mismatch business analyst technical analyst process models identified 
despite focus bpmn bpel seek deliver generic solution builds established evaluation theories field process modeling 
forthcoming discussion second contribution provide guidance translation process models form transformation strategies deem promising overcoming identified mismatch 
proceed follows section briefly introduce bpel bpmn 
section discuss existing studies correspondence bpmn bpel show appears significant mismatch languages hinders counteracts translation specifications 
section derive multi perspective method identifying conceptual mismatch business process modeling languages apply bpmn bpel sections 
close section drawing 
background related bpel ws business process execution language web services essence extension imperative programming languages constructs specific bpm domain particular web service implementations 
version bpel released version currently process standardization oasis 
bpel process definition specifies technical details workflow offers complex web service build set elementary web services 
important concepts bpel process variables basic structured activities handlers 
variables store process data messages exchanged web services 
define mutual required port types message exchange declaring partner acts role defined partner link 
basic activities specify operations performed process 
include web service operations invoke receive reply 
activities assigning data values variables assign wait halt process certain time interval 
structured activities utilized definition control flow specify concurrency activities flow alternative branches switch loops 
structured activities nested links express synchronization constraints activities 
handlers defined order respond occurrence fault event compensation triggered 
details bpel refer specification 
bpmn nature executable languages bpel renders suited direct humans design manage monitor business processes enacted process aware information systems 
order provide standard visual notation business processes defined executable process language business process modeling notation version released may february approved omg final adopted specification 
intention bpmn designers develop modeling technique supports typical process modeling activities business technical analysts straightforward mapping executable workflow specifications bpel 
complete bpmn specification defines distinct language constructs plus attributes grouped basic categories elements 
flow objects events activities gateways basic elements create business process diagrams 
connecting objects inter connect flow objects different sorts arrows 
group activities separate categories different functional capabilities responsibilities different roles organizational departments 
artefacts may added diagram deemed appropriate order display related information processed data comments 
details bpmn refer specification 
related correspondence bpmn bpel momentum bpmn bpel industry practice triggered significant related research languages 
section focus studies correspondence seemingly complementary languages 
trying support claim bpmn provides visualization mechanism bpel subsection bpmn specification pp 
presents mapping bpmn bpel informally prose precise algorithm definition required structural properties missing 
example mapping simple feasibility mapping general case demonstrated 
worthwhile noting available software system architect www com support generation bpel code bpmn diagrams limited subset bpmn 
academic perspective led proposal transformation strategies process models focus case bpmn bpel 
general approach translate standard workflow models refer bpel exploiting bpel construct event handler 
authors admit approach holds core subset bpmn uml activity diagrams 
approach adopted specific context bpmn bpel 
approach relies discovery process patterns bpmn models tried mapped bpel structured activities 
approach stage holds advanced bpmn models closely related forthcoming discussion specifically take account mismatch bpmn bpel respect representation control flow patterns 
interesting approach discussed authors discuss different strategies translating graph oriented models bpmn specifications bpel :10.1.1.169.7370
strategies different deem suitable starting point devising concrete mappings identification understanding mismatch languages refer back 
conceptual mismatch bpmn bpel discussion related reveals existing transformation strategies comes defining general mappings 
argue conceptual mismatch exists assume root cause translation problems 
forthcoming discussion rests observations context bpel bpmn come different backgrounds technical analyst versus address business analyst 
employ different paradigms capturing relevant aspects business processes turn leads manifestation conceptual mismatch respect semantic expressiveness languages 
bpel bpmn employed different stages bpm life cycle 
requirements stages need taken consideration identifying potential conceptual mismatch 
observations argue specifically different bpm lifecycle perspectives need taken consideration devising transformation process models 
particular business analyst perspective transition bpmn bpel preserve semantic information represented domain viz minimize avoid loss semantic representation information 
regard wand weber widely acknowledged framework realworld domains concepts modeling languages able represent 
words transition languages establish high extent matching domain representation capabilities languages 
technical analyst perspective underlying workflow execution engine determines specification processes 
regard kiepuszewski state control flow central aspect business process needs sufficiently supported language 
transition languages establish high extent matching control flow support 
authors field state underlying process representation paradigm block oriented vs graph oriented process representation source conceptual mismatch process modeling languages 
domain representation capabilities control flow support permit statements certain relevant aspects process expressed process representation paradigm influences aspects expressed 
forthcoming argumentation method identifying conceptual mismatch business technical analyst process models able identify types conceptual mismatch 
employ established evaluation frameworks representation theory section specification domain representation capability mismatch workflow patterns framework section specification control flow support mismatch 
addition established theories section introduces mismatch identification method set transformation strategies potentially translate process models :10.1.1.169.7370
selection mentioned evaluation frameworks reasoned reasonable maturity rigorous development structured evaluation approach foremost established track record field process modeling 
overviews refer instance respectively 
particular seek deliver general contribution case bpmn bpel high level dissemination theories field process modeling reasons selection allows wider uptake approach cases process modeling languages previously evaluated bpml wsci 
identifying domain representation capability mismatch evaluation representation theory rests assumption computerized information systems essentially representations real world systems models contain necessary representations real world constructs including properties interactions 
bww representation model short bww model contains clusters constructs deemed necessary faithfully provide complete clear representations semantics information systems domains things including properties types things states assumed things events transformations occurring things systems structured things 
complete description refer instance 
evaluation modeling languages means representation theory seeks reveal construct deficit languages inhibits making statements certain domain aspects 
type evaluation investigate types construct deficit particular language bpmn language bpel able express argue particular form deficit constitutes mismatch turn potentially impacts translation models languages 
means expressive process modeling language features representation construct supported expressive process modeling language translation modeled process detailed language cost losing expressive power semantic information represented domain 
purpose draw individual analyzes bpmn bpel provide cluster oriented discussion differences bpmn bpel terms construct deficit see table 
representation theory offers systematic analytical method overlap analysis thorough detailed evaluation completeness overlap domain representations combination languages 
consider evaluation scope see interesting important research challenge overlap analysis order comprehensively clarify type mismatch bpmn bpel 
table 
support bww model constructs bpmn bpel 
adapted bww construct bpmn bpel things including types properties thing property general particular hereditary emergent intrinsic mutual non binding mutual binding attributes class kind states assumed things state conceivable state space state space state law stable state unstable state history events transformations occurring things event conceivable event space event space external event internal event defined event poorly defined event transformation transformation stability condition corrective action acts coupling systems structured things system system composition system decomposition system structure system environment subsystem level structure table summarizes findings analyzes 
table indicates respective language provides construct supporting representa tion respective bww model construct indicates support bww model construct language construct indicates lack support respective bww model construct 
seen table number potential domain representation capability mismatches bpmn bpel indicated varying support bww model constructs 
paragraphs discuss discrepancies respect potential translation process models bpmn bpel 
translation things thing denotes elementary notion representation theory 
perceived world constituted things imaginary real grouped sets species things class kind respectively 
table reveals bpmn capable representing things classes kinds things 
bpel supports representation classes things viz bpel semantic statements groups things specific instances 
means object instances specific organizational entity specific business partner specific application system possibly need generalized classes instances aggregate level 
hand limited general representation properties things bpmn broken specialized subtypes properties bpel see table 
translation states state thing vector property values thing point time 
table reveals bpmn bpel lack expressive power modeling states assumed things 
finding may problematic general denote area concern respect translating bpmn diagrams bpel languages basically share capabilities regards explicit state representation 
translation events transformations occurrence event changes state thing 
transformation mapping states thing 
table reveals bpmn expressive power bpel representation events transformations occurring things 
high extent redundancy bpmn terms transformation event modeling viz bpmn offers overlapping constructs lacks orthogonality 
goes alongside finding translation bpel potentially needs map certain dedicated event subtypes bpmn single event type bpel instance external events 
transformations differentiated bpel implying transformation representations bpmn potentially need annotated information attributes sufficiently specify mapping appropriate bpel construct 
translation systems things composed system may subsystems interfaces environment system 
table reveals bpmn support modeling systems structured things excels support provided bpel 
bpmn specification system developed especially demarcation environment system environment disaggregation subsystems system decomposition unambiguously translatable executable bpel specifications may require extra modeling specification effort avoid resulting bpel models 
particular mapping bpmn pool lane constructs bpel partner construct require attention semantics pool lane extensive bpel counterpart 
identifying control flow support mismatch development workflow patterns framework www 
com triggered bottom analysis comparison workflow management software 
goal bring insights expressive power underlying process execution languages 
identified control flow patterns specify atomic chunks behavior capturing specific process control requirements 
identified patterns span simple complex control flow scenarios provide taxonomy control flow perspective workflows processes 
taxonomy turn widely benchmark analysis comparison process specification execution languages 
workflow patterns framework draw control flow support mismatch bpmn bpel drawing individual analyzes bpmn bpel 
table summarizes findings analyzes 
table indicates direct support pattern indicates partial support indicates lack support 
table 
support control flow patterns bpmn bpel 
adapted workflow patterns bpmn bpel workflow patterns ctd 
bpmn bpel basic control flow 
implicit termination 
sequence multiple instances patterns 
parallel split 
mi synchronization 
synchronization 
mi priori design time knowledge 
exclusive choice 
mi priori runtime knowledge 
simple merge 
mi priori runtime knowledge adv 
synchronization state patterns 
multiple choice 
deferred choice 
synchronizing merge 
interleaved parallel routing 
multiple merge 
milestone 
discriminator cancellation patterns structural patterns 
cancel activity 
arbitrary cycles 
cancel case table reveals number mismatches bpmn bpel regards support various control flow concepts 
paragraphs discuss discrepancies cluster oriented manner respect potential translation process models bpmn bpel 
translation basic state cancellation patterns table reveals bpmn bpel support patterns manner 
means representations control flow patterns bpmn unambiguously translatable bpel 
finding supports approach taken mappings bpmn bpel defined support various control flow patterns 
translation advanced synchronization patterns table reveals bpmn provides full support patterns 
bpel lacks support multiple merges discriminators 
particular bpel support invocation sub processes supported bpmn 
specific problem bpel missing support discriminator pattern points workflow process wait incoming branches complete activating subsequent activity 
discriminators bpmn require considerable effort translating statements expressible bpel bear semantics handling control flow 
translation structural patterns bpel support arbitrary cycles 
activity capture structured cycles loops entry point exit point 
potential area concern translating arbitrary cycles bpmn bpel code equivalent control flow semantics 
translation multiple instances patterns table reveals bpmn bpel support patterns manner pattern 
means bpmn representation workflow multiple instances number instances activity initiated instances synchronized proceeding rest process needs translated expressive form bpel ws desired control flow support design considerations modeled process prone getting lost 
identifying process representation paradigm mismatch argue transformation models consider representational capabilities control flow pattern support underlying process representation paradigm 
context essentially paradigms depict processes process modeling language graph oriented block oriented representation 
bpmn follows graph oriented paradigm arcs define partial order activities gateways express split join behavior 
bpel utilizes block oriented paradigm express control flow nested structured activities enhanced restricted graph concepts bpel process arbitrary synchronization expressed links long links acyclic 
cycles allowed modeled structured loops activity 
graph languages bpmn languages similar bpel abstracted called process graphs bpel control flow respectively order pattern number instances known stage run time initiation instances started :10.1.1.169.7370
identify transformation strategies constraints application strategies 
context process graph called structured split gateways match join type loops entered xor join exited xor split 
furthermore process graph acyclic node reached 
bpel process structured include links 
transformation strategies applicable process models fulfil certain properties see table 
formal definition structured cyclic process graphs structured bpel control flow refer :10.1.1.169.7370
defines algorithms transformation strategy sketched 
table 
transformation strategies applicable models transformation strategies bpmn bpel structured bpmn acyclic bpmn bpmn transformation strategies bpel bpmn structured bpel element preservation flattening element minimization hierarchy preservation structure identification hierarchy maximization structure maximization bpel transformation strategies bpmn bpel transformation strategies see table require cycles bpmn process model structured loops entering xor join exiting xor split 
idea element preservation strategy map bpmn elements suitable bpel elements nested bpel flow define control flow links 
gateways mapped bpel empty activities serve target source multiple input join output links split 
element minimization strategy takes result element preservation strategy replaces empty activities links containing transition conditions 
structure identification strategy works similar transformation proposed bpmn specification 
structured blocks identified graph reduction rules defined :10.1.1.169.7370
strategy applicable control flow mapped bpel structured activities 
structure maximization strategy applied derive bpel process structured activities possible nested flow additional synchronization constraints 
table emphasizes strategy generate bpel arbitrary bpmn graph bpel permit modeling arbitrary cycles 
transformation strategies bpel bpmn transformation bpel bpmn imposes restrictions strategy 
flattening strategy utilized transform bpel control flow bpmn 
bpel structured activities flattened gateways arcs nesting 
hierarchy preservation strategy applied descriptive semantics structured activities preserved resulting bpmn 
type structured activity mapped respective subprocess bpmn 
hierarchy maximization strategy maps bpel structured activities sub processes link crossing borders 
table shows ar bpel processes mapped bpmn flattening strategy 
contributions discussed conceptual mismatch bpmn bpel 
general multi perspective method identifying conceptual mismatch process modeling languages employed different stages bpm life cycle 
particular identification method applies established evaluation theories innovative transformation strategies order identify potential mapping issues form domain representation capability mismatch showed representation theory compare representational capabilities different process modeling languages terms divergences expressiveness various aspects domain semantics 
control flow support mismatch showed workflow patterns framework identify discrepancies process modeling languages terms support various aspects control flow 
process representation paradigm mismatch showed different representation paradigms underlying process modeling languages require different transformation strategies sketched implications different strategies 
analysis conceptual mismatch bpmn bpel reveals bpmn provides richer set modeling constructs 
translation technical bpel bpmn problem opposite direction 
hand bpmn meant utilized visual notation bpel processes bpmn constructs expressed bpel translation imply loss information 
example missing bpel support range control flow patterns bpmn support may translation bpmn bpel lead execution semantics intended conceptual model 
consequence process modeling bpmn restricted constructs equivalent bpel necessary level bpel order handle constructs 
order business process life cycle better option restrict bpmn extend bpel extensions may supported existing standard compliant process engines 
directions research perceive starting point detailed analysis bpmn bpel combinations languages approach 
particular see need comparatively assess varying domain representation capabilities control flow support bpmn bpel detail example means overlap analysis 

zur multi paradigm process management 
eds proceedings caise workshops 
vol 

faculty computer science information technology riga technical university riga latvia 
van der aalst conceptual process models running workflows holistic approach configuration enterprise systems 
proceedings th pacific asia conference information systems thailand 
bpmi org omg business process modeling notation specification 
final adopted specification www bpmn org 

andrews curbera goland klein leymann liu roller smith thatte weerawarana business process execution language web services version 
specification bea systems ibm microsoft sap ag systems 
white bpmn model bpel process 

dumas ter hofstede translating standard process models bpel 
pohl ed th conference advanced information systems engineering luxembourg grand luxembourg springer forthcoming 
kiepuszewski ter hofstede van der aalst fundamentals control flow workflows 
acta informatica 
van der aalst dumas ter hofstede translating bpmn bpel 
bpm center report bpm org 
mendling lassen zdun transformation strategies block oriented graph oriented process modelling languages 
lehner eds wirtschaftsinformatik 
band 
verlag berlin germany 
wand weber deep structure information systems 
information systems journal 
wand weber ontological expressiveness information systems analysis design grammars 
journal information systems 
van der aalst ter hofstede kiepuszewski barros workflow patterns 
distributed parallel databases 
recker indulska green study evolution representational capabilities process modeling grammars 
pohl ed th conference advanced information systems engineering luxembourg grand luxembourg springer forthcoming 
van der aalst dumas ter hofstede pattern analysis bpmn extensive evaluation control flow data resource perspectives 
bpm center report bpm www org 
recker indulska green process modelling techniques get better 
comparative ontological analysis bpmn 
campbell underwood eds th australasian conference information systems 
australasian chapter association information systems sydney australia 
green indulska manning candidate interoperability standards ontological overlap analysis 
technical report university queensland 
van der aalst dumas ter hofstede analysis web services composition languages case bpel ws 
song liddle ling scheuermann eds conceptual modeling er 
volume lecture notes computer science 
springer chicago illinois 
