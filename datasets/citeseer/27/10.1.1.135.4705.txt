lisp symbolic computation international journal kluwer academic publishers manufactured netherlands discoveries continuations john reynolds john reynolds cs cmu edu school computer science carnegie mellon university pittsburgh pa keywords semantics continuation continuation passing style 
give brief account discoveries continuations related concepts van wijngaarden mazurkiewicz morris wadsworth morris fischer 
early history continuations basic concepts independently discovered extraordinary number times 
due poor communication computer scientists rich variety settings continuations useful underlie method program transformation continuation passing style style definitional interpreter defining language interpreter written language style denotational semantics sense scott strachey 
settings representing meaning rest program function procedure continuations provide elegant description variety language constructs including call value goto statements 

background early appearance algol inspired research implementation formal definition programming languages 
aspects research critical precursors discovery continuations 
ability algol jump blocks procedure bodies forced implementors realize representation label include environment 
peter naur 
order specify transfer control general supply static description destination 
dynamic description environment stack 
set 
define call program point 
john reynolds retrospect program point representation continuation 
subtle realization return addresses treated footing procedure parameters 
choice words dijkstra remarked name parameters information subroutine called main program function arguments parameters 
data grouped term link considered parameters link comprises data necessary continuation main program subroutine completed 
algol compiler designed naur rn jensen return addresses label parameters regarded program points treated essentially way 
precursor continuations occurred peter landin secd machine state transition interpreter language applicative expressions syntactically similar untyped lambda calculus call value order evaluation 
captured acronym secd state interpreter consisted components stack environment 
dump encoded remaining computation executed control exhausted retrospect representation continuation 
able translate algol applicative expressions landin extended expressions interpreter assignment operation control operator express translation goto labels 
extended secd machine result applying value containing dump 
modern terminology operator provided means embedding continuations values ancestor operations reynolds escape catch call cc scheme 

van wijngaarden apparently earliest description continuations van wijngaarden director mathematisch centrum amsterdam september ifip working conference formal language description languages held baden bei wien austria 
written version talk transcript discussion followed appears conference proceedings 
discoveries continuations van wijngaarden goal formulate preprocessor translate algol restricted sublanguage 
final stage preprocessing call transformation proper procedures continuation passing style cps attendant elimination labels goto statements 
earlier stage preprocessing replaced function procedures proper procedures 
van wijngaarden described transformation provide procedure declaration extra formal parameter specified label insert body goto statement leading formal parameter 
correspondingly label statement procedure statement labeled provide label corresponding extra actual parameter 
inserting labels goto statements block transformed equivalent block form ln path execution statement si ends goto statement 
misunderstood opaque prose van wijngaarden description transformation erroneous block statement larger block provision inserting jumps inner block statement inner block 
defect easily remedied replacing inner blocks calls corresponding parameterless procedures morris applying van wijngaarden transformation 
van wijngaarden completely harmless insert block unlabeled goto statement leading statement block statement executed 
far increased number labels goto statements 
perform operations 
write label procedure 

replace colon semicolon 

strike goto 
exchange ensuing discussion shows van wijngaarden understood clearly transformation continuationpassing style just method eliminating labels goto john reynolds mcilroy 
afraid went bit far elimination goto changes temporal existence values 
goto replaced procedure call means entire history computation maintained 
bit concerned limitation 
van wijngaarden suppose certain implementation procedure call mind say 
implementation difficult take care goto statement 
trick devised find actual execution program equivalent set statements procedure returns calls ends ends procedures program ends 
procedure gets 
means procedure implementation bother enable procedure return 
difficulty procedure implementation 
simple exactly goto called words 
retrospect may surprising van wijngaarden presentation continuations continuation passing style standard concepts computer science 
participants discussion presentation included dijkstra hoare mccarthy mcilroy strachey conference attendees included hm elgot landin nivat 
idea didn take hold 
particular landin referred van wijngaarden transformation treatment algol mention heard morris colloquium 
see section 
christopher strachey connected wadsworth continuations cite van wijngaarden descriptions 
see section 
discussion presentation reveals deep philosophical differences van wijngaarden researchers particularly van wijngaarden syntax belief proper procedures basic functions 
stronger barrier communication probably failure motivate cps transformation 
mcilroy remember talk insightful tour de force reductionism 
van wijngaarden argument clearly 
idea understood discoveries continuations ramifications seen originator 
van wijngaarden offered practical examples continuation passing theoretical application save trick proving isolated known result value continuations se come 
van wijngaarden discovery cps transformation continuations define emphasize actual concept continuation 
surely difficult recognize connection appearance continuations settings 
appears van wijngaarden continuations 
final talk remembered mcilroy talk direct important consequence computing 
inspiration notion goto dijkstra spent evening constructing realistic examples programs goto coffee break day 
exercise posited quit statement break cpl 
coffee break celebrated letter editor history computing 
van wijngaarden said goto unnecessary dijkstra stretched point say goto inconvenient 
lesson stuck 

mazurkiewicz december mazurkiewicz warsaw circulated working entitled proving algorithms tail functions membership ifip working group included strachey 
publication version submitted information control april revised november published april 
mazurkiewicz dealt automaton concept algorithm consisting set labels subset terminal labels states partial transition function proposed semantics algorithm called tail function partial function satisfying john reynolds curried tail function environment mapping labels command continuations just continuation semantics imperative language labels goto commands 
mazurkiewicz concept algorithm limited programming language hierarchical structure reveal general nature continuations 
example syntactic entity meaning function accepting continuations 
regards algorithm command variables range labels states tail function just direct semantics command 
hard say mazurkiewicz discovery continuations precursor 
clear inspired wadsworth 
see section 
mazurkiewicz published papers concerned technique tail functions 

morris november lockwood morris graduate student stanford university teaching university essex working dissertation gave colloquium queen mary college london entitled formal language descriptions programming languages peter landin invited morris give colloquium 
talk morris gave variety definitional interpreters call value functional language extensions include assignments labels 
notes distributed talk published issue journal 
final interpreter notes continuations treat labels jumps kind 
specifically morris calls dumps abstractions landin dumps expression continuations calls label values command continuations 
secd machine circular interpreters morris calls eval eval interpreter continuations defines call value language regardless language written uses call value call name 
discoveries continuations looking back morris comments think main inspiration programming continuations functions described lisp programmer manual prop 
remember seeing mccarthy sort thing programming examples may happened 
believes inspired lesser extent failure mechanisms snobol cogent 
discovering continuations working definition snobol 
recall just working idea function needed continuation arguments case success case failure 
think choice continuations easier recognize just 
author fortune attend morris talk 
exposure continuations fact styles definitional interpreters varying abstractness degree circularity 
ideas genesis definitional interpreters eventually continuations 

wadsworth bit story simply told person visiting edinburgh university december conversation rod burstall chris wadsworth graduate student oxford university summarized lockwood morris colloquium queen mary 
soon grasped nature morris ideas wadsworth working 
fact wadsworth discovered continuations describe behavior labels goto soon realized method sufficed describe call value constructs constrain order evaluation 
working definitional interpreters working denotational definitions dana scott new lattice theoretic semantics 
words working trying get denotational semantics mathematical semantics called jumps christopher strachey supervision 
devised various elaborate schemes struck satisfactory 
john reynolds came mazurkiewicz 
gave spark needed 
coined term continuation concept approach resulted 
spark earlier months got thinking backward seeing express denotationally 
reading mazurkiewicz gave key insight turned difficult messy simple 
sudden insight introduce concept meaning rest program 
word continuations getting right word catalyst coined word clicked rest semantic domains semantic equations followed matter days 
having word easy natural write discuss disseminate thought times liked shorter word 
wadsworth delayed publishing continuations pursuing dissertation topics denotational models lambda calculus graph reduction 
apart usual reasons things get delayed strachey felt live try promising idea publishing dominant practice nowadays 
felt think idea originator allow time check get reasonably polished bothering world results may transient value 
eventually strachey described ideas seminar institut de recherche informatique automatique may written version published revised slightly expanded version appeared report oxford programming research group 
specifically reports gave continuation style denotational definition imperative language labels jumps including jumps blocks embedded expressions 
texts written strachey underlying method continuations due wadsworth 
illustrative language include procedures appears wadsworth understood treatment function procedures 
discoveries continuations 
morris half james morris jr 
university california berkeley distant cousin morris submitted communications acm described cps transformation programs algol language specifically substantial subset algol 
transformation similar van wijngaarden described detail avoided erroneous treatment nested blocks treated function proper procedures footing converting function procedures proper procedures preliminary step 
morris pointed addition eliminating labels goto transformation eliminate occurrences procedures returned complex results arrays procedures labels assuming applied richer language permitted procedures 
referee recognized basic idea anticipated van wijngaarden consequence rejected 
place morris published brief letter editor describe program transformation detail demonstrated eliminate procedures returning complex values 
letter noted conventional stack implementation transformed program quickly exhaust stack 
retrospect morris comments simply remember detailed process discovered continuation method 
originally conceived pure lambda calculus technique undoubtedly years living peter landin operator set stage 
laboriously translated idea algol idea accessible readers 

fischer acm conference proving assertions programs las cruces new mexico january michael fischer mit gave entitled lambda calculus schemata :10.1.1.15.8355
final complete version appears issue journal 
extended call value lambda calculus conditional expressions uninterpreted constants primitive functions described transformation functional language continuation passing style 
john reynolds fischer purpose show arbitrary program transformed cps transformation form implemented stack storage allocated execution procedure deleted procedure exits 
course price noted morris stack pops program execution 
fischer notable proof semantics continuations cps transformation preserves meaning appropriate sense 
result setting lambda expressions denote closures 
results meaning continuations setting lambda expressions denote continuous functions lay years 

appearance papers fischer january morris reynolds august continuations widely known :10.1.1.15.8355
discovery 
february kamal graduate student university wisconsin teaching new york university working dissertation short computer science conference held columbus ohio 
presentation described novel form language definition algol programs translated untyped lambda calculus 
submitted acm symposium principles programming languages rejected extended describe treatment procedures 
summer including treatment procedures published preliminary report 
moved rensselaer polytechnic institute troy new york completed wisconsin dissertation 
barkley rosser followers including student george ph advisor 
felt extensions lambda calculus landin resorted establishing correspondence algol calculus difficult correspondence deriving properties programs 
task translate programming constructs pure lambda 
assignment example modeled substitution avoiding notion memory address fetch store operations 
discoveries continuations treat imperative aspects algol devised translation cps transformation 
says idea continuation called program remainder 
inspired morris thesis particular attempting get outline pp 

continuations opened path deal block structure jumps labels 
power significance continuations confirmed overcoming difficulties call name construct explicated immediate remote continuations denote calling called contexts 
connected program remainders earlier discoveries continuations morris wadsworth published papers arising dissertation 
approach modeling algol languages joint franz winkler david wise 

summary best author knowledge continuations closely related concepts discovered van wijngaarden repeatedly rediscovered wide variety settings intellectual geographical occasionally rediscovered 
main mystery van wijngaarden early failed widely understood 
speculate known certainty particularly deaths strachey may van wijngaarden february 
early history continuations sharp reminder original ideas rarely born full generality communication simple straightforward task 
comments vastly improved author wishes kamal jaco de bakker olivier danvy edsger dijkstra matthias felleisen andrzej filinski michael fischer dan friedman peter landin mazurkiewicz john mccarthy douglas mcilroy lockwood morris james morris peter naur dana scott tom steel guy steele carolyn talcott mads tofte chris wadsworth 
john reynolds 
kamal 
simple lambda calculus model programming languages 
aec report new york university 

kamal 
combinatory logic model programming languages 
phd thesis university wisconsin 

kamal 
lambda calculus model programming languages simple constructs 
journal computer languages 

kamal 
lambda calculus model programming languages ii 
jumps procedures 
journal computer languages 

kamal 
electronic mail reynolds 
july 

kamal winkler franz 
lambda calculus model generating verification conditions 
technical report cs rensselaer polytechnic institute june 

kamal wise david standard semantics algol style block structure call name 
melton austin editor mathematical foundations programming semantics springer verlag berlin 

clinger william friedman daniel wand mitchell 
scheme higher level semantic algebra 
nivat maurice reynolds john editors algebraic methods semantics cambridge university press cambridge england 

dijkstra edsger recursive programming 
numerische mathematik 

dijkstra edsger go statement considered harmful 
communications acm march 
letter editor 

farber david griswold ralph ivan snobol string manipulation language 
journal acm january 

fischer michael lambda calculus schemata 
proceedings acm conference proving assertions programs 
discoveries continuations 
fischer michael lambda calculus schemata 
lisp symbolic computation 
appears issue 

landin peter mechanical evaluation expressions 
computer journal january 

landin peter correspondence algol church lambda notation 
communications acm february march 

landin peter generalization jumps labels 
report uni vac systems programming research august 

landin peter programming languages 
communications acm march 

mazurkiewicz proving algorithms tail functions 
information control april 

mazurkiewicz iteratively computable relations 
bulletin de acad mie des sciences rie des sciences math matiques 

mazurkiewicz recursive algorithms formal languages 
bulletin de acad mie des sciences rie des sciences math matiques 

mccarthy john lisp programmer manual 
mit press cambridge massachusetts 

mcilroy douglas 
electronic mail reynolds 
july 

milne robert 
formal semantics computer languages implementations 
phd thesis oxford university 
report prg technical tcf 

milne robert strachey christopher 
theory programming language semantics 
chapman hall london 
volumes 
published john wiley new york 

morris lockwood 
electronic mail reynolds 
july 
john reynolds 
morris lockwood 
formal language descriptions 
lisp symbolic computation 
appears issue 
original manuscript dated november 

morris jr james lambda calculus models programming languages 
phd thesis mit december 
report 
mac tr 

morris jr james eliminating non local transfers algol languages 

unpublished 

morris jr james bonus van wijngaarden device 
communications acm august page 

morris jr james electronic mail reynolds 
july 

naur peter 
design algol compiler part bit 
reprinted goodman richard editor annual review automatic programming vol 
pergamon press oxford 

naur peter report algorithmic language algol 
communications acm may 

naur peter revised report algorithmic language algol 
communications acm january 

reynolds john cogent programming system 
association computing machinery proceedings th national conference 

reynolds john simple typeless language principle completeness concept 
communications acm may 

reynolds john definitional interpreters higher order programming languages 
proceedings acm annual conference 

reynolds john relation direct continuation semantics 
jacques editor automata languages programming springer verlag berlin 

reynolds john semantics domain flow diagrams 
journal acm july 
discoveries continuations 
scott dana outline mathematical theory computation 
proceedings fourth annual princeton conference information sciences systems 

scott dana outline mathematical theory computation 
technical monograph prg oxford university computing laboratory november 

steele jr guy lewis sussman gerald jay 
lambda ultimate imperative 
ai memo massachusetts institute technology march 

strachey christopher 
mathematical semantics deal full jumps 
th orie des algorithmes des langages de la programmation inria rocquencourt france 

strachey christopher wadsworth christopher continuations mathematical semantics handling full jumps 
technical monograph prg oxford university computing laboratory january 

sussman gerald jay steele jr guy lewis 
scheme interpreter extended lambda calculus 
ai memo massachusetts institute technology december 

van wijngaarden 
recursive definition syntax semantics 
steel jr editor formal language description languages computer programming north holland amsterdam 

wadsworth christopher semantics pragmatics lambda calculus 
phd thesis oxford university september 

wadsworth christopher electronic mail amr sabry 
december 

wadsworth christopher electronic mail reynolds 
july 
