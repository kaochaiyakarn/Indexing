square root number field sieve phong nguyen ecole normale sup rieure laboratoire informatique rue ulm paris cedex phong nguyen ens fr 
number field sieve nfs asymptotically fastest factoring algorithm known 
spectacular successes factoring numbers special form 
method adapted general numbers applied rsa number setting new world record factorization 
nfs undergone modifications appearance 
modifications concerns stage computation square root huge algebraic number product hundreds thousands small ones 
problem satisfactorily solved appearance algorithm peter montgomery 
unfortunately montgomery published preliminary version algorithm description implementation 
variant algorithm compare original algorithm discuss complexity 
number field sieve powerful known factoring method 
introduced john pollard factor numbers form modified handle numbers form re small positive successfully applied fermat number see 
version algorithm called special number field sieve contrast general number field sieve handle arbitrary integers 
factors integers heuristic time exp cg ln ln ln cg 
composite integer wish factor 
assume prime power 
zn denote ring nz 
factoring algorithms number field sieve attempts find pairs mod 
pair gcd nontrivial factor probability nfs selects primitive polynomial cjx irreducible integer modn 
denote df homogenous form buhler ed ants iii lncs pp 

springer verlag berlin heidelberg phong nguyen root andk corresponding number field 
natural ring homomorphism induced mod 
mapped defined integer invertible zn factor trivial 
prime factorization replace induced mod 
means sieving nfs finds integer pairs ai bi finite nonempty set ai bi ai bim squares respectively 
ai bi ai bim modn ai bi ai bim mod extracting square roots gives rise suitable pair 
nfs specify evaluate square roots 
square root integer ai bim mod known prime tions ai bim 
extracting square root ai bi complicated subject 
note ai bi 
facts stressed cardinality large roughly equal square root run time number field sieve 
larger digits 
integers ai bi coprime fit computer word 
prime factorization ai bi known 
prime number dividing cd ai bi know set consisting roots modulo divides cd 
remainder organized follows 
section review methods solve square root problem stage algorithm 
section presents definitions results 
section describe square root algorithm variant montgomery original algorithm point differences similarities 
discuss complexity section 
remarks implementation section appendix includes missing proofs 
methods method 
algebraic integer ring unique factorization domain ai bi factored primes units allows extract square root 
unfortunately ring necessarily arbitrary number fields encounters 
computing system fundamental units obvious task see 
method applied success factorization 
square root number field sieve brute force method 
factorizes polynomial 
explicitly write algebraic number instance expanding product gets rational coefficients polynomial degree 
serious obstructions coefficients keeps track development product digits 
single computation coefficients dominate cost nfs 
able compute remains factorize 
overcome obstruction working integers rationals monic polynomial cd algebraic integer cd root square square denotes formal derivative integral coefficients polynomial degree obtained chinese remainder theorem inert primes irreducible modulo prime exist inert primes generally true 
avoids computations large numbers 
factorize polynomial coefficients remain huge second obstruction holds 
furthermore large number primes required chinese remainder theorem due size coefficients 
method 
method overcomes second obstruction 
odd degree remarks able distinguish square roots square specifying norm 
square root positive norm 
prime factorization known integer efficiently computed modulo prime inert mod computed expanding mod 
chinese remainder theorem recovers coefficients 
show complexity algorithm best ln time required multiply bit integers 
algorithm appears impractical sets requires odd degree 
montgomery strategy viewed mix methods 
bears resemblance square root algorithm sketched pages 
works values particular assumption apart existence inert primes number field 
algebraic preliminaries algebraic number cd algebraic integer 
ring integers abelian group fractional ideals forx xm xm element generated xm 
prime ideal vp adic valuation maps define numerator denominator ito integral ideals numer vp denom vp vp denote norm ideal phong nguyen norm algebraic number nk denoting distinct embeddings define complexity ito numer denom say simpler 
say fractional ideal square exists unique denoted ifp pvm prime ideal factorization square vi square vm ifx square follow notations recall results 
order prime mean non zero prime ideal lp unique collection ranges set primes group homomorphisms lp non zero element lp finitely lp nk ranges set primes lp coincide vp 
cd cd ci 
know iz order fact 
discriminant 
recall prime number defined set consisting roots modulo divides cd 
note denoted 
pairs consisting prime number element bijective correspondence degree primes intersection kernel ring homomorphism fp sends intersection kernel ring homomorphism fp sends 
prime number element anda coprime integers 
br mod andr andr define ep vp vp denotes ordinary adic valuation 
set ep cd pep product ranging pairs prime 
furthermore coprime integers degree prime corresponding pair ep lp ep vp cd ifr theorem 
coprime integers prime number 
prime ideal vp ifp divide square root number field sieve 
unique prime ideal pr lies degree prime ideal qr corresponding pair pr degree prime ideal pr furthermore vpr lqr 

finite ep 
divide cd finite exists pr 

divides cd finite 

divides cd 
proof 
degree prime ideal corresponding pair divide proposition pages pr qr pr qr pr ranges primes lying qr denotes residual degree 
proves pr unique degree prime ideal 
proposition page lqr qr lp lpr 
qr vpr lqr 
know basis ideal qr 
pr lies qr basis system generators pr 
proved 
definition sees ci ci proves 
simplifies formula 
obtains definition ep intersection prime lies page proves degree prime ideal exists qr 
proves pr 
finite infinite finite 
proves 
formula expressing lq obtain 
square root algorithm recall want compute square root algebraic number ai bi 
algorithm split follows 
transform order simpler 
running time rest algorithm heuristically depends 

compute prime ideal factorization prime factorization ai bi 

approximate lattice reductions construct sequence algebraic integers signs sl small algebraic integer 
thought square guessing error approximation 

square 
compute brute force method 
able explicitly write small algebraic integer 
phong nguyen obtain product algebraic integers exponents enables compute explicitly calculating hopefully factors formalized differently montgomery algorithm uses strategy 
steps change 
heuristic approach step effective practice 
new process step derived section 
montgomery process efficient heuristic 
step core algorithm 
modified step integral basis systematic manner power basis 
simplifies algorithm proofs 
heuristically improve performances 
postpone computation error step montgomery included step updating computations approximation 
decreases running time easier estimate necessary computations step step avoided approximation perfect checked additional computations 
new algorithm suited analysis montgomery algorithm complexity determined display significantly better performances methods 
computing number field ring integers 
algorithm need ideals algebraic integers 
compute integral basis general hopeless task see survey number fields nfs encounters small degree large discriminant done called round algorithms 
order primes pi round algorithm enlarge order primes new order pi maximal pi 
primes divides determine primes partial factorization suffices factorization form df factorized 
theoretically partial factorization hard find complete factorization unfortunately discriminant larger number wish factor 
takes random large number removes small prime factors trial division elliptic curves practice result quite 
furthermore case true properties ideals encounter practice fact ideal product prime ideals 
order satisfies properties ideals coprime index order assume integral basis computed 
square root number field sieve algebraic numbers ideals 
integral basis represent algebraic number vector qd integral representation 
define xd xi xi wecan represent algebraic number polynomial degree power representation 
dealing algebraic integers integral representation preferable 
represent integral ideal integral matrix respect basis system generators 
case basis hermite normal form hnf square matrix efficiency reasons 
refer algorithms concerning algebraic numbers ideals 
simplifying principal ideal square ai bi ei ei 
ei ai bi recover look square identity 
fortunately ai bi ei ai bim ei mod replaces computation computation selecting ei smaller ai bi share prime ideals nk ai bi share primes consequence sieving 
address optimization problem selecting ei small 
distribution ei computed formula comes known factorization ai bi primes ai bi ei ep ai bi vp cd cd simplest method random strategy selects randomly ei 
method greedy strategy step select ei best complexity put ai bi numerator denominator 
behaves better random strategy 
best method far practice simulated annealing known probabilistic solution method field combinatorial optimization 
configuration space energy function maps ln corresponds define neighbourhood ei ei ei 
try minimize algorithm performances depend parameters initial final temperatures select randomly set choose randomly set 
set exp set 
set probability 
phong nguyen repeat previous step method behaves better practice previous methods theoretical estimates hardly 
ideal square root forget initial set ai bi ei wish obtain product ideals exponents lying ideal large represented single matrix 
done factoring prime ideals fractional ideal ai bi ei simplify problem factorization linear expression ai bi coprime ai bi 
factorization obtained general ideal factorization algorithms see slow algorithms times 
fortunately ourself known factorization ai bi ai bi bd previous section 
say prime number exceptional divides index 
say normal 
naturally prime ideal said exceptional resp 
normal lies exceptional resp 
normal prime 
number prime factors md exceptional prime ideals 
compute exceptional prime ideals example decomposing exceptional primes buchmann lenstra algorithm described constants allowing compute efficiently valuation primes 
theorem get prime ideal factorization follows prime number dividing cd exists finite satisfying ep exceptional compute valuation exceptional ideals lying normal 
finite ep unique pick prime ideal pr exponent ep pr pick prime ideal exponent ep vp cd 
decompose product ideals exponent necessarily gives 
montgomery different ideal factorization process see introducing special ideal correctness proved 
square root approximation ideal square root approximate huge ideal get approximation iterative process selecting small part ideal step small part alternatively square root number field sieve taken numerator denominator 
lift integral ideal algebraic integer lattice reduction techniques 
associate variables step algebraic number 
considered square error current approximation 
indicating take denominator numerator huge original ideal 
fractional ideal approximation integral ideal bounded norm 
differentiates algebraic integer 
integral ideal bounded norm 
initialize variables ai bi ei 
step approximation sense smaller andg simpler 
steps reduced unit ideal algebraic integer sufficiently small integral representation determined explicitly chinese remainders square root constructed brute force method 
start step need know approximations giving approximation nk 
prime ideal factorization 
hermite normal form 
value 
information obtained initial values variables 
step consists 
select integral ideal fixed norm multiplying integral ideal dividing numerator resp 
denominator resp 
compute hermite normal form 

pick nice lattice reductions 

define 
allows easily update necessary information compute approximate selection order obtain prime ideal factorization simply updating exponents prime ideal factorization 
directly computed 

store integral representation 
explain meaning different variables detail parts 
induction sl words sl approximation step 
square 
notice 
phong nguyen ideal selection 
try select norm close possible constant set iterative process explained 
adopt greedy strategy 
know prime ideal factorization sort prime ideals norm appearing factorization 
start keep multiplying possibly largest prime ideal power manner 
practice strategy behaves prime ideals lie small primes 
time pick prime ideal power multiply update exponent prime ideal factorization obtain prime ideal factorization 
approximation small find small norm close 
equals numerator denominator integer selection 
look nice element integral ideal say algebraic integer looks ideal 
looking mainly mean norm alike 
really means norm element multiple norm integral ideal 
select order small possible finding short element ideal 
fortunately ideal lattice exists famous polynomial time algorithm lattice reduction lll 
features lll algorithm computation lll reduced basis computation short vector respect euclidean norm norm number field 
reduce basis hnf 
words reduce matrix integral representations respect elements basis 
hnf matrix triangular balanced applying lll reduction coefficients smaller better spread 
assume obtained reduced basis specify constant nk define linear transformation maps vi vd totally real 
complex roots complex conjugate pairs replace definition respectively 
montgomery implementation basis expressed respect power basis integral basis real matrix attractive 
corresponding proposition 
matrix satisfies 
determinant image coordinates absolute value equal 
square root number field sieve 
determinant image coordinates absolute value equal 
proof 
image coordinates matrix representation respect basis determinant absolute value equal proving 
assume totally real determinant unchanged 
absolute value determinant image coordinates equal nk denotes discriminant elements form basis discriminant 
initial determinant absolute value cd nk conclude definition apply second lll reduction matrix 
practice apply lll reduction matrix rounded integral matrix notice upper matrix integral entries integer arithmetic preferable 
initialize maximal value lll reduction algorithm supposedly performs 
previous proposition ensures lll reductions perform 
choose algebraic integer defined coordinates column matrix output second lll reduction 
result prove approximation stage terminates 
theorem 
exists computable constant depending second lll reduction outputs algebraic integer nk independent inparticular proof quite technical left appendix 
approximation 
iterative process 
necessarily happens numer denom close norms step 
number steps obtain roughly logarithmic 
precisely show greater largest prime appearing log steps necessary equal 
perform iteration equal 
assume gl 
implies hl algebraic integer norm hl bounded prove coefficients small bound nk converse false instance power unit 
phong nguyen proposition 
exists computable constant depending algebraic number bounded proof 
injective linear transformation maps andk vector spaces finite dimension exists consider euclidean norms induced integral basis canonical basis represents 
computed inverse gives upper bound note lemma see appendix proves bounding embeddings bounding coefficients 
linear transformation precisely chosen reduce embeddings coordinates reduce sum inverses embeddings 
proof explains obtains practice small algebraic integer 
computing error wish compute algebraic integer norm product formula know term 
partial products large directly formula deal integers chinese remainder theorem choose primes 
prime prime inert irreducible modulo divide nk 
integral representation mod computed 
computation expensive large 
general easy find primes 
find inert primes 
particular cases inert primes exist general lot inert primes see 
select primes divide nk 
primes satisfy assumption 
selected primes pn coefficients bounded product pn obtain coefficients coefficients modulo pi 
practice primes suffice 
factorize reasonable time 
initial square root follows need compute avoid excessively large numbers 
obtain square identity hopefully factors complexity analysis discuss complexity stage algorithm respect growth 
assume independent implies square root number field sieve ai bi ai bi bounded independently 
recall sieving ep computed 
simplification simulated annealing method easily show stage takes time 
ideal square root expensive operations decomposition exceptional primes computation valuations primes 
decomposition exceptional primes done independently 
valuation efficiently computed takes time independent 
exceptional prime numbers appear times stage takes time 
square root approximation showed number required steps ln 
ai bi bounded ln iso 
unfortunately say complexity step step takes little time practice 
bound independently entries matrix lll reduced 
bound entries upper square matrix entries lower unable prove embeddings algebraic number get better 
perform lll reductions matrices small dimension reductions take little time entries extremely large 
practice approximation takes time 
computing error primes independently stage takes time 
unfortunately unable bound embeddings algebraic integer seen previously 
practice embeddings small 
sees difficult prove complexity algorithm 
holds montgomery algorithm 
practice algorithm behaves linear time surprising unable prove moment 
lack proof mainly know particular expression 
instance know expressed product exponents algebraic integers bounded integral representation 
implementation remarks implementation 
number ideals appearing huge hash table represent normal prime ideal corresponding pair 
exceptional prime ideals require place exceptional primes 

approximation process obtain hermite normal form needs compute system generators normal prime ideals 
computation fast 
phong nguyen 
avoid overflows compute logarithms 
checks ln ln nk doubt precision 

choose constant compute constant formulas proof theorem perform lll reductions obtain practical value notice knows estimate number iterations 

know primes sufficient compute algebraic integer compute constant shown proof proposition gives bound coefficients integral representation 

algebraic integer small root unity 
ideal principal know approximation embeddings generators 
generator unusual short norm corresponding lattice surprise lll algorithm finds generator making equal case algebraic integer equal try bypass computation error apply directly find factors algorithm implemented version library developed henri cohen december completed factorization digit cofactor quadratic polynomials 
dependency relations 
took square root code hours square roots mhz sparc 
algorithm suitable implementation solve square root problem number field sieve 
algorithm variant montgomery square root 
modified square root approximation process integral basis power basis allows integers rationals search algebraic integer ideal notin submodules 
introduced simulated annealing method ideal simplification process 
results proposed efficient ideal square root process proved validity 
postponed computation error avoid useless computations 
running time algorithm negligible compared stages number field sieve 
practice algorithm behaves linear complexity note heuristic things proved complexity 
open problem determine precisely complexity algorithm 

am particularly grateful hendrik lenstra explanations number field sieve 
wish jean marc peter montgomery enlightening discussions 
square root number field sieve philippe helpful comments carrying experiments 
proof theorem theorem related classical result geometry numbers states integral ideal exists algebraic integer nk wherem denotes minkowski constant relies minkowski convex body theorem viewed generalization pigeon hole principle 
idea montgomery pigeon hole principle estimate precisely component 
thing need know lll reduced bases bd lll reduced basis lattice det bi det det denotes lattice determinant denotes euclidean norm 
notation vectors different number coordinates 
xi algebraic number notation denote th coordinate proof assume totally real simplify definition similar reasoning applies cases different choice constants 
lemma 
exists computable constant depending integer jc proof 
xi xi xi 
triangle inequality cauchy schwarz obtain xi xi max proves implies definition 
phong nguyen lemma 
exists computable constants depending integral ideal algebraic integer satisfying 
mn mn mn proof 
nition defi satisfies 
number nd ni satisfies ni mn mn 
nid mn positive integer pigeonhole principle exists distinct nd andn ni nid mn id mn define ni ni proves triangle inequality furthermore ni equal nid mn id mn square root number field sieve proves triangle inequality 
jc jc mn definition dc 
algebraic integer output second lll reduction implies implies mn nk hand mn hand arithmetic geometric mean inequality collect inequalities mn 
nk cd mn max cd max 
completes proof max phong nguyen 
cohen olivier gp computer package 
obtained ftp math bordeaux fr 

buchmann lenstra jr approximating rings integers number fields 
th 
nombres bordeaux 

buhler lenstra factoring integers number field sieve 
pages 

cohen course computational algebraic number theory 
springer 


computing square root number field sieve 
pages 

cowie huizing lenstra montgomery world wide number field sieve factoring record bits 
proceedings asiacrypt vol 
lecture notes computer science springer verlag pp 


huizing implementation number field sieve 
experimental mathematics 

lenstra lenstra jr development number field sieve vol 
lecture notes mathematics 
springer verlag 

lenstra lenstra jr lov sz factoring polynomials rational coefficients 
math 
ann 


lenstra lenstra jr manasse pollard number field sieve 
pages 

lenstra lenstra jr manasse pollard factorization ninth fermat number 
math 
comp 


lenstra jr factoring integers elliptic curves 
ann 
math 


lenstra jr algorithms algebraic number theory 
bull 
amer 
math 
soc 


montgomery square roots products algebraic numbers 
draft june 
available ftp ftp cwi nl pub sqrt ps gz 

montgomery square roots products algebraic numbers 
mathematics computation half century computational mathematics ed proceedings symposia applied mathematics american mathematical society pp 


algorithmic algebraic number theory 
cambridge university press 

pollard factoring cubic integers 
pages 

reeves modern heuristic techniques combinatorial problems 
blackwell scientific publications 
