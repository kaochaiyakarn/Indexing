mapping gnutella network properties large scale peer peer systems implications system design ripeanu ian foster adriana iamnitchi cs uchicago edu foster mcs anl gov anda cs uchicago edu computer science department university chicago th st chicago il 
mathematics computer science division argonne national laboratory cass ave mcs argonne il 
despite excitement generated peer peer paradigm surprisingly rapid deployment applications quantitative evaluations systems behavior 
open architecture achieved scale self organizing structure gnutella network interesting architecture study 
applications gnutella builds application level virtual network routing mechanisms 
topology virtual network routing mechanisms significant influence application properties performance reliability scalability 
built crawler extract topology gnutella application level network 
analyze topology graph evaluate generated network traffic 
major findings gnutella pure power law network current configuration benefits drawbacks power law structure gnutella virtual network topology match underlying internet topology leading ineffective physical networking infrastructure 
findings guide propose changes gnutella protocol implementations may bring significant performance scalability improvements 
believe findings measurement analysis techniques broad applicability systems provide unique insights system design tradeoffs 
keywords peer peer system evaluation self organized networks power law network topology analysis 

peer peer systems emerged significant social technical phenomenon 
systems provide infrastructure communities share cpu cycles seti home entropia storage space napster freenet gnutella support collaborative environments groove 
factors fostered explosive growth systems low cost high availability large numbers computing storage resources second increased network connectivity 
trends continue paradigm bound popular 
traditional distributed systems networks aim aggregate large numbers computers join leave network frequently permanent network ip addresses 
pure systems individual computers communicate directly share information resources dedicated servers 
common characteristic new breed systems build application level virtual network routing mechanisms 
topology virtual network routing mechanisms significant impact application properties performance reliability scalability cases anonymity 
virtual topology determines communication costs associated running application individual hosts aggregate 
note decentralized nature pure systems means properties emergent properties determined entirely local decisions individual resources local information dealing self organized network independent entities 
considerations motivated conduct detailed study topology protocols popular system gnutella 
study benefited gnutella large existing user base open architecture effect public gnutella network large scale uncontrolled testbed 
proceeded follows 
captured network topology generated traffic dynamic behavior 
raw data perform macroscopic analysis network evaluate costs benefits approach investigate possible improvements allow better scaling increased reliability 
measurements analysis gnutella network driven primary questions 
concerns connectivity structure 
research shows networks diverse natural networks formed molecules cell networks people social group internet organize nodes links tiny number nodes called hubs large number links 
finds networks organizational pattern power law networks display unexpected degree robustness ability nodes communicate unaffected extremely high failure rates 
error tolerance comes high price networks vulnerable attacks selection removal nodes provide network connectivity 
show gnutella pure power law network preserves fault tolerance characteristics dependent pure power law network highly connected nodes easy single attack 
second question concerns gnutella virtual network topology maps physical internet infrastructure 
reasons analyzing issue 
question crucial importance internet service providers isp virtual topology follow physical infrastructure additional stress infrastructure consequently costs isps immense 
point raised various occasions far know provide quantitative evaluation application internet topology mis match 
second scalability application ultimately determined efficient underlying resources 
instrument measure gnutella network 
distributed search solutions dss group published results gnutella surveys project focused analyzing characteristics participating resources :10.1.1.160.7346:10.1.1.160.7346
data analyze gnutella users behavior analyze search protocols power law networks forecast network growth simulations 
network crawling analysis technology developed independently goes significantly terms scale spatial temporal sophistication 
dss presents raw facts network analyze generated network traffic find patterns network organization investigate efficiency underlying network infrastructure 
rest structured follows 
section succinctly describes gnutella protocol application 
section introduces crawler developed discover gnutella virtual network topology 
section analyze network answer questions introduced previous paragraphs 
conclude section 
gnutella protocol design goals description gnutella protocol open decentralized group membership search protocol mainly file sharing 
term gnutella designates virtual network internet accessible hosts running gnutella speaking applications gnutella network measure number smaller private disconnected networks 
file sharing applications gnutella designed meet goals ability operate dynamic environment 
applications operate dynamic environments hosts may join leave network frequently 
achieve flexibility order keep operating transparently despite constantly changing set resources 
performance scalability 
paradigm shows full potential large scale deployments limits traditional client server paradigm obvious 
scalability important applications exhibit economists call network effect value network individual user scales total number participants 
ideally increasing number nodes aggregate storage space file availability grow linearly response time remain constant search throughput remain high grow 
reliability 
external attacks cause significant data performance loss 
anonymity 
anonymity valued means protecting privacy people seeking providing unpopular information 
gnutella nodes called developers perform tasks normally associated servers clients 
provide client side interfaces users issue queries view search results accept queries check matches local data set respond corresponding results 
nodes responsible managing background traffic spreads information maintain network integrity 
order join system new node initially connects known hosts available com 
attached network having open connections nodes network nodes send messages interact 
messages broadcasted sent nodes sender open tcp connections simply back propagated sent specific connection reverse path taken initial broadcasted message 
features protocol facilitate broadcast back propagation mechanism 
message randomly generated identifier 
second node keeps short memory routed messages prevent re broadcasting implement back propagation 
third messages flagged time live ttl hops passed fields 
messages allowed network group membership ping pong messages 
node joining network initiates broadcasted ping message announce presence 
node receives ping message forwards neighbors initiates back propagated pong message 
pong message contains information node ip address number size shared files 
search query query response messages 
query messages contain user specified search string receiving node matches locally stored file names 
query messages broadcasted 
query responses back propagated replies query messages include information necessary download file 
file transfer get push messages 
file downloads done directly peers get push messages 
summarize member network node open connections nodes network 
dynamic environment gnutella operates nodes join leave network connections unreliable 
cope environment joining network node periodically pings neighbors discover participating nodes 
information disconnected node reconnect network 
nodes decide connect network local information entire network form dynamic self organizing network independent entities 
virtual application level network gnutella nodes open tcp connections links 
sections techniques developed discover network topology analyze characteristics 

data collection crawler developed crawler joins network uses membership protocol ping pong mechanism collect topology information 
section briefly describe crawler discuss issues related data collection 
crawler starts list nodes initiates tcp connection node list sends generic join message ping discovers neighbors contacted node pong messages receives reply 
newly discovered neighbors added list 
discovered node crawler stores ip address port number files total space shared 
started short publicly available list initial nodes time incrementally built list nodes active time 
developed sequential version crawler 
empirically determined optimal values connection establishment timeout connection listening timeout time interval crawler waits receive sent ping sequential crawl network proved slow hours small network nodes 
slow search speed disadvantages scalable dynamic network behavior means results obtained far network topology snapshot 
order reduce crawling time developed distributed crawling strategy 
distributed crawler client server architecture server responsible managing list nodes contacted assembling final graph assigning clients 
clients receive small list initial points discover network topology points 
large number clients easily order hundreds decided clients order reduce search 
techniques allowed reduce crawling time couple hours large list starting points discovered topology graph active nodes 
note conservative definition network membership exclude nodes reported part network crawler connect 
situation occur local configured allow limited number tcp connections node leaves network crawler contacts 

gnutella network analysis summarize gnutella network growth trends dynamic behavior section 
data gathered month period show gnutella overhead traffic decreasing generated traffic volume currently represents significant percentage total internet traffic major obstacle growth section 
continue macroscopic analysis network study connectivity patterns section mapping gnutella topology underlying networking infrastructure section 
growth trends dynamic behavior presents growth gnutella network month period 
ran crawler november february march may 
november largest connected component network hosts grew hosts march hosts may 
gnutella failure scale predicted time number nodes largest network component grew times admittedly low base month interval 
worth mentioning number connected components relatively small largest connected component includes active nodes discovered 
number nodes largest network component gnutella network growth gnutella network growth 
plot presents number nodes largest connected component network 
data collected nov feb march may 
significantly larger network memorial day may apparently people hunt shared music online 
messages message frequency ping push query minute generated traffic messages sec nov classified message type minute period 
note overhead traffic ping messages serve maintain network connectivity formed traffic 
true user traffic query messages 
overhead traffic decreased may generated traffic 
records successive crawls investigate dynamic graph structure time 
discover nodes leave network hours nodes alive hours 
dynamic behavior important find appropriate tradeoff discovery time crawler 
increasing number parallel crawling tasks reduces discovery time increases burden application 
obviously gnutella map crawler produces exact snapshot network 
argue network graph obtain close snapshot statistical sense properties network size diameter average connectivity connectivity distribution preserved 
estimate gnutella generated traffic modified version crawler eavesdrop traffic generated network 
classify message type traffic goes randomly chosen link november 
adjusting message size find average total traffic bytes user generated traffic query messages 
rest overhead traffic maintain group membership ping pong messages contains non standard messages push messages broadcast compliant latest version protocol 
apparently june engineering problems solved arrival newer gnutella implementations generated traffic contains query messages ping messages insignificant levels message types 
distribution node node shortest path length shortest path terms number links traversed message travel order get node 
nodes hops away message time live ttl flooding routing algorithm employed links support similar traffic 
verified theoretical measuring traffic multiple randomly chosen nodes 
result total gnutella generated traffic proportional number connections network 
measurements estimate total traffic excluding file transfers large gnutella network gbps connections nodes gnutella network times kbps connection tb month 
put traffic volume perspective note amounts total traffic internet backbones december reported 
infer volume generated traffic important obstacle growth efficient underlying network infrastructure crucial better scaling wider deployment 
interesting feature network month period network scaling orders magnitude average number connections node remained constant 
assuming invariant holds possible estimate generated traffic larger networks find scalability limits available bandwidth 
percent node pairs search node node shortest path hops distribution node node shortest paths 
line represents gnutella network crawl 
note largest network diameter longest node node path node pairs hops away number links graph connectivity number nodes average node connectivity 
point represents gnutella network crawl 
note network grows average number connections node remains constant average node connectivity connections node 

connectivity reliability gnutella network 
power law distributions 
analyzing global connectivity reliability patterns gnutella network important keep mind self organized network behavior users decide maximum number connections node support nodes decide connect drop add connection local information 
research shows natural networks molecules cell species ecosystem people social group organize called power law networks 
networks nodes links tiny number hubs large number links 
specifically power law network fraction nodes links proportional network dependent constant 
structure helps explain networks ranging ecosystems internet generally highly stable resilient prone occasional catastrophic collapse 
nodes molecules internet routers gnutella sparsely connected little depends large fraction taken away network stays connected 
just highly connected nodes eliminated system crash 
implication networks extremely robust facing random node failures vulnerable planned attacks 
diversity networks exhibit power law structure properties interested determine gnutella falls category 
presents connectivity distribution nov 
data noisy due small size networks easily recognize signature power law distribution connectivity distribution appears line log log plot 
confirm early gnutella networks power law 
measurements show networks tend move away organization nodes low connectivity form pure power law network 
networks power law distribution preserved nodes links nodes fewer link follow constant distribution 
num 
nodes log scale node connectivity distribution number links log scale connectivity distribution november 
series points represents gnutella network topology discovered different times month 
note log scale axes 
gnutella nodes organized power law network 
number nodes log scale node connectivity distribution number links log scale connectivity distributions march 
series points represents gnutella network topology discovered march 
note log scale axes 
networks crawled may june show similar pattern 
speculate reasons peculiar distribution 
gnutella users technically savvy users early technology adopters 
percentage gnutella users modem connection significantly lower internet users population users connect kbps :10.1.1.160.7346
distribution machines better internet connectivity dsl follows power law 
second lack incentives limit traffic users perception connections better query results leads users employ connections network supports 
interesting issue impact new multi modal distribution network reliability 
believe uniform connectivity distribution preserves network ability deal random node failures reducing network dependence highly connected easy single attack nodes 
speculate group devoted users maintain small number gnutella nodes server characteristics visible power law distributions 
nodes large number open connections provide content available network 
nodes higher availability average alive successive crawls 

internet infrastructure gnutella network peer peer computing brings important change way internet enables computers sitting edges network act clients servers 
result applications change radically amount bandwidth consumed average internet user 
internet service providers isps flat rates bill clients 
applications ubiquitous break existing business models isps force change pricing scheme 
considerable traffic volume generated applications see gnutella estimates previous section crucial perspective scalability impact network employ available networking resources efficiently 
gnutella store forward architecture virtual network topology extremely important 
larger mismatch network infrastructure application virtual topology bigger stress infrastructure 
rest section investigate self organizing gnutella network topology maps physical infrastructure 
example highlight importance fitting virtual topology 
hosts participate gnutella network 
black solid lines represent underlying network infrastructure blue dotted lines denote application virtual topology 
left picture virtual topology closely matches infrastructure 
distribution message generated node nodes involves communication physical link 
right picture virtual topology functionally similar match infrastructure 
case distribution involves communications link 
different mappings gnutella virtual network topology blue dotted arrows underlying network infrastructure black solid lines 
left picture perfect mapping 
message inserted network node travels physical link reach nodes 
right picture inefficient mapping 
distribution requires message traverse physical link times 
unfortunately prohibitively expensive compute exactly mapping gnutella internet topology due inherent difficulty extracting internet topology computational scale problem 
proceed high level experiments highlight mismatch topologies networks 
internet collection autonomous systems connected routers 
ass turn collections local area networks single technical administration 
isp point view traffic crossing borders expensive local traffic 
gnutella connections link nodes located nodes located top ass 
result indicates gnutella generated traffic crosses borders increasing costs unnecessarily 
second experiment assume hierarchical organization domain names mirrors internet infrastructure 
example communication costs hosts uchicago edu domain significantly smaller uchicago edu sdsc edu underlying assumption domain names express sort organizational hierarchy organizations tend build networks exploit locality hierarchy 
order study gnutella virtual topology maps internet partitioning defined domain names divide gnutella virtual topology graph clusters subgraphs high interior connectivity 
flooding routing algorithm gnutella clusters load generated 
interested see clusters map partitioning defined domain naming scheme 
simple clustering algorithm connectivity distribution described earlier define clusters subgraphs formed hub adjacent nodes 
clusters nodes common merge 
clustering done assign nodes included cluster largest cluster form cluster nodes included cluster 
define entropy set containing hosts labeled distinct domain names log log probability randomly picking host domain name define entropy clustering graph size clustered clusters ck sizes ck 
ci 
ck 
base reasoning property matter clusters ck chosen 
clustering matches domain partitioning find ck level conversely clustering randomness initial set entropy remain largely unchanged 
essentially entropy function measure partitions applied set nodes match partition uses information contained domain names second uses clustering heuristic 
note large class data mining machine learning algorithms information gains id similar argument build decision trees 
performed analysis topology graphs collected february march 
detected significant decrease entropy performing clustering decreases initial entropy value 
consequently conclude gnutella nodes cluster way completely independent internet structure 
assuming internet domain name structure roughly matches underlying topology cost sending data domain smaller sending data domains conclude self organizing gnutella network underlying physical infrastructure efficiently 

summary potential improvements social circumstances fostered success gnutella network change network diminish size 
rare ideas simply go away 
despite excitement generated paradigm surprisingly rapid deployment applications quantitative evaluations systems behavior 
open architecture achieved scale self organizing structure gnutella network interesting architecture study 
measurement analysis techniques systems enhance general understanding design tradeoffs 
analysis shows gnutella node connectivity follows multi modal distribution combining power law quasi constant distribution 
property keeps network reliable pure power law network assuming random node failures harder attack malicious adversary 
gnutella takes precautions ward potential attacks 
example network topology information obtain easy obtain permit highly efficient denial ofservice attacks 
form security mechanisms prevent intruder gather topology information appears essential long term survival network 
estimated june network generates tb month simply remain connected broadcast user queries 
traffic volume represents significant fraction total internet traffic growth gnutella network particularly dependent efficient network usage 
documented topology mismatch self organized application level gnutella network underlying physical networking infrastructure 
believe mismatch major implications scalability internet equivalently isp business models 
problem solved gnutella similarly built systems reach larger deployment 
see directions improvement 
argued efficient designs exploit particular distributions query values locality user interests 
various gnutella studies show distribution gnutella queries similar distribution requests internet follow zipf law note zipf formulation widely distributions expressed power law distributions 
proxy cache mechanism web context useful applications context 
nodes dynamic network grouped user interest query caching scheme bring larger performance improvements 
second direction improvement replacement query flooding mechanism smarter expensive terms communication costs routing group communication mechanisms 
schemes proposed fall category systems tapestry propose structured application level topology allows semantic query routing 
believe promising approach preserve benefit power low characteristics shown emerge gnutella ad hoc network topology 
way preserve dynamic adaptive character gnutella network decrease resource network bandwidth consumption dissemination schemes epidemic protocols mixed random query forwarding 
collected large amount data environment gnutella operates plan data simulation studies protocol alternatives 

grateful larry conor mcgrath mitchell alain roy zhang insightful comments generous support 
research supported part national science foundation contract itr 

faloutsos faloutsos faloutsos power law relationships internet topology sigcomm 
adar huberman free riding gnutella monday vol 
october 
gnutella protocol specification 
dss clip com pdf 
dss group gnutella bandwidth barrier dss clip com nov 
saroiu gummadi gribble measurement study peer peer file sharing systems university washington technical report uw cse july :10.1.1.160.7346
adamic lukose huberman search law networks 
phys 
rev 
broder kumar maghoul raghavan rajagopalan stata tomkins wiener graph structure web th international www conference may amsterdam 
barabasi albert 
emergence scaling random networks science 
todd hidden cost interactive week february 
katz shapiro systems competition network effects journal economic perspectives vol 
pp 

cover thomas elements information theory wiley 
st arnaud scaling issues internet networks technical report barab si albert jeong power law distribution world wide web science 
albert jeong barab si tolerance complex networks nature 
hong performance peer peer harnessing power disruptive technologies ed 
oram 
reilly associates 
coffman odlyzko internet growth moore law data traffic handbook massive data sets abello editors kluwer 
han kamber data mining concepts techniques morgan kaufmann august 
economist invention easy bit economist technology quarterly june 
sripanidkulchai popularity gnutella queries implications scalability february 
ratnasamy francis handley karp shenker scalable content addressable network proceedings sigcomm san diego usa 
rhea wells eaton geels zhao weatherspoon kubiatowicz maintenance free global storage oceanstore ieee internet computing vol pg 
