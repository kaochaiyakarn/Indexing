perfectly way probabilistic hash functions preliminary version ran canetti lambda daniele micciancio omer reingold probabilistic hash functions hide partial information input introduced 
new cryptographic primitive regarded function offers perfect wayness sense having access function value input equivalent having access oracle answers correct input queried answers 
constructions primitive originally called oracle hashing re named perfectly way functions certain strong variants diffie hellman assumption 
constructions perfectly way functions constructions claw free permutation oneway permutation 
constructions simple efficient point attractive practical point view 
traditionally way functions guarantee infeasible compute entire preimage function value 
ruled output way function leaks substantial information preimage say half bits preimage 
fact deterministic function inevitably yields information preimage information 
wants sure function value determines unique preimage yielding information preimage 
course seemingly contradictory requirements hold computational sense 
perfect wayness lambda ibm watson research center 
email canetti watson ibm com mit laboratory computer science 
done ibm watson research center 
supported part darpa contract dabt 
email theory lcs mit edu dept applied mathematics computer science weizmann institute science rehovot israel 
research supported clore scholars award israel science foundation administered israeli academy sciences 
email reingold wisdom weizmann ac il property attractive context cryptographic hashing wants sure hash value yields little information possible preimage 
fact assumed practice mathematical justification existing collision resistant hash functions md sha property 
attempt capture property cryptographic primitive called oracle hashing re named perfectly way hash functions proposed 
families probabilistic functions function family chosen random fixed known entire computation 
incorporates additional intrinsic randomness applications input yield different outputs 
randomization allows require achieve perfect wayness 
meaningfulness verification algorithm required recognizes hashes 
accept hash value accepted unique preimage 
second property captured requiring infeasible find collisions accept 
perfect wayness property captured roughly follows 
ix indicator oracle answers query answers 
evaluating predicate input easier evaluating predicate access ix 
intuitively means way gather information exhaustively searching domain value 
perfect wayness reminiscent semantic security encryption functions computed ciphertext computed scratch 
input taken uniformly large domain generally min entropy input distribution grows super logarithmically notions equivalent 
verifiability property allows adversary exhaustively search domain correct input 
domain small inputs non negligible probability input value may recovered full semantic security maintained 
formulations perfect wayness 
formulation easy implies corresponding ones 
parameters emerge salient discussing perfect wayness 
input distribution solutions distribution may course harder general maintain perfect input distribution low min entropy 
parameter number independently generated hash values input seen adversary 
parameters discussed 
describe applications perfectly way hash functions 
construction number theoretic assumptions specifically variants diffie hellman indistinguishability decisional diffie hellman assumption 
addition simple constructions existing cryptographic hash functions suggested 
constructions strong assumptions hash functions 
construct perfectly way hash functions general complexity assumptions 
construction assumes existence regular collision resistant hash functions turn constructed permutation pairs 
construction satisfies perfect wayness statistical sense computational assumptions involved 
verifiability met computationally 
construction simple permutation ss chosen random universal permutation family see regular length reducing collision resistant hash function ss hss ss verification straightforward 
convention second input stands intrinsic randomness 
claw free permutation pair ffl build collision resistant regular hash functions ffl resulting perfect way hash functions secure input distribution maxx gamma ffl construction resists adversaries see ffi hash values input ffi ffl 
construction existing collision resistant hash functions md sha yield construction practically appealing 
assumptions cryptographic hash function regularity 
second construction assumes existence way permutations 
provides perfect wayness computationally verifiability met unconditionally 
construction resists adversaries see polynomial number hash values input number known advance 
works uniformly distributed inputs 
construction uses new primitive families pseudorandom generators collision free 
construct pseudorandom generators way permutation generalizing construction hard core predicates 
constructions 
constructions collision freeness holds statistical sense collisions exist negligible probability 
collision free generators construct pseudorandom function families prfs generalizing construction 
function family collision free exist functions family value 
collision free prf family set hr fx describe combine constructions obtain best worlds 
obtain construction claw free pairs input distribution maxx gamma ffl adversary may see unknown priori polynomial number hash values input 
strong variant perfect wayness perfect wayness respect priori information defined 
constructions meets definition 
coming construction meets requirement general complexity assumptions interesting open problem 
applications perfectly way hashing 
foremost perfect way hashing interesting right 
addition applications described 
transforming encryption scheme designed idealized random oracle model real life encryption scheme 
application constructing signature schemes signature yield information signed document 
interesting application mentioned constructing commitment schemes commit value perfectly way hash function choose sufficiently long random value ae commitment ae denotes concatenation intrinsic randomness 
de commit simply ae straightforward see resulting commitment scheme semantically secure input ae large min entropy message 
consequently constructions imply alternatives known non interactive commitment schemes unconditional secrecy claw free pairs 
commitment scheme similar properties somewhat weaker assumptions 
application key exchange protocols wants hash secret key verify legitimate parties key making sure hash value reveals information adversary know key 
organization 
rest organized follows 
section formally define perfect way hashing 
section recall definitions probability theory review technical tools 
sections constructions 
preliminaries random variables set denote kxk infinity norm kxk ag dg 
min entropy gamma log kxk 
independent written prfx bg prfx ag bg 
subset xja conditional distribution defined prfx prfx ag prfx 
uniform probability distribution set denoted ud 
simply write un notice subset ua 
subset real numbers diameter defined diam maxx jx gamma yj 
random variables statistical difference defined delta prfx ag gamma 
statistical difference metric random variables properties satisfied delta delta delta delta delta delta triangle inequality 
notice possibly randomized function oe random variables delta oe oe delta 
particular oe bijection delta oe oe delta 
delta delta delta 
random variable set delta xja gamma 
subsections review main technical tools constructions universal hash functions pseudo randomness 
universal hashing function family set functions common domain range universal function family function family random variable oe oe defined randomly chosen oe distribution oe chosen uniformly random set functions oe oe jfj jrj 
usually called universal hash function family 
function regular random variable defined uniformly distributed uniform holds jg gamma jdj jrj 
notice universal function family regular fg fg oe delta oe fg universal 
positive integer universal function family universal function family domain range defined follows ae fi fi fi fi oe oe oek oe oek oe lemma see asserts universal hash function families smooth min entropy random variable lemma leftover hash lemma universal hash function family domain range random variable distribution huh uh satisfies delta huh uh huh uri kxk delta jrj kxk universal permutation family set permutations set random variable ss ss defined randomly chosen ss distribution ss chosen uniformly random set permutation 
ss ss jpj jrj gamma jrj 
universal permutation family extended universal function family follows 
lemma universal permutation family exists universal function family containing delta uf jdj 
proof set constant functions cx function defined cx 
define disjoint union jpj jdj gamma copies easily proved universal function family 
delta uf delta uf gamma jpj jfj jcj jpj jdj 
example set ssa ax bg operations computed gf universal permutation family set oea ax bg universal function family delta uf gamma cryptographic primitives function negligible written ssn polynomial exists 
functions write ssn jf gamma negligible probability ensemble sequence random variables xn say spread negligible probability ensemble computationally indistinguishable ppt predicate xn ssn yn function ensemble key space output length sequence function families kn fk collision resistant ppt algorithm probability prk fa fk fk negligible notice fk collision resistant output length super logarithmic lim log 
regular kn fk un permutation ensembles kn fk permutation 
hash function ensemble collision resistance usually interesting hash function ensembles 
function resp 
permutation ensemble ff universal universal function resp 
permutation family 
rest convention calligraphic letters denote function ensembles superscripted uppercase letter denote corresponding function families lowercase letters denote functions families 
abuse notation lowercase letters keys denoting corresponding functions 
polynomial time computable exist ppt key generation algorithm input outputs distribution uk polynomial time evaluation algorithm fk key kn input function ensembles consider assumed polynomial time computable 
length preserving polynomial time computable function lambda lambda way ppt algorithm un gamma un ssn 
polynomial time computable predicate hard core ppt un un ssn 
way function padded input jxj jrj function predicate hx delta yi inner product mod shown hard core padded way function 
claw free permutation pair pair polynomial time computable permutation ensembles common key space ppt algorithm prk fa fk gk ssn 
pseudorandom generator prg deterministic polynomial time algorithm jg jxj polynomial un computationally indistinguishable pseudo random function prf ensemble polynomial time computable function ensemble ff output length ppt predicate delta oracle access function pr fa ssn pr fa set functions perfectly way hashing definitions define publicly verifiable probabilistic hash functions add perfect wayness requirement 
informally publicly verifiable hash function probabilistic function exists publicly known verification algorithm recognizes hashes 
accepts hashes produced computationally hard find collisions different strings hash accepts hash simplicity formulate definitions nonuniform complexity setting 
ppt adversaries polynomial size circuits course algorithms propose uniform ppt 
notice collisions exist non uniform adversary collisions wired circuit 
formalization requires function families see details 
probabilistic function family ensemble short family ensemble key space randomness output length ensemble fh gn function families kn hk theta rn hk shorthand random variable hk ur 
ensemble polynomial time computable exist ppt sampling algorithms input output probability distributions kn ur respectively polynomial time evaluation algorithm hk key kn rn input string family ensembles considered assumed polynomial time computable 
definition family ensemble fh gn publicly verifiable exists polynomial time verification algorithm satisfying conditions finitely ffl completeness key kn input rn hk accept 
ffl collision resistance ppt adversary probability random choice kn outputs accept negligible collision resistance requirement previous definition strengthened weakened various ways 
example ask collisions exists alternatively relax collision resistance requirement second image collision resistance input adversary probability choice kn outputs collision negligible 
see details 
probabilistic hash functions considered public randomness hk hr assume inferred kn need explicitly denoted 
sense required shorten input function case verification algorithm straightforward hr zi accepts iff correctness condition ppt adversary prk fa hx ri ssn 
turn defining perfect wayness 
alternative notions 
notion called semantic perfect wayness see definition formalizes straightforward way intuitive concept 
attractive intuitive reminiscent semantic security encryption functions 
notion definition somewhat reminiscent security indistinguishability encryption functions 
introduces sequence variants variants implies preceding ones 
variants imply semantic perfect wayness 
second notion easier prove perfect wayness constructions notion 
case encryption functions know notions equivalent 
suspect 
seemingly stronger notion perfect wayness auxiliary information 
notion addressed concerned adversary may auxiliary partial information input sure hash value give adversary extra information 
deal notion 
notions variants perfect considered 
strong requirement sure perfect wayness achieved function hk kn key achieve collision resistance security achieved rn 
weak requirement allows security depend random choice 
strong requirement advantage chosen different parties interested maintaining collision resistance interested perfect wayness 
instance property required commitment scheme described 
scenarios weak notion may just useful 
definitions strong requirement 
definition ix indicator oracle ix ix 
definition distribution ensemble 
family ensemble fh gn semantically perfectly way pow respect ppt adversary exists ppt adversary predicate max kn gamma hk xn xn gamma xn xn delta negligible semantically pow respect semantically pow 
definition distribution ensemble 
family ensemble fh gn value perfectly way pow respect ppt max kn hk hk gamma hk hk negligible drawn independently xn drawn independently ur note definition sense distribution ensemble publicly verifiable ensemble value pow 
recall spread ssn 
value pow respect say multi value pow 
alternative formulation requirement follows 
adversary access oracle wishes distinguish experiments experiment value chosen predefined distribution fixed time oracle queried responds hk independently chosen random input 
second experiment oracle answers query hk independently chosen respective distributions 
required adversary unable distinguish experiments negligible probability 
easy see value pow respect distribution value pow respect distribution addition implication holds 
proposition family ensemble value pow respect distribution ensemble semantically pow respect proof sketch distribution ensemble 
show adversary exists adversary distinguisher kn predicates hk gamma ix hk hk gamma hk hk independently drawn xn independently drawn ur proposition follows 
adversary hash hk output single bit 
adversary randomly selects xn outputs hk 
distinguisher outputs iff 
xn define qx hk 
hk gamma ix hk gamma hk delta hc hk xi hc hk xi exp gamma exp qx varx qx hk hk gamma hk hk construction universal hashing section construct value pow hash function large say ffl ffl respect distribution sufficiently large 
construction simple input string randomize permutation chosen universal family hash result regular collision resistant hash function 
output length sufficiently smaller min entropy input distribution 
compress required input distribution harder guarantee collision resistance 
construction achieves perfect wayness statistical computational sense 
theorem fl collision resistant regular hash function ensemble output length universal permutation ensemble positive integer valued function delta 
probabilistic function ensemble key randomness ss defined ss hss ss value pow respect input distributions min entropy gamma log delta 
proof clearly collision resistant collision ss easily compute collision ss ss 
prove value pow 
simplicity concentrate case 
probability ensemble min entropy gamma log 
show statistical difference delta xn xn xn pair independent hashes message pair hashes independently chosen messages negligible lemma extended universal function family delta gamma repeatedly applying triangle inequality fact delta delta gamma possibly randomized function bound statistical difference delta xn xn xn delta gamma define universal function family recall universal family oe delta oe fg 
applying triangle inequality bound term sum quantities delta xn xn delta xn gamma gamma delta xn delta xn delta gamma delta gamma inequalities follow lemma 
notice collision resistant lim log delta gamma gamma delta gamma negligible proof theorem general value straightforward generalization proof 
precise statement obtained way probability ensemble min entropy gamma log delta statistical difference independent hashes message hashes independently chosen messages bounded delta delta gamma gamma delta gamma delta negligible show obtain regular collision resistant hash function ensemble claw free permutation pair ff pair functions string delta delta delta rm define function delta delta delta rm key space ff fk delta polynomial 
define function ensemble key space fk fk hk def immediate polynomial delta function ensemble regular collision resistant 
ffl gamma ffl theorem obtain corollary corollary claw free permutation pairs exists constants ffl ffl ffl value pow hash function respect distribution min entropy xn ffl pow hash function just defined commitment scheme described basic ingredients commitment scheme described collision resistant hashing universal functions 
construction different way tools combined goal achieved resulting functions 
particular commitment scheme need hash function regular achieve attempt achieve perfect wayness 
prf construction section multi value pow function ensemble respect uniform input distribution 
construction assumes way permutations exist 
addition construction achieves collision resistance statistical computational sense 
main idea input key pseudorandom function output value function random point hr fx chosen uniformly random prf ensemble 
easily follows definition prf ensemble probabilistic hash function hr fx satisfies security uniform input distribution 
necessarily collision resistant possible find collisions form fx fy 
example fk ignore bit pseudo random 
case triplet differ bit collision hr fx hr fx order obtain collision resistance notion collision resistant prf tribe 
set prf families random family tribe hard find functions family input 
formal definition follows definition prf tribe ensemble tribe keys sequence sets ff function families ff common key space kn output length polynomial size adversary max tn fi fi fi fi pr kn fa delta gamma pr fa delta fi fi fi fi ssn set functions ff collision resistant polynomial size adversary pr tn fa ssn exists theorem easily follows definitions 
theorem ff collision resistant prf tribe ensemble tribe keys ln function keys probabilistic function ensemble key ln randomness defined hr multi value pow respect uniform input distribution 
ff toone 
notice definition pseudo randomness function rely random choice tribe key perfect wayness hash function theorem rely choice key 
described section property needed applications pow 
consider weaker definition prf tribe ensemble tribe key important pseudo randomness 
require polynomial size adversary pr tn kn fa delta ssn pr tn fa delta hash function theorem somewhat weaker pow hash function 
function sufficient applications 
collision resistant prf families show build collision free prf tribe ensemble way permutation 
collision resistance collision freeness holds strong statistical sense define prf tribe ensemble ff gn chosen random tn high probability 
construction prf ensemble variant goldreich goldwasser micali pseudo random function 
construction prf family built length doubling prg 
note construction resp 
resulting prf family collision free resp 

prg imply collision freeness construction 
consider particular prg construction 
precisely define family prove resulting prf high probability choice prg 
definition prg family rely yao prg permutation predicate define delta delta delta gamma hard core prg 
simplified variant section define prove construction collision free prf tribe ensemble 
order illustrate main techniques describe simpler construction 
construction gives weaker notion security prf tribe ensembles discussed 
construction tribe key pseudorandomness just collision freeness 
recall goldreich levin hard core predicate defined hx delta yi inner product mod 
denote br predicate br 
way permutation sequence uniformly distributed bit strings 
define generator value delta delta delta gamma 
proof yao prg goldreich levin theorem hard see ssn ni addition generator properties show collision freeness 
permutation 

pair bit strings pr fg gamma true gamma gamma pr ifb gamma gamma 
define tribe ensemble follows theorem prg 
way permutation 
rn tuple ri sequence containing strings bits 
denote gi generator defined 
ff tribe ensemble defined xn gamma gamma polynomial size adversary pr fa delta ssn pr fa delta uniformly chosen 
function 
probability choice tribe key exist gamma proof sketch pseudo randomness proven essentially way 
prove collision freeness show pair probability choice tribe key exists input gamma holds sum pairs conclude theorem 
jxj define xm gamma gamma denote statement 
prove induction false probability gamma base case obvious ffl 
true probability 
assume probability false gamma lets show probability false gamma prf prf prf js show prf js gamma assume holds 
notice xb 
holds 

addition gamma summing get probability gamma completes proof inductive step theorem 
note way permutations exist prg exist yao generator goldreich levin hard core bit 
fact assumption construction way permutations exist 
full fledged construction simplified construction previous section achieves collision freeness pseudo randomness strong sense defined definition 
problem indistinguishable ni chosen random say prg fixed section define family gp generators gp pseudo random fixed construction yao prg variant hard core predicate hx delta yi 
polynomial gf 
define predicate bp bp delta lemma non constant polynomial predicate bp hard core padded way function proof proved bp delta hard core padded way function proof reduction algorithm computes delta non negligible advantage defined algorithm computes 
notice proof applied algorithm computes bp delta non negligible advantage result algorithm computes 
value computed follows 
factor polynomial gamma find roots done polynomial time finite field 
choose root random output 
root number roots degree output non negligible probability 
immediate consequence previous lemma padded way permutation non constant polynomial function gp bp length doubling prg 
right notice right addition short cycles properties 
lemma assume cycles length random polynomial degree 

pr fg gamma 
pr fright gamma proof 
assume wlog 
notice iff gamma delta delta 
consider cases ffl phi 
notice delta delta iff delta 
cycles length values gamma distinct 
chosen random polynomials gf degree random variables independently uniformly distributed follows probability delta gamma ffl assume 
cycles length fg ng gamma fg ng 
assume fg ng case analogous 
follows distributed randomly independently 
events delta delta totally independent probability 
probability delta delta gamma proves part 
fix 
notice right gp iff gamma delta 
short cycles distinct independent uniformly distributed random variables delta probability gamma define prf tribe ensemble 
theorem prg padded way permutation pn tuple non constant polynomials gf degree 
define functions bp function ensemble ff defined xn gamma gamma prf tribe ensemble 
right cycles length probability gamma probability computed choice tribe key 
proof proof ff prf tribe ensemble essentially 
prove collision freeness 
bound probability toone pi possibly constant random polynomial degree 
jxj define xm gamma gamma statement function wrt exists right 
prove induction false probability gamma gamma gamma gamma base case obvious function right ffl right true probability 
assume false probability gamma bound probability 
observe prf prf prf js sufficient show probability prf js gamma gamma gamma gamma assume holds true 
notice xb 
ax ff jk assumption wrt right 
prove high probability choice pm ax right ax padded permutation obviously true 
assume 
bound probability ax distinct ax gm gamma adding ax get ax probability gamma compute probability right gm equals ax ax assume right 
gm gamma ax contains right probability right ax gamma gamma gamma gamma gamma adding probabilities get prf js gamma gamma gamma gamma gamma gamma gamma gamma concluding proof inductive step 
probability pi randomly chosen possibly constant polynomial degree gamma gamma gamma gamma notice polynomial pi constant probability gamma gamma 
probability pi constant gamma gamma gamma gamma probability gamma gamma observe assumptions previous theorem reduced existence way permutations 
corollary way permutations exist perfect way hash function multi value secure uniform input distribution 
proof show construct prg way permutation satisfying conditions theorem 
way permutation hard core predicate function prg right oneto permutation 
define follows 
define mod 
obvious way permutation cycles length notice output pow hash function obtained corollary pretty long longer input 
pow hash function short output obtained applying hash function computing pow hash 
combining constructions section describe way combine construction universal hashing section construction section obtain multi value pow hash function respect input distribution min entropy ffl ffl 
disadvantage construction achieves weaker notion perfect wayness described section 
perfect wayness constructed function hk relies random choice key particular independence input distribution 
weak pow hash functions may sufficient applications 
combining constructions quite simple input string hash construction sections composition universal permutation regular collision resistant hash function apply output multi value pow hash function respect uniform distribution defined sections 
exact statement follows 
theorem positive integer valued function omega ffl positive constant ffl 
probabilistic function ensemble key space 
fl collision resistant regular hash function ensemble output length 
universal permutation ensemble 
define probabilistic function ensemble key hk ssi ss hk ss hk ss ri 
multi value pow respect uniform distribution weak multi value pow hash function ensemble respect input distributions min entropy gamma log 
proof sketch clearly collision resistant hk ss collision ss ss collision ss ss hk collision 
prove perfect wayness 
probability ensemble gamma log 
polynomial 
show probability choice key hk ssi distributions computationally indistinguishable 
independent hashes message chosen xn ss hk ss 
hashes independently chosen messages xn ss hk ss choice get lemma lemma probability choice ss delta ss xn gamma gamma delta gamma delta ss xn gamma get ffl statistical difference results independent applications hk ss message drawn xn results independent applications hk message drawn gamma ffl statistical difference results independent applications hk ss independently chosen messages xn results independent applications hk independently chosen messages delta gamma multi value pow respect uniform distribution omega ffl conclude theorem 
theorem corollary imply corollaries corollary way permutations regular hash function exist constant ffl weak multi value pow hash function respect distribution min entropy xn ffl corollary claw free permutation pairs exist constant ffl weak multi value pow hash function respect distribution min entropy xn ffl acknowledgments oded goldreich shafi goldwasser moni naor useful comments 
particular simplified variant prf construction section suggested moni 
bellare rogaway random oracles practical paradigm designing efficient protocols st acm conference computer communications security 
blum micali generate cryptographically strong sequences pseudo random bits siam computing vol 
pp 

canetti realizing random oracles hash functions hide partial information advances cryptology crypto lecture notes computer science springer verlag pp 

carter wegman universal classes hash functions jcss 
damg ard collision free hash functions public key signature schemes eurocrypt lncs pp 

damg ard pedersen pfitzmann existence statistically hiding bit commitment schemes fail signatures crypto lncs springer verlag berlin 
goldreich foundations cryptography fragments book weizmann inst 
science 
theory lcs mit edu goldreich goldwasser micali construct random functions journal acm 
goldreich levin hard core predicate way function st stoc pp 

goldwasser micali probabilistic encryption jcss vol 

halevi micali practical provably secure commitment schemes collision free hashing advances cryptology crypto lecture notes computer science springer verlag pp 

impagliazzo levin luby pseudorandom number generation way functions stoc pp 
naor yung universal way hash functions cryptographic applications stoc 
rivest md message digest algorithm ietf rfc april 
yao theory applications trapdoor functions focs pp 

fips 
secure hash standard federal information processing standard fips publication national institute standards technology department commerce washington april 
