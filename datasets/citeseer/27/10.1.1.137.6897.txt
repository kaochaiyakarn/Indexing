optimal patching schemes efficient multimedia streaming sen gao jennifer rexford dept computer science dept computer science networking distributed systems university massachusetts smith college labs research amherst ma ma florham park nj cs umass edu gao cs smith edu research att com multimedia streaming applications consume significant amount server network resources due high bandwidth long duration audio video clips 
making streaming services economically viable requires techniques minimizing incremental cost serving new client particularly popular content 
patching reduces server network overhead allowing client receive part multimedia stream listening ongoing transmission clip increasing client playback delay 
existing patching schemes fully exploit client buffer space ability listen ongoing transmission reducing bandwidth overheads 
introduce periodic buffer reuse pbr patching maximizes amount data client retrieve ongoing transmission 
similar existing schemes pbr employ threshold determine start new complete transmission stream 
derive closed form expression transmission bandwidth requirements pbr patching show determine optimal threshold value 
performance comparison demonstrates pbr significantly outperform existing patching schemes 
greedy buffer reuse gbr algorithm allows clients patch multiple ongoing transmissions 
show algorithm provably minimizes server network transmission bandwidth requirements 
simulation experiments demonstrate gbr patching offers sizeable reduction transmission overhead threshold schemes rarely requires client listen simultaneous transmissions scenarios examine 
pervasive high speed networking infrastructure mature digital video technology led emergence networked multimedia applications include streaming video integral component 
examples applications include live video broadcasts distance learning corporate streaming web video clips 
video streams typically high bandwidth requirements compressed mbps mpeg flows relatively long lived making expensive deliver multimedia content 
addition applications asynchronous clients may request video stream different times 
particularly popular clips client requests may arrive close time relative du university massachusetts supported part national science foundation ncr ncr cda ani 
gao supported national science foundation ncr nsf career ani 
opinions findings recommendations expressed material authors necessarily reflect views funding agencies 
ration stream 
making high volume video services economically viable requires effective techniques minimize incremental cost serving new client limiting client start latency likelihood rejecting requests due resource constraints 
popular video streams server network resources significantly reduced allowing multiple clients receive part single transmission 
example server batch requests arrive close time multicast stream set clients 
addition reducing server load batching lowers network overheads particularly clients share links common 
batching trade client playback latency ability aggregate successive requests 
approaches exploit client buffer space ability listen multiple simultaneous transmissions passively listening shared medium joining leaving multiple multicast groups 
periodic broadcast schemes server continuously broadcasts segments video collection transmission channels 
clients listen multiple channels time store segments playback 
limit start latency short initial segments repeatedly frequently longer ones 
achieving low start latency requires larger number channels increases load server network 
explores technique reducing server network transmission bandwidth usage disseminating video stream multiple asynchronous clients introducing client startup delay 
known patching involves client side buffering allow new client receive part playback data requirement listening existing ongoing transmission video server transmitting afresh remaining required frames 
example suppose multimedia server begins streaming hour video clip requesting client second client requests video minutes 
transmitting entire video second time server stream just minutes clip second client time client retrieve store short period time remaining video frames ongoing transmission complete video client 
capitalizes buffer space client site store minute sliding window frames ongoing transmission sufficient client bandwidth listening simultaneous transmissions minutes 
result fewer server network resources required satisfy clients 
batching patching allows client playback immediately receiving initial video frames directly server 
similar periodic broadcast schemes patching exploits client buffer space store frames video transmissions 
periodic broadcasting server transmits video data demand new clients arrive 
existing patching schemes fully exploit client buffer space ability client listen ongoing transmission reducing transmission bandwidth requirements 
refer earlier algorithms restricted buffer reuse rbr schemes 
section ii discuss algorithms detail introduce general model designing patching services 
propose analyze new patching algorithms capitalize client buffer space maximize portion video received ongoing transmissions video 
section iii periodic buffer reuse pbr algorithm maximizes amount data subsequent client receive existing complete transmission client buffer large store entire sliding window frames 
earlier patching schemes pbr conjunction thresholding policy determines client request trigger new complete transmission video stream 
derive closed form expression transmission overheads proposed patching scheme show compute threshold value minimizes expected aggregate transmission bandwidth required satisfy client 
analysis compare approach rbr patching policy uses optimal threshold 
pbr maximizes amount data client receive existing complete transmission exploit potential receiving data ongoing transmission 
section iv optimal patching algorithm greedy buffer reuse gbr allows client receive frames multiple ongoing transmissions 
algorithm optimal patching scheme satisfy sequence client requests lower transmission bandwidth usage 
proof optimality compare performance optimal algorithm pbr 
simulation experiments show gbr patching offers sizeable reduction server network overhead rarely requires client listen ongoing transmissions configurations examine 
optimal algorithm provides lower bound achievable transmission overhead serve basis new patching algorithms lower computational complexity simpler implementation 
section describe ongoing research extending evaluating pbr gbr patching 
section vi concludes brief summary contributions 
ii 
patching model section related patching algorithms 
describe practical setting video patching services capabilities today personal computers network support multicast 
provide brief summary patching model serves basis new patching algorithms sections iii iv 
new schemes fully capitalize available client buffer space ability client switch different multicast groups reduce aggregate transmission bandwidth required serve new client 
related patching scheme dictates video frames retrieved ongoing transmission patching server initiate new complete transmission entire video 
existing patching schemes limit client listen contiguous set frames single ongoing transmission remainder frames retrieved content server 
example assume discrete time model granularity frame time msec frame second video client frame buffer 
suppose client arrives frame times started complete transmission video initiated request client 
existing patching policies initial frames sent directly server remainder frames retrieved ongoing complete transmission 
client receives consecutive frames video existing transmission server supply rest frames new client 
case final frames video shared clients 
existing patching schemes include second critical compo nent threshold value determine initiate new complete transmission entire video satisfy client request 
server start new complete transmission client request arrives frame times initiated complete transmission 
clients patch earlier complete transmission 
existing patching schemes differ particular threshold chosen 
greedy patching client patches ongoing transmission possible time ongoing complete transmission video server 
contrast grace patching starts new complete transmission client arrives time units start complete transmission having client patch frames earlier ongoing complete transmission 
may multiple ongoing complete transmissions time grace 
grace patching typically outperforms greedy patching allowing client requests benefit start new transmission 
generalizing idea threshold patching possible determine value minimizes average transmission required serve client function request arrival rate client buffer size length video poisson arrival process possible derive closed form expression optimal value 
practical setting central effective patching scheme ability client listen multiple transmission channels simultaneously store frames ahead playout time 
patching operates buffer space bandwidth today systems 
byte storage cost access latencies main memory disk decreasing dramatically 
addition system bus speeds increasing 
commodity pcs offer mhz system bus megabytes main memory gigabytes disk storage 
trends suggest significant segment client stations high bandwidth storage space accommodate minutes worth high quality streaming video 
clients sufficient disk bandwidth listen multiple transmission channels simultaneously 
example ubiquitous ultra ata ide disk interfaces offer mbps 
newer pcs support transfer rates mbps ultra scsi fiber channel interfaces 
transmission video set clients coordinated patching server located multimedia source proxy inside network 
employing patching functionality proxy useful various situations achieve patching gains streaming video conventional content server employ patching 
proxy patching useful multicasting capability available basis content server clients 
example heterogeneous internetworking environment proxy server domain close clients may receive video unicast connection content server multicast stream downstream clients 
performing patching proxy reduces bandwidth consumed path multimedia source proxy proxy clients 
cases proxy provide patching service requiring cooperation server modifications existing server sites issuing requests appropriate frames video protocol rtsp 
advantageous suggests proxy patching services deployed incrementally network 
shows patching server connecting collection asynchronous clients multicast capable network 
selective acceptance different video frames client achieved ways 
approach patching server transmits video frames various multicast groups clients joining leaving groups receive appropriate frames 
alternatively client listen server transmissions video local filter decide frames keep 
model particularly appropriate clients shared media ethernet cable access network 
general case clients shared media proxies inside network filter transmission avoid sending unnecessary frames downstream clients 
assume join leave latencies small patching performed proxy transmits frames clients shared media 
section considers extensions incorporate join leave latencies 
system model provide formal model patching system introduce notation key concepts rest 
loss generality consider discrete time system granularity frame time msec frame second video 
focus patching single frame video requests different streams interact 
suppose client requests video stream time ti plays frame time ti lossless starvation free playback guaranteed frame received client time ti frames arrive playback time stored client frame buffer 
multiple clients arrive simultaneously requests served single batch 
loss gener multimedia server cpu nw mem client workstation data path patching server multicast channel 
cpu nw mem network fig 

video patching service video streams originate multimedia server travel network multiple asynchronous clients 
patching performed help patching server located source proxy server inside network 
ality number client batches increasing order request time 
define complete mrc transmission client initiated existing transmission entire video time client arrival 
existing patching schemes limit client listen contiguous set frames ongoing transmission mrc transmission 
new multicast capable transmission channel created transmit frames client receive existing transmissions 
model transmission channel logical entity may intermittently transmit different segments video 
multiple channels potentially time multiplexed underlying network bandwidth 
new client arrives patching server computes reception schedule rsi client channel transmission schedule csi corresponding new channel started client patching algorithm 
transmission schedule channel ci specifies frames transmitted channel scheduled transmission times 
depending service model frames requested directly client scheduled transmission server 
example consider client request arrives time units start mrc transmission grace greedy patching 
server transmits frame time ti channel resulting csi server transmit remaining frames client resulting csi idle slot ft ng 
server client computes reception schedule rsi client request specify frame client receive time slot 
entry rsi set pairs indicating frame retrieved channel cl time ti forj example suppose channel mrc transmission client grace greedy patching rsi client receive frames directly server channel ci simultaneously receive frames mrc transmission channel remaining frames retrieved mrc transmission resulting rsi note rsi entries algorithms mrc channel transmission channel ci client retrieves single contiguous set frames channel 
existing patching algorithms fully exploit presence client buffer reduce additional transmission server particularly refer existing threshold patching algorithm optimal thresholding rbr restricted buffer reuse remainder 
new patching algorithms exploit client buffer space ability listen multiple multicast groups effective patching 
section propose new patching algorithm retrieve multiple contiguous sets frames mrc channel transmission channel ci 
section iv patching algorithm lows client retrieve frames existing active channels 
iii 
periodic buffer reuse pbr patching section new threshold patching scheme shares restriction existing schemes new client restricted patch mrc transmission 
new scheme called periodic buffer reuse pbr maximizes number frames new client retrieve initiated ongoing complete transmission exploiting client side buffering effectively 
describing algorithm derive analytic expression transmission bandwidth requirements streaming video set requesting clients 
results compare proposed patching scheme rbr patching 
periodic buffer reuse thresholding client arrives time units start initiated complete transmission video existing patching schemes buffer frames ongoing transmission 
may conservative client buffer space may remain empty long time existing channel starts transmitting frames video 
existing patching policies retrieve contiguous set frames mrc transmission require client receive separate transmission remaining frames 
schemes fully exploit client buffer reduce amount new transmission required server 
new patching scheme maximizes number frames retrieved existing complete transmission client arrives time units complete transmission began 
scheme client retrieves frame earlier transmission buffer space available 
client receive parts video server frames retrieved late possible just playback times 
reception schedule corresponding channel transmission schedule computed client buffer size arrival time relative mrc transmission 
client receives frames server remaining frames mrc transmission rbr patching 
client receive frames directly server 
simultaneously time units request frames received mrc transmission buffered client 
time client buffer full client playing frames retrieved directly server 
additional time units client start draining buffer contents receive additional frames mrc transmission 
frames transmitted mrc channel time received client due lack buffer space fetched directly server just respective playback times client 
process repeats periodic fashion client receiving frames ongoing transmission frames directly server shown 
rbr proposed scheme includes threshold patching service initiates new complete transmission serve new client section show compute optimal value algorithm 
transmission overhead client intuitively pbr patching attempts keep client buffer full times 
client time units mrc transmission frame reside buffer time units consumed freeing space storing frame 
quantify benefits pbr patching derive expression number frames transmitted server client arrives time units initiation mrc transmission 
pbr performance rbr large small values particular server transmits frames resulting similarly fn client receive frames ongoing mrc transmission client buffer store half stream client buffer large store remaining frames mrc transmission 
fn orb client buffers single contiguous set frames mrc transmission rbr patching 
difference pbr rbr patching arises fb bg rbr buffer frames ongoing stream 
pbr patching remainder ongoing transmission effectively divided periods length frames buffered ongoing transmission interval 
frames remainder stream con sists complete intervals length stream consists partial interval length mod partial interval client buffer frames ongoing transmission retrieve remain ongoing mrc transmission client buffer client playout read read read server new transmission client buffer time server buffer server fig 

pbr patching shows pbr patching operates client frame buffer arriving btime units start mrc transmission 
frames retrieved mrc transmission new server transmission channel 
ing frames directly server 
consequently cb minf mod bg long video clips large contribution minf mod bg term small difference tween insignificant 
approximate simplifies nb resulting nb expression simplify analysis subsection 
average transmission requirement client evaluate pbr patching policy derive closedform expression transmission bandwidth requirements function client buffer size length video threshold request arrival distribu tion 
performance metric consider wc average amount data transmitted client pbr policy 
analysis models discrete time system discrete random variables denoting number client arrivals times respectively 
denote times server schedules transmission complete frame video 
pbr time request video minf 
new complete transmission video initiated response client request occurs time units previous complete transmission ki minf ki fori 
analytic tractability assume xis independent identically distributed 
note pbr patching clients arriving times ki ki ki patch different complete transmission clients arriving times ki ki ki sense behavior patching system time ki independent behavior time ki 
fact assumptions allow model patching system renewal process renewal points analysis focuses complete transmission video time initiated batch clients arriving time subsequent client requests patch transmission 
introduce random variables total number client arrivals renewal interval total number frames scheduled transmission server satisfy clients respectively 
mean request arrival rate average number clients remains derive expression 
simultaneous client requests served batch transmission bandwidth requirement depends likelihood request arrives single time interval 
probability xj 
note probability distribution client arrivals influences expression mean probability analysis applies parameter definition client buffer size units frame times length video number frames threshold starting new transmission frame times likelihood arrival single time unit mean request arrival rate requests frame time wc average transmission client number frames total data transmitted server number frames total request load satisfied server number requests fig 

pbr patching model table summarizes parameters analytic model pbr patching 
wide range client arrival processes 
compute note renewal interval includes exactly complete transmission frame video partial transmission frames time slot start complete transmission client arrivals 
tx simplify analysis employ approximate expression 
expressions derivation considers cases case resulting average batch arrives pt batches arrive time interval fk renewal interval requiring server transmit average frames set clients 
case resulting tx tx nb nb ln terms batch arrivals time fk bg 
third term batch arrivals time fk approximation term stems expression 
second approximation ln term stems dt ln 
nand case resulting nb nb ln terms batch arrivals time fk bg 
fourth term batch arrivals time fk approximations stem replacing pn dt ln 
expressions possible compute wc 
optimal threshold value computed topt ft wc wc values andp computed differentiating expression wc respect numerical methods determine derivative zero 
alternatively minimum performing binary search curve wc versus patching server compute topt offline different values arrival rate appropriate threshold online actual arrival rate 
analysis patching algorithm assumes continuous time model poisson arrivals batching clients 
rbr algorithm consider discrete time equivalent algorithm pbr uses batching serve multiple simultaneous clients 
approach similar analysis pbr analyze rbr scheme range client arrival processes 
performance comparison initial comparison pbr rbr assume clients arrive poisson process rate clients arriving frame time batched served 
results investigate transmission bandwidth requirements pbr vary function exact approximate expressions wc 
experiment considers hour long mbps video stream average request inter arrival times minutes clients mbytes buffer space store minutes video 
note approximation wc virtually indistinguishable exact expression small moderate values including regime wc minimum moderately pessimistic estimate large error exact value 
behavior consistent range buffer sizes arrival rates suggesting practical purposes sufficient approximate expression computing optimal threshold 
small values result high bandwidth requirements clients take advantage ongoing transmissions video 
increases wc decreases rapidly clients opportunity exploit buffer space patching earlier transmission 
finite client buffer size limits benefit patching certain point 
client arrives long start mrc transmission video frames client retrieved directly server 
transmission requirements eventually increase larger threshold values large number clients retrieve frames server 
result curves shape allowing simple binary search procedure locate client transmission frames approx lambda min exact lambda min approx lambda sec exact lambda sec frame times fig 

transmission bandwidth vs threshold pbr patching graph plots exact approximate expressions wc function pbr patching 
experiment considers poisson arrivals minutes 
video hour long client buffer mbytes 
optimal threshold value topt 
optimal threshold value topt depends client buffer size shown 
small moderate buffer sizes topt larger rbr pbr patching 
rbr patching smaller optimal threshold algorithm patches frames ongoing transmission larger threshold fact new client retrieves frames server pbr rbr contribute superior performance pbr 
shown plots average transmission requirement client wc function client buffer size algorithm uses respective optimal threshold 
small buffer sizes offer limited opportunities patching resulting similar performance pbr rbr 
client buffer size increases wc decreases dramatically pbr 
example mbyte client buffer store minute video pbr requires server transmit mbytes client rbr saving 
eventually increasing client buffer size offers diminishing returns algorithms performance difference rbr pbr starts decrease shown right side 
large buffer allows client receive frames mrc transmission pushing optimal threshold higher 
higher threshold allows longer time gap complete transmission clients patch 
turn requires server transmit larger number frames clients arrive long time start complete transmission 
cases server reduce overhead starting new complete transmission 
result optimal threshold topt eventually reaches maximum value independent client transmission mb rbr pbr approx lambda arrivals frame time fig 

influence client arrival rate pbr rbr patching graph plots transmission bandwidth requirement function mean arrival rate experiment considers hour mbps video mbyte client buffer store minute video 
client buffer size shown 
results suggest benefits patching achieved moderate amount client buffer space relatively long videos 
practical patching system patching server precompute buffer sizes wc optimal different arrival rates 
arrival rate significant influence performance patching algorithms 
plots average transmission wc required satisfy client function arrival rate experiment considers mbyte client buffer capable storing minute hour mbps video 
patching offers limited benefits small arrival rates client requests typically arrive sufficiently close time 
increases patching increasingly effective wc decreases 
region pbr requires substantially bandwidth serve client 
example wc generally smaller pbr rbr 
addition number client requests larger reduction incremental overhead serving request significant 
difference pbr rbr decreases larger arrival rates clients arrive close time completely avoid retrieving frames directly server 
region algorithms optimal threshold smaller client buffer size resulting similar performance 
iv 
optimal patching effectiveness rbr pbr patching depends selecting appropriate threshold request arrival process system parameters buffer size video duration 
arrival rate known advance may fluctuate time 
section optimal patching algorithm greedy buffer reuse gbr depend knowledge client arrival process thresholding 
algorithm allows client subscribe multiple ongoing transmissions maximize benefit patching 
algorithm incremental decides schedule client order client arrival time 
assume arrivals arrival patterns 
strategy greedy client fetches going multicast channels long client buffer overflow 
reduces total number frames client fetch server directly client buffer size 
gbr algorithm provides lower bound transmission bandwidth required serve client requests serve basis new patching algorithms lower computational complexity 
presenting algorithm establishing optimality properties compare performance pbr 
gbr algorithm gbr algorithm sequences frames video schedules client receive frame late possible ongoing transmission possible directly server 
frame sent directly server cases ongoing transmission includes frame client buffer space store frame earlier transmission 
presents pseudocode algorithm computes reception schedule rsi channel schedule csi client arriving time ti 
discussed section ii channel schedule vector csi idle slot frame number indicating server transmit frame channel ci time dj ti reception schedule vector specifies time channel client receive video frame 
entry rsi indicating frame retrieved channel cl time ti algorithm schedules frame reads existing channels client buffer late possible 
vectors lt lc respectively keep track latest time channel particular frame sent 
latest time frame transmitted considering existing channels indicates channel responsible transmission 
channel transmission schedule latest arrival time latest arrival channel vectors maintained patching server 
receive different frames correct times client aware reception schedule 
patching server transmit computed reception schedule client 
alternatively transmit threshold frames rbr pbr approx frames optimal threshold opt client transmission mb rbr pbr approx mb server bandwidth fig 

influence client buffer size pbr rbr patching left graph shows optimal threshold opt depends client buffer size pbr rbr patching 
optimal threshold topt right graph considers influence transmission bandwidth requirement experiments consider hour mbps stream average request inter arrival time minutes 
gbr schedule bi ti lt lc consider frame ti client store additional frame times dj add frame reception schedule add tuple rsi ti 
ii update buffer occupancy store additional frame times dj 
iii schedule frame transmission channel ci csi 
schedule frame transmission channel ci time dj csi 
ii add frame reception schedule add tuple ci rsi dj ti 
fig 

gbr patching algorithm presents pseudocode processing request client client buffer size arriving time greedy algorithm produces channel schedule cs server reception schedule rs client 
sufficient information case latest arrival time latest arrival channel vectors client compute reception schedule 
key intuition algorithm frames received client closer consumption deadlines occupy buffer shorter time maximize chances frames space 
frame scheduled transmission server time ti ti client tries receive copy transmitted interval 
receiving frame overflow client buffer server schedules new transmission frame time ti channel ci 
refer resulting schedule greedy reception schedule client computational complexity algorithm bn client batch client buffer size optimality gbr algorithm optimal patching algorithm minimizes transmission bandwidth required satisfy collection clients 
consider client arrivals server greedy algorithm computes channel reception schedule client arrival time ti existing channel schedules 
greedy schedule server determine set reception channel schedules clients order client arrival times 
theorem client buffer size greedy schedule optimal sense schedule requires fewer frames server 
proof theorem follows proving claim 
claim convert valid schedule greedy schedule series transformations increase number frames server delivers 
proof order client arrival times 
client find frame received non greedy fashion 
transform schedule increasing number frames server delivers client receives frame greedy fashion case frame multicast ti ti received multicast frame schedule case transform schedule frame received multicast frame 
resulting schedule require frames server client overflow buffer frame received 
case frame scheduled multicast ti ti client buffer overflow frame received scheduled multicast frame 
schedule transmitted afresh client time ti construct schedule follows 
schedule lets client receive frame multicast frame 
client receives frame time ti multicast frame time earliest arriving client needs playback frame clients retrieve frame time 
client exists rest schedule remains 
schedule valid client receives frame playback time 
buffer overflow clients receive data 
note schedule transmit frames schedule note consequence theorem gbr patching algorithm locally optimal 
algorithm results server transmitting minimum number frames afresh new client 
performance evaluation compare optimal patching algorithm gbr pbr patching optimal pbr threshold function client arrival rate experiment considers hour mbps video stream 
point graph average independent simulation experiments consisting distinct batch clients arrivals 
individual client arrivals generated poisson process multiple clients arriving time unit frame time batched served 
high arrival rate seconds server overhead client pbr higher gbr difference mbytes 
decreases clients arrive apart reducing effectiveness patching resulting higher values wc algorithms 
minutes pbr results value wc higher gbr corresponding difference pbr gbr mbytes 
trends indicate substantial potential improving performance patching algorithms literature 
optimal patching algorithm explicitly limit number simultaneous channels client results show client rarely listens channels time 
graph plots proportion time client listens equal channels values small values offer limited op patching client spends time listening just channel 
example minutes client spends time idle time listening channel time listening channels 
high arrival rate clients receive frames existing transmissions 
small client inter arrival times number simultaneous channels quite low 
example seconds total time spent idle listening channels respectively 
time spent listening channels 
indicates savings transmission accrued clients able listen channels simultaneously 
results suggest introducing explicit constraint number simultaneous channels number tuples rsi degrade performance substantially 
ongoing ongoing pursuing number extensions pbr optimal gbr patching performance evaluation pbr extending section iii comparing pbr rbr patching different client arrival processes 
experiments involve varying values analytic model allowing study impact bursty arrivals relative performance patching schemes 
addition extending analysis support batching client requests arrive time units 
considering flexible thresholding policies incorporate information number client requests arrived start previous complete transmission allow pbr threshold value adjust changes arrival process time 
computational complexity gbr algorithm gbr algorithm section iv complexity bn client batch 
investigating algorithm computing channel reception schedules reduces influence client buffer size algorithmic complexity 
reduce computational overhead evaluating generalization gbr divides video consecutive frame chunks applies scheduling decision frames chunk 
effectively reduces client buffer size video length reduces number client batches considered expense restricting opportunities patching 
technique effective range small values 
client transmission mb pbr analysis pbr sim gbr sim lambda arrivals frame time server bandwidth cdf lambda sec lambda sec lambda min lambda min number simultaneous channels cdf fig 

performance gbr patching left graph plots function pbr gbr algorithms 
right graph plots proportion time client subscribes equal channels gbr patching 
client mbyte buffer store minutes video 
limited client bandwidth gbr mile network bandwidth constraints disk memory bandwidth constraints may keep client retrieving data simultaneous transmission channels 
results show gbr rarely requires simultaneous transmissions client 
avoid violating constraints consider simple heuristic extension optimal gbr algorithm 
retrieving frame ongoing transmission exceed client bandwidth separate copy frame scheduled transmission server frame playback time 
repeating process sequence playback times removes violations constraint dynamic join leave multicast groups patching server connected set clients shared medium overhead joining leaving multicast groups limit client ability switch transmission channels frame level 
dividing video stream frame chunks discussed impose minimum time joining leaving multicast groups 
alternate approach client subscribe set transmission channels duration transfer apply local filtering store necessary video frames 
approach avoids dynamic joining leaving multicast groups expense consuming additional network bandwidth transfer frames client need network proxies perform filtering 
investigating variants gbr generate schedules apply single set transmission channels client 
blocking service model server network sufficient resources satisfy client requests 
approach reasonable way compare various patching algo rithms determine amount resources required provisioned service 
real system patching service able block client request necessary 
simplest approach applies existing patching algorithms compute reception channel transmission schedules new client rejects request server network satisfy resource requirements schedule 
alternatively patching server compute schedules reduce likelihood blocking client requests 
extensions gbr patching algorithm exploit available latitude scheduling frame transmissions new client 
example server transmit frame early subject client buffer constraint reduce total number frames sent time slot 
vi 
high transmission bandwidth requirements streaming video challenging problem provision network resources delivering media remote clients 
examined patching technique reducing transmission client allowing sharing data existing ongoing transmissions video 
introduced periodic buffer reuse pbr new patching scheme maximizes amount data client retrieve initiated complete transmission 
similar existing patching schemes pbr employs threshold determine start new complete transmission stream 
analytically derived closed form expression transmission bandwidth requirements pbr patching showed determine optimal threshold value 
performance comparison showed pbr significantly outperform existing patching schemes 
greedy buffer reuse gbr patching algorithm provably minimizes server transmission bandwidth requirements 
simulation experiments showed gbr patching offers sizeable reduction transmission overhead threshold schemes rarely requires client listen simultaneous transmissions 
algorithm serve basis new patching algorithms lower computational complexity simpler implementation 
vii 
authors jim kurose helpful insightful discussions suggestions crucial 
hua cai sheu patching multicast technique true video demand services proc 
acm multimedia september 
gao towsley supplying instantaneous video demand services controlled multicast proc 
ieee international conference multimedia computing systems 
cai hua vu optimizing patching performance proc 
spie acm conference multimedia computing networking january 
aggarwal wolf yu optimal batching policies demand storage servers proc 
ieee international conference multimedia computing systems june 
lui muntz adaptive piggybacking novel technique data sharing video demand storage servers acm multimedia systems journal vol 

hua sheu skyscraper broadcasting new broadcasting scheme metropolitan video demand systems proc 
acm sig comm september 
gao kurose towsley efficient schemes broadcasting popular videos proc 
inter 
workshop network operating system support digital audio video july 
eager vernon dynamic skyscraper broadcasts video ondemand proc 
inter 
workshop advances multimedia information systems lecture notes computer science september 
eager ferris vernon optimized regional caching ondemand data delivery proc 
multimedia computing networking january 
schulzrinne rao real time streaming protocol rtsp request comments april 
ftp ftp isi edu notes rfc txt 
