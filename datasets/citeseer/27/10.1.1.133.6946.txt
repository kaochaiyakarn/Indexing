managing dynamic object structures hypothesis generation validation autonomous system embedded dynamic changing environment able create qualitative knowledge object structures representing aspects environment fly raw preprocessed sensor data order reason qualitatively environment 
structures managed accessible deliberative reactive functionalities dependent aware changes robotic agent embedding internal environment 
dyknow software framework provides set functionalities contextually accessing storing creating processing structures 
focus dyknow supporting representation reasoning dynamic objects road vehicles external environment autonomous unmanned aerial vehicle 
representation complex objects generally consists simpler objects associated features related linkages 
linkage structures constructed incrementally additional sensor data acquired integrated existing structures 
resulting linkage structures represent complex objects levels abstraction 
issues related anchoring symbol grounding approached advantage versatility linkage structures 
examples provided experimental uav research platform 
proceedings aaai workshop anchoring symbols sensor data 
research cognitive robotics concerned endowing robots software agents higher level cognitive functions enable reason act perceive goal directed manner changing incompletely known unpredictable environments 
research robotics traditionally emphasized low level sensing sensor processing control manipulative tasks 
open challenges cognitive robotics integrate techniques disciplines develop architectures support seamless integration low level sensing sensor processing generation maintenance higher level knowledge structures grounded sensor data 
copyright american association artificial intelligence www aaai org 
rights reserved 
fredrik heintz patrick doherty knowledge internal external environments robotic agent static dynamic 
great amount background deep knowledge required agent understanding world understanding dynamics embedding environment objects interest hypothesized particular type types dynamics continuously reasoned timely manner 
implies signal transformations levels abstraction different varying constraints real time processing 
reasoning involved dynamic objects dynamic knowledge related objects involves issues situation awareness 
robotics architecture support task getting right information right form right functionalities architecture right time order support decision making goaldirected behavior 
important aspect problem fact going process 
data knowledge dynamic objects provided continuously fly rate form efficient receiving cognitive reactive robotics functionality particular context 
context important optimal rates forms robotic functionality receives data task environmentally dependent 
consequently autonomous agents able declaratively specify re configure character data received 
define change approximate values time points value synchronize collections values examples properties set context 
robotic functionalities mean control reactive deliberative functionalities ranging sensor manipulation navigation high level functionalities chronicle recognition trajectory planning execution monitoring 
structured follows 
start section larger scenario proposed techniques described 
section provides description uav platform experiments 
third section describes distributed autonomous robotics architecture developed support integration deliberative reactive control functionalities 
fourth section dyknow framework introduced 
fifth section concludes description hypothesis generation validation mechanisms create manage dynamic object structures 
identification track scenario order ideas precise scenario unmanned aerial vehicle project authors involved requires capabilities discussed far 
picture scenario 
autonomous unmanned aerial vehicle uav case helicopter mission identify track vehicle particular signature region small city 
signature provided terms color size possibly shape 
assume uav model region addition information building structures road system 
models provided may generated uav 
additionally assume uav equipped gps ins navigating purposes main sensor camera pan tilt mount 
way uav achieve task initiate reactive task procedure parent procedure calls image processing module vehicle signature parameter 
image processing module try identify colored blobs region right size shape color step 
features new blob rgb values uncertainty bounds length width pixels position image associated vision object 
image processing system try track blobs 
perspective uav objects extent moving colored blobs interest feature data collected continue collected tracking 
hypothesize blob exists world represent single entity creating representation blob world 
new features position geographical coordinates associated new world object 
geographic coordinates provide common frame positions time different objects compared 
represent objects represent aspects entity vision object linked world object 
objects related features world object computed features linked vision object 
point object qualitative level abstraction description terms linkage structure contains cognitive pre cognitive information continuously managed processed due interdependencies features various levels 
assuming uav camera link vision object world object world objects hypothesized vision object world object depends vision object 
camera vision object associated world object camera 
compute features gps ins acronyms global positioning system inertial navigation system respectively 
world object computations fusion feature values linked objects required 
time new vision object created tested existing world object see represent entity 
world object passes test link created vision object 
case world object features updated features new vision object long remain linked 
example world object 
links represent hypotheses subject invalid additional data uav agent continually verify links validity 
done associating maintenance constraints links continually monitored validity 
maintenance constraint compare behavior new entity combination representations normative behavior type entity available predicted behavior previous entity 
qualitative step creating linkage structure scenario check world object moving object 
case hypothesized world object position feature changes time 
condition maintain link 
failure condition depend hypotheses choices 
example hypothesis object considered vehicle stops may just park retain moving vehicle status 
continue chain qualitative levels representations moving object close road defined geographical information system gis hypothesize road object object moving roads 
maintenance condition road system road object ignore scenario 
road object contain qualitative features position road segment allow parent procedure reason qualitatively position world relative road vehicles road building structures vicinity road 
point streams data generated computed features linked object structures levels abstraction helicopter tracks road objects 
step qualitative representation entities hypothesize kind vehicle default assumption car large small hypothesize truck bus motorcycle 
assumed background knowledge vehicle types exists put determining vehicle type 
object types links constraints currently configured parent task procedure identification scenario 
situation changes task procedure option modifying object link specifications associated task hand 
robotic architecture particular uav architecture described set support processes described uav scenario 
heintz doherty software system called dyknow framework proposed supporting dynamic knowledge structures 
extend framework techniques management dynamic object structures described 
witas uav platform witas unmanned aerial vehicle project doherty doherty long term basic research project main objectives development integrated hardware software vertical take landing platform fully autonomous missions deployment applications traffic monitoring surveillance emergency services assistance photogrammetry surveying 
witas project uav platform slightly modified yamaha rmax 
total length incl 
main rotor maximum take weight kg powered hp stroke engine 
yamaha equipped radio controlled rmax attitude sensor attitude control system 
witas rmax helicopter hardware platform consists pc embedded computers 
primary control system consists piii mhz processor wireless modem serial line rs sensors integrated ins dgps serial barometric altitude sensor analog sonar infrared altimeter analog compass serial 
connected serial image processing computer serial deliberative computer ethernet 
image processing system consists second pc embedded computer piii mhz color ccd camera video serial interface control mounted pan tilt unit serial video transmitter composite video recorder 
deliberative reactive system runs third pc embedded computer piii mhz connected pcs ethernet corba event channels 
system described detail section 
dyknow pronounced dino dinosaur stands dynamic knowledge object structure processing 
witas pronounced vee tas acronym information technology autonomous systems laboratory link ping university sweden 
camera platform mini dv rmax helicopter platform pitch yaw roll sony fcb ex lp hz yamaha attitude controller hz yamaha attitude sensors hz ii emi ins mhz piii ram mhz piii ram rtlinux mhz piii ram gps path planner task planner camera controls bt rs rtlinux serial analog magnetic compass hmr chronicle recognition 
tp exec linux helicopter control preprocessor pressure sensor gis knowledge repository dor temp 
sensors hardware schematic tcp ip sonar distributed autonomous robotics architecture system doherty consists deliberative reactive components interface control architecture primary flight controller pfc 
current flight modes include autonomous take landing pre defined dynamic trajectory vehicle tracking hovering 
chosen real time corba object computing basis design implementation loosely coupled distributed software architecture aerial robotic system 
functionalities part architecture viewed clients servers communication infrastructure provided corba facilities services real time event channels 
depicts incomplete high level schematic software components architecture 
may viewed corba server client providing requesting services receiving data events real time standard event channels 
modular task architecture mta part reactive system design procedure paradigm developed loosely coupled heterogeneous systems witas aerial robotic system 
reactive behaviors implemented task procedures tp executed concurrently essentially event driven 
tp may open corba event channels call services corba application oriented ser currently tao ace 
ace orb open source implementation corba 
vices path planners including functionalities dy know 
task planner service helicopter controller physical camera controller path planner service chronicle recognition service task procedure execution module tp tpn image controller prediction service qualitative signal processing controller runtime image processing module ipm software schematic dyknow geographical data repository knowledge repository dynamic object repository distributed nature hardware software architectures addition complexity main issues getting data right place right time right form able transform data proper levels abstraction high level deliberative functionalities middle level reactive functionalities 
dyknow designed contribute achieving 
ontologically view external internal environment agent consisting entities representing physical non physical objects properties associated entities relations entities 
call entities objects properties relations associated objects called features 
features may static dynamic parameterized objects 
due potentially dynamic nature feature ability change value time fluent associated feature 
fluent function time range feature type 
dynamic feature fluent values vary time static feature fluent remain constant time 
examples features estimated velocity world object current road segment object distance car objects 
fluent associated examples implicitly generates continuous stream time tagged values appropriate type 
additionally introduce locations policies computational units fluent streams refer aspects fluent representations actual software architecture 
location intended denote pre defined physical software location generates feature data architecture 
examples onboard databases corba event channels physical sensors device interfaces fact location index representational structure associated feature 
structure denotes process implements fluent associated feature 
fluent implicitly represents stream data fluent stream 
stream continuous approximated architecture 
policy intended represent particular contextual window filter access fluent 
particular functionalities architecture may need sample stream particular rate interpolate values stream certain manner 
policies denote collections constraints 
computational units intended denote processes take fluent streams input perform operations streams generate new fluent streams output 
entities represented syntactically form data structure architecture data structures grounded sensor data perceived robotic agent sensors 
addition declarative specifications features policies determine views fluent streams st class citizens dyknow language referring features locations computational units policies provided see heintz doherty details 
view dyknow implementing distributed qualitative signal processing tool system functionality generate dynamic representations parts internal external environment contextual manner policy descriptors feature representation structures 
dynamic representations viewed collections time series data various levels abstraction time series representing particular feature bundle representing particular history progression 
view dynamic representations put interpret fluent stream bundles partial temporal models logical sense 
partial temporal models fly interpret temporal logical formulas tal temporal action logic temporal formalisms 
functionality put constructing execution monitors predictive modules diagnostic modules net result powerful mechanism dealing plethora issues associated focus attention situational awareness 
dynamic object structure dyknow ontologically difficult issue involves meaning object 
distributed architecture information specific object distributed system information may redundant may inconsistent due issues precision approximation 
example car object part linkage structure may contain objects road world vision objects 
example linkage structure see 
addition features associated objects computed different manners different parts architecture different latencies 
candidate definition object aggregate features take object parameter feature 
object represents aspects entity world 
represent different objects represent entity world links created objects 
linkage structures represent aspects entity known uav agent 
case linkage structures fact represent entity world uav agent unable determine 
objects may type different linkage structures associated 
example car objects may road object road object part linkage structure 
important point objects intended similarities oop objects differences 
example object linkage structure hypothesis generation object associated set possible hypotheses associated constraints relating object object 
possible hypothesis relation objects associated constraints objects 
generate hypothesis constraints possible hypothesis satisfied 
different types hypotheses depending types objects 
objects different types hypothesis represented link 
type hypothesis represented codesignation objects 
hypothesize objects representing aspect world identical link hypothesizes objects represent different aspects entity 
link hypothesized reestablish constraint existing objects satisfied establish constraint object newly created object satisfied 
anchoring literature processes called reacquire find coradeschi 
uav agent sure hypotheses true continually verify validate current knowledge world 
hypothesis associated maintenance constraints satisfied long hypothesis holds 
constraints violated hypothesis removed 
maintenance hypothesis generation constraints represented linear temporal logic ltl intervals kabanza checked execution monitoring module part dyknow framework heintz doherty 
object specification dyknow generate object structures controlling task procedure specify appropriate links object types 
called classes 
link specification parts classes link associates constraint specifications establishing maintaining instances link 
link denoted establish reestablish maintain names classes instances link associates constraints establish reestablish maintain specify create delete instances link 
constraints expressed ltl formulas containing features associated objects linked 
order refer objects linked special feature arguments 
class specification consists specifications links features associated class delete constraint codesignation policy 
class denoted 
ln 
fm delete codesignation li link specification fj feature specification special arguments representing actual object instance incoming link name link 
delete constraint specifies instance class deleted 
codesignation policy consists codesignation strategy codesignation constraint merge function 
specifies objects belonging class hypothesized identical merge 
constraints expressed ltl intervals formulas feature specifications special argument represents instance class 
example classes mx mean dor pol mean dor pol mx prev mx mx prev mx keep old false vo wo link eventually vo wo link dom pol eventually dist est pos dor pol true position dor mean dor pol vo wo link mean dor pol vo wo link pol prev prev keep old false class specification states features specifications mean dor pol mean dor pol dor feature location host feature representations replaced actual object identifier 
pol policy create associated fluents feature representations 
delete constraint states object deleted mean feature hasn updated seconds 
class specification says feature specification position dor mean dor pol vo wo link mean dor pol vo wo link pol vo wo link replaced object identifier linked instance 
link established position feature created 
specification states position calculated vision coordinates taken linked 
object management objects created explicitly part hypothesis generation 
case object manager responsible creating object 
create object instance class instantiate links features create monitors establish reestablish codesignation delete constraints associated new object 
object instance deleted explicitly delete constraint satisfied feature representations deleted monitors links associated object 
object manager responsible keeping track links objects connected instantiating features new links created features object may dependent features related linked objects 
algorithm creating object instance class 
create instances features related class 
create monitor delete constraint class 
object instance class create monitor codesignation constraint 
link links class create new object instance linked class create monitor establish constraint object instance linked class create copy monitor reestablish constraint 
link links class object instance linked class create monitor reestablish constraint link management establish reestablish constraints satisfied object manager create link objects 
link type linked object new link added returned object manager existing link new link merged object allowed linked link type 
strategies merge links 
apply select function compares links returns link representing best hypothesis 
assume linked objects represent different versions aspect entity merge links link 
duplicate linked object link new object different hypotheses object disjunctive hypothesis 
shows result linking linked second top third strategy bottom 
examples merging links link realized different ways depending properties objects 
purpose merge information stored objects class single object class create single object class representing objects create instances class merge instances single object class merging objects done merge function codesignation policy class 
implies merge function defined link realized 
second option create instances merge requires possible create instance instance default approach merge instances single instance link 
algorithm establishing link 
create link instance 
merge existing links 
instantiate features related link 
set monitor maintain constraint link codesignation management objects hypothesized identical object manager merge representation 
done ways merge objects existing objects delete create new object result merge 
approach defined strategy codesignation policy 
case need merge information stored objects done merge function component codesignation policy 
links related objects merged 
outgoing links moved merged object duplicated links removed 
keep old objects continually update new merged object keep incoming links move object keeping merge described 
benefit strategy create new object result continually merging objects codesignation hypothesis withdrawn longer valid 
drawback performance duplication data 
lifecycle example state feature monitor managers example 
specifications assume vo created 
mean dor pol vo mean dor pol vo fea ture representations created delete constraint monitor vo 
participate vo wo link link establish monitor created 
assume establish constraint satisfied wo created 
feature representations mx mean dor pol vo mean dor pol vo position dor mx pol wo created 
delete monitor object created maintenance monitor link vo wo 
states feature monitor managers different stages example shown 
assume tracking vo lost object removed 
means link vo wo removed wo longer updated 
images new blob new vo created 
mean mean feature representations created monitors delete vo wo link establish wo link vo wo reestablish constraints 
establish constraint satisfied new wo created feature representations position monitors delete wo wo constraints 
time reestablish constraint satisfied link vo wo created maintenance monitor 
constraint wo wo satisfied natural computed vision object wo wo merged wo wo removed 
related section compare approaches anchoring symbols techniques having similarity dyknow approach 
coradeschi anchoring process creating maintaining correspondence symbols sensor data refer physical objects 
creating symbol physical object described coradeschi create symbol aspect physical object interested working bottom fashion sensor data 
symbols linked assert fact represent entity world 
benefit create function determining blob seen image car split problem smaller simpler problems determining blob object world world object moving roads object moving roads car 
benefit generate hypothesized objects different levels abstraction anchored sensor data handle uncertainty object identities 
verify validate hypotheses constraints placed links linkage structures monitors created continually check constraints violated 
constraints link violated link removed particular object longer grounded 
object removed reestablish link time 
corresponds reacquire terminology coradeschi 
ways relating linkage structures anchors view linkage structure anchor link anchor linkage structure chain anchors 
way great flexibility describing requirements creating maintaining anchors 
related approach fritsch propose method anchoring symbols denoting composite objects anchoring symbols corresponding component objects 
extend framework coradeschi concept composite anchor anchor direct perceptual counterpart 
composite anchor computes perceptual signature perceptual signatures component objects 
benefit sensor anchor percepts symbols build composite objects fusing information sensors 
functionality provided dyknow objects direct perceptual counterparts computed objects may may acquire input directly sensors 
particular functionality important emphasize complex hybrid robotic architectures different components functionalities architecture require access representations dynamic objects external environment different levels abstraction different guaranteed upper bounds latencies data 
modeling dynamic objects structured objects different types features functionality architecture access object proper level abstraction acquire data object timely manner 
final related approach concepts properties model objects 
introduce model set concepts linked relationships 
relationships represent constraints satisfied functions generate property values concept property values concept structural constraints guide anchoring fact concepts total exclusive specialization concept 
dyknow functions called computational units constraints partitioned types depending function 
direct support structural constraints existing dyknow functionality represent disjuncts fact moving object road object object 
difference approaches compute degree matching concept order better handle uncertain incomplete information 
similarity measurements objects essential functionality anchoring objects sensor data comparing 
currently developed general theory measuring similarity rough set techniques doherty doherty doherty particular functionality integrated dyknow 
part ongoing activity area 
summary dyknow software framework developed supporting access signal data robotic architectures various levels abstraction fusing data component objects representing entities internal external environments robotic systems 
particular case focus unmanned aerial vehicle describe functionality supports contextual access creation storing processing dynamic objects representing vehicles perceived uav 
subset dyknow functionalities provides generic toolkit dealing issues related anchoring symbol grounding robotic systems 
describe subset compare functionality related 
uav dyknow system tested experimentally actual flights 
partially supported foundation sweden 

anchoring need new solutions old problem old solutions new problem 
anchoring symbols sensor data single multiple robot systems papers aaai fall symposium technical report 
fs 
menlo park ca aaai press 
coradeschi 
anchoring symbols sensor data preliminary report 
proc 
th aaai conf 
menlo park ca aaai press 
coradeschi 
perceptual anchoring symbols action 
proc 
th ijcai conf 
coradeschi 
anchoring problem 
robotics autonomous systems 
doherty 
correspondence approximations similarity 
proceedings th international conference rough sets current trends computing 
doherty granlund sandewall 
witas unmanned aerial vehicle project 
proceedings th european conference artificial intelligence 
doherty heintz merz persson 
distributed architecture autonomous unmanned aerial vehicle experimentation 
proceedings th international symposium distributed autonomous robotic systems 
doherty 
tolerance spaces approximative representational structures 
proceedings th german conference artificial intelligence 
doherty 
advanced research autonomous unmanned aerial vehicles 
proceedings th international conference principles knowledge representation reasoning 
fritsch lang fink 
multi modal anchoring human robot interaction 
robotics autonomous systems 
heintz doherty 
dyknow framework processing dynamic knowledge object structures autonomous systems 
journal intelligent fuzzy systems 
kabanza 
reasoning robot actions model checking approach 
advances plan control robotic agents lnai 
object computing 
tao developer guide version 
see www cs wustl edu schmidt tao html 
