finding large hidden clique random graph noga alon michael benny department mathematics raymond beverly faculty exact sciences tel aviv university tel aviv israel mail noga math tau ac il math tau ac il math tau ac il ed october accepted june consider probabilistic model graph labeled vertices 
choose random graph gn choose randomly subset vertices size force clique joining pair vertices edge 
problem give polynomial time algorithm finding hidden clique surely various values question posed independently various variants jerrum kucera 
efficient algorithm cn fixed improving trivial case cn log algorithm spectral properties graph 
john wiley sons random struct 
alg 
clique graph set vertices connected edge 
wg denote maximum number vertices clique problem determining estimating wg finding clique maximum size fundamental problems theoretical computer science 
problem computing wg known np hard 
best known approximation algorithm quantity designed boppana preliminary version appeared proceedings ninth annual acm siam soda pp 

research supported part usa israeli bsf israel science foundation hermann minkowski minerva center geometry tel aviv university 
research supported part charles clore fellowship 
john wiley sons ccc alon performance guarantee log number vertices graph 
graph contains large clique better algorithms best shows wg exceeds fixed integer find clique size 
polynomial time notation 
means usual log constant independent negative side known impossible approximate wg polynomial time graph vertices factor nb assuming np 
exponent improved various papers shown hastad fact larger positive assuming np polynomial time randomized algorithms 
negative result proved shows impossible approximate wg vertex graph factor log polynomial size monotone circuit 
facts suggest problem finding largest clique general graph intractable 
natural study problem appropriately randomly generated input graphs 
interest theoretically motivated fact real applications input graphs certain random properties 
study performance algorithms random input graphs gained popularity see survey frieze mcdiarmid 
gn denote random graph labeled vertices obtained choosing randomly independently pair ij vertices edge probability 
known surely probability approaches tends infinity value wg certain function 
log written explicitly cf 
simple polynomial time algorithms see 
find surely clique size 
log gn clique roughly half size largest 
known polynomial time algorithm finds surely clique size log fixed 
problem finding algorithm suggested karp 
results ones jerrum implied natural algorithms achieve goal plausible conjecture see 
fact polynomial time algorithm finds probability half say clique size bigger log conjecture certain interesting cryptographic consequences shown 
situation may better random model biggest clique larger 
gn denote probability space members generated choosing random graph gn placing randomly clique size 
observed kucera bigger nlog appropriate constant vertices clique surely ones largest degrees easy find efficiently 
design algorithm finds biggest clique surely nlog problem mentioned 
solve showing polynomial time algorithm finds surely unique largest clique size gn provided beats trivial algorithm degrees logarithmic factor finding large hidden clique random graph technique applied spectral properties graph resembles basic approach interesting may useful tackling related problems 

main result section describe algorithm analyze performance graphs generated distribution gn results easily extended similar models random graphs 
trivial algorithm degrees solves clique problem surely nlog assume nlog assume needed sufficiently large 
simplify presentation omit floor ceiling signs crucial 

basic algorithm subsection describe basic algorithm dealing hidden clique size algorithm spectral properties adjacency matrix graph 
analysis algorithm subsection explain subsection modify basic algorithm reduce constant positive constant 
graph denote adjacency matrix matrix defined au ifu eand au 
known symmetric real eigenvalues orthonormal basis eigenvectors crucial point algorithm surely find big portion hidden clique second eigenvector efficient algorithms compute eigenvectors eigenvalues symmetric matrices see 
certainly calculate polynomial time 
algorithm simple consists stages 
algorithm input graph distribution gn 
find second eigenvector adjacency matrix 
sort vertices decreasing order absolute values coordinates equalities broken arbitrarily 
vertices order 
set vertices neighbors output subset completes description algorithm 

properties second eigenvector claim surely algorithm finds unique clique size prove fact need establish results spectrum alon analysis algorithm assume set vertices hidden clique consists vertices proposition 
surely eigen adjacency matrix satisfy 

ii 

proof 
variational definition eigenvalues see pp 

tax tax max min min max dim xx dim xx ranges subspaces appropriate dimension 
particular simply maximum tax nonzero vectors vector obtain known result average degree known estimates binomial distribution average degree 
surely 
proves 
prove ii 
need result spectrum random graph proved furedi 
lemma 
eigen adjacency matrix random graph surely max log bound eigenvalues matrix represent graph edge disjoint union random graphs 

bethe random graph set vertices clique denote adjacency matrix graph union remaining isolated vertices 
remove edges denote adjacency matrix remaining graph 
easy see obtained distribution gn definition 
denote ui eigenvector ai corresponding largest eigenvalue fori respectively 
subspace vectors orthogonal bythe definition lemma surely vector xa xx 
xa xx 
xa xx xx xx fact dim variational definition eigenvalues matrix conclude 

completes proof ii finding large hidden clique random graph crucial observation analysis algorithm eigenvector weight clique 
show exhibit vector coordinates considerably larger rest coordinates prove close second eigenvector vector defined 
denote norm vector proposition 
abo notation surely exists ector satisfying collinear second eigen ector proof 
lemma 
lemma 
surely 

nk 
proving lemma apply deduce existence 
representation linear combination eigenvectors show coefficients small compared 


inequality follows proposition assertion holds define 
lemma follows 
kn fact hand collinear 
note discussion supplies estimate second eigenvalue substituting inequality 
obtain lemma 
nk kn kn implies proving corollary 
alon corollary 
second eigen alue matrix surely satisfies inequality particular bigger 
proof lemma 

denote bm binomial distribution parameters definition matrix random variable ti ky ti xi ky binomially distributed random variable bk yi binomially distributed random variable bn bn 
standard estimates binomial distributions see appendix get surely nlog surely ok nlog 
kk nlog nk remain ing modify expression ti way ti xi yi written xi yi applying standard estimates binomial distributions get surely log 
nlog 
implies nk 
log nlog nk 
remains bound 
definition xi fori viewed sum independent random variables values equal probability 
implies expected value xi expected value ok note finding large hidden clique random graph independent random variables correspond edges going different vertices clique 
expected value kk variance equal sum 
variances ok chebyshev inequality 
obtain surely nk completes proof lemma 
normalized second eigenvector note corollary unique surely 
recall algorithm set indices correspond largest values weuse proposition show surely proving absolute value 
coordinates second eigenvector correspond vertices clique 
note gets set indices 
consider proposition kn number coordinates greater absolute value 
coordinates zi zk conclude coordinates greater coordinates 
implies 
finish proof correctness algorithm show vertex outside clique surely adjacent vertices edge outside clique appears gn randomly independently probability 
vertices outside clique adjacent surely 
vertices clique 
vertices clique follows surely vertex clique 
neighbors guarantees stage algorithm choose vertices clique choose vertex planted clique adjacent vertices shown 

reducing constant main idea improving performance algorithm consider subgraph induced set common neighbors fixed number vertices clique doing achieve goals simultaneously 
gv contains clique size second graph random smaller improve ratio clique size graph algorithm subset define 
algorithm input graph distribution gn 
define log 
subsets alon 
run algorithm induced subgraph gn denote resulting set 

clique size go 

take arbitrary subset 
output subset claim fixed algorithm surely produces hidden clique 
prove observe fixed subset size cardinality random graph gn binomially distributed random variable parameters surely 
subsets vertices size gn addition clique size increase 
surely gn algorithm checks subsets size step reach subset belongs clique iteration surely get hidden clique 
fixed subset clique fixed induced subgraph gn treated truly random graph generate gn follows choose clique fix subset size expose edges fixing expose edges inside 
gn contains clique size 
choice size hidden clique satisfies 
guarantees iteration algorithm find clique proves correctness algorithm 
concluding remarks described polynomial time algorithm finds surely unique clique size gn obvious challenge remains design efficient algorithms surely smaller values fixed problem finding clique size 
log gn suggested open require new ideas 
interesting version problem suggested saks 
suppose graph vertices generated distribution gn distribution gn say obvious powerful prover convince polynomial time verifier deterministically surely generated distribution gn case simply presents clique verifier 
suppose generated distribution gn prover convince verifier randomness course 
case surely 
moment design protocol 

verifier clearly convince algorithm spectral properties graph encode detailed structural information 
ability compute eigenvectors eigenvalues graph finding large hidden clique random graph polynomial time provides powerful algorithmic tool applications see 
spectral approach techniques developed may additional algorithmic applications 
alon boppana monotone circuit complexity boolean functions combinatorica alon spectral technique coloring random colorable graphs proceedings sixth annual acm symposium theory computing pp 
siam comput 

alon approximating independence number function math 
programming alon spencer probabilistic method wiley new york 
arora lund motwani sudan szegedy proof verification intractability approximation problems proceedings third ieee focs pp 

arora safra probabilistic checking proofs new characterization np proceedings third ieee focs pp 

boppana eigenvalues graph bisection average case analysis proceedings eighth ieee focs pp 

boppana approximating maximum independent sets excluding subgraphs bit feige goldwasser lovasz safra szegedy approximating clique np complete proceedings second ieee focs pp 

frieze mcdiarmid algorithmic theory random graphs random structures algorithms furedi eigenvalues random symmetric matrices combinatorica grimmett mcdiarmid colouring random graphs math 
proc 
cam 
phil 
soc hastad clique hard approximate proceedings se ieee focs pp 

jerrum large cliques elude metropolis process random structures algorithms juels hiding cliques cryptographic security proceedings ninth annual acm siam soda pp 

karp reducibility combinatorial problems complexity computer computations miller thatcher eds plenum press new york pp 

karp probabilistic analysis combinatorial search problems algorithms complexity new directions results traub ed academic press new york pp 

kucera expected complexity graph partitioning problems discrete appl 
math alon ralston course numerical analysis mcgraw hill new york section 
razborov lower bounds monotone complexity boolean functions dokl 
ak 
nauk 
sssr 
russian 
english translation 
math 
dokl 
saks personal communication 
spielman 
teng spectral partitioning works planar graphs finite element meshes proceedings se ieee focs pp 

wilkinson algebraic eigen alue problem clarendon press oxford 
