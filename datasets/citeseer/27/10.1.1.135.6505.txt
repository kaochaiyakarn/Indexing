interior point methods combinatorial optimization rpi mathematical sciences report september john mitchell department mathematical sciences rensselaer polytechnic institute troy ny 
research interior point algorithms solve combinatorial optimization integer programming problems surveyed 
discusses branch cut methods integer programming problems potential reduction method transforming integer programming problem equivalent nonconvex quadratic programming problem interior point methods solving network flow problems methods solving multicommodity flow problems including interior point column generation algorithm 

research interior point algorithms solve combinatorial optimization integer programming problems surveyed 
typically problems consider formulated linear programming problems restriction variables take integer values 
methods consider solve problems linear ordering problem clustering problems facility location problems network flow problems nonlinear multicommodity network flow problems satisfiability problems 
discusses main methodologies similar known approaches simplex algorithm fourth method different flavor 
branch cut methods considered section 
simplex branch cut methods successful years solve specific problems traveling salesman problem generic integer programming problems 
research described constructs branch cut algorithm usual type uses interior point method solve linear programming relaxations 
principal difficulty interior point algorithm branch cut method solve integer programming problems warm starting algorithm efficiently solution relaxation give initial solution relaxation 
methods appear interior point methods mathematical programming terlaky kluwer academic publisher 
research partially supported onr number 
john mitchell overcoming difficulty described features algorithms 
focuses techniques necessary obtain efficient computational implementation discussion theoretical issues section 
column generation algorithms structural similarity cutting plane methods describe column generation algorithm solving nonlinear multicommodity network flow problems section 
section discuss method solving integer programming problems reformulating integer programming problem equivalent quadratic programming problem 
quadratic program solved potential reduction method 
potential function nice properties exploited efficient algorithm 
care needed algorithm get trapped local minimum 
discuss related algorithm solving quadratic integer programming problems applied graph partitioning problem example 
network flow problems solved ignoring integrality requirement variables solving linear programming relaxation problem guaranteed optimal solutions linear program solve integer programming problem 
typically problems simplex method considerably enhanced exploiting structure constraint matrix methods linear programming 
challenge design efficient implementation interior point method compete algorithms available 
describe research area section 
interior point approaches multicommodity network flow problem discussed section 
include column generation algorithm mentioned earlier 
problems modelled linear programming problems large solved easily necessary alternative methods just solving linear programming problem 
theoretical issues discussed section 
includes discussion computational complexity interior point cutting plane methods improved complexity results various combinatorial optimization problems obtained interior point methods 
offer section 
interior point branch cut algorithms section discuss solution integer programming problems cutting plane branch bound methods 
considering general case examine example 
consider integer feasible region integer xi shown 
feasible points shown dots 
convex hull interior point methods combinatorial optimization feasible integer points set points fig 

feasible region integer program extreme points 
linear objective function optimal solution integer program min extreme points 
description solve integer program solving linear program min 
course general hard find polyhedral description take 
solution integer program point 
cutting plane method solves lp relaxation integer program min subject problem optimal solution value 
add extra constraint cutting plane lp relaxation violated point satisfied point resolve lp relaxation 
example add constraint 
modern cutting plane methods attempt cutting planes facets convex hull add john mitchell 
harder find strong cutting planes weaker cutting plane cut 
branch bound approach problem examine solution lp relaxation split problem new problems 
new linear programs solved process repeated 
solution linear programming problems arise process integer point solves corresponding part integer programming problem linear programs infeasible corresponding part integer program infeasible 
value linear program provides lower bound value corresponding part integer program bound prune search space guide search 
cutting plane methods branch bound methods combined branch cut method discuss separately order emphasize individual features 
discussion simplex branch cut methods see example books nemhauser wolsey parker 
book detailed integer programming discusses cutting plane algorithms comprehensively summary book see 
book discusses cutting plane algorithms discusses branch bound detail 
nger discuss computational branch cut algorithms solve variety integer programming problems 
mentioned cutting plane branch bound methods setting linear programming relaxation integer programming problem solving relaxation necessary refining relaxation solution relaxation gets closer solution integer programming problem 
methods known years land 
ofcourse results achieved simplex algorithm solve linear programming relaxations focus section interior point method solve relaxations 
unfortunately usually sufficient simply replace simplex algorithm interior point method interior point method simplex algorithm exploiting solution relaxation trying solve relaxation 
relatively poor warm start provided previous relaxation necessary solve relaxations approximately algorithms fairly adept exploiting approximate solution 
refinements traditional branch cut approach necessary interior point method principal difference approximate solutions relaxations 
discuss cutting plane algorithms section branch bound algorithms section 
adding constraint primal linear programming problem structurally equivalent adding column dual problem research column generation algorithms strong impact research cutting plane algorithms vice versa 
section discuss column generation algorithm multicommodity network flow problem 
theoretical performance cutting plane column generation algorithms discussed section 
interior point methods combinatorial optimization 
interior point cutting plane algorithms order simplify discussion assume variables constrained take values zero constraints inequality constraints 
assume integer programming problem form min subject ip xi vectors vector matrix 
assume row space case feasible solution optimal 
assumptions regarding relative magnitudes assumptions regarding matrix 
problems cast framework 
denote convex hull feasible solutions ip 
linear programming relaxation lp relaxation ip min subject lp denotes vector ones appropriate dimension 
way 
optimal solution lp solves original problem ip feasible ip feasible point ip 
optimal solution lp isnot integral improve relaxation adding extra constraint cutting plane form 
cutting plane valid inequality ip violated optimal solution solve modified lp relaxation repeat process 
success simplex cutting plane algorithms achieved polyhedral theory specialized cutting planes cutting planes generally chosen families facets convex hull feasible integer points 
traditionally cutting planes derived optimal simplex tableau mitchell shown cutting planes derived interior point cutting plane algorithm 
prefer write linear programming relaxation problem equality constraints include slack variables get relaxation min subject ax lp vector upper bounds variables ui original integer variables ui takes appropriate value remaining variables 
dual problem lp max subject ld john mitchell 
initialize pick initial primal dual slacks 

approximately solve relaxation solve current relaxation desired degree accuracy interior point algorithm 
current iterate sufficiently accurate solution original problem ip 

add cutting planes see current iterate violates constraints 
tighten desired degree accuracy return step add subset violated constraints go step 
update relaxation restart update variables appropriately 
return step 
fig 

prototype interior point cutting plane algorithm add cutting plane obtain new relaxation min ct subject ax lp new appropriate upper bound new slack variable 
corresponding new dual problem max subject note know feasible solutions lp ld respectively addition cutting plane obtain new feasible solution andw 
pick strictly positive nonnegativity constraints satisfied strictly 
simple obtain feasible solution lp new new constraint cutting plane 
old solution close optimal lp ld hope close solution lp new provides warm start solution new problem 
section discuss interior point method setting 
simple conceptual interior point cutting plane algorithm written 
give formal algorithm 
currently best algorithm linear programming appears primal dual predictor corrector barrier method see lustig mehrotra consider modifying algorithm cutting plane algorithm 
interior point algorithms maintain strictly positive primal dual iterates modified similar manner 
briefly discuss dual algorithm 
interior point methods combinatorial optimization primal dual algorithm interior primal dual iterates andz 
barrier parameter refer iterate centered ui xi wi 
conditions complementary slackness conditions 
interior point methods tend better iterates close centered 
importance having centered iterates theme recur 
motivate discussion describing integer programming problems 

example problems perfect matching problem solved cutting plane algorithm see gr tschel holland mitchell todd 
perfect matching problem graph vertices edges subset edges edges share vertex 
perfect matching matching contains exactly edges denotes cardinality set weights associated edges perfect matching problem find perfect matching smallest weight 
edmonds showed perfect matching problem solved polynomial time 
gave complete polyhedral description perfect matching problem 
showed optimal solution perfect matching problem solutions linear programming problem min subject xe xe odd xe denotes set edges incident vertex denotes set edges equations degree constraints equations odd set constraints 
number odd set constraints exponential number vertices impracticable solve linear programming problem expressed 
cutting plane method initial relaxation consists degree constraints nonnegativity constraints odd set constraints added cutting planes 
consider example graph 
edge weights euclidean lengths edges 
optimal matching 
lp relaxation consisting degree constraints nonnegativity constraints optimal solution edges xe solution violates odd set constraint john mitchell fig 

effect odd set constraint constraint added relaxation optimal solution linear program optimal matching 
problem solved cutting plane algorithm linear ordering problem see example gr tschel nger reinelt mitchell borchers 
linear ordering problem complete directed graph costs cij arcs define cost permutation vertices cij 
linear ordering problem find permutation smallest cost 
linear ordering problem np hard 
problem expressed integer linear programming problem min subject xij xji xij xjk xij gr tschel classes valid inequalities linear ordering problem cutting planes 
real world problems solution linear programming relaxation solves linear ordering problem 
equations known constraints notice 
initial relaxation consists just equations simple bounds xij edge constraints added cutting planes needed 
implementations solutions relaxations integral feasible linear ordering problem case cutting planes cut infeasible integral points 
approach solving linear ordering problem quite fit framework discussed earlier relation problems ip lp framework extended obvious manner include approach linear ordering problem 
traveling salesman problem usually formulated solutions lp relaxations integral infeasible subtour elimination constraints cut infeasible integral points 
discussion traveling salesman problem see interior point methods combinatorial optimization book edited lawler description implementation see applegate 

early termination optimal solution lp interior point 
solve lp optimality necessary perturb solution slightly obtain interior point start solving lp new interior point method 
typically interior point method started close boundary move center feasible region starting move optimal solution 
optimal solution lp starting point trying solve lp new 
successful method try avoid difficulty terminate solution lp early 
interior point start solving lp new 
addition spend iterations returning center polyhedron start moving optimal solution lp new quickly 
spend fewer iterations solving lp solve approximately spend fewer iterations solving lp new start iterate centered 
terminate solution lp early find cutting planes violated current solution 
fact find cutting planes violated current iterate may deeper cuts cut feasible region iterate closer optimal solution center polyhedron 
may able find cutting planes early iterate 
consider example perfect matching problem graph edge weights euclidean lengths 
optimal matching graph fig 

illustration phenomenon nested odd sets uses edges 
optimal solution lp relaxation consisting just degree constraints nonnegativity edges xe edges separation routine detecting violated odd set constraints involves finding connected components graph edges xe threshold 
find violated constraints john mitchell 
search early iterate may xe addition values xe edges larger edges 
appropriately chosen values find violated odd set constraints constraints corresponding odd sets 
constraints solution relaxation fractional constraints necessary ability interior point method find constraints earlier stage means fewer lp relaxation solved 
disadvantages looking cuts solving current relaxation optimality 
firstly may unable find cuts search waste time 
secondly search may return cuts violated current iterate violated optimal solution may solving additional relaxations 
second disadvantage mitigated moving optimal solution center polyhedron making violate unnecessary cutting planes 
method reducing impact disadvantage dynamically altered tolerance deciding search violated cutting planes 
search duality gap drops tolerance 
find large number violated constraints increase tolerance probably need solve relaxation high degree accuracy 
find small number violated constraints decrease tolerance solve relaxations accurately obtain better set cutting planes relaxation better approximation convex hull feasible integer points 
number violated cutting planes drops take fewer iterations solve relaxation relaxations close 
early termination important technique improving interior point cutting plane algorithm 
dynamically altered tolerance determining search cutting planes time spent unnecessary searches dramatically reduced 

restarting algorithm primal feasibility adding cutting plane obtain new feasible interior dual iterate setting andw appropriate small positive value 
straightforward transform old primal iterate feasible interior iterate new problem lp new 
option pick strictly positive value primal dual infeasible interior point method described example zhang 
improve stability performance useful increase small components 
useful take pure centering step restarting 
works reasonably typically third half number iterations required solve problem cold start 
sequence iterates tends move center feasible region away optimal solution attempting regain feasibility result takes iterations solve lp new 
better performance obtained possible update interior point methods combinatorial optimization primal iterate point known feasible interior lp new 
interior point convex combination feasible integral points satisfy cutting planes feasible lp new 
addition interior lp new provided satisfies cutting planes strictly 
point relative interior feasible interior lp new 
straightforward find initial point type point updated algorithm progresses combining integral solutions heuristics combining iterate convex hull 
improved performance algorithm need balance search feasibility searches optimality centrality point convex hull centered point feasible lp 
possible reason difficulty restarting interior point cutting plane method infeasible point developed example anstreicher mizuno zhang discussed interior point algorithms linear programming move feasibility complementary slackness simultaneously 
common feature analysis algorithms exploitation fact move feasibility fast move complementary slackness 
restarting directly approximate solution previous relaxation lp primal infeasibility 
total complementary slackness 
order get iterate approximately centered choose 
complementary slackness approximately ratio infeasibility complementary slackness large small 
choices andz require tradeoff centrality balance infeasibility complementary slackness 
may explain hard get fast convergence infeasible warm start generated cutting plane algorithm 
ye mizuno todd introduced skew symmetric self dual algorithm linear programming 
investigation algorithm described example 
algorithm property easy generate perfectly centered initial iterate 
potential algorithm useful cutting plane framework take iterate previous relaxation modify slightly obtain centered iterate new relaxation 
issue needs computational investigation 

adding constraints usual practice add constraints 
add constraints relaxation lp obtain new relaxation min subject ax lp john mitchell appropriate upper bound new slack variables 
note vectors matrix appropriate dimension 
corresponding dual problem max subject andz vectors dimension equal number added constraints 
interior feasible solution lp ld get interior feasible solution setting andw small positive constant 
positive vector restart infeasible interior point method 
alternatively may possible update primal solution point feasible lp 
algorithm restarted constraints added way restarted constraint added 
large number constraints occasionally generated solving problems 
constraints added relaxation algorithm slows reasons lp relaxation changed dramatically interior point algorithm takes iterations approach new center iterations move optimal solution 
constraint matrix far larger computational time required iteration increases 
takes iterations solve linear program large number constraints small number 
advisable add subset constraints 
simplest method choosing constraints add add constraints violated approximate solution lp 
disadvantages method may add large number similar constraints constraint large violation may important 
situations useful consider effect constraint structure constraint matrix deciding add constraint 
desirable keep cholesky factors product aa sparse order able calculate projections quickly add lot constraints variables constraints going lead fill aa important consideration solving linear ordering problem 
problem advantageous add subset violated constraints pairwise arc disjoint arc appears different inner product rows constraint matrix representing constraints nonzero fill aa alternative measure importance constraint proposed atkinson vaidya considered convex feasibility problems 
interior point methods combinatorial optimization setting current relaxation constraints gx upper bound consider possible constraint form 
suggest looking interplay constraint hessian barrier function interior point method particular full column rank quantity large constraint important appropriate diagonal matrices 
cutting plane algorithm described earlier section calculates projections matrices form appropriate diagonal matrices products related see example birge similar test derived quantities available algorithm 
best knowledge investigated measure computationally 

dropping constraints computationally useful able drop constraints reduce time required iteration reducing size constraint matrix 
additional benefit dropping constraints smaller linear programs require fewer iterations solve 
simplest way decide drop constraint check slack value current iterate satisfies constraint easily constraint candidate dropped 
constraint dropped structure matrix aa changed necessary calculate new ordering columns matrix cholesky factorization 
algorithm described dropped constraints constraints added matrix 
atkinson vaidya measure importance constraint decide drop constraint 
best knowledge attempted heuristic principally required calculate measure 

primal heuristics primal heuristics algorithms generate integer solutions ip fractional solutions lp 
cheap possible call iteration usually cost effective call separation heuristics called 
problems usually considerably easier find optimal solution prove optimal 
primal heuristics may find optimal solution cutting plane method prove solution optimal 
objective function vector integer need proceed cutting plane algorithm lower bound provided value ld value best known feasible solution ip provided primal heuristics 
primal heuristics may save letting terminate having construct relaxation optimal solution feasible ip 
interior point method converging point interior optimal face primal heuristics may provide optimal solutions ip terminate algorithm value relaxation agree value integer solution 
primal heuristics may john mitchell search cutting planes forced branch 
primal heuristic algorithm save great deal time 
primal heuristic modify restart point modified slightly closer integer point generated primal heuristics 

multiple optimal solutions degeneracy integer programming problem multiple optimal solutions iterates generated interior point cutting plane method converge point interior optimal face case primal heuristics usually find optimal solution ip 
alternatively megiddo approach find optimal basic feasible solution solve ip 
megiddo algorithm strongly polynomial 
possible fractional optimal solution may provide information optimal integer solutions 
example linear ordering problem optimal fractional solution corresponds partial ordering nodes ordering agrees partial ordering optimal 
survey effects degeneracy interior point methods linear programming problems see ler 
degeneracy appear serious problem interior point methods simplex algorithm 
principal practical effect degeneracy interior point method cause possible numerical problems numerical instability ill conditioning projection matrix 
integer programming problems highly degenerate relaxations interior point method particularly suited problems 

fixing variables simplex branch cut methods reduced costs fix variables zero manner 
reduced cost variable currently zero solution relaxation 
ub value best known feasible solution ip lb value relaxation 
ub lb variable zero optimal solution ip 
similar test fixing variable 
reduced costs available current interior solution relaxation lp dual variables available fix variables 
zi dual variable corresponding primal variable xi lb value current feasible solution ld zero zi ub lb similar test fix variables 
see mitchell details 

complete algorithm summarize complete algorithm 

algorithms require positive dual iterates adding constraints primal problem current primal iterate infeasible dual variables corresponding additional columns value zero 
interior point methods combinatorial optimization 
initialize 
set initial relaxation 
find initial interior primal dual points 
possible find feasible point possible find restart point step 
inner iteration 
perform iteration primal dual algorithm 
duality gap tolerance repeat step 

primal heuristics 
primal heuristics try improve current best solution ip 
successful update known feasible point relative interior 
look cutting planes 
heuristics exact algorithms find cutting planes exist 

add cutting planes 
cutting planes step add appropriate subset 

fix variables 
possible fix variables zero 

drop cutting planes 
cutting plane appears longer important drop 

modify current iterate 
increase small components small value 
feasible point relative interior known update primal solution point 
increase small components vector primal slacks 
modify barrier parameter 
predictor corrector algorithm perform pure centering step get better initial point relaxation 
return step fig 

interior point cutting plane algorithm barrier methods affine methods projective methods developed solving problems just primal variables just dual variables methods solve dual problem 
mitchell todd considered projective algorithm applied dual problem cutting plane algorithm 
algorithm require primal iterates uses value primal feasible point calculating direction iteration 
heuristics generate primal solutions 
cutting planes added primal problem strictly positive dual iterate obtained moving direction guaranteed increase additional dual variables algorithm restarted new point 
obtained reasonable computational results matching problems terms number iterations required 
obtained promising results linear ordering problems details see 
goffin experimented algorithms require primal iterates algorithms nonsmooth optimization multicommodity flow problems 
discussion algorithm multicommodity flow problems see section 

interior point branch bound methods branch bound method solving integer programming problem ip solving sequence linear programming problems 
subproblems regarded forming tree rooted linear programming relaxation lp john mitchell integer programming problem 
move tree integer variables fixed values 
provide brief description technique order highlight aspects prove important interior point method 
detailed discussion branch bound options available see example parker 
interior point cutting plane methods important features competitive interior point branch bound algorithm relaxations solved optimality terminated early 
usually possible argue 
branch bound things happen node tree 
subproblem infeasible interior point method detected finding ray dual problem 
subproblem optimal value worse value known integer feasible solution node bounds interior point method usually detected subproblem solved optimality 
optimal solution integer solution value better best known solution case need solve subproblem optimality node 
final possibility optimal solution subproblem optimal value smaller best known solution optimal solution feasible integer program case possible heuristics basis identification techniques described el determine integer variables tending fractional value probably solve relaxation optimality branch early 
noted case necessary solve relaxation optimality case node 
branch early constraint dual relaxation ld dropped previous solution ld feasible 
variable lp fixed infeasibilities introduced lp 
despite possible solve child node quickly 
branch bound interior point algorithm form 
notice necessarily maintain primal dual feasibility algorithm 
means tests convergence depend iterates feasible 
relaxation infeasible detected step 
relaxation optimal value worse best known integer solution detected step 
situations solution relaxation take iterations node 
relaxation integer solution better best known solution relaxation solved optimality node step 
solution relaxation may take iterations exact solution needed node 
course possible rounding heuristics provide optimal solution relaxation early sufficiently close value dual value solution relaxation terminated early 
possibility node tree optimal solution relaxation fractional value smaller best known integer solution 
discuss situation section 
necessary branch child nodes created 
may eventually necessary solve relaxations child nodes necessary interior point methods combinatorial optimization 
initialize pick initial relaxation 
choose initial primal dual iterate example method lustig 
set tolerance optimality 
initialize branch bound tree contain initial relaxation 

pick node select node branch bound tree solve 
find initial solution node 
discuss method restarting node 

perform interior point iteration perform iteration interior point method current node 
attempt find integer solution rounding fractional solution appropriate manner 
gives best solution far store take value upper bound optimal value ip 
duality gap current relaxation smaller primal value better upper bound optimal value ip primal solution integral node update upper bound optimal value ip return step 
primal value go step 
dual value current node greater best known upper bound prune node 
find dual ray showing primal problem infeasible prune node 
current solution dual feasible relative primal infeasibility smaller tolerance go step 
repeat step 

check check see solution current node appears fractional 
appears solution node fractional appears node bounds go step return step 
branch split current node nodes 
pass current primal dual solution child nodes warm start 
go step 
fig 

interior point branch bound algorithm start interior point method relaxations 
simplex method start directly solution parent node dual simplex algorithm 
necessary modify solution parent slightly restarting interior point method order obtain slightly centered point 
discuss restarting detail section 
linear programming problems generated branch bound tree suffer considerable degeneracy greatly slow simplex method 
degeneracy generally problem interior point methods commercial package installed switch change simplex interior point method branch bound tree difficulties arise 
applegate implemented switch 
discussion effects degeneracy interior point methods linear programming see ler 
john mitchell cost simplex algorithm branch bound method necessary perform initial basis factorization child subproblem 
cost clear examining example performance branch bound code osl solving integer programming problems happens average time iteration times larger subproblems root node branch bound tree 
extra time completely attributable overhead required node calculate new basis factorization 
comparable slow happen interior point methods 
way avoid overhead store basis factorization parent node usually requires storage impracticable 
course part reason slow noticeable simplex algorithm requires far fewer iterations solve subproblems solve root node optimal solution parent node provide simplex warm start child subproblem 
possible get similar reduction interior point method fact basis expensive means necessary obtain reduction number iterations enjoyed simplex algorithm 
interior point branch bound methods somewhat competitive simplex branch bound algorithms problems including facility location problems 
problems large number continuous variables relatively small number integer variables lp relaxations large branch bound tree small 
necessary large relaxations interior point method compete simplex method 
addition need problem solvable current hardware branch bound tree grow large need small number integer variables 
early termination solution relaxations information available node select branching variable node calculated accurately 
reason interior point method currently competitive problems small proportion integer variables situation effect bad choice branching variable dramatic 
research needed find reliable interior point branch bound method 
conclude section interior point branch bound methods discuss restarting algorithm subsection terminating solution relaxation early iterates tending fractional solution subsection 

terminating current relaxation early section assume optimal solution relaxation fractional value smaller best known integer solution 
situation basis identification techniques mentioned step 
usually save iterations solution current node result termination centered iterate result better initial iterate child node 
risk associated attempting solution parent subproblem early parent may split child subproblems interior point methods combinatorial optimization possible prune parent solved optimality 
happen parent subproblem worse objective function value best known feasible solution ip infeasible integer optimal solution 
notice possibility basis identification techniques working 
wise include safeguards attempt avoid situation 
upper lower bounds value subproblem provided values current primal dual solutions respectively regulate decision branch 
tests prevent branching early dual iterate feasible relative primal infeasibility greater dual objective function increasing quickly iteration iteration node bound iteration 
dual feasibility usually maintained branch bound tree criterion basically just technicality 
time variable fixed primal infeasibility introduced initial iterate subproblem warm start primal infeasibility regained iterations 
important criterion third regarding increase dual value 
criterion prevents branching difference dual value value incumbent integer solution reduced half iteration provided current primal value greater current integer solution current primal iterate feasible 

warm starting node tree exact method restarting node branch bound tree depends interior point algorithm 
section assume barrier method employed see example lustig 
noted observations applicable interior point methods 
assume child problem created fixing variable parent problem min subject ax lp parent matrix vectors vectors scalars 
child problem form min subject ax lp child fixed zero fixed 
approximate solution lp parent known 
created particular child problem fractional probably infeasible lp child 
john mitchell examine dual problems max subject max subject notice approximate solution feasible changed objective function value 
possible restart algorithm infeasible interior point method 
may components close zero components modified give slightly interior point small components increased large components decreased 
similarly components dual variables smaller tolerance increased cost making initial iterate subproblem slightly infeasible 
start interior point method child problem stored andw beneficial pure centering step updating barrier parameter standard manner 
may possible start solution child problem iterate lp parent earlier iterate optimality lp parent may better initial solution lp child just centered nonbasic components somewhat larger 
preliminary experiments show approach may hold promise needs considerably investigation 

potential function method karmarkar various coauthors proposed novel approach solve integer programming problems 
approach examines related continuous optimization problem uses continuous problem approach solution original integer program 
outline approach section 
algorithm transforms problem hard equivalent quadratic programming problem see section 
iteration strictly feasible iterate hard qp solves easier nonconvex quadratic programming problem find direction hard quadratic problem see section moves direction obtain new iterate rounds new point integer point checked feasibility see section 
may happen algorithm converges solution method handling situation described section 
computational experience algorithm discussed section 
section describe method solving quadratic integer programming problems 
interior point methods combinatorial optimization 
transforming problem integer programming feasibility problem stated find point satisfying xi matrix vector 
scaled give equivalent problem find point satisfying xi transformed nonconvex quadratic programming problem min subject qp problem qp written equivalently min subject ax qp define soa matrix vector 
feasible solutions correspond points qp value zero 
feasible point qp positive value 
algorithm initialized strictly feasible point problem qp 

finding iterate algorithm uses interior point method attempt minimize potential function log log si ax 
point global minimizer potential function feasible solution 
iteration quadratic approximation potential function constructed direction obtained finding minimum quadratic approximation inscribed sphere 
gradient potential function current iterate kt diagonal matrix diagonal elements entries vector hessian potential function current point kt 
noted hessian dense matrix due outer product vector 
subproblem solved find direction john mitchell min subject xa feasible point subproblem leads feasible point problem qp 
solution subproblem depends eigenvalues hessian matrix norm defined matrix details see 
subproblem solved polynomial time 
methods solving see ye 
kamath originally proposed step fixed length direction subsequently pointed shi algorithm considerably enhanced line search determine step length 
van developed variant algorithm solve radio link frequency assignment problem 
refinements original algorithm included method deal equality constraints barrier method potential function method hessian matrix retains sparsity structure structure problem slack variables original problem binary 
observation develop quadratic objective function enabled eliminate inequality constraints 

obtaining integer point iteration new strictly feasible point qp obtained 
point rounded obtain integral point simplest method obtain set rounding schemes 
example choose examining xk increasing decreasing 
problems structure problem suggests natural rounding scheme example van suggested rounding schemes radio link frequency assignment problem 
rounded point feasible qp terminate algorithm success leads feasible point original problem 

avoiding local minimizers nonconvex quadratic problem may local minimizers fractional points global minimizers 
happens may rounded solution remains infeasible 
situation possible add constraint kt notice point satisfies constraint adding constraint algorithm restarted strictly feasible point 
best restart scratch objective function nonconvex want generate sequence iterates lead local minimizer 
guarantee equation cut local minimizer karmarkar claims addition constraint usually sufficient push sequence interior point methods combinatorial optimization iterates different direction algorithm terminates different point 

computational experience algorithm solve set covering problems 
solve satisfiability problems inductive inference obtaining promising results compared implementation davis putnam procedure implicit enumeration procedure similar branch bound 
shi improved results incorporating linesearch 
van solved radio link frequency assignment problems potential reduction method 
cleverly exploiting structure model able develop variant algorithm solves problems variables constraints 
algorithm solve optimization problems incorporating constraints form ct resolving different values noted method essentially heuristic determine infeasible instance really infeasible 
algorithm lead guarantee optimal solution solving optimization problems 

quadratic integer programming problems kamath investigated potential function interior point method solve quadratic integer programming problems form max qx subject xi symmetric matrix vector 
problem np hard positive eigenvalue 
graph partitioning problem modeled manner 
able method obtain upper bounds optimal value quadratic integer programming problem polynomial time 
approach encloses feasible region ellipsoid finds maximum value objective function ellipsoid modifies ellipsoid appropriately 
maximum value objective function ellipsoid largest eigenvalue appropriate matrix 
modifying ellipsoid appropriately possible obtain reasonable upper bound optimal value quadratic problem 

solving network flow problems 
network flow problems arise shipment commodities example oil telephone calls cars network sources destinations 
example oil shipped oil fields eventual destination telephone calls routed caller destination telephone network cars routed city offices commercial buildings 
john mitchell network flow problems modeled linear programming problems constraint matrix special structure 
historically problems solved specialized versions simplex algorithm designed exploit structure constraint matrix 
researchers experimented interior point algorithm solve linear programming problems results competitive network simplex method 
describe computational results section 
expected interior point method modified order exploit structure constraint matrix fully 
principal modification preconditioned conjugate gradient method calculate necessary projections iteration 
describe modifications section 
overview area contained resende pardalos 
implementation dual affine method described resende veiga :10.1.1.51.8456
interior point algorithms investigated portugal 
network flow problems applications see book ahuja 
describe minimum cost network flow problem 
directed graph vertices arcs vertex denoted 
flow moves network directed arcs 
flow produced node consumed node node called source node 
flow consumed node produced node node called sink node 
node source node sink node called transshipment node 
bi denote net required flow node source bi sink bi node transshipment node 
feasible flow exist necessary bi 
flow satisfy kirchhoff law flow conservation total flow node equal sum bi total flow node node unit flow shipped arc 
assume loss generality lower bound arc zero see denote upper bound arc 
minimum cost network flow problem meet demands nodes minimum cost satisfying kirchhoff law bounds edge capacities 
expressed linear programming problem min subject xij xji bi xij uij xij denotes flow arc 
usually problem data integer case optimal solutions linear program integer 
denote node arc incidence matrix graph 
column corresponds arc entry row entry row remaining entries zero 
notice constraint written ax rank matrix equal difference interior point methods combinatorial optimization 
constraint matrix diagonal matrix preconditioner vector tolerance want calculate approximate solution equation 

initialize set 
main loop stopping criterion satisfied repeat steps calculate qk ada pk 
calculate rk qk 
calculate vk vk kpk 
calculate rk rk kqk 
find zk solving rk 
calculate rk rk 
calculate pk zk kpk 
increase iteration counter 

final solution vk 
fig 

preconditioned conjugate gradient algorithm number vertices number connected components graph 
redundant row eliminated connected component 
simplicity notation retain redundant rows understood rows eliminated 
combinatorial optimization problems formulated minimum cost network flow problems 
examples include assignment problem transportation problem shortest path problem maximum flow problem 
details see 
multicommodity network flow problem commodity moving network 
see section discussion interior point multicommodity network flow algorithms 
background multicommodity network flow problem see example books ahuja minoux 

components interior point network flow methods 
calculating projections preconditioned conjugate gradient method implementation interior point method necessary find direction iteration solving system equations ada constraint matrix diagonal matrix unknown vector known vector 
usually done calculating factorization matrix ada matrix vector change iteration iteration necessary solve system vector iteration algorithms 
resende veiga showed superior performance obtained network flow problems system solved preconditioned conjugate gradient method 
preconditioned conjugate gradient algorithm solving 
preconditioner denoted matrix positive definite john mitchell matrix chosen matrix ada ill conditioned original matrix ada improve convergence conjugate gradient algorithm 
notice step preconditioned conjugate gradient algorithm requires solution system equations involving loop algorithm probably executed times calculation projection essential considerably easier solve system equations involving involving ada structure network flow problem possible choose preconditioner simplest preconditioner take diagonal matrix ada simple compute calculation zk trivial effective 
sophisticated preconditioner exploits nature problem maximum weighted spanning tree mst preconditioner 
edges graph weighted corresponding elements diagonal matrix maximum weight spanning tree kruskal algorithm prim algorithm 
descriptions algorithms finding maximum weight spanning forest see 
denote columns corresponding edges maximum weight forest 
mst preconditioner ds diagonal matrix containing entries edges maximum weight spanning forest 
preconditioned residue system solved step solved time proportional number vertices coefficient matrix permuted block triangular form 
diagonal preconditioner appears better mst preconditioner early iterations interior point algorithm requires fewer steps preconditioned conjugate gradient algorithm obtain direction sufficient accuracy 
situation reverses iterations 
initially mst preconditioner poor approximation matrix ada puts emphasis edges really possible decide edges important 
eventually mst preconditioner better approximation matrix ada possible pick right subset edges 
resende veiga diagonal preconditioner initially switch mst preconditioner performance diagonal preconditioner falls dual affine algorithm :10.1.1.51.8456
portugal proposed preconditioner incomplete qr factorization matrix preconditioner appears behave diagonal preconditioner early iterations mst preconditioner iterations perform better preconditioners intermediate iterations 
preconditioner primal dual interior point algorithm network flow problems 
preconditioner proposed karmarkar ramakrishnan selectively zeroing elements da resulting modified product ada incomplete cholesky factors approximation matrix preconditioner 
preconditioner performs similarly diagonal preconditioner early iterations similarly mst preconditioner iterations 
discuss stopping criterion preconditioned conjugate interior point methods combinatorial optimization gradient algorithm 
recall want solve equation vectors vk successive approximations check papers discussed section examines vector ada vk angle vector right hand side vector close zero solved equation approximately 
resende veiga criterion preconditioned conjugate gradient algorithm halted cos cos cos early iterations interior point algorithm gradually decreased 
calculation cos requires conjugate gradient iteration calculated fifth iteration resende veiga 
additionally conjugate gradient method halted size residual rk small 

recovering optimal flow node arc incidence matrix totally unimodular basic feasible solution network flow problem integral provided integral iterate generated simplex algorithm corresponds integral flow 
basic feasible solutions correspond forests graph nonzero flow edges forest 
interior point method usually converges point relative interior face optimal solutions optimal solution unique interior point method return integral solution 
discuss methods obtain integral optimal solution iterates generated interior point algorithm 
maximum weight spanning tree preconditioned conjugate routine guess optimal solution basic solution corresponding forest feasible corresponding dual solution feasible solution optimal 
works solution unique unfortunately usually presence multiple optimal solutions 
primal basic solution feasible current dual iterate projected give point complementary primal basic solution 
edges dual slack small magnitude dual vector define subgraph original graph 
edges subgraph superset edges forest 
flow edges subgraph assigned flow equal upper bound 
resende veiga attempt find feasible flow original graph adjusting flow edges subgraph 
done solving maximum flow problem guaranteed give integral flow exists 
interior point iterates converge optimality procedure eventually give integral optimal flow provided flows nonbasic edges set correctly upper bound 
resende veiga examine dual variable si corresponding nonbasic variable xi dual variable zi corresponding upper bound constraint variable xi 
zi variable xi set zero set equal upper bound 
interior point method converges optimality setting eventually optimal procedure outlined give optimal integral solution network flow problem 
basis identification method megiddo determine optimal integral basic feasible solution interior point method close 
john mitchell 
comparison network simplex resende veiga compared code version cplex :10.1.1.51.8456
generated problems different structures varying sizes structure 
problem classes generated problems generated various generators contributed dimacs algorithm implementation challenge generators available dimacs rutgers university ftp site dimacs rutgers edu 
cplex code resende veiga able solve generated problems providing integer flows output 
classes interior point code faster cplex largest problems 
remaining classes difference interior point code simplex code decreasing problem size increased 
shows interior point methods outperform simplex algorithm problem classes lend sophisticated implementations simplex 
interior point method successful necessary preconditioned conjugate gradient method calculate projections various techniques outlined discussed detail 
computational runs authors took hours runs cplex took longer day 
number workstations solving separate problem obtain results able solve problems considered large 
large problems advantages interior point methods clear 

multicommodity network flow problem section describe interior point approaches multicommodity network flow problems 
nonlinear multicommodity network flow problem separable increasing convex costs modelled nonlinear programming problem linear constraints 
problems interest generally create large nonlinear programs 
arise example areas telecommunication transportation computer networks multi item production planning 
discussion multicommodity network flow problem see books ahuja minoux 
description single commodity linear network flow problems see section 

column generation algorithm multicommodity network flow problem goffin described interior point algorithm solving nonlinear multicommodity network flow problems similarities dantzig wolfe algorithm 
algorithm column generation method new columns added time bunches 
approximately solves nonlinear program arises stage projective method specifically de vial variant karmarkar algorithm 
column generation subproblem formulated shortest path problem solved implementation dijkstra algorithm 
goffin previously described column generation interior point interior point methods combinatorial optimization algorithms designed solve nonsmooth optimization problems 
research described section continuation extension described earlier papers 
graph set commodities denote node arc incidence matrix commodity source nodes flow produced sink nodes flow consumed transshipment nodes flow balance 
required net flow node commodity represented goffin restrict case commodity exactly source node sink node 
capacity ye arc selected associated convex cost fe xe upper bound capacity denoted associated commodity arc linear cost unit commodity shipped arc multicommodity flow problem formulated min subject fe ye xie ye axi di ye 
represents flow commodity arc ye represents total flow arc assume cost function fe ye strictly increasing convex costs ce nonnegative 
standard linear multicommodity flow problem corresponds fe 
equation called coupling constraint equation flow conservation constraint 
equation problem separable 
equation lagrangian relaxation developed problem 
lagrangian multipliers constraints nonnegative structure objective function interior point cutting plane algorithm multipliers positive 
dualizing coupling constraints gives lagrangian ex fe ye ue ye vector lagrange multipliers coupling constraints 
multicommodity flow problem convex solved solving lagrangian dual problem max subject lagrangian dual function min ax lagrangian dual function nonsmooth concave function 
lagrangian dual problem solved obtaining polyhedral approximation john mitchell 
select point localization set loc 

compute ld find subgradient ld 

add inequality definition localization set loc 
inf inf ld 

repeat process termination criterion satisfied 
fig 

column generation algorithm multicommodity flow problem dual function 
differentiable point point gradient 
general satisfies 
points associated optimal value linear programming problem max subject provides upper bound sup optimal value lagrangian dual 
shown large solution linear program solve lagrangian dual 
maximum fork provides lower bound inf optimal value dual optimal solution lies localization set loc inf 
stage algorithm generates point localization set 
point feasible lagrangian dual update lower bound inf point feasible generate new subgradient add corresponding constraint localization set 
case localization set updated find new point set repeat process gap inf sup sufficiently small 
summarize prototypical algorithm dropping iteration counter simplify notation 
step process usually called master problem 
classically solved simplex algorithm process resembles dantzig wolfe decomposition 
goffin interior point method solve master problem 
apply de vial variant karmarkar projective algorithm dual master problem calculate analytic center localization set 
localization set modified addition constraints columns added dual problem 
interior point generated dual technique mitchell todd 
method interior point methods combinatorial optimization goffin generates primal dual iterates approximate solution master problem approximate solution lagrangian dual converted approximate solution multicommodity flow problem 
step prototype algorithm called subproblem oracle 
choices available solution problem multicommodity flow problem depending level disaggregation constraints 
constraints subproblem separable commodity 
possible generate subgradient problem generate subgradients corresponding commodity 
goffin obtained better results constraints generating separate subgradients commodity agreement literature different algorithms solve master problem see jones 
goffin give computational results random problems nodes arcs commodities smaller problems literature 
formulation largest problems primal variables compared algorithm implementation dantzig wolfe decomposition interior point algorithm clearly superior problems discussed 

interior point methods solve multicommodity network flow problem kamath described interior point methods multicommodity flow problem 
approach solves problem linear programming problem dual projective interior point method 
obtained computational results comparable cplex 
second approach places network flow constraints convex quadratic objective function solves minimization problem objective subject capacity constraints 
algorithm theoretical complexity approximately solving multicommodity network flow problem 

computational complexity results 
theoretical behaviour cutting plane algorithms usually straightforward show interior point cutting plane column generation algorithm runs time polynomial total number constraints columns generated algorithm see example mitchell den 
harder problem show algorithm runs time polynomial size original description problem 
integer programming problem separation routine confirms point convex hull set feasible integer points provides cutting plane separates point convex hull 
separation routine runs time polynomial size problem ellipsoid algorithm solve integer programming problem polynomial time see gr tschel 
necessary drop constraints method 
rest subsection assume separation routines require polynomial time 
john mitchell date interior point algorithm solves integer program polynomial time drop constraints due vaidya 
algorithm uses volumetric center analysis differs standard interior point methods 
vaidya analysis algorithm shows polynomial number constraints generated infinite number possible constraints exists 
crucial point proving polynomial complexity algorithm cutting plane column generation algorithm 
alternative analysis algorithm see anstreicher 
anstreicher able greatly reduce constants involved complexity analysis vaidya algorithm making algorithm considerably attractive implementation 
example anstreicher reduced number newton steps factor reduced maximum number constraints factor vaidya algorithm short step algorithm sense reduction duality gap iteration dependent dimension problem 
ramaswamy mitchell developed long step variant vaidya algorithm polynomial convergence 
algorithm reduces duality gap fixed ratio iteration necessary add drop constraints 
atkinson vaidya developed polynomial time cutting plane algorithm analytic center 
algorithm drops constraints unimportant essential complexity analysis 
previous algorithms shown polynomial number additional constraints proof number added constraints polynomial 
atkinson vaidya algorithm finds feasible point set convex inequalities finding analytic center subset inequalities oracle test point satisfies inequalities 
oracle returns violated inequality shifted linear constraint added analytic center remains feasible close new analytic center 
mitchell ramaswamy developed barrier function cutting plane algorithm ideas 
algorithm long step algorithm algorithm necessary add drop constraints reduce duality gap constant fraction 
showed links notion point centered see example roos vial criteria constraint added dropped 
barrier function methods linear programming shown excellent computational performance constructed superlinear quadratic convergence 
appear desirable employ methods column generation algorithm 
goffin pseudopolynomial column generation algorithm need drop columns 
number iterations required get objective function value optimality polynomial algorithm obtain solution optimality time polynomial size data 
papers analyzing algorithms add cuts see example luo ramaswamy mitchell ye 
papers generally show complexity algorithm harmed cuts added bounds number constraints added simultaneously 
interior point methods combinatorial optimization earlier theoretical papers interior point cutting plane algorithms generally added constraints far current center center new system close center old system 
goffin shows possible add cutting plane right current analytic center changing complexity algorithm 
ye extended analysis case multiple cuts placed right analytic center 
ramaswamy mitchell describe algorithm adds multiple cuts analytic center show new analytic center regained log iterations number added cuts 

improved complexity results selected combinatorial optimization problems research interior point methods algorithms solve combinatorial optimization problems solved polynomial time 
led improved complexity results problems 
research interior point methods positive semi definite programming lead improved algorithms various problems combinatorial optimization 
example see chapter book alizadeh papers goemans alizadeh chapter book :10.1.1.35.4131:10.1.1.3.9509
bertsimas orlin interior point algorithm convex programming vaidya obtain algorithms superior theoretical complexity combinatorial optimization problems principally giving new method solving lagrangean dual problem 
leads improved complexity lower bounding procedures traveling salesman problem particularly held karp method steiner tree problem connected problem vehicle routing problems multicommodity flow problems facility location problems 
xue ye described interior point algorithm solving problem minimizing sum euclidean norms 
algorithm solve problems related steiner trees better theoretical complexity previously best known algorithm 

discussed ways interior point methods solve combinatorial problems 
methods discussed include algorithms simplex method replaced interior point method new method appears unrelated previous simplex algorithms 
discussed incorporating interior point methods cutting plane branch bound algorithms integer programming section 
order successfully necessary able warm start somewhat efficiently 
effective warm start interior point method active area research warm start exploited successfully interior point method performance interior point cutting plane branch bound algorithms considerably enhanced 
research date important technique appears early termination current relaxation solved john mitchell tolerance optimality attempt refine relaxation 
currently interior point cutting plane methods appear somewhat competitive simplex cutting plane algorithms problems 
interior point branch bound algorithms appear weaker simplex algorithms size problems currently solved 
linear programming interior point methods start outperform simplex large problems branch bound interior point method advantageous large problems thousands variables constraints 
pure integer problems size currently generally intractable 
interior point branch bound methods currently useful problems small number integer variables large number continuous variables 
hardware improves possible solve larger problems interior point branch bound methods attractive 
additionally warm start exploited efficiently interior point method attractive smaller problems 
described potential reduction algorithm transforms integer programming problem equivalent quadratic program section 
algorithm appears reasonable computational performance solve large problems previously unsolved 
described interior point methods solve network flow problems section 
problems solved solving single linear program 
computational results interior point method better specialized simplex method large problems classes 
research multicommodity network flow problem discussed section 
column generation algorithm appears outperform classical dantzig wolfe decomposition problems described 
methods relative performance interior pont method methods improves problem size increases 
typical computational results interior point methods linear programming problems 
interior point methods probably method choice small medium sized problems may preferred method larger problems computational hardware improves sufficiently possible routinely solve problems currently large 
increasing parallel computers networks workstations leading solution larger problems 
course improvements simplex may keep method choice large problems expect classes problems interior point method superior large instances 
research algorithms discussed ongoing researchers involved attempting solve larger problems effort determine best algorithm large hard problems 
discussed theoretical issues concerning cutting plane column generation algorithms section 
polynomial time interior point cutting plane algorithms 
date polynomial time interior point cutting plane algorithm analytic center drop constraints 
algorithm exists interesting open problem 
discussion section improved complexity results various combinatorial optimization problems starting point probably active research area years 
interior point methods combinatorial optimization 
ahuja magnanti orlin 
network flows 
prentice hall englewood cliffs new jersey 

alizadeh 
interior point methods semidefinite programming applications combinatorial optimization 
siam journal optimization 

anstreicher 
combined phase phase ii scaled potential algorithm linear programming 
mathematical programming 

anstreicher 
vaidya volumetric cutting plane method convex programming 
technical report department management sciences university iowa iowa city iowa september 

applegate bixby cook 
finding cuts tsp preliminary report 
technical report mathematics bell laboratories murray hill nj 

atkinson vaidya 
cutting plane algorithm convex programming uses analytic centers 
mathematical programming 

van jansen roos terlaky 
radio link frequency assignment project technical annex potential reduction methods 
technical report faculty technical mathematics informatics delft university technology delft netherlands 

bertsimas orlin 
technique speeding solution lagrangean dual 
mathematical programming 

birge freund vanderbei 
prior reduced fill solving equations interior point algorithms 
operations research letters 

borchers 
improved branch bound algorithms integer programming 
phd thesis rensselaer polytechnic institute mathematical sciences troy ny 

borchers mitchell 
interior point method branch bound algorithm integer programming 
technical report mathematical sciences rensselaer polytechnic institute troy ny march 
revised july 

cplex optimization cplex linear optimizer mixed integer optimizer 
suite tahoe blvd bldg incline village nv 

davis putnam 
computing procedure quantification theory 
assoc 
comput 
mach 

dimacs 
dimacs international implementation challenge benchmark experiments 
technical report dimacs rutgers university new brunswick nj 

edmonds 
maximum matching polyhedron vertices 
journal research national bureau standards 

edmonds 
paths trees flowers 
canadian journal mathematics 

el tapia zhang 
study indicators identifying zero variables interior point methods 
siam review 

feige michel goemans 
approximating value prover proof systems applications max sat max 
proceedings third israel symposium theory computing systems 

de 
vial 
polynomial newton method linear programming 
algorithmica 

michel goemans david williamson 
improved approximation algorithms maximum cut satisfiability problems semidefinite programming 
assoc 
comput 
mach 
appear 
preliminary version appeared proc 
th annual acm symposium theory computing 


goffin 
vial 
solving nonlinear multicommodity network flow problems analytic center cutting plane method 
technical report faculty management mcgill university montreal quebec canada october 


goffin 
vial 
decomposition nondifferentiable optimization projective algorithm 
management science 
john mitchell 

goffin 
luo ye 
complexity column generation algorithm convex problems 
large scale optimization state art 
kluwer academic publishers 


goffin 
luo ye 
complexity analysis interior cutting plane method convex feasibility problems 
technical report faculty management mcgill university montr qu bec canada june 


goffin 
vial 
cutting planes column generation techniques projective algorithm 
journal optimization theory applications 


algorithm integer solutions linear programs 
graves wolfe editors advances mathematical programming pages 
mcgraw hill new york 

gr tschel holland 
solving matching problems linear programming 
mathematical programming 

gr tschel nger reinelt 
cutting plane algorithm linear ordering problem 
operations research 

gr tschel lovasz schrijver 
geometric algorithms combinatorial optimization 
springer verlag berlin germany 

ler den roos terlaky tsuchiya 
degeneracy interior point methods linear programming survey 
annals operations research 

den 
interior point approach linear quadratic convex programming algorithms complexity 
phd thesis faculty mathematics informatics tu delft nl bl delft netherlands september 

den roos terlaky 
build variant path method lp 
operations research letters 

ibm 
ibm optimization subroutine library guide august 
publication number sc 

jones lustig powell 
multicommodity network flows impact formulation decomposition 
mathematical programming 

nger reinelt 
practical problem solving cutting plane algorithms combinatorial optimization 
technical report institut informatik universit zu ln ln germany march 

kamath 
efficient continuous algorithms combinatorial optimization 
department computer science stanford university palo alto ca february 

kamath karmarkar 
continuous approach compute upper bounds quadratic maximization problems integer constraints 
floudas pardalos editors advances global optimization princeton series computer science pages 
princeton university press princeton nj usa 

kamath karmarkar 
nl iteration algorithm computing bounds quadratic optimization problems 
pardalos editor complexity numerical optimization pages 
world scientific publishing singapore usa address river edge nj 

kamath karmarkar ramakrishnan 
computational complexity results interior point algorithm multi commodity flow problem 
technical report department computer science stanford university palo alto ca 

kamath karmarkar ramakrishnan resende 
continuous approach inductive inference 
mathematical programming 

karmarkar 
new polynomial time algorithm linear programming 
combinatorica 

karmarkar ramakrishnan 
computational results interior point algorithm large scale linear programming 
mathematical programming 

karmarkar resende ramakrishnan 
interior point algorithm solve computationally difficult set covering problems 
mathematical programming 

karp 
reducibility combinatorial problems 
miller thatcher editors complexity computer computations pages 
plenum press new york 

napier stutz 
program generating large scale capacitated assignment transportation minimum cost network flow problems 
management interior point methods combinatorial optimization science 

land 
automatic method solving discrete programming problems 
econometrica 

lawler lenstra andd shmoys editors traveling salesman problem 
john wiley new york 


luo 
analysis cutting plane method uses weighted analytic center multiple cuts 
technical report department electrical computer engineering mcmaster university hamilton ontario canada september 

lustig shanno 
implementing mehrotra predictor corrector interior point method linear programming 
siam journal optimization 

lustig shanno 
interior point methods linear programming computational state art 
orsa journal computing 
see 

megiddo 
finding primal dual optimal bases 
orsa journal computing 

mehrotra 
implementation primal dual interior point method 
siam journal optimization 

minoux 
mathematical programming theory algorithms 
wiley new york 

mitchell 
karmarkar algorithm combinatorial optimization problems 
phd thesis school operations research industrial engineering cornell university ithaca ny 

mitchell 
fixing variables generating classical cutting planes interior point branch cut method solve integer programming problems 
technical report mathematical sciences rensselaer polytechnic institute troy ny october 

mitchell 
interior point column generation method linear programming shifted barriers 
siam journal optimization may 

mitchell borchers 
solving real world linear ordering problems primal dual interior point cutting plane method 
technical report mathematical sciences rensselaer polytechnic institute troy ny march 
appear annals 

mitchell ramaswamy 
extension atkinson vaidya algorithm uses central trajectory 
technical report rensselaer polytechnic institute troy ny august 

mitchell todd 
solving combinatorial optimization problems karmarkar algorithm 
mathematical programming 

mizuno kojima todd 
infeasible interior point primal dual potential reduction algorithms linear programming 
siam journal optimization 

nemhauser wolsey 
integer combinatorial optimization 
john wiley new york 

nemhauser wolsey 
integer programming 
nemhauser editor optimization chapter pages 
north holland 

pardalos vavasis 
quadratic programming negative eigenvalue np hard 
journal global optimization 

parker 
discrete optimization 
academic press san diego ca 

portugal dice ao terlaky 
investigation interior point algorithms linear transportation problem 
technical report department mathematics university coimbra coimbra portugal 
appear siam sci 
computing 

portugal resende veiga dice 
truncated primal infeasible dual feasible network interior point method 
technical report bell laboratories murray hill jersey 

ramaswamy mitchell 
updating analytic center addition multiple cuts 
technical report dept decision sciences engg 
systems rensselaer polytechnic institute troy ny october 

ramaswamy mitchell 
long step cutting plane algorithm uses volumetric barrier 
technical report dept decision sciences engg 
systems rensselaer polytechnic institute troy ny june 
john mitchell 
resende pardalos 
interior point algorithms network flow problems 
technical report bell laboratories murray hill new jersey 
appear advances linear integer programming beasley ed press 

resende veiga 
efficient implementation network interior point method 
johnson editors network flows matching dimacs implementation challenge pages 
american mathematical society 
dimacs series discrete mathematics theoretical computer science vol 


resende veiga 
implementation dual affine scaling algorithm minimum cost flow bipartite uncapacitated networks 
siam journal optimization 

roos vial 
polynomial method approximate centers linear programming 
mathematical programming 


shi 
improvement karmarkar algorithm integer programming 
coal bulletin november 

vaidya 
new algorithm minimizing convex functions convex sets 
proceedings th annual ieee symposium foundations computer science pages los alamitos ca 
ieee computer press 
appear mathematical programming 


potential reduction approach radio link frequency assignment problem 
master thesis faculty technical mathematics informatics delft university technology delft netherlands 

xu hung ye 
simplified homogeneous self dual linear programming algorithm implementation 
technical report college business administration university iowa iowa city iowa september 

xu ye 
generalized homogeneous self dual algorithm linear programming 
operations research letters 

xue ye 
efficient algorithm minimizing sum euclidean norms applications 
technical report department computer science electrical engineering university vermont burlington vt june 

ye 
affine scaling algorithm nonconvex quadratic programming 
mathematical programming 

ye 
complexity analysis analytic center cutting plane method uses multiple cuts 
technical report department management sciences university iowa iowa city iowa september 

ye todd ands mizuno 
ano nl iteration homogeneous self dual linear programming algorithm 
mathematics operations research 

zhang 
convergence class infeasible interior point methods horizontal linear complementarity problem 
siam journal optimization 
