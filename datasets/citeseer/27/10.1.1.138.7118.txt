integrated token algorithm scalable coordination yang xu paul scerri bin yu steven okamoto michael lewis katia sycara university pittsburgh carnegie mellon university sis pitt edu byu cs cmu edu ml sis pitt edu katia cs cmu edu efficient coordination large numbers heterogeneous agents promises revolutionize way complex tasks responding urban disasters performed 
state art coordination algorithms capable achieving efficient effective coordination team large 
building successful token algorithms task allocation information sharing developed integrated efficient approach effective coordination large scale teams 
tokens encapsulate needs shared team including information tasks resources 
tokens efficiently routed team local decision theoretic models 
token improve routing tokens leading dramatic performance improvement algorithms 
results implementation approach demonstrates ability coordinate large teams 

efficient flexible coordination large numbers robots agents people promises revolutionize achievement complex distributed tasks 
domains disaster response military business organizations decentralized cooperative coordination dramatically reduce costs improve efficiency lowering risks improving safety 
applications large number heterogeneous agents need coordinate dynamic uncertain environment adjust activities status team teammates 
typically coordination requires tasks including plan monitoring information delivery role allocation resource sharing 
rapid progress developing coordination algorithms teamwork algorithms scale large numbers agents remaining efficient distributed flexible available 
previous coordination typically focused specific coordination task role allocation permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas july utrecht netherlands 
copyright acm 
planning precluding knowledge aspects coordination improve performance algorithm 
example results task allocation process guide resource allocation intuitively improve search 
algorithms designed single coordination tasks scale large teams infeasible requirements requiring accurate models team members 
algorithms scalable rely swarm behavior robust inefficient 
approaches auctioneer require degree centralization desirable 
integrated scalable approach coordinating large number heterogeneous agents 
novel ideas underlie approach 
idea encapsulate coordination interactions including information assignable tasks sharable resources tokens 
agent holding token exclusive control represented token tokens provide type access control 
agents keep tokens pass teammates 
example agent holding resource token exclusive access resource represented token passes token transfer access resource 
resulting movement tokens implements coordination distributing information resources tasks low communication overhead 
second novel idea agents local decision theoretic models determine pass tokens 
agent passes token agent exchange refine local models team 
models decision theoretic way determine forward token agent currently holds maximize expected utility team 
informally agents try pass tokens help team performance inferring local models team member information resource task represented token best position know 
logical static network team limits agents forwarding tokens neighbors network 
result agent directly receives tokens small number neighbors network build better models agents 
ensuring network small world property distance nodes network small effect better models outweighs additional number hops token need take get required 
third novel idea leverage available information creating models team specifically movement token inform movement tokens 
synergistically integrates execution key coordination algorithms way done 
example tokens representing resources useful particular task passed agent token representing task 
intuitively making relationship tokens coordination task efficient focuses search progress coordination tasks 
remainder describe tokens routed network maximize expected utility team 
specifically markov decision process mdp model fully observation team state series approximations develop efficient local reasoning routing tokens 
experiments show local routing models lead dramatic improvement coordination performance 
excluding type token development local reasoning models decreases performance 
notice focuses local routing models builds previously described individual token algorithms 

large scale coordination section provide detailed model organization coordination problem team 
problem description coordination required team agents share top level common goal 
achieving requires achieving number sub goals gi 
sub goal gi satisfied team receives reward 
example sub goals high level goal respond disaster extinguish fires provide medical attention injured civilians 
satisfy sub goals team follows plan templates lan plan plan 
represented library 
template includes parts written gi 
element sub goal gi second conditions applicable event event third element individual roles rk required achieve gi part received team successful satisfaction gi 
role ri represented task description actual thing done capabilities required perform task resources needed perform role 
example fire fighting template defined fight fire location fire alarm smoke 
template requires conditions initiated fire alarm smoke 
plan initiated roles need assigned reward credited team 
roles template driving fire truck fighting fire searching victims driving fire truck driving truck fire truck fighting fire training fire fighting hose water searching victims breathing equipment 
perform agent required able drive access fire truck example subset typical acquaintance network 
exclusive resource 
acquaintance network arrange team acquaintance network 
acquaintance network graph team agents set links agents 
specifically denotes acquaintances able exchange tokens directly 
defined acquaintances agent 
note 
additionally require acquaintance network small world network means relatively small number links separate agents regular grid network 
previous shown networks lead better performance token algorithms 
subset typical acquaintance network large team shown 
node represents team member pairs agents connected line exchange tokens directly 

tokens coordination token algorithms specific tasks developed shown effective specific coordination tasks 
control information included token help agents determine token 
example information sharing control information number hops token move stopping 
task allocation control information minimum capability agent accept task 
algorithms share important common feature tokens operate separately 
generalize integrate token approaches complete approach coordination 
types coordination tokens 
tokens classified basic types information tokens roles tokens resources tokens 
token defined tuple elements ype coordination ath 
ype inf role res denotes type coordination contains information role resource respectively 
coordination captures specific coordination element represented token 
case information token information shared 
case resource token description resource token exclusive access 
case role token description task token responsible 
ath records route token taken network 
path condition information role tokens path empirically set maximum number hops allowed passed 
generalizes control information resource role tokens required information tokens 
agent may keep resource need resource greater token threshold 
determining agent requirement resource outside scope 
agent holds resource token threshold slowly increases maximum 
token passed threshold decreased avoid token passed indefinitely 
mechanism ensures resources flow team resource 
example coordinate team unmanned aerial vehicles uavs holding tokens representing airspace forced relinquish tokens longest held regions thresholds increased airspace critical 
similarly role token accepted agent capability greater threshold threshold decreased accepted 
role allocation algorithm described detailed 

routing tokens token coordination process agents attempt maximize team reward moving tokens team 
agent know exact state team mdp determine expected utility maximizing way move tokens 
unfortunately infeasible agent know complete state illustrative look tokens passed feasible 
dividing monolithic joint activity set actions taken individual agents decentralize token routing process distributed agents parallel independent decisions pass tokens currently hold 
effectively break large coordination problem small ones 
mdp model complete team state basic decision model agent token written mdp action 
state space specific value time defined action action space transition function describes resulting state executing action 
defines instantaneous reward specific state 
model applied agent token 
case state time modelled locations tokens team written 
tokens currently held records incoming going tokens notation convenience write ambiguity 
shows example specific team state 
tokens represent resources roles information unambiguously defines doing resources information 
action move keep 
notation convenience action written move 
note keep example showing part team 
agent holds previously holds holds previously 
token applies agent accepts role requires resource information propagated sufficiently team 
general define function acceptable determine kept agent 
sub goals gi achieved 
team credited instant rewards value 
utility state policy defined communication cost predefined discount factor 
allows agent select actions optimal policy argmax action value iteration argmax action 
policy tells agent move resources information roles maximize team expected utility 
define matrix element move 
represents expected utilities vector send token different state 
local pomdp model knowing complete team state feasible small teams 
large teams agents token coordination decisions limited view team 
reasoning modelled partially observable markov decision process pomdp 
standard pomdp techniques solve pomdp determine optimal token routing 
fast routing tokens local pomdp tell agent optimal action computational complexity high practical applications 
pomdp model provide important hints heuristic approach 
pomdp model defined action 
case observations agent defined include tokens agent currently holds previously incoming going tokens 
observation function defined 
belief state discrete probability distribution vector team state inferred current local state 
example estimates probability 
way solving pomdp mdp 
agent see calculate expected reward vector eu example acquaintances eu eu represents expected utility send mdp 
locally optimal policy argmax action eu 
action agent take maximize expected utility incomplete view team state 
previous example passing best choice eu maximum value eu 

local heuristic approach section provide heuristic approach team coordination inspired local pomdp 
resulting approach allows fast efficient routing decisions requiring accurate knowledge complete state 
section show approach effective improving token routing 
local model decision matrix agent uses decide move tokens 
row represents vector determines decision pass token acquaintances 
specifically value represents decision probability passing token acquaintance action maximize team reward 
policy local model choose action argmax action move 
shows example agent acquaintances 
choose action move pass 
key distributed reasoning lies probability model agent updated 
action indicated matches optimal policy mdp model team act optimally 
initially agents know send tokens tokens received model developed better routing decisions 
model accumulated information provided receipt previous tokens 
example agent sends role acquaintance previously rejected similar role team potentially hurt acquaintance reject role communication bandwidth unnecessarily wasted 
view point depend history received tokens 
update function update defines calculation probability vector send previously received token 
explained detail section 
algorithm shows reasoning agent receives incoming tokens acquaintances function sender line 
incoming token function acceptable determines token kept line 
resource kept threshold raised line 
decides pass add path line update update send previously received token history line 
resource role token agent local model send 
probability best send pass threshold decreased line 
choose best acquaintance pass token line record history line 
algorithm decision process agent pass incoming tokens true sender acceptable type res increase threshold append self path update type res type role decrease threshold acquaintance choose send acquaintance model update function effectiveness token approach depends agents maintain local models tokens routed lead highest gain expected reward 
section describe algorithm update localized decision model utilizing previously received tokens 
key relationships tokens refer relevance 
deciding send token receipt relies knowing relationship tokens 
quantify relationship relevance define relationship tokens rel 
rel indicates agent rel indicates agent rel inferred 
details relevance computed ensure appropriate behavior explained section 
update function written update bayes rule follows path update rel path update update path extracts recorded path token acquaintance agent token earliest 
case function important 
probability sender previous token best agent receive token updated rel 
second case equation changes probability sending token agents sender way ensures subsequent normalization desired effect 
third case encodes idea typically pass token back came 
subse quently normalized ensure 
see updating function works consider example 
supposed agent acquaintances 
rel rel 
path path path 
currently holds applying updating function get result passed acquaintance token similarity agent receives tokens relevant usable concert obtain reward team 
complex pomdp model suggest relevance defined 
local policy matches normalization eu 
eu eu largest expected utility sending token acquaintance result highest probability 
previous example eu optimal behavior 
position see receipt token affects locally optimal policy routing token determine compute relevance 
suppose state estimation agent just token pre arrives arrives state estimation changed gains additional knowledge token 
mdp pre received expected reward eu arrival pre eu agent local model updated pre 
suppose pre comes acquaintance probability send pre comes updated probability arrival pre 
assumption policy model pomdp model choose action send eu eu value component vector acquaintance vector eu 
update function update pre get rel pre 
relationship rel pomdp model rel pre equation conclude received token changes agent estimation probability distribution team state turn directly influences decision send related tokens 
know little bit probability distribution changes agent passed token predict agent updates distributed decision model define relevance tokens 
heuristic captures relationship approximate locally optimal policy lead behavior 
simply estimate value similarity tokens 
intuitively tokens similar receiving token allows agent update estimation team state infer pass similar tokens 
example receiving role token particular acquaintance tells agent relatively similar role tokens accepted part network accessible acquaintance receiving information token information pittsburgh tells agent agents part network currently pittsburgh 
similarities tokens come coordination carry calculation depends domain knowledge applications 
assume coordination coordination deduce similarity tokens sim 
sim pair similar tokens 
example tokens pittsburgh deem similar involved location deem tokens require driving specific machine similar need kind capacity tokens preconditions plan considered similar 
distinguish relationship relevance similarity tokens positively related negatively related 
similar tokens agent previously received token acquaintance prefer send similar token acquaintance similar tokens positively related rel sim agent send similar token acquaintance similar tokens negatively related rel sim similarity different types tokens potentially influences agents estimation different ways 
shown previous example receipt role tokens discourages sending similar tokens agents role tokens paths previous token senders refused role token incapable accepting role interested information tasks resources similar tokens carry 
pre vious role token negatively related similar tokens 
similarly receipt information token indicate agents information tokens paths things related information interested similar tokens 
previous information token positively related similar tokens 
threshold resource token greater initial value init arrival current agent means resource agents previously holding agents potentially engaged tasks requiring resource 
current agent gets similar tokens send part network previous token passed 
case previous resource token positively related similar tokens 
alternatively threshold lower initial value init means agents passing token need 
case previous resource token negatively related similar tokens 
supposed previously received token summarize calculation rel sim 
matter ype function depends type previously incoming token rel sim sim ype inf ype res threshold init sim ype role ype res threshold init sim 
experimental results section describe empirical evaluation approach 
tests conducted simulation called configured simulate group distributed uavs searching hostile area 
network topology small world network uav average acquaintances 
simulating automatic detection rates pieces information randomly sensed uavs passed team 
plans instances independent preconditions team 
plan initiated tokens roles needed realize plan circulated acquaintance network 
accept role agent close region role requires access resource tokens airspace role allocation 
airspace hostile area divided regions 
regions duplicated resource tokens allowing maximum uavs simultaneously access airspace 
uav needed obtain resource region related task performed 
roles plan successfully executed reward units credited team 
maximum reward units units plan instances possible 
results experiment trials 
experiment investigated algorithm performance enhancing team reward 
reward obtained recorded tick simulation corresponded time taken token move agent agent 
configurations algorithm compared 
configuration agents passed tokens randomly keep 
configurations reward time local routing model information token role token resource token integrated coordination team gets reward axis time axis token types update local models 
number messages reward received local routing model information token role token resource token integrated team needs send messages coordinate token types create local models 
local reasoning model updating applied type token information resource role updating types 
fifth configuration provided integrated coordination tokens type update agents local model routing tokens 
results shown 
previous tokens token routing improved team reward 
benefit pronounced token types 
fact reward doubled random token movement 
notice early plan instantiation effective types tokens role allocation tokens effective type 
hypothesize roles allocated useful critical know initiating plans 
second experiment investigated effect algorithm communication 
experiment compared number messages need team gain particular level reward 
message credited transfer token agent acquaintance 
configurations random coordination single token types integrated employed 
shown configurations token coordination algorithm performed better 
fewer communications attain level reward random configuration 
complete integrated token routing superior messages agent messages agent team size local routing model integrated coordination team size local routing model integrated coordination average number messages agent axis stays relatively constant team size increased axis 
holds tokens tokens integrated model 
partial token algorithm attaining results substantially fewer messages 
notice total number quite low large team 
third experiment examined detail scalability algorithm larger teams 
experiment teams agents run conditions identical experiments configurations previous tokens improve agents local reasoning model versus types previous tokens improve agents local reasoning model routing tokens 
performance measured average number messages agent 
top configuration get team reward units bottom get reward 
results show integrated token routing produced lower message overload conditions 
reward levels observed message overhead lower teams agents integrated algorithm agent teams random 

related multiagent coordination extensively studied area multiagent systems existing scale large teams 
distributed constraint algorithms high communication requirements get dramatically worse team size increased 
combinatorial auctions exponential number possible combinations bids frequently centralized auctioneers severe bottlenecks 
swarm inspired approaches large scale coordination behavior inefficient 
decision theoretic approaches mdps pomdps team coordination 
centralized control frequently possible team coordination problem recast communication problem 
approaches known intractable general limited large scale applications 
focusing scalable coordination illustrates exponential search spaces excessive communication demands localized views incomplete information agents pose major problems large scale systems 
initial token approaches promises way address challenges 
large scale coordination gpgp framework demonstrated token algorithm 
effectiveness large scale token coordination demonstrated proxy architecture task allocation information sharing 
research social networks began physics 
showed social network structures team formation dramatically affect team abilities complete cooperative tasks 
particular scale free network structures agent teams facilitates team formation balancing number skill constrained paths available agent organization effects potential blocking 
compared merits small world networks scale free networks application emergent coordination 

novel integrated token algorithm team coordination 
utilizing relationships tokens able execution type coordination algorithm improve performance 
experiments show approach scalable efficient 
approach opens possibility develop range new executing applications heterogeneous agents possible existing approaches 
results represent step forward point significant challenges exciting questions 
plan address issues near 
scientific perspective effect underlying acquaintance network coordination clearly important poorly understood 
investigate effect properties network team performance specifically looking small worlds nature network important 
represented novel attempt integrating coordination algorithms unified approach showing working performance improved 
individual algorithms designed thought integration 
key question knowing integrating token algorithms allows build algorithms better algorithms 
critically token approach realistic domains understand utility real world 
specifically currently developing large scale coordination applications rescue response unmanned aerial vehicle applications 
research sponsored part afrl mnk afosr 

barabasi bonabeau 
scale free networks 
scientific american pages may 
cassandra littman zhang incremental pruning simple fast exact method partially observable markov decision processes 
proceedings thirteenth annual conference uncertainty artificial intelligence 
cicirello smith 
wasp nests self configurable factories 
proceedings fifth international conference autonomous agents 
delgado 
emergence coordination scale free networks 
web intelligence agent systems 
gaston desjardins 
social network structures impact multi agent system dynamics 
proceedings th international florida artificial intelligence research society conference 
goldberg cicirello dias simmons smith stentz 
market multi robot planning distributed layered architecture 
international workshop multi robot systems 
kluwer academic publishers 
goldman zilberstein 
optimizing information exchange cooperative multi agent systems 
proceedings second international joint conference autonomous agents multiagent systems 
grosz 
combinatorial auction collaborative planning 
proceedings fourth international conference multi agent systems pages 
kitano noda matsubara takahashi shimada 
robocup rescue search rescue large scale disasters domain autonomous agents research 
ieee international conference systems man cybernetics volume vi pages 
lesser decker wagner carver garvey neiman raja vincent xuan zhang 
evolution gpgp teams domain independent coordination framework 
autonomous agents multi agent systems 
littman cassandra kaelbling 
learning policies partially observable environments scaling 
international conference machine learning 
lesser 
solving distributed constraint optimization problems cooperative mediation 
proceedings third international joint conference autonomous agents multiagent systems 
modi shen tambe yokoo 
asynchronous complete method distributed constraint optimization 
proceedings second international joint conference autonomous agents multiagent systems 
pynadath tambe 
communicative multiagent team decision problem analyzing teamwork theories models 
journal ai research 
scerri okamoto tambe 
allocating tasks extreme teams 
proceedings fourth international joint conference autonomous agents multiagent systems forthcoming 
scerri pynadath johnson rosenbloom schurr shi tambe 
prototype infrastructure distributed robot agent person teams 
proceedings second international joint conference autonomous agents multiagent systems 
scerri vincent 
comparing approaches large scale coordination 
aamas workshop challenges coordination large scale multiagent systems 
scerri xu liao lai sycara 
scaling teamwork large teams 
proceedings third international joint conference autonomous agents multiagent systems 
tambe 
flexible teamwork 
journal ai research 
moore 
aerospace operations elusive ground targets 
rand documents 
wagner phelps 
key coordination algorithm dynamic readiness repair service coordination 
proceedings second international joint conference autonomous agents multiagent systems 
watts strogatz 
collective dynamics small world networks 
nature 
xu lewis sycara scerri 
information sharing large scale teams 
aamas workshop challenges coordination large scale multiagent systems 
xuan lesser zilberstein 
communication decisions multi agent cooperation model experiments 
proceedings fifth international conference autonomous agents 
