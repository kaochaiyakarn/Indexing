evolutionary algorithms optimization simulation models pvm thomas back thomas boris informatik centrum dortmund joseph von fraunhofer stra dortmund jochen sn siemens ag munchen june simulation models usually share specific characteristics automatic optimization input parameters extremely difficult task 
evolutionary algorithms search optimization methods gleaned model organic evolution applicable problem known able yield solutions difficult practical optimization problems 
presents parallel steady state evolutionary algorithm exploits available parallel machine configuration optimal manner 
algorithm implemented pvm runs lan sun sparc workstations 
basic algorithm applicable arbitrary simulation models individual structure genetic operators specified particular application 
application example problem optimizing water reactor core reload designs briefly discussed experimental results 
simulation models presently computer models technical natural systems high complexity exist allow simulation dynamics systems 
generally speaking simulation models conceivable kind black box receives vector xn input parameters delivers output output determined performing simulation experiment analytical knowledge input output mapping available 
usually simulation models manner happens questions varying input parameters hand assessing resulting output behaviour 
principle important goal optimize input parameters simulation model certain criterion model output maximized minimized simulation model interpreted objective function ir mapping input theta thetam real valued quantity notice order obtain scalar quantity output vector simulation model undergo appropriate mapping simulation model mapping combined function 
resulting problem optimize function min maximization problem equivalent find vector called global optimization problem cases practically unsolvable 
practical processes improved slightly performing computer aided optimization corresponding simulation model improvement valuable easily resources invested 
far optimization simulation models rarely attempted corresponding objective functions characterized number properties increase complexity problem 
analytical information derivatives available 

objective function multimodal 
optimum sensitive respect small changes input parameter values technical realization optimum impossible 

optimum point vary time 

usually set feasible solutions defined additional constraints subset 
objective function usually subject stochastic perturbations 

single evaluation objective function run simulation model costly regarding cpu time possibly hardware resources 
especially property normally restricts number possible experiments dozens 
reasons traditional optimization methods suited optimization simulation models fail completely 
demonstrated schwefel performed extensive comparisons popular optimization methods evolution strategies representative class evolutionary algorithms 
algorithms briefly described section properties recommend application simulation models 
evolutionary algorithms gleaned model organic evolution evolutionary algorithms search optimization methods utilize basic concepts darwinian evolution population individuals evolves better better regions search space means randomized processes selection mutation recombination 
individual represents search point space potential solutions problem objective function value interpreted sense fitness corresponding individual 
selection operator favors individuals higher fitness reproduce lower fitness recombination mixes information usually individuals mutation introduces innovation population 
common working scheme evolutionary algorithms summarized algorithm high level pseudocode notation reasons clarity shortness algorithm general ea initialize evaluate terminate recombine mutate evaluate select od initialization individuals population performed random 
notice individual space contain information just position search space underlying problem 
evaluation objective function value member population calculated 
main loop algorithm iterates operations recombination mutation evaluation selection termination criterion cases maximum number function evaluations cpu time fulfilled 
denotes set individuals additionally taken account selection 
final result algorithm usually yields best individual encountered evolution process 
main representatives general evolutionary algorithm genetic algorithms evolution strategies evolutionary programming see back schwefel detailed overview comparison algorithms clearly demonstrated capability yield approximate solutions case complicated multimodal discontinuous non differentiable noisy moving response surfaces optimization problems 
suited deal major difficulties optimizing simulation models direct derivative free methods robust noisy time varying functions global search capabilities reasonable set constraint handling techniques developed successfully applied 
major difficulty caused need perform large number function evaluations evaluate population individuals generations require huge amount cpu time 
section solution problem parallel evaluation objective function values pvm workstation lan 
master ea oe ae oe ae oe ae slave slave slave gamma omega omega omega omega omega omega oe omega omega omega omega omega omega ae gamma gamma master slave concept parallel evaluation objective function values 
parallel evolutionary algorithm clearly time consuming part evolutionary algorithm outlined algorithm consists evaluation objective function values simulation models considered optimization 
consequently parallelization level objective function evaluations necessary decided evaluate objective function value available workstation time 
appropriate parallelization model uses simple approach shown 
slaves receives parameter vector representing individual evolutionary algorithm master performs run simulation model input parameters returns result run master 
important notice time required evaluation objective function values different heterogenous hardware resources workloads local area network running times simulation models 
order prevent idle times available machines generational synchronization appropriate 
called steady state selection scheme whitley utilized allows asynchronous update population objective function value received newly created means recombination mutation individual performs better worst individual population substitutes worst 
kind replacement worst called selection evolution strategy terminology back schwefel 
immediately selection parallel evolutionary algorithm creates new offspring individual sends free slave machine evaluation slave idle time minimal 
formulation parallel evolutionary algorithm high level pseudocode description reasons clarity shortness implementation basic algorithm pvm primitives follows master slave approach outlined geist beguelin dongarra jiang manchek sunderam algorithm parallel ea initialize evaluate initial population gamma send gamma receive fl send fl od main recombine mutate select loop max receive fl select worst worst worst pg recombine mutate send fl od collect missing slave results gamma receive fl select od return best gamma denotes number available slave machines fl gammag indicates index arbitrary slave finished computation returns individuals function value 
loops algorithm perform evaluation randomly initialized population main loop continuously receives result arbitrary slave fl performs selection eventually substitutes worst population member individual evaluated slave fl new individual produced recombination mutation sent slave fl evaluation 
termination main loop gamma final objective function values collected algorithm returns best individual encountered search notice selection identical best individual occurs actual population 
evolution strategies recombination performed creation new individual parent individuals chosen random actual population 
recombination creates new individual second obtained product discarded mutated evaluated 
notice algorithm described far represents general evolutionary heuristic 
specific application problems structure individual space specific instances genetic operators recombination mutation topics constraint handling consideration heuristic knowledge elaborated 
section brief overview application practical problem 
application example current application algorithm optimization water reactor pwr core reload designs task identify arrangement fresh partially burnt fuel core reactor performance burning cycle optimized 
application problem performed cooperation siemens ag munich erlangen 
core contains fuel assemblies arranged quarter core symmetry 
consequently arrangement center element exchanged fuel assemblies assemblies identified integer numbers corresponding assembly orientations integer gamma gamma gamma assembly considered 
fuel assemblies chosen total available assemblies assemblies kept storage individual evolutionary algorithm consists integer values designating fuel assemblies corresponding orientation values 
evaluation objective function value performed simulation software provided industrial project partner 
strong requirements available hardware configuration ffl single run needs sec 
cpu time sun sparc machine 
ffl simulator requires mb ram 
ffl mb temporary data written simulation run 
reasons machines lan suitable evaluating individuals 
configuration allows obtain function values day reasonable number run evolutionary algorithm 
preliminary experiments performed far decided goldberg order crossover see goldberg recombination operator 
mutation simply exchanges randomly chosen fuel assemblies mutates orientation values random small probability 
population size individuals chosen compromise genotypic diversity selective pressure 
typical minimization run quality best individual population plotted number function evaluations shown 
plot objective function value best population member number function evaluations performed 
results runs close best hand optimized solution quality improve far 
promising exten sions evolutionary algorithm development ffl operators developed take account existing problem knowledge especially regarding symmetry assumptions 
ffl heuristic knowledge experts incorporated genetic operators constraint handling mechanisms 
results obtained poon parks called heuristic copy match crossover operator demonstrate promising approach 
ffl better constraint handling techniques incorporated currently algorithm uses penalty function method outlined smith tate 
ffl number additional machines provided increase number possible function evaluations order magnitude 
contrast previous genetic algorithms poon parks simulated annealing problem algorithm exploits implicit parallelism evolutionary algorithms natural way 
simulated annealing represents state art optimization method problem parallelization possible 
parallel steady state evolutionary algorithm general approach optimization simulation models evaluation single objective function value usually requires large amount cpu time communication time small compared computing time parallel nodes 
pvm algorithm scalable number type available machines easily exploit growing networks available machines 
practical example optimization water reactor core reload designs demonstrated usefulness approach yielding results existing problem knowledge expert heuristics considered design genetic operators constraint handling techniques 
core reload design problem difficult optimization problems goal optimize parameters simulation models important projects investigation application algorithm 
authors gratefully acknowledge support bmbf project cooperation informatik centrum dortmund siemens ag munchen humboldt universitat zu berlin ib performed cooperation siemens ag munchen erlangen 
back 
schwefel 
survey evolution strategies 
belew booker eds proceedings th international conference genetic algorithms pp 

morgan kaufmann publishers san mateo ca 
back 
schwefel 
overview evolutionary algorithms parameter optimization 
evolutionary computation 
geist beguelin dongarra jiang manchek sunderam 
pvm parallel virtual machine user guide tutorial networked parallel computing 
mit press cambridge ma 
goldberg 

genetic algorithms search optimization machine learning 
addison wesley reading ma 

nuclear fuel management optimization water reactors utilizing simulated annealing 
nuclear technology 
poon parks 
optimising pwr reload core designs 
manner manderick eds parallel problem solving nature pp 

elsevier amsterdam 
schwefel 
march 
direct search optimal parameters simulation models 
proc 
th annual simulation symposium tampa florida usa pp 

schwefel 

evolution optimum seeking 
sixth generation computer technology series 
wiley new york 
smith tate 
genetic optimization penalty function 
forrest ed proceedings th international conference genetic algorithms pp 

morgan kaufmann publishers san mateo ca 
whitley 

genitor algorithm selection pressure rank allocation reproductive trials best 
schaffer ed proceedings rd international conference genetic algorithms pp 

morgan kaufmann publishers san mateo ca 
