dartflow workflow management system web transportable agents ting cai peter nog department computer science dartmouth college hanover nh cs dartmouth edu technical report pcs tr workflow management systems help streamline business processes increase productivity 
describes design implementation dartflow workflow management system 
dartflow uses web browser embedded java applets front transportable agents backbone 
java applets provide safe platform independent gui transportable agents dartflow highly flexible scalable 
describes design implementation dartflow workflow application exploits dartflow agent design 

rising costs international competition rapidly changing boundary conditions require fast flexible adaptation quickly evolving business environment 
earlier improvement efforts left internal business organization intact business process reengineering bpr ham places emphasis rebuilding 
enabling technology bpr workflow management experienced tremendous growth years 
workflow management deals specification execution business processes 
general workflow specifications include actions performed routing information policies describe organizational environment 
computationally supporting business processes workflow management systems reduce reaction time changing requirements emergence new organizational concepts 
authors listed alphabetical order 
research partially supported onr contract number afosr contract number 
cai nog dartflow may workflow management systems allow dynamically define execute manage modify business processes 
irrelevant business critical processes opening bank account buying insurance applying credit internal processes job applications procurement new office supplies 
software engineering perspective workflow management systems particularly attractive workflow management systems isolates control flow application domain specific business logic 
permanent data operations data bookkeeping stable business process 
logically separating process control flow data easier modify business process having change application data structure 
workflow management systems particularly suited integration existing application modules new applications 
easier reengineer legacy applications old new application components integrated easily 
widespread acceptance workflow management systems particularly different companies adherence interface standards paramount importance 
workflow management coalition wfmc model tries define general framework falls short assuring interpretability different workflow management systems 
process definition tools administration monitoring tools workflow client applications invoked applications workflow engine workflow api interchange formats workflow enactment service workflow enactment service workflow engine wfmc model different approach assure interpretability pursued workflow vendors today world wide web ber common denominator 
unfortunately www integration limited offering web browser interface different proprietary workflow engines 
propose different approach open portable web technology front workflow client applications implementation workflow enactment service administration monitoring 
section surveys related identifies main cai nog dartflow may research problems 
sections introduce design implementation agent dartflow workflow management system 
section illustrates dartflow sample process account opening process bank 
conclude identifying topics research 

related issues addressed workflow management systems long way go considered mature technology generation commercial systems started find wide acceptance 
name systems ibm flowmark action technology action workflow system staffware staffware wang open workflow offer usable solutions today 
commercially available systems exhibit common weaknesses 
commercial workflow systems lack transactional properties addressed database systems research concurrence availability performance scalability fault tolerance alo 
addressing issues tackles additional problems inherent nature workflow systems extendibility systems dec dec allow user dynamically modify particular process instance rerouting item worklist additional users 
workflow systems currently limited executing canned processes previously defined stored internal process database workflow enactment engine 
flexible organization structure current workflow systems built database organizational structure defines recipients item 
mechanism scale large workflows large organizations 
hard keep date rapidly changing processes organizations 
proposed solutions prominently language approaches dec bus 
unfortunately approaches currently exist 
structured unstructured processes workflow systems suited support structured processes 
unfortunately complex real world processes frequently unstructured structured part 
example new product approval process consists informally collecting opinions colleagues predefined approval process hierarchy 
commercial workflow systems poorly equipped handling semi structured processes 
ibm working possible solution combining workflow system flowmark cai nog dartflow may groupware system lotus notes 
obviously approach provides technological infrastructure workflow programmer implement interfaces unstructured workflows 
workgroup process type unstructured ad hoc processes support teamwork number short processes participants small team process participants process user interaction users decide information want receive emphasis sharing information structured processes productive business processes wide different participants users information decisions routing information workflow workgroup workflow processing remainder describe design implementation agent dartflow system 
dartflow particularly suited address problems raised 

workflow agents various approaches workflow management systems explored past 
existing systems transaction processing systems extended mail systems rule systems 
solution efficient flexible robust workflow management system transportable agents 
transportable agent program migrate control machine machine heterogeneous network 
words program suspend execution arbitrary point transport machine resume execution new machine 
agents may certain advantages 
may reduce network traffic eliminate intermediate data transfer moving network location user resource 
second support systems mobile computers unreliable non permanent network connections travel network act autonomously home machine laptop disconnected 
transportable agents particularly suitable workflow management systems 
business process handled agent 
agent follows steps previously defined process cai nog dartflow may migrates site gathers information 
traveling agent carries process specific code data need consult central database server step 
business process instance controlled transportable agent agent workflow system allows dynamic modification particular process 
example exception occurs process agent contact exception handler server 
rules stored server modify particular process instance affecting general process definition 
agent acquire knowledge business process need contact exception handling server time similar exception occurs 
intelligent routing implemented efficiently transportable agents 
user busy absent agent jump candidate 
business process information remote site may needed credit history applicant central credit bureau 
transferring data requesting site small agent travel remote site eliminating intermediate traffic improving data integrity data leaves repository 
addition remote site needs provide primitive query interface 
need build application specific high level interface remote site agents implement best interface intermediate communication local 
agents full programs include potential explore parallelism 
process regarded collection tasks ordering scheduling subject dependence constraints 
data dependence exists tasks produce data needed tasks 
traditional compiler techniques dependency graphs analysis identify spurious nonessential dependencies executes independent tasks parallel 
example unstructured process informally collecting opinions colleagues child agents created collect data independently join 
state logic methods logic interpreted node agent workflow carries specific knowledge needs processed autonomous agent node transportable agents workflow management cai nog dartflow may transportable agent knows workflow process needs travel 
stores basic knowledge internal state behavior 
agent arrives user workstation acts information carrying 
agent stores process map routing information generic object information various steps workflow consisting state variables store application specific data methods particular object class 
means agent executing workflow process detailed knowledge execute task stores business rules successful execution step task 
short transportable agent workflow management systems efficient flexible fault tolerant 

agent tcl system research transportable agent system called agent tcl 
agent tcl gra gra system transportable agents currently developed dartmouth college 
agent tcl extends standard tool command language tcl ous high level scripting language developed enjoyed enormous popularity 
agent tcl addresses main goals reduce migration single instruction allow instruction appear arbitrary points instruction called transparently capture current state agent transmit state destination machine 
programmer explicitly collect state information 
system handle transmission details including possibility destination machine disconnected having new network address 
provide transparent communication agents 
communication primitives flexible low level identically regardless agents different machines hide transmission details 
provide simple scripting language main agent language support multiple languages transport mechanisms allow straightforward addition new language transport mechanism 
provide effective security uncertain world internet 
shows architecture agent tcl 
agent server keeps track agents running machine accepts authenticates agents arriving hosts restarts agents interpreter provides inter agent communication facilities 
services cai nog dartflow may provided agents 
services include navigation network sensing group communication fault tolerance access control 
agents separate processes running appropriate language interpreter capability capture agent state send state remote agent server 
traffic monitor access control navigation agent agent tcl server traffic monitor agent tcl server access control navigation agent agent agent migration host host server architecture agent tcl 
agent server coordinates activities local agents accepts new agents arriving machines 
services provided specialized agents navigation agent access control agent various advantages tcl implementing agents 
tcl easy learn due simplicity familiar imperative style 
tcl interpreted highly portable easier secure fact existing safe tcl package supports secure execution untrusted tcl scripts bor 
tcl embedded applications allowing applications implement part functionality mobile tcl agents 
tcl extended userdefined commands easy tightly integrate agent functionality rest language 
set special commands added tcl create agent tcl 
agent uses commands migrate machine machine communicate agents 
important command agent jump migrates agent machine 
agent jump command captures internal state agent encrypts digitally signs state image sends state image agent server destination machine 
destination server restarts agent exact point left previous machine 
alternative agent jump mobile jump agent tcl command migration network connection constant 
mobile jump uses support system dock machines cai nog dartflow may ensure agents want jump mobile machine laptop earliest opportunity 
agent tcl system provides various communication mechanisms message passing direction connections remote procedure calls rpc nog agents interact efficiently effectively 
details agent tcl web 
design dartflow dartflow composed salient components 
user interface 
transportable process agents carry data flow control information 
agent servers implement major functionality information routing error handling worklist server communicate results process agents user interface 
process description tcl administration monitoring agent tcl tools workflow client netscape java worklists agent server agent tcl workflow api interchange formats workflow enactment service workflow enactment service workflow engine worklist server dartflow system architecture wfmc framework cf 
illustrates system architecture implementation dartflow system 
section discusses main components depicted 
www cs dartmouth edu agent 
cai nog dartflow may 
user interface dartflow user interface employs java enabled sun web browsers 
strictly required alternatives tk ous programming web browser ui useful provides platform independent user interface 
dartflow ui employs netscape frames quickly standard feature web browsers 
snapshot user interface shown 
top frame consists series buttons link appropriate forms 
users wish fill bank account application form click appropriate button new form appears bottom frame browser 
initial screen line worklist applet bank account opening process cf 
section middle frame displays user worklist 
worklist applet gets information items waiting worklist worklist server see 
applet starts brings login screen asking username password 
provides standard password security mechanism dartflow ensures users look worklist authenticated 
successful authentication applet establishes socket connection worklist server resides machine web server 
limitation imposed security features netscape java applet running inside netscape open connection server loaded 
applet sends user name worklist server 
worklist server receiving request sends contents worklist user applet displayed 
point time users may cai nog dartflow may concurrent applets accessing worklist 
worklist server takes care keeping synchronized date 
clicking worklist entry brings particular form user web browser 
point users fill modify parts form resubmit 
process agents submission modified form user invokes cgi script 
script spawns new carry data wakes old agent form modified submitted time 
single transportable agent responsible care process instance start finish name process agent 
unique id attached new form treated id process agent system 
ids reused enable submitted form uniquely identified 
agent parses contents form constituent fields proceeds complete task help agent servers see provide business logic dartflow 
process agent jumps machine intended agent server initiates meeting uses higher level agent rpc nog communicate appropriate server 
server processing request sends results back agent 
tcl allows results tcl scripts agent evaluate dynamically modify behavior content 
mechanism provides certain distinct advantages adaptation specialization transportable agent contains process description dartflow capability adapt instance task specific needs 
tasks grows evolves independent tasks system allowing dartflow deal flexibly events unfold 
extendibility tcl interpreted language provides advantages enhanced portability available programs written standard programming languages 
tcl agents send receive tcl procedures evaluate 
running agent overwrite existing procedures create new ones fly 
way agents learn things 
task writing agent servers easier servers send scripts agents evaluated agents right things depending individual constitution variables declared functions 
script evaluation way passing information organization server see convey activity trajectories newly created process agents 
cai nog dartflow may step process task consist task steps activity 
performs arbitrarily complex processing accessing databases devices printers accomplish task 
task completed needs attention human system agent jumps worklist server see 
saves data carrying disk sends message worklist server requesting add entry worklist recipient process agent knows person hierarchy 
form appears java worklist target person process repeats 
agent saves disk form restarted user submits modified form 
agent servers agent servers contain core functionality dartflow 
contain protect vital organization process specific knowledge making relevant parts available agents necessary 
agent progresses goal successfully completing business process talks various servers provide information functionality needs accomplish individual tasks 
presently implemented agent servers provide flexible base structure dartflow built 
organization hierarchy server tracking server 
chain command encapsulated inside organization server 
server contains generic process flow information type process information structure 
newly created process agent knowledge organization step needs query organization server 
bootstrap querying organization server type process implementing source user id person generated form 
organization server returns task list ordered list tasks followed process agent complete mission 
task list computed mapping generic process flow information particular instance agent implementing 
organization server implements information routing dartflow system 
server separate entity implement arbitrarily complex models organization increasing complexity individual process agent 
may decide modify organization server time organizations changing time dartflow agent servers agents acting servers 
different agent server part agent tcl architecture 
cai nog dartflow may changes apparent soon server updated 
design provides flexible organization structure placing additional complexity processing load rest workflow system 
various advantages letting process agent carry complete routing information 
reduces server interaction performance bottlenecks substantially allows process agent perform intelligent routing 
agent take advantage inherent parallelism process way best suited circumstances 
allowing process agents carry complete task list advantages 
increases response time system changes process agents launched self contained interact agent servers regular basis 
changes knowledge base servers immediately reflected behavior process agents 
tracking server solves problem dartflow coordinating worklist server see 
process agent system contact worklist server task accomplishes display results person hierarchy 
newly created agent getting task list organization server goes registers tracking server tuple list 
tracking server keeps track alive agents sequence activities 
changes agent servers notifies tracking server affected parts 
organization server changes tracking server informed affected activity trajectories 
tracking server information live process agents figures list affected agents sends worklist server 
process agent comes worklist server display updated forms notified return appropriate server organization server presently 
process agent informed system modified get modified information appropriate server 
changes take effect process agent current task 
affected agents modified task 
pretty response behavior coupled fact tracking server generates minimal network traffic keep track agent presently solution attractive 
thing process agent exits having completed task jump tracking manager inform longer running 
helps keeping information available tracking server updated 
gives overview way various components dartflow interact 
cai nog dartflow may normal process process agent sends process type source id organization server returns task list 
process agent registers tracking server 
task process agent informs worklist server 
worklist server updates display 
users submit new data returns step 
process agents organization server tracking server worklist server java enabled web gui dynamic changes case changes organization chart organization server informs tracking server affected users processes 
tracking server informs worklist server affected agents 
time process agent contacts worklist server worklist server checks agent affected 
process agent contacts organization server 
organization server returns new list 
overview dartflow agent servers form backbone dartflow provide flexibility 
system easy modify maintain protecting domain specific business logic 
system consists functionally independent agent servers dartflow scale allowing graceful degradation case failures 
currently process implementing error handling server dartflow 
server contacted case running process agent encounters error condition 
error handling server may initially try simple solutions redirecting agent server case problem alerting system administrator 
method allows flexible fly error handling elusive feature commercial workflow systems relieves process designer having anticipate complex error conditions 
worklist server worklist server performs couple major functions 
maintains worklists updates information active clients informs process agents recalled agent servers information sent tracking server 
worklist server cai nog dartflow may written amount list management required 
netscape socket security features downloaded java applets worklist server reside machine web server httpd 
process agent successfully completes task task list requires human attention sends message worklist server adding worklist user 
forms agent tcl worklists java worklist queue client netscape browser worklist server submit form request display worklist sockets display form tcl java script worklist update worklist 
communication protocol worklist server gui java gui maintains socket connection worklist server added deleted worklist user java applet immediately notified updates client 
user logged multiple places simultaneously see worklist 

sample real world process opening bank account dartflow successfully implementing simple real life business applications 
hypothetical bank account opening process web 
displays outline bank account opening process 
arrows indicate flow information 
customers log dartflow system new user fill html form browser 
form asks general information name social security number address yearly income initial deposit amount users filled details press submit form button associated cgi script generates process agent take care new application 
process agent gets task list organization server registers tracking server 
information provided organization server process agent goes credit history database 
database may house provided independent credit rating agency 
process agent meets database agent guards access actual database prevents misuse forwards query 
database agent performs query returns result process agent 
result contains credit history report error condition cai nog dartflow may customer representative supervisor back office name social security address initial deposit occupation yearly income information form submit form credit history database database database document accounts information form credit history report acc rej ref information form credit history report acc rej form account letter rejection signature card contract initial deposit mail atm card cheque book sign form process deposit receipt sign contract card fill deposit form database agent database agent database agent sample opening account web name social security number match 
database record social security number 
process agent point may decide query databases 
eventually credit history information available process agent decides jump customer representative manager depending amount initial deposit type deposit 
internal check mechanism built prevent bank involved money laundering 
case cai nog dartflow may deposit greater form routed manager customer representative 
depending credit history report customer representative may decide accept reject refer application manager 
manager decides referred cases high deposit cases 
application rejected process agent meets document database agent gets template standard rejection letter 
fills appropriate information name address address credit history provider 
letter printed probably printer manager office appears manager desk 
point dartflow completed task exits 
manager signs letter pr exercise provide user person address complaints mailed user 
application accepted process agent meets accounts database agent sets account information gets account number new account 
retrieves welcome letter appropriate contract forms signature card initial deposit form document database 
process agent fills appropriate information prints documents back office mailed user allows user print documents local printer 
user signs contract signature card fills initial deposit form mails bank 
documents received handled back office 
deposit user mailed receipt atm card check book 
dartflow offers major advantages traditional workflow systems implementing simple process described thread control attached submitted application 
process agent take individual actions depending progresses 
applicant excellent credit history process may shortened additional databases consulted applicant doesn extensive credit history borderline case 
agent carries routing information general role specific user mapping done case individually 
particular day customer representative available system directly reroute new applications customer representatives worklists 
agents deal intelligently unexpected error conditions occur process 
example particular social security number exist regular database agent decide consult alternate databases 
fails may decide log error report ask human intervention 
cai nog dartflow may 
summary discussed design implementation dartflow workflow management system emerging technologies world wide web transportable agents 
emphasis problems lack flexibility adaptation specialization intelligent error handling plague commercial workflow systems 
long way go stateless agent workflow system reach level reliability performance required real business processes real companies 
convinced approach offers new extremely promising solutions general workflow problems hard solve conventional systems 
plan implement real time line connection large repository generalized business processes mit process handbook mal 
idea process handbook rule base organizational knowledge agent consulted case unanticipated situations arise 
concept nicely supported agent workflow enable agents learn order improve process quality 
improve quality workflow process autonomous agent capable learning lifetime augmenting modifying functionality improving persistent knowledge base organizational knowledge 
practical implementation oriented level exploring options dartflow system scalable easily distributable getting rid dedicated socket worklist management 
acknowledgments bob gray helping agent tcl letting borrow section agent tcl design original 
thankful professors george cybenko david kotz bob gray help reviewing 
bibliography alo alonso schek 
database technology workflow environments 
informatik february 
ber berners lee cailliau groff 
world wide web information universe 
cern geneva 

bor borenstein rose 
safe tcl 
available ftp ftp fv com pub code safe tcl tar cai nog dartflow may bus bussler 
policy resolution workflow management systems 
digital technical journal 
vol fall 
dec digital equipment 
white 

www digital com info gray kotz nog rus cybenko 
mobile agents mobile computing 
technical report pcs tr department computer science dartmouth college 
gra gray 
agent tcl transportable agent system 
proceedings cikm workshop intelligent information agents fourth international conference information knowledge management cikm james mayfield tim editors december 
gra gray rus kotz 
transportable information agents 
technical report department computer science dartmouth college 
ham hammer 
reengineering 
harpercollins new york 

ley leymann roller vogt 
white workflow management 
ibm software solutions division german software development laboratory 
march 
mal malone crowston lee pentland 
tools inventing organizations handbook organizational processes 
sloan school technical report wp 
nog nog chawla kotz 
rpc mechanism transportable agents 
technical report pcs tr department computer science dartmouth college 
ous ousterhout 
tcl embeddable command language winter usenix conference proceedings 

ous ousterhout 
tcl tk toolkit 
addison wesley professional computing series addison wesley 
sun sun microsystems 
java language white 
sun microsystems 

workflow tackles productivity paradox 
datamation 
august 
wfm workflow management coalition international development promotion workflow standards 
glossary 
workflow management coalition avenue marcel brussels belgium 

