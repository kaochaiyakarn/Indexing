survey linear logic programming dale miller computer science department university pennsylvania philadelphia pa usa dale saul cis upenn edu hypertext version survey ftp www cis upenn edu pub papers miller html 
survey appear third issue newsletter network excellence computational logic 
common place recognize important role logic foundations computer science general programming languages specifically 
reason major new advance understanding logic expect see advance ripple areas computer science 
rippling observed past years linear logic girard 
exciting advance logic provides new ways embracing aspects computation directly rich logical framework 
development extends enriches understanding classical intuitionistic logic provides new insights computational systems built logics 
applications linear logic programming languages functional logic programming extensive classical intuitionistic logic motivate language designs analyze programs specifications 
inspiration design functional programming languages curry howard isomorphism 
isomorphism states programs proofs equated normalization proofs say beta conversion cut elimination seen computation 
linear logic supplies new proof structures called proof nets dynamics normalization express aspects concurrency abramsky scott lafont lafont 
curry howard isomorphism states types programs seen formulas richer formulas linear logic allow expressive types 
stronger types help provide static analysis things run time garbage aliases counters single threadedness guzm hudak hearn wadler chirimar 
linear logic shown promise helping analysis conventional logic programs 
see example specifying semantics various aspects prolog linear logic reddy specifying modes linear logic reddy 
active linear logic logic programming area designing new logic programming languages 
new logic programming languages field logic programming principle curry howard isomorphism simple natural deep generally accepted design principle 
early logic programming fixed particular logic order classical horn clauses researchers adopted proof search sequent calculi setting designing exploring dynamics properties logic programs 
setting sequents denote state computation transformations occur sequents proofs incrementally constructed model dynamics computation 
logical connectives needed straightforward define logic natural operational semantics meaning easy programmer understand proofs attempted 
designs examples linear logic programming languages 
ffl lo linear objects andreoli pareschi andreoli pareschi designed andreoli pareschi extension horn clause paradigm atomic formulas generalized multisets atomic formulas connected multiplicative disjunctions pars 
lo backchaining multiset rewriting 
language specify object oriented programming coordination processes 
ffl acl kobayashi yonezawa asynchronous calculus send read primitives essentially identified complementary linear logic connectives kobayashi yonezawa kobayashi yonezawa 
ffl lincoln saraswat unpublished reports developed linear version concurrent constraint programming linear logic connectives extend previous languages paradigm lincoln saraswat saraswat 
languages incorporate small subsets linear logic multisets formulas capture object structure collections processes messages multiset rewriting capture inheritance synchronization 
design principle years states goaldirected search complete logic programs 
intuitionistic logic formalized proof theoretic notion uniform proofs miller 
horn clause logic hereditary harrop formulas logic underlying prolog examples settings goaldirected search complete intuitionistic provability 
definition goal directed search depends fact sequents intuitionistic logic single contain single goal proved 
straightforward extend definition uniform proofs intuitionistic linear logic sequents single hodas miller extension design linear logic programming language lolli hodas hodas miller 
lolli seen modular extension prolog allows items program unlimited number times 
linear logic connectives provide elegant flexible management kinds program clauses 
sequent characterization full linear logic sequents multiple formulas goal proved may multiset formulas provability isolated formula assist hopefully programmable sense 
structure goals notion goal directed search uniform proof needed extended 
appear ways extension 
approach goal multiple parts required component goal reduced 
approach harland pym weaker approach goal directed search complete subsets linear logic pym harland complex operational semantics harland pym 
see language harland example 
approach requires goal multiple component goals components simultaneously reducible 
miller definition miller provide linear logic encoding pi calculus 
showed selecting suitable complete set connectives linear logic seen logic programming 
particular presentation linear logic called forum miller seen motivated extension lo prolog lolli 
hodas currently developing prototype implementation forum techniques implementation lolli 
applications new languages designs undertaken purely technical exercises involving structure sequent calculus proofs 
fact designs motivated need logic specifications expressive 
resulting systems supplied new useful specifications various domains 
concurrency programming languages designed part allow concurrent specifications kobayashi yonezawa kobayashi yonezawa lincoln saraswat miller saraswat 
see guglielmi 
object oriented programming capturing state inheritance early goal lo system andreoli pareschi motivation design lolli 
approach state encapsulation miller martelli 
operational semantics forum successfully specify operational semantics imperative concurrent features algol ml chirimar miller 
chirimar specified forum operational semantics pipe lined risc processor chirimar 
natural language parsing lolli provided declarative approach gap threading english relative clauses hodas 
object logic proof systems lolli refine usual intuitionistic specifications object level natural deduction systems hodas miller forum provide specifications objectlevel sequent systems miller 
research sequent calculus proof search majority linear logic programming described sequent calculus proof systems great deal understanding implementing languages focused properties proofs model theoretic considerations 
years results proof theory developed specifically support foundation logic programming paradigm 
andreoli developed deep results proof search linear logic phd thesis andreoli see andreoli 
related galmiche perrier galmiche galmiche perrier 
problem specific proof search linear logic effectively split resources conjunctive branches computation 
lolli hodas miller developed lazy splitting approach called input output model resource consumption hodas miller hodas various researchers actively refining extending model see example cervesato 
possible projects include exploring exploit girard lu proof system girard definitional reflection schroeder heister 
linear logic rich expressive logic finding interesting subsets effective implementations currently open problem 
list compiled part bibliography linear logic maintained cervesato pfenning 
abramsky abramsky 
computational interpretations linear logic 
theoretical computer science 
andreoli 
andreoli 
proposal synthesis logic object oriented programming paradigms 
phd thesis university paris vi 
andreoli 
andreoli 
logic programming focusing proofs linear logic 
journal logic computation 
andreoli pareschi 
andreoli pareschi 
lo 
concurrent structured processes 
proceedings oopsla pages ottawa canada october 
published acm sigplan notices vol 
andreoli pareschi 
andreoli pareschi 
linear objects logical processes built inheritance 
new generation computing 
scott scott 
pi calculus linear logic 
manuscript 
guglielmi guglielmi 
linear logic programming language parallel sequential conjunction proceedings joint conference declarative programming marina di italy september 

linear semantics allowed logic programs 
proceedings fifth symposium logic computer science pages philadelphia pennsylvania june 
ieee computer society press 

linear axiomatization negation failure 
journal logic programming 

negation linear completion 
del cerro editors intensional logic programming pages 
clarendon press 
cervesato cervesato hodas pfenning efficient resource management linear logic proof search submitted extensions logic programming 
chirimar chirimar 
proof theoretic approach specification languages 
phd thesis department computer information science university pennsylvania 
chirimar chirimar gunter riecke 
proving memory management invariants language linear logic 
lisp functional programming pages 
chirimar chirimar gunter riecke 
counting computational interpretation linear logic 
journal functional programming appear 
martelli martelli 
objects forum 
proceedings international symposium logic programming december portland oregon 
galmiche galmiche 
proof search programming intuitionistic linear logic 
galmiche wallen editors cade workshop proof search type theoretic languages pages nancy france june 
galmiche perrier galmiche perrier 
foundations proof search strategies design linear logic 
symposium logical foundations computer science pages st petersburg russia 
springer verlag lncs 
available technical report centre di recherche en informatique de nancy 
girard 
girard 
linear logic 
theoretical computer science 
girard 
girard 
unity logic 
annals pure applied logic 
guzm hudak guzm hudak 
single threaded polymorphic lambda calculus 
proceedings fifth symposium logic computer science pages philadelphia pennsylvania june 
ieee computer society press 
harland pym harland pym 
resolution fragments classical linear logic 
proceedings russian conference logic programming automated reasoning pages 
springer verlag lnai july 
harland harland 
implementation development issues linear logic programming language 
proceedings eighteenth australian computer science conference pages adelaide australia february 
available technical report tr melbourne university department computer science 
hodas hodas 
specifying filler gap dependency parsers linear logic programming language 
apt editor proceedings joint international conference symposium logic programming pages washington dc november 
hodas hodas 
logic programming intuitionistic linear logic theory design implementation 
phd thesis university pennsylvania department computer information science 
hodas miller hodas miller 
logic programming fragment intuitionistic linear logic 
information computation 
extended abstraction proceedings sixth annual symposium logic computer science amsterdam july 
kobayashi yonezawa kobayashi yonezawa 
acl concurrent linear logic programming paradigm 
miller editor proceedings international logic programming symposium pages vancouver canada october 
mit press 
kobayashi yonezawa kobayashi yonezawa 
asynchronous communication model linear logic 
formal aspects computing 
short version appeared joint international conference symposium logic programming washington dc november workshop linear logic logic programming edited miller 
lafont lafont 
functional programming linear logic 
lecture notes summer school functional programming constructive logic glasgow united kingdom 
lafont lafont 
interaction nets 
seventeenth annual symposium principles programming languages pages san francisco california 
acm press 
lincoln saraswat lincoln saraswat 
higher order linear concurrent constraint programming 
manuscript january 
odersky turner wadler 
call name call value call need linear lambda calculus th international conference mathematical foundations programming semantics new orleans april 
miller miller nadathur pfenning scedrov 
uniform proofs foundation logic programming 
annals pure applied logic 
miller miller 
pi calculus theory linear logic preliminary results 
lamma mello editors proceedings workshop extensions logic programming pages 
springer verlag lncs 
miller miller 
multiple meta logic 
abramsky editor ninth annual symposium logic computer science pages paris france july 
ieee computer society press 
hearn hearn 
linear logic interference control preliminary report 
abramsky 
curien pitts pitt poign rydeheard editors proceedings conference category theory computer science pages paris france 
springerverlag lncs 
pym harland harland pym 
uniform proof theoretic investigation linear logic programming 
journal logic computation april 
reddy reddy 
typed foundation directional logic programming 
lamma mello editors third international workshop extensions logic programming pages bologna italy 
springer verlag lnai 
saraswat saraswat 
brief linear concurrent constraint programming 
manuscript 
schroeder heister schroeder heister 
rules definitional reflection 
vardi editor eighth annual symposium logic computer science pages ieee june 

proof strategies linear logic 
journal automated reasoning 
wadler wadler 
linear types change world 
broy jones editors ifip tc working conference programming concepts methods pages sea israel april 
north holland 
acknowledgments wish cervesato pfenning maintaining extensive bibliography linear logic proved valuable assembling survey 
josh hodas james harland provided useful comments draft document 
am pleased acknowledge support onr nsf ccr nsf ccr darpa 
