building open source meta search engine dipartimento di informatica university pisa di unipi short introduce flexible efficient open source meta search engine 
currently runs top search engines web books news academic publication domains additional search engines easily plugged 
report performance development 
categories subject descriptors information storage retrieval information search retrieval general terms design experimentation measurement keywords meta search engines open source 
study estimated size publicly indexable web pages 
furthermore index intersection largest available search engines google yahoo msn ask estimated 
study showed searchers regularly single search engine just search engines 
study conducted pointed google yahoo 
share top results popular search terms 
separate test random searches google yahoo 
share top results 
claim search engines providing top results different search engine internet searchers potentially missing relevant results 
consequence meta search engines useful reasons 
instance allow integration search results provided different engines ii comparison rank positions iii advanced search features top commodity engines clustering qa personalized results 
industrial meta search engines vivisimo commercial clustering engines group results drawn fly remote search engines 
industrial meta search engine compares search engines different rank positions assumed set urls 
list meta search engines 
copyright held author owner 
www may chiba japan 
acm 
university iowa computer science alessio uiowa edu academic literature proposals meta searching 
proposes downloading individual documents working list snippets returned search engines 
approach evident performance problems 
reports survey techniques proposed tackle underlying challenges building meta search engine 
discusses methods improving answer relevance meta search engines 
propose strategies combining ranked results returned multiple search engines 
contribution short introduce complete meta search engine retrieving parsing merging reporting results provided search engines 
contributions followings full working open source meta search engine available www cs uiowa edu 
different research groups system interact engines develop services top provided don violate licence 
currently number academic research projects personalized web snippets clustering engine rank comparison engine experiment measuring size web supports set engines web news books academic publications domain altavista aol search google msn ask yahoo google news google scholar yahoo news 
easy plug new engine intensively engineered efficient lightweight usable low cost platforms 
experimental results obtained benchmark community 

architecture section describe architecture fig 

web interface allows users submit queries select desired search engines supported system 
information interpreted local query parser emitter re writes queries appropriate format chosen engines 
engines builder maintains settings necessary communicate remote search engines 
modules handle network communications 
soon search results available search results collector parser extracts relevant information returns xml 
choice allowed easily heterogeneous set academic projects previously described 
users adopt standard merger ranker module search results integrate customized 
architecture 
achieve high performance utilizes async parallel tcp connections remote search engines 
useful reasons system overloaded hundreds threads ii connection cost reduced sec parallel connections allow retrieve data server starting connection second sending data third 
query possible exploit parallelism different search engines single engine 
integration new engine simple configuration file specify engine parameters query re writing rules ip address parsing rules parser script provides parser engine necessary information extract relevant data 
defined simple efficient parsing language allows search strings maintain cursor string extract substring delete rewrite 
language provides constructs jump 
language processes search results fast efficient way see fig 


experimental results experiments conducted dual piv ghz gb ram memory mbps internet connection 
experiments resources usage negligible 
due space constraints report subset results 
parallel searches multiple engines altavista google ask yahoo 
test bed engines 
downloading sequentially top results search engine total search results took seconds 
test done wget common retriever tool 
retrieve parse parallel results seconds see fig 
time largely dominated ask displays maximum results page request subsequent pages obtain desired top results 
overcome limitation configured exploit parallelism engines single engine 
vs wget 
query 
parallel searches single engine exploiting parallelism single engine reduce downloading time 
downloading ask search results pages required seconds 
exploiting parallel requests reduced time second see fig 

parsing time parsed total results altavista google yahoo 
milliseconds see fig 

pages ask 
query car 
performances required seconds retrieve parse results pages results altavista google yahoo see fig 

parsing times engine 
query god 
retrieving parsing top results altavista google yahoo 
total results required secs parallel connections 
comparison google required secs return top results parallel connections see fig 

retrieving parsing times urls 
query flowers 
processing parallel results pages altavista aol search find google msn ask yahoo 
total results required seconds average cpu usage 
query 
retrieving time google 
time secs 
query banana 
experimental results show highly engineered open source parallel meta search engine 
safely state industrial environments 

www org pdfs pip users pdf www com stats php searchenginewatch com links article php di unipi 
system method improving answer relevance meta search engines 
pat 

fagin kumar sivakumar vee 
comparing aggregating rankings ties 
pods 
ferragina 
personalized search engine web snippet hierarchical clustering 
www 

indexable web pages 
www 
lawrence giles 
inquirus neci meta search engine 
www 
meng yu liu 
building efficient effective metasearch engines 
acm computing surveys 

web metasearch rank vs score rank aggregation methods 
sac 
wu crestani 
new methods results merging distributed information retrieval 
distributed multimedia information retrieval 
stevens 
unix network programming ii prentice hall 
