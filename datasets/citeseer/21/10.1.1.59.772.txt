wiznet integration different web service registries dustdar martin treiber dustdar tuwien ac student tuwien ac tuv september technical university vienna information systems institute distributed systems group despite standardization efforts web service area different incompatible web service registry implementations exist 
initial focus implementations geared working centralized universal business registry ubr 
centralized approaches tend bottlenecks regarding performance fault tolerance 
proposed solution replication registry information multiple distributed web service registries 
addition creation specialized web service registries leads large number different web service registries 
leads situation search particular web service complex task 
web service provisioning includes considerable administrative overhead dealing transient web services 
transient web services exist limited lifetime certain context 
propose wiznet peer peer architecture transparent integration multiple web service registries transient web service providers 
focuses integration concept multiple web service registries transient web service providers 
integration concept relies called views 
views provide needed abstractions seamless integration different registries 
views common lightweight web service profiles serve unified global data model 
wiznet web service profiles allow flexible extension registry entries value added information changing original web service registry entries 
illustrate view concept introduce simple grammar view description language view descriptions working example 
web service communities possible application view concept show different types web services providers respectively registries integrated unified global data model 
keywords web service discovery web service registry integration distributed web service registry distributed systems group technical university vienna 
vienna austria phone fax url www tuwien ac wiznet integration different web service registries dustdar martin treiber distributed systems group vienna university technology dustdar tuwien ac student tuwien ac 
despite standardization efforts web service area different incompatible web service registry implementations exist 
initial focus implementations geared working centralized universal business registry ubr 
centralized approaches tend bottlenecks regarding performance fault tolerance 
proposed solution replication registry information multiple distributed web service registries 
addition creation specialized web service registries leads large number different web service registries 
leads situation search particular web service complex task 
web service provisioning includes considerable administrative overhead dealing transient web services 
transient web services exist limited lifetime certain context 
propose wiznet peer peer architecture transparent integration multiple web service registries transient web service providers 
focuses integration concept multiple web service registries transient web service providers 
integration concept relies called views 
views provide needed abstractions seamless integration different registries 
views common lightweight web service profiles serve unified global data model 
wiznet web service profiles allow flexible extension registry entries value added information changing original web service registry entries 
illustrate view concept introduce simple grammar view description language view descriptions working example 
web service communities possible application view concept show different types web services providers respectively registries integrated unified global data model 
keywords web service discovery web service registry integration distributed web service registry current web service registries uddi ebxml provide means integration different web service registries 
uddi ebxml registries similar intensions publishing discovery web services dustdar martin treiber data models differ provide different mechanism discovery respectively publishing web services 
especially ebxml offers comparison uddi broader approach terms web service description ebxml registries support business coordination protocols 
web service registry implementations usually follow centralized approach single central universal business registry ubr 
number services grows single ubr prove bottleneck 
avoid potential bottleneck ubr registries distributed servers 
ensure registry provides registry information registries synchronized periodically provide distributed access points 
fig 

web service discovery distributed registries web services dynamic consistency distributed registries guaranteed 
consider dynamic web service registers registry registry replicated dynamic web service deleted replication copy registry contains registry entry web service web service deleted replication copy contains registry entry inconsistent original registry replication round taken place 
addition trend web service communities expected 
web service communities groups related web services wiznet integration different web service registries published single web service registry 
registries usually provide related services different providers 
consider example crews offer services private registries specialized crews 
search services involves searches different web service registries finding adequate web service see 
avoid limitations propose wiznet 
wiznet architecture provides peer peer network interconnected web service registries dynamic web service providers see 
wiznet peer peer architecture offers meta data model provides integration concept unifies different web service registries dynamic web service providers transparent manner 
integration concept regarded view concept rest supports integration registries dynamic web service providers 
includes extension mechanism extensions regarding registry data model 
view concept provides means building web service communities 
fig 

wiznet overview remainder organized follows 
section presents related 
section introduces working example 
section illustrates wiznet peer peer architecture 
section presents wiznet view concept 
section gives example integration uddi ebxml registries 
section explains core wiznet services 
section concludes 
related ebxml standard introduces concept web service registry federation 
federated web service registries form loosely coupled unions related web services 
federations appear single logical registry clients 
approach dustdar martin treiber shares objectives 
wiznet views similar federations ebxml federations focus lifecycle registry objects replication issues provides flexible approach allows creation long lasting static views dynamic views 
dynamic views ad hoc federations covered ebxml federations 
ebxml federations cover issue transient registry entries provided transient web service providers 
wiznet offers lightweight clients fully distributed non replicated web service registry need additional administrative overhead 
uddi standard acknowledges need distributed registry structure 
introduces replication distributed registries focuses mainly actual distribution registry entries 
favor flexible integration lightweight wiznet peers wiznet include replication model replication increases administrative overhead 
uddi allows creation private registries physically separated registries 
comparison wiznet offers flexible approach 
wiznet uses views create logical separations registry data controls registry access help membership service 
meteor project uses upper ontology integration distributed registries 
comparison wiznet meteor focuses higher level integration lower level main focus unify different registry data models 
wiznet focuses declarative integration distributed registries regard differing data models 
wiznet provides means create logical registries views provide related registry entries 
contrast meteor uses semantic meta data create ontologies related registry entries wiznet follow semantic approach 
semantic issues currently part considered additional administrative overhead compromise goal integrating lightweight peers 
uses daml profiles represent semantic meta data uddi registry entries 
approach uses uddi registries tmodels link daml profiles stored separately 
wiznet store information existing registry 
leaves original information unchanged provides gateways distributed registries 
additional data stored separately original web service registry entries repositories part original web service registry 
semantic meta data web service retrieval cover issue different web service registry implementations 
focuses uddi implements centralized approach consider distributed registries wiznet 
framework presents infrastructure integration heterogeneous web services 
encompasses contributions wiznet provides unified web service invocation similar concept 
uses web service mediators invoke different web services 
wiznet notion registry peer similar web service mediator infrastructure 
contrast wiznet framework consider distributed registries different web service registry implementations 
wiznet integration different web service registries grid architecture provides umbrella distributed data 
focus explicitly web service registry provides discovery functions distributed information 
uses tuple space model store information nodes network 
comparison wiznet registry information format provides data tuples capable store web service descriptions 
proposes containers actual service description 
wiznet borrows idea tuple spaces 
tuples represent wiznet service profiles transient clients 
comparison wiznet consider web service communities different web service registry implementations 
wiznet encompasses contributions self serv project 
self serv exploits concept communities 
communities offer defined class services common capabilities 
community delegates execution service member selection policy 
wiznet follows similar idea regarding structuring communities respectively views wiznet provide dynamic provider selection self serv 
wiznet proposes community concept similar communities 
offers types communities push pull communities 
communities correspond roughly dynamic respective static views wiznet 
comparison wiznet focuses actual data models registries declarative integration 
follows approach ontological approach structure push respectively pull communities 
addition proposes service wrappers provide common service description 
wiznet provides common web service descriptions specified wiznet service profiles 
wiznet service profiles expose similarities service wrappers operate different level 
wiznet service profiles offer common declarative service description offers object oriented approach 
handles web service composition provides event handling system monitor changes 
web service composition change monitoring covered 
working example section introduces working example rest 
illustrates possible scenario wiznet 
scenario movie director coordinate different film crews 
film crews offers set services needed making movie 
film crews loosely coupled way film director 
provide services demand certain time 
consider example crew coordinating activities film set help mobile devices 
offers expertise certain topics service 
service description may stored registry administered community provides type services 
film crews may provide private registries store service descriptions 
order coordinate different teams film director search different registries find necessary services dustdar martin treiber film crews 
wiznet offers unified access different web service registries offers unified web service invocation 
wiznet architecture section describes wiznet architecture detail 
wiznet architecture follows distributed approach 
wiznet organized peer peer network peer acts gateway registry web service provider 
peer offers basic functionality regarded wiznet core functionality 
wiznet core functionality provides interfaces web service publishing web service discovery web service provisioning wiznet views wiznet peer peer communication 
separate interfaces organized layered architecture depicted 
fig 

wiznet peer architecture overview registry layer coordinates integration different registries providing adapters registry implementations meta data registries 
registry layer consists separate modules wiznet mapping engine wiznet wrapping engine wiznet communicator engine see 
wiznet wrapping engine provides access underlying registry 
module lowest abstraction layer registry 
provides interfaces standard features web service discovery web service publishing web service registry means view access registry data 
view registry access filters registry data view definition transforms registry information view specification see section 
wiznet mapping engine maintains repository stores meta data registry contains information view registry mappings define wiznet integration different web service registries actual transformations registry entries 
mappings organized generic wiznet service profiles instances wiznet service profiles 
generic wiznet service profiles define classes web services transformation registry entries instances wiznet service profiles 
instances wiznet service profiles provide value added information existing registry entries 
types mappings discussed detail section wiznet service profile discussed detail section 
wiznet coordinator coordinates activities mapping engine wrapping engine see 
receiving request forwards request mapping engine 
mapping engine parses request checks repository registry mapping information 
registry mapping engine provides mapping information registry data retrieval wrapping engine 
addition mapping engine returns matching wiznet service profiles coordinator 
wrapping engine retrieves registry information transforms result wiznet service profiles 
result transformation returned coordinator 
coordinator augments wiznet service profiles registry data returns data 
note lightweight clients provide local registry 
lightweight peers provide local repository wiznet service profiles 
case wiznet coordinator engine retrieves repository information mapping engine returns result requestor 
fig 

wiznet registry layer wiznet view layer provides means necessary view concept 
view layer consists modules view engine service module see 
view engine provides access repository stores view descriptions see section 
view engine related tasks 
transforms dustdar martin treiber registry content provided wiznet service profiles view definitions provides view web service access 
depending type view transformations performed help declarative descriptions plug ins perform needed transformations 
declarative transformation descriptions retrieval web service registry data view engine provides wiznet view profiles coordinator 
coordinator provides declarative view descriptions returns adequate registry entries 
plugin coordinator executes plug returns result view engine 
case view engine returns result wiznet service layer respectively modules wiznet service layer 
wiznet view layer provides view web service access 
case view engine provides service view data 
service acts wrapper web service 
receives requests transforms requests view specifications calls web service 
result web service invocation returned view engine 
view engine transforms result web service invocation returns result requestor 
fig 

wiznet view layer wiznet service layer provides core functionality basic operations web service registries 
consists modules service engine publishing engine discovery engine communication engine 
wiznet integration different web service registries service engine provides interfaces web services wiznet peer 
service engine provides direct access web service view access web service 
case service engine uses view engine transformation input output web service corresponding view specifications 
wiznet peer lightweight client direct view web service access available lightweight peers considered transient wiznet peers provide needed memory processing power 
case peer may perform needed transformations acting view proxy 
wiznet publishing engine offers interface publishing local web services 
wiznet publishing engine implements publish subscribe approach 
wiznet peer listens default publishing web services wiznet peer subscription events mark publishing web service 
peer publishes web service context view see section publishing engine sends notification message informs view originator new web service 
notification contains information nature web service permanent service service temporarily available service meta data regarding view information 
web service matches view description wiznet peer member view 
communication engine provides means wiznet communication protocol 
communication engine responsible correct joining leaving wiznet peer network 
communication engine offers notification service wiznet peer able register arbitrary events including example joining new peers task administration neighbor table stores list connected neighbors 
neighbor table needed forwarding messages 
wiznet discovery engine manages retrieval registry information 
service engine discovery engine varies type wiznet peer 
lightweight peer provides local web service description internal web service registry profile known port 
lightweight peers provide view information queries containing view information delegated proxy peers able perform needed transformations 
standard wiznet peers wiznet registry peers check search requests view information 
view information mapping registry entries view 
query executed successful result returned requestor 
adequate web service service message sent back search requestor 
wiznet peer types wiznet supports types peers lightweight peers standard peers registry peers 
peer type offers basic functionality different additional features 
lightweight peer usually peer limited memory storage capacity pdas sub notebooks 
lightweight peers typical transient members wiznet network 
lightweight peer joins leaves network arbitrary points time provides usually small number web services published known local addresses available peer part dustdar martin treiber network 
type peer considered anonymous peer network 
standard peer offers memory processing power lightweight peer 
usually standard peer laptop typical desktop pc 
type peer provides additional services notification view services hosts web services lightweight peer 
standard peer allows user name peer 
name url combination peer serves logical identification wiznet peer network 
identification needed view published static public view acts community publisher view maintains list view members 
addition member stores name view originator identification view 
third type wiznet peer registry peer 
registry peer usually gateway business registry web service registry entries example uddi ebxml 
registry peer acts web service mediator view web service invocation see section actual web service providers members wiznet network provide functionality wiznet peers 
registry peer transforms requests wiznet peers web service provider web service executed 
standard peer registry peer provides wrappers different registries respectively different apis conform basic functions wiznet peers 
table summarizes functionality different peer types 
lightweight peer standard peer registry peer web service publishing web service discovery web service mediation notification service membership dynamic dynamic static static view publishing peer naming number services table 
wiznet peer type features wiznet view concept section discusses wiznet view concept 
wiznet view defines context specifies web services published discovered invoked peers wiznet peer peer network 
context provides additional information web services scope single web service descriptions 
consider working example view information movie project defined director movie 
web service provider publishes view adequate web services need enrich web service description additional context information movie project 
web service provider rely context information provided view case information provided movie director 
enables web services part wiznet integration different web service registries views time need change web service description 
example illustrates different roles defined wiznet view concept 
view originator vo specifies view description publishes view description 
view implementer vi receives view description decides implement view specification 
implementation uses local mappings transformations underlying registry implementation transform registry information accordingly 
note view originator may view implementer time 
view may exist independently relation views relate views help basic set operations 
operations include union subset intersection 
result set operation new view puts included web service new context 
context depends type set operation 
consider example views called movie movie 
views created film director provide information movie projects film director 
assume film director needs new view called movie includes movie projects services 
new view created union operator provides view descriptions web service descriptions available views 
wiznet communities view concept allows definition web service communities integrate similar web service registry entries community 
wiznet community essentially group related services 
services provide description view description may offer identical service interfaces 
allows specification services regarding actual web service provider actual web service 
web service provider implement method mappings filters 
consider community working example 
coordination purposes may offer notification method finishes film set 
example different types different devices pda laptop set 
device dependent notification method complicated coordinate different notification methods possible devices may differing communication protocols different ways service bindings 
overcome problem community defines interface notification method publishes wiznet view 
film director information rely single method interface considering different types peers 
wiznet peer join leave community time 
joining wiznet community respectively view wiznet peer provide web services meet requirements community 
community defines certain interfaces data fields wiznet peer assure interfaces available peer 
wiznet peer simple matching algorithm considers data structure signatures dustdar martin treiber web services 
depending type view peer stores local copy view description static view points peer provides view description dynamic view 
possibility creation communities allow community members search registry information 
allows structure communities efficiently 
consider example dedicated peers defined gateways communities 
peers allow construction hybrid peer peer structures peer ability perform searches scope community 
definition private communities possible set test scenarios wiznet network allow small group peers access registry applying view larger group peers 
illustrated crew working example 
crew decides build working group leader responsible provided registry information crew 
leader acts gateway community able decide kind information visible non members 
leader decides join movie view member crew automatically member movie view 
wiznet communities provide membership services 
soon wiznet peer joins view member view 
kind membership regarded static membership peer decides join view 
possibility membership wiznet peer member community knowledge 
wiznet peer needs just fulfill view specification publish web service 
kind membership dynamic behavior peer available member view 
peer type join dynamic view 
wiznet view profiles objective wiznet view profiles describe functionality web services context provide meta data views 
logical standpoint wiznet view profiles consist parts see 
views provide interface specifications input output filter mapping component view registry mapping 
interface specification consists input output filter 
input filter purposes 
input filter receives incoming requests transforms requests view specification 
addition input filter allow definition search criteria pre select underlying registry entries 
corresponding counterpart input filter output filter 
output filter specifies externally visible method signatures data fields 
actual mapping interfaces underlying registry data model specified mapping component 
mappings declared help rules define elements registry data model mapped view elements 
results transformation process wiznet service profiles provide registry information see section 
fig 

wiznet view overview wiznet integration different web service registries logical categories modeled categories provide view information shown 
fig 

wiznet view profile view category encapsulates general information view 
consists attributes provide information view 
includes creator attribute identify creator view 
objective creator attribute define wiznet peer responsible administration view 
originator maintains lists peers members view propagate messages efficiently 
table summarizes available fields view category 
dustdar martin treiber property description name brief human readable name view id identification view date view created date view expires type type view private public status status view dynamic static originator creator view description brief human readable description view 
table 
available fields view category filter category provides interfaces input output filter views 
filter consists method descriptions attributes declarations 
output filer describes public face views words functionality view conform web services provide 
input filter logical counterpart output filters 
transforms incoming requests view descriptions forwards result transformations registry 
table summarizes data format filters 
property description description brief human readable name filter type type filter private public source element element compared target element element defines comparator comparison operator elements equals category status view dynamic static methods method descriptions output filters table 
available fields filter category wiznet filter rules simple expressions define relations entities values 
entities names registry entry attributes registry entries 
entities compared specified operator entities 
registry provides matching entries set matching entities returned empty set returned 
illustrate function wiznet filter rules consider input filter example 
filter rule filters incoming requests occurrence element name member value movie 
incoming request include attribute member ignored 
filter type input category property element type source name member name element comparator equals comparator element type target value movie value element filter wiznet integration different web service registries mapping category models declarative descriptions view registry mappings 
mappings transform registry information view web service descriptions respectively wiznet service profiles 
mappings specify element names registry data model corresponding element name wiznet service profile 
mapping specification defines declarative mappings different elements underlying registry data model 
table summarizes fields mapping category 
property description type type filter private public element method descriptions output filters table 
available fields mapping category view registry mapping consists parts generic mapping specifies description concrete instance mapping registry entries wiznet web service profiles 
generic mapping considered mapping specifies classes entries 
instance mapping augments registry information additional web service profile information available registry 
example available types mappings 
portion example defines registry mapping attributes name surname 
internal mappings mapping elements described wiznet service profiles 
registry refers mappings registry elements external defines mapping external resources 
ignore removes attribute name default assigns attribute name value peter 
link marks link element 
element identifies external accessible resources acts entry point external resources 
mapping type internal element type source name name name element element type target name member name element type target name surname name element element mapping ignore element name name name element ignore link target www org xml target element description element link default dustdar martin treiber element name name name value peter value element default implementing view registry mapping plug ins flexible powerful filtering possible 
plug category provides interface description defines interface implemented plug ins 
plug ins needed registry data transformation described declarative mappings allowing flexible dynamic transformation registry content 
wiznet plug interface defines methods operations needed view 
plug enables view access external resources transformation view information 
wiznet plug interface provides operations process input getresult filter method process executes data transformations input parameter 
result returned method getresult 
method returns data fits view description specified format 
wiznet views combined composed arbitrary way 
example result view serve input view results views combined input view extension category acts container name value pairs 
pairs model additional information specified categories wiznet view profiles 
additional information stored name value pairs 
pairs assigned original registry entry stored local repository 
extension instances provide dynamic way add arbitrary attributes provider service instances 
example web service provider wants add copyright attribute profile adding extension name copyright value containing copyrights statement 
example shows extension mechanism example 
table summarizes fields extension category 
extension type instance id type wiznet id element type attribute name copyright name value peter pan value element extension wiznet integration different web service registries property description type type filter private public element method descriptions output filters table 
available fields extension category wiznet service profiles related wiznet service profiles wiznet view profiles represent different problems require different abstractions 
objective wiznet service profiles provide common description web services 
wiznet service profiles describe functionality web services web services selected functionality 
web services specified contexts words web services classified help views 
fig 

wiznet service profile wiznet service profiles consist categories shown 
wiznet provides built service profile acts default view unifies descriptions available web services 
addition default view defines global common context wiznet peers 
context specifies available operations wiznet peers provide 
operation provided wiznet peers described wiznet service profiles 
provider category contains information provider web service 
provider category identifies type wiznet peer stores additional data web service provider name address description url 
table summarizes available fields provider category 
dustdar martin treiber property description name name web service provider 
phone telephone number web service provider 
mail email address web service provider 
fax fax number web service provider 
address postal address web service provider 
url url information web service provider 
description brief human readable description web service provider 
table 
wiznet provider profile service category contains information web services provider provides 
service profile contains name service invocation url link external description files included methods parameters corresponding descriptions see table 
property description name name web service 
url url web service invoked 
description brief human readable description web service summarizing web service offers 
table 
general web service data provided wiznet service profiles method category encapsulates information regarding methods web service provides 
method descriptions provide descriptions methods web service requestor invokes 
descriptions contain typing information actual parameters provide names input output parameters 
typing information hidden web service requestors 
web service requestors need consider service descriptions invoke service see section detailed discussion web service method invocation 
wiznet table summarizes available fields method category 
property description name name method invoke 
url url method invoked 
description brief human readable description method input summarizing method 
input method specified parameter name list output output method specified parameter name list wiznet integration different web service registries table 
method description web service methods usage category closely related method category 
provides information service 
information includes informal description formal description actual web service 
formal description provides information actual web service invocation input output parameters example usage 
consider working example illustrates usage category 
example usage formal description request result pairs web service invocations 
example shows intended hire method 
method hire input parameters name film crew dates 
definition method follows hire name concrete example hiring film crew name peter hire peter example shows concrete usage description hire method 
note description similar actual method invocation described section key difference additional description method 
usage invocation description hiring film crews needs parameters name film crew dates 
result ok film crew hired nok film crew hired 
description method name hire name parameters parameter type input name name value value parameter parameter type input name name value value parameter parameters method invocation result method name hire name parameters parameter type output name result name value ok value parameter parameters method result usage dustdar martin treiber wiznet view profiles wiznet service profiles provide extension mechanism 
additional information concrete web services modeled name value pairs stored local repository 
dynamic vs static views wiznet views define communities 
depending type view view dynamic static character 
dynamic view loose coupled group web services temporarily meet requirements view description may exist certain time 
consider working example needed mass scene 
film director defines adequate view publishes 
member film crew able provide service join view time actual shooting 
scene completed view implicitly invalidated temporal prior defined event 
contrast dynamic views static view defines long lasting membership 
view explicitly terminated view originator 
wiznet peer terminate membership explicitly considered member view regardless actual network status 
differences dynamic views member list maintained view originator view replication 
member list serves filter access web services view notification list changes 
consider example static view defines project team film 
project team assigned movie duration project 
film director originator view able restrict access web services planning services location information services members project team need kind services 
static view replicated members 
wiznet peer notifies view originator presence view 
public view description defines web service community 
web service community static dynamic 
static web service community long term relationship related web services respectively web service providers 
static community exists previously defined amount time certain event takes place 
consider working example relationship film director assistance team 
assistance team works movie project director 
movie project ends assistance team member receive notification leave community 
contrast static view illustrates example dynamic community 
membership specified properties member salary 
soon web service provider able fulfill specification web service provider member community 
web service provider meet requirements longer part community 
web service provider may join leave dynamic community arbitrary times return community 
dynamic community provides necessary features building ad hoc communities 
note cases membership defined occurrence event 
static community exists community explicitly canceled dynamic community exists long members available community 
static community respective view exists member 
private vs public view descriptions wiznet integration different web service registries wiznet view classified public private 
wiznet peer implements view specification automatically member respective view community 
public view descriptions define global context web service discovery web service publishing web service invocation 
example shows simple public view description defines filter web service registry entries members film view salary provides web services 
web service method returns description web service method hire needed hire film crew time returns view name movie maker type public behavior dynamic identifier identifier originator name peter movie business name url www com url originator url www com movie url description simple view defines filter related film making general movie business 
description filters filter type input category property name member name comparator equal comparator value film value filter filter type input category property name salary name comparator greater comparator value value filter filters methods method name name parameters parameter type output name result name parameter parameters method method name hire name parameters parameter type input name name parameter parameter type input name name parameter parameter type output name result name parameter parameters method dustdar martin treiber methods view wiznet peer able define private view distributed web service registries independent membership community 
private view allows wiznet peers define private contexts web services 
private context enables wiznet peer specialized perspective distributed web service registries 
private view dynamic character 
consider example specifies view filter membership film view 
output view consists properties name description web service provider 
view name type private behavior dynamic identifier identifier originator name peter movie business name url www com url originator description private view description filters filter type input category property name member name comparator equals comparator value film value filter filter type input category property name member name comparator equals comparator value value filter filter type output category property element name name element name provider element filter filter type output category property name description name filter filters view main difference public private views way view transformations realized 
private view acts local filter data 
request result transformed peer view specification 
request executed context public view wiznet peer member view responsible necessary transformations data 
public view defines membership community private view 
table summarizes features private public views 
private view public view behavior dynamic dynamic static membership wiznet integration different web service registries notification service data transformation local remote distributed table 
features private public views view web service discovery view web service discovery puts web service registry entry respectively web service description view context 
depending view specification view compliant web service may provide adequate web service description additional web service information quality service attributes ontology information 
wiznet view unifies aspects web service description 
provides high level web service information web service provider name address concrete information web service invocation url methods invoked web service requestors 
addition web service requestors view meta data view discovery 
view meta data provides additional information scope usual web service description 
main benefit view information web service discovery process web service requestor may view information effective web service discovery 
view discovery process consists steps depend nature view 
consider example search request uses public view name movie maker 
example returns salary address provider available web services provider peter pan web service descriptions members view 
message type search view name movie maker type public behavior dynamic identifier www movies org wiznet director identifier view filter type input category provider name name name comparator equals comparator value peter pan value filter filter type output category provider name name name filter filter type output category extension name salary name filter filter type output category provider name address name filter filter type output category service name description name filter filter type output category usage name usage name filter message dustdar martin treiber depending view type result search request transformed expected format peers provide matching web services 
example shows corresponding result view web service search 
note result contain methods hire view defines methods parameters 
message type search result provider name peter pan name address street address salary salary services service description simple rental service equipment 
equipment related underwater 
includes example diving suits huge plastic sharks 
description usage description usage service limited registered 
registration form available www com register html 
description url www com register pdf url usage service services provider message contrast example search private views leads result corresponds wiznet meta model 
example shows result search working example view movie maker 
result contains wiznet service wiznet provider profiles 
message type search result provider name peter pan name address street address salary salary services service description simple rental service equipment 
equipment related underwater 
includes example diving suits huge plastic sharks 
description usage description usage service limited registered 
registration form available www com register html 
description url www com register pdf url usage methods method name name parameters parameter type output name result name parameter parameters method method name hire name parameters parameter type input name name parameter parameter type input name name parameter parameter type output name result name parameter parameters method methods service services provider message view web service publishing wiznet integration different web service registries publishing web service public view context adds service wiznet view 
depending type view wiznet peer needs perform different steps member view 
wiznet peer publishes web service static view peer checks web service description conformance view 
web service meets requirements view peer sends service publishing message spm view originator 
spm contains information provider provider publishes web service description context view 
view originator registers new member view returns view message vam 
publishing triggers view broadcast message members view informs member new web service respectively new member view 
wiznet peer joins dynamic view peer ensures web service meets requirements view 
wiznet peer provides link original dynamic view description view originator 
wiznet peer provide view description web service published default view 
note publishing web service default view adds web service global context available wiznet peer 
case web service description fits description provided wiznet service profile see section 
example shows publishing dustdar martin treiber web service description static view movie provided director corresponding vam 
message type spm context view view identifier www movies org wiznet director identifier view provider name peter pan name address peter pan ave address description provision magical effects description provider wsp message message type vam context view view identifier www movies org wiznet director identifier view message message type context view view identifier www movies org wiznet director identifier view provider name peter pan name address peter pan ave address description provision magical effects description provider message view web service invocation view web service invocation view context leads unified transparent web service access 
wiznet views define interfaces provisioned web services specified wiznet service profiles 
wiznet views service profiles abstraction similar approach 
introduces abstraction layer existing web services providing web service access binding dependent 
uses invocation strategy allows invoking web services directly information provided wsdl files 
wiznet provides direct binding independent access web services 
wiznet uses service profiles provide definitions input output parameters level 
web service requestors need aware actual web service binding send web service invocation messages parameters web service provider 
illustrate approach consider working example view defines description salary interface 
view defines membership film crew members able provide service respectively able build view conform wrapper salary service 
film director wants control costs crew needs invoke salary service crew member summarize results 
need take care different web wiznet integration different web service registries service implementations invocation protocols 
film director sends web service invocation message wsi members crew 
wsi includes view information parameter needed web service 
wiznet peer receives wsi message performs needed transformations invokes web service 
completion web service member crew sends web service completion message wsc result back film director 
examples show wsi message corresponding wsc message film director queries crew member salary 
message type web service invocation view identifier www movies org wiznet director identifier view wsi method name name parameters method wsi message message type web service completion view identifier www movies org wiznet director identifier view wsc method name name parameters parameter type output name result name value value parameter parameters method wsc message view identification view identifier 
identifier consists url wiznet peer wiznet peer name number 
number generated local counter incremented new view definition 
example shows example view located www movies org wiznet 
wiznet peer name director view view created node 
www movies org wiznet director dustdar martin treiber wiznet registry integration example section gives example illustrates registry integration uddi ebxml registries 
consider working example private uddi registry provides web services film directors public ebxml registry provides web services crew see 
fig 

integration uddi ebxml registries registries provide differing web service registry entries 
example film director wishes obtain information crew web services query ebxml registry separately 
wiznet architecture integrate registries 
member crew film director connected wiznet peer peer network 
define view name film acts common data model 
consists web service registry entries stored different web service registries 
sake simplicity choose view provides just basic publishing discovery service includes information web services web service name web service provider name web service description web service invocation url single web service method executed web service provider category quality service description wiznet integration different web service registries focus mapping view definition uddi ebxml data model respectively registered web services 
example uses different types mappings 
generic mappings provide general mapping elements film director registry respectively registry 
instance mappings associate concrete instances web service registry instances wiznet repository augmentation additional information available web service registry 
example instance mappings provide quality service descriptions crew web services brief human readable form 
illustrate approach example shows portion generic view uddi mapping 
example assumes web services provide external description file 
mapping type registry element type source name provider name element name name name element element element type target name name element name name name element element mapping 
mapping type external element type source name service name element name method name element element element type target link element type source name service name element name name element name name element element element element type target name porttype name element name operation name element name name name element element element link element mapping dustdar martin treiber 
example illustrates different types mappings 
external mapping needed actual invocation url web service stored binding portion wsdl file 
external mapping uses nested mapping specify corresponding wsdl element 
mapping engine follows link specified uddi element 
rest mapping specifies element external document contains needed information 
registry mapping maps uddi registry entries wiznet service profiles 
mapping process consists steps 
step generic mappings create wiznet service profiles registry information 
generic mapping translation wiznet requests underlying registry 
second step mapping concrete web services respectively descriptions view 
consider example combination uddi registry registry entries links wsdl files 
generic part mapping specifies uddi entries fit view description 
second part concrete mapping web service instances returns web services fit view description provides additional information repository 
example uses human readable quality service descriptions stored repository 
illustrates generic mapping uddi entries corresponding files 
note detailed description retrieved tmodel structure proposed 
method indirect retrieval marked separately mapping 
mapping engine follows link reads information specified resource 
second part mapping uses key pairs associate information wiznet repository registry information 
example shows key pair mapping uddi registry entries entries wiznet repository 
note mapping mapping allows mapping single web service registry entry single entry vice versa 
example elements wiznet repository provide information category web service provider represented short human readable text 
mapping type instance element type source key type uddi uddi ff ac dc key element element type target key type wiznet key element mapping fig 

wiznet service profile uddi mapping wiznet integration different web service registries mapping wiznet service profile ebxml data model similar uddi registry mapping 
difference lies different data model 
ebxml data model different web service information stored different format 
assume web service stored ebxml registry specified actual web service description stored external wsdl file 
illustrates wiznet service profile mapping ebxml registry model 
ebxml organization class provides basic information provided wiznet web service provider mapped directly wiznet web service provider class 
web service information name url description available service class ebxml data model 
service class contains link external wsdl file 
service class mapped wiznet web service class 
link provided attribute points external wsdl file method descriptions mapped uddi example operation input output descriptions wsdl file description methods wiznet service profile 
note associations registry objects explicitly shown 
dustdar martin treiber fig 

wiznet service profile ebxml mapping case ebxml mapping example programmatic mapping 
input programmatic mapping class input specifies fields get set methods view 
input parsed corresponding field values filled 
example description web service provided external file name web service stored relational database 
note example provided generic mappings words transforms registry entries view conform wiznet service profiles 
public void process input create new container web service profile wsp wsp new wsp parse input read fields check name source element read corresponding value registry case external information access resource look desired information type external resource www movies org description parse resource description wsp description type registry name name wiznet integration different web service registries open ebxml name execute select name service wsp name 
wiznet services wiznet peer provides set core services 
services include web service publishing service web service discovery service wiznet view service notification service 
core services available type wiznet peer 
services provide basic functionality peer peer registry descriptions stored local repository peer 
web service publishing service provides means web service publishing wiznet peer network 
web service publishing accomplished ways 
peer publish single service example pda provides local information service current user web service 
wiznet discovery service provides interface methods needed web service discovery 
web service discovery arbitrary views filters 
search web service contain view description view identifier 
wiznet service discovery engine supports types discovery approaches 
basic discovery method provision web service name 
table summarizes basic functions wiznet peers 
function description view creates private view stores description local repository wiznet peer 
view type creates public view publishes view description 
description stored local repository 
type parameter specifies type static dynamic view 
function available lightweight peers 
id returns view description associated view identifier 
id returns user profile wiznet peer associated peer identifier 
id returns provider profile wiznet peer associated peer identifier 
id performs login procedure static view 
id performs logout procedure static view 
criteria searches globally criteria wiznet service profile returns list adequate web services 
dustdar martin treiber id service publishes service view 
id service removes service view 
id type criteria searches criteria view returns list adequate web services 
service view checks service description compatible view 
subscribe event subscribes wiznet peer occurrence certain event 
unsubscribe event removes subscription wiznet peer occurrence certain event 
id returns method profiles web service 
id returns usage description web service 
table 
wiznet core functions quality service wiznet extension mechanism supports extension registry information arbitrary value added information 
built example extended registry information quality service qos attributes 
attributes stored name value pairs local repository mapped concrete registry entries instance mapping classes registry entries generic mapping 
case provide information services shown table 
qos attribute description availability represents probability service available 
response time marks round trip time sending request receiving response 
table 
quantifiable quality service attributes wiznet peer allows rating web service help qos attributes 
rating service compares quantifiable qos attributes response time availability actual measured ones 
expected value exceeded certain amount qos rating degraded predefined value factor 
information sent web service provider provider corrects hard qos attributes accordingly 
usually web service provider starts rating 
rating corrected feedback clients 
positive feedback decrements rating minimum value negative feedback increments rating maximum value 
wiznet peer maintains list attributes rating provides rating information service lists available qos attributes notification service wiznet integration different web service registries wiznet notification service notifies wiznet peers occurrence events 
wiznet peer register events 
types events change events notification events 
change events occur wiznet peer changes web service description wiznet view definition 
case broadcast message sent network peer copy web service description copy wiznet view updates description respectively definition 
type event available static wiznet peers 
dynamic wiznet peers get kind message 
notification event occurs pre defined event takes place 
may example deadline exceeded 
type wiznet peer may register occurrence events 
dynamic static wiznet registry entries wiznet registry entries dynamic static 
static registry entry long living registry entry created deleted explicitly wiznet peer underlying registry 
wiznet peer publishes static web service static peer long term member network 
registry entry wsp replicated static peers guarantee web service description available web service provider goes offline 
wsp augments legacy registry entry data replicated stored local repository 
note lightweight peers capable publishing static wiznet registry entries lightweight peers considered transient members network 
types peers standard registry peer capable creating static registry entries 
dynamic registry entry entirely specified wiznet peer 
lightweight peer provides default dynamic registry entries peer types may provide dynamic registry entries 
soon lightweight peer joins network registry entry available 
dynamic registry entry published implicitly soon peer joins network 
peer leaves network registry entry available 
note wiznet core services specified dynamic web services corresponding 
difference common dynamic registry entries core wiznet service deleted 
view information service wiznet view information service provides information views 
provided information includes view description service invocation profiles usage information list currently active peers 
depending type view dynamic static publishing changing view results notification message members view 
static view changed members view notified event 
peer updates view specification adapts new version view 
dynamic case notification message sent 
peer dynamic member view may take notice changes dustdar martin treiber may member view anymore 
lies responsibility peer check updates view 
membership service wiznet membership service provides means peers join leave wiznet communities 
wiznet differentiates types membership dynamic static membership 
dynamic membership closely related dynamic views 
peer joins dynamic view implementing desired view specification 
peer implicitly member view filters messages regarding view 
peer need perform login procedure 
membership implicitly terminates peer leaves network notification 
membership service static case different peer explicitly join leave view 
order join static view wiznet peer contact view originator 
view originator stores peer peer list view returns view description 
wiznet peer stores view description local repository 
replication mechanism guarantees view description available long peers online 
matching function matching function supports complex queries containing partial keywords wildcards 
possible regular expressions search queries 
algorithm matches method specifications combination wildcards regarding method names method parameters 
consider semantic meta data difficult finding classification schemas complex task 
focuses environment includes dynamic lightweight peers semantic meta data prove ineffective create classification schemas 
method service matching rely meta data 
structural matching algorithm wiznet service profiles returns values range form search criteria 
means match means perfect match 
matching function performs matching steps 
step translate search query registry api compatible search criteria 
cases sufficient replace regular expressions wildcards 
second step result query filtered original regular expression order obtain search result 
method specifications matched separate steps 
step representation created 
example method boolean hire date date string name mapped parameter method parameter parameter parameter 
matching algorithm compares method signatures proposes matching methods 
matching function provides types signature matches 
table gives overview different matching types 
wiznet integration different web service registries type description plug match number parameters smaller number parameter method provides surplus match number parameters higher number parameters method provides exact match parameter associated method parameters table 
different matching types exact match returns methods fit method description 
best possible match achieved 
guarantees method provides necessary parameter description 
possible method fit semantic method different semantics description expects 
plug match weaker criterion parameters method matched description 
case may sufficient fill missing parameter default values function 
possibility method provides parameter underlying function 
case surplus parameters may ignored 
concepts integration heterogeneous web service registries transient web service providers 
approach consider peer peer network feasible solution integration different web service registries 
distinguish types peers depending availability processing power 
lightweight peers considered transient members wiznet peer peer network join leave network dynamically 
devices offer limited processing power memory capacity 
type peer provides small number web services stores web service descriptions locally 
standard peers offer web services processing capabilities 
standard peers provide means creation contexts web service registry entries views 
considered stable members network high availability 
lightweight peers standard peers store registry information locally 
registry peers act gateways different registry implementations provide mediation service invocation web services wiznet peer peer network 
considered building blocks wiznet network provide high availability processing power 
significant part discusses view concept wiznet 
views contexts web services published regarded virtual registries 
views allow creation web service communities provide related web services similar equal service invocation 
addition views provide means web services unified way wiznet communication system 
approach views include information scope common web service registry entries 
view consists input dustdar martin treiber output descriptions internal mappings registry information 
underlying registry data model remains additional information stored outside original registry 
views involve wiznet service profiles act wrapper existing registry entries 
wiznet service profiles expand available registry information descriptions web service operations 
operational information consists parts method specifications actual usage descriptions 
usage descriptions serve real world examples web services 
descriptions include method sequences concrete parameters examples corresponding results 
context generally treat web services black boxes provide input output data 
focus lies extraction relevant information web service descriptions provide structural description operations web service provides 
transforms descriptions operational part wiznet service profiles 
description simple matching algorithm uses structural information matching relevant web service descriptions 
aspect views seamless integration differing registry data models 
integration provides unified simultaneous access distributed registries 
declarative descriptions create mappings views respectively wiznet service profiles existing registry entries 
declarative mappings possible programmatic solution plug model create appropriate transformations 
far technique involve semantic information considered complicate design implementation lightweight peers 
universal description discovery integration uddi technical white 
www uddi org pubs iru uddi technical white pdf 
oasis ebxml registry services specification 
www oasis open org committees documents specs pdf 
oasis ebxml technical architecture specification 
www ebxml org specs pdf 
oasis ebxml registry information model www oasis open org committees documents specs pdf 
business process specification schema 
www ebxml org specs pdf 
ebxml collaboration protocol profile agreement specification 
www oasis open org committees ebxml documents pdf 
keith peter ashok malhotra william nagy stefan 
web services inspection language ws inspection 
ibm microsoft 
matthew aleksander weerawarana 
web services invocation framework 
ibm watson research center 
benatallah dumas quan sheng anne ngu 
declarative composition peer peer provisioning dynamic web services 
university new south wales queensland university technology 
mani arun nagarajan 
understanding quality service web services 
www ibm com developerworks webservices library ws quality html 
massimo paolucci kawamura terry payne katia sycara 
importing semantic web uddi carnegie mellon university pittsburg 
wiznet integration different web service registries paulo rio marta 
mediating heterogeneous web services 
computer science departament de computa nce system engineering computer science program 
federal university rio de janeiro 
joseph allen hamilton sun microsystems 
registering web services ebxml registry version 
john karsten 
wsdl uddi registry version 
www oasis open org committees uddi spec doc tn uddi spec tc tn wsdl htm 
verma amit sheth patil john miller 
meteor scalable infrastructure registries semantic publication discovery web services 
large scale distributed information systems lsdis lab department computer science university georgia 
quan sheng benatallah yan zhu stephan oi yan mak 
discovering services uddi self serv 
university new south wales 
daml coalition 
daml web services description semantic web 
wolfgang hoschek 
peer peer grid databases web service discovery 
cern division 
uddi spec technical committee specification 
uddi version 
keith peter ashok malhotra william nagy stefan 
web services inspection language ws inspection 
ibm microsoft 
medjahed 
benatallah 
bouguettaya 
ahmed infrastructure agile integration web services 
international journal cooperative information systems vol 
june pp 

