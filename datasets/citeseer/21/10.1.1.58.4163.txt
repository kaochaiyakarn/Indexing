appear proc 
asia south pacific design automation conference asp dac yokohama japan january ieee press rate analysis streaming applications chip buffer constraints alexander eth rich tik ee ethz ch simon eth rich tik ee ethz ch mapping streaming multimedia network packet processing application specified architecture important issue determine input stream rates supported architecture mapping 
subject typical constraints chip buffers overflow specified playout buffers feed audio video devices underflow quality audio video output maintained 
main difficulty problem arises high variability execution times stream processing algorithms coupled bursty nature streams processed 
mathematical framework rate analysis streaming applications illustrate feasibility detailed case study mpeg decoder application 
integrated tool automated design space exploration analysis fast performance evaluation different stream processing architectures 
lately tremendous increase portable mobile devices running algorithms processing streams audio video data network packets 
include hand held computers mobile phones expected usage increase 
devices typically stringent constraints pertaining cost size power consumption posed challenges developing appropriate models methodologies languages tools designing example see 
architecture devices typically consists multiple processing elements pes parts application mapped integrated single chip system chip soc design paradigm 
setup system level view stream processing follows input stream enters pe gets processed function algorithm implemented pe processed stream enters pe processing 
pes buffer stores intermediate stream 
fully processed stream emerges pe gets stored playout buffer feeds real time client audio video output device 
process mapping stream processing application target architecture gives rise problem determining range input stream rates supported architecture mapping 
feasible implementation mapping algorithm architecture subject constraints buffers pes overflow ii playout buffer read real time client chakraborty national university singapore comp nus edu sg lothar thiele eth rich thiele tik ee ethz ch specified rate depending quality audio video output required underflow point time 
determining range feasible input stream rates subject constraints difficult main reasons 
firstly high data dependent variability execution time stream processing algorithms depends properties particular audio video sample processed 
secondly input streams tend bursty nature 
factors coupled result increasing burstiness stream coming pe necessitating large amount chip buffer space storage 
may noted contrast simple setup described multiple streams processed pe different streams processed different functions implemented pe 
burstiness outgoing processed streams cases additionally depend scheduling policy schedule pe 
importance problem rate analysis stems fact chip buffers available premium large area requirements see 
mapping streaming application specified architecture necessary accurately identify feasible range input stream rates bursts supported available chip buffers 
includes minimum rate maintained ensure quality audio video output 
results relation previous large body chip traffic analysis soc communication architecture design see relevant problem addressed 
relies simulation approaches 
context problem typically requires hours simulate minutes audio video data reasonably detailed processor model 
simulation approaches fail accurately characterize allowed input rates burst ranges strongly depend audio video data difficult select 
mathematical framework rate analysis streaming applications aim overcoming main problems associated simulation methods 
sake generality consider stream potentially infinite sequence stream objects stream object macroblock video frame audio sample network packet depending application question 
specification architecture different buffer sizes scheduling policies implemented different pes execution requirement stream object processing function implemented pe output rate required drive real time client audio video terminal proposed framework compute minimum maximum rate input stream 
rate refers precise characterization stream including allowed burst range jitter long term arrival rate described precisely section ii 
input stream rate computed minimum maximum rates guaranteed satisfy constraints pertaining buffer overflow underflow 
substantiate theoretical results detailed case study mapping mpeg decoder application specified architecture 
proposed framework drive system level design space exploration different possible mappings streaming application architecture fixed buffers need evaluated 
optimal buffer sizing architecture crucial importance due high space requirements chip buffers 
framework theory network calculus extends concept service curves proposed placing algebraic setting developed 
network calculus originally developed largely domain communication networks analyse soc architectures context network processors 
extended 
follows line development 
level previous papers considered problem input stream scheduling policy pe worst case buffer requirement nature output stream 
problem addressed reverse problem output stream buffer size nature input stream needs computed 
turns previous results extended address question elaborate theory required 
related problem multimedia smoothing domain communication networks addresses problems shaping input stream meet buffer constraints computing optimal playback delay buffering time maintain quality service 
may noted main differences domains communication networks chip communication soc architectures case buffers readily available space constraints ii packet dropping feasible option possible case due power performance constraints iii shaping employed reduce buffer consumption costly employ case 
lastly related proposes onchip traffic multimedia applications exhibits self similarity uses property optimal buffer sizing 
problem formally defined section followed details proposed framework 
section iii case study mapping mpeg decoder specified architecture 
section iv outline possible directions may extended 
fig 

node processing element internal buffer size processing input stream feeding processed stream playout buffer size ii 
rate analysis buffer constraints section state problem definition followed notation case single pe playout buffer 
extended consider case stream passing multiple pes 
mentioned section stream processed multiple nodes node consists pe internal buffer 
consider node path stream feeds processed stream playout buffer size shown 
node consist pe internal buffer size playout buffer read real time client audio video output device specified rate 
input stream entering node denoted denotes number stream objects arrived time interval 
pe provides guaranteed service form time interval length able process number input stream objects 
function provides lower bound service provided pe determined time required process stream object scheduling policy implemented pe case multiple streams tasks processed 
denote processed output stream entering playout buffer denotes number stream objects coming time interval 
real time client consumes stream objects playout buffer rate denotes number stream objects consumed time interval 
functions denoting cumulative values function denotes values time interval lengths referred service curve 
assume functions wide sense increasing means 
buffer sizes problem compute function set possible functions playout buffer overflow ii underflow iii internal buffer node overflow 
constraints subject real time server consuming stream objects specified rate processing element providing guaranteed service 
version problem multiple pes simple extension stated 
mentioned constraint playout buffer underflow maintain quality audio video output 
constraints buffer overflow motivated fact typically static scheduling policies implemented pes simplicity checking buffer fill levels stalling processor case output buffer full easily implemented 
notation functions min plus convolution 
min plus deconvolution sup 
denote infimum minimum exists denote supremum maximum exists 
buffer underflow overflow constraints problem description constraint playout buffer underflow stated pe provides service guarantee shown see details 
minimum value equal constraint eqn reformulated shown functions eqn stated similarly constraint playout buffer overflow stated 
large larger constraint reformulated constraint internal buffer node overflow 
minimum value constraint formulated eqns state constraints input stream required satisfy 
computing bounds eqns combined stated follows xmax maximum value satisfies inequality 
inequality form functions operator follows see details maximum solution satisfies eqn xmax sub additive closure defined 
follows inf nb th self convolution 
known functions 
result follows infn nb function defined 
inf nb function convention see 
sub additive closure function denoted defined infn similar subadditive closure operator described 
follows xmax similarly obtain lower bound recast eqn follows 
combining eqn obtain 
form operator 
result analogous existence maximum solution eqn follows eqn minimum solution xmin super additive closure defined 
eqn eqn unfortunately give closed form solution xmin iteratively computed problem instance 
eqns give upper lower bounds function summarized theorem main result 
theorem non decreasing function satisfies inequality xmin xmax respects buffer overflow playout buffer underflow constraints xmin xmax computed eqns 
case multiple processing elements pes path stream considered preceding subsections feed output playout buffer process input stream output fed pe processing 
constraint pe associated internal buffer overflow 
required output pe determined input preceding pe 
composition scheme fix input pe feeds playout buffer xmin xmax previous subsection 
required output immediate pe compute bounds max min similar techniques described choose lying bounds 
required output immediate pe process followed compute bounds input stream entering pe path stream 
input stream conforming computed value guaranteed respect buffer constraints 
iq pe pe mp idct mc vout fig 

mapping mpeg decoder application multiprocessor soc 
iii 
rate analysis mpeg decoder section apply rate analysis methodology developed previous section study mapping mpeg decoder application multiprocessor soc architecture fixed buffers 
comparing results mathematical framework obtained system simulator show framework able provide useful bounds allowed rates input stream 
input sequence computed bounds max xmin results obtained framework conformance simulation results terms predicting buffer overflow underflow cases buffer constraints satisfied 
mpeg decoder application target architecture consists number pes interconnected chip communication network 
network seen system point point buffered fifo channels limited capacity 
pes exchange packetized data writing reading channels 
part architecture mpeg decoder application mapped mapping application task graph shown 
pe pe programmable processors vout denotes video output port 
task graph mpeg decoder includes tasks variable length decoding inverse quantization iq inverse discrete cosine transform idct formation motion predictors mp motion compensation mc 
profiling information partitioned set tasks subsets executed pe pe 
compressed video bit stream arrives buffer shown processed iq tasks running pe 
decompressed macroblocks written buffer read pe processing 
note data exchange pe pe seen single stream packets packet encapsulating idct coefficients motion vectors macroblock 
information processed idct mp mc tasks mapped pe 
decoded video samples written macroblock time playout buffer bout 
bout read output process located video port reads macroblock time constant rate determined frame rate resolution decoded video stream 
constraints associated bout empty output process attempts read overflow pe writes 
want adopt option stalling pe bout filled order simple static scheduling algorithms pe multiple streams processed 
additionally require buffers overflow 
satisfying conditions simultaneously difficult tasks executing pe produce bursty timevarying traffic output 
mainly due fact execution time task exhibits high variability depends structure compressed stream properties encoded video information see 
proposed rate analysis technique compute upper lower bounds macroblock output rate satisfied processor pe 
macroblock output stream pe conforms bounds guaranteed overflow buffers bout underflow buffer bout 
depending chosen output rate pe upper lower bounds input rate buffer computed discussed previous section 
analytical results due space restrictions concentrate buffer overflow underflow constraints associated bout compute bounds macroblock output stream coming pe required satisfy 
notation section ii see output process located video port real time client characterized cumulative rate function 
bout playout buffer size processing capacity pe characterized guaranteed service 
buffer corresponds internal buffer pe size cumulative rate function macroblock stream output pe 
curves denoted xmax xmin computed analytically framework developed section ii bounds macroblock stream pe output conform order guarantee buffers bout overflow bout underflow 
derived parameters video stream decoded follows number macroblocks video frame video frame rate time starting real time client starts reading data playout buffer 
referred playback delay buffering time 
video streams experiments frames second 
playback delay general chosen arbitrarily 
set equal time required real time client read half frame playout buffer 
system configuration defined set parameters experiments varied size playout buffer assuming processor pe unloaded entire capacity available processing macroblocks max min ms fig 

analytical bounds xmin xmax computed system configuration macroblocks 
idct mp mc tasks mapped service curve modeled straight line 
slope line set equal long term average macroblock production rate output pe measured system simulator described subsection 
assumption long term pe sufficient capacity process incoming macroblocks 
set fixed size macroblocks 
shows resulting bounds xmin xmax computed implementing eqns 
section ii mathematica wolfram research system configuration described playout buffer size set macroblocks 
simulation setup performed simulations mpeg decoder application shown transaction level model system architecture see 
system model written systemc models programmable pes sim profile configuration simplescalar instruction set simulator 
pe pe risc core similar mips processor augmented mpeg specific hardware accelerators 
pe enhanced bit stream access operations pe special support application kernels idct add clip block average prefetch memory special video block mode 
floating point operations pes 
implementation mpeg decoder source code available 
simulated decoding mpeg video clips 
video clips parameters described previous subsection 
clips encoded constant bit rate mb resolution pixels typically dvd applications 
selection simulated scenarios scenario combination video clip playout buffer size representing corner cases experiments summarized table video sequence corresponds video clip global motion video sequence corresponds video clip moving objects background video sequence represents picture 
simulation scenarios listed table simulation setup measured output pe maximum minimum fill levels playout buffer bout 
comparing analytical bounds simulation subsection evaluate usefulness analytical bounds input rate comparing predictions table simulation scenarios scenario buffer size video macroblocks clip sequence sequence sequence sequence sequence fig 

difference plot macroblock stream compliant computed upper lower bounds corresponding playout buffer fill levels difference plot non compliant stream corresponding playout buffer fill levels indicating buffer overflow 
horizontal axis shows time ns vertical axis shows number processed macroblocks playout buffer 
buffer overflow underflow conformance deduced analytical framework results obtained simulation 
ease interpretation simulation results show difference plot 
plot show absolute values obtained simulation versus xmin xmax computed theorem section ii 
shows curves corresponding differences xmax xmin xmin 
plot possible detect input stream measured input stream resulting simulating decoding algorithm video clip violates computed bounds 
violation occurs curve representing xmin crosses curve xmax xmin goes 
shows example resulting video clip compliant bounds xmin xmax 
corresponding playout buffer fill level measured simulation shown confirms buffer overflow underflow occurs 
depicts example sequence obtained simulation scenario violates upper bound 
corresponding buffer fill level plot shows playout buffer overflows 
show difference plots corresponding scenarios outlined table figures subsection show excerpt seconds corresponding frames video sequences simulation scenario 
left bar plot shows normalized values largest buffer fill levels observed play scenario scenario scenario scenario fig 

difference plots xmax xmin xmin simulation scenarios corresponding normalized buffer fill emptiness levels playout buffer shown 
horizontal axis shows time ns vertical axis shows number processed macroblocks playout buffer 
scenario scenario fig 

normalized buffer fill levels left emptiness levels right simulation scenarios 
bars coloured black indicate buffer overflows underflows respective bar graphs 
buffer 
right normalized emptiness values smallest buffer fill levels shown simulation runs 
define normalized emptiness sup fill fill denotes actual buffer fill level time playback delay 
scenarios observe measured simulations greater computed max values measured buffer fill levels scenarios show overflow agreement analytical framework 
similarly scenario see xmin values indicating possibility playout buffer underflow confirmed 
remaining scenarios measured computed bounds buffer overflow underflow observed 
experiments indicate proposed analytical framework provides meaningful bounds rate input stream conformance detailed simulation results 
iv 
concluding remarks novel framework rate analysis streaming applications showed feasibility case study mapping mpeg decoder application multiprocessor soc architecture 
framework determine admissible input stream rates system running stream processing application loaded 
main application analysis system level performance evaluation hardware software architectures stream processing evaluate different possible mappings application fixed architecture 
contrast simulation approaches framework meaningfully evaluate large number mapping short time automated design space exploration techniques 
plan integrate framework appropriate tools explore chip buffer sizing scheduling streaming applications 
authors partly supported swiss innovation promotion agency cti projects 
third author partly supported nus arf 
austin larson ernst 
simplescalar infrastructure computer system modeling 
ieee computer 
baccelli cohen 

synchronization linearity algebra discrete event systems 
john wiley sons 

image video compression standards algorithms architectures 
kluwer academic publishers 

le boudec 
network calculus theory deterministic queuing systems internet 
lncs springer 
chakraborty thiele 
general framework analysing system properties platform embedded system designs 
th design automation test europe date 
chakraborty thiele 
performance evaluation network processor architectures combining simulation analytical estimation 
computer networks 
cruz 
calculus network delay parts 
ieee transactions information theory 
cruz 
quality service guarantees virtual circuit switched networks 
ieee journal selected areas communication 
dally 
route packets wires chip interconnection networks 
th design automation conference dac 
gordon stream compiler communication exposed architectures 
th conf 
architectural support programming languages operating systems asplos pages 
gries kulkarni sauer 
comparing analytical modeling simulation network processors case study 
proc 
designer forum date 
weyrich 
systemc soc communication modeling ocp protocol 
www org october 
lahiri raghunathan dey 
evaluation characteristics system chip communication 
intl 
conf 
vlsi design pages 
lahiri raghunathan dey 
system level performance analysis designing chip communication architectures 
ieee trans 
computer aided design integrated circuits systems 
mpeg software simulation group 
www mpeg org 
richter ernst 
formal approach performance verification 
ieee computer 
open systemc initiative 
www systemc org 
thiele chakraborty gries 
framework evaluating design tradeoffs packet processing architectures 
th design automation conference dac 
amarasinghe 
streamit language streaming applications 
th conference compiler construction cc lncs pages 
marculescu 
traffic analysis chip networks design multimedia applications 
th design automation conference dac 
