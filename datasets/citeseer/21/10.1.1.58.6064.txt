research report series computing cells atoms years calude un university auckland new zealand institute mathematics romanian academy romania sevilla university spain august centre discrete mathematics theoretical computer science computing cells atoms years cristian calude department computer science university auckland private bag auckland new zealand email cristian cs auckland ac nz un institute mathematics romanian academy po box sti romania george ro research group natural computing department computer science artificial intelligence sevilla university reina mercedes sevilla spain es text added russian edition book computing cells atoms taylor francis publishers london published publishing house 
translation done professor victor ivanov professor robert 
new chapter written russian edition 
field unconventional models computation grown enormously past years way able give glimpse evolution 
give just example booklet titled biologically motivated computing bioinformatics lists pages books journals published springer verlag see com area 
far complete examples journals kluwer journal natural computing new stream natural computing elsevier journal theoretical computer science 
probably best way keep touch news watch couple specialized websites 
dna computing www com english th dna asp start 
just days chapter learnt quantum computing significant step closer reality today new research published journal nature july 
groups scientists ibm ucla netherlands reported detection single electron spin 
mean quantum computing 
professor eli director ucla center innovation defense author transistors containing electrons implicit information storage corresponds hard disks world year multiplied number years universe 
course reason transistors 
trying vain update content book decided results authors book actively involved membrane computing turing barrier 
membrane computing membrane computing initiated fall technical report version circulated web 
book written year 
area simply 
middle july web page disco maintained milano italy auspices european molecular computing consortium contained bibliography papers dozen collective volumes dozen phd theses devoted membrane computing 
comprehensive monograph published springer verlag 
february institute scientific information isi mentioned fast breaking computer science see esi topics com february october domain qualified isi emergent research front computer science mentioned citation leader membrane computing 
consequently updating edition book current state art membrane computing simply impossible needed space large 
want leave reader having idea directions research area mentioning relevant notions introduced results obtained publication english edition book 
point separate bibliography section 
want give bibliographical guidelines reader interested approaching membrane computing starting web address mentioned find current bibliography domain series downloadable papers 
particular page available pre proceedings volumes workshops membrane computing editions organized de arge romania fourth edition held spain fifth milano italy sixth held vienna austria july find page volumes brainstorming weeks membrane computing sevilla 
important directions membrane computing developed years course list exhaustive 
improving existing results especially concerning size systems able universal computations 
introducing new classes systems general attempt capture biological features getting closer biological reality inspired area important class kind symport antiport systems introduced 
considering generative computing devices recognizing devices automata systems 
passing cell systems membranes hierarchically arranged nodes tree tissue systems membranes placed nodes arbitrary graph 
active investigations computational complexity direction main topics interest complexity problems related systems membership reachability solving computationally hard problems typically np complete pspace problems feasible time polynomial linear time means systems able generate exponential working space linear time means bio inspired operations cell division membrane creation string replication 
implementations simulations electronic computer clusters networks computers dedicated hardware programs didactic interest particular checking evolution systems applications 
applications membrane computing biology computer graphics linguistics computer science management applications preliminary current research support belief membrane computing useful framework approaching large number problems particular related modelling simulation living cell challenges bio informatics see 
attempts non crisp mathematics study systems mainly probabilistic fuzzy sets tools rough sets tools 
attempts dynamic systems approaches focusing results computations evolution system related investigations concerning systems dynamic structure membranes case tissue systems dynamic communication channels cells 
advanced topics reversibility conservativity energy possibilities compute turing barrier follows briefly discuss topics informal level mainly offering bibliographical hints progresses reported years 
details monograph turn covering developments membrane computing spring mainly web page mentioned 
surveys domain 
technical improvements classification evolution rules cooperative catalytic particular case cooperative rules non cooperative raises natural question power systems rules specific type 
systems general cooperative rules easily seen computationally complete systems non cooperative rules compute semilinear sets natural numbers vectors natural numbers theorem 
adding ingredients priority relation sets rules region theorem possibility control permeability membranes operations theorem obtain universality catalytic systems 
catalytic systems additional controls rule application universal important open problem membrane computing 
surprisingly answer positive systems catalytic rules universal 
proof catalysts 
result improved times point view number catalysts best current result says catalysts suffice see 
known catalyst suffices answer negative purely catalytic systems rules form ca cu note general catalytic systems non cooperative rules form 
results universality results theorems proofs theorems uses catalyst 
obtain universality catalysts expense ingredients promoters objects inhibitors objects rules counting number copies rules way count number copies objects start multisets rules available region applying rule consumed rules available 
refer details 
universality results proofs direct consequence fact number membranes necessary order reach power turing machines bounded bound obtained starting proofs universal device grammar turing machine obtained system universal sense simulate system introducing initial configuration code particular system hierarchy number membranes collapse level number membranes universal system 
context interesting problem remained open finding class systems number membranes induces infinite hierarchy generated sets numbers 
answers problem classes systems restricted forms fully satisfactory answer neutral general class systems provided class systems computation done communication 
computing communication communication transfer objects membranes plays central role functioning systems cell functioning 
target indications form attached objects directly evolution rules reminds fact cell membranes contain protein channels selective biology general communication done rules mechanisms different evolution reaction rules 
interesting ways pass chemicals compartment cell compartment cell membrane coupled transport 
process moving objects direction protein channel called symport process moving objects directions called antiport 
details 
mathematically consider object processing rules forms symport rule associated membrane form ab ab stating objects enter exit membrane antiport rule form stating simultaneously exits enters membrane generalize idea rules forms arbitrary multisets objects size multisets called weight respective rules 
note case symport antiport rules associated skin membrane send objects system bring system objects environment 
important note systems create destroy objects objects moved membranes 
consequence order able compute arbitrary numbers need supply objects environment 
system symport antiport rules architecture system multiset rewriting rules alphabet objects terminal objects membrane structure initial multisets regions membrane structure sets rules associated membranes possibly output membrane additional component set objects environment 
object environment computation considered available arbitrarily copies environment 
refer symport antiport systems introduced details 
functioning system symport antiport rules systems multiset rewriting rules transition configuration configuration done applying rules non deterministic maximally parallel manner objects available regions system environment requested rules 
halting configuration reached get result specified output membrane environment contains objects collecting result 
set numbers computed denoted 
course consider result vector numbers representing multiplicity objects halting configuration output membrane system family sets vectors computed systems membranes symport rules antiport rules denoted 
class symport antiport systems central membrane computing give example system 
ac df ca cbb ca bb da eb ea eb fb cdf df ga 
set objects appear environment arbitrarily copies 
assume moment skin region copies object initially copy region copy copy rule gets region environment 
case computation rules cause oscillate regions 
rule ca cbb number times 
replace copies rule computation halt save time rule ca bb 
object go region send object rule 
step copy region rule da computation 
copy region doubling complete copies replaced copies wait step skin region exits region rule objects exit system brought 
way changed object change copies operation completed get system replaced send region 
object checks copies replaced affirmative case exits system objects enter region process iterated 
way double number copies times want 
moment rule cdf rule 
object carry copy membrane completed gets stuck skin region 

somewhat surprisingly pleasantly computability point view computing communication universal systems symport antiport rules compute level turing machines 
currently best results respect concerns number membranes size symport antiport rules proofs 
theorem sce 
optimality results known 
particular open problem families equal sce 
case systems symport antiport rules associate string computation considering trace specified object traveller membranes sequence labels membranes visited traveller successful computation language associated device working numbers internal data structure 
symport antiport rules defining class systems evolution done multiset rewriting rules target indications separated communication done symport antiport rules details 
automata systems considered generative devices similar grammars starting initial configuration membranes multisets objects get sequences transitions computations non determinism branching possibilities associate system set numbers set strings language 
computability dual grammars automata devices recognize strings 
similar strategy followed membrane computing introducing automata systems 
considers system type membranes rules multisets objects inputs multiset specified region computation stops says accepted 
accepting behavior natural case symport antiport systems considered just take symport antiport system consider sequence symbols brings inside environment halting computation sequence said string recognized computation objects taken time permutation allowed 
types automata considered types request introduce string analyzed symbol symbol computation way communication membranes states associated regions 
variant closer way problem solved introducing code initial configuration system system introduce skin region number form multiplicity specified object introduce copies object system computation stops number accepted recognized number rejected 
particular interest systems deterministic way step possible transition 
systems needed solving problems instance decidability problems accept branchings leading endless computations wrong choices rules apply fact problem solution 
universality results various classes automata dealing deterministic systems 
currently open problem class automata exists deterministic systems strictly powerful non deterministic systems 
tissue systems cells cases living complex organizations tissues organs organisms establishing complex communication net 
instance protein channels adjacent cells come contact enhanced fluid mosaic structure behavior membranes happens proteins establish common channel direct communication cells done 
having channel enhances realization channels network direct channels appears specific functionality intercellular communication see details 
similar situation appear take account organization neurons nets cells neurons establishing direct communication links synapses restriction longer possibility communication environment cell objects time unit cell take environment natural suppose communication neural net done way manner 
observations directly lead considering class systems natural mathematical motivation placing membranes hierarchical manner nodes tree place nodes arbitrary graph systems introduced 
making symport antiport rules direct communication communication environment communication graph dynamically defined depending rules computation 
specifically rules communicating cells labels specify targets symport rule transporting objects multiset form 
moved exchange objects moved corresponds antiport rule rule form 
cases different labels 
equal identifying environment 
tissue system specifying alphabet objects list cells sets inter cell communication rules objects initially environment cell specify multiset objects initial configuration cell rules communication environment targets specified rules rules global set system 
functioning tissue system governed non deterministic maximally parallel rules result computation obtained halting configuration 
cell systems devices generative mechanisms recognising mechanisms 
introduce neural systems established definition 
instance chapter devoted systems states associated neurons synapses pre established evolution rules rewriting controlled states communication specified commands go meaning go synapses replication way send result environment 
papers devoted tissue neural systems refer milano web page details 
involved variant tissue systems introduced name population systems see 
trading space time solving hard problems previous section book shown sat problem solved linear time means systems active membranes membrane division basic tool obtaining exponential workspace linear time 
result improved 
framework dealing related issues formally better specified complexity classes membrane computing defined 
initial step direction general rigorous theory started sevilla group see 
informally speaking class problems solved polynomial time class systems defined follows take problem size described number problem construct family systems type solves instance problem 
construction done uniform way starting instance polynomial time turing machine 
solves way 
introduce code region form multiset objects system proceeds computing computations polynomial time system non deterministic branchings allowed possible computations number steps bounded polynomial computations send step object environment 
object object sent instance positive answer 
says system confluent sense computations ends answer sound gives correct answer problem complete answers instances problem 
polynomial time cheat solve intractable np complete problems construction systems np allows semi uniform way constructing systems starting instance constructing directly solving instance 
problems treated framework worth mentioning decidability problems having answers numerical problems knapsack problem subset sum problem details 
interesting papers uses systems active membranes restricted type 
instance division non elementary membranes cases rules membrane avoided 
improvement concerns number solving np complete problems shown true universality 
intriguing open problem completely get rid course introducing features label changing priorities 
hand division non elementary membranes shown pspace problems solved polynomial time shown satisfiability quantified propositional formulas conjunctive normal form 
context appears important open problem division non elementary membranes necessary covering pspace division elementary membranes suffice 
membrane division ways order solve hard problems feasible time means systems 
possibilities investigated membrane division membrane creation string replication 
membrane division membrane creation systems working string replication string object systems process strings rewriting 
specifically new membranes created rules form membrane label created starting object inside new membrane place objects specified multiset set rules acting membrane indicated label 
turn string replication rules form rewriting string rule get strings xu xu 
possibilities creating working space shown np complete problems typically sat hpp hamiltonian path problem solved polynomial 
refer details 
implementations attempt implement systems lab bio ware 
clear realistic strategy follow model areas natural computing genetic algorithms general evolutionary computing neural computing implementations electronic computer imitate ambition dna computing general molecular computing go laboratory trying new type hardware biochemistry 
possible directions successful membrane computing remain intellectual types applications directly computer science providing new types hardware new types algorithms 
anyway numerous attempts implement simulate systems existing computers 
systems inherently parallel variants exhibit intrinsic non determinism existing computers basically sequential speak real implementation dealing software products aiming simulate systems electronic computers 
probably dozens systems simulators simpler sophisticated instance providing graphical interfaces possibility follow parameters evolution system 
membrane computing web page programs freely available 
programs non trivial programming exercises didactic scientific value checking proofs systems simulated large number steps search possible evolutions 
programs deal symbol objects systems incorporate cooperative rules priority relations features 
programs simulate systems active membranes 
programs deal standard systems defined previous sections deal probabilities reaction rates assigned evolution rules advance dynamically computed evolution system population objects region system time 
course programs closer biochemical reality cell programs applications related cell biology see section 
important information provided programs 
cases follow state system different paths computation graphs displaying population certain objects time 
suggestive output provided program provides mathematica style image called sevilla carpet associated computation sevilla carpet parallel computing counterpart language language theory rectangle constructed indicating time unit rules rule gives number times rule variable mapping obtained natural values sevilla carpet gives way image combined space time complexity computation details 
special interest implementations simulations distributed hardware done especially reported reconfigurable hardware 
hand highly possible fruitful approach computer science point view implement system model incorporate new types software products features membrane computing general features cell structure functioning membranes localization decentralization loose control program units 
illustration strategy read elemental language developed ueda collaborators membranes multisets appear explicitly language design see 
applications membrane computing started cell biology attempt learn useful computer science model real cell mathematically developed theory returned biology possible tool simulating local phenomena cell possibly simulating cell 
means easy task places said completing genome project main challenge bio informatics century model simulate cell see 
hand membrane computing intrinsic features candidate framework approach cell simulation discrete algorithmic model easy implement computer important easy scale difficulties dealing differential model easy understand biologists easy check modify apply model initiated inspiration cell structure functioning coming outside necessary adapt new reality happens models initially physics mechanics linguistics applied biology 
local processes modelled systems strategy type captures systems model features specified biological process dealing populations molecules evolving compartments cell takes writes program simulating type systems performs experiments program certain parameters evolution system real process various circumstances cases graphical representations evolution time multiplicities certain objects provided 
respiration bacteria processes related system processes studied way 
recall detail refer papers mentioned chapter devoted biological applications papers available milano web page 
standard type applications biology 
operational tried linguistics management mainly language mc 
means long list concepts newly introduced related new manner area way represent cell structure proposed membrane computing 
representation attractive biologist euler venn diagrams labels membranes multisets objects chemicals placed regions sets rules placed regions case rewriting rules near membranes suggest associated membranes case symport antiport rules 
promising expected happening lindenmayer systems computer graphics see 
fuzzy set theory papers proposing ways systems mainly research topic real interest applications biology 
counting multiplicity objects means realistic assumption biologists concentrations gradients linguistic logic dealing terms sufficient necessary probable 
mention papers dealing fuzzy systems approaches probabilistic systems 
dynamic systems approaches similar previous topic investigating systems dynamical systems computing devices mainly subject researches 
interest applications obvious halting computer science feature turing inspired goal cells life evolution 
duration periodicity attractors reachability configurations specified properties stability related notions central moving secondary level interest computability issues 
mention titles mentioning second contains large number ideas researches comprehensive bibliography 
computing turing mentioned topic framework advanced issues reversibility computations conservation objects happens symport antiport systems necessarily transition systems multiset rewriting rules energy related object evolution 
web page times mentioned contains titles related topics 
possible systems increase computational power turing 
answer affirmative see details section 
concluding remarks stated section intended offer bird eye view developments membrane computing especially pointing research topics plausible important investigated providing bibliographical hints interest 
bibliography contains titles especially collective volumes phd theses material 
reader interested membrane computing strongly advised follow developments domain web page milano particular looking volumes editions workshops brainstorming weeks devoted membrane computing 
turing barrier years turing machine model computation defined means compute foundations modern theory computing 
furthermore noted various authors see example silicon computer capacity handling information growing rate times faster information handling nervous system years evolution important commodity exponentially better gets cheaper 
exponential race essentially turing bounded produce feasible solutions intractable problems importantly investigations solve turing unsolvable problems 
super turing computation computation transcends limit imposed turing model 
perspective consult special issues journal minds machines see lucid analysis comprehensive bibliography section computation turing machines especially critical 
studies just mere idle speculations pure theoretical abstractions studied sake little regard real world 
dare answer rhetorical question negative 
science really essentially carrying calculation limits science necessarily extended extend computational capabilities 
promises high science reach points seen 
case failure 
case gain immense arguably scientifically interesting negative results reveal new limits far reaching implications mathematics computer science physics biology philosophy 
turing barrier 
recall merchant problem stacks coins stack containing coins know stack contains false coins weighting true coins weight problem find stack false coins weighting 
classical solution reduces problem weighting special combination coins coin stack coins second stack 
coins tenth stack 
false coins th stack weight combination weight just probably elegant solution described solution computational problem bearing typical features quantum computing see extended discussion 
infinite merchant problem assume countable stacks computable way containing true coins 
true coins weight false coins weight 
allowed take coin stack want determine coins true stack false coins 
show infinite merchant problem classically undecidable reducing halting problem problem decide arbitrary turing machine halts arbitrary input infinite merchant problem solvable turing machine 
undecidability determined impossibility decide finite time answers infinite number questions stack contain false coin second stack contain false coin caused fact time computation grows indefinitely fact space computation grows indefinitely 
classical theories computability complexity see example give indication respect 
quantum approach quantum approach infinite merchant problem developed shows time finite provided specific probabilistic strategy 
probability assume device described sensitivity real compute classically time run device random input time get click system false coins get click conclude probability greater coins true 
essential part method requirement time limit classically computable 
device sensitivity distinguish values iterated quadratic form qt xi observing difference averaging trajectories discrete random walks non perturbed perturbed sequences tl tl stops 
non perturbed sequence corresponds equal steps tl perturbed corresponds varying steps tl device sensitivity defined terms sobolev norm 
cases may appear 
device clicked know sure exist false coins system 
possible time device hasn 
clicked physical approaches solve turing uncomputable problems proposed 
may happen coins true time growth hasn reached threshold 
case device click stage test vector produces true information call true vector 
second case test vector lying time false coins system detected time say produces false information time assume exist false coins system say stack device click moment test vector belongs indistinguishable set xj 
proven wiener measure indistinguishable set converges computably zero 
denote priori probability absence false coins system 
posteriori probability system contains true coins device click running experiment time non click brownian solution resonance amplification discussed 
special role scenario played ability producing truly random inputs described device 
physically possible 
answer affirmative possible produce reliable truly quantum random bits exist commercial products doing example produced gap affiliated university geneva see 
systems approach concerns possibility computing turing systems devoted topic 
recall main problem carry infinite computation finite amount time 
basic tool achieve acceleration scales time external global user accelerated device black box internal local time device 
problem formulated global time moment introduced accelerated device able perform inner infinite computation finite number external time units user gets answer problem 
idea came observed process performs step unit global time second step unit global time general subsequent step half global time step able complete global time interplay local global time solving halting problem means accelerated device infinity steps just global units time 
universal turing machine working kind accelerated manner capable deciding halting problem global time introduces code particular turing machine input accelerated universal turing machine global time units answer halts 
acceleration conflict turing model computation mathematical definition turing machine specify long take perform individual step 
shown known physical law forbids acceleration 
take different approach grounded suggestions coming cell brain biology starting observation nature creates smaller smaller compartments cell enhance reactivity enclosed chemicals introduce hypothesis time measured unit compartments system lower compartments smaller units 
exactly assume time unit decreases way membrane structure deeper deeper instance means membrane creation arbitrarily deep structure obtained time units smaller smaller arbitrarily steps computation done inner membrane time unit elapses outside system 
way constant number units external time time observer system perform arbitrarily steps compartments lead computations done turing machines 
result obtained tissue systems neural systems suppose channels cells neurons faster faster computation learn continuously efficient 
context important idea deterministic computations considered time recognizing systems 
models acceleration part hardware quality environment ultimately hypotheses validated biophysics 
details 
calude pavlov transcending limits turing computability ed 
proceedings winter school university japan world scientific singapore appear 
alberts johnson lewis raff roberts walter molecular biology cell th ed 
garland science new york 
martin vide gh 
un eds pre proceedings workshop membrane computing wmc 
spain july technical report university 
freund gh 
un systems active membranes 

modelling biological processes probabilistic system software 
natural computing 
bel parsing active automata 

bernardini population systems 
journal universal computer science 
computational modelling power systems 
phd thesis univ degli studi di milano 
potential systems modeling activity channels coli 

fontana franco systems bio systems 
blake paradoxes temporal process journal philosophy 
calude information randomness algorithmic perspective nd edition revised extended springer verlag berlin 
calude parallel thinking nature april 
calude gh 
un bio steps turing 
research report univ auckland november biosystems 
calude pavlov coins quantum measurements turing barrier quantum information processing 
calude gh 
un rozenberg salomaa eds multiset processing 
mathematical computer science molecular computing points view 
lecture notes computer science springer verlag berlin 
miro approach membrane computing intern 
foundations computer sci appear 
true platonic haven joseph henry press new york 
evolution communication systems 

martin vide gh 
un eds proceedings brainstorming week membrane computing february 
technical report university 
subramanian tissue systems active membranes picture generation 
fundamenta informaticae 
gh 
un perez jimenez eds 
applications membrane computing 
springer verlag berlin preparation 
gh 
un gh 
sevilla associated systems 

system running cluster computers 

copeland minds machines 
franco gutierrez perez jimenez implementing prolog effective cellular solution knapsack problem 

franco note complexity measures probabilistic systems 
journal universal computer science 
automata purely communicating accepting systems 

davis myth 
non turing computations space times international journal theoretical physics 
franco membrane system leukocyte selective recruitment 

freund special variants systems inducing infinite hierarchy respect number membranes 
bulletin eatcs october 
freund kari oswald computationally universal systems priorities catalysts sufficient 
theoretical computer science press 
freund oswald short note analysing systems 
bulletin eatcs 
freund un membrane systems symport antiport universality results 

theory molecular computing 
splicing membrane systems 
phd thesis leiden university netherlands 
simulating counter automata systems symport antiport 

bernardini generative devices graphics 

ibarra computational complexity membrane computing systems 
theoretical computer science 
ibarra number membranes matters 

ibarra dang catalytic membrane systems semilinear sets vector addition systems 
theoretical computer sci 
quantum minds machines 
kitano computational systems biology 
nature 
krishna infinite hierarchies variants systems 
submitted 
conservative computations energy systems 

loewenstein touchstone life 
molecular information cell communication foundations life 
oxford university press new york oxford 
dynamics systems 

martin vide gh 
un rozenberg salomaa eds membrane computing 
international workshop wmc spain revised papers 
lecture notes computer science springer verlag berlin 
martin vide gh 
un systems symport antiport rules survey 
modeling molecular biology rozenberg eds springer verlag berlin 
martin vide gh 
un rodriguez paton tissue systems 
theoretical computer sci see tucs technical report september 
gh 
un eds pre proceedings fifth workshop membrane computing wmc milano publication 
simulations subset transforming system membranes 
fundamenta informaticae 
probabilistic systems 

general multi fuzzy sets fuzzy membrane systems 

ord computing turing machine thesis computer science department university melbourne australia arxiv org ftp math papers pdf 
un gh 
un power communication systems symport antiport 
new generation computing 
gh 
un computing membranes 
journal computer system sciences turku center computer science tucs report november www tucs fi 
gh 
un computing membranes 
springer verlag berlin 
gh 
un membrane computing main ideas basic results applications 
molecular computational models unconventional approaches ed idea group publ london 
gh 
un membrane computing power efficiency quick overview 
proc dna milano eds univ milano 
gh 
un membrane computing second brainstorming week sevilla february 
bulletin eatcs june 
gh 
un romero jimenez eds proceedings second brainstorming week membrane computing sevilla february 
technical report research group natural computing sevilla university spain gh 
un rozenberg guide membrane computing 
theoretical computer science 
gh 
un rozenberg salomaa eds 
membrane computing 
international workshop wmc de arge romania revised papers 
lecture notes computer science springer verlag berlin 
gh 
un eds pre proceedings workshop membrane computing 
de arge romania august publication 
perez jimenez linear time solution knapsack problem active membranes 

perez jimenez solving subset sum problem systems active membranes 
new generation computing 
perez jimenez romero jimenez de la en de con 
editorial kronos sevilla 
perez jimenez romero jimenez complexity classes cellular computation membranes 
natural computing 
reconfigurable hardware membrane system 

www com 

de np complete 
phd thesis univ sevilla 
russell limits empiricism proceedings aristotelian society 
systems versus register machines universality proofs 

power catalysts priorities membrane systems 
grammars 
computational power cell division systems beating parallel computers 
natural computing 
suzuki fujiwara tanaka artificial life applications class systems rewriting systems multisets 

suzuki tanaka modeling signaling network systems 

systems 
submitted 
distributed simulation systems 

ed alan turing life legacy great thinker springer verlag heidelberg 
tomita cell simulation grand challenge st century 
trends biotechnology 
ueda kato language model links membranes 

size systems minimal symport antiport 

solving np complete problems systems active membranes 
unconventional models computation antoniou calude eds springer verlag london 
church turing thesis guiding principle physics calude eds 
unconventional models computation springer verlag singapore 
weyl philosophie der mathematik und oldenburg munich 
www net bib 

