pricing network edges heterogeneous selfish users richard cole dodis tim roughgarden november study negative consequences selfish behavior congested network economic means influencing behavior 
consider model selfish routing defined wardrop studied computer science context roughgarden tardos 
model latency experienced network traffic edge network function edge congestion network users assumed route traffic minimum latency paths 
quality routing traffic measured sum travel times total latency 
known outcome selfish routing nash equilibrium minimize total latency improved coordination 
ancient strategy improving selfish solution principle marginal cost pricing asserts edge network network user edge pay tax offsetting congestion effects caused presence 
pricing network edges principle inefficiency selfish routing 
result fundamental assumes strong homogeneity property network users assumed trade time money identical way 
guarantee ignores algorithmic aspects edge pricing unfortunate possibility efficient routing traffic achieved taxes 
motivated shortcomings extend classical edge pricing different directions prove results 
prove edges single commodity network priced optimal routing traffic arises nash equilibrium general heterogeneous populations network users 
finitely different types network users edge latency functions convex show compute edge prices efficiently 
prove easy check mathematical condition population heterogeneous network users necessary sufficient existence edge prices induce optimal routing requiring moderate taxes mention consequences 
department computer science new york university mercer street new york ny 
supported nsf ccr 
email cole cs nyu edu 
department computer science new york university mercer street new york ny 
supported nsf career award 
email dodis cs nyu edu 
department computer science cornell university ithaca ny 
supported onr 
done part visiting nyu 
email cs cornell edu 
selfish routing edge pricing 
study negative consequences selfish behavior networks economic means influencing behavior 
focus simple model selfish routing defined wardrop studied computer science perspective roughgarden tardos 
model directed network edge possesses latency function describing common delay experienced traffic edge function edge congestion 
fixed amount traffic wishing travel source vertex sink vertex earlier works assume traffic comprises large population users actions single individual negligible effect network congestion 
measure quality assignment traffic paths resulting sum travel times total latency 
assume network user left devices acts routes minimum latency path network congestion due users 
general motivated assignment traffic paths nash equilibrium minimize total latency put differently outcome selfish behavior improved coordination 
inefficiency selfish routing nash equilibria generally motivates strategies coping selfishness methods ensuring noncooperative behavior results socially desirable outcome 
selfish routing ancient strategy discussed informally early marginal cost pricing 
principle marginal cost pricing asserts edge network user edge pay tax equal additional delay presence causes users edge 
decades researchers showed principle leads rigorous guarantee assuming network users choose routes minimize sum latency experienced taxes paid possible levy tax network edge resulting nash equilibrium achieves minimum possible total latency 
briefly inefficiency selfish routing pricing network edges appropriately 
guarantee fundamental unsatisfying respects 
assumes strong homogeneity property model assumes large number network users users assumed trade time money identical way 
edges priced heterogeneous network users 
second guarantee ignores algorithmic aspect edge pricing edge prices efficiently computed 
different sets edge prices induce minimum latency nash equilibrium efficiently compute best 
result single minded pursuit routing minimizing total latency ignores possibility taxes may required achieve routing 
edges network priced efficient routing results addition disutility network users due taxes small 
results 
address issues prove results pricing networks heterogeneous users 
model heterogeneity simple way associate network user scalar assume seeks minimize latency experiences plus times money required pay 
classical setup users introducing function allows full spectrum time vs money tradeoffs small value corresponding large sensitivity time large value indicating sensitivity money 
model prove 
show arbitrary single commodity network heterogeneous community traffic network users sensitivity taxes network edges priced minimum latency routing traffic arises nash equilibrium 
heterogeneous traffic optimally chosen edge taxes sufficiently powerful eliminate inefficiency selfish routing 
result follow principle marginal cost pricing proved nonconstructive fixed point theorem 
additional assumptions function takes finitely distinct values network latency functions convex show compute set optimal edge prices 
taxes need unique prove set optimal taxes explicitly described small set linear inequalities description permits optimization secondary linear objective function minimizing taxes paid network users 
give precise mathematical characterization functions minimum latency routing traffic induced small disutility network users due taxes 
consequence find settings including classical model inducing minimum latency routing require extremely costly taxes 
related 
problems analyzing influencing selfish behavior extensively studied different communities restricting attention computer science literature far works enumerate 
follows discuss results pricing selfish routing closest 
discussed model selfish routing studied defined wardrop extensively studied see 
beckmann showed marginal cost taxes produce minimum latency routing traffic users accomplished simple application karush kuhn tucker theorem see appropriate convex program 
marginal cost pricing studied heterogeneous network users unfortunately extending techniques general setting requires users different values pay different taxes edge 
solution obviously unsatisfying number different user types grows large general consider functions infinitely different values scheme requires knowledge user type traverses edge charge appropriate tax 
contrast seeking solution single tax placed edge see implementing ambitious goal requires mathematical approach quite different marginal cost pricing 
problem optimally pricing shared resources motivated large body welfare economics literature see networking community see 
networking literature considered model selfish routing scope previous economics sufficiently broad encompass heterogeneous traffic model considered 
general techniques welfare economics optimizing prices provide method ensure prices induce selfish solution socially desirable best cooperative outcome 
contrast central existence theorem asserts optimal taxes suffice induce best coordinated routing traffic 
researchers studied compute optimal taxes 
efficiently computing marginal cost prices classical setup homogeneous network traffic turns straightforward convex programming general models goals studied 
emphasis economics literature unfortunately general purpose algorithms need run polynomial time specialized edge pricing problems considered 
transportation science community significant progress efficiently computing characterizing taxes induce minimum latency routing traffic 
considers case homogeneous traffic forms basis algorithmic results 
disutility network users edge pricing apparently largely ignored previous 
approach similar spirit archer tardos frugal mechanisms mechanisms auctions solve optimization problem incentive compatible way moderate incentives :10.1.1.108.4053
context selfish routing previous studied optimization problem computing taxes induce nash equilibrium minimum possible user disutility accounting disutility due latency taxes case homogeneous traffic 
showed optimization problem essentially reduces network design problem avoiding paradox hard approximate reasonable factor 
organization 
section formally introduces model states preliminaries 
section show edge taxes suffice induce minimum latency routing traffic network users heterogeneous 
section show compute taxes networks convex latency functions finitely different types users 
section study disutility caused taxes characterize user distributions disutility small 
preliminaries congested networks flows 
consider directed graph source sink denote set simple paths assume nonempty 
allow parallel edges self loops 
unit traffic wishing travel modeled unit interval endowed lebesgue measure 
point called agent thought noncooperative infinitesimal unit traffic 
flow mean lebesgue measurable function describing goes 
ways ignore information provided flow recover familiar combinatorial objects 
flow naturally induces flow paths define vector indexed paths amount traffic assigned path flow paths induces flow edges defined vector edges amount traffic edge en route flow edges may correspond different flows paths flow paths corresponds different flows 
network suffers congestion effects model assume edge possesses nonnegative continuous nondecreasing latency function describes delay incurred traffic function edge congestion latency path respect flow 
measure quality flow total latency defined equivalently evidently flows inducing flow edges equal total latency 
call flow minimizing optimal flow exists set flows edges compact set continuous 
allow set nonnegative taxes placed edges network denote resulting network taxes call triple form instance 
nash equilibria 
discuss agents react edge pricing 
assume agent money time valuation ratio 
set taxes placed edges network agent seeks shortest path relative edge lengths assume agents sorted order money sensitivity nondecreasing function 
call distribution function 
want assume distribution functions bounded permit functions assume finite 
assume noncooperative behavior results nash equilibrium stable point agent incentive unilaterally alter strategy route 
precise denote agent evaluation path relative taxes latencies respect flow allowing arbitrary rate traffic requires cosmetic changes 
definition flow nash equilibrium nash flow instance agent path 
holds agent say routed minimum path dependence understood 
existence nash flows follows example quite general results thm 
proposition instance admits flow nash equilibrium 
proposition reassuring gives little insight nash flows differ arbitrary measurable functions 
intuitively expect nash flows exhibit nice structure 
agents near value time far money routed path small latency possibly large tax agents slightly farther away route path somewhat larger latency somewhat smaller tax extreme agents near biggest routed path may large latency possesses near zero taxes 
motivated discussion definition 
definition flow nash equilibrium canonical path agents assigned form possibly empty degenerate subinterval 


canonical nash flow splits finite number subintervals path inducing ordering paths assigns traffic nondecreasing latency nonincreasing taxes 
strengthening proposition 
proposition instance admits canonical flow nash equilibrium 
proof proposition essentially just rearrangement argument shows stronger statement arbitrary nash flow reorganized canonical changing cost induced flow paths 
details somewhat tedious omitted 
uniqueness nash flows universal 
reasonably strong uniqueness result takes finitely values step function 
proposition takes finitely values flows nash equilibrium edges addition latency functions strictly increasing induce identical flows edges 
prove proposition techniques convex programming 
approach similar previous works omitted 
proposition known hold general distribution functions set parallel links prop suspect holds general general networks unable verify 
example consider node network links 
links latency functions absence taxes flow nash equilibrium assigns set agents link canonical nash flow agents possibly agent assigned link 
contrast flow edges induced optimal flow placing tax link discourage selfish agents alter set flows nash equilibrium 
ideally seek tax function distribution agent preferences precisely half traffic half greatest sensitivity taxes induces minimum latency routing 
sections study find taxes 
existence optimal taxes section show carefully chosen edge prices inefficiency due selfish routing presence agent heterogeneity 
precisely instance call set taxes optimal minimum latency flow flow nash equilibrium induce identical flows edges follows minimum latency flow 
classical guarantee marginal cost pricing states equal latency functions differentiable taxes edges optimal denotes derivative 
show instance admits optimal tax assuming traffic nonzero sensitivity edge taxes agents 
proving general result consider seemingly special type instance 
behaved instances subsection consider instance satisfies assumptions call instance behaved 
directed acyclic graph admitting minimum latency flow edges 
latency functions uniformly strictly increasing sense edge 
distribution function step function finitely values 
distribution function satisfies agents sensitivity taxes 
remove assumptions subsection 
little reflection shows distribution function fails satisfy assumption assumption slightly weaker instances restricting node link networks optimal taxes exist 
prove behaved instances admit optimal taxes 
proof proceed parts 
part constructs continuous update map takes sets taxes intuitively better sets taxes 
apply brouwer fixed point theorem show update map fixed point 
type argument quite standard economics game theory particular nash theorem existence nash equilibria non zero sum finite matrix games proved way 
finish proof show fixed points update map desired sets optimal taxes 
fixed point arguments game theory including proof nash theorem fact obvious application prove detailed combinatorial structure underlying network 
behaved instance minimum latency flow edges assumption 
motivation consider tax need optimal 
instance behaved proposition implies flows nash equilibrium induce flow edges edges optimal tax wish modify way steers nash flow natural heuristic increase tax edges decrease tax edges apply fixed point theorem ensure candidate tax vectors remain bounded arbitrary number iterations update map 
discussion define update map follows large upper bound maximum allowable tax chosen min max map defined behaved particular uniquely defined edge edges proposition map continuous 
proof sketch 
suffices prove map continuous 
assumptions follows theorem thm applying straightforward reduction 
brouwer fixed point theorem corollary 
corollary map fixed point 
remains show fixed point optimal tax behaved instance 
fixed point 
definition classify edges types respect follows 
call fixed point edges bad fixed point 
writing max max number vertices key lemma 
lemma max bad fixed points 
main theorem subsection follows immediately lemma definitions 
theorem behaved instance admits optimal set taxes 
discuss lemma proof details appendix lemma intuitively plausible bad fixed point traffic uses heavily edges tax free alternatives 
hand edges scattered network arbitrary way reason making intuitive argument precise takes 
proof lemma hinges defining appropriate ordering vertices idea different purposes 
describe properties desire ordering nash flow behaved instance vertex denote length shortest path edge lengths 
proof approach lemma see appendix motivates ordering satisfying follows ordering values vertices nondecreasing ordering 
acyclic properties jointly attainable agents chose st paths minimum possible tax see heterogeneity agent objective functions mutually exclusive goals 
lemmas appendix show hand possible achieve approximately satisfying 
weaker statement turns sufficient prove lemma 
intuitively weaker result possible sufficiently large taxes agents order choosing minimum tax paths edge latencies second order effect 
agent objective functions approximately equal define ordering satisfying relaxed version 
general instances subsection show instance admits set optimal taxes 
remove assumptions previous subsection 
assumption directed acyclic admits optimal flow edge easy remove loss generality admits acyclic optimal flow edges effectively deleted sufficiently large tax 
details appendix lemma instance satisfying assumptions admits optimal set taxes 
remove assumption latency functions uniformly strictly increasing 
proof approach approximate general latency functions uniformly strictly increasing ones conclude limiting argument 
details provided appendix lemma instance satisfying assumptions admits optimal set taxes 
general result approximate arbitrary distribution functions step functions apply limiting argument 
proof similar lemma omit 
theorem instance satisfies admits optimal set taxes 
tax definition optimal flow nash equilibrium induces flow edges optimal flow minimum latency 
uniqueness assertion proposition implies long distribution function takes finitely values nash flows induced optimal tax minimum latency 
know analogous uniqueness result general distribution functions suspect discovered conceivable instance general distribution function nash flows induced optimal tax fail minimum latency 
computing optimal taxes existence results previous section highly nonconstructive 
theorem asserting existence optimal taxes behaved instances relies brouwer fixed point theorem efficient algorithms finding brouwer fixed points known see 
extensions theorem subsection require nonconstructive arguments extracting convergent subsequence sequence compact set 
section methodology considered agents identical objective functions show efficiently compute optimal taxes instance finitely different types agents convex edge latency functions 
fact section assume reasonable encoding latency distribution functions see typical approaches 
assume distribution function step function steps requires input bits describe 
show strong way prove set optimal taxes explicitly described polynomial size set linear inequalities 
optimal tax efficiently fact optimal tax optimizes secondary linear objective function minimizing taxes paid network users computed efficiently 
constructive results complement subsume existence theorems section special case finitely distinct agent types contrary existence results provide sole assurance linear description set optimal taxes describes non empty set 
shown existence efficient algorithm compute optimal tax optimal flow network arbitrary continuous nondecreasing latency functions implies np proof deferred full version 
circumvent difficulty section assume network latency functions convex 
assumption total latency convex function optimal flow computed efficiently convex programming 
assumption satisfied latency functions interest including polynomials nonnegative coefficients popular queueing delay functions see specific examples 
proceed algorithmic results 
instance takes finite number values call agents ith commodity 
flow instance write number lebesgue measure agents commodity assigned path similarly number agents commodity edge assigned routes 
reformulation definition nash flow easy consequence fact agents flow nash equilibrium select shortest paths personal objective functions 
lemma instance takes finite number values flow paths induced flow nash equilibrium minimizes possible flows paths flow edges induced flow nash equilibrium minimizes possible flows edges 
lemma corresponds directly agents select shortest paths intuition lemma follows easily assertion useful purposes 
lemma provides extremely handy criterion proving set taxes optimal 
particular optimal flow instance step function values define cost lemma implies flow edges induced flow nash equilibrium optimal value mathematical program min subject 

exactly assumption optimal flow computed arbitrary precision polynomial time 
best hoped exact description optimal flow may require irrational numbers 
discuss minor detail 
number agents commodity 
fixed linear program 
argument similar proving proposition assumption edge latency functions convex implies optimal flows induce edge latencies linear program independent chosen optimal flow follows observation tax optimal optimal value 
apply strong lp duality finding set taxes optimal optimal value linear program max subject 

equals 
optimal value see take 
set taxes optimal set equations inequalities solution 

number constraints polynomial size optimal flow edges efficiently computed latency functions convex system constructed polynomial time 
final key observation system linear fixed linear allowed vary 
optimal tax linear programming existence tax assured theorem 
summarize results section theorem 
theorem instance convex latency functions takes finitely distinct values 
linear description taxes optimal computed polynomial time 
particular set optimal taxes computed polynomial time 
cost optimal taxes shown optimal taxes exist quite general conditions theorem 
answers basic question power edge pricing theorem guarantee disutility caused agents due possibly large taxes 
section address issue 
account disutility caused agents taxes extend total latency objective function section 
flow instance define cost flow da see section 
definition agrees section special case takes finitely different values 
definitions total latency cost agree 
note different flows inducing flow paths different costs cf simpler total latency measure 
spent previous sections studying taxes minimize total latency nash flows natural goal study taxes minimize cost nash flows 
unfortunately optimization problem provably intractable assuming np 
confine attention cost optimal taxes taxes induce minimum latency flow 
put differently investigate question costly tax induced minimum latency routing 
contribution complete characterization distribution functions disutility due optimal taxes constant factor times disutility due latency times latency optimal flow 
emphasize extremely strong guarantee reason priori believe distribution function property 
better appreciate discuss modification example 
suppose replace latency function link example highly nonlinear function large simple calculation see shows absence taxes total latency equivalently cost nash flow arbitrarily larger minimum latency flow 
example guarantee consequence taxes cost nash flow arbitrarily larger adding taxes making cost function severe attain nash flow cost constant factor 
distributions taxes improve cost nash flow arbitrarily large factor 
analysis formalize guarantee desire distribution function 
definition distribution function cheap parameter property holds instance set optimal taxes minimum latency flow nash equilibrium 
distribution function cheap cheap finite 
easy show distribution functions cheap 
fact considering node networks link constant latency function derive necessary condition cheap distributions see appendix proof 
statement condition employ notation mean left limit lim zn distribution function point limit exists distribution functions assumed nondecreasing equal continuous lemma cheap distribution function da 
condition essence growth condition asserting grows extremely quickly simplest distribution functions satisfying value functions 
particular consequence condition cheap distribution function unbounded bounded right hand side vanishes 
step functions finitely values cheap 
arguably counterintuitive effect taxation reminiscent famous paradox occur networks paradox networks parallel links 
far remarkable necessary condition lemma remains necessary restricting attention node link networks fact condition sufficient distribution cheap 
state result proof postponed appendix theorem distribution function cheap da 
condition theorem quite strong satisfied distribution functions optimal taxes general quite costly 
find surprising natural distribution function cheap satisfying cheap distribution functions admit crisp mathematical characterization 
aaron archer david eppstein rob freund eric yuval rabani andreas schulz ilya segal eva tardos adrian neal young helpful discussions 
ahuja magnanti orlin 
network flows theory algorithms applications 
prentice hall 
archer tardos 
truthful mechanisms parameter agents 
proceedings nd annual symposium foundations computer science pages 
archer tardos 
frugal path mechanisms 
proceedings th annual symposium discrete algorithms pages 
beckmann mcguire 
studies economics transportation 
yale university press 
hearn ramana 
congestion toll pricing traffic networks 
pardalos hearn hager editors network optimization pages 
springerverlag 
border 
fixed point theorems applications economics game theory 
cambridge 

uber ein der 

available homepage ruhr uni bochum de dietrich 
cole dodis roughgarden 
cost taxes selfish routing 
submitted 

traffic assignment problem multiclass user transportation networks 
transportation science 

toll patterns multiclass user transportation networks 
transportation science 

sensitivity analysis asymmetric network equilibrium problem 
mathematical programming 
sparrow 
traffic assignment problem general network 
journal research national bureau standards series 
hearn ramana 
solving congestion toll pricing models 
marcotte nguyen editors equilibrium advanced transportation modeling pages 
kluwer academic publishers 
hearn 
toll pricing framework traffic assignment problems elastic demand 
current trends transportation network analysis papers honor michael florian 

hirsch papadimitriou vavasis 
exponential lower bounds finding brouwer fixpoints 
journal complexity 
preliminary version focs 
larsson 
side constrained traffic equilibrium models traffic management link tolls 
marcotte nguyen editors equilibrium advanced transportation modeling 
kluwer academic publishers 
mcknight bailey 
internet economics 
mit press 

generic uniqueness equilibrium large crowding games 
mathematics operations research 

theory optimal taxation 
arrow editors handbook mathematical economics volume iii chapter pages 
north holland 
nash jr non cooperative games 
annals mathematics 
sullivan uhl 
mathematics nonlinear programming 
springerverlag 

economics welfare 
macmillan 
roughgarden 
designing networks selfish users hard 
proceedings nd annual symposium foundations computer science pages 
roughgarden 
price anarchy independent network topology 
proceedings th annual acm symposium theory computing pages 
roughgarden 
selfish routing 
phd thesis cornell university 
roughgarden tardos 
bad selfish routing 
journal acm 
preliminary version focs 

equilibrium points nonatomic games 
journal statistical physics 
smith 
marginal cost taxation transportation network 
transportation research series 
tarjan 
data structures network algorithms 
siam 
wardrop 
theoretical aspects road traffic research 
proceedings institute civil engineers pt 
ii volume pages 
proofs section proofs subsection implement program described subsection 
lemma behaved instance vertices max max 
taxes induce nash flow suppose max 
vertex denote length shortest path edge lengths 
suppose 
proof 
agent uses edge path 
path agent uses get path minimum possible tax 
nash flow agent uses minimum path derive max max lemma follows 
lemma assumptions notation lemma suppose path proof 
sum previous lemma edges behaved instance nash flow ordering vertices satisfies property subsection implies path edge ordering constructed example topologically sorting vertices edges breaking ties incomparable vertices putting vertex smaller value 
lemma proves ordering satisfies relaxed version property subsection 
lemma suppose adopting assumptions notation lemma placing ordering vertices vertex follows vertex ordering 
proof 
follow ordering 
lemma holds 
path lemma follows lemma nonnegativity prove lemma 
proof lemma 
assume contradiction bad fixed point behaved instance inducing nash flow bad edge induce acyclic flows edges carrying unit flow straightforward show edge say 
seek edges contrast edge discover edges looking particular type cut 
place ordering vertices write vertex precedes equal ordering 
statements sequel assume ordering vertices refer ordering 
ith consecutive cut mean partition vertex set classes class vertices ith jth vertices 
property orderings implies follows consecutive cuts 
fact cuts 
property orderings fact net flow cut see tarjan implies total flow escaping consecutive cuts precisely 
contrast total flow escaping cuts may ordering need topological edges 
consecutive cuts contain edge implies counting cut contains edge 
bad fixed point tax edges 
identify collection edges covers consecutive cuts 
precisely denote edge crossing ith consecutive cut 
necessarily addition process halts 
edge crossing consecutive cut source side vertex repeating process obtain sequence 
edges process halt heads 
edges strictly increasing 
claim follows directly chain inequalities different types 

edges bad fixed point 
second type inequality asserts 
immediate consequence lemma 
interleaving types inequalities proves claim 
prepared derive contradiction 
applications lemma imply assume 
hand edge lemma incompatible inequalities provide contradiction showing bad fixed point exist 
proofs subsection proof lemma 
denote instance satisfying assumptions subsection 
instance admit optimal flow edges form directed acyclic graph removing flow cycles flow edges decreases total latency 
denote subgraph edges 
instance behaved theorem set taxes inducing nash flow max extend edges setting max max max 
claim nash flow 
prove suffices show agent wants path containing edge 
holds agent experiences personal cost max path incur cost greater max max path including edge 
need statement slightly stronger lemma sequel 
proofs theorem lemma properties optimum flow instance acyclic extension lemma inducing acyclic flows need 
corollary denote instance satisfying assumptions subsection acyclic flow 
set taxes nash flow proof lemma 
denote instance satisfying assumptions subsection admitting acyclic optimal flow positive integer edge define note uniformly instance satisfies assumptions subsection need optimal corollary applies set taxes nash flow proposition loss generality assuming canonical see definition 
show sequences chosen lie compact subspaces euclidean space 
straightforward taxes inspection proofs theorem lemma shows maximum allowable tax restricted function depends max max 
parameters remain uniformly bounded sequence instances sequence taxes chosen lie compact subset sufficiently large arguing sequence flows delicate flow function defined unit interval 
flow canonical suffices deal elementary objects 
canonical flow associate summary vector components corresponding path describe left right endpoints interval agents assigned convention agents exist 
finite set summary vectors finite dimensional 
canonical flow recovered measure zero set subinterval endpoints 
sequences taxes summary vectors sequences compact spaces select convergent subsequence 
retaining original index scheme simplicity implies existence convergent sequences canonical flow corresponding nash equilibrium sum subinterval lengths vector vectors lie common finite dimensional space property preserved limit 
follows vector defines canonical flow natural way 
route assignments completely determined measure zero set agents correspond endpoints subintervals call agents endpoints 
flow induces flow edges flow finish proof need show nash equilibrium 
proceed contradiction 
fails nash equilibrium endpoints unsatisfied endpoints reassigned preferred routes produce nash flow inducing flow edges agent endpoint minimum path put differently path uniformly endpoint sufficiently large contradicts nash equilibrium completing proof 
proofs section proof lemma 
suppose cheap distribution function 
node link network links 
real numbers choice latency function optimal flow satisfies function chosen polynomial possibly large degree desired 
choose choices arbitrary long continuous imposes little restriction nondecreasing function discontinuous countably points 
optimal set taxes minimum latency flow nash equilibrium properties promised definition 
loss generality assuming canonical see definition 
nash flow assign agents links hold 
subtracting common tax links leaves nash equilibrium decreases loss generality assuming 
canonical optimal tax agents assigned link agents assigned link continuous agent indifferent options 
implies 
cheap da 
substituting rearranging derive da chosen arbitrarily close zero choice find da points continuous 
left limits points continuous find da 
arbitrary cheap distribution derived promised necessary condition 
proof theorem 
denote distribution function satisfying da 
assume simplicity continuous assumption removed minor modifications proof 
fix instance theorem know optimal tax 
claim stronger 
claim instance admits optimal tax property path receives zero tax 
proof claim 
optimal tax inducing flow nash equilibrium induces flow edges acyclic minimum latency flow topologically sort vertices flow carrying edges go forward vertex ordering 
vertex preceding proceeding backwards vertex ordering perform operation vertex minimum tax flow carrying edge tail subtract tax flow carrying edge tail add tax edge flow carrying head operation affect total tax path increase tax paths flow remains nash equilibrium modifications 
source reached subtract tax flow carrying edges tail remains nash equilibrium 
modifications vertex outgoing flow carrying edge edge zero tax 
implies path path flow carrying edges possesses zero tax 
optimal tax assigns zero tax path flow nash equilibrium 
take canonical flow 

denote paths assigns traffic 
follows abbreviate canonical assume loss generality subinterval agents assigned path precedes agents assigned path split subintervals ith subinterval agents assigned path assumptions notation place write cost manageable form da da denotes amount flow assigns paths index defining 
equation equivalent da 
condition holds lim agents arbitrarily large value 
path assigned zero tax nash equilibrium follows 
da 
hypothesis 
assumption nash equilibrium 
continuous nash flow agent indifferent paths implying plugging equality find completes proof 

