scalable supernode selection peer peer overlay networks virginia lo zhou liu chris jun li define problem called supernode selection problem emerged variety peer topeer applications 
supernode selection involves selection subset peers serve special role 
supernodes dispersed peerto peer overlay network fulfill additional requirements load balance resource needs adaptability churn heterogeneity 
similar dominating set centers problems supernode selection problem meet additional challenge operating huge unknown dynamically changing network 
describe generic supernode selection protocols developed peer topeer environments label scheme structured overlay networks distributed protocol overlay networks negotiation protocol unstructured overlays 
believe integrated approach supernode selection problem benefit peer peer community cross fertilization ideas sharing protocols 

identified fundamental problem call supernode selection problem occurs spectrum peer peer applications including file sharing systems distributed hash tables dhts publish subscribe architectures peer peer cycle sharing systems 
supernode selection problem shows fields sensor networks ad hoc wireless networks peer grid computing 
supernode selection involves selection subset peers large scale dynamic network serve distinguished role 
specially selected peers dispersed network typ supported part nsf nsf graduate research fellowship lo cs uoregon edu network research group university oregon ically fulfill additional requirements load balance resources access fault tolerance 
supernode selection problem highly challenging peer peer environment large number supernodes selected huge dynamically changing network node characteristics network topology known priori 
simple strategies random selection don 
supernode selection complex classic dominating set centers graph theory known np hard problems respond dynamic joins leaves churn operate potentially malicious nodes function environment highly heterogeneous 
supernode selection shows peer peer networking applications 
example peerto peer file sharing systems kazaa gnutella protocols developed designation qualified supernodes ultrapeers serve ordinary peers scalable content discovery 
peer peer infrastructure services require methods judicious placement monitors landmarks beacons physical network purposes measurement positioning routing :10.1.1.140.3129:10.1.1.16.1445:10.1.1.156.144
ad hoc wireless networks connectivity highly dynamic conditions achieved identifying subset nodes serve bridging nodes 
subset formed distributed dominating set protocol node broadcast range bridging node :10.1.1.11.9833
sensor networks supernodes selected purpose data aggregation conditions distributed sensors sufficient remaining battery life 
demonstrate peer peer networking applications seeking solutions variations fundamental problem 
define general model supernode selection problem describing key requirements challenges 
show supernode selection problem related dominating set centers problems describe supernode selection problem instantiated known peer peer applications 
general purpose supernode selection protocols developed basic types overlay networks peer peer applications structured overlay networks coordinate overlay networks unstructured overlay networks 
sole label supernode selection protocol applications built structured overlay network chord pastry 
sole exploits regular node labeling schemes structured overlays distribute supernodes evenly overlay ensure fast access supernodes maintain fixed supernode non supernode ratio overlay grows shrinks dynamically 
popcorn protocol applications coordinate overlay network systems vivaldi gnp 
protocol distributes fixed number supernodes evenly respect topology overlay network repulsion model 
advertisement protocol deployable unstructured overlay network 
protocol find qualified supernodes peers ordinary peer hops supernodes multiple distance domination 

problem definition background describe unique requirements challenges supernode selection problem context peer peer systems 
describe dominating set centers problems graph theory form theoretical underpinnings supernode selection problem 
conclude surveying examples applications peer peer computing networking domains call scalable supernode selection protocols 

supernode selection problem broadly define supernode selection problem selecting subset peers large scale peer peer overlay network take special role designated supernodes providing service non supernodes 
potentially large undefined number supernodes selected unknown large scale dynamically changing overlay network 
describe key topological distribution criteria supernodes fulfill relative non supernodes 
second enumerate characteristics peer peer networks supernode selection difficult 
supernode distribution criteria 
supernodes distributed peer peer overlay network topologically sensitive way meet distribution criteria listed 
access non supernodes low latency access supernodes 
access measured hop counts delay 
dispersal supernodes evenly distributed overlay network clustered subregions overlay 
proportion pre specified global ratio supernodes non supernodes maintained meet application specific performance requirements 
load balance supernodes serve non supernodes configured locally resource capability supernode 
note criteria inter related specification requirements may impact application may require multiple criteria 
peer peer factors 
design supernode selection protocols peer peer environment challenging addition fulfilling distribution requirements outlined deal factors arising underlying nature large scale highly dynamic systems 
heterogeneity current large scale peer systems consist large number heterogeneous nodes differing hardware software resources 
node eligible supernode meets certain minimum qualifications 
qualifications include resources cpu power disk memory space battery life stability uptime fault tolerance communication bandwidth fanout safety trust security 
adaptability churn peer peer environments extremely dynamic 
supernode selection protocols able handle churn respond quickly especially supernodes leave system 
supernode selection protocols adaptive dynamic changes network traffic overlay topology 
resilience fault tolerance supernode dies supernodes quickly take functions new supernode quickly selected 
security supernodes may vulnerable denial service attacks malicious supernodes disrupt system failing forward messages giving wrong information 

dominating sets centers leader election wealth research graph theory location theory distributed computing provides formal foundation supernode selection problem 
basic dominating set problem problem finding minimal subset vertices graph called dominator set node dominator adjacent dominator 
dominating set problems algorithms described thoroughly 
versions np hard 
distance domination seeks find minimum size set distance arbitrary node dominator multiple domination requires peer distance dominators 
colored domination presumes node graph associated color set cn 
dominating set color ci dominators color 
colored domination model heterogeneous networks certain nodes qualified dominators 
secure dominating set subset vertices vertex exists neighbor add remove get secure dominating set defensive alliance variant dominating set set vertex neighbor vertex majority neighbors offensive alliance vertex majority neighbors defensive dominating set set vertices counter attack vertices attack vertex countered neighbor 
center problem applicable placing fixed number supernodes network 
algorithms variations np hard discrete location problem 
center problem problem finding subset vertices graph called centers minimize maximum total distance non center node nearest center 
colored centers colored graph problem finding subset pi vertices color ci minimize distance criteria 
classic leader election problem distributed computing differs supernode selection assumes nodes vote directly indirectly choice supernode 
leader election algorithms scalable require broadcasting passing token nodes 
best known leader election protocols electing leader typically node highest id number various fault tolerant scenarios ring bully 
heuristic algorithms developed classic problems utilized field networking applicability usually limited smaller scale static networks 
part involve centralized algorithms high message passing overhead 
algorithms designed large scale peerto peer networks exhibit high degree churn dynamically heterogeneous 

ultrapeers landmarks rendezvous points best known example supernode selection peer peer application gnutella protocol selection ultrapeers peers sufficient bandwidth processing power serve proxies peers 
ultrapeers reduces network traffic speeds content discovery 
peer select ultrapeer meets criteria minutes high bandwidth sufficient processing power runs os handle large number simultaneous tcp connections nated 
ultrapeer selection protocol dynamically adjusts number supernodes follows leaf find ultrapeer free slots promote ultrapeer 
ultrapeers downgrade longer serve leaf nodes negotiation nearby peers 
gnutella supernode selection ultrapeer selection protocol loosely meets distribution criteria defined adapts dynamically users needs best effort fashion 
gnutella goals achieve certain ratio ultrapeers leaf nodes currently way control ratio 
security addressed gnutella 
canonical supernode selection problem shown bootstrapping step number prominent peer peer systems designation landmark nodes internet 
structured overlay constructed binning technique carefully placed landmarks construct topologically sensitive overlay 
gnp coordinate system built landmark nodes 
shown accuracy gnp coordinates highly sensitive location landmark nodes 
choosing landmark nodes boils supernode selection fixed small number supernodes dispersed physical network 
notion evenly distributed dispersed captured metrics pairwise distances medians medians distances centroid 
current approaches manual placement landmarks centralized dominating set algorithms 
examples outside peer peer computing illustrate wide scope supernode selection problem 
ad hoc wireless networks distributed dominating set protocol select nodes serve intermediary routing nodes bridge distance wire nodes broadcast range 
idmaps distance map internet centralized centers algorithm place tracer monitors boxes known network topology 
sensor networks utilize specially placed monitor nodes rendezvous points collect aggregate sensor data access battery life constraints 
table lists examples supernode selection problem range applications showing commonality diversity supernode qualifications supernode distribution requirements 
projects papers supernode distribution qualifications criteria distance estimation gnp minimal idmaps tracer box content location operating system gnutella bandwidth kazaa uptime memory cpu routing highly expressway available sequoia fan router bandwidth trust data aggregation sensor battery networks life rendezvous point bandwidth sequoia uptime rp memory cpu ferreira trust monitors point presence idmaps minimal neti home inter landmark distance fixed landmarks maintain ultrapeer proportion leaf nodes close network access points hops supernodes disjoint paths signal radius easily accessible distribution fits density fixed monitors sensitive network topology table 
supernode selection examples 
new supernode selection protocols heuristic algorithms classical problems dominating set center applied large scale dynamic peer peer environments 
standard networking techniques random selection peers flooding search suitable supernodes 
nodes selected random strategy may qualify supernodes may poorly dispersed 
flooding search large number supernodes scalable adapt dynamic changes network 
reasons introduce new supernode selection protocols basic types overlay networks structured coordinate unstructured 
protocols take advantage properties respective overlay types better address supernode selection 
performance evaluation protocols part ongoing research agenda outside scope 

sole supernode selection structured overlay networks sole designed select group supernodes structured overlay network goal keeping supernode non supernode ratio stable peers join leave overlay 
sole maintains low access non supernodes supernodes provides load balancing supernode 
part section discuss sole addresses resource heterogeneity churn fault tolerance 
dht distributed hash table built structured overlay network chord pastry symmetric regular node label space physical node owns virtual subspace overlay 
structured overlay networks compact node label expression encode large collection virtual nodes 
sole exploits notation uses node label expression designate subset virtual node label space supernodes 
supernode label expression stored dht fast easy lookup 
number supernodes expanded simply changing node label expression see examples 
structured overlay network maps physical nodes virtual subspaces manner sensitive density topology supernodes evenly distributed physical non supernode nodes nearby supernodes 
initiation supernode selection 
node initiates supernode selection procedure service hashing information service dht public key initiator supernode selection policy 
policy contains supernode label expression minimum criteria node supernode maximum lifetime supernode 
non supernode discover identity supernodes service accessing dht service related key lookup supernode label expression 
example structured overlay 
assume space dimensional space length ith dimension di 
select supernodes service initiator factors kd ki 
dimension supernode label obey formula bi di ki di bi random number chosen range di integer 
randomness prevents different service initiators choosing group supernodes 
illustrates process supernodes dimensional space 
virtual supernode label supernode non supernode 
supernode selection 
supernode label expression example pastry structured overlay 
select supernodes service initiator needs generate node label log don care bits highest order bits don care bits distributed randomly label remaining bits node label randomly set 
example service initiator needs supernodes supernode label expres bits bits sion 
node label matches instantiated bits potential supernode 
message sent supernode label physical node closest node label receive 
supernode takes charge service 
initiator send message supernode labels inform chosen supernodes 
notification done multicast overlay network 
physical node owns node label matches supernode label expression receive message supernode 
alternatively supernode takes charge receiving request non supernode 
non supernode joins service 
non supernode wants join service looks supernode label expression dht 
non supernode nearest supernode virtual overlay label routing protocol 
structured overlay network provides bounded virtual routing path length proportional distance labels label space 
non supernode uses cartesian distance label supernode label estimate distance 
pastry non supernode uses bit wise xor operation compute label distance estimates physical distance 
resilience fault tolerance 
sole function situations supernodes depart gracefully die suddenly 
supernode replicate supernode related state neighbor nodes take subspace covered label fails 
supernode failure detected underlying overlay network maintenance protocol 
capable neighbor failed supernode take supernode role 
heterogeneity 
supernodes nodes better capability respect cpu speed network connections resources 
new node joins existing supernode coordinate new node existing physical node serving supernode negotiate see capable take supernode role 
nearby non supernode offer take nearby supernode role capable swapping virtual subspaces 
adaptability 
non supernode switch supernode satisfied performance current supernode 
determine distance supernodes comparing node label expression supernode node label expression query dht see new supernodes selected initiator 
supernodes needed initiator simply expands supernode label expression cover virtual node labels 
peer peer applications built structured overlay networks benefit sole 
example sole dynamically select supernodes act rendezvous points applications cycle sharing publish subscribe storage sharing 
research resource discovery peer peer cycle sharing systems shown rendezvous points collect resource information match queries clients performance dramatically improved compared probing advertisement resource discovery methods 

popcorn supernode selection coordinate overlay network popcorn assumes dimensional euclidean coordinate space internet coordinate system gnp vivaldi 
popcorn suited applications wish select fixed set supernodes distribute evenly overlay perform service security monitoring protocol testing data repositories 
popcorn primary distribution criteria dispersal achieved maximizing sum inter node distances pairs supernodes 
popcorn achieves access supernode easily extended address heterogeneity adaptability fault tolerance 
popcorn protocol selects supernodes tokens overlay coordinate space repulsion model tokens analogous forces charged particles 
token represents supernodes moves overlay forces exerted tokens 
equilibrium reached node holding token selected supernode 
initial token placement 
initiator sends tokens random peers overlay 
peer receive token 
peer receives token potential supernode 
initiator distribute tokens ask neighbors help distribute tokens 
token adjustment 
repulsion model adjust location tokens 
node receives token potential supernode start scoped gossiping session neighbors tell coordinates token holds 
gossiping message arrives potential supernode recalculate combined force vector nearby tokens 
magnitude combined exceeds threshold tr potential supernode pass token neighbor position closest direction combined repulsion vector 
illustrates repulsion model simple example nodes evenly distributed dimensional euclidean space 
potential supernodes node receives rf rb nodes respectively 
combination vector neighbors smallest angle rad smallest 
magnitude exceeds threshold pass token node new potential supernode 
finalization 
time token stays potential supernode exceeds time limit node mark status stable longer rf rad adjust token repulsion combined repulsion potential supernode non supernode 
popcorn repulsion protocol participate token migration 
popcorn tokens stabilized node holding token reports position pop initiator eventually ship code pop task location tokens 
heterogeneity threshold function tr node changed qualifications node supernode 
nodes qualified serve supernodes higher threshold values poorly qualified nodes lower thresholds 
unqualified node set threshold zero 
adaptiveness resilience 
token unique id nodes hold tokens gossip ids tokens 
loss token caused node leave failure noticed missing heartbeat messages token 
neighbor tokens decide replace missing token generating token id identical missing token 
place new token reported location missing token popcorn protocol adjust location new token repulsion forces 
alternatively node discovers loss token report initiator decide needs inject new token 
load balance 
threshold function popcorn protocol creative ways example meet load balancing criteria 
order tokens stay high density regions overlay potential supernode query neighbors gather local information number nearby nodes 
information potential supernode detects high density region set higher threshold overcome token move 
similarly potential supernodes lower density regions set lower threshold pass tokens nodes 
popcorn designed part cluster computing fly project peer peer cycle sharing harnessing idle cycles internet 
popcorn places tasks collectively form distributed point presence pop application cycle sharing overlay network 
pop applications typically low cpu moderate communication requirements 
examples include security monitors internet measurement monitors distributed protocol testing 
compared volunteer systems neti home popcorn better satisfy distribution criteria place tasks evenly overlay 

supernode selection protocol unstructured overlay networks hierarchical level overlay protocol supernode selection distributed negotiation protocol unstructured overlay networks 
essentially scalable protocol multiple colored domination addresses supernode selection requirements access load balance fault tolerance dynamic heterogeneous environment security issues 
uses classic advertisement protocol supernodes advertise supernode information non supernodes cache advertisements 
choose join best supernode locally cached information 
protocol gives full autonomy supernodes non supernodes allowing negotiate local policy 
similar ways gnutella protocol allows finer grained control supernode selection process consider trust secure paths routing performance 
supernode advertisement 
node capable serving supernode advertises neighbors certain scope 
advertisement includes information qualifications supernode trust level uptime bandwidth neighborhood size 
advertisement propagated certain number hops set individual supernode carries route travelled ordered list overlay nodes visited 
information non supernodes part selection criteria 
node receives advertisement message caches advertisement potential supernode local cache 
supernode search 
new node want find supernodes consults local cache supernode candidates 
suitable candidates cache queries immediate neighbors 
contacted neighbor supernode replies requestor qualifications 
contacted neighbor supernode replies entries local cache requestor cache new responses 
requestor chooses best candidate criteria applies candidate supernodes 
contacted supernodes confirm reject requests 
requestor hear time interval satisfied current supernodes choices qualified declare supernode advertisement protocol join overlay node wait random amount time try 
currently create level hierarchy communication security monitors sequoia collaborative security monitoring system 
supernodes form overlay network utilized backbone fast secure information dissemination 
nodes hold security certificate obtained central authority eligible supernodes 
non supernode check trust level information certificate supernode 
non supernode choose supernode trust routing criteria evaluating trust level nodes path potential supernode 
fault tolerance non supernode connect supernodes verifying connections supernodes traverse disjoint paths 
latency criteria considered 
support threshold cryptographic techniques secret sharing certify public keys 
threshold scheme distributes partial signatures parties way parties authenticate infeasible subset parties 
selects subset nodes network act certificate authorities cas ordinary node hop access cas colored domination problem 
discussion challenge supernode selection problem peer peer applications lies need fulfill dispersal access criteria way scalable highly adaptive fault tolerant respects local node autonomy 
furthermore supernode selection protocols cope unknown large scale dynamically changing heterogeneous network 
described supernode selection protocols deal challenges unique ways 
sole protocol structured lays capitalizes supernode label expression efficiently encode identity supernodes distances supernodes 
asynchronous distributed protocols popcorn maximally flexible provide local control supernode selection criteria 
easily tailored wide variety applications 
carefully designed minimize message passing overhead converge reasonably stable set supernodes 
open problems supernode selection problem 
algorithm protocol development 
need fully distributed algorithms underlying graph theoretic dominating set centers operating dynamic conditions 
addition protocols emphasize specific distribution criteria tailored classes applications need developed 
bridging gap algorithms practical protocols challenging 
performance analysis 
measuring performance supernode selection protocol hard problem large dynamic network 
metrics workloads benchmarks peer peer computing need assembled evaluate compare supernode selection protocols dynamic large scale networks 
clear metrics best capture dispersal access proportion load balance 
security 
clearly wide range questions related secure supernode selection remain open 
include dealing denial service attacks supernodes detect malicious supernodes 
believe integrated approach supernode selection problem built strong graph theoretic foundations guided realistic applications yield benefits field peer peer computing 
dabek cox kaashoek morris 
vivaldi decentralized network coordinate system 
sigcomm 
das bharghavan 
routing ad hoc networks minimum connected dominating sets 
icc pages 
estrin govindan heidemann kumar 
century challenges scalable coordination sensor networks 
mobicom 
ferreira jagannathan 
enhancing locality structured peer peer networks 

francis jamin paxson zhang jin 
architecture global internet host distance estimation service 
infocom 
gnutella protocol development 
www 
org 
handler 
location networks theory algorithms 
mit press 
haynes slater 
fundamentals domination graphs 

kang zhou rao li lo 
sequoia robust communication architecture collaborative security monitoring systems 
poster session sig comm 
karlsson mahalingam xu 
turning heterogeneity advantage overlay routing 

kazaa www kazaa com 
lo zappala zhou liu zhao 
cluster computing fly scheduling idle cycles internet 
iptps 
lynch 
distributed algorithms 
morgan kaufmann san francisco 
ng zhang 
predicting internet network distance coordinates approaches 
infocom 
paxson 
routing behavior internet 
sigcomm conference applications technologies architectures protocols computer communications 
ratnasamy francis handley karp shenker 
scalable content addressable network 
sigcomm 
ratnasamy handley karp shenker 
topologically aware overlay construction server selection 
infocom 
rowstron druschel 
pastry scalable decentralized object location routing large scale peerto peer systems 
proc 
th ifip acm int conf 
distributed systems platforms nov 
simpson jr riley 
neti home distributed approach collecting network performance measurements 
th passive active measurement workshop apr 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm san ca aug 
vazirani 
approximation methods 
springer verlag 
wan frieder 
distributed construction connected dominating set wireless ad hoc networks 
mob 
netw 
appl 
wu dai gao stojmenovic 
calculating power aware connected dominating sets efficient routing ad hoc wireless networks 
journal communications networks march 
zhou lo 
cluster computing fly cycle sharing peer peer system 
proceedings th international workshop global computing gp pc 
