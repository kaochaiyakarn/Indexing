online proof producing decision procedure mixed integer linear arithmetic sergey vijay ganesh david dill stanford university dill stanford edu 
efficient decision procedures arithmetic play important role formal verification 
practical examples arithmetic constraints mixed constraints theories theory arrays boolean satisfiability sat bit vectors decision procedures arithmetic especially useful combination decision procedures 
framework combination implemented stanford tool called cooperating validity checker cvc 
augments cvc decision procedure theory mixed integer linear arithmetic omega test pug extended online proof producing :10.1.1.36.9420
extensions important challenging part necessary combination efficient practice 
formal verification methods benefit greatly efficient automatic decision procedures 
ample research developing efficient decision procedures various satisfiability problems boolean satisfiability sat mss bit vectors ml linear integer real arithmetic practical examples constraints different theories mixed 
example uncommon see constraint belongs combined theory arithmetic arrays uninterpreted functions 
consequently need decision procedure combination theories 
combination methods nelson oppen shostak sho variants rs bds developed 
methods impose certain requirements individual decision procedures order achieve sound complete efficient combination 
satisfying requirements greatly improves usability individual decision procedures 
research supported contract sa jb nsf ccr nsf itr ccr 
content necessarily reflect position policy funding agencies government official endorsement inferred 
tools combine decision procedures cooperating validity checker cvc developed stanford 
framework cooperating decision procedures developed barrett bds turn nelson oppen shostak sho frameworks 
decision procedure framework responsible solving satisfiability problem particular theory interact directly theories 
current implementation involves decision procedures theory uninterpreted functions theory arrays theory datatypes theory linear arithmetic integers reals subject 
additionally boolean combinations constraints handled top level sat solver bds chaff 
cvc serves decision procedure quantifier free order theory equality arrays recursive datatypes linear arithmetic bds 
combination methods cvc imposes certain requirements individual decision procedures 
particular decision procedure online proof producing 
online means new constraint added set existing constraints time algorithm able take account incremental amount 
set constraints determined unsatisfiable algorithm produce proof fact 
additionally theory linear arithmetic extended predicate int evaluates true real valued arithmetic term evaluates integer 
decision procedure able handle constraints form int int addition usual linear arithmetic constraints 
reasons requirements better understood architecture cvc 
high level cvc viewed sat solver dp solves satisfiability problem boolean skeleton order formulas 
time sat solver decision new constraint submitted appropriate decision procedure 
decisions dynamic decision procedures able receive new constraint process efficiently online requirement 
modern sat solvers ss mss conflict clauses intelligent backtracking enhance performance 
backtracking implies solver may retract constraints dynamically decision procedure support operation 
implementation point view means internal data structures decision procedure backtrackable 
construct conflict clause needs identify decisions sat solver lead contradiction 
cvc identifies decisions extracting proof decision procedure constructs derives contradiction 
explains need proof production decision procedures cvc 
bonus proofs checked external proof checker stu increase confidence results produced cvc 
addition cvc tools combine online proof producing decision procedures 
similar cvc touchstone tool nl developed berkeley 
particular simplex arithmetic procedure real arithmetic 
describes decision procedure mixed integer linear arithmetic designed meet requirements fit cvc framework 
decision procedure existing algorithm called omega test pug extended online proof producing handle int predicate :10.1.1.36.9420
additionally implementation supports arbitrary precision arithmetic gmp library gmp 
arbitrary precision arithmetic crucial solving sizable systems mixed integer constraints fourier motzkin approach variable elimination may produce large coefficients coefficients original input relatively small 
choice omega test algorithms solving mixed integer linear arithmetic problems simplex interior point method bt earlier versions elimination wil driven simplicity practical efficiency large class verification problems 
particular proof production relatively easy implement omega test 
rest organized follows 
sections review original fourier motzkin elimination method real variables extension integers omega test respectively 
versions redesigned algorithm online described sections 
section gives brief overview cvc 
proof production described section conclude section 
fourier motzkin elimination inequalities real variables problem 
system linear inequality constraints real valued variables form rational constants determine system satisfiable 
consider strict inequalities handled similarly 
simplicity assume expanded solved case disjunction 
rest linear arithmetic terms denoted possibly subscripts 
section consider equalities equality solved variable instantiated constraints obtaining equivalent system equality 
terminology 
sake terminological clarity say variable eliminated equality constraint solved variable result substituted remaining constraints 
fourier motzkin reasoning inequalities applied variable say variable projected 
assume constants coefficients rational 
refer variables real valued known conditions system linear constraints satisfiable reals satisfiable rationals 
intuitively fourier motzkin elimination procedure de iteratively projects variable rewriting system inequalities new system solution original system solution systems 
process repeats variables left point constraints inequalities numerical constants directly checked satisfiability 
formally projection procedure 
pick variable inequality say xn inequalities containing variable rewritten form xn xn depending sign coefficient xn occur creates types constraints right left xn 
xn xn 
xn 
system constraints solution xn satisfy max xn min real numbers dense xn exists constraint holds max min constraint equivalently rewritten system linear inequalities 
call shadow constraints define dimensional shadow dimensional shape defined original constraints 
shadow constraints combined comprise new system constraints contain variable xn process repeated xn variables projected 
observe system constraints elimination step may produce new system constraints 
eliminating variables may worst case create system 
constraints 
decision procedure linear inequalities fourier motzkin case real variables doubly exponential worst case complexity number variables 
extension fourier motzkin elimination integer variables omega test version extension largely omega approach pug differences :10.1.1.36.9420
consider system mixed integer linear constraints addition linear equalities strict inequalities may contain int int linear term meaning linear term restricted integer respectively fractional values 
term variable constraint int satisfiable iff int satisfiable new variable 
furthermore int satisfiable term iff int satisfiable new variable system mixed integer linear constraints may converted system constraints equalities inequalities predicates form int variable 
elimination equalities case reals equalities eliminated 
equality contains variable integer solve equality variable eliminate system 
efficient way reducing dimensionality problem equalities eliminated 
suppose equality contains integer variables variable elimination algorithm omega test pug :10.1.1.36.9420
variable value satisfy equality constraint 
value integral substitute system unsatisfiable 
variable equality normalized coefficients free constant relatively prime integers 
done coefficients rational numbers 
normalization variable coefficient ja simply solve eliminate rest system 
pick variable coefficient smallest absolute value define ja 
define modulus operation range follows important properties mod sign distributes addition multiplication sign respectively 
step choose new variable introduce new constraints system int second constraint derivable applying 
sides propagating mod addition multiplication coefficients 
system remains original 
sign equation solved eliminated system sign fkg sign sign substituting result original equation facts ja definition mod obtain ja fkg 
new system original system eliminated rewritten contains number variables original 
new coefficients guaranteed decrease absolute value compared ja ja coefficient remains large ensures repeating process eventually result equality having variable coefficient 
variable eliminated reducing dimensionality 
projecting variables inequalities eliminating equalities left system strict inequalities real integer variables 
similar equality case remaining real variables projected standard fourier motzkin elimination procedure resulting system inequalities integer variables 
point inequalities normalized coefficients relatively prime integers variable xn chosen projection 
xn additional integral constraint simply divide inequality coefficient general system inequalities rewritten equivalent form coefficients xn preserved xn 
xn xn 
xn 
coefficients positive integers 
similar original construction pair inequalities equivalent real shadow constraint constructed real shadow necessary sufficient condition satisfiability integer value real 
addition real shadow point ab 
exist integer sufficient necessary condition demand gap ab wide ab constraint called dark shadow constraint object thick contain integer point casts darker shadow term dark shadow pug :10.1.1.36.9420
dark shadow constraint sufficient necessary integer solution xn exist 
equation system unsatisfiable look integer solution outside gray shadow ab 
construction omega test pug right hand side replaced larger ab dividing result yields means integer solution xn satisfy contains integer variables integer coefficients :10.1.1.36.9420
try succession solution 
words gray shadow constraint obviously expensive step algorithm involves lot backtracking pug dark shadow constraint suffices practice gray shadow empty :10.1.1.36.9420
practical heuristic dark shadow constraint tried fails solution searched gray shadow online version fourier motzkin reals cvc decision procedures effective online constraints fed decision procedure time constraint algorithm performs relatively small amount take constraint account derive new constraints follow 
order understand reasons online clarify important interface features decision procedure relies give brief cvc framework 
goal subsection provide just information interface underlying structure cvc framework understand requirements online version decision procedure mixed integer linear arithmetic 
features greatly simplified omitted 
details cvc framework reader referred bds bds bds 
brief cvc framework high level cvc viewed sat solver boolean skeleton quantifier free order formulas 
sat solver treats atomic constraints different theories boolean variables 
solves satisfiability problem splitting cases variable picking variable assigning values true false making decision solving rest formula case recursively 
finds satisfying assignment variables original formula satisfiable 
particular set decisions results contradiction sat solver backtracks tries different decision 
branches derives contradiction formula unsatisfiable 
boolean variables represent constraints various theories time sat solver decision new constraint produced simplified dispatched appropriate decision procedure 
decision procedure receives constraint derives new constraints current previously seen constraints asserts back sat solver 
contradiction detected decision procedure asserts false new constraint 
note new constraints may contain arbitrary boolean combinations atomic formulas decision procedure receives atomic constraints equalities theory specific predicates terms 
words decision procedure assume solves satisfiability problem conjunction atomic constraints 
allowed infer boolean combinations new constraints input set constraints 
decisions dynamic requires decision procedures able receive new constraint process efficiently deriving contradiction soon possible cut search early 
explains online requirement 
cases simplified constraint may returned directly sat solver going decision procedure 
sat solver backtracks constraints effectively removed 
decision procedure stores information previously received constraints able roll back appropriate state sat solver backtracks 
words data structures persist calls decision procedure backtrackable 
description algorithm assume backtracking mechanism properly implemented completely transparent decision procedure 
boost efficiency sat solver dispatcher simplifier procedure decision procedure decision procedure decision sat solver new derived constraints formulas original formula atomic constraints simplified constraints fig 

flow constraints cvc intelligent backtracking technique utilized conflict clauses mss 
construct conflict clause needs identify preferably small set decisions sat solver lead contradiction 
way identifying decisions extract proof decision procedure constructs derives false 
explains need proof production cvc decision procedures 
bonus proofs checked external proof checker stu increase confidence results produced cvc 
note intelligent backtracking requires set assumptions sat solver decisions proof depend specific proof rules 
set computed simply traversing proof tree leaves collecting assumptions 
online fourier motzkin elimination reals subsequent sections term decision procedure refer decision procedure component 
particular assume constraints dispatched decision procedure atomic boolean connectives simplified 
simplification step consists theory specific rewrites normalization arithmetic constraints elimination equalities normalized inequality constraints reach decision procedure 
description algorithm consists parts simplifier set equivalent transformations decision procedure 
function takes simplified atomic constraint returns possibly boolean combination new constraints back framework 
algorithm assume total ordering variables defines order variables projected inequalities 
particular said maximal variable set variables highest set section consider equalities inequalities real valued variables 
handling constraints int predicate integer variables described section 
simplification step 
equality constraint rewritten simplified grouping terms 
resulting equality contains variables meaning simplifies numerical constant checked satisfiability result reported directly top level sat solver 
rewritten form variable replaced system completely eliminating variable similarly inequality rewritten simplified 
left hand side simplifies constant inequality evaluated true false submitted back solver 
rewritten maximum variable forwarded decision procedure 
decision procedure 
due simplification step decision procedure receives inequalities form maximal variable say variable inequalities isolated 
decision procedure maintains backtrackable database db inequalities indexed isolated variable 
new inequality arrives database searched opposite inequalities inequality new shadow constraint constructed asserted back framework 
received constraint added database 
inequalities form handled similarly 
newly generated constraint eventually simplified submitted back decision procedure smaller variable isolated process repeats variables remain constraint 
ordering variables guarantees intermediate constraints constructed offline version procedure eventually constructed processed online version provided algorithms project variables ordering 
assuming original offline version elimination complete terminating implies online procedure complete terminating 
formulate completeness part statement precisely lemma 
lemma 
local completeness 
fc set linear arithmetic inequalities real valued variables xn total ordering variables 
set constraints constructed offline algorithm solving original set constraints constraint constructed online algorithm regardless order original constraints submitted online algorithm 
proof reader referred technical report version 
online fourier motzkin elimination mixed integer constraints online version decision procedure integers direct correspondence offline version order projection variables depends integrality constraints int int variable may known integer projected eliminated 
naive solution backtrack redo projection elimination steps 
costly operation 
fortunately simple elegant solution problem 
constraint int arrives new constraint added system new integer variable fact int recorded local database db int indexed 
resulting system original includes int variable remains real valued new system 
projections eliminations redone 
time integrality enforced integrality 
addition integer constraint int db int term rewritten variable elimination simplifies constant term check integer assert unsatisfiability 
just algorithm real variables online algorithm deciding mixed integer linear constraints consists parts simplification decision procedure 
simplification step 
version simplifier performs transformations real variables section 
equality constraint rewritten checked constant 
constraint immediately checked satisfiability result returned directly sat solver 
contains real valued variables variable isolated eliminated 
integer variables remain iterative equality elimination algorithm performed described section 
process equality rewritten system equations 
equation corresponds equation section iteration algorithm 
variables eliminated replacing right hand sides 
equations handled simplification step submitted actual decision procedure 
inequalities transformed simplified evaluated constant 
contains variables inequality rewritten form ax positive integer coefficient variable maximal new inequality forwarded decision procedure 
similar offline version algorithm important project real variables 
define real valued variables higher ordering integer ones 
constraints form int int term simplified combining terms constraints passed decision procedure unmodified 
decision procedure observe due simplification step inequalities form ax integer constraints int int submitted decision procedure 
notice inequality constraints maximal variable isolated inequalities stored local database db additionally term constraint int db int rewritten simplifier int automatically replaced int db int local databases backtrackable 
decision procedure receives constraint simplifier returns asserts new constraints back framework 
describe case case analysis constraint 
int constant evaluate int assert result framework return 
constant go step 
db int create new integer variable add db int assert new facts int db int ignore return 

int introduce new integer variable add db int assert new constraints int experiments formulas vars cvc omega avg 
slow suite experiment completed completed factor table 
experimental comparisons cvc vs omega suites randomly generated examples 
cvc generally slower omega approximately factor 
experiment completed tool terminates correct answer minutes 



find inequalities form 
respectively 
database db inequality perform steps generate assert real shadow constraint 
ii 
db int case variables db int generate integrality constraint dark gray shadows defined section 

ab 
heuristic pugh pug top level sat solver search solution trying :10.1.1.36.9420
add received constraint db return 
hard see step algorithm corresponds closely similar steps offline version algorithm 
soundness completeness procedure follow fact set constraints asserted decision procedure step constraint details formal proof including termination technical report 
experiments summarized table indicate time overhead cvc framework arbitrary precision arithmetic slow algorithm constant factor 
implementation tuned efficiency exceptional cases cvc performs worse omega explains large slow factor second line table 
specifically exceptionally slow examples second suite slowest takes seconds slowdown due large cvc framework overhead lack optimizations 
case reasonable price pay having arithmetic decision procedure combined theories cvc practical applications arithmetic problems small bottleneck verification 
additionally resulting implementation proves stable original omega test produces proofs 
proof production algorithm section reports system constraints unsatisfiable produces proof fact verified independently external proof checker 
increases confidence soundness implementation 
additionally proof production mechanism allows cvc framework extract logical dependencies drive backtracking mechanism built sat solver see section 
details scope intuitively proof unsatisfiability depends small subset decisions sat solver sat solver memorizes combination decisions avoids 
dramatically reduce size decision tree 
due page limit proof rules version 
complete description proof system reader referred technical report 
natural deduction proofs represented derivations natural deduction extended arithmetic specialized derived admissible rules 
algorithm maintains invariant constraint appearing algorithm associated proof 
online decision procedure set relatively simple transformations natural provide specialized proof rule transformation 
specialized rules proven sound externally manual inspection help automated theorem provers 
definitions 
inference rule proof rule general form 
pn 
sm rule name formulas premisses assumed proofs side conditions rule applicable true formula rule 
semantics proof rule valid valid provided side conditions true 
cvc dual semantics unsatisfiable system constraints fp pn unsatisfiable provided side conditions hold 
recall algorithm consists parts simplifier performs equivalent transformations decision procedure derives new constraints existing ones 
rules equivalent transformations simplifier special form 
sm arithmetic terms constraints side conditions premisses 
rules decision procedure steps normally premisses constraints submitted decision procedure 
proof rules equivalent transformations normalization 
simplifier step normalizes constraints making coefficients relatively prime integers done multiplying constraint constant 
corresponding proof rules state multiplying equality positive number preserves constraint 
rule inequality shown 



norm variable elimination equalities 
equality pick variable isolate transform constraint way variable positive coefficient solely side rest term 
equalities isolated variable left hand side 
inequalities depends sign coefficient positive variable stays left hand side terms moved right hand side variable isolated right hand side 
show proof rule equality positive coefficient 
rules equality negative coefficient cases inequalities similar 


fig 
vi rule solving constraint isolated variable 
eq elim variable real valued eliminated system replaced rules integer variable elimination complex similar spirit omitted version 
proof rules inequalities proof rules section derive new constraints existing ones 
types rules correspond actual fourier motzkin projection variables inequalities 
real shadow 
deriving real shadow opposing constraints simple obvious proof rule 


real shadow rules introducing dark gray shadows follow style real shadow rule 
simplified form rule follows 

int int shadows contain integer variables formulas defined algorithm section 
complete set rules described full version 
rules thought practical axiomatization linear arithmetic step decision procedure corresponding proof rule justifying step 
presents theory implementation detail online proof producing decision procedure theory mixed integer linear arithmetic extended int predicate 
additionally decision procedure supports arbitrary precision arithmetic 
decision procedure useful research community combined decision procedures 
designing stand decision procedure step design process 
difficult task enhance algorithm additional properties enable communicate decision procedures 
decision procedure online proof producing support backtracking 
experience conceptually difficult online property 
just adapting original omega test online algorithm required significant efforts implementation 
proof production difficult problem design process 
easily hardest cvc thoroughly worked methodology adding proof production existing decision procedures 
implementation especially debugging proof production presents challenge 
backtracking relatively easy design implement context cvc framework provides necessary data structures 
algorithm largely omega test performance comparable original implementation omega test 
overhead cvc framework additional requirements decision procedure slow factor 
reasonable price pay having arithmetic decision procedure combined powerful decision procedures cvc 
reimplementation adds arbitrary precision arithmetic generally stable omega library code 
arbitrary precision arithmetic crucial solving sizable systems mixed integer constraints fourier motzkin approach repeatedly generating shadow constraints produces large coefficients coefficients original input relatively small 

authors principal developers cvc aaron stump clark barrett insightful discussions theory implementation decision procedure 
bds barrett dill stump 
framework cooperating decision procedures 
david mcallester editor th international conference computer aided deduction volume lnai pages 
springer verlag 
bds barrett dill stump 
generalization shostak method combining decision procedures 
th international workshop frontiers combining systems 
bds barrett dill stump 
checking satisfiability order formulas incremental translation sat 
th international conference computeraided verification 
sergey vijay ganesh david dill 
online proof producing decision procedure mixed integer linear arithmetic 
unpublished manuscript 
url www cs cmu edu publications html 
bt dimitris bertsimas john tsitsiklis 
linear optimization 
athena scientific belmont massachusetts 
de george dantzig curtis 
fourier motzkin elimination dual 
journal combinatorial theory 
dp martin davis hilary putnam 
computing procedure quantification theory 
journal acm july 
gmp gmp library arbitrary precision arithmetic 
url com gmp 
moskewicz madigan zhang malik 
chaff engineering efficient sat solver 
th design automation conference 
ml oliver mller 
solving bit vector equations decision procedure hardware verification 
diploma thesis available www informatik 
uni ulm de ki bitvector 
mss marques silva sakallah 
grasp search algorithm propositional satisfiability 
ieee transactions computers 
nl george necula peter lee 
proof generation touchstone theorem prover 
david mcallester editor th international conference computer aided deduction volume lecture notes artificial intelligence 
springer verlag june 
pittsburgh pennsylvania 
nelson oppen 
simplification cooperating decision procedures 
acm transactions programming languages systems 
pug william pugh :10.1.1.36.9420
omega test fast practical integer programming algorithm dependence analysis 
supercomputing pages 
rs shankar 
deconstructing shostak 
th ieee symposium logic computer science 
stump barrett dill 
cvc cooperating validity checker 
th international conference computer aided verification 
stump barrett dill levitt 
decision procedure extensional theory arrays 
th ieee symposium logic computer science pages 
ieee computer society 
sho shostak 
deciding combinations theories 
journal association computing machinery 
ss silva sakallah 
grasp new search algorithm satisfiability 
proceedings acm ieee international conference computer aided design pages 
stu stump 
checking validities proofs cvc flea 
phd thesis stanford university 
preparation check verify stanford edu stump draft 
wil williams 
fourier motzkin elimination extension integer programming problems 
journal combinatorial theory 
