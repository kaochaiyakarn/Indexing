general approach modeling actions change cooperating agents scenarios jochen 
ute sigmund 
karel 
risc linz austria th darmstadt germany 
ultimate aim find semantics reasoning actions change cooperating agent scenarios concept called logical fiberings 
step direction describe small non trivial agent robotics scenario different methods viz 
resource oriented deductive planning mathematical framework logical fiberings 
means scenario methods illustrated compared correspondences basic notions methods clarified 
fiberings method useful modeling communication interaction cooperating agents due possibility switch local global point view inherent framework 
formulate generic modeling principle notion 
furthermore possible extensions framework formulas depending space time discussed 
objective provide semantics reasoning actions change particular resource oriented disjunctive planning scenarios autonomous agents supposed cooperate 
purpose propose framework logical fiberings concept transferred classical fiber bundle sheaf theory 
logical fiberings prove particularly suitable modeling communication interaction cooperating agents due possibility switch local global point view typical framework 
shown useful general semantical framework combining logics 
describing cooperating agents scenarios natural assumption agents involved individual representation world acts 
facts hold world individual interest 
modeling cooperation necessary describe communication agents identify represent possible correspondences objects facts agents refer individual representation 
show sample scenario concept logical fiberings risc uni linz ac ute intellektik informatik th darmstadt de risc uni linz ac 
second third authors supported esprit basic research action ii 
represent individual worlds technically modeled terms local state spaces model communication general control process 
scenario consisting cooperating robots solving assembly problem described 
features aspects practical relevance uncertainty possible reasons failure disjunctive postconditions actions corresponding non determinism 
technical details precise descriptions robot arm movements omitted order focus clarification basic problems involved 
describing scenario modeling approaches proposed method deductive planning cf 
method logical fiberings cf 

planning approach employs conditional planning robots sure cause mistakes resource oriented providing efficient representation facts situations simple solution frame problem 
description logical fiberings new attempt formalize cooperating agents scenarios uniform semantical notation 
proposing general modeling method call generic modeling approach 
scenario discuss essentially controlling problem underlying plan generated robots prescribed specification actions 
visible approaches generalized deal complicated robotics scenarios 
presenting article starting point larger program 
fix notions apply sample scenario 
refinements follow experience grows 
describe connection methods deductive planning logical fiberings 
instance shown actions pre postconditions correspond multivariate logical systems 
turns fiberings approach allows natural way dealing conflicting intentions robots cooperating agents 
explicitly model logical state space individual agent corresponding individual representation world 
state space formally terms corresponding fiber 
collection fibers forms global state space 
technical concepts local global sections allow natural switch perspective individual cooperative point view 
mathematical notion global section gives snapshot current state system 
various ways extend modeling approach 
space time dependent formulas issue briefly discuss 
referees suggesting include remarks concerning links huge field distributed ai 
aware distributed ai active area research general cooperating agents problem appears various disciplines 
experts distributed ai see links approach attempts model cooperating agents robotics scenario concentrating logical control planning issues 
unfortunately feel competent give brief comment latest state art mainstream research topics distributed ai sorry 
report talk author logical fiberings systems conference fair castle slovakia jozef kelemen discussed author 
question respect logical fiberings concept contribute mathematical foundations distributed ai 
conclude citing selected 
objectives program get closer contact activities natural links 
description scenario give informal description agent robotics scenario taken 
chapters scenario demonstrate resource oriented deductive planning method approach logical fiberings 
scenario consists cooperating robots carrying different actions 
order assemble workpieces different types composite ones res 
task robot take piece type type table table try assemble 
robot provide robot new pieces types move respective stores table 
assembling successful stores final product table res 
may happen assembly unsuccessful due faulty piece 
robot takes care removing faulty pieces storing temporary dump temp throwing garbage bin dump 
prescribed certain strategy process minimizes number pieces dismissed faulty 
strategy consists laying pieces temporary dump temp done robot replacing piece type working table task robot 
assembly successful time assumed piece laid apart faulty robot throws garbage bin dump 
assembly successful assumed piece type tried twice faulty 
dumped new piece type provided assembly carried piece laid apart temporarily temp tried cycle fresh piece type 
assembly unsuccessful piece tried times dumped robot piece lying temp taken back tried assembled second time new piece type 
success store res start 
failure pieces thrown away new start 
task carried robots cell supposed finished pieces left tables takes new pieces 
checked additional sensors instantiating control propositions empty empty 
formally representation modeling approaches scenario contains control propositions table table table res tried temp temp dump empty empty 
corresponding facts may may hold agents representations world 
possible actions robots denoted assemble store get get temp temp get temp dump dump dump temp empty dump 
generalize example insisting particular strategy model generation plan fiberings approach just control done 
sect 
discuss links deductive planning approach logical fiberings indicate fiberings approach extended plan generation 
planning control deductive resource oriented approach construction control execution robot plans modeled logic reasoning situations actions causality 
reason logic underlying concept logic appears play fundamental role intelligent behavior 
logic possible reason actions change causality reason planning control process intentions knowledge beliefs agents interactions dependencies actions goals hand deductive approaches planning control arise difficulties 
deductive planning situation state world certain instant time modeled collection facts believed hold situation 
important property facts truth values may change course time 
precisely action causes transition world situation subsequent situation 
subsequent situation facts held initial situation may longer hold 
side additional facts may caused action 
imagine situation workpieces table hand robot empty 
robot performs action picking result situation longer table longer empty 
facts removed description situation 
hand add fact hand holds straightforward classical logic practicable 
model change describe dependency facts situations logic mccarthy hayes proposed situation calculus :10.1.1.85.5082
situation calculus predicates functions additional argument representing situation predicate holds function applicable 
manipulating additional argument mccarthy hayes able reason change facts result application actions 
unfortunately solution associating particular situation truth value particular fact brings known technical frame problem formalize truth value facts affected action changed execution action 
example picking affect fact table 
requires state additional called frame axioms non monotonic logic common sense law inertia 
resource oriented approaches deductive planning efficient representation situations actions resource oriented deductive approaches 
approaches built key idea treat logic formulas resources produced consumed execution actions 
precisely situation corresponds multiset atomic facts 
facts consumed deleted multiset conditions action satisfied 
produced added multiset effects application action 
change facts caused application action modeled need state frame axioms explicitly 
deductive approaches planning proposed formalize idea resources 
linear connection method equational horn logic multiplicative fragment linear logic 
turned conjunctive planning problems approaches essentially equivalent 
examine resource oriented planning approach equational logic closely 
originally approach restricted conjunctive planning problems problems situations conditions effects actions restricted non idempotent conjunctions atomic facts 
possible describe transitions single situation single subsequent situation 
modeling realistic examples application action assembling workpieces may different alternative effects 
planning control usually deal variety alternative possibilities 
order able describe alternative situations conditional plans depending various alternatives resource oriented equational logic approach substantially enhanced introducing concept non determinism 
extension situations modeled multisets resources sets possible alternatives correspond sets situations sets multisets facts 
give short approach disjunctive resource oriented planning equational logic followed description extensions necessary model robotics scenario 
extensions overcome restrictions far allow planning control actions single agents reasoning interactions dependencies tasks carried cooperating robots 
basic features approach equational logic situations described single terms called situation terms binary function symbol ffi associative commutative admits unit element viz 
constant denoting empty situation 
function ffi connects various atomic facts hold situation represented elementary terms instance robotics scenario situation context concept linearity refers property logical calculi linear non idempotent connectives modeling restricted resources 
confused similarly named concepts planning linear plans linearity assumption 
elementary terms non variable terms contain function symbols workpiece type workpiece type temp empty dump described situation term table ffi table ffi empty temp ffi dump ffi interpreted conjunction contrast classical conjunction idempotent 
instance situation term table ffi table equal term table 
represents situation workpieces type table 
consequently situation terms adequately interpreted multisets facts 
able describe set alternative situations situation terms connected binary function symbol interpreted disjunction 
function associative commutative admits unit element 

addition idempotent zx holds instance set alternative situations assembling workpieces described disjunctive situation term table res table ffi table ffi tried regard facts resources term form having resources resources natural require ffi distributes law distributivity ffi ffi ffi holds actions described specifying preconditions effects disjunctive situation terms ternary predicate action 
instance specification action picking block performed robots scenario described clause action table ffi empty hand pick holding hand action applicable conditions action part description current situation 
application action yields subsequent situation conditions replaced effects action 
causation specified ternary predicate causes interpreted declaratively execution sequence actions causes transformation situation situation clauses describe planning control process 
clause states empty sequence actions changes 
serves termination clause conjunctive planning problems causes goal situation contains alternatives clause causes ffi constants 
chapter prolog syntax constants predicates represented lower case letters variables denoted upper case letters 
free variables assumed universally quantified 
reader invited observe distribute ffi contradicts intended interpretation 
states disjunctive goal solved current situation alternatives described goal situation addition may need third termination rule viz 
causes gamma causes causes states problem solved solved alternative separately 
clause causes action ffi causes ffi defines entailment predicate causes non empty list actions 
predicate denotes equality equational theory operators ffi sequence actions causes transition initial situation goal situation conditions satisfied 
action conditions action part description initial situation variable body bound initial situation conditions addition sequence actions transforms subsequent situation viz 
effects action goal situation facts current situation part conditions action bound variable remain unchanged 
way frame problem solved need frame axioms 
modeling scenario model general controller cooperating robots extend deductive planning approach described way 
example robot able perform actions label action names name robots execute 
furthermore sake simplicity allow action descriptions specify single actions sequences actions performed successively 
properties mind give formal description robotics scenario 
starting situation piece type table piece temp piece type robot perform action get 
piece type table 
described action ffi get table ffi table ffi temp ffi 
order model conditions workpieces type table temp corresponding literals added body clause 
efficient ac aci unification procedure planning problems 
denote equality equational theory functions ffi denotes negation failure 
brief discussion resolution 
similarly action get robot described clause action ffi get table ffi table ffi temp ffi 
workpieces type type available table robot tried assemble robot execute action assemble 
pieces type disappeared product type res table pieces result produced 
addition know robot tried assemble action table ffi table ffi assemble table res table ffi table ffi tried ffi tried ffi 
mentioned result action described disjunction alternative situations 
order model condition robot tried assemble workpieces corresponding literal added body clause 
assembling workpieces successful robot store result res res 
temp dump cleared robot piece temp going back table tried 
stated facts action table res ffi temp ffi dump ffi store get temp empty dump res res ffi table ffi 
dump piece temp faulty necessary clear temp action table res ffi temp ffi store dump temp empty dump res res ffi 
variable bound constant sufficient define clause describe actions 
assembling workpieces successful faults necessary store res action table res ffi store res res ffi 
problem description situation applicable applicable multisets conditions multiset conditions 
force situation specific action action largest multiset pre conditions conditions sub multiset equational theory ac function ffi theory aci function law distributivity 
multiset facts describes current situation 
solution problem 
assembling workpieces successful workpiece temp dump robot transport piece type piece type temp 
described clauses action table ffi table ffi tried ffi temp table ffi temp ffi temp ffi dump ffi 
action table ffi table ffi tried ffi temp table ffi temp ffi temp ffi dump ffi 
contrast clauses clauses specific 
control process arbitrarily choose 
section see reflected fiberings approach disjunction truth table 
assembly task failed workpiece type temp dump workpiece type tried twice 
robot transport table dump 
stated fact action table ffi table ffi tried ffi temp ffi dump table ffi temp ffi dump ffi 
similar action dump described fact action table ffi table ffi tried ffi temp ffi dump table ffi temp ffi dump ffi 
assembly task failed workpiece type temp dump workpiece type table tried twice 
robot transport table dump get piece type temp action tried ffi dump ffi table ffi temp ffi dump get temp table ffi dump ffi 
analogously define action tried ffi dump ffi table ffi temp ffi dump get temp table ffi dump ffi 
assembly task failed dump workpiece temp pieces tried twice 
consequently workpieces table dumped dump cleared action table ffi table ffi tried ffi dump ffi dump dump empty dump temp ffi 
planning process triggered formulating planning problem query equational program 
searching plan execution transforms initial situation workpieces type instance stack workpieces type instance stack stack res table dump temp empty goal situation stacks empty causes ffi empty empty ffi goal connected variable reasons 
want terminate assembly process stacks empty 
final situation may hold facts specified 
corresponding terms bound variable queries planning program answered resolution equational theory operators ffi built special unification procedure 
assembling workpieces may result different alternative situations take care fact goals achieved matter alternatives occur checked sensors solve problem alternatives 
done splitting set situations rule causes cond causes causes term cond conditional read sensor observes plan solves problem sensor observes plan solves problem 
noted splitting action general rule added equational logic program allow alternative sub plans 
planning problem described special far reachable situation risk choose action lead success process 
necessary construct plan advance execute 
control process realized planning process application action description formalism correspond step performed robots directly 
point approach described general restricted way 
far described general controller coordinates actions robots simultaneously 
want model autonomous controller robot separately take care actions robots synchronized 
example done communication shared variables parallel logic programming languages concurrent prolog 
robots instance take control assembly process sending commands robots finishing tasks reply confirmation 
obviously lead completely different description actions situations change 
see chapter abbreviation denote situation term consisting facts connected function ffi case model scenario logical fiberings approach 
technical concepts local global sections allow natural switch perspective individual cooperative point view representation 
logical fiberings generic modeling principle section propose model scenario different way notion called logical fiberings concept adopted powerful theory fiber bundles sheaves geometry topology 
establish general notions notations fiber spaces give motivational comments 
point fact indexed system described 
considerations fix notion logical 
formulate call generic modeling principle fiberings 
preparations sample scenario modeled 
comparison approach previous 
going technical details fiberings non formal comments remarks subject 
concept logical fiberings originates 
time industry author extraordinary experiences non classical logics case study dealing called logics 
organize project industrial usual 
turned hard assessment logics useful modeling engineering problems 
feasible descriptive non formal level showed interesting new aspects integrates classical logical subsystems valued system locally remains classical valued 
main objective logical tools usable formal modeling complex communication systems 
overcome personal problems understanding notions formalisms written material logics started model systems different way 
listening experts speaking logics reminded concept fiber spaces 
fiber bundles sheaves especially vector bundles widely geometry topology mathematical physics provide language considerable expressive power mix algebraic geometric topological structures concept local global interaction 
vector bundles example typical vertically fibers doing algebra horizontally geometry topology 
led idea introducing logical fiberings concept fiber bundles combine logical spaces fibers put base manifold acts index set particular structure 
point base space sits resides fiber interpreted local state space point agent 
base space structure impacts structure system obtain just sum single components 
hand blown model base space base point attach entire state space corresponding fiber 
formal concept suitable put local information structure resulting new richer structure lying parameterized original base space including communication fibers dependent base space structure 
point view typical theory fiber bundles sheaves 
consider category theory linguistic formal background see links basic formalism topos theory indexed categories 
mathematical concept sheaf plays extraordinary unifying role context fiberings sheaves basic notions provide framework general semantics cf 
program direction sketched 
sheaf theory originally comes algebraic geometry topology intention preserve possible expressive power language logical fiberings 
turned approach logics described special class logical fiberings 
mention written thorough treatment material logics published leading person field rudolf jointly thomas mahler cf 

project major goals deal logics various types mix unifying framework 
general approach doing gabbay extensive labelled deductive systems lds selected mention 
interesting discussion dov gabbay subject showed great interest fiberings discovered natural links theory lds concept logical fiberings 
proposed consider logical fiberings semantical models lds introduced notion semantics 
concept fiber spaces great generality 
material literature showing fiberings provide powerful tool formal language local global relations objects data expressible mentioned 
author applied concept solve open problems category geometric spaces cf 

especially concept geometric having doubled fibers applied solve certain problem 
shall hint fact great interest consider fiberings fibers certain fiberings 
remarks want underline fiberings concept recursive selfsimilar highly reusable 
means single fiber structure 
want go technical details 
speaking categories assume categories small object morphism classes sets 
consider set mutually disjoint sets fe jb bg serves base space index set 
think sitting index set pointwise 
defining fxj disjoint union straightforward define projection map exactly define way elements mapped preimages gamma fbg fxj bg sets called fibers members called structure called bundle sets base space set stalk space total space bundle 
notions originally developed geometry topology 
remaining properties concerning structure group condition 
cf 
literature formulated analogously discuss 
refer bundles fiberings triple 
disjoint union coproduct categorical terms denoted construction general 
sets taken kind space 
instance just category topological spaces sets 
projection map respects corresponding structure spaces example continuous map category topological spaces 
point index system indexed family spaces type interpreted structure bundle 
pointed taylor pp 
ff consistency problems forming families sets respect indexing set avoided interpret indexed system terms category sets canonical projection called display map sense total space coproduct disjoint union defines projection map base space gamma set elements mapped exactly fiber advantage fiber space notion close geometry topology evolved 
particular general concept fiberings gives freedom mix different structures spaces different types particular fibers corresponding index system base space 
basic importance looks unifying mathematical framework modeling complex interacting heterogenous structures 
essential feature general modeling approach fiberings stress reusability 
summarize generic way intend apply fiberings approach 
base space system index system structure graph net geometric topological structure 
element base space local state space fiber attached 
fibers put form total space respecting reflecting base space structure 
concrete cases natural cover base space certain subsets patches model independently call local sub fiberings comparatively simple structure 
patchwork put obtain system 
seen modularized modeling approach 
typical technique fiber bundles covering sets base space corresponding locally trivial bundles suitable transition relations overlap intersecting covering sets respectively describe system modularized fashion 
point typical feature fiberings modeling principle recursive 
means single fiber structure 
pointed mixing fibers different types naturally modeled 
relevance mixing logics cf 
logical fiberings 
generic modeling approach applied various concrete problems 
principle resort specify corresponding parameters base space fibers total space covering patches concrete situation point suitable heuristics come game 
sense modeling principle strongly reusable great interest respect potential implementations method 
auxiliary notions introduce important auxiliary notions theory fiberings apply modeling scenario 
definitions details need applications 
find convenient include technicality concerning fiberings concept 
global section oe map ffi oe id oe gamma 
ae denote subset local section map oe ffi oe id covering base space consists family fu subsets covered means set union equals note local sections play dominant role theory sheaves fiber bundles 
application correspond descriptions situation state scenario seen particular robot cooperating agent group agents local section snapshot part current state 
logical tuple total space base space taken equal indexing set sets explained bundles denoting typical fiber modeling fiber gamma bundle taken classical order logical space 
classical order logical space consists order language denoted formulas assume classical truth values true false connectives quantifiers obey customary rules classical logic 
application multi set elementary terms classical order language corresponds local situation cf 
description deductive planning model sect 

concept fiberings general allow mix logics sense different logics occur local fibers 
sample scenario mix valued logics 
development aspects intended 
morphism logical fiberings defined way done bundles cf 
ch logical fiberings projections respectively 
morphism pair maps ffi ffi commutative square 
special case equal base spaces obtain ffi commutative triangle 
sense interpret morphism process transporting information spaces 
consequence definition case morphism operates gamma gamma mapping classical logical spaces 
case dealing context morphisms respect connectives quantifiers sense instance oe oe oe oe preserve truth values classical case 
follows general commutativity demands stated 
valued logics opposed classical valued ones map truth values constants tautologies preserved 
truth values may course different meaning codomain 

leads category logical fiberings bundles 
logical fiberings certain constant base space index set form comma category usual sense cf 
literature 
logical map morphism category sets 
base set carry additional structure partial order graph net semigroup algebra topology 
belong category reasonable require morphism category 
particular interest framework study logical fiberings bundles sheaves boolean algebras topological base space 
point approach inherent parallelism 
simplest form called trivial theta projection fiber gamma fig theta logical fiberings corresponds parallel system logics index set serving base space typical fiber classical order logic fiber gamma reasoning processes run independently parallel 
communication fibers modeled oe characteristic feature classical fiber bundle called local triviality property 
locally trivial fiber bundle composed parts locally simple structure sense type product bundle theta subsets base space form covering constraints arising forming entire bundle modeled called transition functions 
formally describe local parts patched cases covering sets non empty intersection 
particular fiber gamma obtains structure typical fiber give formal definition concept local triviality 
called locally trivial respect covering fu base space diagram commutative gamma theta phi phi isomorphism corresponding category phi oe oe gamma morphism 
oe gamma fiber isomorphism induced phi gives gamma fiber structure 
important note applications covering sets just individual points base space point sets 
problem dependent arises frequently 
product bundle trivial logical theta projection component 
fiber gamma fig theta call free parallel system denoted valued subsystems equipped local truth values omega ft set global truth values omega disjoint union coproduct omega logical systems ways form logical operations combining classical logical connectives locally putting form logical vectors oe furthermore model system changes sense shift logical information formulas subsystem corresponds model communication fibers seen logical state spaces corresponding agents 
briefly mention formal treatment logical operations formation logical expressions logical done 
refer technical details 
logical expressions notion logical want model various logical subsystems loci residing indexed system base space object certain category 
ask suitable formalization logical expressions want order get corresponding language constructed corresponding expressions local languages objective systematically families local expressions achieve manipulation global logical formulas parallel different subsystems 
free parallel possible restrictions form global expressions consisting family arbitrary local expressions formed parallel subsystem 
canonically leads formal definition global expression language language logical consists collection families expressions local languages subsystems categorical terms families form direct product sets local expressions denote logical connectives introduced componentwise 
finite set vector notation expressions done previously 
alternatively set global expressions formally introduced set sections section definition property ffi id projection 
technical details illustrative examples univariate bivariate operations logical fiberings refer 
free parallel logical systems sense free objects category logical fiberings restrictions value sets omega variety logical systems derived corresponding equivalence relations omega vary freely data base space fibers 
principle combine different logics fibers corresponding generalization definition 
consider total space coproduct sets expressions bundle object comma category set denoted bn bundles cf 
ch 

category topos loc 
cit 
go formal details interesting consider aspect systematic formulation categorical terms propositional calculus evaluation algebraic semantics done formalizing semantical considerations categorical language formalizing elementary operations arrow notation universal properties cf 
ch 

leads elegant unified presentation notions 
apart possibility forming bivariate logical connectives subsystem general non classical operation arises naturally 
consider local bivariate operation mapping theta theta distribute images different input pairs theta theta different subsystems image space picture shows basic structure bivariate operation theta theta ff fi fl ffi explicit semantically different subsystems images possible local input pairs omega theta omega example image truth values theta ff theta fi theta fl theta ffi displayed truth value matrix 
words bivariate operations distribute images subsystems new basic feature 
classification bivariate operations called 
simple demonstration applied logical control cooperating robots 
scenario generalized notion allows multivariate inputs outputs 
allow non classical valued logics fibers 
description bivariate classical case easily generalized 
order clear distinction original notion generalized version denote 
represented truth value matrix mapping bivariate truth table fixed local system bivariate truth table values occurring truth table distributed maximally value sets omega ff omega fi omega fl omega ffi corresponding subsystems ff fi fl ffi respectively 
classified type truth table consideration classical connective corresponds omitting indices 
example truth value matrix looks ff fi fl ffi modeling scenario model scenario described machinery logical fiberings 
individual robots correspond local logical systems defined logical control function working cell 
mathematical description logical controller means diagram dubbed logical controller 
valued logics local fibers order model fact scenario robots actions disposal contrast scenario discussed robot just possible action undertake 
abbreviations actions robots introduced sect 
assemble store get get temp temp get temp dump dump dump temp empty dump 
logical control function logical operation number variables course corresponds number control propositions giving theta theta theta theta theta theta theta domain theta forced fact truth value control proposition table res checked sensor connected robot truth value tried determined actions truth values table table determined actions truth values propositions temp temp dump respectively determined actions robot codomain image space theta determined actions performed setting logical propositions 
left control propositions empty empty sb discussion 
truth extra prerequisite action likewise truth actions propositions irrelevant 
trivial time space consuming matter include 
describe theta truth values expressing function theta omega theta omega theta omega theta omega theta omega theta omega theta omega omega omega set global truth values 
truth values correspond actions truth value logical subsystem action remains inactive performs performs remains inactive performs performs remains inactive performs performs performs performs performs performs performs note valued logical systems turns valued 
define theta truth table 
order render situation pictorially put values logical propositions horizontally vertically 
impossible combinations truth values table res tried table table deleted 
done impossible combinations temp temp viz 
having pieces temp 
eliminating obviously impossible situations combinations values control propositions left occur indicated blanks diagram defines controlling working cell 
see cases resulting truth value uniquely determined corresponds choice actions agents scenario 
theta table res tried table table temp temp dump individual action ij seen morphism corresponding local section regulating new values control propositions table res checked sensor 
semantical foundation deductive planning logical fiberings section discuss correspondences notions deductive planning approach logical fiberings approach order find semantic foundation planning approach 
complete correspondence await rigorous formal statement notions involved list fundamental correspondences illustrated means scenario discussed previous sections 
situation versus global section situation resource oriented deductive planning simply corresponds multiset facts fact represented term order logic 
global section mapping index set connected logical disjoint union indexed subsystems indexed subsystems correspond facts control propositions verified scenario image global section point time corresponds precisely situation time local snapshot 
instance possible situation scenario discussed multiset table temp dump jg 
representation situation planning approach corresponds canonically global section mapping table jg temp dump 
oe oe table jg oe temp dump jg 
local section corresponds viewing situation perspective agents 
explained sect 
scenario local section take control propositions account 
likewise multisets depicted modified curly brackets fj table table relevant 
local section take account truth value table res 
instance perspective situation described looks table jg implying meaningful action 
situation locally looks table jg robot means action get new piece type invoked 
situation locally seen table temp dump jg calls performing move piece type temp table 
example possible conflicts prevented looking local section yields current section explained sect 

disjunctive situation term set multisets corresponds set sections 
point technical machinery sections works complex applications scenarios 
example show elementary principles 
action versus application action performed scenario described specification preconditions effects disjunctive situation terms 
corresponds applying global section gives mapping set sections action evaluation function 
output function corresponds action performed preconditions situation term planning approach 
instance situation described yields output activates action robot get piece type temp place table 
action resets control propositions viz 
global section action carried map table temp dump jg 
case sensor interaction necessary sensor needed carrying action situations possible 
planning terms means sufficient precondition action get temp table temp dump jg postcondition contain table table dump jg terms precondition 
note action get temp evoked preconditions table temp dump jg postcondition substituted terms temp dump jg temp dump jg 
cases postconditions table jg table jg respectively 
corresponds fact fiberings approach inverse image image contains global sections theta gamma table temp dump jg table temp dump jg temp dump jg temp dump cf 
table logical control function sect 

process course versus sequence sections process course scenario deductive planning sequence situations may occur sequentially 
sequence depends pre postconditions actions successively applied 
quite naturally corresponds possibly branching sequence global sections 
preand postconditions action determined activation truth value obtained output evaluation function eval 
output input activation truth value action carried 
plan generation logical fiberings situation occurring process course logical controller checks action planning terms applied current global section complete situation planning terms 
planning approach involves matching preconditions actions description actual situation 
action selected carried new situation constructed replacing instantiated precondition corresponding instantiated postcondition 
approach logical controller selects action means examining global section 
automatically returns new situation case assembly tried sensor needs check successful 
generalized considers groups individual agents autonomous 
local sections control propositions pertinent robots determine action independently 
instance important control propositions table res tried table table 
local logical controller determine action applied formulation scenario need control propositions determine action 
restrict local section table table table table table res temp temp empty dump 
crucial actions robots 
needs know pieces type available table addition needs information temporary permanent dumps 
possible ambiguity actions perform instance want supply piece type store temp resolved checking global section 
corresponds communication robots local fibers 
summarizing planning approach method generate plans resolution explained sect 

tries match initial situation preconditions actions searches process course results goal situation 
alternatively start looking backward goal situation mix approaches search strategy concern 
fiberings approach things slightly different 
take global view correspondence clear 
applied initial global section goal situation corresponding section reached 
due possibility failure assemble pieces type successfully sequence sections generated branch just planning case 
applying inverse backward search implemented 
local view changes things robots may forced carry conflicting actions necessitating communication 
communication modeled global sections cases 
example discussed conflicts arise suggesting group autonomous unit 
obtain just optimized version global approach 
complicated examples concept localizing processing data parallelizing decision actions perform may greatly improve efficiency planning control 
complicated examples exploit expressive power fiberings 
prospect base point dependent formulas major motivation introducing handling logical formulas space time dependent comes desire model logical state spaces agents scenario varying space time 
specifically intend enhance scenario modeling aspect 
robotics scenario cooperating agent space cell 
logical formulas corresponding involved description working process 
actions may depend strongly concrete physical position coordinates agent depend time parameter 
hand order model specific cooperation tasks agents fulfil corresponding logical constraints overlap spaces 
reflected constraints described corresponding local state spaces technically modeled fibers concrete local working areas robots 
means applications physical space cell serve base manifold index system logical 
considerations form natural motivation model logical formulas depend points space time 
concepts introduce applied ways define set theoretically allowing great generality 
specifically framework easily extended logical formulas information 
essence formulas information working range truth values formulas involved 
cast glance idea terms example logical formulas space dependent 
thorough formal treatment intended 
oe denote logical formulas language consideration possible formulas logical state spaces fibers points base domain respectively 
indicate formalism formula handling able formulas dependent points base space 
means state space total space different ways logical formulas vary fiber fiber sense switched evaluable certain subdomain base space switched evaluable fibers subdomains 
allows model variety practical situations logical means especially case cooperating agents working geometrically modeled environment base space 
formalism handling formulas subject 
intend indicate showing typical example 
natural numbers oe oe oe empty string empty word 
say oe want express oe switched oe meant express oe switched 
denote domain example geometric domain plane robots moving 
denote subsets seen subareas workspace robots allowed move certain working conditions 
furthermore characteristic function subsets ae 
denote logical evaluation function evaluates local logical formulas base point 
define total space fibers base space go technicalities 
consider expressions formulas oe gamma oe oe denote local evaluation logical formulas state space definition gamma gamma meaning insert local evaluation shall express appears valid analogously fourth formula means oe appear conjunction similarly examples 
variations possible principle 
notations modeling time dependent formulas extending base space time 
example apply notion space dependent formulas case cooperating robots 
deliberately keep application simple just indicating want exploit method 
robots having workspace areas give corresponding robots names able independently parts workspace overlap workspace agent 
logical control independent modeled sets formulas fff fff fff corresponding logical state space robot respectively 
different sets formulas describe logical control scenario overlaps example 
reasons simplicity deal common overlap robots workspace area overlap agents able cooperate order solve problem help robots required 
correspond certain logical constraints 
consider simple case situation 
denote workpiece weight kg placed area cell 
formulate task saying workpiece lifted placed solid basis chassis 
chassis provided robot move right position right piece course case lifted 
task comprises subtasks lift move chassis right 
situation robot lift kg lift kg phrase logically represented formula oe logical state space 
similarly robot lift kg lift kg logically expressed corresponding formula oe logical state space 
accordingly lift individual workspace area respectively jointly workspace overlap logically expressed space dependent formula oe oe lift box operator previous modal formula express workspace overlap robots fulfil task lifting workpiece lift 
exponents formally express formula switched formula contained logical state space interpret logical constraint system valid overlap 
logical description control performing task modeled follows 
denote logical formula corresponding subtask robot meaning move chassis right 
logical control successful performance task cooperating agents expressed space dependent formula oe oe lift formula contained logical state space robot 
interpret base space dependent constraint system holding exactly common overlap expressing situation robots fulfil task cooperation 
interpret system logical continuous base space workspace area discrete total space set local state spaces robots depending base points fiber consists formulas local state space agent switched point available applicable corresponding control system point 
typical feature modeling approach mix discrete continuous structures 
summarizing methods describe cooperating agents scenarios indicated logical fiberings approach equip deductive planning semantics 
logical fiberings approach particularly suitable modeling communication interaction cooperating agents due possibility switch local global point view typical framework 
alternating local global sections allows natural switch perspective individual cooperative point view 
achieve incorporation communication agents changing representation necessary deductive planning approach 
indicated extend modeling logical fiberings space time dependent formulas aiming modeling space time logical fiberings order modeling complex scenarios possible natural 
various possibilities extend generic modeling principle intended 
objective incorporate concept hierarchical planning 
important issue mirroring actual plan generation fiberings approach 
investigations lead providing planning approach complete elaborated semantic foundation logical fiberings 
perspective due modular approach modeling agent state space possible incorporate different reasoning modules 
examples modules geometric reasoning kinematics problems modules communication internally cell externally databases located outside modules local databases data information agent needs fast direct access modules evaluation sensor information safety thereof modules logical state space description reasoning description modules planning 
concerning examples discussed far aware fact experimental nature sense toy demonstrators 
main goal try demonstrate principle approach useful modeling concrete applications field cooperating agents 
concentrated concept logical control planning 
consider interesting indispensable develop techniques go realistic oriented applications 
intended part joint activities entering cooperation mechanical engineers building autonomous cooperating production units real hardware 
mention referees raised question general semantical framework concept space time dependent formulas embedded 
pointed called lawvere tierney semantics cf 
details 
aspect confirmed private conversation author lawvere 
corresponding referee valuable hint 
acknowledgments improved extended version workshop 
referees helpful suggestions 
furthermore bibel valuable comments earlier version 
express gabbay interesting helpful discussions 
ongoing motivations suggestions gabbay stimulated continuation logical fiberings 

bibel 
deductive solution plan generation 
new generation computing 

bibel 
deductive solution plan generation 
new generation computing 

bond gasser editors 
readings distributed artificial intelligence 
morgan kaufmann publ san mateo california 

holldobler sigmund thielscher 
disjunction resource oriented planning 
technical report aida intellektik informatik th darmstadt march 

kelemen 
power cooperation regular representation recursively enumerable languages 
theoretical computer science 

stahl 
toolkit benchmarking scenarios robot multi tasking 
technical report risc linz kepler university linz austria europe 


categories bundles spacetime topology 
kluwer academic publ 

gabbay 
labelled deductive systems position 
logic colloquium lecture notes logic vol springer verlag 

gabbay 
labelled deductive systems part technical report cis bericht cis university munich 

gabbay 
classical versus nonclassical logic chapter handbook logic ai logic programming vol 
oxford university press 
gabbay hogger robinson 
eds 

gasser huhns editors 
distributed artificial intelligence 
morgan kaufmann publ san mateo pitman london 

goldblatt 
topoi 
categorial analysis logic volume studies logic foundations mathematics 
north holland elsevier publishers amsterdam nd revised edition 

gro holldobler 
linear deductive planning 
technical report aida fg intellektik fb informatik th darmstadt august 

gro holldobler sigmund thielscher 
equational logic programming actions change 
proc 
joint international conference symposium logic programming jicslp 

holldobler 
new deductive approach planning 
new generation computing 

holldobler 
new deductive approach planning 
new generation computing 

holldobler thielscher 
actions specificity 
miller editor proceedings international logic programming symposium ilps pages vancouver october 
mit press 

mahler 
eine die theorie der form 
zur heft iff klagenfurt 

kelemen 
syntactical models distributed cooperative systems 
expt 
theor 
artif 
intell 

lambek scott 
higher order categorical logic volume cambridge studies advanced mathematics 
cambridge university press 

lifschitz 
formal theories action 
international joint conference artificial intelligence pages 
morgan kaufmann publishers 

saunders mac lane moerdijk 
sheaves geometry logic topos theory 

springer verlag 


generating plans linear logic 
pr centre scientifique polytechnique universite paris nord december 


generating plans linear logic 
foundations software technology theoretical computer science pages 
springer volume lncs 

mccarthy 
situations actions causal laws 
stanford artificial intelligence project memo 

mccarthy 
applications circumscription formalizing common sense knowledge 
artificial intelligence 

mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence vol 
pages 
edinburgh university press edinburgh 
published 


geometric topological reasoning robotics 
appear special issue artificial intelligence symbolic mathematical computation annals mathematics artificial intelligence 


note simplices geometric configurations 
archiv der mathematik 


representation geometric spaces structures 
results mathematics 
german 


logical fiberings systems 
philippe jozef kelemen editors proc 
fundamentals artificial intelligence research lncs subseries lnai pages 


general notion hull 
wang editors springer series texts monographs symbolic computation automated practical reasoning algebraic approaches 
springer verlag 

sigmund 
modeling cooperating agents scenarios deductive planning methods logical fiberings 
proceedings conference workshop artifical intelligence symbolic mathematical computing 


scenario construction continued extended view test enhancement reasoning methods 
technical report kepler university linz austria europe may 

pitt abramsky poign rydeheard editors 
category theory computer programming lncs 
springer verlag 



lecture notes taken tom university saarbrucken 
german 


plan generation linear deduction 
fg intellektik fb informatik th darmstadt 
darmstadt germany 

shapiro takeuchi 
object oriented programming concurrent prolog 
new generation computing 

sigmund 
llp logische programmierung 
master thesis intellektik informatik th darmstadt 


topology fibre bundles 
princeton university press 

sussman 
computer model skill acquisition 
elsevier publishing 
