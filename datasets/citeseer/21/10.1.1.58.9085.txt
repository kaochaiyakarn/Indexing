problem concept drift definitions related department computer science trinity college dublin ireland tcd april real world concepts stable change time 
typical examples weather prediction rules customers preferences 
underlying data distribution may change 
changes model built old data inconsistent new data regular updating model necessary 
problem known concept drift complicates task learning model data requires special approaches different commonly techniques treat arriving instances equally important contributors final concept 
considers different types concept drift peculiarities problem gives critical review existing approaches problem 

definitions peculiarities problem difficult problem learning real world domains concept interest may depend hidden context explicitly form predictive features 
typical example weather prediction rules may vary radically season 
example patterns customers buying preferences may change time depending current day week availability alternatives inflation rate cause change hidden known priori making learning task complicated 
changes hidden context induce radical changes target concept generally known concept drift widmer kubat 
effective learner able track changes quickly adapt 
difficult problem handling concept drift distinguishing true concept drift noise 
algorithms may noise erroneously interpreting concept drift may highly robust noise adjusting changes slowly 
ideal learner combine robustness noise sensitivity concept drift widmer kubat 
domains hidden contexts may expected recur 
recurring contexts may due cyclic phenomena seasons year may associated irregular phenomena inflation rates market mood harries sammut 
domains order adapt quickly concept drift concept descriptions may saved reexamined reused 
learners able deal recurring contexts 
include flora widmer kubat splice harries sammut local weights batch selection klinkenberg 
ideal concept drift handling system able quickly adapt concept drift robust noise distinguish concept drift recognize treat recurring contexts 

types concept drift kinds concept drift may occur real world normally distinguished literature sudden abrupt instantaneous gradual concept drift 
example graduating college suddenly completely different monetary concerns slowly wearing piece factory equipment cause gradual change quality output parts stanley 
stanley divides gradual drift moderate slow drifts depending rate changes 
hidden changes context may cause change target concept may cause change underlying data distribution 
target concept remains data distribution changes may lead necessity revising current model model error may longer acceptable new data distribution 
necessity change current model due change data distribution called virtual concept drift widmer kubat 
virtual concept drift real concept drift occur 
virtual concept drift may occur case spam categorization 
understanding unwanted message may remain relatively long period time relative frequency different types spam may change drastically time 
virtual concept drift referred sampling shift real concept drift referred concept shift 
practical point view important kind concept drift occurs real virtual 
cases current model needs changed 

systems handling concept drift probably systems capable handling concept drift stagger schlimmer granger flora widmer kubat ib aha 
approaches handling concept drift distinguished available systems instance selection instance weighting ensemble learning learning multiple concept descriptions 
instance selection goal select instances relevant current concept 
common concept drift handling technique instance selection consists generalizing window moves arrived instances uses learnt concepts prediction immediate 
examples window algorithms include flora family algorithms widmer kubat kubat widmer time windowed forgetting 
algorithms window fixed size heuristics adjust window size current extent concept drift adaptive size klinkenberg flora widmer kubat 
editing strategies case reasoning delete noisy irrelevant redundant cases form instance selection cunningham 
batch selection klinkenberg may considered instance selection 
groups instances batches considered relevant target concept classified current model 
instance weighting uses ability learning algorithms support vector machines svms process weighted instances klinkenberg 
instances weighted age competence regard current concept 
klinkenberg shows experiments instance weighting techniques handle concept drift worse analogous instance selection techniques probably due overfitting data 
ensemble learning maintains set concept descriptions predictions combined voting weighted voting relevant description selected 
concept drift handling system stagger schlimmer granger maintains set concept descriptions originally features complicated concept descriptions produced iteratively feature construction best selected relevance current data 
conceptual clustering harries sammut identifies stable hidden contexts clustering instances assuming similarity context reflected degree instances classified concept 
set models constructed identified clusters 
street kim wang 
suggest simply dividing data sequential chunks fixed size building ensemble chunks may effective handling concept drift 
stanley build ensembles classifiers different age base classifiers sees latest instances 
incremental ensemble approaches criteria dynamically delete create new ensemble members normally base models consistency current data 

base learning algorithms handling concept drift learning algorithms base models systems handling concept drift 
include rule learning schlimmer granger widmer kubat wang decision trees including incremental versions harries sammut hulten street kim stanley wang na bayes wang svms klinkenberg radial basis functions networks kubat widmer instance learning aha cunningham 
problem global eager learners able update local parts incrementally needed inability adapt local concept drift 
real world concept drift may local particular types spam may change time remain 
case local concept drift global models discarded simply accuracy current data falls experts stable parts data 
contrast lazy learning able adapt local concept drift due local nature 
advantages lazy learning handling concept drift discussed cunningham 
lazy learning performs disjoint concepts spam consists different sub types second case bases lazy learning easy update new types spam appear third lazy learning allows easy sharing knowledge particular types problems making easier maintaining multiple potentially distributed case bases 
instance learning criticized non parametric learning needs relatively instances get high classification accuracy widmer kubat 
problem practice instances available 
instance technique capable handling concept drift ib aha 
case ib calculates percentage correct classification attempts compares class frequency determine cases keep discarding noisy outdated cases 
ib criticized able adapt gradual concept drifts adaptation relatively slow widmer kubat 
local weighted forgetting deactivates old instances similar new instances appear 
prediction error context switching similar takes account classification accuracy instance able store instances 
shown perform better simple window technique twf best technique 

datasets testing systems handling concept drift popular benchmark data testing concept drift handling systems represented stagger concepts schlimmer granger including simple boolean concepts features feature values 
test systems schlimmer granger widmer kubat kubat widmer harries sammut stanley 
popular benchmark problem represented moving hyperplane hulten street kim wang 
stagger hyperplane problems allow controlling type rate concept drift context recurrence presence noise irrelevant attributes 
allow checking algorithms scalability large problems important concept drift occurs big amounts data arriving form stream 
real world problems test concept drift handling systems flight simulator data harries sammut web page access data hulten text retrieval conference trec data klinkenberg credit card fraud data wang breast cancer anonymous web browsing census bureau data street kim mail data cunningham 
important problem real world data sets little concept drift concept drift introduced artificially restricting subset relevant topics particular period time trec data klinkenberg 

theoretical results handling concept drift task learning drifting concepts studied computational learning theory 
usually restrictions imposed type admissible concept changes proofs learnability drifting concepts limiting rate extent drift 
particular kuh 
determine maximal frequency concept changes rate drift acceptable learner implies lower bound size window drifting concepts learnable 
long establish bounds extent drift tolerated assuming possibly permanent slow drift extent defined probability successive concepts disagree random instance 
show sufficient learner see fixed number instances window 
results similar lower bound kuh practice usually guaranteed restrictions hold true 
large window sizes theoretical bounds impractical employ 

incremental online learning versus batch learning algorithms handling concept drift consider incremental online learning environments opposed batch learning 
batch systems learn examining large collection instances forming single model incremental systems evolve update model new instances processed 
incremental learning suited task handling concept drift real life data needs processed online manner time new portion data arrives 
caused fact data current data processing systems organized form data stream static data repository reflecting natural flow data street kim wang hulten spencer 
batch concept drift learning considered sake simplicity harries klinkenberg 
klinkenberg discusses algorithms turned incremental particular svms 

criteria updating current model algorithms handling concept drift employ regular model updates new data arrive 
costly amount arriving data may overwhelming applications spam categorization user feedback needed labeling data requires time resources 
way overcome problem detect changes adapt model inevitable 
criteria called triggers proposed literature 
suggests criteria detecting changes user feedback 
criterion average confidence correct prediction model new instances second observes fraction instances confidence threshold 
concludes real world applications changes usually slower radical detected criteria difficult detect 
leake wilson suggest similar criteria specific case reasoning problem solution regularity problem distribution regularity represent similarity solutions reflected similarity cases problems coverage learning task case base 
criteria may measures quality easy apply practice triggers model updating drift rate level noise may vary drastically time 
problem concept drift increasing importance machine learning data mining data organized form data streams static databases unusual concepts data distribution stay stable long period time 
summarize basic approaches handling concept drift distinguished instance selection instance weighting ensemble learning 
important problem real world datasets existing experimental investigations little concept drift concept drift introduced artificially 
real data including different types concept drift needed experiment proposed approaches validate check robustness change different data characteristics particular scalability 
important part research concept drift developing criteria detecting crucial changes allow adapting model inevitable 
currently suggested triggers robust different types concept drift different levels noise research needed direction 

am thankful prof cunningham sarah jane hogan department computer science trinity college dublin ireland prof department computer science information systems university jyv skyl finland discussions comments early versions 
material works supported science foundation ireland 


aha kibler albert instance learning algorithms machine learning 

cunningham nowlan case approach spam filtering track concept drift proc 
iccbr workshop long lived cbr systems 

harries sammut horn extracting hidden context machine learning 

hulten spencer domingos mining time changing data streams proc 
th acm sigkdd int 
conf 
knowledge discovery data mining kdd acm press 

dynamic weighted majority new ensemble method tracking concept drift rd ieee int 
conf 
data mining icdm ieee cs press 

kubat widmer adapting drift continuous domains tech 
report fai tr austrian research institute artificial intelligence vienna 

renz adaptive information filtering detecting changes text streams proc 
th int 
conf 
information knowledge management cikm acm press 

leake wilson experience wrong examining cbr changing tasks environments proc 
rd int 
conf 
case reasoning iccbr springer verlag lecture notes computer science 

tolerating concept sampling shift lazy learning prediction error context switching ai review special issue lazy learning 

schlimmer granger incremental learning noisy data machine learning 

stanley learning concept drift committee decision trees tech 
report ut ai tr department computer sciences university texas austin usa 

street kim streaming ensemble algorithm sea large scale classification proc 
th acm sigkdd int 
conf 
knowledge discovery data mining kdd acm press 

wang fan yu han mining concept drifting data streams ensemble classifiers proc 
th acm sigkdd int 
conf 
knowledge discovery data mining kdd acm press 

widmer kubat effective learning dynamic environments explicit context tracking proc 
th european conf 
machine learning ecml springer verlag lecture notes computer science 

widmer kubat learning presence concept drift hidden contexts machine learning 

klinkenberg learning drifting concepts example selection vs example weighting intelligent data analysis special issue incremental learning systems capable dealing concept drift appear 

helmbold long tracking drifting concepts minimizing disagreements machine learning 

kuh petsche rivest learning time varying concepts advances neural information processing systems nips morgan kaufmann 
