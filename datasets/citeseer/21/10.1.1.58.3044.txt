dyknow framework processing dynamic knowledge object structures autonomous systems fredrik heintz patrick doherty department computer information science link ping university summary 
autonomous system embedded dynamic changing environment able create qualitative knowledge object structures representing aspects environment fly raw preprocessed sensor data order reason qualitatively environment 
structures managed accessible deliberative reactive functionalities dependent aware changes robotic agent embedding internal environment 
dyknow software framework provides set functionalities contextually accessing storing creating processing structures 
system implemented deployed deliberative reactive architecture autonomous unmanned aerial vehicle 
architecture distributed uses real time corba communications infrastructure 
describe system show execution monitoring chronicle recognition scenarios uav applications 
research cognitive robotics concerned endowing robots software agents higher level cognitive functions enable reason act perceive goal directed manner changing incompletely known unpredictable environments 
research robotics traditionally emphasized low level sensing sensor processing control manipulative tasks 
open challenges cognitive robotics integrate techniques disciplines develop architectures support seamless integration low level sensing sensor processing generation maintenance higher level knowledge structures grounded sensor data 
knowledge internal external environments robotic agent static dynamic 
great amount background deep knowledge required agent understanding world understanding dynamics embedding environment objects authors supported foundation sweden 
fredrik heintz patrick doherty interest hypothesized particular type types dynamics continuously reasoned timely manner 
implies signal symbol transformations levels abstraction different varying constraints real time processing 
reasoning involved dynamic objects dynamic knowledge related objects involves issues situation awareness 
robotics architecture support task getting right information right form right functionalities architecture right time order support decision making goal directed behavior 
important aspect problem fact going process 
data knowledge dynamic objects provided continuously fly rate form efficient receiving cognitive reactive robotics functionality particular context 
context important optimal rates forms robotic functionality receives data task environmentally dependent 
consequently autonomous agents able declaratively specify re configure character data received 
define change approximate values time points value synchronize collections values examples properties set context 
robotic functionalities mean control reactive deliberative functionalities ranging sensor manipulation navigation high level functionalities chronicle recognition trajectory planning execution monitoring 
structured follows 
start section larger scenario proposed framework described 
section uav platform project briefly described 
section distributed autonomous robotics architecture uavs briefly described 
dyknow essential module architecture 
sections basic structure dyknow framework dynamic knowledge object structures described 
sections deliberative functionalities dyknow framework considered chronicle recognition execution monitoring addition dynamic object repository dor described section 
conclude section discussion role dyknow framework related 
identification track scenario order ideas precise scenario unmanned aerial vehicle project authors involved requires capabilities discussed far 
picture scenario 
autonomous unmanned aerial vehicle uav case helicopter mission identify track vehicle particular signature region small city 
signature provided terms color size possibly shape 
assume dyknow uav model region addition information building structures road system 
models provided may generated uav 
additionally assume uav equipped gps ins navigating purposes main sensor camera pan tilt mount 
consider processing bottom reality feedback loops uav architecture 
way uav achieve task initiate reactive task procedure parent procedure calls systems image processing module vehicle signature parameter 
image processing module try identify colored blobs region right size shape color step 
object descriptions sent module architecture called dynamic object repository dor responsible dynamic management objects 
vision objects contain features related image processing task rgb values uncertainty bounds length width pixels position image sub image object template tracking estimate velocity perspective uav objects extent moving colored blobs interest feature data collected continue collected tracking objects perceived interest 
objects interest 
parent procedure identify objects interest similarity measure size color movement 
order dor instructed create world objects link respective vision objects 
point object qualitative level abstraction description terms linkage structure contains cognitive pre cognitive information continuously managed processed due interdependencies features various levels 
world object contain additional features position geographic coordinate system low level image coordinate 
generating geographic coordinate image coordinate continuously called location complex process involves combining dynamic data features different objects camera object helicopter object world objects data onboard geographical information system gis module part architecture 
require computational unit sorts takes streamed data input outputs new stream higher level abstraction representing current geographical coordinate object 
location process occur real time continually occur world object tracked 
gps ins acronyms global positioning system inertial navigation system respectively 
fredrik heintz patrick doherty implies features dynamic objects linked world object focus continually updated managed 
point parent task may want comparison geographical coordinate position coordinate terms road system region information stored onboard gis 
indexing mechanism important allows uav reason qualitatively spatial surroundings 
assume done period tracking monitoring stream coordinates parent procedure decides looks vehicle road 
road objects created world objects pass test linked respective world objects 
road object contain qualitative features position road segment allow parent procedure reason qualitatively position world relative road vehicles road building structures vicinity road 
point streams data generated computed features linked object structures levels abstraction helicopter tracks road objects 
parent procedure static knowledge stored onboard knowledge bases gis dynamic knowledge hypothesize type vehicle 
hypothesis course linkage structure road object various features different levels abstraction 
assume parent procedure hypothesizes road object car 
car object created linked existing linkage structure additional high level feature information car 
sum streamed data linkage structure represents particular type conceptual entity remain hypothesis change changes character streams data 
monitors users structures set observe changes alert parent procedure changes abnormal relative criteria determined parent procedure 
abnormality concept suited reasoned logical level streamed data put form amenable type processing 
architecture set support processes described uav scenario 
main topic propose software system called dyknow framework 
witas uav platform dyknow pronounced dino dinosaur stands dynamic knowledge object structure processing 
dyknow witas unmanned aerial vehicle project long term basic research project main objectives development integrated hardware software vertical take landing platform missions deployment applications traffic monitoring surveillance emergency services assistance photogrammetry surveying 
witas project uav platform slightly modified yamaha rmax fig 

total length including main rotor maximum take weight kg powered hp stroke engine 
yamaha equipped radio controlled rmax attitude sensor attitude control system 
fig 

witas rmax helicopter hardware platform consists pc embedded computers fig 

primary flight control pfc system consists piii mhz processor wireless ethernet bridge sensors gps serial barometric altitude sensor analog 
connected serial image processing computer serial deliberative computer ethernet 
image processing ip system consists second pc embedded computer piii mhz color ccd camera video serial interface control mounted pan tilt unit serial video transmitter composite video recorder 
deliberative reactive system runs third pc embedded computer piii mhz connected pfc system ethernet corba event channels 
system described detail section 
discussion important note computational processes executed concurrently distributed hardware 
data flow synchronous asynchronous concurrent distributed nature hardware platform contributes diverse latencies data flow system 
witas pronounced vee tas acronym information technology autonomous systems laboratory link ping university sweden 
fredrik heintz patrick doherty camera platform mini dv rmax helicopter platform pitch yaw roll color ccd camera ptu hz yamaha attitude controller hz yamaha attitude sensors hz mhz piii mhz piii rtlinux mhz piii gps path planner task planner camera control bt rs rtlinux serial analog magnetic compass chronicle recognition 
tp exec linux helicopter control preprocessor pressure sensor gis knowledge repository dor temp 
sensors fig 

hardware schematic tcp ip distributed autonomous robotics architecture system consists deliberative reactive components interface control architecture primary flight controller pfc 
current flight modes include autonomous take landing predefined dynamic trajectory vehicle tracking hovering 
chosen real time corba basis design implementation loosely coupled distributed software architecture aerial robotic system 
communication infrastructure architectures provided corba facilities services 
fig 
depicts incomplete high level schematic software components architecture 
may viewed corba server client providing requesting services receiving data events real time standard event channels 
modular task architecture mta part reactive system design procedure paradigm developed loosely coupled heterogeneous systems witas aerial robotic system 
reactive currently tao ace 
ace orb open source implementa tion corba 
sonar dyknow implemented task procedures tp executed concurrently essentially event driven 
tp may open corba event channels call services corba application oriented services path planners including functionalities dyknow 
task planner service helicopter controller physical camera controller dyknow path planner service chronicle recognition service task procedure execution module tp tpn image controller prediction service qualitative signal processing controller runtime image processing module ipm fig 

software schematic geographical data repository knowledge repository dynamic object repository distributed nature hardware software architectures addition complexity main issues getting data right place right time right form able transform data proper levels abstraction high level deliberative functionalities middle level reactive functionalities 
dyknow designed contribute achieving 
ontologically view external internal environment agent consisting entities representing physical non physical objects properties associated entities relations entities 
call entities objects properties relations associated objects called features 
features may static dynamic parameterized objects 
due potentially dynamic nature feature ability change value time fluent associated feature 
fluent function time range feature type 
dynamic feature fluent values vary time static feature fluent remain constant time 
examples features estimated velocity world object current road segment road object distance car objects 
fluent associated examples implicitly generates continuous stream time tagged values appropriate type 
additionally introduce locations policies computational units fluent streams refer aspects fluent representations actual software architecture 
location intended denote pre defined physical fredrik heintz patrick doherty software location generates feature data architecture 
examples onboard databases corba event channels physical sensors device interfaces fact location index representational structure associated feature 
structure denotes process implements fluent associated feature 
fluent implicitly represents stream data fluent stream 
stream continuous approximated architecture 
policy intended represent particular contextual window filter access fluent 
particular functionalities architecture may need sample stream particular rate interpolate values stream certain manner 
policies denote collections constraints 
computational units intended denote processes take fluent streams input perform operations streams generate new fluent streams output 
entities represented syntactically form data structure architecture data structures grounded sensor data perceived robotic agent sensors 
addition declarative specifications features policies determine views fluent streams st class citizens dyknow language referring features locations computational units policies provided see details 
view dyknow implementing distributed qualitative signal processing tool system functionality generate dynamic representations parts internal external environment contextual manner policy descriptors feature representation structures 
dynamic representations viewed collections time series data various levels abstraction time series representing particular feature bundle representing particular history progression 
view dynamic representations put interpret fluent stream bundles partial temporal models logical sense 
partial temporal models fly interpret temporal logical formulas tal temporal action logic temporal formalisms 
functionality put constructing execution monitors predictive modules diagnostic modules net result powerful mechanism dealing plethora issues associated focus attention situational awareness 
dynamic object structure dyknow ontologically difficult issue involves meaning object 
distributed architecture information specific object distributed system information may redundant may inconsistent due issues precision approximation 
example car object part linkage dyknow structure may contain objects road world vision objects 
example linkage structure see fig 

addition features associated objects computed different manners different parts architecture different latencies 
candidate definition object aggregate features take object parameter feature 
object represents aspects entity world 
represent different objects represent entity world links created objects 
linkage structures represent aspects entity known uav agent 
case linkage structures fact represent entity world uav agent unable determine 
objects may type different linkage structures associated 
example car objects may road object road object part linkage structure 
important point objects intended similarities oop objects differences 
fig 

example object linkage structure create maintain object linkage structures hypothesis generation validation 
object associated set possible hypotheses 
possible hypothesis relation objects associated constraints objects 
generate hypothesis constraints possible hypothesis satisfied 
different types hypotheses depending types objects 
objects different types hypothesis represented link 
type hypothesis represented codesignation objects 
hypothesize objects representing aspect world identical link hypothesizes objects represent different aspects entity 
link hypothesized reestablish constraint existing objects satisfied establish constraint object newly created object satisfied 
anchoring literature processes called reacquire find 
uav agent sure hypotheses true continually verify validate current knowledge world 
hypothesis associated maintenance constraints satisfied long hypothesis holds 
constraints violated hypothesis removed 
maintenance hypothesis generation constraints represented linear temporal logic ltl fredrik heintz patrick doherty intervals checked execution monitoring module part dyknow framework 
detailed description see 
applications dyknow subsections show dyknow framework generate fluent streams processing important deliberative functionalities system chronicle recognition execution monitoring 
implemented uav system 
doing provide short description dynamic object repository dor essential part uses dyknow framework provide functionalities system information properties dynamic objects constructed sensor data streams 
dynamic object repository dynamic object repository dor essentially soft real time database construct manage object linkage structures described section 
dor implemented corba server image processing module interfaces dor supplies vision objects 
task procedures mta access feature information objects dyknow framework creating descriptors fly constructing linkages 
computational units provide values feature properties associated objects 
example location process involving features vision helicopter camera objects addition information gis computational units output geographical coordinates 
update positional features world objects linked specific vision objects question 
objects referenced unique symbols created symbol generation module part dor 
symbol typed pre defined domains car world object vision object vehicle symbols members domain instantiate feature representations indexes collecting information features take symbols arguments 
domains collect symbols certain type object conveniently ask information collections aggregates objects 
example take vision objects process particular feature certain manner 
application chronicle recognition chronicles represent complex occurrences activity described terms temporally constrained event structures 
context event dyknow defined change value feature 
example traffic monitoring application uav fly intersection try identify vehicles turn left right drive straight specific intersection 
scenario uav may interested identifying vehicle overtaking 
complex activities defined terms chronicles 
witas uav crs chronicle recognition system developed france telecom 
crs extension ixtet 
chronicle recognition module wrapped corba server 
example suppose recognize vehicles passing intersection 
assume cars identified tracked uav camera hovers particular intersection 
recall dor generates maintains linkage structures vehicles identified tracked 
assumed structured features exist pos position dor policy car road segment dor pos policy car crossing dor policy car pos feature car object fluent stream accessed dor part linkage structure 
complex feature value calculated computational unit takes geographical position world object associated car object argument uses index gis return road segment vehicle 
similarly complex feature value produced computational unit takes fluent stream input returns boolean output stream representing car crossing calculated lookup gis 
sake brevity car defined pass intersection road segment type crossing eventually road segment crossing road segment crossing 
case fluent stream generated generates samples going false true eventually true false certain time frame car recognized passing crossing 
chronicle recognition system receive streams recognize change events match chronicle definition recognize car passed crossing 
stream requires modification policy specifies monotonic time constraint change constraint 
monotonic time constraint sure stream ordered time stamp events increase monotonically 
change constraint specifies change defined stream 
alternatives change policy difference previous current value change absolute change policy absolute difference previous current value larger parameter delta change relative change policy normalized difference previous current value larger parameter delta change 
fredrik heintz patrick doherty obvious variations policies different types signal behavior 
example want deal oscillatory values due uncertainty data example intended provide overview dyknow modules simplified 
application execution monitoring witas uav architecture execution monitoring module temporal logic ltl linear temporal logic intervals provides succinct syntax expressing highly complex temporal constraints activity uav internal environment aspects embedding environment 
example safety liveness conditions easily expressed 
due page limitations briefly describe functionality 
essentially appeal intuitions viewing bundles fluent streams partial models temporal logic evaluating formulas relative model 
case model fed piecewise state wise execution monitor state extraction mechanism associated execution monitor 
special progression algorithm evaluates formulas current state returns new formula true states imply formula true complete time line generated 
dyknow system ideal generating streams feeds execution monitor 
suppose sure task procedures invocations reactive layer called execute parallel 
example may want camera resource 
safety condition expressed ltl temporal formula tp name tp running true tp name tp true formula modal operator times 
monitor condition execution monitor requires fluent streams possible instantiations parameterized features tp name tp running generated reactive layer 
fed instantiated execution monitor applies progression algorithm temporal formula relative fluent streams generated dyknow framework 
algorithm run continuously 
formula evaluates false point alert message sent monitor set functionality interested information modifications system configuration 
related dyknow framework designed distributed real time embedded environment developed top existing middleware platform real time corba real time event channel dyknow notification forthcoming real time notification services 
purposes creation knowledge processing middleware capability framework interconnecting different knowledge representation reasoning services grounding knowledge sensor data providing uniform interfaces processing management generated knowledge object structures 
framework quite general intended serve platform investigating number pressing issues associated processing knowledge robotic platforms soft hard real time constraints 
issues include anchoring generally symbol grounding signal symbol transformations information fusion contextual reasoning focus attention 
examples application services middleware capabilities execution monitoring services anchoring services chronicle recognition services 
aware similar frameworks framework uses ideas diverse research areas mainly related real time active temporal time series database data stream management area knowledge representation reasoning 
main differences dyknow database data stream approaches different data model concepts features fluents views representations feature data system different properties depending context feature described policy 

abadi carney cetintemel cherniack convey lee stonebraker tatbul zdonik 
aurora new model architecture data stream management 
vldb journal august 

brian babcock babu datar rajeev motwani jennifer widom 
models issues data stream systems 
proceedings st acm symposium principles database systems pods 

coradeschi 
anchoring problem 
robotics autonomous systems 

doherty 
advanced research autonomous unmanned aerial vehicles 
proceedings th international conference principles knowledge representation reasoning 

doherty granlund sandewall 
witas unmanned aerial vehicle project 
proceedings th european conference artificial intelligence pages 

doherty heintz merz persson 
distributed architecture autonomous unmanned aerial vehicle experimentation 
proceedings th international symposium distributed autonomous robotic systems 

eriksson 
real time active databases survey 
proc 
nd international workshop active real time temporal database systems 
fredrik heintz patrick doherty 
ghallab 
chronicles representation line recognition learning 
proceedings international conference knowledge representation reasoning kr 

pradeep gore douglas schmidt chris gill irfan pyarali 
design performance real time notification service 
proc 
th ieee real time technology application symposium may 

stream group 
stream stanford stream data manager 
ieee data engineering bulletin 

gruber krishnamurthy panagos 
corba notification service design challenges scalable solutions 
th international conference data engineering pages 

tim harrison david levine douglas schmidt 
design performance real time corba event service 
proceedings acm sig plan conference object oriented programming systems languages applications oopsla volume acm sigplan notices pages new york october 
acm press 

fredrik heintz patrick doherty 
dyknow approach middleware knowledge processing 
journal intelligent fuzzy systems 

fredrik heintz patrick doherty 
managing dynamic object structures hypothesis generation validation 
proceedings aaai workshop anchoring symbols sensor data 

ben 
kabanza 
reasoning robot actions model checking approach 
advances plan control robotic agents lnai pages 

object computing tao developer guide version 
see www cs wustl edu schmidt tao html 

richard snodgrass 
temporal real time databases survey 
ieee trans 
knowl 
data eng 

douglas schmidt 
adaptive reflective middleware distributed realtime embedded systems 
lecture notes computer science 

douglas schmidt 
middleware real time embedded systems 
communications acm june 

douglas schmidt fred kuhns 
overview real time corba specification 
ieee computer june 

schmidt angelika kotz dittrich werner dreyer robert marti 
time series neglected issue temporal database research 
proceedings international workshop temporal databases pages 
springer verlag 
