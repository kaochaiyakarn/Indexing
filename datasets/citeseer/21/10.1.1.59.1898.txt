markets don currently solve resource allocation problems systems jeffrey chaki ng david parkes alvin alex snoeren amin vahdat brent chun harvard university university california san diego intel research berkeley market mechanisms resource allocation distributed systems new idea caught practice large body computer science research 
projects markets distributed resource allocation recur years new generation research exploring market resource allocation mechanisms distributed environments planetlab netbed computational grids 
goals 
goal explore markets appropriate allocation simpler allocation mechanisms exist 
second goal demonstrate new look markets allocation timely re hash previous research 
third goal point thorny problems inherent market deployment suggest action items market designers greater research community 
optimistic power market design believe key challenges exist markets systems integration overcome market computer resource allocation systems succeed 
problem 
past decade witnessed emergence systems owned deployed multiple self interested stakeholders 
consider differences traditional distributed systems current distributed environments planetlab netbed computational grids 
current environments properties resources users complicated needs 
multiple self interested parties supply consume sets resources machine time bandwidth 
users demand large sets controlled resources creating large combinatorial allocation problem easily solved techniques social pairwise agreements 
resource demand exceeds resource supply 
previous graphically demonstrated problem planetlab machine load times system capacity 
scientific computing grid users expect problem deploy experimental testbeds 
job selection committee 
scale design goals systems preclude administrative body handle resource allocation 
incentives external constraints limit supply 
political financial geographic limitations prevent additional hardware deployments solve cases resource contention 
commercial servers financial incentive support peak user load resource providers shared environments usually little incentive add resources shared system 
testbed sensitive experimentation 
shared environments planetlab network target research 
tragedy commons develop overlapping usage consumes resources point disutility users unable run certain class measurement experiments accurately 
computer systems reached point goal distributed resource allocation longer maximize utilization demand exceeds supply needs met needs policy making resource allocation decisions 
researchers planetlab central grid planners started consider intelligent ways allocating resources simple best effort randomized allocation schemes 
methods involve social policy resource distribution 
policy simply set rules allocation resource demand exceeds resource supply 
candidate policy seek efficient usage directs mechanism allocate resources set users highest utility resources 
social policies exist favor small experiments favor underrepresented stakeholders money involved seek maximal revenue generation 
implement mixture policies meet complex social goal 
past deployments distributed system schedulers condor focused maximizing utilization designed support complex social policy 
today schedulers take full utilization common case focus solving resulting resource contention problems 
explore idea mechanisms address resource allocation problems distributed systems 
sections explore markets may useful required tool research warrant new consideration systems researchers 
special challenges arise markets computational resource allocation 
challenges section prove overwhelming depending response systems community collective ability address concerns 
feel critical time systems community consider various resource allocation capabilities supported generation distributed systems uninformed decision simple necessity leads desirable de facto standard 
role markets interested performing policy directed resource allocation consider allocation schemes market 
market way buyers sellers exchange goods 
applied computer resource allocation traded goods right certain amount system resources set machines 
demand exceeds supply markets provide goal oriented way allocating resources competing interests meeting social goal 
natural goal maximize happiness utility users 
users complex needs achieving goal easy individual users system tasked making allocation decision 
return issues section consider advantages markets computational resource allocation 
deploying computational market resource allocation systems domain benefit research 
constituency ignored rest experimental economists economically minded computer scientists 
rarely economists opportunity deploy market economy comparison 
computational mechanism design emerging topic partly results apply different domains merit asking systems researchers research subjects attempt market mechanism 
systems researchers second constituency interested knowing proposed market allocation projects system offspring solve real problems distributed resource allocation 
programmatic alternatives markets resource allocation 
include simple come served allocation reservation systems elaborate systems automated voting schemes devices 
simpler ideas market systems naturally address new world system characteristics described section 
market systems provide socially optimal project director resolve 
simpler mechanisms markets support rich set social goals finding efficient allocation decision 
natural way reach efficient decision require users quantify perceived benefit winning resource request 
market encourages participants resources wisely tries usage decision maximize value 
provide incentives growth 
markets currency express value acts medium exchange 
currency open acquire multitude goods services currency resource providers expand services 
contrast closed currency growth receiver currency receipt 
currency create medium allow market invisible hand currency natural means easy valuation expression allocation algorithms require currency 
example matching algorithms link medical residents united states 
setting medical students residency programs bid prioritization scheme bids resolved winner determination algorithm 
blush matching market appropriate systems resource allocation problems sellers preference uses resources 
reward provide useful resources network 
markets provide set payment rules transfer currency buyers sellers 
provide vocabulary describe complex resource bundles 
system administrative users need mechanism express resource holdings desires 
markets decades capture difficult resource allocation problems energy markets wireless spectrum auctions airline landing slot exchanges capture intricacies systems problems 
bidding languages studied tradeoffs expressivity compactness existing languages directly applied computer resources 
link cross testbed experimentation 
multiple closed distributed systems run parallel offer unique resources access specific scientific equipment 
imagine physics researcher willing provide access beowulf cluster wishing consume resources produced data collectors cern completely separate network 
linked market mechanisms quantify value cluster time sold network value cern resource purchased network manner similar real economies linked currency exchange 
ongoing research exchange mechanisms computational systems vision feasible 
vu idea markets pricing computer resources quite old 
pricing policies received considerable attention dawn modern multi user time sharing systems 
papers late dedicated automated pricing policies computer time 
research short lived 
complexity schemes relative benefit combined environment time shared systems cooperative controlled single entity quickly pricing shared resource allocation low priority 
shared resource allocation remained hot topic operating systems goal research maximizing utilization clever scheduling 
contrast schedulers promote social goals efficient usage widely investigated 
said past systems take market approach resource allocation 
new research markets distributed resource allocation different 
believe number developments timing right revisit question market models appropriate importantly required emerging computational environments 
new research take advantage developments pressing demand 
past market systems saw real field testing contention artificially generated 
today deployed market system immediate usage solve real resource conflicts 
real usage data help researchers calibrate evaluate market resource schedulers 
previous mechanism designs able take advantage user feedback drive mechanism design process 
improved operating system infrastructure 
past systems deal limitations infrastructure lack user authentication kernel supported resource isolation 
today systems research produced tools bsd xen linux provide resource isolation adopted enforce allocation decisions 
expressive market design 
previous bidding languages artificially limited expressive power 
past decade tremendous advances theory practice expressive market design 
current mechanisms support combinatorial bidding naturally captures resource needs 
instance modern bidding languages easily represent logical combination goods xor choose 
expressive power exist previous mechanism deployments 
scalable mechanisms 
solving large resource contention problems traditionally computationally expensive 
fortunately significant advances theory solving large scale mixed integer optimization problems underlying technology suited implementing market problems 
theory reflected shelf solvers cplex 
significant breakthroughs arisen cutting plane techniques branch cut preprocessing achieve efficient solving 
markets systems integration challenges despite general optimism ultimate success deployed mechanism measured usage usage depends number factors typically overlooked computer science researchers 
ease may trump mechanism features 
people may willing accept limitations simpler systems come randomized allocation market systems seen complex fail ways accepting simpler system means ignoring characteristics described section 
section articulate addressed market systems integration successful 
opinion challenges market details 
think biggest challenges adoption systems come understanding supporting mechanisms 
presenting challenge consider action items general systems community systems market designers appropriate 
view markets systems integration fail challenges overcome allocation policy explicit 
uncomfortable realities market forces user communities confront social allocation rules 
people want allocative efficiency 
people want testbeds self sustaining policies imply taxation 
people want favor jobs underrepresented users 
real world uses markets definite mandates 
example years running lottery allocate wireless spectrum congress resulting allocation inefficiency mention possibilities revenue generation government initial sole seller mandated employ efficient allocation mechanism 
clear social choice necessarily meant market 
community action items general mandate systems community social goal allocation scheme 
systems community cares simpler goals efficiency revenue generation systems market designers trying develop auction mechanisms 
mandate come 
hotos participants 
planetlab central 
grid users 
dividing resources seller 
markets complex commonly understood systems interactions computer resources complicating allocation decision 
consider system allocates hard resources cpu memory disk allocation memory meaningless small cpu associated allocation 
virtual memory involved disk needs allocated effects swapping dominate time required run experiment 
associations explicit case minimum resource bundles purchased side effects constrain allocation characteristic winning bids 
systems market designer action items tools partitioning resources developed long way go capture pertinent resources trivial resource interactions 
predicting needs buyer 
difficult describe precisely level resources required run experiment job 
depending inputs program ideal level resource consumption vary dramatically 
tangible penalty resource need bids advance resources available 
order match buyers sellers current market resource allocation schemes batch allocations blocks time 
time scale batch system minutes days ahead resources available 
means users predict resource needs advance 
resource prove unsatisfying won resource value win competition efficient users 
requiring users predict resource need new user behavior forecasting problem difficult 
community action items general systems community think building tools help users estimate resource needs 
users shared environment access best effort staging ground able gauge resource usage 
imagine research tools modeling analysis attempt capture resource profile wide area application 
tools open area ongoing research 
systems market designer action items ongoing research online market mechanisms making allocation decision seeing bid activity designers develop markets rigid clearing time frames meeting social goals 
valuing resources 
utility maximizing market mechanisms accurate values users assign bids goods possess goods acquire 
user true value hours cpu time week major conference deadline 
situation demand exceeds supply lead unhappy users variation question exists resource allocation scenario 
ultimately requirement market users place value resource needs holdings 
problems calculating value computational systems 
label problems defined currency calculating expressing valuation defined currency 
previously deployed computational markets virtual currencies real cash 
low barrier utilization low stakes case deployment error simple closed virtual currencies attractive developers 
scenarios easy skip monetary policy considerations currencies 
bootstrapping advantages virtual currencies require initial thought ongoing care function properly 
virtual currencies suffer lack liquidity making difficult convert virtual currency 
result currencies quite limited certain users willing sell resources euros un 
furthermore virtual currencies suffer starvation heavy consumers run currency spend depletion users leave system hoard currency reducing total amount currency available inflation users added system initial credit 
previous research attempts address faults virtual currency systems monetary policies administrative measures virtual currency expressive appreciated users 
believe success computational resource exchange tied defined currency 
attempting create currency turn real money medium exchange 
reason real currency may increase resource contribution ease maintenance distributed environments 
netbed planetlab example entities passive light users may see value maintaining portion network initial required contribution 
users may respond allocation closed virtual currency may respond real money 
real currency help increase participation distributed system supply demand set price contributed resources network way rewarding provide useful offerings network 
real currency provide lower barrier entry new users create self sustaining shared environment charging new organizations fixed usage fee relying external money support imagine transaction interesting note new breed multi player online games virtual game currency component 
operators online games openly support exchange currency real currencies attempt keep currency closed effectively players open closed currencies spawning parallel side exchange markets 
fees support development testbed 
believe technical reason prevents real currencies shared environments 
numerous political fairness concerns idea 
researchers don idea having resource request denied researchers pay money 
observe existing research process potentially creates sort situation 
world demand exceeds supply chosen resolve problem efficiently needs understood way expressing valuation differences 
real currency idea works market time come 
community action items efficiency important social goal see valuation questions big challenge systems community 
wonder users willing try novel old hat markets pay bids real currency 
issues idea force people put money valuations 
systems market designer action items see careful construction virtual currency system alternatively careful construction argument systems 
feel defined currency major stumbling block market adoption systems 
calculating expressing valuation 
difficult user accurately value ideal resource bundles 
needs simple effective way people express resource need calculate value 
stress point imagine market interface asked user valuation question time entire space combinations 
painful approach require user think valuation bundles time consuming difficult task 
area market design received attention computer resources user interface users mechanism 
bidding interface public face market mechanism opinion interface greatest effect user perception acceptance mechanism useful tool 
community action items willing give feedback designers language interface capturing resource desires 
willing suffer bad research designs 
systems market designer action items improving price guidance addressing valuation complexity currently active research areas mechanism design effort continue 
challenges feel time right explore market resource allocation mechanisms see number challenges may hinder applicability systems 
general call better resource allocation clear systems researchers willing accept implications mechanisms achieve certain social goals 
market designs need debated deemed valuable deployed evaluated wild 
waldspurger hogg huberman kephart stornetta spawn distributed computational economy ieee transactions software engineering vol 
pp 
february 
tanenbaum mullender van renesse sparse capabilities distributed operating system proceedings th international conference distributed computing systems pp 

regev nisan popcorn market online market computational resources proceedings st international conference information computation economies october 
wolski plank commerce building computational marketplaces computational grid university tennessee knoxville tech 
rep cs apr 
buyya giddy abramson case economy grid architecture service oriented grid computing proc 
hcw apr 
chun snoeren vahdat resource allocation federated distributed computing infrastructures proceedings st workshop operating system architectural support ondemand infrastructure october 
parkes michael ice iterative combinatorial exchange proc 
acm conference electronic commerce june 
kevin lai fine tycoon distributed market resource allocation system hp labs palo alto ca usa tech 
rep arxiv cs dc apr 
fu chase chun schwab vahdat sharp architecture secure resource peering proceedings th acm symposium operating systems principles october 
grinstein huth schopf resource predictors hep applications proc 
computing high energy nuclear physics chep september 
hardin tragedy commons science 
condor project www cs wisc edu condor nisan ronen algorithmic mechanism design extended stoc proceedings annual acm symposium theory computing 
new york ny usa acm press pp 

roth game theory tool market design fas harvard edu design pdf 
nisan bidding allocation combinatorial auctions proceedings nd acm conference electronic commerce october 
beowulf cluster project www beowulf org cern particle physics experiments www cern ch diamond considerations computer utility pricing policies proceedings rd acm national conference 
acm press pp 

sutherland futures market computer time commun 
acm vol 
pp 

overview multics system www org html 
barham fraser hand harris ho neugebauer pratt warfield xen university cambridge computer laboratory tech 
rep cl tr jan 
online 
available www cl cam ac uk techreports cl tr pdf class kernel resource management sourceforge net sirer karma secure economic framework resource sharing workshop economics peer peer systems berkeley ca 
online gaming gets feeding tube wired com news html 
gaming open market www com 
