probabilistic quadtrees variable resolution mapping large environments gerhard pag klaus uhl university ulm ulm germany probabilistic occupancy grids common proven spatial representation robot mapping 
representing large environments high resolution impose prohibitive memory requirements 
quadtree known data structure able achieve compact representations large dimensional binary arrays 
extend idea probabilistic quadtrees efficient representation storage probabilistic occupancy maps 
discuss implementation probabilistic quadtrees integration robotic middleware system miro 
keywords robot mapping probabilistic quadtrees robot middleware 
problem building maps robots operating office environments intensively studied decades large range solutions proposed kuipers byun kortenkamp 
probabilistic occupancy grids commonly successfully spatial representations robot mapping moravec elfes 
allow represent uncertainty spatial occupancy data arises noisy sensors sonars uncertainty simultaneous self localization see slam problem montemerlo comparatively simple implement 
despite successful application numerous robot applications real world scenarios limitations resolution occupancy maps typically coarse fixed 
remains unclear resolution typically order magnitude precision nowadays commonly sensor obtaining distance data 
plausible reasons historical occupancy maps invented precision sensor choice time map resolution sync 
environments mapped typically laboratory single floor office building 
sufficient typical home robot applications robots office buildings shopping malls may need map larger environments 
map data kept computer memory 
large environments memory requirements occupancy maps gets prohibitive 
want improve resolution increase size mapped environments memory requirements current probabilistic occupancy map techniques increase orders magnitude severely limit applicability 
introduce probabilistic quadtrees representational concept allows variable resolution mapping probabilistic occupancy data 
exploiting low resolution possible high resolution interest probabilistic quadtrees scale large environments 
generic structure supports secondary storage hard disk map data severely reducing need primary storage ram 
section provide quantitative analysis memory requirements spatial occupancy maps introduce summarize concept binary quadtrees identify open problems applying robot maps 
section introduces probabilistic quadtrees including formal definitions illustrative examples 
section provides details implementation probabilistic quadtrees including integration robot middleware system miro section presents experimental data memory compression rates illustrative examples capabilities provided implementation 
sections related open problems draw indicate directions 

mapping large environments purpose section show current techniques scale larger realistic environments outline possible solution problem 
order demonstrate look factors influencing memory requirements evaluate effects changing parameters 
memory requirements current mapping techniques memory requirements probabilistic equidistant occupancy grid map influenced length width environment meters grain dimension simplicity assumed equal dimensions determined resolution meters describes number grid cells unit dimension number floors mapped unit length bits information stored grid cell usually bytes float 
memory requirement equidistant grid map example maps shown published research papers cover area grain length square grid cell cm cm cover single floor bytes information grid cell amounting total memory requirement kb poses problem system development 
challenges robot applications real world office scenarios pose harder challenges 
main building university ulm example covers area floor levels 
public buildings shopping malls exhibition centers larger 
mapping techniques scale environment sizes just square floor levels 
furthermore mobile robots equipped reasonably dexterous manipulators environment maps may need higher resolution range cm achieved current sensor technology laser range finders 
advanced applications create need storing additional information location degree volatility occupancy information information aiding navigation 
altogether advances amount increase memory requirement orders magnitude 
example story building cm resolution floats grid cell require gb memory 
clearly cost effective robot applications memory size available ram just occupancy mapping 
solution approach propose apply techniques spatial representations variable resolutions secondary storage techniques motivated fact increasing resolution equidistant occupancy grids results spatial detail precision renders representation typical objects effective 
consider singular object desk size cm cm 
occupancy grids cm resolution desk cover grid cells 
map cm resolution cover grid cells 
lot memory representing information single object 
exploiting similarity occupancy values spatially neighboring grid cells applying variable resolution larger areas mapped lower 
representation techniques possible reduce memory requirements 
motivated fact despite need map represent large environments robot times single location sense part environment covered range sensors move comparatively low speeds say path planning purposes parts map typically needed main memory sufficient time available load map pieces stored secondary storage spatial objectoriented database system 
technique known straightforward integrate techniques variable resolution mapping probabilistic occupancy information 
remainder concentrate issue 
representations variable resolution quadtrees variable resolution representation technique developed years ago samet order yield compact representations binary images 
standard form quadtree tree consisting nodes labeled colors black white gray 
order represent rectangular typically square area binary image consisting black white pixels looks image 
pixels color tree consist single node labeled color black white 
node labeled color gray receives descendant nodes represents smaller areas obtained dividing original area half dimension 
node procedure applies recursively node colored black white 
note nodes required build tree structure worst case quadtree representation memory simple binary array representing image grid 
case image perfect checkerboard structure alternating black white pixels dimension 
fortunately worst case overhead limited full fledged array 
vast majority practical applications significant compression factors achieved technique memory requirements reduced orders magnitude 
open challenges quadtrees appropriate concept implementing variable resolution mapping techniques open challenges standard quadtree designed represent binary data leaves occupancy maps represent probabilities leaf data range 
nodes standard quadtree merely represent fact look deeper tree 
probabilistic occupancy information representing aggregate information useful 
information stored nodes leaves needs extended information related exploration environmental dynamics 
equidistant occupancy grids easy path planning partly trivial determine neighboring cells 
determining neighboring cells standard quadtrees difficult takes effort done may impose non performance penalties path planners 

probabilistic quadtrees extending basic idea quadtrees various ways challenges met 
assume probabilistic quadtree consist set nodes ni pointer attributes pointer links node ancestor predecessor tree retrieved function pred pointers link node descendants successors tree retrieved function succ 
predicate root holds exactly node tree predicate leaf holds leaves tree 
level node quadtree retrieved lvl 
equations formalize constraints hold quadtrees root red null leaf succ null root succ pred lvl lvl pred root extension concerns representation probabilities 
node represent occupancy value occ 
leaf nodes occupancy value interpretation cells grid map likelihood potentially part area represented cell occupied 
non leaf nodes occupancy value set mean occupancy values descendants leaf occ occ succ furthermore occupancy values nodes uniquely classified distinct classes classification function col 
characterized sequence strictly monotonically increasing constant values 
lk lk follows col lc occ lc probabilistic quadtree called 
definitions construct probabilistic quadtrees grid maps 
order achieve compression need specify tree pruning rule allows cut tree branches providing little information 
standard quadtrees branches descendants labeled color pruned 
probabilistic quadtrees assume achieve reasonable compression hope branches exactly occupancy values 
base pruning rule occupancy value classification descendant nodes fall class nodes pruned 
formally col succ leaf succ prune succ succ null note definition occupancy value non leaf nodes equation equivalent statistical mean 
having value non leaf nodes allows view interpret probabilistic quadtree hierarchical level 
shows derived explored map full detail illustrates coarser view 
additional statistical measures easily represented node 
current implementation represent minimum maximum occupancy values leaf min min min succ leaf max max max succ classes called colors resemble historical notion node values standard quadtrees 

full detail 

coarser view previous 
shows maximum values view coarse 

maximum values view 
helpful statistical measure probabilistic quadtrees variance var occupancy values contains weighted size var vc occ function vc defined follows vc occ leaf vc succ variance measure interesting area beautifully illustrated variance view 
note 
variance view 
leaf nodes minimum maximum values equal occupancy variance zero 
common robot maps path planning navigation purposes need determine neighboring cells 
supported probabilistic quadtrees storing neighborhood connectivity information leaves quadtree nodes 
quadtree leaf node stores neighborhood trees direction 
neighborhood tree node consists simply pointer adjacent cell lvl lvl lower quadtree level pointers adjacent cells stored maintained binary tree illustrated 
tree structure applied eases 
neighborhood connectivity tree leaf 
maintenance neighborhood relations updates cause structural changes 
example neighborhood graph shown 
quadtree node data structure includes vector binary flags marks 

flags variety purposes path planning execution 
superimposed neighborhoods 
flagging dangerous forbidden zones 
functionality implement marker passing algorithms flags provided 

implementation middleware integration developing complex robot applications requires development distributed realtime software systems sensorimotor systems generally consisting heterogeneous hardware tedious error prone task 
lab started develop corba robot middleware miro years ago stable implementations exist variety platforms successfully applications development 
major component miro class framework providing useful functionality sufficiently generic manner 
probabilistic quadtrees included class framework 
miro functionality related consist definition service implementation server provide service example clients demonstrating service functionality tool viewing 
quadtree service includes functionality implementing iterators partial underlying areas turned useful practical applications 

experimental evaluation motivation included argument need compact variable resolution representations robot maps 
memory save applying probabilistic quadtrees vs occupancy grid maps 
order answer question performed experiments sets maps artificially created naturally explored grid maps resolution cm pre grid cell 
sets computed class class class map determined ratio grid map cells nodes 
table shows smallest largest average compression ratios standard deviation data sets 
results table 
compression ratios artificial maps min max mean std 
dev 
class class class explored maps class class class compression rates 
vast majority maps orders magnitude times smaller respective grid map 
general observation experiment compression rates tend better larger maps 
better compression rates orders magnitude expected increase map resolution cm grid cell 
artificial maps show slightly worse results constructed testing special hard cases mapping representative natural environments 

related variable resolution representations entirely new 
burgard describe markov localization approach uses discretized dimensional grid describing position belief burgard 
probabilities stored vast majority grid usually small yield compact representation position belief replacing small probabilities values constant applying 
leave nonnegligible probabilities intact get compression areas 
approach useful localization cases densities concentrated islands 
approach applied compactly store maps probabilities differently distributed space 

probabilistic quadtrees turn viable practical solution variable resolution mapping large environments 
comparatively easy build maintain achieve compact representations allowing increased map resolution 
working implementation built integrated robot middleware miro 
include integration database system storing secondary storage demand loading system memory exploitation mapping navigation 
acknowledgments head department nther palm continuing support hans gerd mayer help support maintain miro 
burgard wolfram andreas dieter fox armin cremers 
integrating global position estimation position tracking mobile robots 
proceedings iros 
elfes alberto 
occupancy grids mobile robot perception navigation 
ieee computer 
stefan 
probabilistic spatial representations mapping self localization autonomous mobile robots 
dissertation 
university ulm 
ulm germany 
kortenkamp david michael 
cognitive maps mobile robots representation mapping navigation 
phd thesis 
university michigan 
kuipers benjamin yung tai byun 
robot exploration mapping strategy semantic hierarchy spatial representations 
journal robotics systems 
montemerlo thrun koller wegbreit 
fastslam factored solution simultaneous localization mapping problem 
proceedings aaai national conference artificial intelligence 
aaai 
edmonton canada 
moravec 

sensor fusion certainty grids mobile robots 
ai magazine 
samet hanan 
design analysis spatial data structures 
computer science 
addison wesley 
hans stefan stefan gerhard 
miro middleware mobile robot applications 
ieee transactions robotics automation special issue object oriented distributed control architectures 
