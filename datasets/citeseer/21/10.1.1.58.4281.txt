semantics xml markup allen david graduate school library information science university illinois urbana champaign uiuc edu xml document type definitions provide mechanism specifying machine readable form syntax xml markup language comparable mechanism specifying semantics xml vocabulary 
way characterize meaning xml markup facts relationships represented occurrence xml constructs explicitly comprehensively mechanically identified 
serious practical theoretical consequences 
positive side xml constructs assigned arbitrary semantics application areas foreseen original designers 
positive side content developers application engineers rely prose documentation worse conjectures intention markup language designer process time consuming error prone incomplete language designer properly documents language 
addition lack substantial body research markup semantics means digital document processing engineering application area 
related projects underway xml schema rdf semantic web provide relevant results projects directly comprehensively address core problems xml markup semantics 
summarizes history concept markup meaning ii characterizes specific problems motivate need formal semantics xml iii describes ongoing research project markup semantics project attempting develop semantics 
categories subject descriptors document preparation document text processing markup languages general terms theory standardization keywords sgml xml markup semantics knowledge representation permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
november mclean virginia usa 
copyright acm 
sperberg mcqueen world wide web consortium mit laboratory computer science acm org claus department culture language information technology bergen university research foundation claus hit uib 
consequence rapid advances digital publishing explosion www applications growing interest electronic commerce aspects daily social commercial cultural lives involve systems sgml xml document markup 
sgml xml provides rigorous machine readable technique defining descriptive markup languages languages explicitly identify underlying meaningful structure document apart intended processing 
expectation motivating sgml xml approach widespread specification support high function interoperable document processing publishing systems 
expectation partly fulfilled superiority sgml xml approach earlier strategies confirmed remain continued opportunities improve functionality interoperability heterogeneity accessibility sgml document processing 
practical consequences failure seize opportunities serious industry wide scale considerable financial costs lost opportunities safety critical applications result disaster impact perceptually disabled prevent equitable access cultural commercial benefits contemporary society 
continuing existence problems reminds best models digital document processing remain flawed underdeveloped 
source problems sgml xml thought providing access document meaningful structure current sgml xml methods represent fundamental semantic relationships document components features systematic machine processable way 
sgml xml supports specification machine readable grammar mechanism providing semantics grammar sgml xml vocabulary means formally specified 
simple fundamental semantic facts document markup system facts routinely intended markup language designers relied markup language users software inexpressible current sgml xml document formalisms 
result sgml xml markup language users guess semantic relationships markup language designer mind way formally express 
content developers conjecture believe mind markup language designer rely inferred relationships encoding content content developers turn way formally represent inferences intentions software applications process encoded content 
software designers guesses intentions markup language designers reflect design software tools applications 
fact second order conjecture necessary software designers guess content encoders inferred markup language designers meant 
obviously conjectures incomplete error prone time consuming implement resulting high costs low levels functionality interoperability 
natural language prose documentation accompanies sgml xml specification wholly satisfactory solution problem 
prose documentation course provide assistance content providers software engineers established common principles developing sgml xml documentation case prose documentation machine readable formalism required address current problems sgml xml markup systems 
absence sgml xml provision machine processable semantic description constructs defined noted number researchers identified source current engineering problems obstacle development nature needed semantics remains little studied 
schema effort relevant takes small subset problems data types 
semantic web activity relevant agenda develop xml techniques knowledge representation general project focuses document markup semantics latent existing document processing systems say semantic web effort designing semantic markup solution problems identified requires markup semantics 
follows issue meaning markup historical context plays interesting role evolution approaches document processing ii characterize specific problems motivate perceived need formal semantics markup determine requirements satisfactory semantics iii briefly describe ongoing research project markup semantics project attempting develop semantics 

historical context document markup arguably considered part communication system including early writing publishing printing emergence digital text processing typesetting markup self conscious explicit important area innovation systems development 
particular saw extensive systematic development document markup systems typically focused improving efficiency functionality digital typesetting text processing 
early efforts develop theoretical framework markup framework support development high function systems 
published scientific literature recorded working documents products various standards bodies 
key ideas emerged period notion documents qua intellectual objects best modeled ordered hierarchical structures objects chapters paragraphs equations instance dimensional streams text characters interspersed formatting codes structures design objects pages columns typographical lines matrices pixel values representational strategies implicit existing document processing storage systems 
model generalized existing natural distinction markup identified editorial text objects titles chapters markup specified formatting instructions 
allowed level indirection provided advantages 
document elements titles chapters sections paragraphs equations quotations explicitly identified delimited markup processing indirectly applied rules mapped procedures types elements 
separation processing content implementing basic level indirection abstraction usual combinatoric economies immense varied practical value aspects document processing reflect correct engineering model document really 
descriptive markup implement approach just mark element boundaries carried meaning text chapter needed realize specific underlying document model 
influential sgml document markup meta grammar emerged ansi iso effort early reflected preceding theoretical analytical markup document structure 
sgml provides machine readable formalism defining descriptive markup languages 
metagrammar sgml define markup language specifies techniques developing machine readable definition markup language 
central mechanism definition bnf formalism additional rules specifying typed attribute value pairs devices abstraction indirection 
see warnings degree similarity dtds bnf 
structurally sgml document instance tree ordered branches labeled annotated nodes formal production corresponding dtd 
fundamental ideas sgml years analysis practical experience compelling 
addition specific mechanisms sgml bnf metagrammar typed attribute value pairs entity promised high function implementation applications tools benefits industry wide standardization meta grammar level local innovation level vocabulary 
sgml markup language development process support refine natural ideal workflows document systems design implementation 
mid early number sgml markup systems developed 
despite care taken development sgml sound field proven nature ideas success implementations little adoption success decade 
number circumstances contributed principal reason complexity standard including fact sgml incorporated complicated optional features conforming software need implement 
sgml software development consequently proceeded slowly 
result confusions non validating parse document possible processing dtd abbreviation options meant element boundaries reliably determined document grammar 
addition sgml includes features resulted formal grammar unsuited existing parser development tools difficult write efficient parsing routines 
eventual widespread sgml systems networked publishing communication result html hypertext markup language 
initial versions loosely defined lacked formal specification syntax interest sgml dtd html developed proved difficult design dtd fact accommodate established correct practice 
importantly key distinction descriptive procedural markup ignored developers users alike html vendors casually added obviously procedural markup center predominantly descriptive markup title original html specification 
descriptive parts html little reflect document hierarchy specification provided stylesheet language support indirection 
sgml mechanisms extending element set alternative element sets assumption html documents processed generic sgml processors allow extensions alternative dtds html specific formatters processed html elements formatting rules hard coded processor 
subsequent evolution html seen effort evolve casually developed original html language sort sgml language designed time resources apply established principles document system design 
time pressure newly formed allow new element sets provide sgml web 
soon recognized flaws sgml obstacle project generally realizing advantages sgml descriptive markup web 
problems included number optional features sgml complexity formal grammar need refer dtd determine element boundaries 
order ensure html related technologies easily benefit advantages metagrammar users easily develop share new domain specific elements documents parsed trees elements dtd sgml tool application development broken created subset sgml intended provide simpler standard options simpler grammar support non validating processing documents dtds 
metagrammar xml released recommendation year half development 
explosion new xml markup languages rapidly expanding growth continues today 
explosion result factors 
demand new markup systems special domains caused increasing network electronic publishing science medicine business law engineering specialized areas large domains 

lowering cost complexity developing new tools applications result simplicity parsing xml compared sgml 
xml markup support integration sorts processing communication publishing applications support integration application unrelated publishing 
reason optimistic 
powerful easily implementable technique creating high performance markup languages digital documents document processing publishing systems integrated information management applications 
particular prospect having deep processable purchase underlying meaning document structure promises extraordinary new functionality releasing automated processing information inaccessible impractical amounts human intervention 

problem unfortunately experience reflection clear understanding descriptive markup conveys meaning techniques supporting expression processing meaning inadequate realize fully promise 
theorizing document markup took place focused things 
conceptualization general document model 
development techniques formal specification vocabulary syntax document markup languages define specific classes documents represent actual documents instances model 
development markup languages aap tei html identifying annotating logical parts document descriptive markup language explicitly delivered meaning implicit best procedural markup making meaning unambiguous explicit available mechanical processing 
people refer xml documents self describing data 
early voices see importantly raymond tompa initial period descriptive markup enthusiasm drew close appeared document researchers felt need expressive representation 
defined sgml markup language delivered meaning latent document structure making fully efficiently available processing 
sentence authored authors article selected leading quotation issue tex users group journal clear descriptive markup just best approach competing markup systems best imaginable approach 
experience shown confidence entirely warranted 
situation today certainly improved practical point view pattern repeated failures interoperation functionality evident sgml xml really succeed providing explicit machine processable way meaning latent document structure meaning indirectly inferred 
rigor element attributes sgml xml dtd matched similar rigor rest document type definition part formalized 
grounds needed inference different sure doubt improved situation qualitatively dissimilar pre sgml document processing think key determinations meaningful structure human beings reflecting relatively implicit ambiguous cues 
reflection nature dtd shows dtd presents vocabulary syntax vocabulary provide semantics vocabulary 
ordinary meanings title meant title title means ordinary mean title undetermined dtd dtd specifies certain element label character string title may certain combinations elements elements similarly defined 
title means simply inferred content developers markup language represent document software developers designing software natural language associations name title natural language context 
meaning title presumably originally head language designer expressed systematic rigorous way 
course situation 
meanings markup constructs may course expressed sense naturallanguage prose documentation provided developers markup language 
clearly fully solve problem dtds documented best industrial academic practices 
software reflect semantic relationship markup language language designer indicate relationship documentation software engineer seek find open study markup language documentation design application take advantage features 
steps machine verifiable happens reliability wished 
need manual interventions obstacle development high performance networked document processing publishing systems 
needed mechanism allow markup language designer rigorously formally specify semantic relationships specifications read processing applications configure accordingly case case human intervention 
take look specific examples 
relationships potential practical importance easily systematically exploited standard machine processable formalisms representing 
fact sufficiently important software designers proceeding ad hoc way infer existence prose documentation build idiosyncratic systems 
class relationships sgml xml contains general constructs expressing class hierarchies class membership elements attributes attribute values fundamental practical relationships important constructs contemporary software engineering 
way say paragraph prose structural element isa relationship prose structural elements editorial elements relationship 
native sgml xml constructs achieve rudimentary lines attribute value pairs particularly type class attributes parameter entity 
techniques expressively weak re purpose mechanisms designed uses mind sgml xml provide mechanisms controlling constraining practice reveal document type designers class hierarchies 
xml schema provide explicit declaration class relations specify derivation complex types complex types means semantic level 
propagation markup languages tei html version certain properties propagated contained elements cases textual content 
instance element attribute value notation lang de indicating text german implied absent defeat see child elements property german 
dtds provide formal notation specifying attributes propagated 
assumed propagation monotonic defeated explicit reassignment attribute value contained element 
variety different sorts propagation involving properties associated elements properties associated attributes having textual content element content target 
instance markup indicates sentence german implies word sentence attribution defeated german similarly words phrase marked deleted deleted words phrase marked emphasized emphasized case marking component paragraph implies contained words elements paragraphs 
specify dtd properties propagate logic propagation including rules defeat relationships regularly inferred correctly incorrectly software designers developing software particular markup language implemented tools applications 

context markup languages element title may different meanings inferred context sufficiently invariant core meaning justify element type 
instance title mark text title relying structural location title indicate referent 
title head means title object document title chapter means title enclosing chapter 
mechanism saying title title cases title immediate parent title root element 
complication bibliographic entry contains title element title question title entity external text 
relationships expressed dtd inferred software designers essential high function automated processing text 
part problem solved different generic identifiers sense necessary articulate dyadic nature property expressed supply resolvable deictic expression order locate objects property applies ontological variation similar radical sort ambiguity occurs properties assigned forms suggest identical referents require careful interpretation ensure identity 
instance attributes may indicate particular element instance theorem isin german 
straightforward interpretation predicates referring thing element instance really robust knowledge representation purposes 
sentences german propositions express theorems rendered concrete expressions strictly speaking single object properties 
full partial synonymy full partial synonymy markup languages extremely important semantic relationship lack mechanisms characterize create serious problems heterogeneity 
full synonymy may eliminable single markup language full partial synonymy difficult important relations markup languages particularly number markup languages rapidly increases 
currently suitable formal machine processable way document synonymy elements attributes attribute values different languages architectural forms see capture cases full synonymy partial synonymy difficult document common practice 
partial sort represented class inclusion relationships go long way resolving problems heterogeneity 

project markup semantics project grew research initiated sperberg mcqueen mit late partnership research staff faculty department culture language information technology bergen university research foundation graduate school library information science electronic publishing research group university illinois urbana champaign 
name project acronym formed names cities cooperating investigators located bergen norway champaign illinois espa ola new mexico 
project research goals 
characterizing representation inference issues germane document markup semantics developing taxonomy description problems semantics aware document processing system solve address 

surveying properties semantic relationships common popular markup languages evaluating applicability standard knowledge representation technologies semantic networks frames logics formal grammars production rules respect expressive adequacy elegance parsimony computational efficiency modeling relationships properties 

developing testing formal machine readable representation scheme semantics markup language expressed 

exploring applications semantics representation transcoding support information retrieval accessibility improvement current focus support semantic inferences databases document instances believe best stress general decisions choice representation techniques 

conducting partnership digital library content encoding projects humanities computing community associated software tool developers large scale tests resulting semantics representation scheme 
early prolog testbed extensively developed prototype knowledge representation workbench representing facts rules inference structured documents 
system permits analyst specify facts markup syntax generic identifiers attribute values separately facts rules inference semantic entities properties 
system provides level abstraction meaning markup explicitly represented machine readable txt cit txt syntactic view markup executable form 
inferences drawn regarding document components including problematic structures participating overlapping hierarchies 
developed collection predicates emulate subset document object model methods navigating hierarchical structure nodes retrieving attribute values information document type definition 
afford clear separation syntactic information captured parser document semantics expressed analyst 
preliminary findings reported earlier revealed complexity identifying licensed inferences additional complicating presence non assertive illocutionary force 
rudimentary inferencing system demonstrated automated reasoning markup possible complexities non monotonicity contextual ambiguity handled prolog rules 
reported 

modeling markup semantics semantics document markup structures properties relationships understood user markup language cued markup syntax 
markup semantics modeled computationally applying knowledge representation technologies problem making structures relationships properties explicit 
consider fragment xml tagged document translation problem translation different sgml xml applications reconciliation incompatible document classes known challenge cit shafer cit 
variety techniques 
natural reader familiar structured markup infer document element marked tag paragraph paragraph heading contents paragraph consist text starts heading element ends close paragraph tag 
inasmuch meaning tag may immediately obvious author reader consult prose tag set documentation 
obvious inferences may human reader drawn data structure emerging syntactic parse fragment 
shown parse tree available stylesheet programmer represents heading citation text citation separate child node paragraph 
parse tree represents fact heading feature paragraph text nodes parts content structure citation considered embedded text 
heading paragraph text contains txt cit txt contains citation syntax tree enriched semantic representation fact data structure se doesn say paragraphs citations 
data structure graph nodes associated information generic identifier having value paragraph 
programmer course expected draw inferences consistent documented meaning tags knowledge instance constructing transformation tree form 
transformation expressed example xslt dsssl procedural language relies semantic inferences explicitly encoding 
suggests syntactic tree enriched enhanced semantic knowledge 
part containment relationships encoded higher level knowledge representation technology 
diagram suggests traditional semantic net representation number alternatives employed including frame rule formal grammar logic representation 
advances semantic web projects section may provide suitable expressive power markup languages 
point level represent abstractions relationships constraints modeled enforced conventional xml sgml parser 
knowledge encoded machine readable file dtd syntactic schema validate document semantic constraints provide richer document model application programmer 
expressive representations support design implementation better document processing systems 

target applications new technologies developed years augment usefulness conventional structured markup 
information management problems aim address translation federation common projects sgml xml developer design transformation application syntax 
typically aim creating new presentation document preparing storage database 
developer faces task reconciling large collection digital documents tagged number non interoperable markup languages 
scope translation problem conventional solution usually involves applying transformational programming language acts directly syntactic parse tree 
tree emerging parse source document transformed tree representing valid instance target language 
transformed tree serialized new document instance graphical audio presentation 
information islands challenge similar translation problem 
transforming documents goal permit documents stored different parts distributed information system common transparent interface system users 
necessary literally transform documents markup language system provide apparently seamless integration document contents notwithstanding differences way documents encoded 
accessibility growing acceptance structured markup authoring tools greeted boon promoting accessibility digital documents visually disabled users 
declarative markup allows person reading document aid screen reader braille display draw inferences basis mnemonic tag names graphical formatting cues 
currently success applications depends ability user interface software deduce important structural inference basis tag names syntax 
relies document authors fidelity adhering markup syntax constraints strictly meaning tags described tag set documentation 
regrettably authors misuse tags purpose exploiting known presentation side effects notorious examples problem heading markup web pages particular kinds typographic emphasis 
secure transactions part impetus driving development expressive markup schema languages xml schema language recognition consequences tagging errors misinterpretation fraud far drastic poorly formatted output 
declarative markup electronic commerce safety critical information domains medical records aircraft industry 
developers domains ensure digital documents syntactically formed applications support protocols ensuring accurate transcription storage transmission presentation document contents 

benefits markup semantics encoded markup semantics investigated current project promises contributions addressing aforementioned challenges ways declarative machine readable semantic descriptions currently stands designers structured markup languages express meaning appropriate tags naturallanguage text 
formal markup semantics accord forms relationships unambiguously expressed automatically processed computer program 
validation hypotheses situations formal written tag set documentation exists system capable processing markup semantics declarations act interactive environment testing conjectures validating hypotheses 
situations user undocumented markup language conjectures property rule believes consistently applied database document instances 
document processing software retrieve document elements consistent inconsistent hypothesized rule 
enforcement semantic constraints just semantics aware parser test conjectures process discovering hypothesizing language semantics parser enforce semantic constraints addition syntactic validation accomplished conventional parser 
operation identical hypothesis validation situation semantic constraints known normative 
richer expressive apis sgml xml application programmers employ markup semantics daily basis constructing transformations presentations digital documents 
higher level properties relationships manifest execution software write 
formalized machine readable semantics enrich application programming interfaces foster design software easier safer maintain markup languages process evolve change 

related number document processing technologies standards research projects responded challenges problems described 
paragraphs situate current proposal respect efforts 
semantic web semantic web refers number interrelated research standardization efforts current proposal lie intersection markup technologies knowledge representation :10.1.1.11.6264
central enterprises world wide web consortium resource description framework projects included iso topic maps standard 
semantic web broad ambitious effort aiming equip markup languages functionality general purpose knowledge representation technologies assist evolution human knowledge :10.1.1.11.6264
semantic web research standardization efforts current proposal aim semantic description particular domain capability markup encode semantic knowledge domain 
current proposal specifically targets domain document markup semantics general semantic markup advances semantic web technologies may possible encode markup semantics semantic web markup language 
document object model document object model application programming interface hierarchical data structure results parsing xml document 
aim design systems provide interfaces markup semantics analogous dom provides respect markup syntax effect semantic dom complement syntactic dom 
schema xml schema xml language provides alternative traditional dtds expressing constraints xml documents 
limitations dtds motivated design language overlap problems challenges project responds 
schema allows document class designer define elements respect complex data types defined high level programming language 
encoding full range relationships constraints prose tag set documentation require expressive power xml schema currently provides 
hytime architectural forms enabling architecture technology emerged recognition different markup language applications encode structures semantically equivalent expressed different syntax 
architectural forms allow document class designers create mappings specific element instances general architectural instances easier map diverse applications 
mappings represent limited form semantic knowledge contribute solutions translation federation challenges described earlier 
project proposes model somewhat broader range semantic relationships architectural forms express 

aap 
author guide electronic manuscript preparation markup 
electronic manuscript series 
association american publishers washington dc 
current version ansi iso electronic manuscript preparation markup national information standards organization 
berners lee hendler lassila semantic web :10.1.1.11.6264
scientific american may 
cole sgml component digital library 
library high tech 
coombs derose markup systems scholarly text processing 
communications association computing machinery 
derose durand text really 
journal computing higher education 
sperberg mcqueen logic programming environment document semantics inference 
ach bingen germany july 
sgml dollar secret 
prentice hall upper saddle river nj ch 
united technologies aircraft 
shafer data sgml 

journal american society information science 
fay document management alliance 
bulletin american society information science october november 
goldfarb document composition facility generalized markup language gml users guide 
ibm general products division 
sh 
goldfarb generalized approach document markup 
proceedings acm sigplan symposium text manipulation new york acm pp 

ibm application description ibm system document processing system 
white plains ny 
form 

ide sperberg mcqueen unified standardizing document markup access 
proceedings th annual meeting american society information science nj schwartz eds information today pp 

iso 
iso 
information processing text office systems standard generalized markup language sgml 
international organization standardization geneva 
iso 
iso iec information processing hypermedia time structuring language hytime second ed 
international organization standardization geneva may appendix architectural form definition requirements 
iso 
iso iec information technology sgml applications topic maps 
international organization standardization geneva 
knuth tex new directions typesetting 
digital press bedford ma 
lamport atex document preparation system 
addison wesley reading ma 
lesk typing documents unix ms macros troff 
barnes hong joseph kaelbling nicholas connell share descriptive markup best approach 
communications association computing machinery 
kaelbling nicholas share software architecture supporting exchange electronic manuscripts 
communications acm 
troff user manual 
tech 
rep bell laboratories murray hill nj october 
dtds constraining data content 
proceedings sgml xml europe paris may gca 
raymond tompa markup reconsidered 
technical report department computer science university western ontario 
international workshop principles document processing dc october earlier version circulated privately markup considered harmful late 
raymond tompa wood data representation data model meta semantic issues evolution sgml 
computer standards interfaces january 
reid scribe introductory user manual ed 
carnegie mellon university computer science department pittsburgh pa august 
reid scribe document specification language compiler 
phd thesis carnegie mellon university pittsburgh pa 
available technical report cmu cs 
descriptive procedural distinction flawed 
markup languages theory practice 
raising bar text encoding logical point view 
clip computers literature gerhard mercator university duisburg germany december 
rizzi complexity context free grammars exceptions inadequacy grammars models xml sgml 
markup languages theory practice 
rowe artificial intelligence prolog 
prentice hall englewood cliffs nj 
schatz cole hardin bishop chen diverse collections scientific literature 
computer may 
sgml xml document centered approach electronic medical records 
bulletin american society information science october november 
simons architectural forms map tei data object oriented database 
computers humanities 
originally delivered tei conference providence ri 
sperberg mcqueen drawing inferences basis markup 
proceedings extreme markup languages montreal canada august newcomb eds 
sperberg mcqueen meaning interpretation markup 
markup languages theory practice 
sperberg mcqueen practical extraction meaning markup 
delivered ach new york 
sperberg mcqueen skeletons closet saying markup means 
ach bingen germany july 
sperberg mcqueen eds 
guidelines text encoding interchange tei 
ach acl text encoding initiative chicago oxford 
spring origin electronic publishing 
journal documentation june 
tanimoto elements artificial intelligence 
computer science press rockville md 
united states department defense 
mil military specification markup requirements generic style specification electronic printed output exchange text 
welty ide right tools enhancing retrieval marked documents 
computers humanities 
originally delivered tei conference providence ri 
