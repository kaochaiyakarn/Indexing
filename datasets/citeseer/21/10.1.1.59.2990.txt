trust recommender systems experimental analysis paolo massa bobby bhattacharjee international graduate school information communication technologies university trento povo tn italy massa itc department computer science university maryland college park maryland bobby cs umd edu 
recommender systems rs suggesting items movies books songs users 
rss compute user similarity users weight users ratings 
weaknesses sparseness cold start vulnerability attacks 
assert weaknesses alleviated trust aware system takes account web trust provided user 
specifically analyze data popular internet web site epinions com 
dataset consists users expressed reviews rating items explicitly specified web trust users reviews consistently valuable 
show users usually items rated common 
reason classic rs technique ineffective able compute user similarity weight users 
exploiting webs trust possible propagate trust infer additional weight users 
show quantity computed larger number users 
recommender systems rs widely online amazon com suggest items users may find interesting 
recommendations generated main techniques content collaborative filtering 
content systems require manual intervention scale large item bases 
collaborative filtering cf systems depend semantics items consideration automate recommendation process solely user opinions 
cf algorithms promising implementing large scale recommender systems share problems 
problems pure cf systems classified domains problems affecting new user start sparsity useful information existing users relatively easy attacks system correctness malicious insiders 
describe attacks detail section 
propose extension pure cf systems assert extension addresses problems currently implemented collaborative filtering algorithms 
specifically argue problems effectively solved incorporating notion trust users base cf system 
analysis large scale deployed recommender system epinions com clearly identifies problems base cf system describe trust extensions solve problems data set similar systems 
contributions fold articulate specific problems collaborative filtering systems currently deployed new solution addresses problems 
thorough analysis large existing rs data set show problems identified exist reality 
note specifically show existence malicious insiders clear attack possible base system 
preliminary results show trust solution alleviate eliminate problems identify base system 
rest structured follows introduce recommender systems section weaknesses section alleviate section 
section presents experiments epinions com support thesis section concludes discussing new research lines provided evidence 
recommender systems recommender systems rs suggest users items 
main algorithmic techniques compute recommendations content collaborative filtering 
content approach tries suggest user items similar previous selections 
achieve content rss need representation terms features items 
representation created automatically machine parsable items news papers manually inserted human editors items machine parsable movies songs 
activity expensive timeconsuming error prone highly subjective 
items jokes impossible define right set describing features objectively classify 
collaborative filtering cf hand collects opinions users form ratings items 
asked recommendation system identifies similar users suggests items users liked past 
interesting point algorithm doesn need representation items term features genre actors movies judgments user community 
cf applied virtually kind item papers news web sites movies songs books jokes locations holidays stocks 
cf techniques don require human intervention tagging content promise scale large item bases 
rest concentrate rss cf 
traditional input cf algorithm matrix row user column items 
entry element matrix user rating item 
shows matrix 
matrix reloaded lord rings titanic la vita bella alice bob carol dean table 
users items matrix ratings classic input cf 
asked recommendation user standard cf algorithm performs steps 
compares user community computing user similarity coefficient 
different techniques proposed task 
pearson correlation coefficient best performing 
proposed alternatives constrained pearson correlation coefficient spearman correlation coefficient cosine similarity 
pearson correlation coefficient wa equation represents similarity user user regard ratings items defined wa ra ra ru ru ra ra ru ru number items rated ra rating user item ra mean ratings coefficient 
important underline coefficient computed items rated users 
predicts rating item rated 
predicted rating equation user give item mean rating plus weighted sum deviation mean rating user weight user similarity user pa ra wa ru ru possible consider similar users users 
user similarity user weight opinions user 
intuitively user similar user opinions user importance creating recommendation user suggests user items highest predicted ratings 
weaknesses recommender systems rss useful tool dealing information overload suggest user items worth consuming huge item set 
seen collaborative filtering applied domain additional efforts required human editors tag content classify items 
despite potential believe rss failed disruptive power number weaknesses rest section 
data sparseness realistic cf matrix contains millions users millions items 
practice users rate entire set items results sparse matrix 
sparseness cf matrix percentage empty cells 
eachmovie movielens public datasets typically research respectively sparse 
see section epinions com dataset higher sparseness 
sparseness huge problem freshly created rss start operating ratings 
consequence sparseness average users picked uniformly random low overlap 
reason pearson coefficient noisy unreliable 
practice case intersection users similarity computable 
singular value decomposition proposed technique dimensionality reduction consequent reduction sparseness 
extremely sparse datasets shown improvements standard techniques 
cold start second weakness called cold start problem 
related situation user enters system expressed ratings 
cf compute recommendation cases 
define cold start users users expressed ratings 
users rss biggest problems usually unable quality recommendations 
users need quality recommendations incentive continue system 
attacks recommender systems concern related existence users want maliciously influence system process creating recommendations known ratings user publicly available epinions com instance simple effective attack 
suppose malicious principal wants system recommend user target item 
simply create new user rate way items rated user target rate highest possible rating 
way looking users similar target system assign user similarity weight rating probably recommending user target 
malicious users create bunch fake users publicly available datasets see www grouplens org reinforcing 
general possible trash dataset quality automatically creating users pseudo random rating profiles 
believe kind attacks problem current commercial rss centralized creating user rating items activity 
true attacker create bot doing economic incentive doing see sort effective hidden commercial spam 
aware research lines account problem rss 
think huge concern soon rss start decentralized systems sense users profile stored hard disks central rs server spread sites community members publicly available defined semantic formats 
rss hard understand control weakness reported papers say users see rss black box aware working model 
fact current rss hard impossible user control recommendation process rs starts giving bad quality recommendations usually user just stops 
solution weaknesses trust awareness believe consideration trust relationships principals system alleviate problems rss 
rest section define trust model give anecdotal evidence trust awareness solve previously stated weaknesses 
section confirm claims empirical analysis epinions com dataset 
trust statement explicit assertion fact user trusts users 
user create trust statements specifying users trusts 
context trust aware recommender systems trust statement user user means user consistently finds reviews ratings user valuable 
trust social network constructed aggregating trust statement 
trust network graph nodes users directed edges trust statements 
bob mena cory fig 

trust network 
arrows trust statements 
trust metrics propagate trust social network 
intuitively trusts trusts possible infer trust trust metrics exactly inferring trust unknown users depending social network 
analyze trust extract useful information making recommendations overcome previously cited rss weaknesses real community 
leave proposition trust metric able predict trust values unknown users 
seen section high sparseness cf matrix rare users rated items common evidence section 
pearson correlation coefficient computed overlapping items 
user number users possible compute similarity low 
propagating trust social network allows reach larger portion user base 
way possible compute alternative weight related take users account computing recommendation 
cold start users critical users standard cf benefit highly trust propagation long provide trusted friend community 
effective mechanism rapidly integrate new users especially compared standard cf users usually required rate items receive recommendation 
attack outlined section effective long fake users trusted real user 
traditional rs seen users black boxes think concept social network easier grasp 
human computer interaction studies needed investigate best ways visualize social network help user understanding recommendation model controlling 
important note trust metrics predict personalized values trust unknown users 
reason inferred trust user different user user depends different webs trust 
different current online systems 
example pagerank google com computes global value web page searcher ebay com computes unique global value buyer seller slashdot org contributors 
lastly trust awareness introduced inside single centralized server centralized approaches data collection general subject huge disadvantages 
expressing information centralized rs server means server able 
results users profiles scattered portions different cooperating servers single server suffers sparseness 
means user move rs losing profile possibility receive recommendations 
believe sense introduce concerns trust leave computation recommendations possible user control 
think trust aware recommender systems demand decentralized environ ment user publishes information trust ratings semantic web format machine possibility aggregating information computing recommendations behalf user 
section argued trust awareness alleviates problems standard rss 
rest results large deployed system support claims 
overview data set 
experiments epinions com section experimental results epinions com show trust solution alleviate problems stated section 
explaining dataset collected 
statistics community number expressed reviews friends ratings distribution items 
analyze differences computability quantities weights user pearson coefficient trust 
show second computable users especially true cold start users 
epinions com web site users review items cars books movies music software 
assign numeric rating range min max 
users express web trust reviewers reviews ratings consistently valuable block list list authors reviews find consistently offensive inaccurate general valuable 
web trust user public see browser block list kept private epinions com 
epinions com provide complete list users items obtained dataset crawling epinions com web site november 
conducted depth search starting users classified advisors category movies books online stores services repeatedly users web trust 
user fetched reviews user 
information collected user shown 
course way obtained dataset fetch users fact downloaded users reachable walking web trust starting users 
users trusted reached users added dataset 
argument applies items 
collected dataset items rated reached users 
statistics community dataset consists users rated total different items 
total number reviews 
sparseness collected dataset 
sparseness high compared web trust faq www epinions com help faq show faq username epinions user url www epinions com user epinions user trusted user url added date user friend web trust user friend nov nov 
item name item url class rating date written views mu videos dvds re caribbean pot caribbean pot restaurants 

sep aug 
table 
table shows example information collected user 
public datasets eachmovie movielens respectively commonly research 
believe reasons eachmovie movielens smaller item base movies respectively 
rating item epinions com time expensive activity user write review words 
research systems user movies web page allowed rate simultaneously clicks 
users median mean reviews reviews users perc 
total fig 

numbers users created reviews 
vertical lines mean median 
note high percentage cold start users users reviews 
stress fact epinions com known site big active community sparse matrix ratings 
problem sparseness bigger recommender systems just started operating don large community base 
important remember items dataset received rating collected data consider items epinions com theoretical sparseness higher 
shows number users created certain number reviews 
mean number created reviews standard deviation 
median 
particular users created reviews maximum number reviews created user 
important look called cold start users users expressed reviews 
represent population 
shows number users expressed certain number friends call friends user users web trust user 
mean number friends standard deviation 
median 
particular users expressed friends web trust empty user added users web trust 
users median mean friends friends users perc 
total fig 

numbers users expressed friends 
vertical lines mean median 
directly related results interesting note distribution ratings 
dataset ratings best worst 
mean rating 
order compute user similarity users important quantity distribution reviews items 
big difference overlapping random users ratings generally concentrate items rated uniformly distributed item base 
shows distribution ratings items 
note vast majority items precisely corresponding item base received review totally useless computing user similarity users infact columns matrix contains rating value columns doesn exist users overlap compared 
items corresponding reviews 
items received reviews reviews reviews items perc 
total fig 

number reviews received items 
note items received review totally useless computing user similarity 
fetched items user review dataset items reviews epinions com greatest part 
seen sparseness users items matrix ratings high greatest part items received reviews 
section show results low overlapping user ratings reduced computability pearson coefficient 
section show trust propagation suffers sparseness allows infer trust larger number users 
computability user similarity predicting rating user item rss collaborative filtering compute similarity coefficient user users 
coefficient weight ratings users 
argued section direct propagated trust weight opinions users 
show user similarity users quantity usually computed small portion user base usually computed small number overlapping items producing noisy unreliable value 
number users reachable trust chain generally high 
chain trust possible propagate infer trust trust metric 
difference number users possible compute similarity trust exacerbated cold start users users expressed ratings friends 
users usually largest portion users ones benefit quality recommendations 
users mean users pearson computable users expressing ratings user base expressed ratings nr 
frac 
users total mean nr 
comparable users cold fig 

thick line plots number users expressed specific number ratings 
users thin line plots comparable users exist system average 
comparable mean users rated items common 
table groups results class users depending number expressed ratings 
plot number comparable users averaged users created certain number reviews 
define users comparable rated items common 
comparable user possible compute pearson correlation coefficient weight user 
unsurprisingly users created reviews higher number users pearson computable 
plot shows users coverage user base limited example users created reviews mean number users pearson computable entire user base 
shows portion total graph fact axis go users axis items 
ideal system possible compare user user case mean number users independently number written reviews 
evident epinions com dataset technique far ideal 
concentrate cold start users way majority users system 
shown nd row table pearson computable average users 
cold start users users pearson computable 
worth noting overlap ping user pearson correlation coefficient computable user entire population 
plot stray evidence pearson correlation coefficient ineffective 
computability trust section provide evidence potential trust alleviating rss problems 
suggested user possible compute trust user computed quantity weight users 
trust direct propagated potentially combined user similarity 
simply provide evidence fact possible infer trust value big portion user base 
reason compute user minimum number steps needed reach user 
way class equivalence trust users reachable step direct friends users reachable steps friends friends course aware big difference user distance trusted friends friends goal propose suitable trust metric domain just show propagating trust feasible potential solve rss weaknesses 
note dataset sophisticated inference difficult collected epinions com trust data binary users completely trust 
shows mean number users certain distance 
different lines represent different subsets users users users created reviews 
users reach users trust chain 
users considered computing mean number users certain distance 
table shows different class users number users connected system 
considering users provided friends course reach users trust chain remaining users connected user network 
users reach user users provided just friend web trust 
mean distance users see table 
user mean distance maximum users web trust mean distance minimum 
data show trust network connected part depends way collected dataset 
shows users wrote reviews users generally closer trust network trust metric infer trust easily 
cold start users users general close anyway reachable possible predict trust value 
important note users just friend users distance users distance users ratings users distance users ratings distance users reaching mean mean dist mean max dist users ratings ratings ratings ratings ratings friends fig 

shows mean number users distance different class users 
table shows different class users users connected user absolute value percentage mean mean distances mean max distances 
row table trust effective 
fact mean distance averaged compared users 
believe just adding friend easy quick way bootstrap system 
way system able recommendations soon new users generally cold start users provided ratings 
summarize results previous figures table provides final argument 
fact shows user standard cf technique pearson correlation coefficient average allows compute user similarity small portion user base precisely 
hand propagating trust possible infer trust users value alternative weight creating recommendation 
average user trust step possible cover users direct friends steps users friends friends steps users steps users 
computing values considered users able reach users example users provided friends 
previous difference coverage user base techniques exacerbated case cold start users users expressed ratings 
mean number users pearson computable class users users 
propagating trust possible reach users just steps steps 
section analyzed dataset real users epinions com trust metric order assign trust weight unknown users potentially effective computing user similarity traditional rss 
section summarize contributions discuss research lines provided evidence opens 
mean number comparable users mean number comparable users user cold start users propagating trust propagating trust different distances pearson different distances pearson table 
mean number comparable users different methods trust pearson correlation coefficient 
trust indicate mean number users reachable trust chain steps 
pearson indicate mean number users pearson coefficient computable overlap items 
computed user ones ratings friends 
contribution presents evidence recommender systems incorporate trust effective systems classic techniques collaborative filtering cf 
particular cf involves computation user similarity measure example pearson correlation coefficient 
shown quantity average computable small portion user base cases noisy unreliable value computed items rated commons users 
trust aware techniques produce trust score high number users trust score user estimates relevance users preferences 
argued cold start users users provided ratings usually majority trust propagation effective especially compared pearson correlation coefficient 
reported evidence opens way number research paths briefly explore rest section 
trust metrics course users distance trusted 
trust metric trust network infers trust unknown users 
studying different trust metrics certainly important time data real social networks starting available electronic format 
trust propagation compelling research line especially applied social networks weighted trust relationships ex trusts 
sense interesting analyze web distrust epinions com users 
special attention deserve research possible attacks malicious users 
project wiki studying issues comparison trust user similarity steps analyze relationships trust user similarity wiki writable web site itc cgi consistent 
cases trust metric suggests user happens dissimilar vice versa find similar user 
user reviews items common friends random user 
comparison successful ways combine user similarity trust order decide weight users ratings proposed 
recommendations computation final goal produce recommendations trust aware recommender systems compare recommendations traditional systems 
analyze performances systems trust inferred different trust metrics user similarity combinations 
user acceptance human computer interaction studies needed investigate best ways visualize social network help user understanding recommendation model control 

jennifer golbeck james hendler parsia 
trust networks semantic web 
proceedings cooperative intelligent agents 

goldberg nichols oki terry 
collaborative filtering weave information tapestry 
communications acm 

herlocker konstan borchers riedl 
algorithmic framework performing collaborative filtering 
proceedings conference research development information retrieval 

herlocker konstan riedl 
explaining collaborative filtering recommendations 
proc 
cscw 

maltz ehrlich 
pointing way active collaborative filtering 
proc 
chi pages denver 

paolo massa 
trust aware decentralized recommender systems 
phd proposal university trento sra itc people massa massa pdf 

lawrence page sergey brin rajeev motwani terry winograd 
pagerank citation ranking bringing order web 
technical report stanford digital library technologies project 

resnick varian 
recommender systems 
communications acm 

sarwar karypis konstan riedl 
application dimensionality reduction recommender systems case study 
acm webkdd workshop 

swearingen sinha 
algorithms hci perspective recommender systems 
acm sigir workshop recommender systems new orleans 

jeffrey 
thinks gay set straight 
wall street journal november 
