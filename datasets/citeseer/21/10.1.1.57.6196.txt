termination rewriting strategy annotations salvador lucas universidad polit de valencia de vera valencia spain mail upv es 
investigate termination rewriting computations guided strategy annotations 
show proofs termination obtained proving innermost termination context sensitive rewriting csr 
investigate prove innermost termination csr existing methods proving termination csr 
keywords rewriting strategies termination 
strategy annotations lists integers associated symbols signature programming languages obj obj cafeobj fn maude introduce replacement restrictions aimed improving termination section 
example 
obj program borrowed obj example sorts sort op 
sort op sort 
sort op sort sort 
sort strat op inf sort 
sort op nth sort sort 
sort var sort eq nth nth eq nth eq inf inf endo specifies explicit strategy annotation list constructor disables replacements second argument 
way evaluation expression nth inf finishes produces term infinite list inf part expression 
partially supported hi spanish cicyt de cultura de la 
unfortunately lack formal techniques analyze particular choice strategy annotations modifies termination programs 
term rewriting systems trss bn dp provide suitable computational model programs written programming languages investigate termination rewriting computations controlled strategy annotations 
strategy annotations different shapes computational interpretations 
visser classification vis consider computational strategies associated strategy annotations 
strategy eke permits completely avoid evaluation arguments function symbols ordered way 

just time van de pol pol designed delay evaluation arguments possible 
show context sensitive rewriting csr simple restriction rewriting forbids reductions selected arguments functions luc provides suitable framework describing analyzing computations programs kind strategy annotations 
focus innermost character computational models show analysis innermost termination csr provides accurate complete strategy characterization termination rewriting strategy annotations 
termination csr studied gm luc zan 
works termination csr trs demonstrated proving termination transformed trs 
way csr standard methods proving termination rewriting see der survey 
prove transformations gm correct proving innermost termination csr 
transformation luc correct cases characterize 
zantema transformation zan provide correct proofs innermost termination csr 
hand transformations gm second complete proving termination csr complete proving innermost termination csr 
transformation luc complete assumptions sound proving innermost termination csr 
section gives preliminaries 
section introduces csr 
sections connect innermost termination csr termination rewriting van de pol strategies 
section investigates prove innermost termination csr 
section discusses related 
section concludes 
preliminaries set denotes set subsets binary relation set denote reflexive closure transitive closure reflexive transitive closure element normal form exists nfr set normal forms 
say normal form normal form say terminating iff infinite sequence delta delta delta 
denotes countable set variables sigma denotes signature set function symbols ff having fixed arity mapping ar sigma set terms built sigma sigma 
term said linear multiple occurrences single variable 
terms viewed labelled trees usual way 
positions represented chains positive natural numbers address subterms positions denote concatenation positions ordered standard prefix ordering set positions maximal set maximal positions position set positions fp qg 
denote empty chain set positions term pos 
positions non variable symbols denoted pos sigma positions variables 
subterm position denoted tj term subterm position replaced symbol labelling root denoted root 
rewrite rule ordered pair written sigma var var 
left hand side lhs rule righthand side rhs trs pair sigma set rewrite rules 
denotes set lhs instance oe lhs rule redex 
set redex positions 
trs left linear linear term 
term sigma rewrites position written just tj oe oe rule ae pos substitution oe 
trs terminating terminating 
say innermost rewrites written maximal 
trs innermost terminating terminating 
rewriting syntactic replacement restrictions mapping sigma replacement map sigma map sigma ar luc 
ordering sigma set sigma maps sigma 
means considers positions reduction restrictive replacement map specifies argument positions reduced symbol sigma accordingly set replacing positions pos sigma pos fg pos fg root pos tj set positions replacing redexes pos pos 
context sensitive rewriting csr luc contract replacing redexes rewrites written 
pos 
example 
consider trs nth inf inf nth nth inf nth 
nth inf nth inf pos nth inf redex inf rewritten 

normal forms called normal forms 
trs terminating 
terminating 
innermost csr contract maximal positions replacing redexes maximal pos 
say innermost terminating terminating 
strategy annotations simple mechanisms specifying rewriting strategies 
associated symbols signature sigma mainly concern possibility reducing arguments indexed ary symbol possibility applying different rules defining rules root redexes rooted symbol investigate kinds strategy annotations 
termination rewriting strategy positive local strategy strategy eke nag ary symbol sigma sequence integers taken kg parentheses see example 
mapping associates local strategy sigma called strategy map 
roughly speaking considering function call arguments indices positive integers local strategy evaluated specified ordering 
evaluation attempted 
describes operational semantics term rewriting strategy maps follows nag set lists consisting natural numbers 
ln denote set lists natural numbers signature sigma ffl sigma ar labelled variables xl fx nil xg 
strategy map sigma extended mapping sigma sigma xl follows ae nil mapping erase sigma xl sigma removes labellings symbols 
relation sigma xl theta pairs ht pi labelled terms positions nag ht pi hs qi pos 
root tj nil 
tj 
tj erase tj redex 
tj oe erase oe substitution oe write denote item appears list algebraic languages obj obj cafeobj maude admit specification strategies 
symbols explicit local strategy default apart standard notation lists nil empty list list element tail concrete shape depends considered language strategy map sigma sigma fi sigma drop superscript confusion arises 

theorem 
luc trs positive strategy map 
sigma xl pos erase root tj fl suffix 
ht pi hs qi pos erase erase 
erase 
semantics obj programs evaluation map usually means evaluation function eval sigma sigma terms sets computed values specifying concrete rewrite steps leading computed values eke 
nakamura ogata define eval sigma hs hs nf example 
consider trs eke nil 
term evaluated underline contracted redexes term component pairs hg hg hg hg fnil hg fnil hg fnil hg fnil hh fnil hh fnil hh fnil hh nil nil nil hh nil nil nil normal form 
eval 
previous definition eval say trs terminating sigma infinite rewrite sequence starting local strategies finite lists number reduction steps corresponds items definition 
keep unchanged erased terms finite 
theorem 
theorem 
luc trs positive strategy map 
terminating terminating 
theorem connects termination csr termination positive strategy maps 
termination csr studied gm luc zan 
instance trs represents obj program example proved terminating zantema techniques see examples zan 
termination csr approximates termination 
instance maude default local strategy associated ary symbol delta delta delta see eke 
obj mean obj obj cafeobj maude 
example 
consider trs gra 
trs terminating terminating 

delta delta delta 
point computations strategy basically innermost 
innermost rewriting computations terminating nonterminating trss 
gives rise topic innermost termination rewriting studied ag gra 
instance trs example nonterminating innermost terminating gra 
trs sigma consider sigma disjoint union sigma symbols called constructors symbols called defined functions froot rg sigma gamma say strategy map elementary delta delta delta 
consecutive occurrences zero simplified single corollary eke 
eke nag discuss interesting cases index local strategies associated defined symbols critical requirement introduced elementary strategies occurs local strategy 
theorem 
trs positive elementary strategy map 
sigma 
hs pi pos erase erase 
theorem hold requiring 
example 
consider example 
theorem rewriting steps associated evaluation due redex second rewriting step innermost reasoning way similar theorem theorem theorem entails 
theorem 
trs positive elementary strategy map 
innermost terminating terminating 
nonelementary strategies theorem fail hold 
example 
consider trs example nil 
note innermost terminating 
terminating hf hf delta delta delta termination implies innermost termination vice versa analyzing innermost termination csr provides accurate framework proving termination trss positive elementary strategies 
fact obtain complete proof method 
theorem 
trs positive elementary strategy map 
terminating innermost terminating 
termination may imply innermost termination 
example 
consider example 
note innermost terminating delta delta delta terminating labelled version term reached derivation stops producing needed generate cycle see example 
termination rewriting van de pol strategy annotations sigma trs 
van de pol pol strategy annotation associated symbol sigma list elements number ar rule root principle strategy annotations contain duplicated items pol 
example 
consider trs pol ff true fl fi false possible strategy annotation ff fi fl 
say full regarding rules just full root 
strategy annotation van de pol describes rewriting strategy specifies 
rewriting strategy seen function term yields rewrite pair rewrite step selected 
term strategy annotation indicates unique rewrite step performed definition 
pol sigma trs strategy annotation sigma 
root nil ae oe oe oe ae tj write just 
normal form just normal form 

van de pol strategy annotations include indices arguments function symbols rules defining function symbols 
occurrences strategies thought abstractions items 
strategy annotation immediate obtain corresponding strategy map replacing rule items sigma removing consecutive occurrences see 
strategy annotation sigma sigma fi sigma drop superscript confusion arises 
theorem establishes close connection 
theorem 
trs strategy annotation sigma 

say trs terminating terminating 
theorem immediate consequence 
theorem 
trs strategy annotation 
terminating terminating 
termination characterized innermost termination strategy annotation elementary trs ff ff suffix 
theorem 
trs full elementary strategy annotation sigma 
note fullness necessary theorem ensure step forget inner redex due lack corresponding rule strategy annotations 

theorem 
trs full elementary strategy annotation 
innermost terminating terminating 
general termination imply innermost termination 
example 
consider trs ff fi ff fi 
clearly terminating innermost terminating 
example shows termination trs imply termination corresponding strategy map see local strategy example lead nonterminating computations strategy 
termination imply termination 
example 
consider trs example ff true fl fi false ffi ff fi fl ffi 
corresponding strategy map 
note terminating delta delta delta terminating hb hif nil hif nil ha nil proving innermost termination csr innermost termination csr related termination elementary local van de pol strategies 
innermost termination csr proven 
proving termination trs usually achieved proving termination transformed trs gm luc zan question naturally arises innermost termination detected transformations 
section investigate problem 
correct transformation proving termination csr described luc 
basic idea simple non replacing arguments rewritten csr sense remove appropriately reducing arity symbols signature sigma contracted signature sigma obtained renaming sigma sigma giving arity ar terms signatures sigma sigma related contracting function sigma sigma 
function drops immediate subterms term constructs contracted term joining transformed replacing arguments corresponding operator contracted signature 
transformation transform trss 
sigma trs sigma set rules contraction sigma 
rg 
example illustrates contraction shows general transformation correct proving innermost termination 
example 
consider trs 
symbols arities may decrease due removing non replacing arguments innermost terminating 
innermost terminating delta delta delta 
considering canonical replacement map restrictive replacement map sigma ensuring non variable subterms left hand sides rules replacing minimum sigma map pos sigma pos luc 
theorem 
sigma left linear trs sigma innermost terminating innermost terminating 
main problem contractive transformation useful prove termination conservative trss 
trs conservative rule extra variables right hand side luc 
extra variable appear rule occurrences non replacing left hand side corresponding rule replacing order overcome problem zantema zan defines new transformed trs obtained marking non replacing arguments function symbols disregarding positions see zan detailed description transformation 
unfortunately zantema transformation correct proving innermost termination 
example 
consider trs note 
activate activate activate new symbols 
difficult see innermost terminating 
innermost terminating 
giesl middeldorp introduced transformation prove termination csr gm theoretical point view strictly powerful contractive transformation zantema transformation mark replacing positions term new symbol active positions ones csr may take place 
trs sigma sigma trs sigma consists rules sigma active mark mark active active mark concerning transformation result 
theorem 
sigma trs sigma innermost terminating innermost terminating 
giesl middeldorp noticed transformation incomplete proving termination csr exist trss replacement maps terminating terminating see example gm 
transformation remains incomplete proving innermost termination 
example 
consider trs example 
active mark mark active mark statement proved gm second demonstrated gm 
active mark mark active active mark active innermost terminating infinite innermost derivation active mark active mark active active active delta delta delta giesl middeldorp provided correct complete transformation deal termination csr 
basically idea permit single contextsensitive reduction step time 
achieve new symbols non constant symbol sigma shifting single symbol active non deterministically reach replacing position redex placed 
application rewrite rule changes active mark propagated upwards term order replaced new symbol active enables new reduction steps 
checking strange symbols remain uncontrolled symbol proper proper reduces ok ground term original signature rule top ok top active enables new reduction step see gm detailed explanation 
trs sigma sigma trs sigma ff sigma ar mark ok proper consists rules sigma ar constants sigma active mark active active mark mark proper ok proper proper proper ok ok ok top mark top proper top ok top active transformation correct proving innermost termination csr 
theorem 
sigma trs sigma innermost terminating innermost terminating 
transformation complete proving innermost termination 
example 
consider trs example 
obtain system active mark proper ok active mark proper proper active active ok ok mark mark top mark top proper proper ok top ok top active case infinite innermost derivation top active top mark top proper top ok top active delta delta delta surprisingly contractive transformation completeness result 
theorem 
sigma left linear trs sigma conservative 
innermost terminating innermost terminating 
note conservativeness necessary ensure trs 
trss extra variables innermost terminating requirement theorem incorrect 
related syntactic annotations obj family languages years local strategies 
quite intensively formal analysis computations obj local strategies addressed eke fgk luc nag pol 
far author knows fgk luc investigated problem proving termination rewriting positive local strategies 
termination van de pol strategy annotations studied 
fgk inductive method proposed directly prove ground termination rewriting positive local strategies applying transformation 
checked examples fgk illustrate technique easily proved terminating zantema transformation zan automatic tool march cime system see cime lri fr 
note proofs termination csr theorem necessary deal examples 
hand order able methods necessary different technique ensure constant symbols terminating computations guided strategies 
easy rewrite rule constant symbol note termination trs containing trs nil proven way 
termination easily proved contractive transformation luc clearly terminating 
technique techniques 
instance trs gf terminates strategy terminate 
cases 
able distinguish note elementary technique gf 
investigated prove termination rewriting local van de pol strategy annotations 
shown general problems comparable see examples 
shown analysis innermost termination csr provides suitable characterization termination rewriting positive local van de pol strategy annotations complete local strategies see theorems 
investigated transformations correct prove termination csr gm luc zan formal tools proving innermost termination csr 
transformations gm correct proving innermost termination csr 
transformation luc correct left linear trss replacement maps restrictive canonical replacement map 
zantema transformation correct general case 
concerning note framework aimed modelling computations strategy annotations take account 
presence replacement restrictions arguments symbols absence indices example 

possible innermost character computations obj programs 

position occurrences strategy annotations exemplified previous example 

priority applying rules strategy annotations van de pol approach see example 

presence special classes symbols ac operators 

presence sorts modules done obj 
partially covered characteristics 
proven sufficient completely characterizing termination rewriting elementary strategies 
considering subfields rewriting priority rewriting pol ac rewriting dp obtain accurate characterization problem general cases strategy annotations simulated programming languages provide powerful mechanisms defining strategies elan 
results apply ensure termination programs written languages kinds strategies 
analysis termination elan programs controlled arbitrary strategies subject 
innermost termination csr investigated 
different termination csr 
instance terminating trss course terminating 
innermost terminating trs example innermost terminating 
contrast termination general possible prove innermost termination proofs innermost termination 
hand known innermost termination implies termination nonoverlapping trss see gra 
innermost termination easier prove termination see ag gra termination ac csr studied fr 
obtaining indirect proofs termination 
remains true csr obtain new methods proving termination csr 

jurgen giesl isabelle olivier middeldorp anonymous referees helpful remarks 
sending copy fgk 
ag arts giesl 
proving innermost normalisation automatically 
comon editor proc 
th international conference rewriting techniques applications rta lncs springerverlag berlin 
borovansk kirchner kirchner 
moreau ringeissen 
overview elan 
kirchner kirchner editors proc 
nd international workshop rewriting logic applications electronic notes computer science 
bn baader nipkow 
term rewriting 
cambridge university press 
clavel eker lincoln meseguer 
principles maude 
meseguer editor proc 
st international workshop rewriting logic applications electronic notes theoretical computer science volume pages elsevier sciences 
der dershowitz 
termination rewriting 
journal symbolic computation 
dp dershowitz plaisted 
rewriting 
robinson voronkov editors 
handbook automated reasoning volume chapter elsevier 
eke eker 
term rewriting operator evaluation strategies 
kirchner kirchner editors proc 
nd international workshop rewriting logic applications electronic notes computer science 
futatsugi goguen 
jouannaud meseguer 
principles obj 
conference record th annual acm symposium principles programming languages popl pages acm press 
fgk kirchner 
termination rewriting local strategies 
gramlich editors proc 
th international workshop strategies automated deduction strategies pages 
fn futatsugi nakagawa 
overview cafe specification environment algebraic approach creating verifying maintaining formal specification networks 
proc 
st international conference formal engineering methods 
fr ferreira ribeiro 
context sensitive ac rewriting 
narendran rusinowitch editors proc 
th international conference rewriting techniques applications rta lncs springer verlag berlin 
gf 
personal communication 
july 
gl gramlich lucas editors 
st international workshop reduction strategies rewriting programming wrs 
proceedings volume de de la universidad polit de valencia 
see volume entcs elsevier appear 
gm giesl middeldorp 
transforming context sensitive rewrite systems 
narendran rusinowitch editors proc 
th international conference rewriting techniques applications rta lncs springer verlag berlin 
gm giesl middeldorp 
personal communication 
may 
gra gramlich 
proving termination innermost termination 
ganzinger editor proc 
th international conference rewriting techniques applications rta lncs springerverlag berlin 
goguen winkler meseguer futatsugi 
jouannaud 
introducing obj 
goguen malcolm editors software engineering obj algebraic specification action kluwer 
luc lucas 
termination context sensitive rewriting rewriting 
meyer auf der heide monien editors proc 
rd 
international colloquium automata languages programming icalp lncs springer verlag berlin 
luc lucas 
context sensitive computations functional functional logic programs 
journal functional logic programming january 
luc lucas 
termination demand rewriting termination obj programs 
proc 
rd international conference principles practice declarative programming ppdp pages acm press 
nag 
reduction strategies term rewriting systems 
phd thesis school information science japan advanced institute science technology march 
nakamura ogata 
evaluation strategy head normal form demand flags 
futatsugi editor proc 
rd international workshop rewriting logic applications electronic notes theoretical computer science volume pages 
ogata futatsugi 
implementation term rewritings evaluation strategy 
glaser hartel editors proc th international symposium programming languages implementations logics programs plilp lncs springer verlag berlin 
pol van de pol 
operational semantics rewriting priorities 
theoretical computer science 
pol van de pol 
just time strategy annotations 
gl pages 
vis visser 
survey strategies program transformation systems 
gl pages 
zan zantema 
termination context sensitive rewriting 
comon editor proc 
th international conference rewriting techniques applications rta lncs springer verlag berlin 
