ieee rate adaptation practical approach mathieu mohammad thierry turletti institut national de recherche en informatique en automatique inria project route des lucioles sophia antipolis france turletti sophia inria fr today different physical phy layers ieee wlan available provide multi rate capabilities 
achieve high performance varying conditions devices need adapt transmission rate dynamically 
rate adaptation algorithm critical component performance algorithms auto rate fallback arf receiver auto rate rbar published implementation challenges associated mechanisms publicly discussed 
important characteristics systems taken account algorithms designed 
specifically emphasize contrast low latency high latency systems give examples actual fall different categories 
propose adaptive arf algorithm low latency systems improves arf provide short term long term adaptation 
new algorithm low complexity obtaining performance similar rbar requires incompatible changes mac phy protocol 
new rate adaptation algorithm designed high latency systems implemented evaluated ar device 
experimentation results show clear performance improvement algorithm previously implemented ar driver 
categories subject descriptors computer communication networks network architecture design wireless communication general terms algorithms design measurement experimentation permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
october venezia italy 
copyright acm 
keywords ieee madwifi physical rate adaptation arf rbar 
ieee popular wlan system world today play important role generation wireless mobile communication systems 
originally ieee dsss direct sequence spread spectrum offered physical data rates transmission done mbps mbps rate 
ieee defined high rate extensions dsss technology data rates mbps ghz band ofdm orthogonal frequency division multiplexing technology data rates mbps ghz band 
standard extends phy layer support data rates mbps ghz band finalized 
reasons highly volatile nature wireless medium ieee standard fading attenuation interference radiation sources interference devices ad hoc network classify transmission quality variations transient short term modifications wireless medium durable long term modifications transmission environment 
typically walks closes door moves big objects effect transmission medium short time 
throughput capacity drop sharply long 
decides move office approaching ap access point attenuation decrease longer lasting effect energy radio signal probably decrease ber bit error rate 
turn allow higher application level throughput packet error rate lower 
algorithms adapt transmission parameters channel conditions designed optimize number parameters depending network topology type device power consumption mobile devices implement radios usually fixed energy budget due finite battery life 
utter importance minimize amount energy consumed private radios 
throughput higher transmission rates provide important potential throughput usually higher bers 
higher bers require retransmissions error free transmissions decreases application level throughput 
focus task maximizing application level throughput infrastructure networks practical rate adaptation algorithms 
published discusses issues surrounding real implementations rate adaptation algorithms believe main contribution identification classes devices low latency high latency systems 
low latency systems allow implementation packet adaptation algorithms high latency systems require periodic analysis transmission characteristics updates transmission parameters 
second contribution proposal simple novel algorithms designed classes devices identified 
performance close optimum represented impractical rbar case infrastructure networks 
experimental results show new algorithms readily implemented existing hardware offer considerable performance improvements existing solutions 
organized follows 
section existing algorithms try address task rate adaptation shortcomings 
identify section key architectural feature system taken account designing rate adaptation algorithm distinction low high communication latency radio baseband block implements rate control algorithm 
describe section algorithm designed low communication latency systems short term adaptation introduces specific longterm adaptation mechanism improve application level throughput 
section new rate control algorithm named adaptive multi rate retry ideas developed designed implemented evaluated high communication latency system ar chipset 
experimental measurements obtained confirm simulation results offer convincing evidence algorithm achieves higher performance previously implemented algorithm 
summary research directions section 
related arf arf rate adaptation algorithm published 
designed optimize application throughput wavelan ii devices implemented dsss standard arf sender attempts higher transmission rate fixed number successful transmissions rate switches back lower rate consecutive failures 
specifically original arf algorithm decreases current rate starts rumors claim arf prism ii devices hard come meaningful information considered sensitive intellectual property 
timer consecutive transmissions fail row 
timer expires number successfully received packet acknowledgments reaches transmission rate increased higher data rate timer reset 
rate increased transmission rate increase commonly referred probing transmission probing packet succeed rate immediately decreased timer restarted trying higher rate second time 
scheme suffers problems channel conditions change quickly adapt effectively 
example ad hoc network interference bursts generated packet transmissions optimum rate changes packet 
arf requires packet failures decrease rate successful packet transmissions increase synchronized sub packet channel condition changes 
channel conditions change change slowly try higher rate successfully transmitted packets results increased retransmission attempts decreases application throughput 
rbar rbar published rate adaptation algorithm goal optimize application throughput 
algorithm requires incompatible changes ieee standard interpretation mac control frames changed data frame include new header field 
algorithm little practical interest deployed existing networks important theoretical interest performance 
rbar algorithm mandates rts cts mechanism pair request send clear send control frames exchanged source destination nodes prior start data transmission 
receiver rts frame calculates transmission rate upcoming data frame transmission signal noise ratio snr received rts frame set snr thresholds calculated priori wireless channel model 
rate sent back source cts packet 
rts cts data frames modified contain information size rate data transmission allow nodes transmission range correctly update network allocation vector nav 
protocol suffers numerous flaws summarized threshold mechanism receiver pick best possible rate requires calculation snr thresholds priori channel model 
algorithm assumes snr packet available receiver generally true devices provide estimation snr measuring energy level prior start reception packet reception packet 
rts cts protocol required hidden nodes lead major performance hit 
interpretation rts cts frames format data frames compatible standard 
rbar deployed existing networks 
algorithm standards goal optimize local power consumption application throughput stated goal 
adapts transmission rate transmission power 
set optimal rate transmission power pairs calculated offline specific wireless channel model 
runtime wireless nodes execute simple table lookups pick optimum rate transmission power combination 
main problems algorithm rts cts protocol twofold requires choice priori wireless channel model offline table calculation 
requires priori knowledge number contending stations wireless network 

low high communication la tency systems ieee specification requires implementation layers phy layer integrates modulation demodulation encoding decoding adc dac filtering functions 
functions entirely implemented hardware mac layer implemented combination dedicated hardware dedicated software 
exact split domains entirely device specific 
rate control algorithms interested part mac layer function choose rate packet transfered phy layer 
exact architecture mac layer mac layer implemented hardware varies lot device 
hard design device independent rate control mechanism 
clear communication latency phy layer block implements rate control algorithm mac layer important parameters take account designing algorithm 
communication latency low possible devise rate control algorithm implements packet adaptation 
higher threshold described section complex methods employed 
extension current mac high speed phy implement intelligent transmission power control 
communication latency requirements low latency systems allow implement packet adaptation 
means packet sent get feedback information transmission status packet sending packet 
mac protocol indicates transmission success sending back ack acknowledgment transmitter transmission failure detected lack ack negative ack 
protocol states minimum interval time successful transmission start transmission equal dif minimum interval time failed transmission start transmission equal imeout dif means shown table minimum amount time phy standards decide rate transmission successful failed transmission 
multi standard systems way communication latency phy layer transmission status known rate control algorithm information transmission status acted higher implement packet rate adaptation 
table communication latency constraints ieee standards standard dsss low latency systems information chipset architecture scarce hard come considered sensitive intellectual property lot learned marketing available web 
example clear wavelan chipset mac controller built embedded processor designed texas instruments arm core assumed low latency systems dedicated controlling cpus answer real time requirements run dedicated software 
high latency systems hand integration higher chip count smaller embed cpus mac controllers require host cpu implement lot mac layer 
ar chip part falls category 
host cpu able handle strict latency requirements needed perform packet decisions operating system running usually typically general purpose non realtime os means interrupt latency bounded 

adaptive arf algorithm motivations arf designed low latency system second generation wavelan devices 
reasonably handling short term variations wireless medium characteristics infrastructure network fails handle efficiently stable conditions norm 
typically office workers setup laptop sit chair desk hours 
rarely walk typing computer keyboard 
environment best rate choose optimize application throughput highest rate low number retransmissions low 
typically higher rates achieve higher application level throughput higher pers generate retransmissions decreases application level throughput 
arf recognize best rate extensively tries constantly successfully transmitted consecutive packet higher rate able react channel condition changes 
process costly regular transmission failures generated arf decrease application throughput 
inability arf truly stabilize long periods direct consequence belief long term variations wireless medium handled mechanism handle short term variations 
true reason efficient 
avoid scenario described obvious solution increase threshold decide increase current rate 
approach improve performance certain scenarios practice completely disables ability arf react short term channel condition changes 
problem led idea forms basis threshold continuously changed runtime better reflect channel conditions 
adaptation mechanism increases amount history available algorithm helps better decisions 
chosen adapt threshold binary exponential backoff beb introduced 
transmission probing packet fails switch back immediately previous lower rate arf multiply number consecutive successful transmissions maximum bound set required switch higher rate 
threshold reset initial value rate decreased consecutive failed transmissions 
detailed pseudo code describes formally behavior arf available 
effect adaptation mechanism increase period successive failed attempts higher rate 
fewer failed transmissions retransmissions improves throughput 
example shows period time efficient transmission mode mode 
arf tries mode successful transmission mode uses history channel try increase rate successfully transmitted packet 
performance evaluation simulation environment specifically designed infrastructure network focused comparing performance environment arf rbar 
performed simulations simulation environment described uses ns network simulator extensions cmu monarch project rbar implementation 
version ns rbar implementation directly support infrastructure networks 
supports ad hoc networks offers choice numerous ad hoc routing algorithms 
impossible evaluate algorithm multi node infrastructure network 
decided methodology described infrastructure networks simulated node ad hoc network 
motivations doing able reproduce simulation conditions results published exactly able achieve fair comparison rbar 
network contains stations 
station remains static station moves station movement station continuous stays static seconds moving meters station station stops single cbr continuous bit rate data transmission station started 
cbr packet bytes long 
cbr flow attempts transmission packets ms apart generates continuous data flow 
simulations rts cts mechanism achieve higher throughput peak default cbr flows provide simulations cbr flow packets ms apart 
shown transmission modes mega bits second mbps mbps perform worse modes simulations 
chose experiments simulations 
removed mbps mode coverage range worse mbps transmission mode suggested 
algorithm parameters analyze influence algorithm parameters ran sets simulations 
set simulations kept constant parameters changed th parameter bounds defined table 
recorded total number packets transmitted simulation minimum number packets transmitted set 
plot figures relative variation total number packets transmitted simulation 
detailed packet timer arf time timer originally described 
authors established value little influence behavior arf time packet shows arf requires packets switch higher rate transmission conditions improve 
dense ad hoc network wireless medium characteristics vary times transmission packets mainly high collision probability 
context impossible arf adapt channel characteristics correctly ad hoc simulation results 
transmission mode arf time sec mode selection comparison arf 
table parameters parameter default variation range number packets number packets number packets unit noticeable influence behavior 
variations number packets transmitted simulation represent minimum number packets transmitted 
similarly impact modification small triggers variation total number packets smaller minimum number packets transmitted 
parameter relatively important influence performance algorithm shows goodput improvement reaches 
performance algorithm reaches plateau reaches 
arbitrarily chose default value felt gave improvement impairing ability algorithm react channel condition improvements reasonable amount time 
exact value real device need fine tuned help extensive field testing 
simulation results results single rate transmissions 
simulations rts frames cts frames ack frames plcp headers sent bpsk modulation fec forward error correction rate equal mbps data rate basic mode 
note throughput shown exclude mac phy headers 
shows mean goodput goodput represents application throughput achieved arf rbar conditions 
results show arf fails perform fixed rates mode 
main reason explained section arf periodically generates transmission failures 
rbar picks best available rate means number transmission failures lower 
mean goodput higher 
shows performs average rate selection rbar better arf 
main advantage rbar require rts cts protocol 
case performance expected higher achieved rbar shown 
simulation results previous section clearly show performance improvement offered arf reach average near optimum performance rbar algorithm requiring incompatible changes protocol 
furthermore requires hardware low communication latency block implements rate control algorithm transmission block handles ack timeouts 
new algorithm easily incrementally deployed existing infrastructure networks simple firmware driver upgrade node 

adaptive multi rate retry algorithm designed low latency system ar devices access fell high latency category 
led adapt binary exponential backoff hardware hand 
ar chipset complete linux driver ar chipset available multiband driver wifi mad wifi project hosted sourceforge 
project contains binary hardware abstraction layer hal hides device specific registers mac implementation imported bsd kernel linux ar driver heavily inspired bsd ar kernel driver 
hal exports classic interface ar chipset 
allows user create unbounded fifos queue transmission descriptors schedule packets transmission 
descriptor contains status field holds relative variation total number packets transmitted minimum number packets transmitted number packets influence value performance 
relative variation total number packets transmitted minimum number packets transmitted number packets influence value performance 
sion status descriptor pointer size data transferred 
transmission descriptor contains ordered set pairs rate transmission count fields 
schedule transmission data buffer software driver inserts fifos properly initialized transmission descriptor 
wireless medium available transmission hardware triggers transmission descriptor located head fifo 
transfers descriptor data pointed descriptor system ram local ram starts transmission data rate specified descriptor 
transmission fails hardware keeps trying send data rate times 
transmission keeps failing hardware tries rate times rate times rate times 
transmission failed times transmission abandoned status field descriptor updated transferred back local ram system ram 
process summarized 
transmission completed abandoned hardware reports transmission descriptor number missed acks transmission descriptor 
interesting note number indirectly indicates final transmission rate packet transmission rate retry 
relative variation total number packets transmitted minimum number packets transmitted influence value performance 
relative variation total number packets transmitted minimum number packets transmitted number packets influence value performance 
example number missed acks zero means transmission completed successfully rate 
number missed acks means transmission failed second completed successfully 
number missed acks means transmissions failed fourth succeeded 
number missed acks means transmissions failed 
madwifi algorithm existing madwifi driver implements rate control stage process quite natural capabilities exported hal 
short term variations handled multi rate retry mechanism described previous section long term variations handled changing value pairs regular fixed intervals second intervals 
algorithm natural way introduce binary exponential backoff madwifi algorithm adapt length period change values rate count pairs exactly 
simplify logic code decided heuristics simpler madwifi algorithm choose rate count system architecture ar device 
pairs period boundaries 
ensure short term variations wireless medium quickly acted chose madwifi uses 
rate chosen minimum rate available typically mbps networks 
rates determined implemented simplest heuristic possible setting immediately lower available rates 
rate control algorithm determines previous value transmission results elapsed period 
exact heuristics described 
performance evaluation simulation environment simulation environment described section evaluate performance algorithm compare madwifi rbar algorithms 
madwifi algorithm simulated trivial copy code available madwifi driver slightly modified simulation environment transmission modes chosen networks 
implementation issues implementation madwifi algorithm simulator algorithm simulator driver straightforward way transmission fifo shared ar chip linux kernel driver handled 
specifically original madwifi driver initialized transmission descriptors fifo inserted fifo 
annoying consequence behavior generate wide oscillations algorithm due different rates packets located head tail fifo 
example user application generates mb data flow wireless channel conditions allow mb transmission mode reasonable source buffers quickly fill transmission descriptor fifo full user application encounters lot packet drops source 
low rate set rate control algorithm try increase rate set means new packet enters fifo uses new rate set 
decision period boundary transmission statistics adapt current rate set generated transmission packets rate set fifo 
rate set low rate control algorithm try increase rate set yielding 
point packets rate set high reach front fifo treated hardware fail rate control algorithm drop current rate set quickly 
decrease rate set reasons increased previously 
observed phenomenon preliminary experiments reproduced simulation shown curve named original madwifi 
chose avoid problem modifying mad wifi driver parse transmission fifo time rate change happens apply rate change transmission descriptor concerned immediately 
simulations experiments explicitly stated conducted modified version madwifi algorithm 
noted painful costly process parsing transmission descriptor fifo rate change needs applied alleviated proper hardware support provided 
example possible include transmission descriptor pointer rate count pairs rate count pairs 
alternative designs chip cache rate count patterns destination basis possible 
algorithm parameters algorithm set ideas developed beb adapt success threshold similar parameters tweaked 
parameters important parameters 
bother evaluate influence increasing decrease ability algorithm react channel condition changes 
shows mean goodput kbps bpsk mbps fec bpsk mbps fec qpsk mbps fec qpsk mbps fec qam mbps fec qam mbps fec qam mbps fec qam mbps fec distance meter mean goodput single hop ieee transmission modes 
mean goodput kbps rbar rts cts arf rts cts rts cts rts cts distance meter mean goodput single hop different automatic rate selection algorithms 
old influences output algorithm 
expected follows pattern observed throughput increases increase 
section choose highest value possible avoid decreasing ability react channel condition changes rapidly settle value quite close plateau maximum 
performance results simulation results summarized clearly show performs better original rate control algorithm madwifi driver achieves similar performance rbar average 
beb adaptive mechanism main reason throughput improvement probability trying rate set requires numerous retransmissions greatly diminished 
experimental results test setup created approximate closely possible real world cases 
chose typical office environment people walking office access point wg setup private ssid office laptop orinoco gold pcmcia card ar chipset setup office approximatively relative variation total number packets transmitted minimum number packets transmitted number packets influence value performance mean goodput kbps distance meter rbar madwifi original madwifi mean goodput single hop rbar madwifi mode selection 
ters away access point 
installed unmodified linux kernel redhat linux distribution test laptop tested versions madwifi driver original madwifi original unmodified madwifi driver 
madwifi madwifi driver modified apply immediately rate changes transmission fifo described section 
madwifi driver modified apply immediately rate changes implement rate control algorithm 
mitigate variations transmission conditions time ran sets experiments results shown 
goal sets experiments compare average throughput achieved drivers 
set experiments loaded linux kernel alternatively selected drivers started second continuous mbps udp stream laptop machine located mbps ethernet link access point 
executed experiment times selected drivers throughput mbps original madwifi experiment throughput mbps madwifi experiment throughput mbps madwifi original madwifi experiment experimental results original madwifi madwifi recorded average throughput achieved experiment 
despite variability experiments observe clear performance improvement achieved original madwifi madwifi 
shows reached average mbps original madwifi madwifi reached average mbps 
results show original madwifi madwifi significative average throughput difference observe clear throughput oscillation original madwifi experiments 

described fundamental difference classes devices influence design practical rate adaptation algorithms 
novel algorithms arf madwifi respectively designed low latency high latency systems 
simulations show perform close optimum represented impractical rbar case infrastructure networks 
implementation algorithm linux kernel driver ar devices brings evidence algorithms improve achievable performance readily implemented existing devices 

acknowledgments madwifi project linux driver implement algorithm gavin holland providing ns implementation rbar 
special go slim digital communications group enst spent long hours explaining digital radio architecture digital signal processing techniques applied digital radios 

systems 
wavelan chipset standard form factors preliminary product brief 
december 

wireless lan ghz mbps turbo radio chip wlan networking products technology overview 
www com pt index html july 
holland vaidya bahl 
rate adaptive mac protocol multi hop wireless networks 
proceeding mobicom 
acm july 

wavelan ii high performance wireless lan band 
bell lab technical journal pages summer 
turletti 
ieee rate adaptation practical approach 
madwifi 
project information 
sourceforge net projects madwifi july 
turletti 
simulation performance analysis wireless lan 
proceeding international symposium telecommunications 
iran august 
metcalfe boggs 
ethernet distributed packet switching local computer networks 
acm communications july 
ns 
network simulator 
www isi edu nsnam ns july 
qiao choi 
goodput enhancement ieee wireless lan link adaptation 
proceeding icc 
ieee june 
qiao choi jain shin 
optimal low energy transmission strategy ieee proceeding mobicom pages 
acm september 
qiao choi shin 
goodput analysis link adaptation ieee wireless lans 
ieee transaction mobile computing october december 
