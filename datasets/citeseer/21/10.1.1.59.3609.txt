engineering self organising emergent systems simulation scientific analysis tom de wolf tom holvoet giovanni research group scientific computing research group department computer science kuleuven celestijnenlaan leuven belgium tom giovanni tom holvoet cs kuleuven goal engineering self organising emergent systems acquire macroscopic system behaviour solely autonomous local activity interaction 
due non deterministic nature systems hard guarantee required macroscopic behaviour achieved maintained 
considering self organising emergent system industrial context automated guided vehicle agv transportation systems guarantees needed 
empirical analysis approach proposed combines realistic agentbased simulations existing scientific numerical algorithms analysing macroscopic behaviour 
numerical algorithm obtains analysis results fly steering accelerating simulation process algorithm goal 
approach feasible compared formal proofs leads reliable valuable results compared mere observation simulation results 
approach allows systematically analyse macroscopic behaviour acquire macroscopic guarantees feedback engineering process iteratively shape self organising emergent solution 
industrial research project emc examine possibilities emergent solution automated guided vehicle agv warehouse transportation system 
case study group agvs transport incoming loads pick locations specific destinations warehouse 
experience shown current centralised system problems scalability handle agvs efficiently 
system flexible current solution handle frequent changes transportation problem needs customised optimised time system deployed 
need decentralised system adapts different situation 
emergence self organisation defined combination promising approach complex dynamic system agv system 
examples systems self organised emergent solutions advantageous telecommunication networks flexible manufacturing networks dynamic traffic networks 
goal engineering self organising emergent systems acquire system coherent macroscopic behaviour meets requirements results solely autonomous local activity interaction 
macroscopic defined observed global pattern structure behaviour system 
despite multiple initiatives systematically build system remains open issue 
today systems built ad hoc manner 
experience industrial project emc revealed considering self organising emergent system industrial context guarantees needed required coherent macroscopic behaviour achieved maintained 
describes approach allows systematically analyse macroscopic behaviour guarantee requirements achieved 
realistic agent simulations combined existing scientific numerical analysis algorithms dynamical systems 
combination leads reliable valuable results compared mere observation simulation results analysis algorithm obtains results fly steering accelerating simulation process algorithm goal 
order achieve systematic approach building self organising emergent systems proposed integrate analysis approach engineering process constant feedback loop scientific analysis engineering shapes self organising emergent solution 
systematic simulation engineering process achieved 
structured follows 
section agv case study described motivated 
section describes analysis approach systematically apply 
section discusses systematically engineer self organising emergent system exploiting scientifically founded analysis results 
directions 
case study automated guided vehicles industrial research project emc group develops self organising emergent solutions agv warehouse transportation systems 
experience revealed industrial need guarantees macroscopic behaviour 
agv case 
automated industrial transport system consider uses multiple transport vehicles 
vehicle called agv guided computer system agv 
vehicles get energy battery move packets loads materials goods products warehouse 
individual agv capable limited number local activities move pick packet drop packet 
goal system transport incoming packets destination optimal manner 
simulator developed agv system allows execute simulations needed analysis approach described 
screen shot illustrates problem setting described locations packets picked located left destinations located right network consists stations connecting segments agvs move 
segments unidirectional 
bidirectional segment constructed overlapping unidirectional segments 
packets depicted rectangular boxes agvs shown hold packet 
www cs kuleuven pickup pickup pickup pickup pickup pickup dropoff pickup dropoff pickup dropoff dropoff dropoff dropoff pickup dropoff pickup 
screen shot agv simulator dropoff dropoff dropoff agv problem dynamic problem non deterministic features packets arrive moment agvs fail obstacles appear 
project industrial partner shown solution central server control agvs handle frequent changes efficiently 
central server constantly monitor warehouse agv detect react changes steering agv 
agvs moving constantly reacting changes occur instantaneously 
central server bottleneck presence frequent changes 
consequence current central solution scalable handle limited number agvs 
system flexible deployed system needs customised optimised time deployed warehouse 
larger dynamic agv systems require self organising emergent solution agvs adapt changing situations locally obtained information local interactions local activity 
considering self organising emergent solution agv system guarantees needed required coherent macroscopic behaviour achieved maintained 
analysis approach integrated engineering process offers guarantees required 
analysis approach main question know certain self organising emergent system exhibits required macroscopic behaviour 
analysis approach described section focusses analyse macroscopic behaviour system result guarantees macroscopic behaviour 
firm guarantees obtained system modelled formally required macroscopic behaviour analytically 
constructing formal model correctness proof complex interacting computing system infeasible 
wegner proves fact computing systems interaction powerful problem solving engines mere algorithms 
interaction models powerful denoted incomplete mathematical sense 
completeness ensures possible behaviour modelled 
wegner shows model possible behaviour interaction model formally proving correctness interactive models self organising emergent systems merely difficult impossible 
alternative empirical scientifically founded method analyse macroscopic behaviour advocated 
empirical analysis requires focussing relevant properties ignoring irrelevant ones 
macroscopic properties typically quantified measurable variables define macroscopic variables 
macroscopic variables incomplete representation system behaviour problematic physicists achieve pragmatic goals prediction control dealing entirely incomplete observable representations 
section focusses important analyse self organising emergent systems macroscopic variables 
analysis done system needs modelled 
section discusses distinction aggregate models individual simulation models preferred 
section describes analysis approach combines realistic individual simulation models existing arsenal numerical analysis algorithms analyse behaviour self organising emergent systems 
section discusses interesting macroscopic properties agv case 
analysis self organising emergent systems trends analysis approach outlined need define results expected analysis self organising emergent solutions 
kind macroscopic properties variables interested 
self organising emergent systems promise scalable robust stable efficient exhibit low latency behave non deterministically 
required macroscopic behaviour achieved exact evolution predictable 
self organising emergent systems exhibit trends predictable 
trend defined evolution macroscopic behaviour average taken number system runs 
due dynamics self organising emergent systems robustness preferred optimal macroscopic behaviour 
optimality achieved conditions system operates remain static 
static situation reached presence frequent changes 
preferring robustness optimality implies temporal deviations required behaviour allowed long required behaviour maintained trend evolution average behaviour 
temporal deviations necessary explore space possibilities counteract frequent system changes 
main results expected analysis macroscopic behaviour self organising emergent systems statements macroscopic behaviour ensure required trend evolution behaviour 
define statements macroscopic guarantees 
analysis approach described section focusses analysis trends order obtain macroscopic guarantees 
issues dynamics system microscopic behaviour frequency deviations large important outside scope 
modelling individual versus aggregate analysis done model analysis subject macroscopic behaviour needed 
generally kinds models 
called aggregate models constructed macroscopic variables building blocks defining relationships variables 
implicitly assumes evolution macroscopic variables result behaviours individuals system 
traditionally models equation models evolution equation represents evolution macroscopic behaviour 
second individual models consist set agents explicitly encapsulate behaviours various individuals system 
macroscopic behaviour observed running simulation model 
context self organising emergent systems individual models number advantages respect equation models see 
relevant advantages individual models easier construct 
natural mapping system model 
model just equals system 
individual models appropriate domains characterised high degree localisation distribution case self organising emergent systems 
equation models infeasible mathematical formal models impossible construct complex interacting systems discussed section 
possible model complex reasonable manipulation comprehension 
individual models easy adjust model order play games translating constructing new equation model 
equation models may yield realistic results compared model 
mainly due simplification required construct equation detail individual behaviours significant impact macroscopic result 
example wilson offers detailed study compares individual models equation models predator prey system finds equation models result qualitatively different behaviours compared real behaviour especially due stochastic behaviour individual simulation 
hand equation models popular mainly due availability arsenal numerical tools techniques analysing system dynamics 
contrast individual models lack scientific techniques 
mere observations individual simulations results reliable guarantees lot simulations executed long time 
context self organising emergent systems simulations expensive amount simulation time needs minimised 
parunak argues choose individual modelling equation modelling depending problem hand 
analysis approach described section combines advantages approaches realistic individual simulation models aggregate numerical analysis 
need equations eliminated simulation process accelerated goal analysis algorithm amount expensive simulation time limited essentially necessary simulations 
equation free macroscopic analysis uses equation free macroscopic analysis approach combines numerical analysis algorithms realistic individual simulation models 
traditionally numerical analysis applied equation models 
macroscopic behaviour modelled equation macroscopic equation numerical algorithms obtain quantitative statements macroscopic properties 
discussed earlier complex dynamical systems deriving macroscopic equation possible system simple 
equation free approach resolves issue replacing equation model realistic simulation model 
approach analyses simulation measurements contrast mere observation simulation results numerical analysis algorithms acquire results steering simulation process algorithm goal 
example numerical algorithm goal find steady state behaviour measured behaviour converges single value 
goal extrapolate behaviour far possible time 
advantage results calculated fly simulations executed needed obtain specific result 
reduces computational effort drastically compared mere simulations typically simulates huge number time steps starting time step 
results equal better scientific value equation analysis scientific numerical algorithms possible discrepancies model real system dynamics avoided realistic individual model note numerical algorithms assume smooth behaviour continuous evolution time 
described section self organising emergent systems main focus analysing trends expected evolve gradually 
approach 
equation free macroscopic analysis approach proposed 
observation numerical techniques explicit need macroscopic equation need routine evaluates equation value macroscopic variables 
equation evaluations replaced suitable simulation numerical analysis algorithms readily applied 
achieve procedure illustrated called macroscopic time stepper performed 
initial values xi macroscopic variables study supplied analysis algorithm 
values initialisation operator init initialises number simulations accordingly measurement macroscopic variables initialisation equals initial values 
multiple ways initialise simulation value macroscopic variable degrees freedom need initialised randomly multiple 
simulations simulate executed predetermined duration individual simulation code 
measures measure averages simulations values macroscopic variables xi analysis algorithm result 
equation evaluation replaced simulation code 
analysis algorithm processes new results obtain initial values 
init xi analysis results simulate simulate micro macro analysis algorithm simulation results xi parameters measure 
equation free accelerated simulation guided analysis algorithm algorithm decides configuration simulations initial conditions duration 
simulate measure cycle repeated analysis algorithm reaches goal 
exists arsenal numerical algorithms analyse system dynamics 
example called projective integration algorithm goal considerable acceleration simulations time minimising number needed simulation steps extrapolation 
illustrates basic idea 
initial value measured macroscopic variable chosen analysis algorithm 
initial value set simulation initialised microscopic value init operator executed certain duration 
points time measures new value macroscopic variable measure operator 
measure operator repeated number times successive values xk available projective integration algorithm extrapolation step skips time steps simulation 
new value xk estimated extrapolation number measured values xk xk 
starting new value xk process simulations xk xk xk xk xk init init measure measure extrapolation step time xk 
micro macro 
equation free accelerated simulation time repeated initialising new simulations microscopic value xk acceleration time achieved 
simulations accelerated ways 
suppose goal obtain steady state behaviour look values macroscopic variables remain constant time evolves 
computing time evolution time step system stays steady state long uses numerical procedures determine steady states direct efficient way newton algorithm 
denote macroscopic time stepper starting initial macroscopic value xi performing simulation fixed duration measuring new macroscopic value xi 
denote measured value macroscopic variable simulation xi xi 
steady state computed solving equation numerically newton algorithm 
iterative method illustrated 
axis contains initial values xi axis differences xi xi initial measured values cycle macroscopic time stepper 
chooses initial values close 
init simulate measure cycle done get measured values 
measured values estimation derivative plot extrapolate new estimation steady state 
cycle repeated conditions thresholds newton algorithm decide reached steady state 
difference initial value measured value init simulate measure cycle 
equation free newton analysis initial value contrast mere observation simulation results limited set short simulations necessary generate consecutive approximations steady state scientific algorithm objectively decides accuracy result 
note due equation free approach equation required 
newton algorithm needs evaluation equation certain points time replaced suitable simulation measurement 
equation free principle presence parameters general tasks parameter optimisation control performed 
focussed accelerated simulation analysis approach guided analysis algorithm goal obtain reliable valuable results mere observation simulation results 
proposed method constitutes bridge classical numerical analysis microscopic agent simulation 
road map 
number steps needed equation free approach 
overview ant foraging pheromones example 
identification macroscopic properties 
goal analysis approach systematically acquire results give macroscopic guarantees 
systematic approach implies divides problem manageable subproblems 
macroscopic behaviour self organising emergent system typically consists number macroscopic properties maintained 
ant foraging example macroscopic properties amount food gathered directed movement ants shape pheromone path important 
step macroscopic properties considered separately analysis approach identify properties important considered case study examples agv case section 

identification macroscopic variables 
context self organising emergent systems challenge find variables measures macroscopic properties study 
words quantification macroscopic properties terms measurable variables needed 
example entropy measure concentration ants pheromone paths measure focussed ants choose direction possibility 

related macroscopic variables 
variables macroscopic properties influence property study 
variables incorporated analysis process 
evolution system correctly completely represented analysed 
underlying assumption equation free analysis approach set measurable variables offer adequate description macroscopic system dynamics 
example entropy concentration ants 
variable omits evolution pheromones influence ant movement 
variables needed capture macroscopic evolution pheromones 

microscopic variables 
macroscopic variable corresponding variables simulation level individual entities system influence macroscopic variable need identified 
ant foraging include variables exact positions ants strengths positions pheromones ant holds food 

measurement operator 
define measurement operator measures macroscopic variables microscopic variables simulation 

initialisation operator 
operator needs defined allows initialise microscopic variables simulation multiple simulations reflect values macroscopic variables 
degrees freedom initialisation initialised randomly multiple simulations considered average randomness 
example re initialising ant system requires positioning ant concentration ants exact positions allow degrees freedom 

micro macro scale separation 
equation free approach efficient checked microscopic variables evolve faster timescale macroscopic variables determine macroscopic evolution 
changes state individual entities system movement ants need fast compared evolution system behaviour changes pheromone path shape ant concentration 
case error introduced extrapolation initialisation procedure significantly influence results create errors 

define different steady scenarios analyse 
macroscopic guarantee holds possible conditions system executing difficult impossible give 
steady scenario defined setting system certain assumptions operational conditions initial conditions possible changes frequency change 
step road map identifies system parameters need modified order cover range possible operational conditions system 
example consider steady scenarios system high utilisation load low utilisation load scenario frequent oscillation high low utilisation loads 
ant foraging example parameters number ants involved evaporation rate pheromones amount food modified 
consequence macroscopic guarantees respect specific steady scenario specific macroscopic property see step road map 
complete analysis result macroscopic behaviour consists multiple macroscopic guarantees 

analysis algorithm 
analysis algorithm chosen 
depending kind data goals finding steady state behaviour optimising value system parameter evaporation rate optimal certain scenario controlling operational modus selects suitable numerical analysis algorithm projective integration newton method 
self organising emergent systems open issue understanding macroscopic behaviour accomplished individual entities 
gap result seen macroscopic level rules microscopic level cause result 
steps road map far trivial knowledge bridge micro macro gap required 
especially defining measurement initialisation operators challenging 
requires know represent macroscopic property variable measure microscopic level initialise microscopic simulation reflect macroscopic variable 
successful application equation free analysis road map result new insights macroscopic level related microscopic level 
shown section approach offers ability check certain set macroscopic variables completely captures evolution macroscopic property 
macroscopic variables agv case application domain important macroscopic properties different 
requirements achieved macroscopic behaviour determine im portant macroscopic properties desired guarantees 
agv case number issues important examples distribution agvs factory floor macroscopic property require average agvs equally distributed factory floor maximum coverage 
spatial entropy measure macroscopic variable reflects distribution agvs 
time seconds normal simulation 
time seconds re initialisation simulation time seconds extrapolated simulation 
different simulation processes distribution agvs reflected average spatial entropy evolution high entropy equal distribution low entropy unequal distribution 
results validated described analysis approach 
example evolution average entropy normal simulations shown time step average runs taken 
figures evolution shown obtained different ways 
simulation process executed simulations done time steps set measured macroscopic variables including entropy initialise new set simulations simulations time steps done 
results show simulation re initialisation chosen set macroscopic variables reflects correct average evolution compared 
re initialisation simulation process allows check chosen set macroscopic variables reflect evolution system macroscopic variables needed representative analysis see step road map 
second simulation process executed projective integration algorithm averaged simulation runs simulation duration extrapolation step time steps 
results show analyse evolution average entropy half simulation time needed normal simulation 
shown distribution evolved steady state behaviour stable equal distribution agvs factory floor achieved 
details 
applying newton algorithm see section allows confirm steady state behaviour scientifically accurate mere observation simulations 
throughput important characteristic agv case 
throughput defined number packets transported certain time span hour 
challenge identify macroscopic variables allow represent measure throughput evolution 
throughput characteristic expressed time analysis approach expects ability measure macroscopic variables time step time independent macroscopic variables needed calculate throughput post analysis step 
possible set macroscopic variables number packets transport number agvs currently holding packet 
number packets queues pick locations 
pick location queue packets arrive 
sum queue lengths 
assume packets arrive pick location queues fixed arrival rate ar number packets arriving time span throughput calculated follows 
define queue growth rate increase decrease total queue length time span qr total queue length time number packets transport constant cte throughput defined ar qr possible approach calculate throughput count number packets delivered drop locations time span number drop offs time dependent variable variable moment time possible useful 
calculation uses time independent variables real state system 
clear biggest challenge applying analysis approach find suitable macroscopic variables reflect evolution macroscopic properties needs certain guarantees 
macroscopic variables re initialisation simulation moment time required 
seeks get time independent variables 
intention give idea approach applied 
analysis results give guarantees publication 
engineering analysis results biggest problem engineering self organising emergent systems lack systematic approach build solution meets requirements 
despite efforts find systematic engineering approach finding approach starts macroscopic requirements systematically constructs system deriving behaviours individual agents system macroscopic requirements infeasible 
combination creatively building solution analysing scientifically founded experimental methods promising 
traditional engineering design methods tend bottom approach known components assembled subsystems system constructed tested required properties 
design modified iterative manner system meets requirements 
discussed formal design method job authors argue method exist 
needs experimental scientifically founded method 
propose integration systematic analysis approach described earlier engineering process 
creative activity builds prototype system experience combining existing mechanisms guidelines achieve self organising emergent system 
systematically analyses system respect wanted macroscopic requirements analysis approach described 
feedback analysis engineering cycle adjust tune solution order systematically evolve final solution meets requirements 
course feedback obtained analysis self organising emergent systems result experience guidelines engineering processes 
analysis approach extensively engineering process gives number possibilities 
examples bifurcation analysis parameters explained section analysis approach allows numerical analysis algorithms directly steer simulation process order obtain simulation results fly efficiently possible 
analysis algorithm called bifurcation analysis 
certain parameter macroscopic variable algorithm analyses influence parameter macroscopic behaviour macroscopic variable 
example agv case number agvs important parameter 
results indicate agvs ideal system meet requirements best possible happens number agvs goes ideal range values 
throughput example see section arrival rate ar interesting parameter order know utilisation load certain solution performs acceptable boundaries 
results useful feedback systematically tune re engineer solution agv case study 
comparison evaluation existing decentralised mechanisms today emergent systems number decentralised mechanisms lot inspired nature pheromones gradient fields 
evaluating decentralised mechanisms respect example nonfunctional characteristics scalability flexibility reaction speed changes communication bandwidth allows precise comparison mechanisms 
mechanism number parameters tune evaporation rate digital pheromones 
analysis done influence parameters context parameter range suitable 
engineering self organising emergent system information guide choice appropriate mechanisms problem hand contribute systematic engineering systems 
exploiting possibilities integrates analysis approach engineering process constant feedback loop analysis engineering shapes self organising emergent solution 
systematic simulation engineering process scientific analysis feedback essential achieved 
clear way systematically build self organising emergent system remains open issue 
considering self organising emergent system industrial context systematic analysis approach needed gives guarantees required coherent macroscopic behaviour achieved maintained 
formal analytic proofs infeasible mere observation simulation results reliable scientific proposed approach combines realistic agent simulations existing scientific numerical analysis algorithms dynamical systems 
compared mere observation simulation results reliable valuable results returned analysis algorithm obtains results fly steering accelerating simulation process algorithm goal 
order achieve systematic engineering approach proposed exploit analysis approach engineering process constant feedback loop scientific analysis engineering shapes emergent solution 
includes applying approach extensively agv case application domains 
number issues need resolved order approach easy applicable 
example clear guidelines chose suitable macroscopic variables reflect macroscopic properties study 
making analysis approach straightforward integration analysis approach systematic engineering approach worked explicit example engineering road map 
road map indicate traditional software engineering methodology scientific analysis situated feedback analysis guide engineering process 

supported leuven research council part concerted research action agents coordination control de wolf holvoet 
research assistant fund scientific research flanders fwo 
supported fwo belgian federal science policy office 

emc modular controls concept 
iwt funded project participants www research group leuven started march february 

de wolf holvoet emergence self organisation statement similarities differences 
proceedings second international workshop engineering self organising applications new york usa 
wegner interaction powerful algorithms 
communications acm 
edmonds bryson insufficiency formal design methods necessity experimental approach understanding control complex mas 
proceedings rd internation joint conference autonomous agents multi agent systems aamas new york acm press 
edmonds experimental method produce reliable self organised systems 
brueckner eds engineering self organising sytems methodologies applications 
volume lecture notes artificial intelligence springer appear spring 

anthony emergence paradigm robust scalable distributed applications 
proceedings ieee international conference autonomic computing new york 
parunak savit riolo agent modeling vs equation modeling case study users guide 
mabs 

wilson resolving discrepancies deterministic population models individual simulations 
american naturalist 
gear equation free computer assisted analysis complex multiscale systems 
aiche journal 
gear hyman equation free coarse grained multiscale computation enabling microscopic simulators perform system level analysis 
communications mathematical sciences available online www com cms 

press flannery teukolsky vetterling numerical recipes art scientific computing 
nd edn 
cambridge university press cambridge 
guerin emergence constraint self organizing systems 
nonlinear dynamics psychology life sciences 
de wolf holvoet decentralised autonomic computing analysing self organising emergent behaviour advanced numerical methods 
proceedings ieee international conference autonomic computing seattle usa accepted 

guo james valencia li directed self assembly dimensional top bottom design 
proceedings second international workshop engineering self organising applications new york usa 
parunak brueckner engineering swarming systems 
zambonelli eds methodologies software engineering agent systems 
volume multiagent systems artificial societies simulated organizations 
springer 
catalog biologically inspired primitives engineering self organization 
rana zambonelli eds engineering self organising systems nature inspired approaches software engineering 
volume lecture notes computer science springer 
