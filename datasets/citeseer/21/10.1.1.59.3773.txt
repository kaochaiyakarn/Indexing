annals mathematics computing teleinformatics vol pp reasoning methods personalization semantic web grigoris antoniou institute computer science forth heraklion crete greece antoniou ics forth gr baldoni cristina patti dipartimento di informatica universit degli studi di torino torino italy baldoni patti di robert baumgartner thomas eiter marcus herzog roman hans tompits institut informationssysteme technische universit wien austria herzog dbai tuwien ac eiter roman tompits kr tuwien ac fran ois bry sebastian schaffert institut informatik maximilians universit nchen germany francois bry sebastian schaffert ifi lmu de nicola henze information systems institute semantic web group university hannover germany henze kbs uni hannover de wolfgang may institut informatik universit germany may informatik uni de semantic web vision genera tion web machines enabled understand meaning information order better interoperate better support humans carrying tasks appealing fosters imagination smarter applications retrieve process information enhanced ways 
vision particular attention devoted personalization bringing user needs center interaction processes aim semantic web initiative advance state current web semantics 
specifically proposes semantic annotations describe meaning certain parts web information 
example web site hotel suitably annotated distinguish personalized web systems overcome size fits paradigm provide individually optimized access web data information 
provide overview trends establishing personalization semantic web discussion reasoning rule query languages semantic web hotel name location category number rooms available services meta data facilitate automated processing information web site making accessible machines primarily human users case today 
outline architecture service personalization show results personalizing web applications 
question arises semantic annotations different web sites combined uses terminologies 
solution index terms semantic web personalization reasoning semantic web rule languages query languages lies organization vocabularies called ontologies 
shared vocabularies allow web data extraction issn annals mathematics computing teleinformatics vol pp interoperability different web resources applications 
example geographic ontology determine crete greek island heraklion city crete 
information crucial establish connection requester looking accommodation greek island hotel advertisement specifying heraklion hotel location 
writing time recommendations world wide web consortium lower layers semantic web tower including ontology layer semantic web 
logic layer residing top semantic languages ontology languages shape 
take certain perspective reasoning rule query languages semantic web investigate required expressiveness reasoning languages semantic web foster personalized web applications 
brief semantic web section ii introduce rule languages semantic web particular notion nonmonotonic rules section iii 
aspects evolution updates events discussed subsequent section exemplified event condition action approach 
reasoning actions implementing personalization described section turn attention mechanisms applications maintaining effective reasoning rule approaches querying transforming semantic descriptions discuss xcerpt language section vi 
approach automatically generate semantic descriptions web data extraction provided lixto suite section vii 
section goes practical describes personal reader framework personalization services semantic web integrates ideas previous sections 
outline service architecture personal reader framework describe example readers application domains 
ii 
reasoning semantic web state art development semantic web proceeds steps step building layer top 
bottom layer find xml language lets write structured web documents userdefined vocabulary 
xml particularly suitable sending documents web supporting syntactic interoperability 
rdf basic semantic web language writing simple statements web objects called resources identified uniquely uri universal resource identifier 
statements triples composed binary predicate linking resources logically represented logical facts 
rdf schema provides simple language writing ontologies 
objects sharing similar characteristics put form classes 
examples classes hotels airlines employees rooms excursions individuals belonging class referred instances class 
binary properties works establish connections classes 
application predicates restricted domain range restrictions 
example restrict property works apply employees domain restriction value companies range restriction 
classes put hierarchies subclass relationship class subclass class instance instance example class island destinations subclass destinations instance island destination crete destination 
hierarchical organization classes important due notion inheritance class declared subclass known instance automatically classified instance far reaching implications matching customer preferences service offerings 
example customer may wish holidays indonesian island 
hand hotel beach advertises location bali 
necessary realistic hotel add information located indonesia island information inferred ontology automatically 
need powerful ontology languages expand rdf schema allow representations complex relationships web objects 
example cardinality constraints course taught lecturer special properties predicates transitivity symmetry 
ontology languages owl built top rdf rdf schema 
easy comprehensive semantic web see 
far reasoning semantic web reasoning knowledge expressed particular ontology 
possible ontology languages formal languages example allow reason class membership instance class subclass infer instance equivalence classes class equivalent class equivalent class infer equivalent consistency declared classes disjoint instance antoniou baldoni reasoning methods personalization semantic web error 
classification declared certain property value pairs sufficient conditions membership class individual satisfies conditions conclude instance derivations preceding mechanically hand 
reasoning support important allows check consistency ontology knowledge check unintended clashes classes automatically classify instances classes 
automated reasoning support allows check classes checked manually 
checks preceding ones valuable designing large ontologies multiple authors involved integrating sharing ontologies various sources 
introducing rules highest layer reached sufficient maturity ontology layer form description logic language owl 
step development semantic web logic proof layers rule systems appear lie mainstream activities 
rule systems utilized ontology languages 
general rule systems play twofold role semantic web initiative serve extensions alternatives description logic ontology languages develop declarative systems top ontologies 
reasons rule systems expected play key role development semantic web include seen subsets predicate logic monotonic rule systems horn logic description logics orthogonal provide additional expressive power ontology languages 
efficient reasoning support exists support rule languages 
rules known practice reasonably integrated mainstream information technology knowledge bases exemplary application rules natural means expressing personalization information 
example rules says exercise related concept person read material exercise thorough discussion personalization rules section viii 
possible interactions description logics monotonic rule systems studied 
previous hybrid reasoning appears best take intersection expressive power horn logic description logics way view intersection horn definable subset owl 
interesting research thread deals exchange rule sets applications making semantic web languages 
works direction include ruleml initiative xml rdf languages swrl proposal owl 
implementations rule systems tailored reasoning web exist 
important systems triple 
iii 
nonmonotonic rules semantic web apart classical rules lead monotonic logical systems researchers started study systems capable handling conflicts rules 
generally speaking main sources conflicts default inheritance ontologies 
ontology merging knowledge different sources combined 
rules exceptions natural representation business rules 
reasoning incomplete information 
defeasible reasoning simple rule approach reasoning incomplete inconsistent information 
represent facts rules priorities rules 
main advantage approach combination desirable features enhanced representational capabilities allowing reason incomplete contradictory information coupled low computational complexity compared mainstream nonmonotonic reasoning 
main features approach defeasible logics rule disjunction 
rules may support conflicting 
logics skeptical sense conflicting rules fire 
consistency preserved 
priorities rules may resolve conflicts rules 
logics take pragmatic view low computational complexity 
system implementations capable reasoning monotonic rules nonmonotonic rules priorities rdf data rdf schema ontologies dr de vice system 
annals mathematics computing teleinformatics vol pp answer set programs nonmonotonic logic programs answer set semantics gelfond lifschitz extended logic programs reasoning problem solving considering possible alternative scenarios 
apart expressing knowledge facts disjunctive rules declarative way asp capable handling incomplete information default knowledge 
furthermore user preferences desires accommodated constructs expressing priorities weak constraints constraints violated penalty 
efficient implementations asp reasoners exist smodels dlv providing frontends preferences extensions brave cautious reasoning 
systems offer gradually expressiveness complexity alignment lower complexity syntactic fragments 
respect application domain semantic web advantages asp high expressiveness 
declarative semantics 
model generation addition inference model generation enables problem solving paradigm solutions problem instance declaratively encoded models logic program 
asp context semantic web proposed 
extension asp programs provides interface description logic knowledge bases owl ontologies extended programs called dl programs may contain queries ontology 
formalism allows flow knowledge ontology logic program back exploiting possibilities handling terminological knowledge nonmonotonic application 
prototype implementation available 
iv 
evolution updates events personalization web heavily depends dynamic aspects priori adaptive evolving reacting events inputs user 
furthermore personalization implemented reactive behavior personalized rules specify situation 
discussed generic query see section update event languages semantic web 
evolution web twofold aspect today web evolution means mainly evolution individual web sites updated locally 
contrast considering web semantic web living organism consists autonomous data sources show global behavior leads notion evolution web cooperative evolution individual resources 
personalization aspects deal primarily local evolution portal site adapts evolving profiles registered users local reactivity reacting user interaction 
background personalization potentially affects global communication node gather special information user requests react remote events relevant users intelligent web nodes get need global communication deal requirements personalized 
data exchange personalization aspects user profiles personalized nodes non technical issues node entitled tell user come play 
way proposed languages evolution reactivity semantic web recommend follow modular approach 
step provide local personalization node part conventional web see 
steps extend results local personalization semantic web semantics personalization ii enhance personalization semantic service ontology personalization iii apply semantic web reasoning personalization level 
addition global language aspects sketched internal mechanisms evolution local personalization base evolution logic program considered 
considering evolution events web aspects taken account local updates apply web site changes distributed scenarios propagated web site 
means addition local update languages declarative semantic framework generically handling communicating changes general explicit updates changes situation described wrt 
combined ontology application generic events 
development generic languages evolution reactivity personalized nodes seamlessly integrated application scenarios developed 
course reactive functionality employed implementing personalization adaptivity shown integrating suitable sublanguages atomic events actions generic languages 
analogously personalization adaptivity subject local global evolution 
language paradigm eca rules propose approach general rules specifically reactive antoniou baldoni reasoning methods personalization semantic web rules event condition action eca paradigm specification reactivity 
important advantage content communication separated generic semantics rules 
cooperative reactive behavior events update data source possibly depend resource detects relevant event delivered explicitly way communicated detectable web conditions checked simple data conditions tests event relevant queries nodes expressed proposed query language 
appropriate action taken updating information accordingly 
action formulated transaction acid properties ensure actions transaction performed done 
actions course raise events explicit updates visible application level events 
focus development appropriate sublanguages rules events conditions fact queries action part rules continue separation application specific contents generic patterns composite events 
events atomic event general detectable occurrence web local system events incoming messages including queries answers transactional events commit confirmations updates data web occurrences application possibly represented explicit data signaled event 
atomic events distinguished event carrying applicationspecific information metadata type event update temporal event receipt message 
time occurrence time detection receipt refuse received late event origin generator applicable terms uri 
reactive rules specify reactions atomic events notion composite events happened minutes 
complex events usually defined terms event algebras 
declarative language describing composite events required algorithms handling composite events 
language concerned information contained event types events 
making events part semantic web ontology composite events defined mappings event algebras implementations 
important aspect integrability event meta language event contents languages query language 
desirable specification composite events combined requirements state resources intermediate timepoints timepoint cancellation comes past reservation request came timepoint seats booked cancellation charged additional fee 
case composite event handler state query moment event arrives 
capable describing situations logic system deals sequences events queries required 
approaches transaction logic investigate evolving logic programs purpose 
integrated languages defined surrounding language composite events language atomic events metadata languages expressing contents different types events language ontology personalization 
note ontology describing data relevant personalization needed related language events relevant personalization required 
events knowledge rules view described point result infrastructure evolution reactivity web reaction rules define behavior resources detection events 
general composite events atomic application level ones 
local knowledge defined facts derivation rules reaction rules 
local knowledge encoded xml updatable sense update language developed capable changing facts derivation rules reactive rules 
may rely studies done context logic programming updating derivation reactive rules 
evolution reactivity personalization concepts personalization adaptivity implemented supported framework 
plain evolving reactive applications provide scenarios personalization applied 
expressing personalization eca rules usual way today approaches extended semantic level various aspects 
semantic web applications personalization functionality built ontology user model 
eca rules implement personalized behavior inside generic languages rules composite events sublanguages combine user modeling ontology respective ontology application specific events 
annals mathematics computing teleinformatics vol pp typical rule patterns typical structures composite events include typical atomic events typical action patterns expressing personalization issues 
patterns parameterized atomic events special conditions actions yield certain rule belongs behavior base application 
stated behavior base subject evolution kinds reactivity controlled evolution adapts behavior base events web adapting personal portfolio tracker stock traced moved dax reactivity controlled evolution adapts behavior base changes user profile longer eligible student trains users enabled change rules interactively appropriate graphical interface intelligent evolution reasoning behavior base context evolution reactivity personalization mean personalized access web implemented today portals personalized behavior able raise events 
customer may personalized web agent bidding ebay trading stocks 
behavior agents preferably expressed eca rules evolve way described 
knowledge base update reasoning pointed dynamic nature desired infrastructure describing evolution reactivity web requires capability updating facts capability updating rules 
updates handled different ways 
hand updates performed ad hoc basis static environment exploiting adapting methods area knowledge base revision belief change see 
hand dynamic environment crucial updates may occur event driven 
nature circumstances event occurred may determine way entailed update incorporated current rule knowledge base 
personalization comes play user view update materialize 
supported user definable update policies event rules general change behaviour desires preferences user described generic level 
instance user may define rules suppress certain unwanted information propagate information parts knowledge base semantically connected meta level 
envisage general formal model expressing different update approaches method put forth capturing different update approaches context possibly nonmonotonic knowledge bases 
specifically formal model different components care kind language knowledge base change actions update policy consideration instantiated suitable manner 
accommodation general evolving logic programs remains explored 
formal model provides basis defining temporal logic language expressing different properties evolving knowledge base top defined semantics 
logical language turn specify study general inference reasoning tasks associated evolving knowledge rule bases 
personalization reasoning actions reasoning action change kind temporal reasoning reasoning time reason phenomena take place time 
theories reasoning action change describe dynamic world changing execution actions 
properties characterizing dynamic world usually specified propositions called fluents 
word fluent stresses fact truth value propositions depends time may vary depending changes occur world 
problem reasoning effects actions dynamically changing world considered central problems knowledge representation theory 
different approaches literature took different assumptions temporal ontology developed different abstraction tools cope dynamic worlds 
formal theories reasoning action change action theories describe dynamic worlds called state action model 
state action model world described terms states actions cause transition state 
typically assumed world persists state modified action execution causes transition new state persistency assumption 
main target action theories logical framework describe effects actions world changes caused execution actions 
precise general formal theory antoniou baldoni reasoning methods personalization semantic web representing reasoning actions allows specify causal laws axioms describe domain actions terms precondition effects fluents action sequences executed initial state observations describing value fluents initial state observations describing value fluents states action execution 
term domain description refer set propositions express causal laws observations fluents values state possibly information formalizing specific problem 
domain description principal reasoning tasks temporal projection prediction temporal explanation planning 
intuitively aim temporal projection predict action effects partial knowledge current state reasoning causes effect 
contrary target temporal explanation infer past states world knowledge current situation 
third reasoning task planning aimed finding action sequence executed starting state world produces new state certain desired properties hold 
usually varying reasoning task domain description may contain different elements provide basis inferring new facts 
instance task formalize temporal projection problem domain description contain information logical framework provide inference mechanisms reconstructing information 
task deal planning problem domain description contain information try infer action sequence executed state described achieving state properties described 
important issue formalization known persistency problem 
concerns characterization invariants action aspects dynamic world changed action 
certain fluent representing fact world holds certain state involved execution action efficient inference mechanism conclude hold state resulting execution 
various approaches literature broadly classified categories choosing classical logics knowledge representation language addressing problem non classical logics computational logics 
various logicbased approaches reasoning actions popular situation calculus introduced mc hayes sixties capture change order classical logic 
situation calculus represents world change sequence situations 
situation represents state world obtained previous situation executing action 
kowalski sergot developed different calculus describe change called event calculus events producing changes temporally located initiate terminate action effects 
situation calculus event calculus methodology encoding actions order predicate logic 
originally developed reasoning events time logic programming setting 
approach reasoning actions modal logics 
modal logics adopts essentially ontology situation calculus state world primary representing actions state transitions 
particular actions represented natural way modalities semantics standard kripke semantics terms accessibility relations worlds states represented sequences modalities 
situation calculus modal logics influenced design logic languages agent programming 
research situation calculus gained renewed attention cognitive robotic project university toronto lead development high level agent programming language called golog theory actions situation calculus 
hand modal action theory basis specifying executing agent behaviour logic programming setting language impact example deontic logic specifying agents agent behavior specified means set rules agent program suitable specify means deontic modalities agent policies actions agent obliged take state actions permitted take chooses actions perform 
show concepts useful semantic web describing scenarios personalization required 
idea exploiting reasoning techniques obtaining adaptation derives observation application domains goal user interaction occurring resource play fundamental role 
annals mathematics computing teleinformatics vol pp reasoning web services scenario consider action metaphor describing handling web services 
generally speaking web service seen device automatically accessed web 
may alternatively software system hardware device priori distinction 
main difference web service devices connected network stands kind tasks performed web service automatically retrieved search thought analogous finding web pages means search engine set keywords automatically invoked composed web services accomplish complex tasks possible monitor execution 
order allow execution tasks necessary enrich web service machine processable description contains necessary information service inputs requires results returned forth 
lot research carried area problems just enumerated met final solution 
proposals especially due commercial coalitions languages allow description single services interoperation 
line successful wsdl bpel ws 
initiative mainly carried commercial world aim standardizing registration look mechanisms interoperability proposals owl daml concerned providing greater expressiveness service description way reasoned 
particular service description conceptual levels profile advertising discovery process model describes service works grounding describes agent access service 
particular process model describes service atomic simple composite way inspired language golog extensions 
perspective wide variety agent technologies action metaphor 
fact view service action atomic complex preconditions effects modifies state world state agents world 
process model viewed description action possible design agents apply techniques reasoning actions change web service process models producing new composite customized services 
quoting mcilraith 
vision agents exploit user constraints preferences help customize user requests automatic web service discovery execution composition interoperation 

different words personalization seen reasoning user constraints preferences effects user knowledge world action interact web service 
techniques reasoning actions change applied produce composite customized services 
claim better personalization achieved allowing agents reason conversation protocols followed web services 
conversation protocols rule interactions service interlocutors protocol defines possible conversations service enact 
roughly speaking consider procedure built atomic speech acts 
far owl represent way reasoned communicative behaviour service 
explain simple example useful agent user personal assistant requested book ticket cinema show certain movie constraint agent user credit card number transaction 
user goal additional request constrains way agent interact service 
case order personalize interaction user request necessary reason service communications 
web service supposed follow possibly non deterministic procedure interacting services agents 
authors show reasoning explicitly conversation protocols followed web services possible achieve better personalization service 
authors shown kind reasoning exploited composing set web services interoperate order accomplish complex task execute 
consider example organization journey necessary find services finding flight car making reservation hotel user personal calendar services developed independently simpler purposes 
problem describing reasoning conversation protocols faced agent logic programming setting exploiting reasoning capabilities agents written language introduced 
particular integrated language communication kit allows reasoning possible interactions ruled protocol answering existential queries kind possible execution protocol set beliefs interest goal antoniou baldoni reasoning methods personalization semantic web true agent mental state 
reasoning learning resources second scenario set learning framework system manage repository learning resources helping users retrieve documentation need acquiring desired expertise 
goal system returning personalized reading sequence sub set available resources allow specific user reach learning goal 
notice resources may different kinds text examples tests programming patterns books forth 
learning object different reading sequences aimed different learning goals 
sequence contain learning objects physically located different repositories 
experience gained previous approach carry construction reading sequences means techniques reasoning actions planning temporal explanation applying semantically annotated learning resources 
scenario adoption action metaphor quite straightforward learning resource fact considered action preconditions student know understanding knowledge contents effects student supposed learn reading resource knowledge reader 
choice supported research pedagogy shows human learning goal driven notions prerequisite effect case knowledge gain play fundamental role 
action representation learning resources prerequisites effects supposed expressed means knowledge entities terms ontology 
scenario goal personalization produce reading sequences fit specific user characteristics users different initial knowledge suggested different solutions user learning goal 
notice differently happens approaches adaptation occurs level reading sequence level page contents link hiding semaphore annotation supposed done user learning goal 
reasoning techniques applied scenario 
way building personalized reading sequences apply planning techniques hand temporal explanation motivate user read documents apparently direct relation learning goal 
techniques dealing failure replanning useful failure occurs user satisfied proposed solution part system asked find alternatives 
non monotonic reasoning techniques help case 
literature possible find programming languages action logics golog support mentioned reasoning techniques 
instance possible exploit kind planning known procedural planning combining possible ways available actions documents resources searches solutions restricted space consisting set possible executions procedure 
case procedure describes general schema solution kept separate specific resources 
planning time depending initial situation available resources solution built 
procedures schemas allows achievement form personalization depends user characteristics goal description contained initial state depends preferences providers resources 
scenario issue procedure correspond learning strategy described lecturer course takes account experience teacher preferences topic thought 
vi 
xcerpt query transformation language web semantic web applications querying web retrieving web semantic web data queries expressed high level language considerably ease realization personalized information systems web 
doing query language capable deduction simplify conceiving implementing personalized information systems web 
xcerpt experimental deductive query language developed institute informatics university munich 
goal xcerpt project investigate ways ease realizing web semantic web applications particular realizing personalized information systems web 
see semantic web meta data added today web semantic indexes similar encyclopedias 
considerable advantage conventional encyclopedias printed relationships expressed web meta data followed computers hyperlinks followed programs drawing automated reasoning methods semantic web function computers access structured collections information sets inference rules annals mathematics computing teleinformatics vol pp conduct automated reasoning 
central principle web query language xcerpt section common query language capable inference querying conventional web semantic web desirable possible 
working hypothesis salient features xcerpt different web semantic web query languages developed far 
xcerpt principles referential transparency referential transparency means definition scope occurrences expression value denote data 
referentially transparent programs easier understand easier develop maintain optimize 
referential transparency surely essential properties query language web satisfy 
answer closedness call answer closed query language replacing subquery compound query possible necessarily actual answers yields syntactically valid query 
query languages ensure particular data item possible answer query syntactically valid query 
functional programs need answer closed 
answer closedness eases specification queries keeps limited unavoidable shift syntax data sought expected answer query specifying data 
xcerpt answer closed 
answers arbitrary xml data xml lingua franca data interchange web 
consequence answers expressible possible xml application 
includes text markup freely chosen markup structure 
requirement obvious widely accepted conventional web query languages enforced semantic web query languages 
answer ranking top answers desirable rank answers application dependent criteria 
desirable web semantic web query languages offer basic means specifying ranking criteria efficiency reasons evaluation methods computing topk answers number best ranked answers user specified ranking criterium 
xcerpt supports specification orders xml documents retrieval answers query possibly sorted specified order 
pattern queries xcerpt uses patterns binding variables query expressions path expressions web query languages xquery xslt 
query patterns especially suited visual language queries structure close possible answers 
incomplete query specifications incomplete queries specifying part data retrieve children xml element referring tree representation xml data called incompleteness breadth element unspecified nesting depth referring tree representation xml data called incompleteness depth important conventional web heterogeneity knows part structure xml documents retrieve 
similar reasons incomplete queries important semantic web 
xcerpt supports queries incomplete breadth depth respect element order optional elements attributes 
incomplete data selections web data heterogeneous structures interested incomplete answers 
kinds incomplete answers considered 
interested children xml sub document retrieved query 
second interested child elements available accept answers elements 
xcerpt gives rise discard child element retrieved query express queries kind 
xcerpt construct optional gives rise select elements available express queries second kind 
rule chaining recursion rules understood means specify novel virtual data terms queries called views relational databases regardless data materialized 
views rule defined data desirable conventional semantic web applications 
xcerpt supports unrestricted recursion possibly cyclic data relying called memorization tabulation technique 
separation queries constructions standard symmetrical approaches widespread far query programming languages web concerned queries programs embedded web page web page skeleton giving structure answers data returned calls programs parts web page specifying structure data returned query program evaluation embedded queries programs 
thesis xcerpt project approaches queries programs hard read write maintain 
approach xcerpt strictly separates queries constructions expressions specifying structure answers 
xcerpt constructions rule heads queries antoniou baldoni reasoning methods personalization semantic web rule bodies 
order relate rule construction rule head rule query rule body xcerpt uses logic programming variables 
query language standard web semantic web thesis underlying xcerpt project common query language conventional web semantic web applications desirable 
specific reasoning theories practical applications require special forms reasoning 
reason desirable query language conventional semantic web extended called theories implementing specific forms reasoning 
syntaxes xml syntax compact human readable syntax desirable query language conventional semantic web xml syntax easier exchange query programs web manipulate query language second compact syntax easier human read write desirable 
flavors xcerpt xcerpt core constructs xcerpt program consists goal possibly zero rules 
goals rules built data query construct terms representing respectively xml documents query xml documents constructed answers queries 
data query construct terms represent tree graph structures 
data query construct terms square brackets denote ordered term specification standard xml matching subterms queried resource required order query term 
curly braces denote unordered term specification common databases matching subterms queried resource may arbitrary order 
single square curly braces denote matching term contain matching subterms subterms term may contain additional subterms total term specification 
double braces denote data term may contain additional subterms long matching partners subterms query term partial term specification 
non tree graph structures expressed symbolic addresses construct id defining occurrence handle term construct id referring occurrence 
data terms represent xml documents speak xml disguise 
similar ground functional programming expressions logical atoms 
data terms may contain single square curly braces double braces expressing partial specifications xml document complete 
data term shortened representation article xcerpt syntax 
note parts article unordered term specification author entries order irrelevant 
query terms partial patterns matched data terms augmented arbitrary number variables selecting data items data term 
addition constructs data terms query terms additional properties partial specifications omitting subterms irrelevant query possible indicated double square brackets curly braces possible specify subterms arbitrary depth construct desc query terms may contain term variables label variables select data 
examples upper case characters chosen variables 
xcerpt construct read associates variable query term specify restriction bindings 
xcerpt construct desc read descendant specify subterms arbitrary depth 
suppose articles proceedings conference contained proceedings element 
query term selects title author pairs article proceedings article var title var author query terms general containing variables unified data construct terms variables may occur non standard unification conceived xcerpt called simulation unification 
simulation unification graph simulation relation similar graph homomorphisms 
result unifying query term data term construct term resp 
set substitutions variables query term query term construct term resp substitution represents alternative solution 
construct terms serve reassemble variables bindings specified query terms construct new data terms 
may contain single brackets variables partial specification double braces variable restrictions 
rationale keep variable specifications query terms ensuring strict separation purposes query construct terms 
construct term creates author title pair wrapped result element annals mathematics computing teleinformatics vol pp fig 

representation article xcerpt syntax front title reasoning methods personalization web author fname grigoris surname antoniou address 
bio 
author fname nicola surname henze address 
bio 
body section title rear 
bib xquery pub xquery xml query language 
result var var construct term xcerpt construct serves collect construct term instances oft generated alternative substitutions variables returned associated query terms occur 
likewise serves collect generated manner 
referring previous query construct term creates list publications author results result var var referring previous query construct term collects titles author results result var var referring previous query construct term collects titles author results result var var queries query terms atomic queries 
query terms connected yielding complex queries 
query implicitly explicitly associated resource program external xcerpt program xml document specified uri uniform resource identifier 
occurrences variable query term connected queries evaluated identically usual approach variable binding database query language sql logic programming 
query selects authors published article proceedings venues conference assumed articles contained proceedings resp 
proceedings element construct query rules goals xcerpt program consists zero construct query rules goals zero data terms 
particular xml document data term xcerpt program 
rules goals forms antoniou baldoni reasoning methods personalization semantic web fig 

example query resource file proceedings xml desc author fname var surname var resource file proceedings xml desc author fname var surname var construct construct term query goal construct term query construct term constructed depending evaluation query shared variables 
constructs core constructs xcerpt called advanced constructs 
constructs give rise expressing functions aggregations count average part query optional retrieved data considered express positions subterms searched negation queries 
xcerpt advanced constructs detailed 
languages related xcerpt companion languages xcerpt deserve mentioned 
visual language principles textual language 
reactive language xcerpt expressing updates exchanging events web 
vii 
web data extraction hand today semantic web vision unstructured web contains millions documents database heavily mix layout structure 
annotated 
huge gap web information qualified structured data usually required corporate information systems 
vision semantic web information available web suitably structured annotated qualified 
goal reached faster achievement goal absolutely necessary semi automatically extract relevant data html documents automatically translate data structured format xml 
transformed data applications stored databases populate ontologies 
information retrieval targets analyze categorize documents information extraction collects structures entities inside documents 
web information extraction languages tools accessing extracting transforming data web required 
web useful merely human consumption additionally machine communication 
program automatically extracts data transforms format markups content semantic information usually referred wrapper 
wrappers bridge gap unstructured information web structured databases 
number classification taxonomies wrapper development languages environments introduced various survey papers 
high level languages developed web extraction 
stand wrapper programming languages include florid jedi tsimmis araneus 
general manual wrapper generation languages difficult 
machine learning approaches generally rely learning examples counterexamples large number web pages stalker wien 
roadrunner approach need labelled examples derives rules number pages distinguishing structure content 
uses interesting generation pattern names offset criteria addition applied semi structured wrapping technology 
approaches offer generic wrapping techniques 
approaches advantage wrap arbitrary web pages seen hand disadvantage restricted particular domains detecting addresses 
interactive approaches allow semi automatic extraction generation offer convenient visual dialogues generate wrapper examples user interaction 
supervised interactive wrapper annals mathematics computing teleinformatics vol pp fig 

lixto visual wrapper wrapping publication pages generation tools include xwrap debye 
general systems neglect capabilities deep web navigation form filling practice highly required information hidden deep web 
lixto lixto methodology tool visual interactive wrapper generation developed university technology vienna 
allows wrapper designers create called xml companions html pages supervised way 
internal language lixto relies elog 
elog datalog language especially designed wrapper generation 
examples programs elog 
elog language operates web objects html elements lists html elements strings 
elog rules specified fully visually knowledge elog language 
web objects identified internal contextual range conditions extracted called pattern instances 
expressive power kernel fragment elog studied shown fragment captures monadic second order logic expressive time easy due visual specification 
expressiveness wrapping language robustness important criteria 
information frequently changing web pages needs correctly discovered banner introduced 
visual wrapper offers robust mechanisms data extraction paradigms tree string extraction 
possible navigate documents wrapping process 
predefined concepts weekday city 
established connecting ontological database 
validation alerts imposed give warnings case user defined criteria longer satisfied page 
visually process wrapping comprised steps identification phase relevant fragments web pages extracted see 
extraction rules semi automatically visually specified wrapper designer iterative approach 
step succeeded structuring phase extracted data mapped destination format enriching xml tags 
respect populating ontologies web data instances phase required information unit needs put relation pieces information 
visual data processing lixto heterogeneous environments integration mediation systems require conceptual information flow model 
usual setting creation services web wrappers information obtained multiple wrapped sources integrated source sites monitored changes changed information automatically extracted processed 
push information systems architectures wrappers connected pipelines integration engines process streams data natural scenario supported lixto antoniou baldoni reasoning methods personalization semantic web fig 

lixto transformation server rewerse publication data flow transformation server 
task information processing composed stages building blocks assembling information processing pipeline 
stages acquire required content source locations component resembles lixto visual wrapper plus deep web navigation integrate transform content number input channels tasks finding differences format deliver results various formats channels connectivity systems 
actual data flow transformation server realized handing xml documents 
stage transformation server accepts xml documents wrapper component accepts html performs specific task components support visual generation mappings produces xml document result 
result put successor components 
boundary components ability activate user specified strategy trigger information processing behalf user 
architectural point view lixto transformation server may conceived container environment visually configured information agents 
pipe flow model complex unidirectional information flows see 
information services may controlled customized outside server environment various types communication media web services 
web data extraction application domains better software connections key challenge rapid progress collaborative commerce applications 
waiting suppliers recode entire applications web service semantic web standards choose route better web connectivity today existing systems 
extraction technologies help unfold structure desired pieces information html documents translate xml cost effective way 
lixto functions tangible semantic web turning reality today 
lixto applications collect data transform information homogeneous structure semantically enriched data applications devices 
lixto advantages respect wrapper tools screen high flexibility robustness expressiveness usability ability provide interfaces various data formats delivery channels 
application domains extraction technologies manifold 
include portal interactions automotive suppliers content mobile devices monitoring price news data business intelligence frameworks updating address data crm databases 
web data harvested lixto ideally personalization systems offer personalized views extracted news publications described section viii 
annals mathematics computing teleinformatics vol pp fig 

architecture personal reader framework showing different components personal reader visualization user interface personal reader backbone consisting connector services reasoning service data provision services rdf data connection database storing user profile information 
viii 
personalization services semantic web personal reader framework establish personalization semantic web 
personalization provide guidance recommendations hints user browsing web retrieval process information effective supports users managing view information web sum personalization provides added value service user 
approach bringing personalization functionality semantic web realize personalization web services offered user selection convenience applications retrieving integrating additional functionality discussed section section describe demonstrator applications implementing personalization functionality semantic web approach discussed section iv personal reader instance learning domain personal publication reader 
architectural overview personal reader framework personal reader framework environment designing implementing maintaining personal web content readers 
personal readers allow user browse information reader part access personal recommendations contextual information currently regarded web resource personal part 
briefly outline underlying architecture personal reader www personal reader de framework discuss detail personalization services instances personal readers implemented 
architecture personal reader rigorous approach applying semantic web technologies 
modular framework web services constructing user interface mediating user requests currently available personalization services user modeling offering personalization functionality forms basis personal reader 
communications components services syntactically rdf descriptions see 
common understanding services realized referring semantics ontologies provide valid vocabulary describing functionality user interface components requests particular employ ontologies describing objects discourse logicbased definition adaptive hypermedia systems domain ontology describing application domain document ontology 
user model ontology attribute value pairs user characteristics preferences information devices user accessing personal reader observation ontology describing different kinds user observations runtime adaptation ontology describing adaptation functionality provided adaptation services 
underlying architecture personal reader framework allows design implement maintain antoniou baldoni reasoning methods personalization semantic web fig 

determining details currently learning resource forall lo lo detail detail lo lo detail exists detail detail concepts detail concepts lo lo concepts lo lo detail detail learning resource lo detail unify lo lo detail 
personal web content readers 
describe personal reader instances developed personal reader learning domain personal publication reader developed publications network excellence rewerse personal reader instance personal reader learning start specific scenario involving user alice interested learning java programming alice currently learning variables java accessing learning resource online tutorial 
studies realizes needs clarifications naming variables 
personal reader shows detailed information variables online tutorial points recommended deeper understanding 
ensuring alice understands variables personal reader provides 
practicing alice recommended exercises 
chosen exercises personal reader provides alice appropriate links java api solved exercises 
source information java faq pointed alice personal reader 
personal reader learning pr el provides learner personal interface studying learning resources personal annotation service recommends learner learning steps take points examples summary pages detailed information recommends appropriate information learner current knowledge learning style learning goal background provide examples personalization rules personal annotation services pr el learning java programming language 
personal reader helps learner view learning resources sun java tutorial freely available online tutorial java programming context details related topics learning resource rewerse net general topics learner currently studying examples summaries generated enriched personal recommendations learner current learning state 
implementing reasoning rules currently triple query rule language semantic web 
rules defined triple reason rdf annotated information resources required translation tools rdf triple vice versa provided 
rdf statement triple written subject predicate object 
rdf models explicitly available triple statements true specific model written model 
particular important constructing temporal knowledge bases required personal reader 
connectives quantifiers building logical formulae statements allowed usual forall exists 
describe rules personal reader learning resources determine appropriate adaptation strategies 
providing context displaying details learning resource generating links detailed learning resources adaptive functionality example personal reader 
adaptation rule takes isa hierarchy domain ontology case domain ontology java programming account determine domain concepts details current concept concepts learner studying learning resource 
particular details currently learning resource determined detail lo lo detail see detail learning resources lo detail covers specialized learning concepts determined help domain ontology 
rule require lo detail covers specialized learning concepts exclusively covers specialized learning concepts 
refinements adaptation rule course possible version personal reader available tuning parameters control learner 
rules embedding learning resource general aspects respect current learning progress similar 
annals mathematics computing teleinformatics vol pp providing pointers example adaptation rule generating embedding context recommendation quiz pages 
learning resource recommended quiz currently learned learning resource lo quiz rule determining displayed provides questions concepts learned lo 
calculating recommendations recommendations personalized current learning progress user respect current set course materials 
rule determines learning learner studied general learning resource 
additional rules deriving stronger recommendations user studied general learning resources strong recommendations haven studied far possible 
recommendations calculated respect current domain ontology 
necessary user regarding course materials different courses time 
recommendation rule reasons course accurate fine grained information course learning process learner part course 
reasoning rules user modeling personal reader requires view information user characteristics 
example employed simple user model user model traces user path learning environment registers user visited learning resource 
information stored user profile bound rdf shown 
information derive particular user learned concept 
rule derives learned concepts 
similarly determined learning object learned user 
personal reader instance personal publication reader consider scenario describing idea personal publication reader bob currently employed researcher university 
course interested making publications available colleagues publishes publications web page 
bob enrolled research project 
time time requested notify project coordination office new publications 
furthermore project coordination office maintains member page information members involvement project research experience maintained 
simplify process 
furthermore information provide new information 
scenario may conclude partners research project websites publish research papers 
addition information role researchers project bob participating mainly working group working group strongly cooperating working groups available 
succeed making information available machines reason derive new information research bob related working group papers working group research aspects realize personal publication reader pr extract publication information various websites partners rewerse project web pages containing information publications rewerse network periodically crawled new information automatically detected extracted indexed repository semantic descriptions rewerse network see section viii 
information extracted information project rewerse people involved project research interests provide information publication authored research groups related kind research publications published research group publications author available publications similar research 
see section viii gathering data semantic web applications institute organization offers access publications web 
presentation usually different automatic conversions bibtex files manually maintained 
presentation suited human consumption hardly usable automatic processing 
consider scenario interested publications rewerse project members year contain word personalization title 
able formulate queries generate personalized views publications necessary access publication data structured form 
antoniou baldoni reasoning methods personalization semantic web fig 

adaptation rule example forall quiz www org rdf syntax ns type ltsc ieee org lom educational quiz forall concepts quiz quiz concept purl org dc elements subject 
forall lo quiz lo exists concepts lo lo concepts quiz 
fig 

recommending resource forall lo lo lo lo lo purl org dc terms lo 
forall lo learning state lo recommended exists lo obs learned 
fig 

recommendation respect current domain ontology forall detail detail concepts detail detail www org rdf schema subclassof concept concept detail 
forall lo learning state lo recommended exists detail concepts lo lo detail detail concepts detail obs learned 
fig 

storing information user profile rdf rdf xmlns rdf www org rdf syntax ns xmlns semweb kbs uni hannover de rdf rdf rdf description rdf semweb kbs uni hannover de user john rdf type rdf resource rdf rdf user java sun com variables html 
fig 

rule deriving learned concepts forall obs learned exists lo concepts lo lo semweb kbs uni hannover de rdf lo 
fig 

sample rdf output entry rdf description rdf www example org id rewerse origin university heraklion rewerse origin rewerse title describing knowledge representation schemes formal account rewerse title rewerse author rdf seq rdf li rdf resource rdf li rdf resource dimitris plexousakis rdf li rdf resource grigoris antoniou rdf seq rewerse author rewerse year rewerse year rewerse link ftp ftp ics forth gr tech reports tr knowledge representation schemes pdf rewerse link rewerse representation manipulation knowledge drawing great deal attention early 
rewerse rdf description annals mathematics computing teleinformatics vol pp fig 

part ontology researchers personal publication reader fig 

example rule determining authors publication forall authors exists rewerse author publications www author publications 
fig 

example rule determining employer project member forall works exists id name id ont id ont ont researcher ont rdfs subclassof ont organization rdfschema researcher ont rdf type ont researcher 
section vii discussed data extraction web lixto methodology 
apply lixto regularly extract publication data rewerse members 
illustrates disks lixto wrappers week navigate page member munich hannover eindhoven apply wrapper extracts author names publication titles publication year link publication available 
illustrates visual wrapper specification munich page 
xsl components publication data fit common structure attribute origin added containing institution name 
triangle represents data integration unit data various institutions put duplicate entries removed 
ids assigned publication step 
xml data structure mapped predefined rdf structure happens lower arc symbol passed personal publication reader described 
second component delivers xml publication data additionally rdf 
sample rdf output entry depicted 
lixto application easily enhanced connecting web sources 
instance abstracts researchindex com queried publication lacking information joined entry 
text categorization tools rate classify contents abstracts 
content syndication personalized views addition extracted information research papers obtain described previous section collect data members research project member corner rewerse project 
constructed ontology describing researchers antoniou baldoni reasoning methods personalization semantic web fig 

screenshot personal publication reader rewerse 
part ontology seen collected information personalization service provides user interface browsing publications rewerse project having instantly access information authors working groups rewerse recommended related publications personalization service pr uses similar pr el personalization rules deriving new facts determining recommendations user 
example rule determines authors publication rules combine information authors researcher ontology author information 
rule determines employer project member university generally instance subclass organization screenshot fig 
depicts output visualization service pr 
exploiting web service architecture personal reader possible link pr reasoning services personal sequencing service implemented planner exploiting action metaphor making nonmonotonic reasoning functionality eca paradigm expressiveness advanced personalization functionality 
ix 
research carried connection network excellence rewerse strives minimal set rule reasoning languages semantic web 
discusses approaches shaping logic layer semantic web supporting approaches personalization semantic web 
demonstrate approaches rules rule languages logic layer semantic web 
special attention devoted important aspects evolution updates events consequences personalization reasoning 
approaches personalization reasoning actions different scenarios 
query transformation languages web data extraction maintaining constructing semantic descriptions discussed 
personalized web systems making reasoning techniques semantic descriptions extractions introduced 
rewerse reasoning web network excellence founded th european framework programme rewerse net annals mathematics computing teleinformatics vol pp alferes brogi leite pereira evolving logic programs 
proceedings th european conference logics artificial intelligence jelia flesca greco leone eds vol 
lncs springer verlag pp 

alferes leite pereira ska przymusinski dynamic updates nonmonotonic knowledge bases 
journal logic programming 
shorter version appeared principles knowledge representation reasoning 
antoniou wagner system nonmonotonic rules web 
proc 
ruleml springer lncs 
antoniou billington governatori maher representation results defeasible logic 
acm transactions computational logic 
antoniou van harmelen semantic web primer 
mit press 
atzeni mecca cut paste 
proc 
pods 
baldoni martelli patti reasoning interaction personalizing web service 
proc 
dagli sistemi ca italy september de paoli omicini eds bologna 
baldoni martelli patti reasoning self communicating agents modal action logic 
proc 
vol 
lncs springer pp 

baldoni patti web adaptive tutoring approach logic agents reasoning actions 
artificial intelligence review 
baldoni patti torasso reasoning learning object metadata adapting scorm courseware 
ah workshop proceedings part engineering adaptive web eindhoven holland august tasso eds cs report technische universiteit eindhoven pp 

baldoni giordano martelli patti abductive proof procedure reasoning actions modal logic programming 
proc 
dix ed vol 
lnai springer verlag pp 

baldoni giordano martelli patti programming rational agents modal action logic 
annals mathematics artificial intelligence special issue logic agent implementation 
baral son formalizing sensing actions transition function approach 
artificial intelligence january 
antoniou defeasible logic system semantic web 
principles practice semantic web reasoning springer lncs 
baumgartner flesca gottlob herzog semantic markup news items lixto 
annotation semantic web 
baumgartner flesca gottlob declarative information extraction web crawling recursive wrapping lixto 
proc 
lpnmr 
baumgartner flesca gottlob visual web information extraction lixto 
proc 
vldb 
baumgartner flesca gottlob building dynamic information portals case study domain 
proc 

baumgartner gottlob herzog lixto halfway semantic web 
journal 
baumgartner gottlob herzog interactively adding web service interfaces existing web applications 
proc 
saint 
baumgartner herzog gottlob visual programming web data aggregation applications 
proc 

beckett rdf xml syntax specification 
www org tr rdf syntax grammar 
berger bry schaffert visual language web querying reasoning 
proceedings workshop principles practice semantic web reasoning mumbai india th th december vol 
lncs 
berger bry schaffert xcerpt pattern visual querying xml semistructured data 
proceedings th intl 
conference large data bases berlin germany th th september 
berger bry visual querying semantic web 
proceedings rd international conference conceptual modeling shanghai china th th november 
bergman deep web surfacing hidden value 
white www com technology asp 
berners lee hendler lassila semantic web 
scientific american may 
berners lee hendler lassila semantic web new form web content meaningful computers revolution new possibilities 
scientific american may 
bonner kifer overview transaction logic 
theoretical computer science 
brickley guha rdf vocabulary description language rdf schema 
www org tr rdf schema 
bry tr schaffert data retrieval evolution semantic web deductive approach 
proceedings workshop principles practice semantic web reasoning st malo france th th september rewerse 
bry tr 
reactivity web paradigms applications language 
th annual acm symposium applied computing sac 
bry schaffert declarative query transformation language xml semistructured data simulation unification 
proceedings international conference logic programming copenhagen denmark th july st august vol 
lncs 
bryson martin mcilraith stein agent composite services daml design intelligent semantic web 
java tutorial 
java sun com docs books tutorial 
modal tableaux reasoning actions plans 
proc 
ecp steel ed lnai pp 

crescenzi mecca merialdo roadrunner automatic data extraction large web sites 
proceedings th international conference large data bases pp 

daml 
www daml org services daml 
version 
yang kifer ramakrishnan computational aspects resilient data semistructured sources 
proc 
pods 
dean schreiber owl web ontology language 
www org tr owl ref 
dolog henze nejdl sintek personal reader personalizing enriching learning resources semantic web technologies 
proccedings nd antoniou baldoni reasoning methods personalization semantic web international conference adaptive hypermedia adaptive web systems ah eindhoven netherlands 
eiter fink tompits declarative update policies nonmonotonic knowledge bases 
logics emerging applications databases chomicki van der meyden saake eds 
springer verlag ch 
pp 

eiter fink tompits reasoning evolving nonmonotonic knowledge bases 
acm transactions computational logic 
appear 
eiter lukasiewicz tom pits combining answer set programming description logics semantic web 
proceedings kr pp 

www kr tuwien ac staff roman 
eiter lukasiewicz tom pits founded semantics description logic programs semantic web 
proceedings ruleml workshop iswc conference hiroshima japan springer pp 

www kr tuwien ac staff roman 
etzioni cafarella downey kok popescu shaked soderland weld yates web scale information extraction know preliminary results 
proceedings world wide web conference 
flesca web wrapper induction brief survey 
journal acm 
gabbay ph smets eds 
handbook defeasible reasoning uncertainty management systems vol 
iii belief change 
kluwer academic 
gelfond lifschitz classical negation logic programs disjunctive databases 
new generation computing vol 
pp 

gelfond lifschitz representing action change logic programs 
journal logic programming 
giacomo lesp rance levesque congolog concurrent programming language situation calculus 
artificial intelligence 
giordano martelli dealing concurrent actions modal action logic 
proc 
ecai pp 

gottlob koch monadic datalog expressive power languages web information extraction 
proc 
pods 
gottlob koch monadic datalog expressive power web information extraction languages 
ai communications vol 
grosof horrocks volz decker description logic programs combining logic programs description logic 
twelfth international world wide web conference budapest hungary may 
henze herrlich personal reader framework enabling personalization services semantic web 
proceedings twelfth gi workshop adaptation user modeling interactive systems berlin germany 
henze personalization functionality semantic web architectural outline sample implementation 
proccedings st international workshop engineering adaptive web held conference adaptive hypermedia adaptive web systems ah eindhoven netherlands 
appear 
henze nejdl logical characterization adaptive educational hypermedia 
new review hypermedia 
herzog gottlob flexible framework commerce applications 
proc 
tes workshop vldb 
vermeir integrating semantic web reasoning answer set programming 
answer set programming advances theory implementation proc 
nd intl 
asp workshop messina italy pp 

horrocks patel schneider boley grosof swrl semantic web rule language combining owl ruleml 
www org submission subm swrl 
huck fankhauser aberer neuhold jedi extracting synthesizing information web 
proc 
coopis 
kowalski sergot logic calculus events 
new generation computing 
toolkits generating wrappers 
net 
kushmerick weld doorenbos wrapper induction information extraction 
proc 
ijcai 
laender ribeiro neto da silva teixeira brief survey web data extraction tools 
sigmod record 
leone pfeifer faber eiter gottlob scarcello dlv system knowledge representation reasoning 
acm transactions computational logic 
appear 
available www arxiv org ps cs ai 
levesque reiter lesp rance lin scherl golog logic programming language dynamic domains 
logic programming 
levy rousset 
combining horn rules description logics carin 
artificial intelligence 
liu pu han xwrap extensible wrapper construction system internet information 
proc 
icde 
liu li ng data model mapping physical websites logical views 
proceedings st international conference conceptual modelling er finland october 
lobo taylor adding knowledge action description language proc 
aaai iaai menlo park pp 

project 
www org 
may alferes bry generic query update event languages semantic web 
principles practice semantic web reasoning lncs springer pp 

may der lausen lud scher unified framework wrapping mediating restructuring information web 

lncs 
mccarthy hayes philosophical problems standpoint artificial intelligence 
machine intelligence 
mcilraith son adapting golog programming semantic web 
th int 
symp 
logical formalization commonsense reasoning pp 

mcilraith son semantic web services 
ieee intelligent systems march april 
meng wang li kou schema guided toolkit generating wrappers 
proc 

muslea minton knoblock hierarchical approach wrapper induction 
proc 
rd intern 
conf 
autonomous agents 
niemel simons implementation stable model founded semantics normal logic programs 
dix furbach nerode editors proc 
th international conference logic programming nonmonotonic reasoning lpnmr springer pp 

owls 
www daml org services owl 
version 
patti programming rational agents modal approach logic programming setting 
phd thesis dipartimento annals mathematics computing teleinformatics vol pp di informatica universit degli studi di torino italy 
available www di patti 
reasoning action change 
dynamic logic approach 
journal logic language information 
pan alvarez system semi automatic wrapper generation presence complex data access modes 
proceedings dexa aix en provence france 
ribeiro neto laender da silva extracting semi structured data examples 
proc 
cikm 
rule markup initiative 
www ruleml org 
sahuguet building light weight wrappers legacy web data sources 
proc 
vldb 
schaffert bry querying web reconsidered practical xcerpt 
proceedings extreme markup languages montreal quebec canada nd th august 
logic framework action theories 
language logic computation ginzburg ed csli pp 

sintek decker triple rdf query inference transformation language 
international semantic web conference iswc sardinia italy horrocks hendler eds lncs pp 

winslett updating logical databases 
cambridge university press 
wsdl 
www org tr wd wsdl 
version 
xcerpt org 
