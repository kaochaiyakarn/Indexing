eurographics star state art report collision detection deformable objects teschner heidelberger zachmann fuhrmann 
cani faure magnenat thalmann volino eth zurich switzerland wsi gris universit bingen germany university geneva switzerland imag inria grenoble france universit bonn germany fraunhofer institut darmstadt germany interactive environments dynamically deforming objects play important role surgery simulation entertainment technology 
environments require fast deformable models efficient collision handling techniques 
collision detection rigid bodies investigated collision detection deformable objects introduces additional challenging problems 
focusses aspects summarizes research area deformable collision detection 
various approaches bounding volume hierarchies distance fields spatial partitioning discussed 
image space techniques stochastic methods considered 
applications cloth modeling surgical simulation 

years collision detection major interest computer graphics 
numerous approaches investigated detect interfering objects applications robotics computational biology games surgery simulation cloth simulation 
original collision detection methods especially address problem rigid bodies approaches started focusing deformable objects 
deformable collision detection essential component interactive physically simulation animation rapidly growing research area increasing number interesting applications 
fig 
illustrates major applications deformable collision detection cloth simulation 
cloth simulation approaches dynamically deforming clothes combined efficient algorithms handle self collisions cloth interaction cloth animated avatars 
applications require collision detection algorithms especially appropriate deformable animated objects 
surgery simulation illustrated fig 
second major application area deformable collision detection 
eurographics association 
interactive cloth simulation efficient deformable collision detection key component 
environments collisions deformable organs detected resolved 
collisions surgical tools deformable tissue processed 
case topological changes due cutting self collisions tissue occur handled 
interactive teschner collision detection deformable objects behavior surgery simulation environments essential efficient algorithms deformable collision detection required 
interactive environments surgery simulation major application areas deformable collision detection 
addition cloth surgery simulation deformable collision detection methods useful environments animated objects 
fig 
illustrates sequence animated objects 
example specific collision detection algorithms deformable objects detect interferences objects interactive rates 
intersection volume objects computed surfaces closed 
sequence animated objects santa rabbit 
specific deformable collision detection algorithms compute intersection volume objects interactive rates 
intersection volume shown red 
compared collision detection approaches rigid bodies various aspects complicate problem deformable objects 
collisions self collisions order realistically simulate interactions deformable objects contact points including due self collisions considered 
contrast rigid body collision detection self collisions commonly neglected 
depending applications rigid body approaches accelerated detecting contact point 
pre processing efficient collision detection algorithms accelerated spatial data structures including bounding volume hierarchies distance fields alternative ways spatial partitioning 
object representations commonly built pre processing stage perform rigid objects 
case deforming objects pre processed data structures updated frequently 
pre processed data structures efficient deforming objects practicability examined carefully 
collision information collision detection algorithms deformable objects consider realistic collision response requires appropriate information 
sufficient just detect interference objects 
precise information penetration depth objects desired 
performance interactive applications surgery simulation games cloth simulation efficiency collision detection algorithms deformable modeling environments especially important 
interactivity key characteristics applications resulting high demands computing efficiency collision detection algorithms 
discuss collision detection approaches especially address mentioned problems order meet requirements animation simulation environments dynamically deforming objects 
discussed algorithms especially appropriate deformable objects restricted deformable objects rigid bodies 
remainder organized follows 
sec 
discusses bounding volume hierarchies 
special emphasis placed generating updating hierarchy 
aspects optimized deforming objects require frequent hierarchy updates 
sec 
stochastic methods 
approaches especially appropriate interactive simulation environments allow balancing accuracy performance 
sec 
describes usage distance fields deformable collision detection 
approaches inherently provide information penetration depth colliding objects important compute realistic collision response simulations 
sec 
shows spatial subdivision employed deformable collision detection 
approaches efficient data structures representing grids especially important 
sec 
discusses approaches 
methods commonly process projections objects 
accelerated graphics hardware 
sec 
presents applications cloth modeling surgery simulation 
sec 
summarizes advantages drawbacks algorithms deformable collision detection 

bounding volume hierarchies bounding volume hierarchies bvhs proven efficient data structures collision detec eurographics association 
tion 
applied rigid body collision detection 
usually bvh constructed object preprocessing step 
idea bvhs partition set object primitives recursively leaf criterion met 
leaf contains single primitive node contains fixed number primitives 
primitives entities graphical objects polygons nurbs patches general bvhs defined follows node tree associated subset primitives object bv encloses subset smallest containing instance specified class shapes 
see zl thorough discussion bvhs general 
design choices bv trees type bv 
past wealth bv types explored spheres hub pg obbs glm dops zac boxtrees zac adg aabbs lam spherical shells convex hulls el 
variety bvs proposed see fig 
types deserve special mention obbs dops 
note aabbs special case dops 
obbs nice property certain assumptions tightness increases linearly number polygons decreases glm 
dops hand approximate convex hull arbitrarily increasing dops especially computed efficiently 
important deforming objects require frequent updates hierarchy 

hierarchy traversal collision test objects self collision test object bvhs traversed top pairs tree nodes recursively tested overlap 
overlapping nodes leaves enclosed primitives tested intersection 
node leaf internal node leaf node tested children internal node 
nodes internal nodes tried minimize probability intersection fast possible 
tests node smaller volume children node larger volume fig 

objects bvhs collision detection algorithms implement general algorithm scheme traverse overlap return return intersection primitives eurographics association 
teschner collision detection deformable objects enclosed children traverse algorithm quickly zooms pairs nearby polygons 
characteristics different hierarchical collision detection algorithms lie type bv overlap test pair nodes algorithm construction bv trees 

construction bounding volume hierarchies rigid bodies goal construct bvhs subsequent collision detection query answered fast possible 
bvhs called optimal context collision detection 
deformable objects main goal develop algorithms quickly update bvhs deformation taken place 
simulation bvh constructed undeformed object just rigid bodies 
simulation times structure tree kept extents bvs updated 
due fact dops generally faster update deformable objects preferred obbs 
construction initial bvh important deformable collision detection discuss issues efficient ways updating hierarchy discussed sec 

exist different strategies build bvhs top bottom rl insertion gs 
top strategy commonly collision detection 
idea recursively split set object primitives threshold reached 
splitting guided userspecified criterion heuristic yield bvhs respect chosen criterion 
simple splitting heuristic 
glm approximates polygon center 
set points compute principal components eigenvectors covariance matrix choose largest exhibiting largest variance place plane orthogonal principal axis barycenter points splits subsets 
alternatively splitting plane placed median points 
leads balanced tree 
unclear balanced trees provide improved efficiency collision queries 
fig 
shows hierarchy levels avatar created top 
teschner collision detection deformable objects aabb sphere dop obb spherical shell convex hull prism cylinder intersection bvs variety bounding volumes proposed hierarchy collision detection 
levels dop hierarchy created splitting parent dops longest axis 
aabbs shown splitting heuristic try minimize volumes children zac minkowski sums bvs estimate geometric probability bv overlap traversal ai bj vol vol vol vol case aabbs :10.1.1.10.7532
vol vol committed earlier step recursive construction probability bv overlap minimized minimizing vol ai vol 
rigorous proof strategy reasonable bv types 
volino magnenat thalmann vmt vmt provot pro fairly different approach deformable objects 
method hierarchy strictly oriented mesh topology object assuming topology change simulation 
volino uses region merge algorithm build hierarchy bottom provot uses top algorithm recursively divides object zones 
approaches advantage avoid grouping faces close hierarchy close initial state close connectivity 
connectivity approach yields advantages speeding self collision detection described subsection 
crucial point arity bvh 
rigid objects binary trees commonly chosen 
contrast ary trees ary trees shown better performance deformable objects lam 
mainly due fact fewer nodes need updated total update costs lower 
additionally recursion depth overlap tests lower memory requirements stack lower 
fig 
shows reduction recursion depth detecting overlapping leaves equivalent ary trees binary trees 

hierarchy update contrast hierarchies rigid objects hierarchies deformable objects need updated time step 
principally possibilities updating rebuilding 
faster rebuilding large deformations bvs usually tight larger overlap volumes 
van den bergen times faster compared complete rebuild aabb hierarchy 
long topology object conserved significant performance loss actual collision query compared rebuilding 
eurographics association 
collision collision teschner collision detection deformable objects recursion binary trees ary trees 

general updating different strategies proposed building hierarchy hierarchy update 
larsson ller lam compared bottom topdown strategies 
collision detection process deep nodes reached bottom strategy performs better deep nodes reached top approach faster 
proposed hybrid method updates top half tree bottomup non updated nodes reached updated top 
method reduce number unnecessarily updated nodes drawback higher memory requirement store leaf information vertices faces internal nodes 
approaches proposed accelerate hierarchy update omitting simplifying update process time steps 
purpose bounding volumes generally inflated certain distance 
hierarchy update needed long enclosed primitives move farther distance 

morphing objects important case deformation occurs animation systems objects deformed morphing blending 
objects constructed interpolating morph targets 
usually requires target models number vertices topology 
eurographics association 
deformation predefined morph bvh objects constructed morphing bvs 
idea lam construct bvh morph targets fit morph targets corresponding nodes contain exactly vertices 
node bvh corresponding bvs stored morph target see fig 

runtime bvh constructed morphed object just considering original bvh interpolating bvs 
assume morph targets vertices weight vectors vertex morphed object affine combination jv 
bvs corresponding nodes bvhs contain vertices albeit different positions 
dop denoted si sj ej interval dop 
new dop sk interpolated dops wis wie 
interpolated dop enclose interpolated vertices beneath node easy verify lower bounds 
works just aabbs aabbs special case dops similar approach works sphere trees 
utilize existing top bvh traversal algorithms collision detection 
additional done interpolation morphing bvs just checked overlap 
exact positions morphed vertices enclosed bv needed 
deformable collision detection algorithm faster practical cases performance depends polygon count general method lam 
method drawbacks find bvh yields performance models works morphing schemes allow weight morph target 
teschner collision detection deformable objects 
self collision detection bvhs easily employed accelerate self collisions 
mentioned sec 
particularly important deformable objects cloth 
general collisions self collisions performed way bvhs 
objects tested collisions respective bvhs checked 
analogously self collisions object detected testing bvh 
noted bvs neighboring regions overlap self collisions 
eliminate cases efficiently different heuristics 
volino magnenat thalmann vmt proposed exact method avoid unnecessary tests certain bvs 
therefor vector positive dot product face normals region searched 
vector exists projection region plane direction vector self intersect region self intersect 
approach proposed provot pro 
method normal cones introduced 
idea fact regions sufficiently low curvature self intersect assuming convex 
cone calculated region 
cones represents superset normal directions 
built hierarchy updated hierarchy update 
apex angle cone represents curvature indicating possible intersections 

continuous collision detection bvhs accelerate continuous collision detection detect exact contact dynamically simulated objects successive time steps 
bvs cover object primitives certain time step 
enclose volume described linear movement primitive successive time steps bfa 
bfa technique employed cloth simulation 
scenario continuous collision detection prevents self intersections see fig 

multi body systems number collisions single time step increase significantly causing simple sign checking methods fail 
gk developed reliable method adjusts step size integration including event functions system differential equations robust root detection 
finding point contact basically corresponds finding roots polynomials describe distance basic geometric entities face vertex edge edge pairs 
polynomials easier process motion objects screw motion 
kr approximate general motion sequence screw motions 
bvhs employed continuous collision detection cloth simulation 
image courtesy robert ubc 
continuous collision detection prevents cloth simulation 
image courtesy robert ubc 
order quickly eliminate possible collisions groups polygons part deformable objects construct called velocity cones bvhs 
technique sorts vertices radially checks outer ones fw 
simple way augment traditional static bvh traversals proposed es 
traversals node new bv computed encloses static bv node times possibly ti 
approaches utilize quaternion calculus formulate equations motion ssw 

bvh approaches efficiency basic bv investigated carefully 
due fact deforming objects require frequent updates hierarchy 
far shown aabbs preferred bvs obbs 
obbs approximate objects tighter aabbs aabbs updated efficiently 
additionally ary ary trees shown better performance compared binary trees 
deformable modeling environments require fre eurographics association 
quent updates bvhs bvhs suited animations interactive applications updating hierarchies done efficiently 
furthermore bvhs employed detect applying additional heuristics accelerate process 
bvhs triangles tetrahedrons object primitives allows sophisticated collision response compared pure vertex response 

stochastic methods inexact methods focus collision detection research 
idea motivated observations 
polygonal models just approximation true geometry 
second perceived quality interactive applications depend exact simulation real time response collisions 
time humans distinguish physically correct physically plausible behavior objects 
tolerated improve performance collision detection degrading precision 
inexact methods detail 
methods probabilistic principles fairly different ways 
uses probabilistic methods estimate possibility collision respect quality criterion 
method quality collision detection specified user directly ensuring control 
second method initially guesses colliding pairs stochastic sampling colliding bodies 
exact colliding regions narrowed principle conjunction temporal spatial coherence 
case user indirect control quality collision detection 

average case approach conceptually main idea algorithm consider sets polygons inner nodes bvh 
traversal pairs sets polygons checked kz 
pairs polygons explicitly checked 
polygon information stored nodes bvh 
probability existence pair intersecting polygons estimated 
advantages 
algorithm truly 
application control runtime algorithm specifying desired quality collision detection 
second probabilities guide algorithm parts bv hierarchies allow faster convergence estimate 
contrast traditional traversal schemes algorithm guided probability pair bvs contains intersecting polygons 
omitting details algorithm works follows eurographics association 
teschner collision detection deformable objects conceptually idea average case approach determine number cells grid covering contain polygons traverse empty pop children ai pr ai bj pr ai bj large return collision pr ai bj insert ai bj pr ai bj priority queue initialized top bv pair 
pr ai bj denotes probability collision polygons nodes ai note possible compute pr exactly 
estimated distribution polygons inside grid combinatorial reasoning probability cell contains polygons see fig 

note approach general framework applied bvhs utilizing different types bvs 
bvh augmented single number number cells node contain polygons 
addition wants perform exact collision detection polygons stored bvh 

stochastic collision detection randomly selected primitives na approach stochastic collision detection consists selecting random pairs colliding features initial guess potential intersecting regions 
method augmented ensuring sampling covers features entire body features close 
sufficient identify colliding regions object moves deforms 
solution consider temporal coherence proposed teschner collision detection deformable objects lin lc 
pair features close time step may interesting 
enables follow colliding regions subsequent time steps objects animated 
pairs converge local minima distance efficiently identify collisions 
addition spatial coherence applied keeping track local minimum neighborhood features 
pair locally updated time step order track local distance variations objects move deform see fig 

pairs called active pairs 
initially distant active pairs converge local minimum suppressed 
pair suppressed associated distance greater threshold 
process tracks existing regions interest detect new ones 
serious problem non convex object deformations small motion significantly alter closest distance location 
addition update currently active pairs additional random pairs added list active pairs time step 
update extra active pairs similar update existing ones 
complexity detection process linearly varies user defined parameter time step collision detection consists selecting currently active pairs pairs closer sum radii 
reaction forces generated 
general stochastic approach described applied collision detection problems explained sec 
sec 


volumetric elastic bodies multiresolution methods proven efficient real time simulation deformable bodies 
environment guy gd applied multiresolution physically animation model conjunction described approach help accelerate collision detection 
start tracking pairs features coarser level initially far apart refine finer level move closer 
switching resolutions done evaluating distance metric pairs applying spatial coherence features different resolutions 
fig 
illustrates concept 
objects approach collision regions tracked different resolutions converges exact vertices collisions 

thin self colliding structures mentioned highly flexible structure strands cloth possibility self colliding multiple places see fig 

general stochastic collision approach adapted detect collisions self collisions objects 
proposed method illustration stochastic collision detection volumetric bodies pairs features depicted lines different resolutions different colored points tracked objects approach 
utilizes optimizations 
step update method computing local distance minima surface structures 
reduces complexity wheren number neighboring primitives 
second order provide robust collision response collisions propagated collision point 
collision occurs recursive algorithm searches neighborhood possible collisions unique response applied 
multiple colliding regions detecting collisions self collisions different folds thin objects 
tracking local minima distance shown dark dash line performing distance computations neighboring pairs shown lighter dash line 
eurographics association 

discussed stochastic methods principally different common characteristics 
important possibility balance quality collision detection collision ratio computation time 
shown stochastic approaches applicable real time applications 
considered exact physically correct simulation possible 
approach works bvhs extend methods described section 
second independent hierarchy directly employed pairs primitives simplifies collision response scheme 

distance fields distance fields specify minimum distance closed surface points field 
distance may signed order distinguish inside outside 
representing closed surface distance field advantageous restrictions topology 
evaluation distances normals needed collision detection response extremely fast independent complexity object 
collision detection distance fields wide range applications 
morphing volumetric modeling motion planning animation fire 
distance fields called distance volumes functions bmf 
distance field defines surface zero level set 
contrast implicit representations simple function evaluation yields euclidean distance surface 
distance field stores lot information surface efficient computation distance field surface representations topic techniques section 
section discuss distance fields collision detection deformable objects rigid deformable objects 

distance field generation different data structures representing distance fields proposed literature uniform grids octrees bsp trees 
uniform grids distance values computed grid point intermediate values reconstructed trilinear interpolation 
data structure easy implement distance queries computed constant time 
important real time applications 
smooth objects represented quite eurographics association 
teschner collision detection deformable objects happy buddha color mapped distance field slices 
distance field valid band near surface mapping faded larger distance 
blue maps close distances red indicates medium distances 
uniform grid provides continuity different cells trilinear interpolation reconstructs smoothly curved surfaces inside cell small approximation error 
collision response schemes need normals computed normalizing analytic gradient trilinear interpolation 
drawbacks uniform grids huge memory requirements limited resolution representing objects sharp features 
order overcome problems proposed adaptively sampled distance fields adfs 
data stored hierarchy able increase sampling rate regions fine detail 
various spatial data structures suitable general adfs usually stored octree 
construction adf cell subdivided long result trilinear interpolation properly approximate original distance field 
subdivision rule differs standard color octrees cell completely inside outside subdivided 
subdivision stops maximum tree depth reached 
compared uniform grids adfs provide compression ratio 
collision detection purposes special care taken order guarantee continuity different levels tree bmf 
cell adjacent coarser cell corner values changed match interpolated values coarser cell 
bsp tree memory consumption reduced wk 
achieved piecewise linear approximation distance field necessarily continuous 
wk algorithms teschner collision detection deformable objects selecting appropriate splitting planes tree provided shown bsp representation compact 
unfortunately construction bsp tree computationally expensive 
problem may arise discontinuities cells cracks easily resolved adfs 
applications surface collision object triangular mesh possibly deforming time 
collision detection sufficient compute distance values small band near surface 
clearly reduces computational effort considerably 
essentially different approaches efficient computation distance field methods voronoi diagrams propagation methods methods trees 
distances grid point evaluated independently tree data structure cull away distant triangles speed computations 
early pt applies bvhs 
octrees js 
approaches shown competitive compared methods computing times order minutes 
propagation methods start narrow band distances computed near triangular surface 
initial information distributed volume 
fast marching methods set distance transforms examples propagation methods 
js different types distance transforms compared 
fast distance transforms accurate 
usage graphics hardware computing generalized voronoi diagrams proposed 
technique builds distance meshes voronoi site 
simple rendering meshes sites yields unsigned distance field depth buffer graphics hardware 
distance meshes quite complex algorithms proceed slice slice 
huge number triangles rendered slowing method considerably 
algorithm linear complexity described 
method utilizes voronoi diagram faces edges vertices mesh 
voronoi region represented bounding polyhedron 
cut slices grid rows resulting polygons scan converted order determine grid points lie inside 
distance inner grid points easily computed distance voronoi site 
orientation triangle mesh provides correct sign region 
grid point scan converted times smallest distance considered 
spg algorithm graphics hardware scan convert 
authors show replace faces edges vertices constructing polyhedron face 
reduces number polyhedra scan converted factor 
authors demonstrated possible compute distance field stanford bunny consisting triangles seconds 
grid resolution band width model extent 
cases triangular meshes stored adjacency information 
needed computing voronoi regions fsg propose algorithm computes distance values independently triangle 
sign errors due lack adjacency information technique able compute distance fields finely tessellated objects fast 
shown takes seconds compute distance field happy buddha model triangles grid 

distance field collision detection collision detection different objects carried point wise distance fields 
deformable objects volumetric vertices surface object compared distance field object vice versa 
collision occurred 
animating deformable surfaces rigid bodies distance fields particular suitable 
case vertices deformable surface tested collisions 
order avoid artifacts collision response necessary offset vertices zero isosurface predefined see fig 

case vertex marked collided 
offset depends sampling density deformable objects 
note distance fields report collisions compute penetration depth 
required proper collision response algorithm 
offsetting vertices interpenetration artifacts may occur collision detection 
introducing offset solves problem 
deformed distance fields estimate penetration depth elastic polyhedral objects fl 
method internal distance field created fast marching level set method propagating distance information inside objects 
order take deformations objects account distance fields updated time step 
actual collision detection carried hierarchical method 
collision response distance fields deformed due geometry approximation penetration depth 
method able handle self collisions collisions 
approach eurographics association 
suited volumetric objects thin objects cloth represented internal distance fields 
distance field partially updated deforming regions object experiments show method intended real time applications 
bmf suggest adfs detecting collisions clothing animated characters 
surface deforms time due skin muscle simulation authors propose pre calculate distance field time step fast marching method set 
multiple cloth simulations 
order handle cloth intersecting character geometries distance field body part created 
cloth vertices inside distance fields detected handled properly 
thorough analysis clothing see 
timings necessity pre calculation distance fields indicates proposed approach tailored film making 
fsg problem rapid distance computation rigid deformable objects addressed 
rigid objects represented distance fields stored uniform grid maximize query performance 
vertices deformable object penetrate object quickly determined evaluating distance field 
additionally center edge deforming mesh tested order improve precision collision detection 
updates distance field considered costly authors propose combine multiple rigid bodies animation similar method bmf 
experiments suggest technique able animate cloth interactive rates see fig 

collisions complex non convex objects resolved accurately self collisions treated different approach 
updates distance field common bottleneck methods described 
accelerate theses updates proposed image approach computing distance values 
rendering hardware constructing depth normal maps object map back object map front 
maps distance calculations collision response 
algorithm restricted convex shapes appropriate mapping directions case animated characters 
image approach proposed uses technique described create distance field graphics hardware 
distance field collision response 
authors report interactive frame rates non convex rigid bodies deformable bodies 
method applicable problems 

distance fields employed detect collisions self collisions non interactive applications 
eurographics association 
teschner collision detection deformable objects interactive animation cloth complex collision environment 
efficient algorithms computing distance fields proposed generation fast interactive applications distance fields updated run time due deforming geometry 
distance fields provide highly robust collision detection divide space strictly inside outside 
interactive applications distance fields represent rigid objects contained environment 
distance fields yield penetration depth normals needed collision response interactive rates collision detection deformable objects rigid objects carried efficiently 
order decrease storage requirements generation time possibly reduce resolution distance field results lowered accuracy 
distance field approaches balance performance accuracy 

spatial subdivision exist various approaches propose spatial subdivision collision detection 
algorithms employ uniform grids tur zy mel 
tur spatial hashing collision detection mentioned time 
mir hierarchical spatial hashing approach part robot motion planning algorithm restricted rigid bodies 
thm spatial hashing employed detection collisions self collisions deformable tetrahedral meshes 
tetrahedral meshes commonly medical simulations employed environment deformable objects fem mass spring similar mesh approaches see fig 

algorithm implicitly subdivides small grid cells 
complex data structures octrees approach employs hash function map grid cells hash table 
memory efficient provides flexibility allows handling potentially infinite regular spatial grids 
teschner collision detection deformable objects information global bounding box environment required data structures avoided 
interactive environment deformable objects represented tetrahedral meshes 
spatial hashing employed detect collisions self collisions 
algorithm thm proceeds stages 
pass information implicit grid cells vertices mapped hash table 
second pass considers tetrahedrons environment 
maps information grid cells touched tetrahedron hash table 
third stage checks vertices tetrahedrons hash table entry intersections 
vertex penetrates tetrahedron collision detected 
vertex tetrahedron belong object detected 
experiments various setups deformable objects performed see tab 
tab 

setups illustrated fig 

setup deformable objects table setups dynamically deforming objects tested thm 
setup objects vertices experiments indicate detection collisions self collisions dynamically deforming objects performed hz tetrahedrons vertices standard pc 
performance independent number objects 
depends number object primitives 
performance varies slightly simulations due changing number hash collisions varying distribution hash table elements 
interactive environment dynamically deforming objects collision handling 
surface high geometric complexity underlying tetrahedral mesh shown 
table performance collision detection spatial subdivision see thm 
setups described tab 

average collision detection time minimum maximum standard deviation simulation step 
setup ave ms min ms max ms dev ms 
spatial subdivision simple fast technique accelerate collision detection case moving deforming objects 
spatial subdivision detect collisions self collisions 
algorithms spatial subdivision independent topology changes objects 
restricted triangles basic object primitive eurographics association 
test setup left right 
test setup left tetrahedral mesh setup object primitives appropriate intersection test implemented 
main difficulty spatial subdivision choice data structure represent space 
data structure flexible efficient respect computational time memory 
thm hash table shown efficient simulation environments 

image space techniques image space techniques proposed collision detection mok bw kp 
approaches commonly process projections objects accelerate collision queries 
require pre processing especially appropriate environments dynamically deforming objects 
furthermore image space techniques commonly implemented graphics hardware 
early approach image space collision detection convex objects outlined sf 
method depth layers convex objects rendered depth buffers 
interval smaller depth value larger depth value pixel approximately represents object efficiently interference checking 
similar approach 
methods restricted convex objects consider self collisions explicitly applied deforming objects 
eurographics association 
teschner collision detection deformable objects mok image space technique detects collisions arbitrarily shaped objects 
contrast sf approach process concave objects 
maximum depth complexity limited 
additionally object primitives pre sorted 
due required pre processing method efficiently deforming objects 
self collisions detected 
application image space collision detection dynamic cloth simulation 
approach avatar rendered front back view generate approximate representation volume 
volume detect penetrating cloth particles 
image space approach collision detection medical applications intersections surgical tool deformable tissue detected rendering interior tool 
image space method employed collision detection proximity tests 
method restricted objects 
closest point queries performed bounding volume hierarchies approach 
kp edge intersections surfaces detected multi body environments 
approach efficient 
robust case occluded edges 
image space methods combined object sub object pruning collision detection 
approach handle objects changing topology 
setup comparatively complex considered 
image space technique collision detection arbitrarily shaped deformable objects 
approach computes layered depth image ldi object approximately represent volume :10.1.1.107.89
approach similar sf restricted convex objects 
closed surface required order defined object volume 
algorithm proceeds stages 
intersection axis aligned bounding boxes pairs objects calculated 
intersection nonempty second stage computes ldi representation object bounding box intersection 
volumetric collision queries applied 
query detects intersecting volumes objects second query detects vertices object primitives penetrate object 
self collisions 
fig 
illustrates stages algorithm 
improved algorithm 
contrast existing approaches consider approach combines image space object representation information face orientation overcome limitation 
basic data structure image space col teschner collision detection deformable objects dynamic animation hand faces phone faces 
collisions red detected 
left collisions red self collisions green hand detected 
middle self collisions green detected 
right ldi representation resolution 
collisions self collisions detected ms standard pc 
left dragon faces 
middle ldi representation resolution 
right particles penetrating volume dragon detected 
environment faces particles tested penetration ms standard pc 
detection approaches 
important optimize computation provides comparison different implementations ldi generation 
implementations graphics hardware software solutions compared 
results suggest graphics hardware accelerates image space collision detection geometrically complex environments implementations provide flexibility better performance case small environments 
fig 
fig 
collisions self collisions computed software implementation 
computing times ms standard pc 
environment low geometric complexity cpu implementation ldi generation efficient compared gpu implementation 
contrast fig 
illustrates environment faces particles 
case gpu implementation detecting penetrating particles outperforms cpu implementation 
thorough comparisons 
eurographics association 
stage 
stage 
stage 
image space collision detection 
aabb intersection 
ldi generation voi 
computation intersection volume 

contrast collision detection methods image space techniques require time consuming pre processing 
especially appropriate dynamically deforming objects 
detect collisions self collisions 
image space techniques usually triangulated surfaces 
object primitives long primitives rendered 
topology changes objects cause problems 
image space techniques discretized representations objects provide exact collision information 
accuracy collision detection depends discretization error 
accuracy performance balanced certain range changing resolution rendering process 
image space techniques accelerated graphics hardware 
due buffer read back delays limited flexibility programmable graphics hardware guaranteed implementations graphics hardware faster software solutions cases see 
rule thumb graphics hardware geometrically complex environments 
image space techniques efficiently detect collisions limited providing information collision response physically simulation environments 
approaches post processing provided result required compute approximate information penetration depth colliding objects 

applications section summarizes various applications deformable collision detection algorithms cloth modeling surgery simulation 
eurographics association 
teschner collision detection deformable objects 
cloth simulation simulation cloth bvh bottom update hierarchy 
combined approach called lazy hierarchy update omits update process areas hierarchy significant motion see fig 

accelerate detection heuristic derived provot normal cones employed pro 
efficient collision self collision detection handling cloth objects 
image generated context virtual try project www de 
impressive results virtual clothing decade 
algorithms versatile cloth simulations developed 
see fig 

scene showing big variety clothing 
teschner collision detection deformable objects known falling ribbon showing power collision response algorithms 
cloth simulation popular field computer graphics years major published topic focussed collision detection physical model ck bmf integration schemes bw collision response vt 
additionally real time simulation cloth published employs collision detection methods report tries avoid complex collision detection cmt 

virtual liver surgery developed method address detection collisions rigid surgical tool deformable organ model surgical simulation environment 
exploits gpu computation opengl clipping process collision detection 
surgical tool tool simple modeled orthographic perspective viewing volume clipping planes 
rendering feedback mode identify triangles organ visible volume colliding ones 
simply provides static collision test tool stationary 
dynamic collision detection account volume covered tool consecutive time steps proposed 
method extremely fast specific applicable simple object shapes cylinders 
fig 
illustrates method 
collision detection implemented conjunction physically model liver 
collision response forces considered dynamic simulation 

collision detection virtual organs guy gd applied multiresolution technique section collision detection volumetric elastic organs liver prostate manipulated rigid tool surgical simulation environ illustration fast opengl clipping collision detection method virtual liver surgery standard pc 
collision detected dark patch time step tool static 
dynamic collision detection sweeping viewing volume subsequent time steps tool probes organ 
dynamic simulation input collision response driving physically model 
final textured image 
ment see fig 

experiments show favorable performances compared obbs rigid bodies aabbs deformable bodies 
collision detection virtual surgery liver prostate shown dark colored organ rigid tool 

virtual surgery adapted stochastic technique detect collisions self collisions occurring region surgeon manipulates small removal colon cancer 
flexible organ easily self collide moved deformed surgical tool 
addition collides eurographics association 
thin membrane called connects colon main vessels 
modeled set skeletal segments radius thin triangulated mesh 
stochastic collision detection approach section applied segments neglecting collisions 
response applied pair collides 
skeletal model animation collision processing fed fast adaptive sampling algorithm real time rendering fig 

model animated segments possibility collisions system achieved real time performances standard pc 
real time treatment collisions shown light colored thin membrane beneath self collisions virtual surgery standard pc 
organs manipulated virtual probe shown tiny red sphere real surgery 

variety deformable collision detection approaches 
discussed approaches bounding volume hierarchies distance fields eurographics association 
teschner collision detection deformable objects spatial partitioning 
image space techniques stochastic methods described 
methods address problems especially occur deformable simulation environments 
approaches provide promising solutions certain aspects deformable collision detection exist general optimal approach 
approaches bounding volume hierarchies shown efficient 
methods basic bounding volume strategy generating updating hierarchy chosen carefully order handle frequent update requests simulation environments deformable objects 
stochastic methods promising approach time critical applications allow balancing performance accuracy 
distance fields especially appropriate collision detection rigid deformable objects 
case pre computed distance fields detect collisions provide penetration depth essential physically correct collision response 
collision detection spatial subdivision shown efficient deformable simulation environments 
approaches research mainly focussed efficient data structures 
interesting approaches deformable collision detection image space techniques 
algorithms commonly accelerated graphics hardware 
especially appropriate environments geometrically complex objects promising results 
adg agarwal de berg son boxtrees trees near optimal query time 
discrete computational geometry 
bfa fedkiw anderson robust treatment collisions contact friction cloth animation 
proceedings acm siggraph pp 

barzel hughes wood plausible motion simulation computer graphics animation 
proceedings eurographics workshop computer animation simulation boulic eds springer pp 

bmf marino fedkiw simulation clothing folds wrinkles 
proc 
acm eurographics symposium computer animation pp 

teschner collision detection deformable objects breen whitaker mao metamorphosis different types geometric models 
eurographics proceedings 
hamann joy ma virtual clay modeling adaptive distance fields 
proceedings international conference imaging science systems technology 
bw baraff witkin large steps cloth simulation 
computer graphics annual conference series 
bw wong self collision deformable surfaces 
proceedings acm symposium virtual reality software technology vrst acm press pp 

baraff witkin kass cloth 
acm transactions graphics proceedings acm siggraph 
wong sun recode image collision detection algorithm 
journal visualization computer animation 
canny collision detection moving polyhedra 
ieee trans 
pattern anal 
mach 
intell 
pami 
ck choi ko stable responsive cloth 
proceedings acm siggraph pp 

cmt cordier magnenat thalmann real time animation dressed virtual humans 
eurographics conference proceedings pp 

cohen levin dimensional distance field metamorphosis 
acm transactions graphics 
desbrun cani barr dynamic real time deformations space time adaptive sampling 
proc 
siggraph acm press 
el lin accurate fast proximity queries polyhedra convex surface decomposition 
computer graphics forum vol 
pp 

issn 
es eckstein sch mer dynamic collision detection virtual reality applications 
proc 
th int conf 
central europe comp 
graphics vis 
interactive digital media wscg czech republic feb university west pp 

fl fisher lin deformed distance fields simulation non penetrating flexible bodies 
proc 
eurographics workshop computer animation simulation 
perry jones adaptively sampled distance fields general representation shape computer graphics 
siggraph computer graphics proceedings 
fsg fuhrmann gross distance fields rapid collision detection physically modeling 
proceedings sept pp 

fw wang efficient time continuous collision detection polyhedral objects arbitrary motion 
journal information science engineering 
gd guy layered shells fast collision detection 
technical report imag inria grenoble france 
sullivan improving collision detection deformable objects 
proc 
spring conference computer graphics 
gk thy reliable multibody detection integration polynomials 
proceedings ist lisbon portugal july 
glm gottschalk lin manocha obb tree hierarchical structure rapid interference detection 
siggraph conference proceedings aug rushmeier ed acm siggraph addison wesley pp 

eurographics association 
govindaraju redon lin manocha interactive gs sion detection complex models large environments graphics hardware 
proc 
acm graphics hardware 
goldsmith salmon automatic creation object hierarchies ray tracing 
ieee computer graphics applications may 
high performance solver animation deformable objects advanced numerical methods 
proc 
eurographics chalmers eds vol 
computer graphics forum pp 

hoff iii lin manocha fast computation generalized voronoi diagrams graphics hardware 
proceedings acm sig graph pp 

heidelberger teschner gross real time volumetric intersections deforming objects 
proc 
vision model ing visualization vmv pp 

heidelberger teschner gross detection collisions self collisions image space techniques 
proc 
hub wscg appear 
hubbard approximating polyhedra spheres time critical collision detection 
acm transactions graphics july 
iii lin manocha fast simple geometric proximity queries graphics hardware 
symposium interactive graphics pp 

js jones distance fields object representation rendering 
proc 
th ann 
conf 
eurographics uk chapter london pp 

krishnan lin manocha rapid accurate contact determination spline models 
computer graphics forum sept 
klosowski held mitchell eurographics association 
teschner collision detection deformable objects efficient collision detection bounding volume hierarchies dops 
ieee transactions visualization computer graphics jan 
kim hoff iii lin manocha closest point query union convex polytopes rasterization hardware 
journal graphics tools 
kim lin manocha fast penetration depth computation physically animation 
proc 
sig graph symposium computer animation pp 

kp knott pai collision interference detection real time graphics hardware 
proc 
graphics interface 
kr kim rossignac collision prediction polyhedra screw motions 
acm symposium solid modeling applications seattle washington usa june pp 

kz klein zachmann adb trees controlling error time critical collision detection 
th international fall workshop vision modeling visualization vmv university nchen germany nov 
lam larsson ller collision detection continuously deforming bodies 
eurographics pp 

short presentation 
lam larsson ller efficient collision detection models deformed morphing 
visual computer may 
lc lin canny efficient collision detection animation 
proc 
rd eurographics workshop animation simulation 
cani real time collision detection virtual surgery 
proc 
comp 
anim 
ieee cs press pp 

mel dynamic plane shifting bsp traversal 
proc 
graphics interface pp 

mir mirtich efficient algorithms teschner collision detection deformable objects phase collision detection 
tech 
rep tr mitsubishi electric research laboratory 
hierarchical techniques collision detection cloth animation 
journal wscg 
mok kunii fast collision detection complex solids graphics hardware 
visual computer 
pg palmer collision detection animation 
computer graphics forum june 
pro provot collision self collision handling cloth model dedicated design 
graphics interface may canadian information processing society canadian human computer communications society pp 

pt payne toga distance field manipulation surface models 
ieee computer graphics applications january 
faure marchal cani surgery simulator real time collision processing visualization 
ieee transactions visualization computer graphics 
redon coquillart fast continuous collision detection rigid bodies 
computer graphics forum eurographics sept 
rl roussopoulos direct spatial search pictorial databases packed trees 
proceedings acm sigmod international conference management data austin texas may pp 

set sethian fast marching level set method monotonically advancing fronts 
proceedings national academy science 
sf interference detection rasterization 
journal visu alization computer animation 
shade gortler wei szeliski layered depth images :10.1.1.107.89
proceedings siggraph pp 

spg gross signed distance transform graphics hardware 
proceedings ieee visualization october ieee computer society press 
ssw sch mer sellen exact geometric collision detection 
proc 
th canad 
conf 
comput 
geom 
pp 

thm teschner heidelberger mueller gross optimized spatial hashing collision detection deformable objects 
proceedings vision modeling visualization vmv pp 

tur turk interactive collision detection molecular graphics 
tech 
rep tr university north carolina chapel hill 
uno slater sensitivity presence collision response 
proc 
ieee virtual reality annual international symposium vrais albuquerque new mexico mar 
van den bergen efficient collision detection complex deformable models aabb trees 
journal graphics tools 
vmt volino magnenat thalmann efficient self collision detection smoothly discretized surface animations geometrical shape regularity 
computer graphics forum 
vmt volino magnenat thalmann collision self collision detection efficient robust solutions deformable surfaces 
comp 
animation simulation springer verlag pp 

thou fast cloth animation walking avatars 
computer graphics forum proc 
eurographics 
vt volino thalmann implement eurographics association 
ing fast cloth simulation collision response 
computer graphics interface 
wk wu kobbelt piecewise linear ap proximation signed distance fields 
vision modeling visualization proceedings pp 

kobbelt ertl real time exploration regular volume data adaptive reconstruction isosurfaces 
visual computer 
zac zachmann rapid collision detection dynamically aligned dop trees 
proc 
ieee virtual reality annual international symposium vrais atlanta georgia mar pp 

zac zachmann minimal hierarchical collision detection :10.1.1.10.7532
proc 
acm symposium virtual reality software technology vrst hong kong china nov pp 

zl zachmann ric data structures computer graphics 
proc 
acm siggraph 
acm transactions graphics july 
zhao wei fan kaufman qin voxels fire 
proceedings ieee visualization 
zy zhang yuen collision detection human animation 
proceedings pacific graphics pp 

eurographics association 
teschner collision detection deformable objects teschner collision detection deformable objects eurographics association 
