improving recommendation ranking learning personal feature weights coyle cunningham department computer science trinity college dublin coyle cunningham cs tcd 
ranking offers issue commerce received lot attention case reasoning research 
absence sales assistant important provide facility bring suitable products services attention customer 
facility part personal travel assistant pta booking flights online 
pta returns large number offers average important rank bring suitable fore 
ranking done similarity previously accepted offers 
characteristic domain case base accepted offers small learning appropriate feature weights particular challenge 
describe process learning personalised feature weights evaluation shows effectiveness 
particular challenge commerce provide mechanisms substitute ways human sales assistant facilitates sales process 
important component ability identify customer preferences highlight products services satisfy customer requirements preferences 
particularly true travel domain 
dialog old fashioned business travel agent contain phrases presume want go flight want return friday evening want ideally online personal travel assistant learn preferences 
describe system uses cbr rank offers returned response travel request 
types cases system offer cases 
session cases represent previous user interactions sessions system offer cases represent individual travel offers 
session cases viewed request offer pairs problem component case previous travel request additional contextual information solution component selected offer offer case response support informatics research initiative enterprise ireland support science foundation ireland gratefully acknowledged 
request 
idea user preferences encoded implicitly accepted offers particular requests similar requests lead similar selections offers 
ranking stage process 
stage find previous session contains similar request current travel request 
session assumed relevant user current context 
second stage current offers ranked similarity offer component retrieved session case 
session recommendation approach analogous ricci system 
systems rank items similarity items selected response similar queries past twofold similarity 
differs system uses mixed initiative approach elicit user preferences determine preferences implicitly 
incorporate preferences similarity measures recommendation process 
users price conscious adverse long times preferences departure times 
ask users weight importance criteria choose learn past behaviour 
reasons places cognitive load user 
second avoids problem asking users assign numeric weights criteria skill people notoriously poor 
techniques lines introspective learning described past branting stahl 
introspective learning refers approach learning problem solving knowledge monitoring run time progress particular problem solver 
approach failure driven sense attempt improve feature weights case recommendation failure 
done decreasing weights features increasing weights matching features 
tend push recommendation scores offers taken pull scores ones selected 
section discusses number feature weighting algorithms user feedback drives learning 
section describes personal travel assistant application cbr recommend flights users 
section give description feature weight learning algorithm 
section presents results show weight learning improves recommendation accuracy 
discuss section draw section 
feature weighting user feedback number systems user feedback assist problem solving episodes 
mixed initiative cbr conversational cbr systems feedback direct search problem space 
learners attempt incorporate level utility similarity measures looking case order feedback 
utility indicative adaptability usefulness current problem 
hope incorporating utility similarity measure way improve recommendations system 
isac system uses form introspective learning improve retrieval mechanism 
feature weights updated order optimise problem solving performance 
stahl describes similarity teacher knowledge utility function system trying learn 
teacher goes retrieved set cases uses utility function calculate similarity error 
minimising error feature feature basis attempts learn best feature weights problem hand 
branting describes method learning feature weights looking customer selections sets items 
method called learning customer weights involves boosting ranking order selected items altering feature weights 
techniques broadly similar approaches attempt learn utility function altering feature weights improve retrieval accuracy 
learning techniques similar combination failure success driven approaches 
system uses implicit user feedback final selection item purchase user drive learning process 
failure driven approach system making recommendations attempt improve retrieval mechanism 
selection single item user retrieval mechanism look case order feedback stahl technique closely aligned branting 
examine ideas relation issue contextual features 
fundamental differences area priori knowledge items recommended apart expected structure items retrieved real time 
known items completely satisfy user initial query 
user system acts similarity teacher learnt feature weights stored personal profile 
learning attempted stages recommendation process session retrieval final offer recommendation 
techniques concern introspective learning feature weights alternative techniques available intend evaluate feature selection feature weighting 
done problem learning local similarity measures similarity measure individual feature confined learning feature weights 
recommending travel offers main purpose pta take user request flights contract real online flights brokers travel solutions recommend best user 
flights come real external sources details known advance 
purposes demonstration consider user making request holiday trip dublin rome 
making request user faced choosing flights set offers outgoing return flights 
list feature value possibilities illustrates diversity outgoing offers set carriers destination airports price ranging departing early arriving late single flight trips hop trips 
multiple hop set set additional choices possible airports times ranging hours hours size set atypical scenarios encountered users pta 
fact users average return set sizes offers 
requests yield larger sets london milan offers dublin london offers 
degree freedom idea single feature override offer user ability manually search set sorting single feature inadequate 
recommender system needed reduce offer set manageable size 
remainder section describes recommendation process pta 
pta recommendations looking interactions user system past 
selections user similar sessions past hope recommendations sessions 
need store information user habits 
successful user interaction pta user selected flight forwarded booking page record data request origin destination departure date form session case 
store offer selected user 
way request features represent problem selected offer solution session case 
represent offers cases second stage recommendation process offer ranking 
allows rank current set offers similarity offer case referenced retrieved 
illustrate recommendation process describing steps taken example user request flight dublin rome 
user logs pta submits form containing details origin destination dates travel number tickets required 
pta decomposes request constituent parts forwards number online travel brokers 
composes responses number travel offers 
offers current offer case base 
time pta searches user session case base session similar request current 
uses selected offer session rank offers current offer case base 
example retrieved session contained request trip milan user months earlier 
previous session user selected cheap hop trip london short time 
pta tend recommend similar offers current offer case base cheap flights short preferably 
stages cbr dependant definition similarity measures 
traditionally cbr systems depended domain experts design similarity measures 
implemented process users teach system personal preferences incorporated session case base similarity measures 
user constantly selects offers basis single feature observe true important gauge relative importance feature similarities order offer better recommendations 
describe relative importance features feature weights similarity measure describe technique learn section 
summary recommendation process follows stages context matching finding session similar request user session case base retrieving selected offer session ii 
offer ranking offer rank offers current session 
highest ranked offers user recommendations learning feature weights mentioned section recommendation process involves similarity measures 
describing algorithm learning feature weights second stage recommendation offer ranking 
similarity previously selected offer current offer sum similarities constituent features multiplied respective weights sim sf cf set features occur case 
infer relative importance features comparing predicted recommendations actual selections users 
run recommendation process set offers ordering set 
comparing eventual selection preferred offer user ordering generate recommendation error rec follows erec index size offer set index defined ranking offer user selected 
offer ranked equally offers index lowest ranking equals selected offer ranked equal third offers index higher ranked plus equal ranked offers 
way recommendation error indicate recommender system recommended selected offer offers encourage pta minimize number offers user 
sessions return flights retrieval accuracies outgoing return offers 
retrieval error user mean recommendation errors 
table 
table shows selected offer previous session offers current offer set 
recommended user selected 
algorithm alter feature weights ranked recommendation process executed 
trip details dublin milan dublin rome dublin rome price location london london london time minutes minutes minutes selected selected selected improve recommendation accuracy alter feature weights way ensure selected case ranked higher offers 
calculate local similarity difference cases ranked lower index 
local similarity difference feature case difference local similarity score selected case 
find cases true ranked lower altered feature weights ci false ci ci local similarities similarity differences example section shown fig 
faced decision case drive learning 
achieved results highest ranked learnable case true drive learning 
returning example scenario offer improve ranking respect 
equations change weights price time wf wf increment wf wf increment increment parameter set results 
weights normalised process repeated algorithm passes iteration limit stopping criteria met index ci false index criterion indicates reached optimal solution learning necessary criterion indicates improvement possible 
iterate algorithm check improvement reduction index 
occurs save feature weights current best 
stopping criteria met save current best weights session session weights 
ways session weights 
pta store single set weights user user weights incorporate session weights user weights completed session 
alternatively store session weights session case way ranking preferences viewed part context session 
performed experiments confirm better store session weights session case store user weights user results section 
reflects fact people different ranking selection criteria different contexts 
price location time selected offer previous session london minutes price 
sl stn stn 
sim selected sl price 
london minutes st 
price 
sl stn stn 
st 
st 
sim selected london minutes fig 

shows local similarity scores dublin rome example 
details shown features price location time 
example user selected second highest recommended feature index 
similarity differences case shown beneath feature values price 
learning request similarity measure different similarity measure finding similar previous request 
intend apply learning techniques similarity measure 
fundamental difference learning driven 
failure driven approach trigger learning request similarity measure unable learn optimal set feature weights offer recommendation stage unable find set feature weights index 
occurs believe problem learning algorithm similar request context similar request different context current request 
search user sessions see session yielded better recommendation attempt alter request feature weights improve recommendation score selected offer 
mechanism computationally expensive simply learning feature weights offer granularity care taken ensure change measure affect accuracy earlier sessions 
currently process implementing algorithm results point 
results pta running december due nature domain dearth sessions 
average user requests year 
overcome created number travel scenarios asked people complete system 
scenario plans holiday list destinations duration days fourteen days 
scenarios chosen guarantee large number possible solutions diversity offer sets 
user scenarios complete 
emphasis evaluation data realistic possible 
mind users freedom choose destination allowed reject set offers totally new request happy offer set 
key point note selected offers considered user genuinely preferred offer set 
users completed sessions initiative purchased real offers 
real sessions included evaluations 
offline technique evaluate approach feature weight learning 
involves simulating interactions system pta history 
evaluation go session history calculate set session weights techniques outlined section 
store weights session case 
evaluation proceeds follows leave approach remove session user session case base treat new unseen session 
session contains travel request set offers viewed user eventual selection preferred offer 
retrieve similar session case user session case base 
referenced offer case optimal set session weights learnt session calculate ranking order current set offers 
comparing ordering user actual selection calculate recommendation error session 
case user session case base calculate average recommendation error user 
plot recommendation accuracies baseline accuracy user system fig 
baseline calculated techniques session weights weight features equally ranking process 
fig shows recommendation process learnt session weights significantly accurate equal weights feature 
user user user user user user user user user user user user user baseline accuracy accuracy session weights fig 

comparison baseline recommendation accuracy session weight recommendation accuracy sixteen users 
average accuracies users shown far right column 
improvement accuracy statistically significant confidence level 
second evaluation assesses value user weights recommendation process 
user weights amalgamation session weights provide better level generalization 
user weights average user calculated previous evaluation 
comparison recommendation accuracies previous evaluation baseline session weight recommendation accuracies user weights shown fig 
shows offer significant improvement recommendation accuracy 
see fact session weights valuable user weights proof generalization confirmation premise context important element domain 
fitting important point mention problem fitting 
previous research shown feature weighting algorithms tend fit data 
believe fitting unavoidable domain due lack data 
leave evaluation shows learned weights better starting position equal weights 
data collected intend perform evalua user user user average tion level fitting occurring algorithm attempt minimise 
user user user user user user user user user baseline accuracy accuracy user weights accuracy session weights fig 

comparison baseline recommendation accuracy session weight recommendation accuracy user weight recommendation accuracy sixteen users 
average accuracies users shown far right column 
improvement learning session weights user weights statistically significant confidence level 
intend develop approach making recommendations users pta system 
currently implementing mechanism learning request feature weights hope improve recommendations 
intend implement techniques including collaborative cbr learning local similarity measure manner done stahl 
collaborative cbr lack session information intend investigate collaborative techniques improve recommendations 
user request retrieved session similarity score threshold look user neighbours better match 
similar request neighbour session user user user user user user user average case base experience recommend offers user current session 
especially useful new users 
main issue approach determination user neighbours 
intend comparing feature weights users group users virtue similarity weights 
strengthen groupings collaboration leads recommendations vice versa 
solution appropriate users rich history learned weights faced problem determining neighbours new users 
solve intend allow new users access collective case base system 
altering similarity measure focus learning feature weights scope learn local similarity measures 
fact happening evaluation small extent 
pta uses taxonomy difference function capture relationships geographical locations origin destination features offer cases representation 
due configuration taxonomy diversity similarity set current offers airports city level taxonomy 
allow perform learning level reorder taxonomy boosting selected feature value siblings incorporating measure utility local similarity function 
example local similarity functions altered incorporate utility way alter sensitivity difference 
features domain numeric difference basis similarity calculations altering user sensitivity difference implement personalisation 
similarity graph price feature shown fig changing point focus price similarity measure cases differences 
depth description representation similarity measures 
described approach learning personalized feature weights online travel recommendation system 
key motivation developing recommender system combine recommendations low cognitive load user 
achieved recommendation results implementing personalised profiles learning algorithms specific user 
minimise cognitive load implicit feedback drive learning 
recommendation process case reasoning learn user profile ways adding cases case base interaction learning optimal sets feature weights interaction 
similarity difference fig 

fig shows relationship difference price difference greater results similarity zero 
motivation learning way users enter interaction different context 
offer recommendation process defining context request clear user preferences respect long haul flight quite different short trip price may important comfort may defining feature 
preferences trying learn 
performed evaluations techniques real users system show highly significant improvement recommendation accuracy learning algorithms 
interpretation techniques geared reducing return set size response request 
subset total number offers offer guarantee system suitable offer retrieval 
reason see potential techniques operate parallel recommendation strategies comparison recommendation diversity boosting mature recommendation system 

bergmann richter schmitt stahl 

utility oriented matching new research direction case reasoning 
proceedings th german workshop case reasoning baden baden germany 

schnurr staab studer stumme sure 
shaker verlag 
pp 


cunningham smyth 
introspective learning improve retrieval cbr case study air traffic control 
proceedings nd international conference case reasoning iccbr david leake plaza eds lncs springer pp 

bradley smyth 

improving recommendation diversity 
proceedings twelfth irish conference artificial intelligence cognitive science connor ed 
pp 

branting 

learning feature weights customer return set selections 
journal knowledge information systems march 
burke hammond young 

findme approach assisted browsing 
ieee expert pages 

coyle cunningham hayes case personal travel assistant elaborating user requirements assessing offers 
proceedings th european conference susan craw preece eds 
lnai vol 
pp 
springer verlag 

coyle doyle cunningham 
representing similarity cbr xml 
appear proceedings th european conference case reasoning 

kohavi langley yun utility feature weighting nearest neighbor algorithms 
th european conference machine learning ecml prague czech republic 
poster session 

smyth 

comparison recommendation 
proceedings th european conference susan craw preece eds 
lnai vol 
pp springer verlag 

ricci 

itr case travel advisory system 
proceedings th european conference susan craw preece eds 
lnai vol 
pp springer verlag 

ricci 

produce recommendation query management twofold similarity 
proceedings th international conference case reasoning iccbr kevin ashley derek bridge eds 
lncs vol 
pp springer 



navigating shoppers buying process combination asking proposing 
proceedings th international joint conference artificial intelligence ijcai seattle washington usa 

stahl 

learning feature weights case order feedback 
proceedings th international conference case reasoning iccbr david aha ian watson eds 
lncs vol 
pp springer 
stahl 

defining similarity measures top vs bottom 
proceedings th european conference susan craw preece eds 
lnai vol 
pp springer verlag 

stahl 

evolution programs learn local similarity measures 
proceedings th international conference case reasoning iccbr kevin ashley derek bridge eds 
lncs vol 
pp springer 
