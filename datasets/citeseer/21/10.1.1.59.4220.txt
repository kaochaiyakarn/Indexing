racer owl reasoning agent semantic web volker haarslev ralf ller concordia university montreal canada haarslev cs concordia ca university applied sciences germany fh de racer considered core reasoning agent semantic web briefly described 
racer currently supports wide range inference services ontologies specified ontology web language owl 
services available agents network apis 
racer currently various clients ontology editors ontology development visualization tools webbased prototype exploration analysis owl ontologies 
semantic web initiative defines important challenges knowledge representation inference systems 
standards representation languages proposed 
standards semantic web resource description framework rdf 
rdf xml shares document oriented view grouping sets declarations statements 
rdf triple oriented style data modeling provides means expressing data multiple documents xml express graph structures specific document 
design decision rdf talk 
principle statements documents referred resources 
particular conceptual domain models represented rdf resources 
conceptual domain models referred vocabularies rdf 
specific languages provided defining vocabularies ontologies 
extension rdf defining ontologies rdf schema rdfs express conceptual modeling notions generalization concepts aka classes roles aka properties 
properties domain range restrictions specified 
expressiveness rdfs limited 
expressive representation language owl ontology web language 
weak way xml schema owl provides means dealing data types known programming languages 
representation languages mentioned defined model theoretic semantics 
particular language owl semantics defined large fragments language directly expressed socalled description logics see 
fragment called owl dl 
restrictions discussed state logical basis owl characterized description logic sh iq dn 
means restrictions owl documents automatically translated sh iq dn boxes 
rdf part owl documents translated sh iq dn boxes 
racer owl reasoner logic sh iq dn interesting practical applications highly optimized inference systems available racer 
racer freely available research purposes accessed standard tcp protocols racer program subsequently called racer server 
racer read owl knowledge bases local files remote web servers racer server client 
turn client programs need inference services communicate racer server tcp protocols 
oiled seen specific client uses dig protocol communicating racer server rice client uses tcp protocol providing extensive query facilities see 
dig protocol xml standard connecting client programs description logic inference engines 
dig allows allocation knowledge bases enables clients pose standard description logic queries 
standard common denominator encompass possible forms system specific statements queries 
long term query processing instructions exploitation query subsumption computation indexes certain kinds queries see 
racer provides tcp interface order receive instructions statements queries 
interactive language supported racer xml rdf 
advantage users spontaneously type queries directly sent racer server 
racer tcp interface easily accessed java application programs 
languages corresponding apis available 
lists known concepts individuals 
supported inference services description logic terminology tuple consisting box box referred knowledge base 
individual specific named object 
owl allows individuals concepts box axioms 
example expressing fact humans stem single human called adam requires refer individual concept box 
part expressivity individuals mentioned concepts captured boxes 
straightforward approximation exists see practice suitable sh iq dn ontologies generated owl document 
racer directly read owl documents represent description logic knowledge bases aka ontologies 
selection supported box queries briefly introduced 
concept consistency set objects described concept empty 
concept subsumption subset relationship set objects described concepts 
find inconsistent concepts mentioned box 
inconsistent concepts result modeling errors 
determine parents children concept parents concept specific concept names mentioned box subsume concept 
children concept general concept names mentioned box concept subsumes 
concept needed argument query predefined names possible 
box types box queries possible check consistency box restrictions box box strong contradict 
queries possible consistent boxes 
instance testing object individual stands member set objects described certain query concept 
individual called instance query concept 
instance retrieval find individuals box objects stand proven information individual jerry 
member set objects described certain query concept 
computation direct types individual find specific concept names box individual instance 
computation fillers role individual 
background description logics application papers demonstrate inference services solve actual problems owl knowledge bases 
query interface extensively rice tool ontology exploration analysis introduced section 
ontology exploration analysis tool section presents prototype ontology exploration analysis tool designed owl 
tool parses owl files presents natural language interface exploring analyzing ontologies 
facilitated inference services racer 
demonstrate simple browsing scenario small ontology sake brevity cartoon characters tom jerry 
assume corresponding ontology loaded 
start browsing lists concept individual names declared ontology see 
interested individual jerry shown learn jerry instance class mouse 
know cats usually eat mice decide inspect description cat see clicking corresponding hyperlink 
shows description class cat 
description displays results inference services racer consists information 
concept class name default name space ontology filename names ancestor classes top synonym thing animal animal names descendent classes bottom synonym parents animal animal children names roles properties mentioned class definition eat mouse individual names instances class tom owl definition debugging purposes description class declaration formalized description class cat 
natural language learn cat relationship role eat mouse individual 
clicking corresponding hyperlink description eat mouse displayed 
roles may part role hierarchy 
instance example discover eat mouse defined child role eat animal parent role eat small mouse 
readers agree kind information better readable helpful understanding ontologies just reading owl specification 
final version webbased tool offer support exploration analysis unknown owl ontologies help owl reasoning agent racer 
planned provide ad query support better cross referencing 
tool implemented web server web browser 
currently tool designed reactive agent understanding owl ontologies 
envision proactive version tool automatically notify users agents interesting information ontologies available 
section describe general interface supporting proactive behavior type agents 
accessing retrieval inference services main examples semantic web information retrieval applications involving agents 
information retrieval scenario agent consult document management system provided agent host environment 
agent ask documents match certain query similar way discussed 
scenario realized racer documents annotated meta data formalized rdf 
information documents represented boxes 
rdf annotations documents read racer corresponding assertions added box 
data types values play description property eat mouse 
important role describing documents year isbn number 
agents retrieve documents posing retrieval queries boxes specific boxes way exemplified 
publish subscribe interface consider instance retrieval query box clear solution set extended information added time responsible agent agent host environment 
waste resources frequently poll host environment query repeated migration operations 
racer supports registration queries server box publish subscribe interface 
registration agent specifies ip address port number 
corresponding racer server passes message agent solution set previously registered instance retrieval query extended 
message specifies new individuals instances query concept call registration query subscription channel racer informs applications new query results 
details see racer manual 
considering single query isolation prac tical system able consider query sets database systems applications 
publish subscribe interface multiple queries optimized racer 
instance retrieval queries answered faster way set candidates reduced 
similar way databases idea exploit results computed previous instance retrieval queries considering query subsumption decidable case query language racer supports 
requires computing index structures box process known box classification query subsumption enabled demand 
hand applications boxes generated fly queries referring single box 
hand applications pose queries static boxes boxes part agent host environment 
racer server supports application scenarios 
design decision racer computes answers queries resources possible 
racer server instructed compute index structures advance appropriate support multiple queries 
additional features racer system optimizations various optimization techniques ontologybased query answering respect boxes boxes concrete values developed implemented investigated racer system 
design goals racer automatically select state art optimization techniques applicable current input 
persistency similar way database systems query answering boxes boxes complex data structures computed internally racer 
internal structures boxes boxes processed query answering saved disk quick access reuse racer server restarted 
multi user support thread safeness locking load balancing distributed systems context multiple agents connecting server time 
refer boxes boxes requests synchronized 
similar problems databases thread safeness locking load balancing dealt 
instance multiple racer servers started queries automatically directed free racer servers 
problems tackled racer proxy supplied part racer system distribution 
briefly described owl reasoning agent racer services demonstrated racer cooperate ontology exploration analysis tool 
description logic systems freely available research purposes provide industry oriented software integration ensure stable access multi user environments expected context semantic web xml representation languages rdf owl 
gratefully acknowledge ying lu developing ontology exploration analysis tool 
lassila swick resource description framework rdf model syntax specification 
recommendation february 
www org tr rec rdf syntax 
brickley guha rdf vocabulary description language rdf schema www org tr wd rdf schema 
van harmelen hendler horrocks mcguinness patel schneider stein owl web ontology language 
baader calvanese mcguinness nardi patel schneider description logic handbook cambridge university press 
baader horrocks sattler description logics ontology languages semantic web festschrift honor rg siekmann hutter stephan eds 
lnai 
springer verlag 
haarslev ller racer system description international joint conference automated reasoning june siena italy 
bechhofer horrocks goble oiled reason able ontology editor semantic web proceedings ki joint german austrian conference artificial intelligence september vienna 
lnai vol 
springer verlag 
bechhofer ller dig description interface proc 
international workshop description logics dl 
ller haarslev graphical interfaces racer querying daml oil rdf documents proc 
international workshop description logics dl 
haarslev ller optimization instance retrieval proc 
international workshop description logics dl 
haarslev ller racer user guide manual 
adobe systems embedding xmp metadata application files 
