appear proceedings intl 
conf 
robotics automation icra new orleans louisiana apr online simultaneous localization mapping dynamic environments denis wolf gaurav sukhatme robotic embedded systems laboratory center robotics embedded systems department computer science university southern california los angeles california usa denis gaurav robotics usc edu propose line algorithm simultaneous localization mapping dynamic environments 
algorithm capable differentiating static dynamic parts environment representing appropriately map 
approach maintaining occupancy grids 
grid models static parts environment models dynamic parts environment 
union provides complete description environment time 
maintain third map containing information static landmarks detected environment 
landmarks provide robot localization 
results simulation physical robots show efficiency approach show differentiation dynamic static entities environment slam mutually beneficial 
simultaneous localization mapping slam fundamental problem mobile robotics studied extensively robotics literature 
part research concentrated slam static environments 
explicitly consider slam problem dynamic environment 
algorithm differentiates dynamic static parts environment considerably contribute efficiency localization mapping 
successful techniques perform slam alignment sensor readings detection landmarks 
techniques fail presence dynamic entities 
explicit identification dynamic entities improve slam efficiency 
approach divided parts mapping dynamic environments maintaining separate representations dynamic static parts environment robot localization 
tasks interleaved allowing robot simultaneous localization mapping 
mapping algorithm extends occupancy grid technique introduced dynamic environments 
resulting algorithm capable detecting dynamic objects environment representing map 
non stationary objects detected move robot field view 
order maintain occupancy grids maps 
map represent occupancy probabilities correspond static parts environment map represent occupancy probabilities moving parts environment 
complete description environment obtained union information maps 
localization algorithm known slam approach 
kalman filter incrementally estimate correct position robot landmarks corners 
experimental tests performed pioneer robots california science center los angeles 
results show algorithm able successfully differentiate dynamic static parts environment simultaneously localize robot 
ii 
related mapping static environments received considerable attention see survey cases algorithms directly applied dynamic environments 
usually presence moving objects lead approaches mistakes compromising quality maps 
considerable problem realistic applications robots non static environments 
mapping dynamic environments addressed years open questions :10.1.1.12.7306:10.1.1.20.2194
include differentiate static dynamic parts environment represent information map 
discussing details related approaches problem interesting clarify notion moving objects dynamic environment 
different types moving objects considered objects permanently motion objects stationary part time times time move occasionally 
approach deals categories moving objects 
biswas line bayesian approach em algorithm detect changes time environment 
basic idea approach rests map differencing technique maps environment created different points time 
comparing maps algorithm able identify parts environment changed time 
approach uses em algorithm differentiate line dynamic static parts environment 
expectation step estimates measurements correspond static parts environment 
maximization step position robot map calculated 
algorithm iterates improvement achieved 
wang framework solving simultaneous mapping localization detection tracking moving objects 
idea identify keep tracking moving objects order improve quality map 
approach identify moving objects move robot field view 
prior line mapping algorithm capable differentiating static dynamic parts environment moving objects change position field view robot 
algorithm uniquely classify moving object keep track location map 
hand approach assumed ideal localization fairly narrow assumption 
iii 
mapping approach approach distinct occupancy grid maps 
static map contains information static parts environment walls obstacles observed move 
dynamic map contains information objects observed move 
static map occupancy probability cell represents static entity cell 
dynamic entities represented map cell occupied moving object occupancy probability indicate free space occupied static entity 
manner static parts environment represented dynamic map cell occupancy probability indicating free space means simply moving entity currently occupying cell 
exclude possibility cell occupied static part environment 
maps approach able detect moving objects objects move view robot mapped area 
probabilistic occupancy grid cell usually estimated position robot sensor measurements 
denote occupancy probabilities grid cell coordinates static dynamic maps respectively 
set sensor readings represented position robot represented discrete time index superscript variables example means sensor readings time problem estimate position robot calculate region map grid cells updated 
calculate value update occupancy probability grid cells 
simplicity information regarding position robot coordinate grid cells included equations 
step order correctly update maps differentiate static dynamic entities environment 
performed add previous information static parts environment equation 
information allows separate sensor readings provided static dynamic obstacles correctly update maps 
quantity estimated occupancy information maps mutually exclusive entity part static dynamic maps time possible rewrite equation set equations 
interested estimating quantities updating static dynamic maps 
static map update update equation static map equation slightly different regular occupancy grid technique assumes environment change time 
previous knowledge environment compare current set observations order keep static parts environment map shown quantity equation rewritten follows st ot st st ot st st ot st st ot st equation gives recursive formula updating static map term prior occupancy 
set unbiased uncertainty cancelled 
occupancy static map calculated previous information map inverse sensor model 
notice information previous occupancy part inverse sensor model 
information allows determine previously free space occupied means dynamic entity moved place 
possible detect entity previously considered static moved 
table shows possible inputs inverse sensor model resulting values 
column represents possible occupancy states cells previous static map free free low unknown free low occupied free low free occupied low unknown occupied high occupied occupied high table inverse observation model static map possible states ree unknown occupied 
considered ree occupancy probability grid cell pre determined low threshold experiments 
small occupancy probability means high confidence cell occupied static entity environment 
occupancy probability value high threshold experiments cell considered occupied 
occupancy probability middle low high thresholds considered unknown 
second column represents information provided sensors 
case grid cell ree occupied sensor readings current robot position 
values resulting inverse observation model represented simplicity high value low value 
high values values increase occupancy probability cell low values values decrease occupancy probability cell 
table shows possible combinations 
rows ree 
trivial cases obstacles detected independent information previous occupancy inverse sensor model result low value decrease occupancy probability 
fourth row ree occupied case strong evidence space previously free static entities occupied 
case observation considered consistent presence dynamic object static occupancy probability decrease 
fifth row unknown occupied uncertainty regarding previous occupancy region map obstacles detected initially considered static detected moved 
sensor model result high value increase occupancy probability static entities region map 
situation occurs robot initialized grid cells reflect uncertainty occupation 
row table trivial shows case space previously occupied static obstacle sensors confirm belief 
case sensor model result high value raise occupancy probability static obstacle region map 
dynamic map update dynamic map contains information moving parts environment 
denote occupancy probability determined region map static map observation update update fig 
update static dynamic maps 
occupied moving object time sensor readings information previous occupancy static map possible identify moving parts environment represent dynamic map similar equation equation rewritten manner dt equation similar equation sense new estimation occupancy previous occupancy map sensor model 
order update dynamic map equation takes account information previous occupancy static map sensor model 
important state interested keeping information occupancy dynamic objects time 
objective dynamic map maintain information dynamic objects time 
example particular grid cell occupied object past currently free keep history previous occupancy information map just needs set represent current occupancy cell 
course order changes environment reflected map changes sensed robot 
changes occur robot field view reflected immediately map robot needs revisit regions environment changes occurred order detect 
localization detection fig 
maps errors 
free free low unknown free low occupied free low free occupied high unknown occupied low occupied occupied low table ii inverse observation model dynamic map table ii shows values inverse observation model update dynamic map 
second columns identical table static map 
dynamic map behavior inverse observation model slightly different 
rows observation indicates free space occupancy probability trivially updated low value independent previous occupancy static map 
fourth row previous occupancy static map states space free ree sensor readings show obstacle cell occupied 
case characterizes presence moving object consequently dynamic map updated high occupancy probability 
fifth row case unknown occupied 
information previous occupancy area know kind obstacle detected sensors default considered static movement detected 
keep low occupancy update dynamic map 
sixth row occupied occupied trivial inverse sensor model results low value 
shows example map update 
black spaces grid represent occupied regions white spaces represent free regions gray spaces represent unknown regions 
possibilities equivalent column tables ii 
similar column tables ii possibilities observations black spaces representing occupied observation white spaces signify free observation 
equivalent column table shows results inverse sensor models applied update cells static map 
represents inverse sensor model occupancy type landmark free dynamic landmark unknown dynamic landmark occupied static landmark table iii static dynamic landmark classification 
applied update dynamic map column table ii 
example interesting cases map update 
case cell occupied time step sensor readings indicate free space place time step 
means moving object probably stopped mapped static part environment 
object moved static map correctly updated 
second case cell free time step sensor readings indicate region occupied time step 
means moving object moved space 
update applied cell static map represent free space moving object represented static map represented dynamic map seen 
iv 
localization order build consistent occupancy grid maps localization required 
commercial robots odometric information accurate reasonable localization 
time odometer tends accumulate error bounds 
identification moving objects previous maps region accuracy errors determine exact position robot lead mistakes considering static parts environment moving objects 
localization method approach landmarks features environment detected sensors robot 
robot priori information position landmarks possible estimate position detects landmarks 
previous information position landmarks position robot position landmarks estimated simultaneously 
approach assumes robot priori information environment algorithm simultaneously estimate position landmarks robot 
landmarks experiments corners commonly indoor environments 
corners detected measurements provided laser range finder 
corners basically shape uniquely identifiable 
data association problem solved order correctly assign landmarks detected sensors landmarks map 
nearest neighbor filter address data association problem 
addition corner detection algorithm modified differentiate convex stage simulator map landmarks stage simulator map landmarks stage simulator map landmarks concave corners 
information help data association 
occupancy grid maps robot keeps third map contains information position detected landmarks 
dealing dynamic environments possibility moving objects detected landmarks 
moving objects change position time may localization 
lead errors localization eventually mapping 
clearly necessary differentiate static landmarks suitable localization 
strategy differentiate static landmarks dynamic landmarks moving objects detected landmarks information provided static map ox denote observation landmark fig 
simulation moving objects 
coordinates 
shown table iii landmark considered static occupation probability region static map classified occupied 
landmark empty area considered dynamic object moved position localize robot 
occupation probability unknown landmark considered dynamic considered localization 
experimental results order validate ideas extensive simulated experimental tests performed 
experimental tests done pioneer robots equipped sick laser range finders athlon complete map static map dynamic map complete map static map dynamic map complete map static map dynamic map xp machine 
player perform low level control robots player stage simulated experiments 
simulation experiments robot required localize map environment robots wandering moving objects 
moving objects objects added environment 
objects moved manually field view robot 
considerable error added odometric information accurate simulator order player server protocol connects robots sensors control programs network 
stage simulates population player devices allowing line development control algorithms 
player stage developed jointly usc robotics research labs hrl labs freely available gnu public license sourceforge net 
fig 
maps time 
obtain realistic results 
shows occupancy grid map combined landmark map simulator different points time 
experiment black robot perform slam robots randomly moving environment rectangular box moved view robot 
important notice robots box corners identified possible landmarks 
static parts map represented black dynamic entities gray color figures 
small black circles figures represent static landmarks corners walls 
corners generated moving object represented landmark map provide localization 
lines walls landmark maps laser scans circles determined landmarks identify landmarks detected point time 
results obtained show robot able differentiate static dynamic objects show appropriately map 
order show detection dynamic entities slam mutually beneficial performed experiment localization detecting dynamic entities 
clear results worse 
shows noise added odometric information simulator 
order test robustness algorithms real situations set experiments performed hallways computer science department usc california science center los angeles 
experiments hallways robot built map environment 
objects moved field view robot 
robot revisited spaces changes occurred able correctly identify parts environment changed position 
experiments california science center large open space mapped people actively walked robot 
robot correctly identify landmarks corners successfully create maps environment differentiating static dynamic entities 
shows static dynamic maps union 
rows represent distinct points time 
figures show occupancy grid static map 
figures show occupancy grid dynamic map 
small black regions dynamic maps represent position moving objects people point time 
show complete map environment static dynamic entities represented 
results show efficiency approach real world situations 
robot able robustly create map environment static dynamics entities correctly identified appropriately represented 
vi 
proposed approach slam dynamic environments uses features static 
demonstrated differentiating static dynamic parts environment doing slam simultaneously mutually beneficial 
experimental simulated tests show approach able successfully create maps dynamic environments correctly differentiating static dynamic parts environment represent occupancy grid map 
localization corner detection algorithm able differentiate landmarks provided static dynamic entities static landmarks localization 
algorithm robust detect dynamic entities move robot field view move field view robot 
investigating different localization algorithms implemented order deal non structured environments 
algorithms detect moving entities may incorporated approach order improve efficiency dynamic objects detection 
identification moving objects comparison sensor measurements information contained map environment small localization rounding errors lead mistakes differentiating static dynamic parts environment 
mistakes avoided comparing occupancy determined cell take account occupancy neighborhood cell 
plan address case dynamic objects move slowly creates problems neighborhood comparison experiments 
vii 
authors jung julia vaughan valuable support experiments california science center 
supported part darpa mars program dabt onr capes brazil 
elfes sonar real world mapping navigation ieee transactions robotics automation 
newman durrant whyte clark solution simultaneous localization map building slam problem ieee transactions robotic automation 
thrun robotic mapping survey lakemeyer editors exploring artificial intelligence new millenium 
morgan kaufmann 
wang 
thorpe thrun online simultaneous localization mapping detection tracking moving objects theory results ground vehicle crowded urban areas proceedings international conference robotics automation icra 
hnel triebel burgard thrun map building mobile robots dynamic environments proceedings international conference robotics automation icra 
biswas thrun object mapping non stationary environments mobile robots proceedings international conference intelligent robots systems iros 
wolf sukhatme mapping dynamic environments proceedings international conference advanced robotics 
tomasi kanade detection tracking point features carnegie mellon university technical report cmu cs april 
vaughan stoy howard sukhatme mataric valuable player robot device server distributed control proceedings ieee rsj international conference intelligent robots systems 
