modeling performance analysis bittorrent peer peer networks develop simple models study performance bittorrent second generation peerto peer application 
simple fluid model study scalability performance efficiency file sharing mechanism 
consider built incentive mechanism bit torrent study effect network performance 
provide numerical results simulations real traces obtained internet 
peer peer applications immensely popular internet 
traffic measurements shows traffic starting dominate bandwidth certain segments internet 
applications file sharing popular application 
compared traditional client sever file sharing ftp www file sharing big advantage scalability 
performance traditional file sharing applications deteriorates rapidly number clients increases designed file sharing system peers generally means better performance 
file sharing programs edonkey overnet bittorrent name 
develop simple models understand study behavior bit torrent proving popular applications today :10.1.1.14.1911
bittorrent network general file sharing network issues addressed order understand behavior system 
peer evolution file sharing number peers system important factor determining network performance 
useful study number qiu srikant ifp uiuc edu peers evolves function request arrival rate peer departure rate uploading downloading bandwidth peer scalability realize advantages file sharing important network performance deteriorate preferably improve size network increases 
network performance measured average file downloading time size network characterized number peers arrival rate peers file sharing efficiency common peers network different uploading downloading bandwidths 
bittorrent systems file may broken smaller pieces pieces may distributed random peers network 
efficiently download file important design file sharing protocol peer matched pieces file needs ensure downloading bandwidth peer fully utilized 
incentives prevent free riding free riding major cause concern networks 
peers try download contributing network uploading 
networks try build incentives deter peers free riding 
incentive mechanism introduced network peer may try maximize net benefit constraints incentive mechanism 
important study effect behavior network performance 
relationship prior basic idea network peers participate application level overlay network operate servers clients 
service burden distributed participating peers system expected scale network large 
file sharing overlays deployed distributed directory service web cache storage grid computation early systems mainly focused system design traffic measurement research emphasized performance analysis 
closed queueing system model general file sharing system basic insights stationary performance provided 
stochastic fluid model study performance web cache rel cache clusters 
part motivated models branching process study service capacity bittorrent file sharing transient regime simple markovian model study steady state properties 
differs respects studying markov chain numerically develop simple deterministic model allows obtain simple expressions average file transfer time providing insight performance network 
incorporate realistic scenarios fluid model abandonment file transfers peers download bandwidth constraints 
develop simple stochastic fluid model characterizes variability number peer equilibrium values predicted deterministic fluid model 
develop simple model study efficiency downloading peers argue file sharing protocol efficient 
consider mechanisms built bittorrent avoid free riding study impact mechanisms users behaviors network performance 
brief description bittorrent bittorrent application goal facilitate fast downloads popular files 
provide brief description bittorrent operates single file downloaded users 
typically number simultaneous downloaders popular files order hundreds total number downloaders lifetime file order tens hundreds thousands 
basic idea bittorrent divide single large file typically mbytes long pieces size kb 
set peers attempting download file connecting peers simultaneously download different pieces file different peers 
facilitate process bittorrent uses centralized software called tracker 
bittorrent network peer wants download file connects tracker file 
tracker returns random list peers file 
downloader establishes connection peers finds pieces reside peers 
downloader requests pieces peers connected 
peer allowed upload fixed number default time 
uploading called unchoking bit torrent 
peers unchoke determined current downloading rate peers peer uploads peers provide best downloading rate may received requests downloaders 
mechanism intended deter 
peer uploading peers time possible peer say peer may uploading peer say peer provide higher downloading rate peers peer currently uploading 
allow peer explore downloading rates peers bittorrent uses process called optimistic unchoking 
optimistic unchoking peer randomly selects fifth peer received downloading request uploads peer 
including optimist unchoking peer may uploading peers time 
optimistic unchoking attempted seconds allow optimistic unchoking keeping maximum number uploads equal upload peer downloading rate dropped 
bittorrent distinguishes types peers downloaders seeds 
downloaders peers part file seeds peers pieces file stay system allow peers download 
seeds perform uploading downloaders download pieces upload pieces 
ideally incentive mechanism encourage seeds stay system 
bittorrent currently feature 
simply analyze performance bittorrent practice bittorrent network complicated system 
may hundreds peers system 
peer may different parts file 
peer may different uploading downloading bandwidth 
peer partial information network decisions local information 
addition bittorrent protocol called rarest policy ensure uniform distribution pieces peers protocols call endgame mode prevent users pieces waiting long finish download 
modelling exercise tradeoff simplicity model ability capture facets protocol 
simple fluid model study scalability stability system 
assume peer global information study incentive mechanism bittorrent 
briefly study effect optimistic unchoking free riding 
simple fluid model model file sharing influenced model 
uses model develop markov chain studied numerically key modelling idea develop simple deterministic fluid model amenable analysis provides insights system performance 
model quantities capture bittorrent peer peer network serves file loss generality assume file size number downloaders known leechers system time number seeds system time arrival rate new requests :10.1.1.14.1911
assume peers arrive poisson process 
uploading bandwidth peer 
assume peers uploading bandwidth 
downloading bandwidth peer 
assume peers downloading bandwidth 
rate downloaders abort download 
rate seeds leave system 
indicates effectiveness file sharing describe shortly 
takes values 
bittorrent network downloader upload data peers may parts file 
parameter indicate effectiveness file sharing 
constraint downloading bandwidth total uploading rate system expressed 
downloaders upload data download seeds 
downloading bandwidth constraint considered total uploading rate min cx 
obtain markovian description system assume probability downloader seed small interval min cx 
assumptions easily relaxed allow general distributions random variables involved phase type distributions 
comment parameters 
downloader may stay system till completely downloads file 
occasionally downloader may leave network downloading complete feels download long 
assume downloader independently aborts download certain amount time exponentially distributed mean 
equivalently rate downloaders abort download leave system 
fluid model rate departures downloaders min cx 
departures occur due fact file download completed seeds instantaneously remaining downloaders permanently leave system 
parameter rate seeds depart network 
assume seed stays system random time exponentially distributed mean 
clearly effect system performance lower lower download times means seeds system 
parameter influenced providing incentives users stay system downloaded file seeds 
bittorrent currently incentives simply consider fixed constant 
ready describe evolution model 
deterministic fluid model evolution number peers downloaders seeds dx dt dy dt min cx min cx obvious constraint non negative 
key contribution describe efficiency data transfer downloaders parameter 
fluid model provides simple description system described markov chain 
addition incorporated realistic scenarios departures downloaders due impatience downloading process described downloading bandwidth constraint subsection simple stochastic fluid model characterizes variability fluid model 
study steady state performance system fluid model 
steady state performance study system steady state obtain dx dt dy dt min min equilibrium values respectively 
assume 
suppose downloading speed constraint 
equation simple linear equation 
solving equation 
assumption equivalent 
assume uploading bandwidth constraint get 
define max combined yield 

calculate average downloading time peer steady state little law follows average downloading time average rate downloads completed average percentage downloaders seeds 
easy see 
recall max 
equation provides insights behavior bittorrent average downloading time related request arrival rate 
bittorrent system scales 
increases decreases 
peers share file efficiently 
increases increases larger means fewer seeds system 
initially increases decreases 
large increasing decrease downloading bandwidth longer bottleneck 
similar observation regarding uploading bandwidth 
true downloading bandwidth peer higher uploading bandwidth 
common examples asymmetry dsl cable modem connections 
performance analysis purposes may tempting set 
expression shows average download time constrained uploading bandwidth peers 
fact seed leaving rate smaller downloading bandwidth determines network performance may larger 
briefly comment case means downloaders upload data download seeds 
previous analysis case holds hand see dy 
dt tells decreases exponentially 
number seeds exponentially decrease zero system dies 
recall system reaches steady state matter important downloaders upload data 
file sharing efficient small play important role keeping system alive 
see important network performance 
subsection derive expression argue close bittorrent 
effectiveness file sharing section simple model calculate value indicates effectiveness file sharing 
downloader assume connected min downloaders number downloaders system maximum number downloaders peer connect 
assume downloader information pieces connected peers 
peer pieces interest peer connected peer upload data 
downloader piece connected peers need assume piece distributions different peers independent identical 
downloader needs piece downloader downloader connected downloader assume number pieces uniformly distributed number pieces served file 
ni denote random variable describing number pieces downloader assume ni pieces chosen randomly set pieces file 
reasonable assumption bittorrent takes rarest piece selection policy downloading 
sumptions downloader needs piece downloader pieces downloader nj pieces ni nj nj ni nj nj ni ni nj ni nj nj nj nj nj nj nj nj log log 
interpret expression realistic file sizes 
bittorrent piece typically kb 
file hundreds megabytes size order hundreds 
close 
bittorrent larger maximum number connections typically 
tells bittorrent efficient sharing files 
increases increases slowly network performance increases slowly 
note depends number peers system may related arrival rate 
increases network performance increases slowly 
observation previous subsection network performance essentially independent holds 
matches observations real bittorrent networks 
note downloader connected downloaders 

greater zero 
eigenvalues strictly negative real parts system stable 
similarly downloading bandwidth constraint small neighborhood dx dt dy dt cx cx 
eigenvalues satisfy 

local stability deriving steady state quantities implicitly assumed system stable reach equilibrium 
section study stability fluid model equilibrium 
uploading bandwidth constraint small neighborhood dx dt dy dt 

eigenvalues determine stability equilibrium 
eigenvalue 
eigenvalues solutions greater zero see eigenvalues strictly negative real parts system stable 
case 
little tricky dynamics determined matrix matrix depending direction system perturbed 
linear analysis suffice determine local stability 
avoid lengthy arguments consider special case 
cases global stability fluid model may hard analyze fact dynamics system changes depending cx 
systems called switched linear systems refer reader survey stability issues associated models 
characterizing variability request arrival rate large means large number downloaders seeds fluid model approximation real system 
important understand number seeds downloaders vary numbers predicted deterministic model 
subsection simple characterization variance gaussian approximation 
assumptions discussed section arrival rate large number downloaders seeds time described respectively solution stochastic fluid differential equation solution known ornstein uhlenbeck process dt bdw 
components independent standard wiener processes brownian motions entries determined downloading uploading bandwidth bottleneck 
specifically cases 
consider com case occur practice 
easy compute steady state covariance limt 
called lyapunov equation bb 
steady state variance element steady state variance element 
result essentially states steady state number seeds downloaders distributed gaussian random variables variances determined 
formal proof required establish scope 
simply state involves showing original stochastic process converges deterministic stochastic differential equation limits arrival rate goes 
established theorems ones 
incentive mechanism section discuss algorithm bittorrent intended discourage free riding 
describe algorithm study optimal selfish behavior users algorithm 
peer selection algorithm built incentive mechanism bittorrent encourage users upload 
basic idea peer uploads nu peers highest downloading rates default value nu 
peer partial information network doesn upload rate information peers optimistic unchoking explore network :10.1.1.14.1911
section objective understand built incentive mechanism affects network performance 
ignore details optimistic unchoking assume peer global information uploading rates 
assume downloading bandwidth constraints peers fully connected demands 
assumptions simplify peer selection algorithm bittorrent follows 
sort peers uploading bandwidth physical uploading bandwidth uploading bandwidth set manually user peer highest uploading bandwidth 
peers uploading bandwidth randomly ordered 
peer selection process proceeds steps peer choosing peers upload step real bittorrent peer selection proceed steps 
describe selection algorithm clear step step selection process change selection peers significantly 
total number peers uploading bandwidth peer step peer selects peers upload rules 

peer selected peer selects peer ni number peers selected peer prior step 
nu nu peer selects nu ni peers set set rules prioritize peer say peer select 
ni ni select 
ni nik select 
peer selects peers randomly selects 
nu nu nu ni peers peers selected 
rules easy understand 
rule states downloading rate peer peer greater equal uploading rate peer upload peer try keep downloading rate high 
show lemma nu 
rule violate requirement number uploads exceed nu 
rule simply gives priority peers higher uploading rates 
rule tries treat peers uploading rate fairly possible rule simply tie break rule 
rule takes care peers sure peers nu uploads 
lemma simple property peer selection algorithm 
lemma peer selection algorithm peer selects uploading peers ni nu ni ni nu 
proof nu nu lemma true 
assume lemma true peer prove true peer induction true lemma true ni nu ni nu 
nu peer nu uploads select peer 
ni lemma true ni 
ni nu ni nu 
matter peer selects peer nu 
show second part lemma ni ni peer selection ni nik nik rule ni lemma true 
di set peers select peer exclude peers randomly select rule reasons 
peer equal chance selected average effect random selection equivalently seen peer getting constant download rate dr secondly number peers large dr small ignored 
aggregate downloading rate peer di 
nu di note peers uploading bandwidth may get different downloading rates 
generally peers uploading bandwidth di di dj 
peer downloading rate depends uploading bandwidth depends peer ordered regards peers uploading bandwidth 
eliminate ambiguity peers uploading bandwidth define downloading rate peers dk resp 
resp 
peer uploading bandwidth 
lemma nu 
lemma suppose peers uploading bandwidth resp 
resp 
peer uploading bandwidth 
nu 
di di dj dk 
di dk 
dk 
proof peer selection rules easy see peers dk dk 
condition obviously true 
prove condition need prove di dj 
peer selects peers ni nu peer selected nu peers uploading bandwidth greater di 
ni nu peer select nu ni peers di 
peer nu selects peers nm obviously nm 
nm peers uploading bandwidth peer selection rule nu select peer 

case nm 
selects peers nu nu 
nu peers uploading bandwidth 
select peer peer selected nu peers uploading bandwidth 
dj nu di 
nu dj dk di dk 
condition definition easy see dk done 
defined peer selection rules 
study rules affect peer choice uploading bandwidth 
peer strategy objective incentive mechanism encourage users contribute 
bittorrent uploading bandwidth chosen user maximum physical uploading bandwidth 
purpose rest section study incentive mechanism affect peer strategy users set bandwidth 
pi physical uploading bandwidth peer set uploading bandwidth chosen peers 
di aggregate downloading rate peer uploading bandwidth peer 
obvious di non decreasing function 
pi peer gets maximum downloading rate 
setting pi necessarily best strategy peer peer di gain cost 
peer wants maximize gain time wants minimize cost 
assume maximizing gain priority minimizing cost 
intuitively may want peer choose min di di pi 
unfortunately minimum set di di pi may exist set 
take account best strategy peer min inf di di pi pi small number 
parameter interpreted small difference rates peer differentiate 
note minimum di di pi exists better add small number 
uploading bandwidth peers close may able detect difference 
adding small positive number help differentiate peer competing peers 
peer selection algorithm game rules study system non cooperative game 
nash equilibrium problem set uploading rates min inf di di pi pi consider small bittorrent network peers 
number uploads nu peers 
show peers different physical uploading bandwidth minimum uploading bandwidth min pi nash equilibrium point system 
simple example see uploading bandwidth peer peers peer get zero downloading rate peers upload peer hand greater uploading bandwidth peer peer get downloading rate pi 
strategy peer example turns setting fifth highest uploading bandwidth 
assume nash equilibrium point sort peers uploading bandwidth highest uploading bandwidth 

equal peers different physical uploading bandwidth peer pi peer increase uploading bandwidth increase download rate 
know peer gets zero downloading rate 
nash equilibrium maximum downloading rate peer get zero 

min pi 
min pi peer increase uploading bandwidth contradicts fact fifth highest uploading bandwidth 
nash equilibrium point system 
may nash equilibrium point general network setting network consists groups peers members group uploading downloading bandwidths exist nash equilibrium point show subsection 
nash equilibrium point consider network finite number groups peers 
group peers physical uploading bandwidth pj 
note fact model current internet users finite number network access methods dialup dsl cable modem 
gj set peers group gj number peers group loss generality assume 
proposition nu number peers group gj nu groups exists nash equilibrium point system pj peer gj 
initial setting system converges nash equilibrium point 
proof prove nash equilibrium point 
prove need prove peer di di 
loss generality assume gj 
gj nu set pj nu peers uploading bandwidth pj 
lemma easy see di di 
prove convergence consider group 
nu th highest uploading bandwidth rounds iterations 
nu th highest uploading bandwidth initial set 
rounds vm round peer increase uploading bandwidth maximize downloading rate 
nu round 
increase continue peers increase uploading bandwidth anymore 
case peer uploading bandwidth 
peers group reach maximum limit change uploading bandwidth anymore 
similar argument prove peers second group reach nash equilibrium point 
continuing similar fashion establish system converges nash equilibrium point 
optimistic unchoking section assume peer knows uploading bandwidths peers 
reality peer rate information peers downloading 
optimistic unchoking explore network obtain information peers 
section briefly study effect optimistic unchoking free riders 
specifically section showed rational users set uploading rate equal maximum possible limit show maximum downloading rate tional user chooses free ride limited nu normal downloading rate get behave rationally 
free riding free riding means peer contribute system attempts obtain service downloading peers 
peers global information free riding problem solved uploading peers zero uploading bandwidth 
reality peers optimistic unchoking explore network gives opportunity free ride 
illustrate consider simple example 
consider network group peers uploading bandwidth 
number peers group assume peer nu uploads optimistic unchoking upload 
new peer zero uploading bandwidth joins network 
peer randomly choose peer currently uploading target optimistic unchoking 
peer average time nu optimistically upload peer total peers total average downloading rate peer large 
nu nu nu example see optimistic unchoking peer contribute system get average downloading rate nu current bittorrent nu free rider gets possible maximum downloading rate 
nu increased reduce amount free rider get 
choosing nu large means multiple tcp connections share bandwidth may lead time outs result poor performance 
choice optimal nu methods alleviate free riding problem subject study 
experimental results performed series experiments validate fluid model described section 
experiments compare simulated bittorrent network fluid model 
experiment introduced seed bittorrent network studied evolution seeds downloaders compared fluid model results 
due copyright reasons obviously introduce popular file network 
show experimental results file total completed downloads match fluid model observed data quite close 
experiment normalized number seeds simple fluid model time min experiment evolution number seeds function time figs compare simple deterministic fluid model derived results discrete event simulation network 
discrete event simulation markov model described section 
chose parameters simulation 
number downloaders set set 
keeping observation regarding efficiency download described section 
initially seed downloader 
keep number seeds entire simulation 
change arrival rate plot number seeds downloaders normalized ar normalized number downloaders simple fluid model time min experiment evolution number downloaders function time rival rate simulations fluid model 
experiment know downloading bandwidth bottleneck 
figures see simple fluid model approximation system large match quite small 
figures indicate number downloaders increases linearly arrival rate 
little law implies average download time constant independent peer arrival rate shows system scales 
words popular files downloaded speed popular files 
experiment figs 
setting experiment set 
change uploading bandwidth bottleneck 
setting similar result 
see simple fluid model accurate large performs smaller 
plot histogram figs 
number downloaders seeds respectively actual simula normalized number seeds simple fluid model time min experiment evolution number seeds normalized number downloaders simple fluid model time min experiment evolution number downloaders tion number downloaders seeds deterministic fluid model 
theory section expect histograms look roughly gaussian fact borne figures sufficiently large 
see variance change changes 
experiment experiment introduced file bittorrent network collected log files bittorrent tracker time period days 
peer joins leaves system completes download reports event histogram experiment histogram variation number seeds fluid model histogram experiment histogram variation number downloaders fluid model tracker 
addition peers regularly report information total amount data uploaded downloaded far number bytes need downloaded tracker keeps information log files 
analyze tracker log files retrieve useful information 
parameters measured counting peer arrival downloader departure seed departure respectively 
tracker log files determine uploading bandwidth downloading bandwidth bottleneck 
assume uploading bandwidth bottleneck estimate dividing measured total uploading rate number peers assume 
size file introduced mb 
average uploading bandwidth estimated kb min time unit calculate arrival rates departure rates normalized uploading bandwidth normalized file size bytes estimated 
downloader leaving rate estimated 
interesting feature observed real bittorrent fact time varying 
attribute fact new file introduced system seeds stay system long ensure sufficient population peers sustain system 
initial seeds depart quickly system simply die download 
tracker logs estimate min 
min 
arrival rate increases roughly linearly 
fluid model simulation time min min change linearly 
set downloading bandwidth fluid model simulation note actual value affect fluid model results certain threshold 
number seeds fluid model real trace time min experiment evolution number seeds simulation results shown figs 
real trace measured tracker log file fluid model calculated measured parameters 
fluid model numerically calculate standard deviation steady state network parameters plot error bar confidence intervals 
number downloaders fluid model real trace time min experiment evolution number downloaders fig 
see fluid model captures evolution number seeds 
fig 
oscillation number downloaders significant 
file popular arrival rate small 
model approximation real network 
despite see oscillation level suggested confidence interval 
simple fluid model bittorrent networks studied steadystate network performance 
specifically obtained expressions average number seeds average number downloaders average downloading time functions peer arrival rate downloader leaving rate seed leaving rate uploading bandwidth explicitly give insight network performance affected different parameters 
characterized variability system applying limit theorems stochastic model arrival rate large 
abstracted built incentive mechanism bittorrent studied effect network performance 
certain conditions proved nash equilibrium exists peer chooses physical uploading bandwidth equal actual uploading bandwidth 
briefly discussed effect optimistic unchoking 
experimental results show simple fluid model capture behavior system arrival rate small 
entropia 
www entropia com 
top applications bytes sd nap traffic 
arnold 
stochastic differential equations theory applications 
john wiley new york ny 
bertsekas gallager 
data networks 
prentice hall englewood cliffs nj 
billingsley 
convergence probability measures 
wiley 
nain 
simple fluid model analysis squirrel 
technical report inria rr 
nain ross 
stochastic fluid models cache clusters 
technical report inria rr 
cohen :10.1.1.14.1911
incentives build robustness bittorrent may 
org bittorrent pdf 
dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
proceedings th acm symposium operating systems principles sosp chateau lake louise banff canada october 
das srikant 
diffusion approximations single node accessed congestion controlled sources 
ieee transactions automatic control october 
de yang 
fairness incentives performance peer peer networks 
annual allerton conference communication control computing monticello il oct 
kurtz 
markov processes characterization convergence 
wiley 
ge figueiredo kurose towsley 
modeling peer peer file sharing systems 
proc 
infocom 
glynn 
markov property gi gaussian limit 
advances applied probability 
iyer rowstron druschel 
squirrel decentralized peer peer web cache 
proceedings acm symposium principles distributed computing podc monterey california 
morse 
basic problems stability design switched systems 
ieee control systems magazine pages 
eugene ng 
chu rao sripanidkulchai hui zhang 
measurement optimization techniques bandwidth demanding peer peer systems 
infocom 
ratnasamy francis handley karp www caida org analysis workload 
shenker 
scalable content addressable network 
proceedings acm sigcomm 
ripeanu 
peer peer architecture case study gnutella network 
ripeanu foster iamnitchi 
mapping gnutella network properties large scale peerto peer systems implications system design 
ieee internet computing journal 
stoica morris karger kaashoek 
chord scalable peer peer lookup protocol internet applications 
proceedings acm sigcomm 
whitt 
heavy traffic limit theorems gi queues 
advances applied probability 
whitt 
stochastic process limits 
springer 
yang de 
service capacity peer peer networks 
infocom 
