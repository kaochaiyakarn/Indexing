autonomic computing agent modelling dynamical systems analysis decentralised control tom de wolf tom holvoet dept computer science katholieke universiteit leuven celestijnenlaan heverlee leuven belgium tom tom holvoet cs kuleuven ac autonomic computing aims deal complexity todays systems letting system handle complexity autonomously 
hard challenging domain current systems complex distributed interconnected rapidly changing systems 
firmly belief main challenge autonomic systems integration existing research communities multi agent systems community allows natural modelling system explicitly considers autonomous behaviour distributed interaction dynamical systems theory allows analysis dynamics models decentralised control community insights gathered analysis create decentralised control mechanisms control dynamics autonomic systems 
describes generic perspective autonomic computing gives overview relevant done community describes contribution community autonomic computing 

paradigm autonomic computing aims design build computing systems capable running adjusting varying circumstances preparing resources handle efficiently workloads put 
autonomic systems anticipate needs allow users concentrate want accomplish figuring manipulate computing systems get 
important fact current systems complex distributed high degree local activity 
examples systems telecommunication networks flexible manufacturing networks urban traffic networks economic systems supply chain simulation context think ecological systems 
autonomic computing efforts directed coping systems complexity dis tribution localisation key idea challenge autonomic computing systems able take initiative decide things 
systems autonomous real complexity hidden user system 
autonomic computing perspective described goal achieve self principles mechanisms 
self management involves deciding manage keeping behaviour system stable 
performing self diagnosis check status having possibility automatic self adaptation changes status important aspects achieve self management 
self adaptation exist different forms self optimisation self healing 
means systems handle complexity 
ultimate challenge find mechanisms control dynamics complex distributed interconnected rapidly changing systems 
today research communities look parts automatic handling complexity 
consider important communities 
multi agent community agent modelling seen natural way model complex systems ability agent autonomous maps self principles 
ability interactions components system explicit handle flexible way supports distributed complexity 
community dynamical systems theory closely related chaos theory complexity theory focuses analysing dynamics system gather insights improved solution problem 
decentralised control community sees handling complexity impossible centralised control schemes tries find right decentralised control mechanisms problem 
propose generic perspective handling autonomic computing 
main idea shown 
research communities mentioned represented building blocks engineer autonomic systems arrows represent close relation need interact complement 
agents possible model system flexible way 
dynamical systems theory allows analyse dynamics model unstable conditions 
decentralised control insights analysis control dynamics system way scalable flexible robust 
firm belief main challenge autonomic computing integration communities 
autonomic computing analysis dynamics dynamical systems theory chaos modelling dynamics autonomous agents control dynamics decentralised control 
building blocks autonomic computing research gives quick overview relevant community importance autonomic computing 
formulate challenges integrating building blocks 

agent modelling able model system want build 
agent models system multiagent paradigm 
model description system entities properties may study characteristics 
model consists set agents encapsulate behaviours individual components system 
agent software engineering concept autonomous entity perceives environment reacts changes environment adapting behaviour current needs interacts agents 
detailed definitions 
simulation typically experiment analyse abm agent modelling natural flexible way model todays complex distributed interconnected interacting industrial systems self principles mapped explicit notion autonomous agents modelling system group interacting agents maps directly distributed communicative nature todays systems 
substantiate usefulness abm elaborating typical characteristics 

interaction vs algorithms interaction shown powerful algorithms computer problem solving prevalent view computing expressible algorithms 
things done interaction network routing line supply chain management agile manufacturing 
radical notion interactive systems powerful problem solving engines algorithms basis new paradigms computing technology built unifying concept interaction 
interaction key part problem domain complex adaptive systems 
systems interaction dominant feature respect individual actions taken subparts system 
example interaction centred manufacturing machine small part production process 
having machine flexible 
interaction machines important 
interaction efficient schedule time system flexible anticipate changes products orders come 
need model incorporates interaction 
abm modelling todays complex adaptive systems possible consider interaction explicitly object oriented engineering interaction limited calling messages procedures objects 
multi agent systems example notion indirect interaction environment agents live 
addition agent autonomous deciding interact allows flexible interaction concept 

agents vs equations massive body research devoted modelling system dynamics differential equations system modelled set equations executing model consists evaluating equations 
comparison equation models ebm agent models abm 
simulation general term applies methods distinguished agent emulation evaluation 
give practical considerations choosing approaches underlying structure model abm internal behaviour agent need known order execute model 
significant advantages complex adaptive systems 
abm naturally modular easily distributed network processors 
second natural distribution abm turn enables firms maintain proprietary information internal operations 
groups firms conduct joint modelling exercises keeping agents computers control 
words abm better suited domains natural unit decomposition individual observable properties variables 
case ebm physical distribution computation multiple processors desirable 
naturalness representation system abm easier construct certain behaviours difficult translate equations 
abm support direct experimentation scenarios having translate equations abm easier translate back practice mapping 
quality appearing real accurate growing evidence behavioural accurate numerical evaluations systems multiple interacting entities 
domains abm give realistic results ebm manageable levels representational detail 
partial differential equations pde computationally complete model abm pde pde model may complex reasonable manipulation comprehension 
ebm simpler formalisms pde may yield realistic results regardless level detail representation 
short abm appropriate domains characterised high degree localisation distribution dominated discrete decisions 
ebm naturally applied systems modelled centrally dynamics dominated physical laws information processing 
examples indicate agent modelling complex adaptive systems agile manufacturing systems electricity distribution 
comparison approaches respect predator prey problem 

tools parunak says widespread realisation advantages agent modelling depend availability tools approach abm community encourage development refinement tools 
number different tools available enable agent modelling simulation systems 
examples swarm developed santa fe institute suited modelling complex systems developing time 
star logo example 
tools allow explore connection micro level behaviour individuals macro level patterns emerge interaction individuals 
course kind support 
tool support engineering complex systems simulation support low level modelling programming language 
lot needs done making tools allow analyse design debug test systems higher level agent concepts basic modelling entities 

analysis dynamics modelling system agent models need approaches analyse model order understand dynamics behaviour system 
analysing dynamics enable predictions global behaviour gather insights effects certain parts single variable global behaviour system 
understanding dynamics system building autonomic computing systems stuck mere trail error technique 
today simple measures averages time characterise behaviour system 
useful characterisations static systems helpful system constantly subjected change 
real world industrial systems dynamic 
example manufacturing systems competitive pressures reducing product life times forcing systems change frequently 
machine failures upgrades force system adapt changes 
situation system needs flexible dynamic 
need advanced analysis techniques 
understanding dynamics complex systems reasoning analytically detailed internal structure system feasible 
analytic solutions unavailable systems modest level complexity 
alternative approach study systems executing attempting generalise behaviour 
lot tools techniques available dynamical systems community 
multi agent systems model systems consider dynamical systems effective design monitoring control requires application techniques developed dynamical systems theory 
analyse dynamics todays complex systems community dynamical systems theory offers conceptual framework dynamical systems characterised experimental techniques estimate characteristics time series state variables observed system framework explain principles adaptive self organising behaviour 
development dynamical systems theory specific problem domain example manufacturing provide new vocabulary understanding happens system new tech manage control systems 
section give small concepts dynamical systems theory followed overview analysis techniques 

concepts dynamical systems theory important concepts dynamical systems theory system state space trajectory attractor 
state space dynamical system collection time dependent variables capture behaviour system time 
concept trajectory refers system trajectory state space successive values state variables viewed coordinates state space 
dynamical systems trajectory eventually enters subspace emerges 
subspace exerts attractive force draws system called attractor 
disjoint attractors system set initial conditions trajectories enter attractor called attractor basin attraction 
gives short concepts 

apply dynamical analysis dynamical systems theory step know apply dynamical systems theory 
includes parts need identify data need measure need interpret data 
data measure 
gather data system 
challenge select right data abundance information available 
able need idea different kinds measurements tell system 
systematic approach get know exploration possible measures way learn sorts information valuable 
important aspect consider cost associated collecting class measurement 
cost high may ask worth effort 
useful data time dependent data dynamics system considered evolving time 
system state space dynamical systems theory asks time dependent data 
results time series analysed 
example transport module factory measure evolution transit times sensors detect congestion patterns 
patterns may detected inter arrival times single sensor 
example 
analysing dynamics supply chain measure evolution amount orders placed certain factory site chain 
inventory evolution useful 
application specific values exploration may lead discovery general guidelines choose right values 
interpret data 
gathering data analyse 
dynamical systems theory offers number analysis techniques trajectories state space find attractors 
different types dynamics lead different attractor geometries including point attractors systems converge static state limit cycles systems periodic behaviour fractal structures strange attractors characteristic formally chaotic systems 
comparison kind attractors classes systems 
divergent trajectory attractor corresponds system control 
point attractor related goal oriented system 
limit cycle strange attractor involve going concerns system maintain certain goal behaviour 
dynamics quantified terms behaviour frequency domain 
example fourier hartley transformations 
fourier analysis concept real world signals approximated sum sinusoids different frequency 
frequency sinusoid series integer multiple frequency signal approximated 
plotting magnitude amplitude sinusoid axis frequency sinusoid axis generates frequency spectrum frequency domain 
spectrum set vertical lines bars indicate system behaves frequency domain yield useful insights 
system attractors sufficiently low dimension reconstructed time delay plots provided available data sufficiently rich accurate 
plots value time series plotted axis previous value axis 
time delay plots find distinguishing patterns behaviour done manufacturing supply chains 
example plot manufacturing shown 
top time series transit times shown bottom corresponding time delay plot shown 
refer back describe interpretations 
computation lyapunov exponents attractors done time series 
exponents quantify strength attraction exerted attractor nearby points state space degree neighbouring points attractor diverge degree chaotic behaviour 
lyapunov exponent stability measure system 
exponent example find chaotic behaviour robotic system different control algorithms 
time delay plot example transit times manufacturing robot compared measure chaotic behaviour 
lot techniques described power spectra bds statistic identify presence deterministic dependencies successive elements time series poincar plots measures fractal dimension 
need learn techniques appropriate 
applying methods characterise system terms formal dynamics 
knowing system attractor certain shape dimensionality correlate particular dynamical patterns domain specific behaviour 
allow find problems opportunities control behaviour system described section decentralised control 
mapping classes systems described step direction making domain specific detailed interpretations needs done 
example interpretation supply chains time sites supply chain follow large order large small order small 
words orders correlated time 
interpreting stretched pattern line time delay plots order time series 
second example 
analysis transit time series time delay plots squares correspond line imperfect squares correspond interacting distinct diagonal band transit times vary small steps corresponds dynamic congestion 
section describe examples interpretation lead effective decentralised control mechanisms 

decentralised control final building block autonomic systems controlling 
means want influence behaviour system way behaves requirements 
large majority control applications implemented today fall category centralised control 
approach requires global knowledge system create controller self limiting control design large systems mathematically practically intractable 
communication difficulty providing relevant system measurements global controller timely manner 
centralised schemes require high levels connectivity impose substantial computational burden typically sensitive failures modelling errors decentralised schemes scalable property autonomic computing systems required 
successful structure system exploited systems today consist lot units directly interact nearest neighbours 
decentralised control systems consist controllers designed operated limited knowledge complete system 
central decision maker information flow stays local 
decentralised control self organising emergent property system 
maps definition self organisation process patterns global level system emerge solely numerous interactions lower level components system 
rules specifying interactions system components executed local information global pattern 
decentralised control allows control applied complex systems global optimal performance guaranteed firmly global controllers 
lot done control 
just tries extend existing central control mechanisms suboptimal solution 
states decentralised control systems refers just applying agents paradigm inherently decentralised robust flexible behaviours nature referred swarm intelligence 
consider decentralised control explicit 
section give overview literature 
lot possible mechanisms interesting track engineering autonomic com puting appears track control result analysis done dynamical systems theory 
approach exploits information insights gathered behaviour analysis control system 
approaches benefit analysing system behaviour techniques dynamical systems theory 

hierarchical control mechanisms performance degradation completely decentralised solution unacceptable completely centralised solution prohibitively complex expensive compromise 
hierarchical control mechanisms compromise 
certain degree keep degree higher level control layer controls lower level units 
hierarchical set control agents system 
bottom layers actuate sense higher layers average inputs distribute control signals lower layers 
gives overview equation analysis multi level control mechanisms 
computational savings respect central scheme completely problem dependent need iterate coordinate needed problems 
knowledge model decentralised coordinator local controller needs know global problem 
distributes decomposes line optimisation problem move piece certain direction plate small air jets 
small groups jets handle subproblem optimise contribution movement 
subproblem handled local controller constraint solver feedback loops guide solvers 
hierarchical control organisations organise distributed control 
organisation determines information system available agent control computation 
way organise call multi hierarchy 
multiple hierarchical organisations exist criteria agents related 
example hierarchy physical distance problem specific organisational distance 
advantage control enforced multiple hierarchies effect 

control result dynamical systems theory track exploits insights analysing system behaviour dynamical systems theory 
motivation understanding desire control system effectively efficiently 
give engineering principles guide implementations optimal control achieve wanted behaviour 
dynamical systems exhibit different modes behaviour depending values certain critical parameters 
expected analysis shows parameters influence points critical specific system exhibit behaviour 
formulates approach questions 
desirable behaviour 
highly stable behaviour research adaptive systems suggests systems exhibit learning high adaptivity may operate border ordered behaviour disordered behaviour 

parameters allow adjustment behaviour 
control parameters identified mapping system behaviour established 

control mechanisms 
learn mapping entities system accessible management desired control parameters 
mechanisms effective managing control parameters 
applied supply chain management 
notion controllability introduced 
describes extent users steer system trajectory state space deliberately 
requires identify users system 
case supply chain shown consumer exert control line orders issues 
magnitude orders determine point attractor limit cycle system drawn 
manufacturing sites example exert control done choice parameter settings algorithms 
control monitoring agent going concern maintaining certain behaviour may able contribute system level maintenance goals manipulating simple critical parameters environment 
need detailed symbolic modelling actual structure environment 
cases controlling going concern identified 
cases concerned keeping trajectory system state space desired attractor desired wanted behaviour 
case environmental forces threaten move region leads attractor 
case wishes shift system deliberately different attractor different behaviour 
third case complex basic idea system chaotic behaviour strange attractor may desirable increased volume state space gives system access 
take advantage intrinsic flexibility able steer trajectory system locked part strange attractor called limit cycle 
shown value appropriate system parameter determined system balanced achieve 
mechanism limit detection 
certain aspects system may limit behaviour achieving desired form 
identifying limiting parts analysis dynamics parts provide influence point control mechanisms correct limits 
example approach oscillations inventory levels storage sites supply chain diagnostic storage capacity mismatches 
oscillations difficult detect dynamical analysis 
increasing capacity storage site supply chain efficient 
stabilisation system behaviour control enforced 
earlier mentioned lyapunov exponent measure stability control stability robotic behaviour 
examples control stability 
diversity units compose system leads stability 
diversity emerged homogeneous group rewarding agents actual performance leads elimination chaos 
problem controlling behaviour eliminating called disturbances 
unwanted events influence disturb behaviour system 
example civil structure building disturbed earthquake 
analysis frequency domain acceleration measures control stability building earthquake 
shows frequency domain useful tool detect disturbances eliminate example frequencies high magnitude 
key thing local actions influence global behaviour dramatic way results dynamical systems analysis needed know local actions useful 
undesirable emergent behaviour damped micro controllers acting agents monitor environment take local action 

importance feedback decentralised control decentralised control self organising emergent property system 
self organising phenomena basic modes interaction important positive negative feedback 
negative feedback loops occur small change applied system triggers opposing response counteracts change 
example increase temperature air conditioning system triggers decrease temperature 
positive feedback loops promote changes system 
effect positive feedback takes initial change system reinforces change direction initial deviation self enhancement amplification 
describe result positive feedback amplification small changes local actions emergent behaviour occur 
course negative feedback important avoid amplification destructive explosion initial change 
self enhancing positive feedback coupled antagonistic opposing negative feedback provides powerful mechanism creating structure pattern systems involving large numbers components 
section devoted theory decentralised feedback control feedback decentralised scheme considered logical consequence extensive feedback centralised control scheme 
applied smart matter alike modules grow certain structure 
module seed mode attract modules order grow structure modules turn seeds self enhancing positive feedback 
achieve certain structure module specific mode changing rules defined 
example rule seed mode emit scent module appeared direction growth set module seed mode go final mode 
local constraint controllers feedback loops order optimise local constraint solvers 
gives online tuning solvers adaptive solver control 

market decentralised control observing free markets evident individual intentions consumers sellers alike efficient means societal resource allocation exists 
complex laws supply demand fundamental building blocks determining equilibrium price goods decentralised economy 
borrowing concept marketplace application control system new field control 
market price communicates global information 
applied decentralised control large scale civil structures wall agents scattered structure 
agents kind wealth control force apply structure locally directly proportional amount power purchased virtual marketplace 
results effective mechanism control stability structure heavy weather storm 
control strategy unstable dynamical systems market mechanisms 
weak control forces counter departures wanted configuration small 
market mechanism leads stability focusing control forces parts system needed 
actuators fail requiring agents detailed model physical system 
results show market control robust completely local control mechanism 
market control shown robust successful coordinating dispersed agents chief drawbacks speed market computation relatively slow limiting application 
generally introduces notion control entropy 
entropy measure disorder randomness closed system 
entropy view selforganisation multi agent systems explained 
basic idea coupling macro level hosts self organisation apparent reduction entropy order micro level random processes greatly increase entropy disorder 
metaphorically micro level serves entropy leak 
shown coordination arise coupling macro level entropy increasing process micro level pheromone evaporation ant paradigm money spending currency flows economies 
form currency energy pheromone convenient mechanism creating entropy increasing process 
suggests engineer currency energy generates field agents align supports market control approach 

blue prints guide approach desired behaviour achieved blue print 
cases seen context getting group agents form certain pattern environment 
distinguish forms blue print control blue print environment explicitly 
agents just arrange respect marks environment 
approach pattern form put environment field agents follow field gradient get wanted positions 
way environment course central controller really looking 
second form blue print known centrally called beacon placed environment 
difference agents go beacon beacon acts coordinator give agent right instructions giving blue print 
central coordinator put environment locally 
example network access nodes put blue print local node sufficient 
third form considered agent builds blue print communication information knows neighbours 
way blue print propagates system 
useful blue print available advance run time example exploration environment 
applied guide swarm flight vehicles order ex terrain efficiently possible 
blue print get representation area cover mutual information gain plotted 
agent goes area high mutual information gain information blue print moment 
propagation neighbours gradually gives agents global knowledge 
idea information propagation give individual agent information needed guide actions 
general information propagation desired behaviour useful mechanism 

decentralised control mechanisms proposed 
list means exhaustive list gives idea done 
constraint control control mechanisms constraint solving applied 
constraint solving components distributed system deliberative goal oriented agents 
hierarchical decomposition problem local constraint solvers 
genetic evolutionary control genetic algorithms get detect wanted behaviour systems 
example genetic approach results achieving emergent computation cellular automata 
artificial physics laws approach agents react artificial forces motivated natural physical laws 
examples shown various regular geometric configurations agents 
global monitoring framework added uses limited global information check desired geometric pattern emerges time expected 
global monitor steers agents self repair 
challenge find mapping desired behaviours force law may infeasible situations 
adapting organisational forms proposes way control scalability system respect needs current situation agent task 
done adapting organisational form run time 
certain organisational form may scalable situation situation idea switch optimal form situation system agent 
distributed method triggering reorganisation example majority agents want form 

conclude proposed building blocks essential conquer autonomic systems form process engineer systems 
agents possible model system focus interaction autonomy important aspects autonomic systems 
dynamical systems theory allows analyse dynamics system unstable conditions 
decentralised control way control dynamics system way scalable flexible robust 
complex autonomic systems demands integration different research disciplines 
lot done separately building block 
lot needs done integrate able offer complete decentralised control solutions industrial applications 
ultimate integration come systems system self diagnostic dynamical systems analysis current behaviour 
system achieves right control mechanisms control behaviour insights analysis 
self managing autonomic behaviour system implemented natural way multi agent paradigm 
gives number challenges conquer give different research communities come intensively 
developing tools agent modelling dynamical system theory easily applied control mechanisms easily inserted model important acceptance industry efficient application approach 
dynamical system theory identify available techniques relate insights gained technique 
gives engineers system tool box select appropriate technique kind insight want get 
tools important 
able map certain wanted effects insights specific control mechanisms automatically selected 
engineering control mechanisms directly insights exploiting dynamical systems theory create new kinds control mechanisms directly result theory possible track 

center connected learning computer modelling northwestern university ccl northwestern edu 
spencer dyke 
experimental verification acceleration feedback control strategies seismic protection 
proceedings japanese society civil engineers rd colloquium vibration control structures volume part pages tokyo japan august 
hogg 
multiagent control self reconfigurable robots 
proceedings icmas boston ma usa 
brock 
test independence correlation dimension 
number 
department economics university wisconsin madison 
butler rus tomita 
generic decentralized control class self reconfigurable robots 
ieee intl conf robotics automation icra 

deneubourg franks theraulaz bonabeau 
self organization biological systems 
princeton university press 
carlson gupta hogg 
controlling agents smart matter global constraints 
proceedings aaai workshop constraints agents july 
cockburn jennings 
archon distributed artificial intelligence system industrial applications 
hare jennings editors foundations distributed artificial intelligence pages 
john wiley sons 
crutchfield farmer packard shaw jones donnelly 
power spectral analysis dynamical system 
phys 
lett 
crutchfield mitchell 
evolution emergent computation 
proceedings national academy sciences usa 
ferber 
multi agent systems distributed artificial intelligence 
addison wesley 
forrester 
industrial dynamics 
republished productivity press portland 
cambridge ma mit press 

decentralized control structural acoustic radiation 
proceedings asme 
fromherz crawford shang 
distributed adaptive constrained optimization smart matter systems 
proceedings aaai spring symposium intelligent embedded distributed systems stanford ca usa march 
goh zhang 
agent modelling simulation approach agile manufacturing systems control 
proc 
th international conference computers industrial engineering china october 
isbn tp 
gordon spears lee 
distributed spatial control global monitoring steering mobile physical agents 
proceedings ieee international conference information intelligence systems november 
durrant whyte 
information theoretic approach decentralized control multiple autonomous flight vehicles 
proceedings spie vol 
sensor fusion decentralized control robotic systems iii november 
hogg huberman 
power markets controlling smart matter 
technical report xerox parc 
technical report 
hogg chase 
quantum smart matter 

hogg huberman 
controlling chaos distributed systems 
ieee trans 
systems man cybernetics november december 
hogg huberman 
controlling smart matter 
smart materials structures 
howard 
traffic computers 
scientific american 
huberman hogg 
emergence computational ecologies 
nadel stein editors lectures complex systems volume sfi studies sciences complexity pages 
addison wesley reading ma 
ibm 
autonomic computing ibm perspective state information technology 
ibm 
jackson fromherz hogg berlin 
distributed allocation analog market wire computation communication 
proceedings mechatronics atlanta ga usa september 

understanding cooperation decentralized control foraging behavior groups robots 
rd annual midwest instruction computing symposium 
lynch law 
decentralized control techniques large scale civil structural systems 
proceedings th international modal analysis conference xx los angeles ca usa february 
mitchell crutchfield 
revisiting edge chaos evolving cellular automata perform computations 
complex systems 

control distributed autonomous robotic systems principles pattern formation nature pedestrian behaviour 
ieee transactions systems men cybernetics part 
hill 
stability criteria large scale systems 
ieee transactions automatic control ac april 
nehmzow walker 
behaviour mobile robot chaotic 
proceedings aisb symposium scientific methods analysis agent environment interaction 
omohundro 
modelling cellular automata partial differential equations 
physica 
parunak 
dynamical systems perspective agent going concerns 
technical report center electronic commerce 
parunak 
chaos commerce practical issues research opportunities nonlinear dynamics decentralized manufacturing systems 
proceedings second international workshop intelligent manufacturing systems pages 
leuven 
parunak 
self organizing behavior principles self organizing systems 
paam slides web 
www erim org presentations paam tutorial pdf 
parunak brueckner 
entropy selforganization multi agent systems 
ller andre sen editors proceedings fifth international conference autonomous agents pages montreal canada 
acm press 
parunak savit riolo 
agent modeling vs equation modeling case study users guide 
mabs pages 
parunak savit riolo clark 
dynamic analysis supply chains 
technical report cec erim 
final report 
parunak 
modeling extended supply network 
varaiya athans 
survey decentralized control methods large scale systems 
ieee transactions automatic control ac 
savit green 
time series dependent variables 
physica 
spears gordon 
artificial physics control agents 
proceedings ieee international conference information intelligence systems november 
spencer jr 
frequency domain optimal control strategies protection 
journal engineering mechanics 
stephanie jones 
modeling complex adaptive systems echo 
swarm 
swarm development group www swarm org 
turner jennings 
improving scalability multi agent systems 
proceedings international workshop infrastructure scalable multi agent systems volume lecture notes artificial intelligence barcelona spain 
springer verlag 
revised papers published 
van parunak 
complexity theory manufacturing engineering conceptual roles research 
technical report industrial technology institute 
van parunak 
heartbeat factory understanding dynamics agile manufacturing enterprises 
technical report industrial technology institute 
parunak 
managing emergent behavior distributed control systems 
isa tech 
wegner 
interaction powerful algorithms 
communications acm may 

autonomous multi agent construction december 
wilson 
resolving discrepancies deterministic population models individual simulations 
american naturalist 
wooldridge 
multiagent systems 
wiley 
wooldridge jennings 
intelligent agents theory practice 
knowledge engineering review june 
yim lamping mao chase 
dodecahedron shape self assembling robots 
technical report xerox parc spl 
techreport 
zhang fromherz crawford shang 
general constraint control framework examples modular self reconfigurable robots 
ieee rsj conference intelligent robots systems iros lausanne switzerland september 
