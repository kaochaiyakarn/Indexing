anatomy multi camera video surveillance system long gang wu yi wu edward chang wang yuan fang electrical computer engineering science computer university california santa barbara ca cs ucsb edu engineering ucsb edu ece ucsb edu ece ucsb edu cs ucsb edu framework multi camera video surveillance 
framework consists phases detection representation recognition 
detection phase handles multi source spatio temporal data fusion efficiently reliably extracting motion trajectories video 
representation phase summarizes raw trajectory data construct hierarchical invariant content rich descriptions motion events 
recognition phase deals event classification identification data descriptors 
empirical study parking lot surveillance setting show spatio temporal fusion scheme biased sequence data learning method highly effective identifying suspicious events 
united states especially security intelligence services increasingly turning video surveillance means combat terrorist threats increase public security 
proliferation inexpensive cameras availability high speed broadband wired wireless networks economically technically feasible deploy large number cameras security surveillance 
important research questions addressed rely video surveillance effective tool crime prevention 
surveillance task divided phases event detection event representation event recognition 
detection phase handles multi source spatio temporal data fusion efficiently reliably extracting motion trajectories video 
representation phase summarizes raw trajectory data construct hierarchical invariant content rich representations motion events 
recognition phase deals event recognition classification 
research challenges phases summarized follows event detection multiple cameras 
objects observed multiple cameras integrated build spatio temporal patterns correspond dimensional viewing 
integration handle spatial occlusion temporal shift camera recording timing synchronization differing frame rates 
addition motion pattern affected varying camera positions poses incidental environmental factors alter object appearance 
hierarchical invariant event description 
invariant descriptions affected incidental change environment factors lighting sensing configuration camera placement 
concept applicable multiple levels event description 
distinguish types fine grain coarse grain 
fine grain captures characteristics event detailed numeric level 
finegrain invariant descriptors suitable intra class discrimination similar event patterns locating particular event multiple events depicting circling behavior vehicles parking lot 
coarse grain captures motion traits concise semantic level 
coarse grain invariant descriptions suitable inter class discrimination discriminating vehicle circling behavior say parking behavior 
types descriptors synergistically accomplish recognition task 
event recognition 
event characterization deals mapping motion patterns semantics benign suspicious events 
traditional machine learning algorithms svms decision trees directly applied infinite dimensional data may exhibit temporal ordering 
furthermore positive events sought hazardous events significantly negative events training data 
imbalanced set training data class boundary tends skew minority class sensitive noise 
example section illustrate problem 
event detection representation configure level kalman filters fuse multi source video data employ variant dynamic programming construct event descriptors 
effective event recognition discretize continuous spatio temporal sequence 
propose sequence alignment kernel show legitimate kernel function discriminate events 
tackling imbalanced training data problem propose kernel boundary alignment algorithm adaptively modifies kernel matrix training data distribution 
particular application scenario utilize evaluate algorithms detecting suspicious activities parking lot 
empirical study shows spatiotemporal fusion scheme efficiently reliably reconstruct scene activities individual cameras may spatial temporal lapses sequence alignment kernel algorithm highly effective identifying suspicious events 
rest organized follows 
section discuss related 
section addresses sensor data fusion scheme sequence data representation 
section presents event characterization recognition methods 
section contains empirical results 
section offer concluding remarks 
related divide discussion related parts 
part surveys related fusing data multi cameras 
second part discusses related research sequence data learning 
sensor data analysis fusion sensor data fusion multiple cameras important problem potential applications 
multi source fusion di vided categories camera configurations spatially nonoverlapping spatially overlapping 
study attempts fuse data non overlapping cameras bayesian reasoning approach 
significant gaps fields view cameras precision prediction may suffer 
fusion algorithms assume overlapping camera configuration concentrate fusing local coordinate frames multiple cameras global coordinate system 
example assumes intrinsic camera parameters known cameras registered common frame aligning moving objects observed multiple cameras spatially temporally 
deter project uses overlapping camera configuration 
homography images cameras computed images perform seamless tracking data processing performed synthesized image plane 
level hierarchy kalman filters trajectory tracking data fusion multiple cameras 
advantage formulation enables bottom fusion top guidance robust partial occlusion 
kalman filter important theoretical development data smoothing prediction 
traditional kalman filter linear algorithm operates prediction correction paradigm 
quantities system estimated summarized internal state vector constrained observation system external behavior 
prediction mechanism propagating system internal state time correction mechanism fine tuning state propagation external observations 
kalman filter variants powerful tools tracking inertial systems 
generally speaking standard kalman filter performs satisfactorily tracking position moving object 
tracking orientation object governing equations state propagation observation may nonlinear extended kalman filter non linear variants kalman filter 
example uses standard kalman filter predict head position extension estimate head orientation user virtual reality system 
interested summarizing trajectory vehicle position orientation vehicle needed 
employed traditional kalman filter efficient tracking purpose 
addition kalman filter hidden markov model hmm object tracking 
kalman filter hmm estimate internal states system 
hmm attractive online tracking method due high computational intensive respect number states 
tracking objects number possible locations number states tracked object theoretically infinite kalman filter popular choice 
general hmm suitable recognition tasks number states relatively small 
sequence data modeling learning generative discriminative models proposed classify sequence data 
hidden markov model hmm widely generative model describing sequence data 
hmm requires building model pattern family 
unknown pattern classified bayes rule returns model depict 
surveillance building hmm motion pattern benign suspicious may realistic scarcity positive training data 
learning hmm moderate number states requires large number training instances 
svms popular discriminative models directly estimate discriminant function class 
svms proven superior generative models classification problems effectiveness efficiency 
svms applied training data reside vector space 
basic form svm kernel function classifies input vector expressed non linear mapping function maps input vectors feature space operator denotes inner product operator training sample 
parameters class label lagrange multiplier respectively 
kernel function bias 
sequence data particular variable length sequences basis function exist feature space 
attempts convert sequence data fixed length segments represent vector spaces forced mappings variable length fixed length segments result loss information 
furthermore models capture temporal relationship spatial instances consider secondary variables velocity secondary variable traveling direction 
vector space approach svm fisher kernel 
svm fisher kernel computes features probabilistic models learned hmm training 
uses tangent vector log likelihood marginal feature vectors 
svm fisher kernel considers positive training instances take advantage negative training instances learning 
fortunately kernel methods svms member kernel method family require positive definite kernel matrix consists similarity measure pairs training instances explicitly representing individual instances vector space 
specifically treat instance sequence variable random need kernel function generates pair wise similarity pairs ensure generated similarity matrix positive definite 
put way long similarity function produce positive definite kernel matrix kernel method conduct sequence data learning 
design task reduced formulating function characterize similarity sequences provided pair wise similarity matrix positive definite 
borrow idea sequence data dna rna protein analysis biological science measure sequence similarity alignment 
show section flexibility effectiveness similarity function 
furthermore propose sequence alignment kernel fuses symbolic summarizations non vector space numeric descriptions vector space 
ability fuse primary structures secondary structures vector space representation proposed kernel features great modeling flexibility 
tackle imbalanced data learning problem propose kernel boundary alignment scheme 
related imbalanced data learning please refer 
event detection representation particular application scenario automated detection classification suspicious activities vehicles humans surveillance video parking lot parking structure 
type application requires solutions mentioned difficulties optimal fusion information multiple cameras spatial surveillance scenario configuration temporal domains ability describe objects motions way unaffected camera placement environmental variance articulation query concept suspicious vehicles highly skewed training data sets high dimensional description vectors 
experimental scenario depicted fig 

multiple slave surveillance stations comprising video camera connected host pc positioned different locations monitor ground activities parking lot 
restriction number cameras brand names capability 
camera aim stationary follows fixed sweep pattern remotely controlled human operator 
view volumes different cameras totally disjoint overlap partially 
furthermore clocks different slave stations need synchronized 
single master station communicates slave stations wireless links information gathering fusion 
event detection event detection stage aims achieving optimal fusion multisensor data spatially temporally derive hierarchical invariant description scene activities 
sensor data fusion algorithm address bottom data integration problem topdown information dissemination problem coherent framework 
issues addressed event detection sensor fusion framework variability spatial coverage multiple surveillance cameras different fields view 
unreasonable assume overlap fields view placement cameras provide coverage wide possible surveillance area 
congruent activities identified merged multiple cameras 
misalignment temporal time stamp times surveillance tapes come time stamps 
time stamps accurate allow recordings multiple cameras synchronized analysis 
fast moving car easily move view short seconds 
misalignment seconds temporally impact analysis algorithm 
temporal registration important spatial registration fusing multiple sensor data 
occlusion missing data careful camera placement occlusion scene objects environmental fixtures unavoidable 
implies trajectories easily break remedial actions needed link repair broken trajectories 
subsections discuss solutions problems proposing algorithms spatial temporal registration sensor data fusion prediction correction framework 
proceed clear notational convention ensuing discussion 
matrices vectors denoted bold faced characters scalar quantities plain faced characters 
quantities small letters quantities capital letters 
tilde symbol denote vectors homogeneous coordinates appending extra component vector 
denote point coordinates coordinates homogeneous form 
spatial registration step determining essential camera parameters pose aim camera environment 
essential step video interpretation exact metric information video 
camera calibration pose registration topic studied extensively computer vision remote sensing photogrammetry 
intention reinvent wheel coming calibration pose registration algorithm 
sake completeness provide short description algorithms motivate justify choices particular application domain 
process forming image overly simplified explanation involves determination things object appear geometry process object appear appearance process image 
camera calibration pose registration answering geometry question 
geometry image formation expressed mathematically concatenation coordinate transformations projection bring coor specified global frame coordinate specified camera coordinate frame 
process decomposed stages 
world camera coordinate transform specified matrix homogeneous coordinates maps coordinates homogeneous form specified global frame coordinates homogeneous form camera viewer centered frame 
uniquely determined rotation plus translation 

camera ideal image projective transform specified matrix homogeneous coordinates projects coordinates homogeneous form camera frame image plane ideal pinhole camera 
model perspective weak perspective models image formation process differing degrees fidelity 
full perspective model 
matrix fixed form unknown parameter depending projection model 

ideal image real image transform 
spec ified matrix homogeneous coordinates takes ideal projection coordinates real projection coordinates 
process accounts physical camera parameters center location image plane scale factors directions lens distortion spherical achromatic aberration real image formation process 
combination parameters determined third step called intrinsic camera parameters 
affected physical components camera lens ccd array physical placement camera surrounding environment 
published back cited german dissertation surveyed nearly different solutions camera pose registration photogrammetry literature 
illustration church algorithm process determining intrinsic parameters called calibration usually performed line 
algorithm requires views planar calibration pattern posed relatively arbitrary orientations 
parameters determined step translation rotation align camera world coordinate frames 
process called pose registration may need performed continuously line camera mounted base 
performance pose registration critical time sensitive 
camera intrinsic parameters deter mined line calibration known matrices eq 
combined single theoretically eq 
matrix unknowns 
provide linear landmark known world coordinates projection real camera coordinate frame constraints eq 

total point correspondences needed linear closed form solution pose registration 
solution satisfactory theoretical practical reasons 
theoretically method computationally expensive requires inversions matrix 
furthermore coefficient matrix may ill conditioned depending configuration landmarks space 
experience implementing algorithm shows avoid degeneration computation sure observed landmarks lie plane ground 
real world scenario surveillance tape taken parking lot arbitrarily chosen location finding landmarks known world coordinates fields view multiple cameras remain visible dynamic camera aims nontrivial task 
alternative pose registration methods require fewer landmarks registration important 
proven fewer landmarks possible linear closed form solution pose registration problem 
iterative solutions landmarks known world coordinates image coordinates 
landmarks non coplanar high calibration accuracy presents problem 
know tall lamp post arbitrarily chosen parking lot 
alternative algorithm developed earl church back aerial photogrammetry 
church algorithm iterative nonlinear optimization technique requires landmarks pose registration 
referring fig 
solution condition face angle subtended landmarks space equal face angle subtended corresponding image locations 
face angles fig 
formed camera origin focal point image projection landmarks calculated directly camera coordinate frame 
location camera focal point fig 
world coordinate system unknown face angles subtended landmarks space unspecified 
church method starts guessing value camera origin world coordinate system 
hypothesized camera origin position fig 
form face angles world coordinate system fig 

face angles general match computed images hypothesized camera position correct 
partial differentiation difference sets face angles respect current hypothesized position get adjustment process iterated adjustment insignificant hypothesized position converges correct position 
advantage algorithm added back hypothesized position 
points needed necessarily coplanar ground plane earth registration 
necessary rely environment fixtures lamp post establish height information 
parking lots marking parking stalls regular fixed spacing 
relatively easy establish global frame selecting origin repetitive parking stall marking chosen arbitrarily extending coordinate system coverage wide area fixed stall spacing assumption 
allows creation multitude registration landmarks wide spatial coverage 
physical dimension measurements environment fixtures needed 
measurements expressed terms stall marking unit extending coordinate system coverage stall marking unit possible register multiple cameras global frame fields view cameras little overlap 
occlusion landmarks parked cars problem minimum landmarks needed pose registration necessary landmarks 
experience church algorithm accurate converges correct pose solution extremely fast iterations cases 
algorithm efficient implement current pc technology possible achieve thousands pose updates second 
universally applicable theoretical analysis accuracy rate convergence iterative nonlinear optimization techniques fast accurate convergence possible initial guess final solution obtained 
initial guess ensures success simple naive gradient descent optimization expensive exhaustive search 
estimating time varying camera aim pose possible obtain initial guess camera pose camera pose previous frame 
video frame rate frames second faster servoing speed surveillance camera panning degrees second initial guess previous frame close true solution 
church algorithm readily applicable application scenario 
illustration temporal alignment algorithm temporal alignment temporal alignment algorithm illustrated graphically fig 

trajectory observed multiple cameras 
trajectory appears differently different cameras images projective distortion 
derive unique invariant signature trajectory projections regardless particular way image generated correlate invariant trajectories different sensors establish time shift solve temporal registration problem 
specifically motion trajectory observed denotes projection matrix simplify math adopt parallel projection model 
motion captured different viewpoint expressed denote rotation translation resulting different camera placement change camera clock 
motion curve recognized derive signature way insensitive changes parallel projection model far field assumption object size small relative distance camera assumption generally true outdoor surveillance applications easily shown represents affine transform image position shift 
derive signature motion trajectory extend image trajectory space appending third component time see fig 

imagine appending third component placing slinky toy ground plane pulling extending third height dimension 
known differential geometry curve assumed video cameras sampling rate frames second ntsc standard 
sampling rates different necessary incorporate factor eq 
account possible derive unique signatures case formulation 
uniquely described rigid motion curvature torsion vectors respect intrinsic arc length curvature torsion vectors defined curvature torsion vectors form locally defined signature space curve 
computer vision jargon form invariant parameter space hough transform space local structures hashed space independently variations object placement rigid motion 
mapping insensitive variation temporal shift pattern show sooner 
tolerant occlusion signature computed locally signature part trajectory occluded remain invariant 
recording eq 
insensitive time shifts partial occlusion 
simple invariant signature define motion trajectory 
hashing process invariant difference camera poses processing trajectories needed 
particular variation camera parameters tendency change magnitude area quantities projection derivatives derive invariant expressions depend camera pose 
example forms invariant local expression insensitive affine pose change appear eq 

expression eq 
represents ratio determinants matrices columns matrices derivatives varying degrees observed curves 
experiment sensor data fusion methods employ sensor data fusion 
hierarchical master slave sensing configuration shown fig 

bottom level slave station tracks movements scene objects semi independently 
local trajectories represented state vector comprising estimated position velocity acceleration tracked object relayed master station fusing consistent global representation 
represents bottom analysis paradigm 
furthermore individual camera limited field view occlusion occurs due scene clutter employ topdown analysis module disseminates fused information master station slave stations lose track object 
slave station employ different mechanisms event detection tracking powerful hypothesis paradigm 
difference number hypotheses maintained 
state prior noise processes modeled uni modal gaussian processes single state maintained 
kalman filter proven effective situations 
state prior noise processes complicated form necessary sample state space elaborate manner 
employ formulation similar importance condensation algorithm case 
describe mechanisms details 
kalman filter tracking kalman filter tool fusing information spatially temporally multiple cameras motion event detection 
kalman filter optimal linear data smoothing prediction algorithm 
applied extensively control signal processing navigation applications 
contribution level kalman filters fuse data multiple sources 
level hierarchical kalman filter configuration kalman filter widely estimate internal state system observation system external behavior 
furthermore system state estimate computed updated incorporating external measurements iteratively recomputing estimate scratch time new measurement available 
iterative process optimal sense kalman filter incorporates available information past measurements weighted precision 
optimal information fusion achieved combining factors knowledge system measurement device dynamics statistical description system noises measurement errors uncertainty system model relevant initial state description 
kalman filter optimal linear estimators certain assumptions noise processes valid easy implement efficient run time 
done relaxing assumptions gaussian noise assumption linearity assumption 
suppose vehicle moving parking lot 
trajectory described global system trajectory camera may observed number cameras 
question best estimate formulate solution level hierarchy kalman fil ters 
referring fig 
bottom level hierarchy employ camera kalman filter estimate independently position velocity acceleration vehicle tracked image trajectory vehicle local camera frame 
kalman filter jargon position velocity acceleration vectors establish state system image trajectory serves observation system state 
top level hierarchy single kalman filter estimate position velocity acceleration global world frame time estimated positions velocities accelerations multiple cameras observations solid feed upward lines fig 

possible address spatial temporal registration problems sec 

allow dissemination fused information individual cameras dashed feed downward lines fig 
help guide image processing 
detail camera create system state vector hat nota observed vehicle tion denote best estimate true state goal generate update state estimate recursively time 
kalman filter answers question supposing estimate system state time say state time question answered mechanisms extrapolating state accomplished state prediction equation incorporating new observation system behavior time accomplished observation equation update mechanism 
taylor series expansion write state prediction equation represent null identity matrices respectively 
minus sign implies state time estimated extrapolating state estimate time new measurements time incorporated 
represents model prediction uncertainty terms taylor series expansion 
assume random variable zero mean covariance matrix new measurement new image acquired vehicle trajectory computed incorporate new observation update estimate system state 
update requires equations measurement equation relates system external behavior internal state update equation properly weighs state estimates state extrapolation process eq 
external observation process eq 
generate new state estimate 
measurement equation case simple estimate vehicle position velocity acceleration equivalent finite difference approximations corresponding trajectory represents external observation vehicle image trajectory represents uncertainty observa tion 
assume zero mean covariance matrix merge estimates state lation eq 
external observation eq 
update equation avoid complicating notation single subscript denote camera number double subscript denote th vehicle th camera 
kalman estimation mechanism vehicles 
implies state estimate incorporating new measurement weighted sum state estimate lation process eq 
novel original part current observation explained state called innovation kalman filter jargons 
thing left determine weighting factor kalman gain kalman filter jargon summarized equations represents error covariance matrix state estimation process 
eq 
computes weighting factor properly weighing uncertainty error observation state propagation 
eqs 
show error covariance propagated time new measurement incorporated eq 
new measurement incorporated eq 

equations eqs 
summarize recursive operations kalman filter 
interested readers consult books survey papers line tutorials details 
global trajectory create global state vector ob served vehicle write state prediction equation global trajectory follows identical individual camera case propagate state vector forward taylor series expansion represent null identity matrices respectively 
writing global measurement equation state vectors estimated individual cameras observables constrain global state 
camera calibration derived matrix allows individual camera related global system 
measurement equation written th camera calibration matrix 
discussion points order stage hierarchical approach taken 
just combine image trajectories cameras directly single filter estimate global state 
reasons notably efficiency processing communication 
state prediction measurement equations eqs 
smaller individual cameras global counterparts eqs 

particular eq 
large best processing locally relay essential information raw data centralized fusion point reduce communication computation load single server 
local processing determine movement observed th camera field view eq 

furthermore envision surveillance systems fairly surveillance station camera associated mounting device controlled inexpensive pc digitizer card disk storage 
complete surveillance system comprises individualized stations achieve scalability 
scenario take advantage processing power individual surveillance stations parallel process video footage big server achieve integration raw data 
second hierarchy kalman filters allows way communication 
illustrated fusing information multiple cameras global state estimate bottom process 
possible employ top process information dissemination global kalman filter individual cameras 
process useful say scenario vehicle circling parking lot may move view surveillance camera 
vehicle moves camera view error measurement eq 
increases quickly infinity state estimates rely state extrapolation eq 
theory taylor series expansion error extrapolation grows time case error grows 
soon state estimate highly unreliable observing vehicle movement valid video footage know car turn outside field view camera 
reliable information vehicle movement gathered cameras fields view include vehicle interest 
information fused global kalman filter information relayed camera lost sight vehicle 
equation similar eq 
purpose prediction error time acts observation constrain camera loses view vehicle 
state multi hypothesis tracking kalman filter simple powerful mechanism state estimation validity challenged assumption prior noise valid 
furthermore situations multiple hypotheses kept time visual evidence gathered validate 
example group persons enter field view camera way silhouettes overlap tracking algorithm know general moving region corresponds single person multiple persons 
group people split head different directions single person hypothesis safely discarded 
approach employ robust real time control fail mechanism top low level frame differencing correlation tracking deal noise scene clutter short periods absence merging silhouettes long periods occlusion activities camera field view situations easily fail simple kalman filter tracking 
formulation powerful hypothesis verification paradigm alternatively monte carlo filtering particle filtering genetic algorithms condensation conditional density propagation importance condensation 
utility hypothesis verification formulation traditional linear state estimation algorithms kalman filtering noise processes gaussian state propagation unimodal 
allows multiple competing hypotheses maintained contribute state estimation process 
denote sensor data multiple hypotheses allow assume particular parametric form learned sampling multiple hypotheses bayesian rule 
sense hypothesis verification akin bayesian estimator maximum likelihood estimator 
different incarnations hypothesis verification principle comprise essential components collection candidate states likelihood estimates initialized propagated updated time state propagation mechanism state verification mechanism sensor feedback renormalization process refresh regenerate collection candidate states associated likelihood 
step represents sampling distribution prior step computing associated conditional step computing regenerating states vectors updated describe formulation relation steps state vector employ simple frame differencing region growing initial detection presence activities 
moving region identified camera image multiple hypotheses number allowed real time execution postulated 
single object hypothesis represent region single moving object characterized state comprising estimated position velocity acceleration moving region 
alternatively region represent group objects silhouettes merged single composite region image 
camera multiple state vectors created 
likelihood hypothesis initialized fixed constant dependent size color region 
state propagation state vector time propagate state vector time gaussian noise processes zero mean suitable variance matrices minus superscript denotes state correction validation sensor data 
states generate depends real time processing re 
state validation employ validation mechanism spirit regularization allows multiple sources information 
specifically update state go denotes states sensor information incorporated employ sources information sensor data particular sensor sensor data sensors 
information sources exploited high resolution low resolution form 
referring fig 
successful locating object time th camera image tracked object position recovered difference exact mechanism realizing 
example standard condensation algorithms generate update candidate states strictly bayesian formula importance condensation allows auxiliary information sensors brought better position candidate states efficiently exploring state space 
subscript indicates tracked po sition 
camera lose track object scenarios tracked object field view camera movement swift jerky position fall outside attention window tracking algorithm tracked object simply identifiable high degree occlusion scene clutter object moved field view camera 
need mechanisms re acquire object scenario solicit help sensors scenario 
efficiently re acquire object necessary enlarge attention window tracking algorithm search bigger neighborhood presence object 
accomplish downsampling current frame looking telltale signs tracked object downsampled image color texture similarity tracked object re mapping potential locations back original resolution 
denote candidate locations re acquisition process subscript represents re acquired position distin candidate locations successful tracking 
simultaneously master fusion station shown fig 
queried 
fused consensus object location time instance projected back particular camera frame generate candidate object positions subscript represents positions predicted consensus information fusion matrix relates global coordinate local camera coordinate estimated camera calibration process 
state normalization available computing power slave station allows updating tracking finite number states real time 
available computing power distributed judiciously moving regions reserved detecting possible appearance new moving objects 
particular moving region allocated share computing resources optimal way bayesian rule means generate tracking hypotheses posterior 
successful maintaining tracking update confidence assume collecting multiple hypotheses object generate discrete sampled version integrate density function generate mass function redistribute states golden rule sampling states places state spaces higher densities 
camera loses track object simple bayesian formula applicable 
refresh candidate states 
re focus processing power parts state space contain valid candidates information gathered cursory search current im age supplied sensors 
decision regenerating refreshing state vectors low level tracker gives high confidence measurement tracking states refreshed additional states generated calculated equation low states regenerated hierarchical invariant representation raw trajectory data derived terms local global cartesian coordinates 
representation suffers problems motion trajectory observed different cameras different representations representation difficult human operator understand 
solution summarize raw trajectory data syntactic semantic descriptors affected incidental changes environmental factors camera poses 
briefly describe semantic descriptors 
segment raw trajectory fused multiple cameras fragments 
constrained optimization approach em expectation maximization framework label fragments semantically fragment representing left turn action 
approximate acceleration trajectory vehicle piecewise constant zeroth order linear order function terms direction magnitude 
magnitude acceleration order concatenation piecewise polynomials high third order cubic 
considered sufficient describe multitude motion curves real world computer aided design computer graphics piecewise third order hermite zier spline curves universally design manufacturing 
chop acceleration trajectory time interval vehicle observed surveillance cameras say pieces eq 
gives rise motion trajectory lower case avoid confusion upper case denote rotation matrix 
argue assumption restrictive general acceleration patterns exist assumption reasons employ iterative expectation maximization em algorithm segment trajectories 
em algorithm consists stages stage hypothesizes number segments start locations stage optimizes fitting parameters start locations number segments derived stage 
steps iterate solution converges 
table sketches pseudo code algorithm fitting illustration 
label segmented fragment acceleration velocity statistics 
specifically denote initial vehicle velocity segment starts zero nonzero 
acceleration eq 
constant linearly varying magnitude constant linearly varying direction 
example motion pattern constant speed segmentation meaningful necessary possible motion patterns include speed slow left turn right turn speed slow determined sign left turn right turn determined sign right turn left turn 
fig 
sketch different motion patterns assumption acceleration eq 
example condition identified zero acceleration zero initial velocity 
initial velocity zero magnitude acceleration zero constant change linearly direction acceleration constant label action action 
turn example motion pattern classification 
vehicle making turn approximately observed cross road vehicle pulling parking stall 
modeled acceleration constant direction roughly perpendicular direction initial velocity 
noted fig 
sketch possible scenarios 
example angle acceleration linear possible motion trajectories variations depending relative orientation size quite counter intuitive unnatural twists 
anti parallel example velocity decrease zero increase opposite direction 
label slow action slow direction action 
vehicle accelerate opposite direction necessary shift gears breaks continuum motion 
consider cases sense semantically 
example direction increasing indicates fast acceleration parallel emergency anti parallel 
event recognition constant recap discussion section 
descriptors summarize motion trajectory ordered sequence labels label corresponds motion segment humanly understandable action 
recognizing identifying events descriptors handle ordered nature descriptors 
furthermore surveillance setting positive suspicious events significantly negative events 
explain shortly example imbalanced training data situation skew decision boundary minority class cause high rates false negatives failure identify suspicious events 
section design kernel function svms correlating events 
propose kernel boundary alignment deal imbalanced training data problem 
sequence alignment learning previous section labeled segmented fragment trajectory semantic label detailed attributes including velocity acceleration statistics 
convenience symbol table motion event segmentation process initialization 
compute linear fit curve specified points denoted refinement 
compute location notation largest deviation true acceleration curve fitting iteration 
preset threshold break curve sections denote semantic label 
constant speed slow left turn right turn speed label segment level descriptor primary segment symbol set secondary variables velocity acceleration 
denote sequence comprises concatenation segment symbols legal symbol set 
denote vector secondary variable 
example depicts sequence level descrip tor 
sequence denotes segmented trajectory representing velocity acceleration 
velocity acceleration average values taken place segment 
trajectory learning problem converted problem sequence data learning secondary variables 
purpose construct new sequence alignment kernel applied measure pair wise similarity sequences secondary variables 
tensor product kernel sequence alignment kernel take consideration degree conformity symbolic summarizations similarity secondary numerical descriptions velocity acceleration sequences 
separate kernels criteria combined single sequence alignment kernel tensor product 
explained 
composite structure parts data positive integer 
sequence sequence primary segment symbols secondary variables 
denote primary symbol sequence secondary vector 
assume nonempty sets 
define tensor product kernel follows definition 
tensor product kernel 
positive definite kernels defined respectively tensor product defined kernels closed product easy see tensor product kernel positive definite individual kernel positive definite 
sequence alignment kernel measure similarity sequences idea compare similarity symbol level 
similarity com repeat steps new intervals 
puted primary level consider similarity secondary variable level 
tensor product kernel combine similarity primary secondary level 
primary segment symbol level kernel measure symbol sequence similarity 
define joint probability distribution assigns higher probability similar sequence pairs 
employ pairs hmm generative probability model model joint symbol sequences 
notice different hmm aims model evolution individual sequence data 
dynamic programming methods employ perform string alignment 
realization sequence states starting start finishing possible states states ab state ab emits symbols state emits symbol sequence state emits symbol sequence 
state ab emission distribution probability emitting aligned states distributions respectively emitting symbol gap parameter denotes transition probability ab insert gap state probability staying insert state probability transition state 
particular pair sequences may generated exponentially different realizations 
dynamic programming algorithms sum possible realizations calculate joint probability sequences 
computational complexity lengths sequences respectively 
compute similarity secondary level concatenate variables vector employ traditional vector space kernel rbf function 
denote kernel measuring distance notice vectors may differ length may different length 
discuss shortly align vectors length example 
define tensor product example show steps computing similarity sequences sequence alignment kernel 
example 
suppose sequences depicted 
similarity sequences computed steps step 
primary symbol level similarity computation obtain joint symbol sequences part computation sequences aligned follows step 
secondary variable level similarity computation unaligned positions padded zero 
obtain equal length vectors compute similarity traditional svm kernel rbf function 
step 
fusion tensor 
advantages sequence alignment kernel 
sequence alignment algorithms obtain pair wise probability distribution measuring variable length sequence similarity 
employ perform measurement 
second kernel considers alignment symbol strings secondary variables making similarity measurement sequences informative 
third compared svm fisher kernel discussed section sequence alignment kernel adds ability learn negative training instances positive training instances 
imbalanced learning kernel boundary alignment skewed class boundary subtle severe problem arises svm classifier fact classifier real world problems imbalanced training data 
understand nature problem consider binary positive vs negative classification setting 
recall bayesian framework estimates posterior probability class conditional prior 
training data highly imbalanced inferred state nature favors majority class 
ambiguity arises classifying particular sample similar class conditional densities classes bayesian framework rely large prior favor majority class break tie 
consequently decision boundary skew minority class 
illustrate skew problem graphically checkerboard example 
checkerboard divides square quad 
top left bottom right quadrants contain negative majority instances top right bottom left quadrants occupied positive minority instances 
lines classes ideal boundary separates classes 
rest positive referring minority instances negative referring majority instances 
exhibits boundary distortion left quadrants checkerboard different negative positive ratios black dot circle represents support vector radius represents weight value support vector 
bigger circle larger shows svm class boundary ratio number negative instances quadrant number positive instances quadrant shows boundary ratio increases boundary skewed wards positive quadrant boundary causes higher incidence false negatives 
bayesian framework gives optimal results terms smallest average error rate theoretical sense careful applying real world applications 
real world application security surveillance risk consequence positive event false negative far outweighs negative event false positive 
known binary classification problem bayesian risks defined refer positive negative events respectively refers risk false negative risk false positive 
action take action smaller risk affected just event likelihood directly influences misclassification error risk mispredictions 
security surveillance positive suspicious events occur frequently negative benign events 
fact causes imbalanced training data results higher incidence false negatives 
remedy boundary skew problem propose adaptive conformal transformation algorithm 
remainder section outline prior deals problem vector space section 
solution learning discretized variable length sequence may vector space representation section 
conformally transforming proposed feature space adaptive conformal transformation imbalanced data learning 
showed conducting conformal transformation adaptively data distribution adjusting degree magnification feature space distance input space distance proposed remedy learning problem 
conformal transformation called conformal mapping transformation takes elements elements preserving local angles elements mapping domain elements reside 
kernel methods svms introduce mapping func tion embeds input space high dimensional feature space curved riemannian manifold mapped data re side 
riemannian metric defined associated kernel function metric shows local area magnified mapping idea conformal transformation svms enlarge margin increasing magnification factor boundary represented support vectors decrease points 
implemented conformal transformation related kernel eq 
spatial relationship data affected 
conformal transformation depicted equation properly defined positive conformal function 
chosen way new riemannian metric associated new kernel function larger values near decision boundary 
furthermore deal skew class boundary caused imbalanced classes magnify demonstrate rbf distance function boundary area close minority class 
choice sigma eq 
see fixed vectors support dependent density support vectors neighborhood alleviate problem adaptively tune spatial distribution support vectors 
goal achieved equations boundaries different ratios 
equation average right hand side comprises support vectors neighborhood radius having different class label 
average distance nearest farthest support vectors setting way takes consideration spatial distribution support vectors mapping unknown play kernel trick calculate distance substituting eq 
eq 
calculate support vector adaptively reflect spatial distribution support vector training dataset imbalanced class boundary skewed minority class input space hope new metric magnify area far away vector minority support boundary imbalance alleviated 
algorithm assigns multiplier eq 
reflect boundary skew tune minority support vector tune examining eq 
see monotonously increasing function increase metric area close vector support better choose larger minority support vector 
majority support vector smaller choose minimize influence class boundary 
empirically demonstrate proportional skew support vectors denote number minority majority support vectors respectively 
please see details modifying data vector space representation sequence data may applicable 
propose modifies kernel matrix training data distribution 
kernel matrix contains pairwise similarity information pairs instances training dataset 
methods need kernel matrix learn classifier sigma data reside vector space 
notice certainly applicable data vector space representation 
exp xk different instance training vector introduce term support instance denote embedded point support vector situation choose eq 

impossible calculate distance euclidean non vector data 
section show chosen way spatial resolution manifold magnified support instances 
words close support instance neighborhood hope larger achieve greater magnification 
pairwise similarity measure distance choose denotes support instance set controls magnitude illustrates instance support see axis larger instance similar larger axis magnification spatial resolution support vector embedded notice shaped differently different need adaptively choose algorithm support instance call embedded support vector support instance 
input stopping threshold maximum running iterations output output classifier variables support instance set neighborhood range support instance parameter class label function calls train classifier classify obtain compute si minority majority return algorithm 
distance support instances calculated kernel trick neighborhood range eq 
chosen average minimal distance maximal distance addition scaled way section dealing imbalanced training data problem 
summarizes algorithm 
apply train ing dataset testing accuracy improved 
iteration adaptively calculates support instance step distribution support instances feature space scales negative positive support instance ratio steps 
updates kernel matrix performs retraining steps 
experimental results conducted experiments detecting suspicious events parking lot setting validate effectiveness proposed methods 
recorded hour half video parking lot ucsb campus cameras 
collected trajectories depicting motion patterns circling zigzag pattern pattern go straight back forth parking 
classified events benign suspicious categories 
benign event category consists patterns go straight parking suspicious event category consists patterns 
interested detecting suspicious events accurately 
specifically answer questions 
level kalman filter successfully reconstruct motion patterns 

sequence data characterization learning methods particular tensor product kernel effectively fuse degree conformity symbolic summarizations similarity secondary descriptions 

reduce incidence false negatives maintaining low incidence false positives 
specificity sensitivity evaluation criteria 
define sensitivity learning algorithm ratio number true positive tp predictions number positive instances tp fn test set sensitivity tp tp fn 
specificity defined ratio number true negative tn predictions number negative instances tn fp test set 
surveillance applications care sensitivity time hopefully specificity suffer side 
table depicts datasets balanced skewed dataset conduct experiments 
balanced dataset produced recorded video 
added synthetic trajectories produce skewed dataset 
experiment chose data training set remaining testing data 
sequence alignment selected rbf function parameter selection processes routine report 
employed best parameter settings obtained running fold cross validation report average class prediction accuracy 
works best dataset 
kernel balanced data set skewed data set table datasets 
describe experimental procedures sensor registration sensor data fusion preliminary results 
experiment spatial registration 
initial time camera calibration determine intrinsic camera parameters performed continuous spatial registration church algorithm calibration points update landmarks preselected po sitions world coordinate system known 
mentioned church algorithm performed iterative nonlinear optimization pose estimation 
usually took iterations establish initial pose estimate initial value estimated close typical error spatial registration 
horizontal axis time 
vertical axis discrepancy landmark predicted position estimated church algorithm true location established manual tracking 
form linear algorithm landmarks 
continuous pose update movement camera pan tilt adjacent frames taken video frame rate frames second usually small 
initial guess current camera pose previous frame 
convergence fast experiments indicated algorithm converged usually single iteration 
time consuming part spatial registration spent tracking registration landmarks 
slow predictable camera movement search area current location landmark quite small experiments maximum displacement pixels 
able perform spatial registration real time 
accuracy spatial registration affected precision camera calibration tracking algorithm 
verify accuracy spatial registration known landmark algorithm testing point 
computed new landmark projected location image plane calibration matrix established church algorithm 
compared predicted position established manual tracking 
fig 
shows sample error curve validation process second video 
discrepancy landmark predicted positions manually tracking computed frames 
seen maximum error pixels quite acceptable applications 
fig 
shows test spatial registration image frames different spatial coverage transformation established algorithm 
stitched frames obtain mosaic image covered parking lot 
image mosaic provided seamless background panning camera aid tracking process discussed 
experiment temporal registration 
fig 
shows aligned invariant signatures trajectory observed different cameras expression eq 
observed trajectories different cameras distorted projection image formation process appeared different invariant signatures quite similar 
invariant signatures aligning trajectories temporally 
experiment sensor data fusion 
kalman filter general multi hypothesis tracking algorithm object tracking sensor data fusion 
running time kalman filter constant 
experience indicated precision kalman filter acceptable barring image mosaic upper row shows input video frames different spatial coverages 
bottom row shows mosaic image constructed input images covers parking lot 
camera camera invariant signature invariant signatures temporal registration trajectory observed camera trajectory observed camera invariant signatures green trajectory camera red trajectory camera 
precision results multi hypothesis tracking algorithm 
axis represents number states kept axis represents average discrepancy multi hypothesis tracking results ground truth manual tracking 
timing results multi hypothesis tracking algorithm serious occlusion scene clutter 
example results kalman filter tracking pixels ground truth manual tracking short video minute vehicle full circle parking lot 
kalman filter tracking added overhead running time time spent image processing 
precision running time multi hypothesis tracking algorithm determined number candidate states kept 
fig 
shows tracking precision multi hypothesis algorithm different numbers states axis represents number states kept axis represents average discrepancy multi hypothesis tracking results ground truth manual tracking 
seen tracking precision increased quickly increase number states effect tapered number states large experiments 
fig 
shows overhead keeping updating multiple candidate states 
group bars bar constant overhead video processing change regardless number states kept 
second bar overhead multi hypothesis algorithm 
fig 
see overhead keeping multiple candidate states linear number states 
considering precision running time states compromise expected tracking error pixels ground truth running time overhead 
parking pattern condensed video footage left camera condensed video footage right camera trajectory segment boundaries labels acceleration curves segmentation 
experiment feature 
fig 
shows sample parking pattern fused invariant representation derived multiple sensors 
background separation detect moving objects 
fixed camera background treated stationary 
camera moving registered mapped time varying video content mosaic image fig 
performed background separation 
fig show raw vehicle trajectories cameras 
fig fused segmented trajectory semantic representation 
fig depicts curves tation 
curves estimated kalman filter shown black piecewise linear approximations em algorithm described shown red 
vertical lines show segment 
result demonstrates tracking segmentation algorithms worked properly 
experiment sequence alignment kernel evaluation 
balanced dataset conduct experiment 
compared classification accuracy primary segment symbols consider secondary description velocity 
figures show secondary struc ture considered sensitivity specificity improved 
improvement marked sensitivity 
rest experiments considered primary secondary information 
experiment evaluation 
experiment examined effectiveness datasets different benign suspicious ratios 
balanced dataset second column table benign suspicious ratio proves sensitivity significantly degrades specificity just repeated test skewed dataset third column table benign suspicious ratio figures show average sensitivity suf figures show employment im drop sensitivity improved giving away just specificity 
applying average methods fusing multi camera surveillance data characterizing motion patterns secondary structure conducting statistical learning imbalanced training data setting detecting rare events 
fusing multisource data cameras overlapping spatial temporal coverage proposed level hierarchy kalman filters 
efficiently summarizing motion events studied hierarchical invariant descriptors 
characterizing motion patterns proposed sequence alignment kernel uses tensor product fuse motion sequence symbolic summarizations left turn right turn represented vector space secondary numeric characteristics velocity represented vector space 
positive training instances suspicious events significantly negative training instances showed kernel methods suffer high event detection errors 
remedy problem proposed adaptive conformal transformation algorithm sequence alignment kernel 
extensive empirical study parking lot surveillance setting showed system highly effective identifying suspicious events 
currently building surveillance system low resolution web high resolution zoom tilt pan cameras 
particularly interested testing scalability multi camera fusion scheme hierarchical kalman filter scheme respect number cameras number objects simultaneously tracked 
plan investigate robust parameter tuning methods enhancing kernel boundary alignment algorithm 
acknowledgment acknowledge support nsf iis career iis iis eia 
amari wu 
improving support vector machine classifiers modifying kernel functions 
neural networks 
azuma 
predicative tracking augmented reality 
unc cs chapel hill tr 
bengio 
markovian models sequential data 
neural computing 
boyd hunter kelly tai phillips jain 
mpi video infrastructure dynamic environments 
ieee international conference multimedia systems june 
ozsoyoglu 
indexing highdimensional metric spaces 
proc 
acm sigmod pages 
brown 
random signal analysis kalman filtering 
wiley new york ny 
burden editors 
numerical analysis th edition 
pws publishing new york ny 
burges 
geometry invariance kernel methods 
adv 
kernel methods support vector learning 
mit press 
eskin cohen weston noble 
mismatch string kernels svm protein classification 
neural information processing systems 
smyth 
pattern discovery sequences markov assumption 
acm sigkdd 
church 
revised geometry aerial photograph 
bulletin aerial photogrammetry 
cohn 
conformal mapping riemann surfaces 
dover 
collins lipton 
system video surveillance monitoring vsam project final report 
cmu technical report cmu ri tr 
dementhon davis 
model object pose lines code 
int 
comput 
vision 
duda hart stork 
pattern classification nd ed 
wiley new york 
farin 
curves surfaces computer aided geometric design 
academic press san diego ca edition 
faugeras 
dimensional computer vision 
mit press cambridge ma 
foley van dam feiner hughes 
computer graphics principles practice nd ed 
addison wesley reading ma 
fukunaga 
statistical pattern recognition 
academic press boston ma edition 
haralick lee zhuang vaidya kim 
pose estimation corresponding point data 
ieee trans 
syst man cybern 
haykin 
neural networks nd ed 
prentice hall englewood cliffs nj 
horaud 
object pose link weak perspective full perspective 
int 
comput 
vision 
isard blake 
condensation conditional density propagation visual tracking 
int 
comput 
vision 
isard blake 
unifying low level highlevel tracking stochastic framework 
lecture notes computer science 
jaakkola haussler 
fisher kernel method detect remote protein homologies 
proceedings seventh international conference intelligent system molecular biology 
jaakkola haussler 
exploiting generative models discriminative classifiers 
advances neural information processing systems 
haussler 
probabilistic kernel regression models 
conference ai statistics 
julier uhlmann durrant whyte 
new approach filtering nonlinear systems 
proc 
control conference seattle wa 
kanatani 
optimal homography computation reliability measure 
proc 
iapr workshop machine vision applications nov 
zabih 
bayesian multi camera surveillance 
cvpr 
kitagawa 
monte carlo filter smoother non gaussian nonlinear state space models 
journal computational graphical statistics 
lee romano stein 
monitoring activities multiple video streams establishing common coordinate system 
ieee trans 
pami aug 
leslie eskin noble 
spectrum kernel string kernel svm protein classification 
proceeding pacific symposium biocomputing 
world scientific 
lou yang hu tan 
visual vehicle tracking improved ekf 

maybank sullivan 
filter car tracking acceleration steering angle 
proc 
british machine vision conference 
maybeck 
stochastic models estimation control vol 

academic press new york ny 
pavlidis 
examples indoor outdoor surveillance systems motivation design testing 
proceedings nd european workshop advanced video surveillance 
pavlidis harp 
urban surveillance systems laboratory commercial world 
proc 
ieee 
sensitivity kernel test specificity kernel test sensitivity test balanced data specificity test balanced data sensitivity test skewed data specificity test skewed data pitt shephard 
filtering simulation auxiliary particle filters 
journal american statistical association 
varshney 
multisensor surveillance systems image video data 
proc 
ieee conf 
image proc 
sears 
optics rd ed 
addison wesley reading ma 
starner pentland 
visual recognition american sign language hidden markov models 
technical report master thesis mit feb program media arts sciences mit media laboratory media lab vismod tr media mit edu vismod people publications publications html kb 

differential geometry 
addison wesley reading ma edition 
vapnik 
nature statistical learning theory 
springer new york 
watkins 
dynamic alignment kernels 
technical report department computer science university london 
welch bishop 
www cs unc edu welch kalman 
welch bishop 
kalman filter 
unc chapel hill tr 
wu chang 
adaptive feature space conformal transformation learning imbalanced data 
international conference machine learning icml august 
xu zhang 
epipolar geometry stereo motion object recognition 
kluwer academic publishers netherlands 
wu wu wang chang 
feature extraction biased statistical inference video surveillance 
proceedings ieee conference advanced video surveillance miami fl 
zhang 
flexible new technique camera calibration 
ieee trans 
pattern analy 
machine intell 
sensitivity specificity test cases 
