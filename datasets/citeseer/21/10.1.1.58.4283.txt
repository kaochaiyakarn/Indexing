semantic search unstructured data contextual network graphs aaron john national institute technology liberal education college vermont usa edu acm org 
authors graph algorithm searching potentially large collections unstructured data discuss implementation search engine designed offer advanced relevance feedback features users may limited familiarity search tools 
technique closely resembles spreading activation network model described scott preece uses term document matrix generate bipartite graph term document nodes representing document collection 
graph searched simple recursive procedure distributes energy initial query node 
nodes acquire energy specified threshold comprise result set 
initial results live collections suggest technique may offer performance comparable latent semantic indexing lsi avoiding technique computational pitfalls 
algorithm implementation production web environment discussed 

rapid growth online information proved blessing burden information retrieval systems struggle keep flood new material 
information overload particularly acute academic community domain experts need perform advanced searches frequently lack expertise training needed productive tools boolean query syntax regular expressions 
current metadata creation standards humanities scorm dublin core require intensive human effort institutions costs data markup prohibitive 
situation created urgent need automated search tools search large data collections semantic content 
techniques latent semantic indexing lsi shown great promise enabling kind content discovery clear scale large dynamic document collection 
national institute technology liberal education generous support andrew mellon foundation working usable advanced search tools available students scholars 
initial adapting lsi general led rediscovery search algorithm described shows great promise offering results comparable quality lsi concomitant computational overhead 
describe new algorithm initial implementation open source web search service designed maximum usability 

latent semantic indexing latent semantic indexing lsi vector space technique shown great promise addressing problems polysemy synonymy text collections offering improved recall standard keyword searches 
striking features lsi ability return relevant results queries exact keyword match 
lsi vector model purely mathematical representation indexing technique limited particular language 
shown lsi usefully extended non text domains including log file analysis protein structure prediction 
features vector space models general lsi particular allow design relevance feedback features difficult implement standard search engine 
include find similar links individual documents result set ability run iterative search re querying engine set relevant results 
suitably implemented kinds feedback features reduce eliminate need train users elaborate query syntax 
advantages lsi presents drawbacks 
poor scalability singular value decomposition svd algorithm remains obstacle indexing large collections 
techniques developed making incremental updates scaled collection changes typically exceed certain threshold triggering rebuild 
constraints lsi ill suited kinds large rapidly changing document collections typically web 
disadvantage lsi difficulty interpreting underlying reduced term space 
difficult select optimum number singular values retain svd collection allow domain expert adjustment relevance values reduced space svd calculated 
shortcomings led seek indexing scheme retains advantages lsi presenting fewer computational conceptual obstacles 

contextual network graphs standard step lsi creation term document matrix tdm essentially weighted lookup table term frequency data entire document collection 
lsi matrix interpreted high dimensional vector space 
alternative interpretation matrix possible tdm representing bipartite graph term document nodes non zero value tdm corresponds edge connecting term node document node 
model term connected documents term appears document link term contained document 
weighted frequency values tdm correspond weights placed edges graph 
call construct contextual network graph 
example consider miniature document collection table associated term list table 
table 
sample document collection associated node labels node document content ice appears blue 
fallen snow intermediate state snow ice 
ice shelves occur ice sheets extend sea 
ice sheets sea 
half dense sea water 
chunks ice water 
table 
labeled term list derived collection table 
terms occur documents parent collection 
node term occurrence count ice ice snow ice sheet sea water iceberg sheet represent collection terms documents contextual network topology shown 
fig 

sample contextual network graph indicating connections documents table content terms table similar spirit ir approaches conceptual graphs contextual network graph encode information grammatical hierarchical relationships terms 
structure determined purely term occurrence collection 
edge graph strength assigned magnitude depends choice local global term weighting scheme generating tdm 
constraint weighting schemes edge weights fall interval 
search collection represented graph query node allowing energy propagate nodes edges graph set simple rules 
total energy deposited node graph depend number paths query node relative strength connections paths 
corresponds intuition documents share rare terms semantically related 
enables kind enhanced recall provided lsi query particular keyword may reach document contain word closely linked documents 
initial energy dissipates spreads graph requirement energy dissipate reason constraint edge weights results search localized single region graph important implications scalability 
example search iceberg activating node corresponding query term case node query node assigned default starting energy distributed neighbor nodes algorithm procedure energize energy node energy energy degree node jk energize nk set neighbor nodes weight edge connecting nodes nj nk constant threshold value energy nk data structure stores node energy values duration query 
note version algorithm performs depth traversal graph 
case nk sorted decreasing edge weight traversal best 
algorithm may suitably modified perform breadth traversal optimal traversal strategy topic study 
example query consists single term search terminates energy initial node distributed far go threshold case queries consisting multiple nodes procedure repeated query node turn final energy values nodes graph superimposition individual searches 
note query may consist combination term document nodes 
graph include nodes singleton terms occur document straightforward matter keep list terms substitute appropriate document node singleton term query 
nodes query processed results gathered collection step nodes sorted reverse order accumulated energy 
nodes highest energy values correspond documents terms semantically closest original query 
result set consist document term nodes 
search interface may choose display nearest term results may relevance feedback feature 
addition traversal order tunable parameters algorithm 
starting energy threshold energy arbitrary values larger starting energy lower limit threshold initial node energy spread graph 
mechanism distributing energy neighbor nodes line weighting step line may altered 

preliminary observations ongoing evaluate quality contextual network search cns compared keyword lsi approaches 
preliminary results live collections civil war articles protein sequence data indicate cns offers comparable results lsi search engine built term document matrix 
cns lsi return semantically related documents contain exact keyword match cns tends favor keyword matches lsi 

distributed search algorithm described distributed ways cope large collections improve performance queries containing large number nodes 
distribution techniques complementary 
technique involves partitioning graph subgraphs distributing subgraphs computing cluster controlled master server 
master server full map graph connectivity need store information node energies edge weights 
distributes queries passing slave server responsible portion graph containing query node handling cases searches cross subgraph boundaries 
master server collects results slave servers involved search single result set 
cases queries contain large number document term nodes occur frequently relevance feedback searches searches involve large segments text pasted web form possible improve search speed searching parallel multiple copies graph superimposing resulting node energies 
approach overcomes weakness cns compared vector space techniques limiting factor vector space comparisons time required parse query pseudo document vector search time contextual network graph model grows function number nodes query 
principle possible combine graph segmentation parallel query approach sufficiently large computing cluster 

insertions deletions insertion removal documents collection pose kinds problems cns vector model approaches 
additions graph server simply parse new documents add additional connections document nodes existing term nodes 
singleton terms occur document included graph list singleton terms checked new document parsed see terms need promoted full term node status 
documents removed collection fly appropriate document nodes checking graph new singleton term nodes relegated back singleton list 
depending document normalization term weighting parameters generating term document matrix addition removal nodes graph may require edge weights recalculated entire collection 
calculation onerous kind full rebuild required lsi ways mitigate impact 
edge weights updated rolling basis necessary 

implementation techniques described successfully implemented live internet search engine covering collection civil war era newspaper articles test collections text biological data 
search engines designed modular run multiple servers platforms necessary maximize flexibility 
relevance feedback features possible cns form important part user interface 

system architecture search indexing interface components system decoupled communicate series network interfaces 
means document data search engine user interface need located network 
fig 
schematic document processing search component design system built central document repository stores document term data collection 
documents repository processed initial indexing step described create graph server search component completely independent document repository 
repository implemented mysql database perl interface runs web service listening document requests xml rpc 
graph query server program loads actual contextual network graph searches collection 
server uses simple protocol minimize overhead listens unix socket list query nodes returns list result nodes energy values response 
nodes represented strings form depending node document term node 
graph server asked raise lower minimum energy threshold control sensitivity search 
search server correlates results graph server document data obtained document repository organizes data format suitable display human interface 
search server responsible converting natural language queries node lists pass graph server care details providing short extracts long documents result sets benefit human interface 
server implemented perl runs web service listening queries xml rpc protocol 
user interface take variety forms current implementation runs perl web application 
consists single query box search button relevance feedback features provided part result set 
documents result set displayed clickable find similar link allowing effective horizontal navigation search results 
users document basket session store populate documents encountered course search 
basket find similar link letting users search aggregate documents saved set 
basket metaphor familiar online shopping sites gives users intuitive method performing iterative search collection 
unusual relevance feedback item list similar terms displayed result set 
cns returns document term nodes displaying list nearest terms query trivial 
terms clickable important function keeping users oriented 
glancing list similar terms users get feel semantic neighborhood query 

pre processing assume raw documents repository plain text web markup format xml html 
documents cleaned suite perl regular expressions strip formatting remove markup 
sent appropriate parser 
english language text part speech pos tagger tandem regular expression finding maximal noun phrases generate term list 
traditional list stemming approaches approach allows discriminate polysemous words meaning changes depending part speech fly verb noun extract multi word noun phrases proper names hot rod rip van 
noun phrase extraction greedy recursive single noun phrase parsed multiple terms 
pos tagger uses stored lexicon statistical information word part speech usage english derived penn treebank project annotated corpus text developed linguistic data consortium 
tagger uses stored probability data conjunction bigram hidden markov model hmm pos occurrence assigning tag ti word wi formula ti argmax tj ti wi tj 
metric word morphology supplements hmm words appearing lexicon 
term list derived parsing step generate standard matrix tdm 
implementation weight tdm values formula eij fij gj global term weight determined inverse document frequency fij frequency term document nj document normalization factor cj number words term 
currently evaluating cns lsi results human classified collections trec obtain empirical estimates search quality 
addition ongoing tests pursuing promising directions study 

scalability 
current implementation graph server requires approximately gb ram documents terms running desktop linux server 
currently working implementing distributed search techniques described earlier cluster commodity pcs gigabit ethernet connection field queries large document collections 
time available memory processing speed limiting factor graph size 

representing internal links graph data model allows potential inclusion document document links form internal documents explicitly defined links added collection model human curator 
patterns internal citations document collection previously studied contextual networks provide natural framework combining content similarity 
inherent user defined internal links features difficult represent vector space model 
addition intra document links causes major changes model graph longer bipartite part graph directed 
possible implications changes unclear 
possible conceive internal links term nodes example implementation cross language search 

clustering techniques available segmenting network graph assigning documents content clusters 
currently experimenting ways segment large collections smaller sub collections effort auto categorization text protein domain approaches graph clustering form subject 

non text collections lsi protein domain shown encouraging results prediction protein structure sequence 
reason believe similar results obtain contextual network model allowing larger data collections 

scorm www org specification asp 
dublin core org 
preece scott 
spreading activation network model information retrieval phd thesis cs dept univ urbana il 


deerwester dumais furnas landauer harshman indexing latent semantic analysis journal american society information science pp 


quesada kintsch gomez computational theory complex problem solving latent semantic analysis gray eds 
proceedings th annual conference cognitive science society fairfax va lawrence erlbaum associates mahwah nj pp 

slide presentation reilly bioinformatics conference february 
conferences com cs bio view sess 
berry matrices vector spaces information retrieval siam review 
vol 
pp 


simon zha updating problems latent semantic indexing technical report 
cse department computer science engineering pennsylvania state university 

mez pez pez information retrieval conceptual graph matching lecture notes computer science vol 
springer verlag pp 


university virginia valley shadow project search engine 
mojave cet edu cns uva pl 
pdb toxin search demo 
mojave cet edu cns pl 
steven johnson research notes 
mojave cet edu cns sbj pl 
bader callahan grim krause pottenger role tm collection builder hierarchical distributed dynamic indexing workshop text mining chicago pp 


lingua en tagger perl part speech tagger english text 
search org author 
marcus santorini marcinkiewicz taylor treebank 
linguistic data consortium 
