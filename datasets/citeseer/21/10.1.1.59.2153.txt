approach comparing honeypots fabien pouget thorsten institut eur com bp sophia antipolis cedex france laboratory dependable distributed systems rwth aachen university aachen germany 
research focuses usage honeypots gathering detailed statistics internet threats long period time 
context deploying honeypots sensors different interaction levels various locations 
generally speaking honeypots classified level interaction 
instance admitted high interaction approach suited recording hacker shell commands low interaction approach provides limited information attackers activities 
far exists serious comparison express level information approaches differ 
environment deploying able provide rigorous comparison approaches qualitatively quantitatively 
build interesting classification observed attacks pay particular attention comparison bias introduced packet losses 
proposed analysis leads interesting study malicious activities hidden noise interesting ones 
shows complementarities approaches high interaction honeypot allows control relevance low interaction honeypot configurations 
interaction levels required build efficient network distributed honeypots 
solutions exist observing malicious traffic internet 
consist monitoring large number ip addresses class network large range unused ips 
names describe technique network telescopes internet motion sensor ims :10.1.1.21.6570
solutions consist passive measurement live networks centralizing analyzing firewall logs ids alerts 
websites report trends pouget partially supported french aci collaboration laas cnrs cert supported deutsche forschungsgemeinschaft dfg part software mobile communication systems sans isc 
coarse grained interface counters fine grained flow analysis tools netflow offer readily available source information 
far investigated possibility large number local similar sensors deployed internet 
strongly believe local observations complement global ones listed 
direct analogy weather forecast volcanic eruption prediction global local approaches applied 
consequence way deploying small honeypot environments various locations motivated partners part com project 
main objective gather statistics precise information attacks occur wild long term perspective 
initially high interaction honeypots 
incoming increasing number participants addition hard constraints imposed implementation considered idea deploying low interaction honeypots 
time writing environments different interaction levels running 
invite interested reader look existing publications information point 
important issue addressed deployment bias introduced choice low interaction platforms 
environmental setup gives opportunity rigorous comparison different interaction approaches qualitatively quantitatively 
far comparison exist 
honeypots classified interaction categories concrete justification 
instance admitted high interaction approach suited recording hacker shell commands low interaction approach provides limited information attackers activities 
intends show classification restrictive 
far research objectives concerned approaches value 
contributions show approaches provide similar global statistics information collect 
comparison data collected types environments leads interesting study malicious activities hidden noise interesting ones 
analysis highlights complementarities approaches high interaction honeypot offers simple way control relevance low interaction honeypot configurations effective system 
interaction levels required build efficient network distributed honeypots 
rest structured follows section describes justifies setup distributed honeypot 
environment implemented different ways corresponding distinct interaction levels 
analysis built approaches 
section introduces comparison global statistics obtained means distinct implementations 
particular show similarity information provided environments 
section take closer look activities apparently different platforms 
depth study platforms leads discovery strange attack scenarios require particular attention 
explain extent high interaction honeypots systems optimize configuration low interaction ones 
sections provide rationales com project deploying 
section concludes 
environment setup different levels interaction high interaction experimental setup previous publications experiments called high interaction honeypots 
environment called virtual network built top vmware see 
machines attached virtual ethernet switch supporting arp spoofing 
vmware commercial product enables configure specific needs 
mach windows workstation mach windows nt server mach linux redhat server 
virtual guests built non persistent disks changes lost virtual machines powered reset 
perform regular reboots guarantee virtual machines compromised objective gather statistical data long term perspective 
fourth virtual machine created collect data virtual network 
attached virtual switch tcpdump packet gatherer 
machine vmware host station possible invisible outside 
mach mach run ftp server addition mach provides web server 
logs collected daily transferred centralized secure place 
comparisons deployed high interaction honeypot called 
collected data snort inline alerts 
alerts provide different information raw data see section find explanations information extract quite false positives 
second snort inline drops packets way estimates risk 
reasons prevented making interesting comparisons stage 
refer architecture 
low interaction experimental setup deployed platform called similar emulated operating systems services 
developed open source utilities 
consists modified version honeyd 
switch vmware jargon behaves hub snort inline open source intrusion prevention system ips fig 

environment scheme platform needs single host station carefully secured means access controls integrity checks 
host implements proxy arp 
way host machine answers requests sent ip addresses 
ip bound certain profile personality honeyd jargon 
emulation capacity limited configuration file scripts 
emulates operating systems mach mach mach 
scanned open ports opened ones honeyd configuration file virtual machines 
service scripts available linked open ports port web server port ftp 
consequence seen offering similar simplified behavioral model 
manner connect day host machine retrieve traffic logs check integrity chosen files 
information extraction previously explained dump files periodically collected stored centralized database 
analyzed means utilities additional information brought ip geographical location domain name resolution passive os fingerprinting tcp stream analysis sake conciseness want detail database architecture way obtain information invite interested reader look previous publications described setup detail 
global statistics analysis honeypots seen black boxes describe system internal structure known 
matters device transforms inputs predictable outputs 
case incoming malicious requests input provided replies output 
quantity information honeypot high interaction honeypot 
way quantity information provided honeypot low interaction honeypot 
intuitively expect 
difficult estimate extent brings information 
sections intend qualify quantify information difference 
initial setting environments placed network 
virtual machines mach mach mach adjacent ips say 
similar way virtual machines mach mach mach contiguous addresses resp 

running february 
environment started running july 
technical problem prevented collecting month november 
focus data collected environments august october continuous weeks 
propose section study differences platforms period information stored database see section 
attack categories environments targets attacks 
environment contains virtual machines running different services different oss 
equally targeted 
leads define major categories attacks ones target machine 
called attacks type ones target virtual machines 
called attacks type ii 
ones target virtual machines 
called attacks type iii 
table represents distribution percentage categories environment 
values similar 
attack classification start comparing environments 
type iii attack analysis propose section look type iii attacks 
stem total attacks 
represents number associated sources attack type environment environment total type type ii type iii table 
different attack types observed fig 

attacks type iii french platforms observed environments dark curve light curve days 
curves general shape 
expect difference reason attacks targeting virtual honeypots scans 
scans observed independently platform 
words number scans platforms 
exactly case curves small dissimilarities 
closer look attacks confirms ip sources associated type iii attacks observed environments 
included curve appears classified attacks type iii environment attacks type ii 
cases classified attacks type analysis corresponding packet traffic reveals consist single tcp packet sent target 
happen packets lost due internet imagine packets retransmitted attacker 
validate assumption check bias loss observation observe equal number packet losses platform platform 
addition number supposed scan packet losses distributed virtual machines apparent preferences 
approximation value observe linked estimated tcp packet loss value path attacking machine honeypot environment date 
period time estimated packet loss attacking source honeypots environment loss probability pr getting incomplete scan virtual machines loss experiment identify losses total distinct type iii attacks month observation observed environments 
previous equation equivalent average packet loss remains coherent actual traffic monitoring 
quite low compare global average observed internet traffic report web site 
note site high differences continents 
european traffic susceptible average packet losses continents asia 
assertion experiment assertion necessary deploy honeypots hundreds public ip addresses order identify scan activities large block ips 
addresses contained block sufficient 
large scale scans attacks honeypot machines 
may observe attempts case packet losses appears scanning engines implement packet retransmission processes 
complete analysis observe interesting property common fact virtual machines assigned contiguous ip addresses 
main scanning technique consists issuing requests ip address incrementing ip value 
quantify importance scanning method represent possible orders scanning observed 
give frequency percentage number ip sources targeted virtual machines total number ip sources associated type iii attacks 
type iii attack order percentage order mach mach mach order mach mach mach order mach mach mach order mach mach mach order mach mach mach order mach mach mach table 
scanning order type iii attacks figures remain quite constant computing monthly basis 
attacks targeting machines increasing ip numbers correspond total 
values equal 
important point attacks targeted machines platform different order order respected order sending packets machines platform 
highlights fact scans done order packets may arrive different order platform creating illusion scanning orders 
validated studying source ports attacking machine specially sequence scans honeypot virtual machines 
consists cases arithmetic sequence common difference 
simple observations different correlated sequences targeted virtual machines attacking source ports leads major remarks observe scan activities sweep ip addresses sequentially decreasing order cases 
scans target consecutive ips programmed hit sequentially increasing ip order 
happen order slightly disrupted packet retransmissions 
study different source ports attacking machine confirms non privileged ports sequentially 
scanning machines wait scan finished order target ip 
scanning threads blocking 
words observe temporal periods scanning activities virtual machines source overlap 
intend closer look scanner implementation options order build relationships observed traces 
instance sourceforge project allows variables number concurrent threads delay scanning duration 
type ii attack analysis attacks type ii represent small fraction observed attacks 
explain previous section scanning activities target large block ips addresses insofar tools retransmit lost packets 
observed attacks type ii residues scanning attacks environments incomplete type iii attacks 
remaining interesting type ii attacks ips observed virtual machines environment mach mach 
attacking ips observed environment 
closer look source ports attacking machines leads attacks scan successive ips 
ips targeted mach mach targeted mach 
inversely ips targeted mach mach targeted mach 
seen limitation local honeypot platforms 
able distinguish attacks larger scan hops 
aware tool strategy 
complementary analysis performed means large telescopes 
type ii attacks concern attacks sole windows machines mach mach environments 
instance attack attempts port worm ftp server port worm backdoor 
clearly usual propagation techniques worms 
face attacks acquired knowledge existence windows machines environments random attempts 
observe attempts ports machine 
attacking ips observed environments 
leads second assertion assertion attacks targeting machines specific victim machines high probability residues scanning activities 
type attack analysis categories type far difficult compare environments 
account attacks machine 
represent global characteristics attacks environments 
precise presents geographical location attack sources corresponding type attacks 
horizontal axis top countries 
vertical axis gives number associated attacking sources environment 
gives estimated attacking os passive os fingerprinting techniques 
vertical axis gives number associated attacking sources environment 
general important differences environments 
instance targeted main countries order magnitude france fr china cn germany de united states america country variable months remain coherent environments 
passive fingerprinting analysis confirms similarity attacks environments 
ip sources attack platforms essentially running windows 
complete comparison lists targeted ports platform 
vertical axis shows number associated attacking sources environment 
order identical number attacks ports similar environments 
geographical location obtained means commercial utility attacking countries passive fingerprinting fig 

global statistics comparison fig 

top targeted ports type attacks platform summary type attacks represent lots common characteristics platforms 
hand amount information collected environments totally different 
high interaction platform received packets sent virtual machines 
times received 
quite normal attacks target services microsoft ones see emulated low interaction honeypots 
section intends refined analysis differences mainly due type attacks 
refined analysis different type categories illustrated previous section type attacks similar global statistics environments see figures 
intend limit analysis figures clearly low interaction honeypot high interaction 
complexity configuration justified comparison 
hand number collected packets totally different 
stage guarantee type attacks observed exactly ones observed 
previous statistics tend indicate property propose section refine type attack analysis order check similar characteristics platforms 
setup able distinguish distinct phenomena correct explanations observed type attacks 
group remaining non classified attacks third category 
categories type attacks discussed sections 
sequential scans residue category type attacks 
compared large scanning activities section 
case rare imagine losses happen environment 
simply identified looking common ip addresses environments targeted machine environment virtual machines short period time 
find number corresponding sources type iii attacks average 
validate correctly corresponds packet losses consider period estimated packet loss attacking source honeypots environment loss probability pr observe losses scans approximatively loss loss remains coherent low number cases observe 
category observed complementarities 
single environment allow identification attacks 
random propagation activities second category type attacks imagine 
tools choose random ips propagation process 
worms bots agobot 
choose victims randomly randomly certain ip class instance class favor local propagation quite normal observe ip source belongs attack process 
identify type attacks decided build technique published clustering algorithm allows identifying root causes frequent processes observed environment 
due space limitations refer interested reader detailed description clustering technique 
brief basically gather attacks presenting common features duration attacks number packets sent targeted ports 
generalization techniques association rules mining 
resulting clusters refined phrase distance attack payloads 
summary gather cluster attacking sources attack tool target machine 
consequence tools propagating random ips similar characteristics observed twice environments belong cluster 
type sources precisely characterized clusters ip sources targeted virtual machine attacks single cluster equally distributed virtual machines 
distribution attacks virtual machine homogeneous means observe significant number attacks virtual machines consider attack belongs category call random propagation strategy category 
systematically verified property clusters algorithm table 
consider clusters associated attacks correspond type attacks 
addition clusters random propagation strategies 
remaining observed clusters associated type attacks discussed category 
want point attacks category identified easily platform 
targeted attacks opened issues third category type attacks 
gathers type attacks classified previous categories 
numerous explained 
represented clusters imply dozen attacking sources 
category various attacks interest due originality 
attacks targeted virtual machine environment 
reasons attacks focus machine really worth investigated determine specific service targeted due phenomenon 
give illustrative examples example attacks port target virtual machine mach 
attack observed times different ip addresses august february 
attack source sends average packets mach 
closer look reveals packets tcp source port rst ack flags set 
replies dos attacks web servers known 
summary observed months dos attacks different web servers attacks spoofed mach ip address source port 
regular processes observed platforms developed 
observed processes 
surprisingly attacks occur regularly day day 
surprising dos tools choose static spoofed addresses spoofed ip port hardcoded tool different people bizarre dos attacks observed months part unique process launched targets long period time 
means spoofed address list generated multiple attacks 
regularity process indicates common cause underlying reason attacks 
periodic come ports close environments usually high non privileged ports range 
get amount information targeted environment example targeted port attack mach 
different worms mainly responsible port scans 
uses port identify windows xp systems 
windows xp uses port tcp universal plug play upnp open default 
second worm uses old vulnerability windows xp upnp implementation break systems 
vulnerability discovered windows xp patches long available 
observe cluster associated port 
gathers distinct ip sources targeted virtual machine port sequence 
surprisingly attacks targeted virtual machine months 
match worm propagation scheme scan machines randomly 
addition important note port closed machine 
packets contain payload 
limited half dozen tcp syn packets 
attack considered random insofar implies virtual target 
time writing concrete explanation phenomenon 
noticed administrators incidents mailing lists 
michigan internet motion sensors group notifies observed activities support theory entirely 
due revived threats sockets de trojan yahoo chat non referenced tools upnp exploit 
closer look received packets required stage determine attack 
port close platforms get amount information targeted environment type attacks interesting 
identified related activities tools widespread random propagation 
numbers attacks remain unclassified 
specific platform precautions required understand 
time writing hidden noisy permanent activities really trigger lots attention 
simple honeypots emulating ips allow identification 
preliminary necessary step start depth analysis 
cluster cj type preliminaries compute number nj attacks associated cj environment compute number nj attacks associated cj virtual machine mach compute number nj attacks associated cj virtual machine mach compute number nj attacks associated cj virtual machine mach check nj nj nj nj nj test cluster cj mean variance res cluster cj associated random propagation tools res cluster cj associated targeted attacks closer look packet contents required 
table 
simple algorithm associated type tools having random propagation strategies interaction port bring valuable information attack 
attack specific preliminary knowledge writing simple script correct choice 
controlled environment built observe attack details launched real interactive systems 
second step script developed 
show high interaction honeypots complementary low interaction honeypots indicate services currently interactive low interaction honeypots 
intend section analysis automatic determine services developed means scripts low interaction honeypot get similar amount information 
interaction differences improvements platforms globally targeted way detailed previous sections 
clear collect data high interaction honeypot real services exchange packets attackers 
average times packets collected 
observations section intends show information lacking handled 
specified section platforms similar configurations 
open ports machines opened vice versa 
side sufficient open port order get attack information 
necessary develop simple emulation scripts order enhance environment interaction 
idea attacks interact port important honeyd runs interactive script 
words amount information obtain attacks port lot higher captured port actions undertaken script implemented emulate associated service 
script interaction brought higher level script exists 
obviously attack may require different interaction levels 
instance scans require high interaction open port environments give amount information 
furthermore error consider packets port compare amount information environments 
instance source sends request port waits answer communicate port missing information port closed environment lot important just considering simple request answer port communication port 
consequence clusters introduced section avoid problems determine services enriched 
cluster groups ip sources sharing strong characteristics attack processes 
attacking sources exchanged amount information environment 
interaction get virtual machine weighted frequency attacks involved ports explain 
interaction quantified considering number exchanged packets 
refined payload length account limit analysis simple assumption 
leads algorithm table algorithm launched platform month period 
get results ports simple scripts attached appears behave correctly compared real services running 
netbios ports specially ratio equal 
script emulates services 
clearly acceptable insofar missing large quantity information comparison 
process writing scripts emulate services 
ports 
operation opening ports provides information real services time 
need emulate services 
algorithm gives important hint ports correctly configured low interaction environment 
provides priority list services emulation improved fast possible 
result confirms missing information comes microsoft preliminaries environments virtual machine mj associated port pj gather list clusters cl corresponding attacks virtual machine mj port pj total number ip sources having targeted virtual machine mj threshold compare interactions environments 
cluster cl compute number nl sources belonging cluster cl compute pl total number exchanged packets sources belonging cluster cl compute frequency cluster cl fl interaction estimation interaction estimation pl fl interaction estimation pm fm analysis current implementation port pj virtual machine mj correct interaction port satisfactory 
associated script enhanced 
table 
comparing interactions services 
conclude algorithm highlights important complementarities obtained high interaction low interaction honeypot 
com project previous publications experiments high interaction honeypot 
experiments shown attacks caused small number attack tools stable processes occur wild processes noticed global observations telescopes 
worth deploying local sensors complement existing approaches 
major objective consists getting statistical information attacks 
low interaction honeypots represent suitable solution 
want observe attack steps order get better understanding current malicious activities 
provides strong motivation shows low interaction honeypots brings information high interaction ones comes global statistics attacks 
addition regular comparisons types environments high interaction environment system lead optimization low interaction configuration 
com project aims disseminating platforms motivated partners voluntary basis 
partners invited join project install platform 
take care installation furnishing platform image configuration files 
installation process automatic 
exchange give partners access database enriched information developing dedicated web research faster efficient 
project started triggering interest organizations academic industrial governmental 
hope number partners keep increasing near 
presents important contribution com project 
shows hand high interaction honeypots superfluous context large scale deployment sensors global statistics remain similar 
hand shows vital controlling configuration relevance low interaction honeypots 
leads complementarities high low interaction honeypots increase accuracy information collected simple environments deployed different places 
comparison led interesting analysis collected data 
allows identifying specific attacks weird phenomena shown examples 
second highlights need take account packet losses analysis malicious data 
lead misled 
hope partners join open project com deploying 
acknowledgments authors wish prof dacier pham helpful comments 

caida cooperative association internet data analysis 
internet www caida org 

moore voelker savage 
internet denial service activity 
usenix security symposium august 

song malan stone 
global snapshot internet worm activity 
technical report 
url research arbor net downloads snapshot worm activity pdf 
non disclosure agreement signed protect confidentiality names partners 
morrow 
allow customers traffic 
url www org 

team project 
internet www com 

cooke bailey mao watson jahanian 
understanding distributed placement 
proceedings advances intrusion detection raid september 

sans institute internet storm center 
trusted source computer security certification research 
url isc sans org 

barford jha 
global intrusion detection domino overlay system 


distributed intrusion detection system 
url www org 


network intrusion detection reporting 
url www com 

cisco systems 
netflow services applications 

dacier pouget debar 
attack processes internet 
nato symposium ist april 

pouget dacier 
honeypot forensics 
asia pacific information technology security conference may 

pouget dacier pham 
com advantages deploying large scale distributed honeypot platform 
crime computer evidence conference ecce march 


honeypots tracking hackers 
addison wesley 

dacier pouget debar 
honeypots practical mean validate malicious fault assumptions 
th pacific dependable computing conference february 

vmware 
user manual 
version 
url www vmware com 

tcpdump utility 
url www tcpdump org 

project 
know enemy 
www 
org papers gen 

honeyd homepage 
internet honeyd org 

pouget dacier debar 
foundations development early warning systems 

publisher verlag lncs nato series 

stanford linear accelerator center 
tutorial internet monitoring pinger 
url www slac stanford edu comp net wan mon tutorial html 

internet traffic report 
url www com main htm 

utility 
url sourceforge net doc html 

symantec security response 
worm 
url symantec com data worm html 


worm analysis 
url www com html 

passive os fingerprinting tool 
internet cx 
shtml 

geolocation credit card fraud detection 
internet www 
com 


virus analysis agobot pq 
url www com au analyses html 

spike 
internet lists sans org list may html 

tcp port syn increasing 
internet org lists incidents may html 

security port scanner trojan port list 
internet www 
com trojan list htm 

upnp exploit 
internet www org exploits 

fabien pouget marc dacier 
honeypot forensics 
george andrew clark kathryn kerr editors proceedings asia pacific information technology security conference pages 
