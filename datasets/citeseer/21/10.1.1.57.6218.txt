role classification hosts enterprise networks connection patterns godfrey tan mit mit edu massimiliano poletto mazu networks maxp com john guttag frans kaashoek mit mit edu role classification involves grouping hosts related roles 
exposes logical structure network simplifies network management tasks policy checking network segmentation improve accuracy network monitoring analysis algorithms intrusion detection 
defines role classification problem introduces practical algorithms group hosts observed connection patterns dealing changes patterns time 
algorithms implemented commercial network monitoring analysis product enterprise networks 
results grouping enterprise networks show number groups identified algorithms orders magnitude smaller number hosts way algorithms group hosts highly reflect logical structure networks 
today enterprises internal networks intranets complicated entire internet years ago 
managing networks increasingly costly business cost network problems increasingly high 
managing enterprise network involves number inter related activities including establishing topology 
network topology significant impact cost security performance 
increasingly important aspect topology design network segmentation 
effort provide fault isolation mitigate spread worms nimda code red enterprises segment networks firewalls routers technologies 
establishing policies 
different users network different privileges 
users may unlimited access external networks may restricted access 
users may limited amount bandwidth may consume 
number policies 
monitoring network performance 
complex network suffers various localized performance problems 
network managers detect problems take action correct 
detecting responding security violations 
increasingly networks coming attack 
targets chosen random virus attacks cases picked intentionally service attacks 
attacks involve compromised computers enterprise network 
early detection attacks plays critical role reducing damage 
conducting activities host host basis feasible large networks 
network managers need extract structure networks think decisions larger levels granularity 
today structuring done ad hoc manner relies administrators best guesses computers services users network 
obviously method scaling problems 
presents algorithms partition hosts enterprise network groups way exposes logical structure network 
grouping algorithm classifies hosts groups roles connection habits 
correlation algorithm correlates groups produced different runs classification algorithm 
algorithms provide properties 
guarantee host grouped hosts strongest degree similarity connection habits 

provide mechanism merge groups give network administrators fine grained control merging process meaningful results achieved 

deal transient changes connection patterns analyzing profiled data long periods 

respond non transient changes connection patterns producing new partitioning describing differences new partitioning previous partitioning 

run time grows quadratically number hosts enterprise network 
demonstrate section algorithms reduce number logical units network administrator deal orders magnitude 
algorithms implemented part enterprise monitoring analysis system production large enterprises 
section outlines system algorithms operate introduces example scenario 
section describes models develop practical solutions 
section section explain practical algorithms solving role classification problem 
section presents preliminary results section discusses related 
conclude discussions current section 
system overview role classification algorithms implemented part system designed detect respond security violations large enterprise networks 
networks commonly consist tens thousands computers spread different geographic locations 
security system consists probes central aggregator 
probes analyze packets link links attached send relevant information including ip address port tuples aggregator 
aggregator scalable system consists cpus 
periodically runs analysis algorithms data received probes 
uses role classification algorithms refine analyses allow administrators describe policies 
presents simple enterprise network partitioning computers groups aggregator produce communication patterns observed probes 
communication patterns sales sales eng eng mail web sales database source revision control 
grouping related hosts connection patterns 
edge indicates nodes communicate regularly 
dashed circle represents group boundary 
indicate hosts sales sales communicate servers mail server web server server 
similarly patterns indicate hosts eng eng communicate mail server web server server 
information grouping algorithm logically divide machines groups sales group consisting hosts sales sales ii engineering group consisting hosts eng iii common server group consisting mail web iv sales server group consisting engineering server group consisting 
results grouping algorithm currently major ways 
mazu network monitoring detection system decides host behavior matches expected policy setting partly history host group membership 
example host engineering group suddenly start opening connections server cause alarm 

network administrators review grouping results better understand structure networks get useful insights conducting network re organization tasks consolidating servers network segmentation 
system allows network manager label identified group descriptive roles set policies group 
system continuously monitors communication patterns adjusts groups computers come go flags policy violations raises alerts potential security violations 
information level groups individual hosts network manager able understand process changes alerts easily 
algorithms provide network administrators flexibility control grouping process achieve results highly reflect intuitive notion network structure 
algorithms solely connection patterns hosts set neighboring hosts 
algorithms easily extended information protocols port numbers bytes transferred achieve desired results 
instance network administrators may desire mail web servers put different groups 
case protocol information keep role classification algorithm grouping hosts different sets protocols 
currently exploring ways expand capability grouping correlation algorithms providing network administrators flexibility achieve desired results 
algorithms assume connection patterns hosts highly reflect logical roles play 
networks true algorithms job 
believe hosts typical enterprise network share logical role demonstrate similar connection patterns 
model section develop model thinking grouping problem 
define problem providing model functions parameters adjusted meet various goals 
evaluate instantiations parameters 
set hosts enterprise network 
ji denote number hosts similarity commutative function pairs hosts integer greater equal 
roughly speaking similarity high grouping algorithm place hosts group 
defining similarity efficient compute yields grouping heart problem addressed 
partitioning respects similarity distinct groups similarity similarity similarity similarity extend definition similarity define average similarity host group avg similarity ratio sum similarity number hosts avg similarity similarity jg partitioning respects avg similarity avg similarity avg similarity 
respecting similarity avg similarity sufficient generate useful partitioning partitioning puts nodes group puts node separate group respects similarity 
provide parameter network administrators control aggressive algorithm partitioning groups 
smin similarity threshold integer greater 
partitioning respects similarity smin respects similarity similarity smin partitioning said maximal respect similarity smin respects similarity smin exist partitioning respects similarity smin fewer groups 
adjusting smin gets maximal grouping fewer groups members group similar 
defining similarity connection behavior basis host grouping information easily available just monitoring network 
group hosts need define similarity way captures extent pairs hosts establish connections set hosts 
start defining similarity hosts function number common hosts communicate 
intuitively hosts share logical role communicate similar sets hosts 
connection pair consisting source host address destination host address 
connection set host set fa connection ag 

define relation neighbor true 
extend definition neighbor groups defining neighbor true exists host neighbor host notion connection set provide simple definition similarity similarity jc say similarity equal number neighbors common 
position specify requirements grouping algorithm 
set hosts similarity threshold smin find partitioning maximal respect avg similarity smin 
respects avg similarity 
constraint guarantees host group strongest average similarity 

avg similarity smin requirement guarantees host group sufficiently closely related host group ensuring groups large 

partitioning meets requirements larger average group size 
guarantees groups small 
specification independent definition avg similarity 
networks represented definition avg similarity yields excellent results 
slightly complex definition works better 
definition section 
role classification role classification problem difficult solve ideal situations network shown nodes share logical role communicate identical set machines 
clearly situation reflect connection patterns typical enterprise networks 
major challenges role classification problem 
hosts share logical role may communicate drastically different sets machines 

host may potentially classified role 

grouping results network administrators desire may vary network network role classification algorithm provide flexibility control mechanics meaningful grouping results achieved 
typical network setting technology lab test machine may dedicated single engineer 
lab machines despite sharing role connection pattern different rest lab machines 
able correctly group machines grouping algorithm take account potential roles neighboring hosts comparing neighbor sets 
furthermore hosts may potentially classified role 
instance exist machine network communicates sets machines engineering machines sales machines communicate respectively 
cases connection patterns hosts evaluated carefully ensure host grouped hosts strongest similarity connection habits 
role classification problem trivial aforementioned reasons 
computation similarity measure matter process nodes grouped similarity values node pairs important 
grouping algorithm consists phases group formation phase ii group merging phase 
group formation phase identifies group hosts similar sets neighbors simple similarity measure described section 
purpose group formation phase fold efficiently identify various groups hosts drastically different connection patterns ii prepare second phase algorithm 
formation phase algorithm efficiently find desired partitioning example network may fail networks take account potential roles neighboring hosts explained earlier 
general group formation phase may generate partitioning contains groups desired 
group merging phase decides groups produced formation phase merged sophisticated similarity measure 
phase provides network administrators finegrained control merging process grouping results reflect intuition network structure 
forming groups group formation thought graph theory problem 
connection sets generate neighborhood graph graph node represents host edge weight represents common neighbors hosts 
neighborhood graph captures extent pairs hosts communicate set hosts 
undirected graph communication hosts intranets bidirectional 
certain situations directionality may improve quality grouping results continue investigate issue 
approach grouping problem treat clique problem graph partitioned cliques size edge clique weight greater equal constant clique identified assigns nodes clique group share common neighbors 
approach problematic clique problem np complete ii requiring host pair group exactly common neighbors strong requirement 
approach treat grouping related problem identifying bi connected components 
bcc connected component edges lie simple cycle 
exist disjoint paths nodes bcc 
clique problem bcc solved number nodes edges graph respectively 
nodes bcc need connected directly 
approach 
group formation phase operates follows 
generate connectivity graph conn graph observed connection patterns 

kmax kmax maximum number hosts single host communicates repeat new groups assigned conn graph build neighborhood graph graph 
remove group nodes see 
generate graph 
bcc replace conn graph nodes new group node representing nodes 
label pair idg kg idg unique identifier kg 
kg compute degree similarity groups 
host jc create new group containing described 
algorithm runs iteratively conn graph node remains 
step multiple may identified simultaneously single node part indicating may share multiple roles 
case node part bcc largest size 
bcc exists choose randomly 
iterating high low algorithm associates host hosts strongest similarity 
grouping algorithm minimum number nodes required form bcc 
technically minimum number nodes form bcc allow duplicate edges nodes 
allow isolated nodes connected edge form group 
bcc clique node pairs bcc may edges allowing node pairs share common neighbors group 
nodes bcc disjoint paths successive nodes share common neighbors 
words nodes group demonstrate different ways strong similarity connection habits significantly reducing possibility may serve different roles 
observation major reason believe suitable forming groups 
set hosts placed group nodes representing hosts removed conn graph replaced node called group node representing entire group 
edges connecting group node node hosts group connected 
cases node may connection patterns different nodes node form group 
step forms new group exist nodes number common neighbors greater equal 
set find works various networks 
illustrates evolution grouping algorithm terms graph network depicted 
group formed number hosts sales number hosts engineers 
specificity assume 
shown picture graph con mail web sales database source revision control sales sales sales eng eng eng 
evolution grouping algorithm various values 
tains hosts mail web algorithm puts group 
algorithm identifies additional containing sales machines engineering machines 
bootstrap condition see step algorithm creates groups containing merging groups aforementioned group formation algorithm uses simple definition similarity tends produce groups situations 
consider example network modified sales communicates mail servers web server 
grouping algorithm section create groups sales hosts contains sales contains rest sales hosts 
appropriate probably network administrator want 
group merging phase builds results generated group formation phase 
merges groups similar connection habits way allows users control process meaningful results achieved 
grouping phase merge groups meet requirements similarity requirement 
similarity measure groups exceeds user specified threshold 
connection requirement 
average number connections group comparable 
procedure jg jg return percent procedure kmax max kg kg similarity kmax hi hi return true return kmax hi lo procedure similarity cp jg cp jg common neighbor group min cp jc cp jc return 
pseudo code determining similarity connection requirements 
algorithm repeatedly merges groups meet requirements highest similarity measure groups merged 
value newly merged group set minimum number connections host group 
depicts pseudo code determining average connection requirement similarity requirement 
procedure decides groups meet connection requirement 
requirement keeps group large number connections merging group smaller number connections 
procedure determines groups meet similarity requirement 
hi lo hi lo similarity thresholds set user control merging process 
threshold depends max kg kg hi hi constant intended define kg value high 
similarity threshold merging groups higher groups high kg value groups member hosts share high number common neighbors 
merging groups change relationships groups way induces additional undesirable merges 
consider groups example network illustrated 
notice large similarity measure group mail web group large 
similarly large group highly similar mail web group 
groups merge effectively cause sales group engineering group merge resulting partitioning groups containing servers containing hosts 
situations grouping undesirable network administrators lose important separation sales machines eng machines 
reasons groups high kg values required higher similarity measure merge 
discuss best choose constants section 
similarity computes similarity connection patterns groups 
cp returns total number connections host group 
groups considered similar common neighboring groups similar average numbers connections 
example set neighbors subset set neighbors increases desirability merging groups 
average numbers connections quite different desirability merging lessened 
role correlation time connection habits may evolve new servers employees added existing ones leave 
hosts may behave result victims denial service dos attacks 
due behaviors grouping algorithm may produce different set groups produced algorithm days ago 
explained section grouping algorithm assigns integer id group hosts identifies 
guarantee sets ids produced runs grouping algorithm correlation 
situation clearly undesirable users may want associate logical names policy settings group ids preserve group specific data executions grouping algorithm various times 
section describe detail group correlation algorithm takes sets results produced grouping algorithm correlates ids set groups set resulting groups id machines groups highly share logical role 
challenges rest section assume exists unique host identifier changes 
note ip address may dynamic host control protocol dhcp host ip address may change time 
smaller networks simple solution dns names unique identifiers dynamically updating changes ip addresses may sufficient 
problem assigning unique identifier host enterprise networks scope 
connection habits host may change result events new host arrivals ii existing host removals iii role changes existing hosts 
due combination events existing hosts may communicate different sets hosts results grouping algorithm events may different new groups formed ii existing groups deleted iii member compositions groups change iv connection sets groups change 
changes affect hosts directly involved aforementioned events hosts connection habits changed logical sense 
hypothetically know exact sequence single change event happened executions role classification algorithm results execution incrementally updated achieve new results 
having change log impossible complicate network data gathering process 
importantly detailed change log lead correct id correlations 
consider example network 
assume sales eng switch roles result switching jobs changing machines 
sales communicates eng communicates 
change log connection sets change reality logical roles changed 
difficulty distinguishing changes connection patterns primary causes result differences group formations executions grouping algorithm 
furthermore may natural changes connection patterns nodes 
instance existing server machine may replaced new machines load sharing client machines 
logical roles client machines changed observed connection patterns 
rest section describes role correlation algorithm rely change log uses set information connection sets available grouping algorithm 
role correlation algorithm correlation algorithm operates comparing results executions grouping algorithms 
group sets generated grouping algorithm time respectively 
correlation algorithm updates id set idg idg considered represent logical role 
specifically connection patterns members similar 
groups correlation algorithm correlates idg idg meaningful manner allow applications preserve data specific particular group 
role correlation algorithm isolates primary events node arrivals removals directly affects connection habits groups identifies nodes changed neighbors heuristically computes time varying similarity connection habits groups formed times assigns idg idg role hosts terms connection patterns considered identical role hosts correlation algorithm eliminates differences host sets compare connection patterns meaningfully 
algorithm computes set nodes existed time removed time set nodes appear time 
new nodes removed deleted nodes removed changes connection set host direct result changing connection patterns host neighbors existed time 
second algorithm heuristically identifies set nodes play logical roles say nodes highly machine hasn changed logical role identical connection sets 
specifically fh explain shortly fact host advantage computing time varying similarity measure 
role correlation algorithm determine groups group heuristically computing time varying similarity measure comparing pre defined threshold 
group correlation algorithm operates follows 
group identify group strongest timevarying similarity groups ii average number connections hi percent average number connections 
group pair remain uncorrelated decide represent logical group similar connection patterns neighbor groups neighbor groups 
step decides groups identical time varying similarity measure 
section compute similarity measure average number connections groups common neighbors 
finding common neighbor set trivial 
simply assume neighbor neighbor host host identifier 
techniques identify common neighbor set neighbor shares host identifier neighbor considered highly host assume neighbor way neighbor pairs considered highly host assume neighbor way condition true 
connection set size hi percent neighbor connection set size closer algorithm computes time varying similarity measure neighbor pair meets aforementioned requirements minimum average number connections sum similarity measures common neighbor pairs bounds specified thresholds algorithm declares groups mean group 
results section evaluate performance algorithms traces gathered day corporate networks 
show algorithms operate networks examine effects userdefined thresholds results role classification algorithm 
call test networks mazu 
mazu part corporate network mazu networks cambridge ma 
consists hosts including engineering workstations servers laptops 
mazu develops various software products area network security monitoring 
network consists hosts including workstations servers ip phones 
privacy reasons remain anonymous 
effectiveness grouping algorithm evaluate effectiveness role classification algorithm comparing groups formed algorithm logical roles hosts play determined knowledgeable network administrators 
experiments noted set userdefined thresholds hi lo hi 
examine thresholds affect results sections 
shows groups formed role classification algorithm running mazu data configured default parameters 
circle represents group lists members connections groups 
possible indicated logical role host obtained asking mazu network administrator 
course logical information constructing grouping 
observe role classification algorithm placed engineering eng machines single group 
note number connections engineering host varies 
similarly machines sales management admin operations ops placed single group 
largest group contains new machines test machines lab 
hosts identified engineering machines placed group group 
reason machines communicate set hosts engineering machines group communicate 
shown engineering machine group average connection group consists unix mail server connection group consists source revision control server shown 
hand sales host group communicates microsoft exchange server nt sever group unix mail server source revision control server 
fact just connections group groups 
engineering hosts connection patterns similar sales hosts grouped accordingly 
probably machines engineering managers perform tasks coding exchange mail server unix mail server 
perfect knowledge logical structure network knowledge quantify resulting quality groups produced grouping algorithms 
simple effective metric cluster validation literature rand statistic testing pair objects belongs group decided grouping algorithm knowledge 
partitionings hosts produced grouping algorithm knowledge respectively 
ss sd ds dd numbers host pairs belong group group different groups different groups group different groups respectively 
sd ds indicative different rand statistic ss dd ss sd ds dd 
higher value similar 
mazu network able ascertain logical roles hosts 
worked closely mazu network administrator obtain ideal partitioning hosts 
find partitioning produced grouping algorithm default parameters achieves ss sd ds dd 
shows results grouping algorithm reflect high degree intuitive notion underlying structure network 
note reason having relatively high sd algorithm identifies subsets hosts large groups separate groups 
instance grouping algorithm produces different groups containing single eng machine putting group shown 
eng machines total number connections far greater average number connections host group 
distinction may prove useful certain situations 
table lists largest groups produced running grouping algorithm network 
relied information generated network administrator help understand groupings generated algorithm matched log group unix mail comm group group group group group group group mazu nt ms exchange comm group group group group group group group group group group group group group group group group new machine new machine new machine new machine new machine new machine new machine lab lab lab lab lab lab lab lab lab lab new machine lab new machine build lab lab lab lab lab lab comm group group group group group group group eng eng eng ops eng eng eng eng eng eng eng comm group group group group group group group group group group group group group sales admin sales eng admin sales eng admin test bed ops admin ops eng admin eng comm group group group group group group group group group group group group 
grouping results data gathered day mazu 
number parentheses group id group kg number host count host connections 
line comm denotes neighbor group average number connections group neighbor 
ical structure network 
group consists desktops ip addresses managed dhcp server 
machine group communicates approximately machines group vice versa 
pattern suggests appropriate grouping algorithm combine machines group static ips group 
machines groups run microsoft windows 
high number connections groups due windows file sharing uses netbios network protocol 
file sharing creates large number connections hosts groups groups little intra group communication 
continue investigate interesting relationship groups 
striking proof need better analysis tools network administrators talked don know groups partitioned way 
grouping algorithm correctly classifies ip phones group 
group consists web servers servers desktops group regularly communicate 
group largest group members 
machines group single connection role name idle host opens connections machines 
help currently investigating host scans machines network 
example role classification algorithm applied understand networks detect anomalous behavior 
table summarizes grouping results networks 
observe number groups network times smaller number hosts 
unfortunately rand statistic quantify quality groups produced grouping algorithm don perfect knowledge logical roles machine network 
network administrators report find useful consistent intuitions networks 
process analyzing larger network owned consists hosts 
effectiveness correlation algorithm subsection shows specific scenario role correlation algorithm associates new groups group old unix mail comm group group group group group group group old new mazu nt ms exchange comm group group group group group group group group group group group group group group group group old new machine new machine new machine new machine new machine new machine new machine new machine lab lab lab lab lab lab lab lab lab new machine lab lab build lab lab lab lab lab lab comm group group group group group group group old eng new eng eng eng ops eng eng eng eng eng eng eng comm group group group group group group group group group group group group group old sales sales eng admin sales eng admin test bed ops admin ops eng admin eng comm group group group group group group group group group group group group host previous new role role unix mail ms exchange ms exchange unix mail mazu nt mazu nt eng admin 
grouping results mazu network changes see table connection patterns 
number old represents id correlated group shown 
group id members logical role idle dhcp desktops servers ip phones desktops table 
largest groups classified network consists hosts 
logical role identified knowledgeable network administrators 
existing ones appropriate way 
lists scenario investigate 
mazu network swapped roles unix mail ms exchange switching ip addresses 
replaced old nt server called mazu nt new server 
removed old admin machine brought new eng machine 
specific scenario just possible ones includes types changes happen real network 
modified connection patterns inputs role classification algorithm 
role correlation algorithm correlated new grouping results original results 
group new results correlated old group 
depicts groups affected changes 
observe member compositions groups change ones 
unix mail ms exchange correctly identified fashion despite role reversal 
new nt server new nt server appropriately takes place old 
similarly new eng host grouped eng machines 
despite various changes connection patterns role correlation algorithm able correctly associate new group existing 
continue investigate limits role correlation algorithm rigorous changes connection patterns 
configuration algorithms internal constants believe sensitive particular network connection patterns 
group formation phase role classification algorithm see section requires constant keep host forming groups hosts fraction number connections 
group merging phase keeps groups merging average number connections group see 
set 
experiments mazu networks indicate default values different networks 
believe general necessary adjust constants 
plan expose parameters network number groups similarity threshold mazu 
number groups vs lo number groups threshold mazu 
number groups vs hi tors adjust similarity thresholds achieve grouping results reflect intuition network structure 
effects similarity thresholds subsection examine choice user defined thresholds lo hi hi affect number groups formed role classification algorithm 
recall groups merged similarity measure lo furthermore associated groups hi merged similarity measure hi require lo hi 
illustrates lo affects total number groups formed mazu networks 
number groups increases lo large lo value keeps groups merging result total number groups remains large 
number groups may increase smoothly increase lo instance steeper incline knee number groups network lo increased 
reason increase lo causes groups high numbers connections split longer meet stronger similarity requirement merge 
turn causes neighboring groups split 
extent splits occur varies network network 
knee curve indicates algorithm expose logical structure network significantly different manners 
consider network 
lo low mail web placed group sales engineering machines placed 
cases grouping appropriate achieved 
network administrators compare grouping results sides knee decide better suits needs 
experiments show long hi changes hi hardly affect grouping results 
suggest hi fixed 
hand choice hi significant impact probably vary network network 
hi set maximum number connections host similarity measure hosts compared lo hi similarity measure compared hi ideally hi set value partitions hosts network groups containing machines containing 
shows hi affects number groups formed 
data points number groups grouping results identical 
clearly grouping results change mazu network hi 
similarly grouping results hardly change network hi 
implies difficult find appropriate hi particular network 
default set hi believe value suitable networks 
currently working automatically setting hi run time table shows time taken run role classification algorithm mazu networks 
performed experiments linux machine equipped ghz intel xeon processor gb memory 
run time achieved algorithms grows quadratically number nodes acceptable commercial enterprise network monitoring analysis tools 
continue improve performance algorithms 
related described implemented part click modular router system easy build efficient packet processing devices commodity pc hardware 
grouping network hosts groups run time mazu table 
summarized grouping results mazu networks 
gorithm requires information connections hosts obtain data variety sources summary formats netflow packet level tcpdump 
part role classification algorithm viewed data clustering algorithm 
data clustering active area research decades known difficult problem combinatorially 
techniques cluster data vary widely assumptions contexts specific application domains existing techniques specifically developed pattern recognition image analysis 
general data clustering algorithm attempts cluster data points patterns represented vector real numbers 
patterns similar clustered 
popular metric similarity measure euclidean distance 
known clustering technique hierarchical agglomerative clustering technique 
idea merge clusters pair wise similarity measure patterns 
merging process stopped predefined similarity thresholds 
aspect group merging phase role classification algorithm classified hierarchical agglomerative clustering technique 
main reason traditional data clustering algorithms easily extended application domain difficult represent connection pattern host vector numbers way widely euclidean distance measure similarity connection patterns sense 
furthermore leverage communication patterns typical enterprise networks client server communications achieve meaningful grouping results 
note traditional data clustering techniques deal temporal correlation clusters role correlation algorithm 
role classification algorithm applicable network intrusion detection 
example grouping information provides context intrusion detection systems ids help determine unusual potentially suspicious certain network behavior see section 
explained section role grouping wellsuited improving network monitoring policy management 
entire industry caters enterprises network management needs literature devoted network monitoring traffic reporting performance measurement 
differs significantly 
commercial network management systems primarily integration alerting tools intended provide operators unified view disparate devices network 
serve conduits raw data extract higher level semantics role relationships 
academic focused network monitoring techniques performance measurement interpretation data generally left humans 
tool help operators understand networks network visualization 
visualization focuses graphic design automated layout algorithms help users digest vast amount data generated network monitoring tools 
grouping algorithm techniques notion logical structure network 
complement grouping exposing grouping information user grouping information better decisions visual layout 
summary practical algorithms grouping correlation group hosts enterprise network roles observed connection patterns 
algorithm partitions hosts network groups connection data 
second algorithm meaningfully correlates results obtained running algorithm different times account evolution connection patterns time 
knowledge problem automatically grouping classifying hosts behavior network addressed 
formulates problem presenting model addition concrete algorithm specifications 
general framework developed accommodates classification algorithms addition ones described 
grouping hosts connection habits exposes logical structure network serve improve understanding network simplify variety network management tasks 
improve accuracy automated tools systems network monitoring intrusion detection 
experience algorithms corporate networks hosts hosts indicates 
easy tune produce results meaningful consistent intuition experienced network administrators 
importantly experience corporate networks shown automated classification algorithms play important role assisting network administrators 
algorithms fairly efficient performance remains practical networks hosts 
remains done 
plan continue improving performance algorithm 
ideal solution better quadratic time complexity eventually limiting factor large networks 
explore definitions host similarity grouping 
instance consider incorporating services tcp udp port information protocols definition connection web server grouped mail server 
addition explore applications automatically derived grouping information include network management provisioning security 
becker eick wilks visualizing network data 
ieee transactions visualization computer graphics 
cert coordination center 
cert advisory ca code red worm exploiting buffer overflow iis indexing service dll july 
cert coordination center 
cert advisory ca nimda worm 
www cert 
org advisories ca html september 
cheswick bellovin firewalls internet security repelling hacker 
addison wesley 
cheswick burch mapping visualizing internet 
proceedings usenix annual technical conference san diego ca june 
cisco systems 
cisco ios netflow 
cisco com warp public netflow 
cisco systems 
dynamic 
cisco com cc td doc product lan cat rel config htm 
computer associates international 

cai com 
cormen leiserson rivest algorithms 
mit press mcgraw hill 
denning intrusion detection model 
ieee transactions software engineering feb 
eick wills navigating large networks hierarchies 
proceedings ieee conference visualization pp 

vazirgiannis clustering validation techniques 
journal intelligent information systems 
harrison mitchell dock pong flexible network services monitoring system 
proceedings usenix th system administration conference lisa viii san diego ca sept 
hartigan clustering algorithms 
john wiley 
hewlett packard 

hp com 
hubert arabie comparing partitions 
journal classification 
international business machines 
tivoli software 
tivoli com 
jacobson leres mccanne tcpdump 
www nrg ee lbl gov 
jain murty flynn data clustering review 
acm computing surveys 
keys moore koga claffy architecture coralreef internet traffic monitoring software suite 
pam workshop passive active measurements apr caida 
www caida org tools measurement coralreef 
kohler morris chen jannotti kaashoek click modular router 
acm transactions computer systems august 
mukherjee heberlein levitt network intrusion detection 
ieee network 
flexible network monitoring platform 
proceedings usenix annual technical conference san diego ca june 
plonka network traffic flow reporting visualization tool 
proceedings usenix th system administration conference lisa xiv new orleans la december 
sipser theory computation 
pws publishing 
snoeren balakrishnan endto approach host mobility 
proceedings acm conference mobile computing networking boston ma 
tarjan data structures network algorithms 
society industrial applied mathematics 
remote network monitoring management information base version 
network working group rfc jan 
