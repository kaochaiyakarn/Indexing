collaborative filtering maximum entropy dmitry pavlov david pennock lee giles describe novel maximum entropy maxent approach generating online recommendations user navigates collection documents 
show handle high dimensional sparse data represent collection ordered sequences document requests 
representation maxent approach advantages naturally model long term interactions dependencies data sequences query model quickly learned method applicable web servers obtain empirically high quality recommendations 
maxent learning computationally infeasible implemented straightforward way explore data clustering algorithmic techniques learning practical high dimensions 
methods combining predictions maxent models learned different clusters 
conduct offline tests months worth data researchindex popular online repository computer science documents 
show maxent algorithm arguably accurate recommenders compared techniques correlation mixture markov models mixture multinomial models individual similarity recommenders currently available researchindex various combinations current researchindex recommenders 
related recommender systems attempt automate process word mouth recommendations community 
typical application environments dynamic respects users come go users preferences goals change items added removed user navigation dynamic process 
recommendation domains high dimensional sparse tens hundreds thousands items known particular user 
consider instance problem generating recommendations researchindex citeseer online digital library computer science papers receiving thousands user accesses hour 
site automatically locates computer science papers web indexes full text allows browsing literature citation graph isolates text citations services 
gives typical screen shot document details page researchindex 
shown title authors download options number similarity recommenders predicting user documents possible interest features current document 
archive contains documents including full text document citation links documents wealth user access data 
documents pavlov yahoo 
done nec laboratories america 
pennock senior research scientist services 
giles pennsylvania state university 
www researchindex com searching world wide web lawrence giles researchindex wysiwyg citeseer nj nec com lawrence searching html searching world wide web corrections citations steve lawrence lee giles science home search context related search engines irregular indexing date index fraction web 
metasearch coverage 
view download nec com lawrence ps gz plg uwaterloo ca cs lg ps cached ps gz ps pdf djvu image update help nec com homepages homepages lawrence giles update links coverage recency major world wide web search engines analyzed yielding surprising results 
coverage engine significantly limited single engine indexes third indexable web coverage engines investigated varies order magnitude combining results engines yields times documents average compared results engine 
analysis overlap 
update context citations problem 
general purpose search engines cover limited portion web take months update new information :10.1.1.38.5499:10.1.1.136.4322
solution build greater variety special purpose search engines react quickly changes 
indexing approach increasingly falls ort index reasonably large share accessible information 
new approaches hierarchical distribution index data smart incremental updates data 
cited browsing semi structured texts web formal correct design evaluation web prefetching caching techniques davison correct survey rdf data web eberhart correct active bibliography related documents adaptive web page recommendation service balabanovic correct geometric assembly planning wilson correct generalising techniques type debugging bruce correct similar documents text searching web general scientific information access lawrence giles correct efficient identification web communities flake lawrence giles correct power play efficiency forecast accuracy 
pennock lawrence 
correct related documents citation anatomy large scale hypertextual web search engine brin page accessibility information web context lawrence giles www com authoritative sources hyperlinked environment kleinberg bibtex entry update lawrence giles 
searching world wide web 
science 
citeseer nj nec com lawrence searching html article lawrence searching author steve lawrence lee giles title searching world wide web journal science volume number pages year url citeseer nj nec com lawrence searching html rate article best comment article am fig 

typical screen shot document details page researchindex 
user wealth information document recommendations possible documents interest 
accesses user average user document data matrix exceedingly sparse challenging model 
researchindex data rich data source properties typical recommendation application areas believe methods little adaptation domains 
conceptually different ways making recommendations 
content filtering methods recommend solely features document showing documents written author documents textually similar 
methods shown researchindex 
collaborative filtering methods assessing similarities users overlap document requests recommending user documents minded users accessed previously 
common measures similarity users include correlation mean squared error vector similarity bayesian similarity measures 
approaches include application statistical machine learning techniques bayesian networks dependency networks singular value decomposition latent class models 
currently researchindex employs similarity recommenders content 
hand collaborative filtering algorithms user specific context order independent rank recommendations depend context user current navigation recency effects 
objective design superior complementary model recommendation algorithm researchindex tuned particular user hand takes documents greater account lead user far astray current search goal 
compare probabilistic modelbased collaborative recommenders standard correlation method similarity recommenders currently available researchindex 
probabilistic formulation recommending task posed document requested user history document requests user session 
formulation allows number choices model best maximum entropy maxent approach explicitly models time user associated set sessions session modeled ordered time sequence document accesses 
approach aligned efforts model recommendation problem sequential static problem 
maxent model effectively estimates probability visited document visited document bigrams past indicative documents triggers 
knowledge application maxent collaborative filtering published formulations accurate recommendations context dynamic user session 
implemented evaluated probabilistic models mixture markov models mixture multinomial models 
section ii describe maxent markov multinomial models detail 
simplest accurate recommendation algorithms correlation employ baseline 
compare similarity predictors available researchindex including merged combinations predictors take users navigation histories account 
researchindex contains documents actively accessed slightly half requested data set 
face problem fitting distribution variable takes order values 
able fit markov multinomial mixture models available data directly despite huge scale 
maxent model feasibly learned entire data set due high computational cost 
develop greedy hierarchical approach clustering provides feasible implementation 
clustering allows overcome sparsity high dimensionality data reducing original problem set smaller subproblems corresponding clusters 
describe recombine cluster specific models order recommendations entire data set allow direct comparison non clustering approaches mixture models correlation similarity recommenders 
contrasts previous provided cluster recommendations 
algorithms trade accuracy speed memory 
results demonstrate maxent approach offers best performance profiles 
maxent accurate model approaches accurate correlation orders magnitude faster correlation 
maxent compares favorably current similaritybased recommenders researchindex 
significant test data biased favor similaritybased recommenders recommenders installed running data generated 
contributions summarized follows represent data collection ordered sequences document requests allows model longterm interactions dependencies data sequences 
novel maximum entropy approach generating online recommendations suggest document clustering approach speeding training model 
compare maximum entropy approach mixture multinomial models mixture markov models correlation best widely collaborative filtering recommenders similaritybased recommenders currently available researchindex combinations similarity recommenders 
offline experiments months worth data researchindex show maxent allows fast model querying relatively compact performs better competitors terms accuracy 
rest organized follows 
section ii give descriptions probabilistic models motivate choice maximum entropy describe features learning 
section iii presents greedy algorithm clustering documents describes clustering helps decompose original prediction task order render maxent learning computationally feasible 
experimental results comparisons section iv 
section draw ponder 
ii 
probabilistic models assume data set consisting ordered sequences fixed alphabet 
refer individual items alphabet documents simply items 
document define history far observed ordered subsequence current sequence 
prev observed document task predict document history intend accomplish task learning probabilistic model available training data 
explore alternatives absolutely precise write data simplicity omit data conditioning 
mixture multinomials mixture multinomials essentially prescribes disregard sequential information treat available document accesses history bag items nc kp nt kt nc number mixture components kt probability document number accessed nt number times document number accessed fitting model done expectation maximization em algorithm described 
number parameters model linear number documents number mixture components 
mixture markov models order markov model main assumption current document depends history observed document prev equations defining mixture markov models follows nc kp equation just standard equation mixture second equation uncovers component modeled probability observing document history probability observing transition document number document number history 
document index model learned em algorithm 
number parameters quadratic number documents linear number components 
nc model reduces regular markov model single component mixture 
note regular markov model depends called bigrams order markov terms frequencies pairs consecutive documents 
trigger maximum entropy model distribution modeled maximum entropy distribution 
main motivation maximum entropy estimation combine attractive features markov multinomial models 
particular believe document prev requested immediately prior influence reason essential model sequence information pair prev markov model 
hand believe documents prev influence want sophisticated multinomial model essentially zeroth order model 
higher order markov model probably suffice afford build curse dimensionality 
restrict models reliably estimated low order statistics look naturally lead consider maximum entropy model 
select flavors low order statistics features 
bigrams order markov terms type triggers 
order introduce long term dependence documents occurred history session define trigger pair documents substantially different 
measure quality triggers order rank compute mutual information events 
discard low scoring triggers retain bigrams 
note quantity quality selected triggers depends length average transaction document requests see table ii choose maximum length history purposes finding informative triggers 
set features bigrams triggers case maximum entropy objective function shown done lead form conditional maximum entropy model exp sfs fs features normalization constant ensuring distribution sums exp sfs 
set parameters needs set equations restrict distribution expected value feature observed training data fs fs document training data 
lhs equation represents expectation normalization factor feature fs respect distribution rhs frequency normalization factor feature training data 
exist efficient algorithms finding parameters generalized improved sequential conditional iterative scaling algorithms known converge constraints imposed consistent 
fairly general assumptions maximum entropy model shown maximum likelihood model 
employing gaussian prior zero mean parameters yields maximum aposteriori solution shown accurate related maximum likelihood solution smoothing techniques maximum entropy models 
gaussian smoothing experiments maximum entropy model 
iii 
dimensionality reduction clustering mentioned section models mixture markov multinomial models fit high dimensional data directly em algorithm 
depending number selected features learning maximum entropy model directly raw training data take months computation 
goodman arrives similar 
shown problem solved employing clustering 
discuss simple fast greedy clustering algorithm 
show nice feature algorithm finds topically related clusters 
discuss combine maximum entropy models learned different clusters order provide global recommendations 
clustering user navigation goal clustering user navigation patterns maximize probability document cluster requested user session leave consist documents 
intuition relatively small time frame users interested single topic succeed finding topically related clusters achieve goal 
looking contents individual document user queries take purely collaborative approach cluster documents solely user navigation sequences 
order come clustering scanned processed training data pair consecutively requested documents computed count 
gathered statistics bigram counts 
bigram counts fairly sparse document incoming outgoing traffic clustering data challenging 
tried pagegather algorithm clustering bigrams 
idea pagegather create attribute interaction graph bigrams identify cliques graph known techniques jointree clustering 
algorithm returned large clique lot smaller ones prefer set clusters balanced sizes 
decided employ straightforward hierarchical greedy algorithm pseudocode looks follows input bigrams counts number clusters output set clusters 
algorithm 
nc 
set jb frequent bigram 
docs docs transitions 
unassigned nc 
nc 
nc new cluster 
unassigned 
nc nc 
unassigned 
nc nc 



goto 
return algorithm starts empty clusters cycles documents picking pairs documents current highest joint visitation frequency prompted bigram frequency lines 
documents selected pair unassigned new cluster allocated lines 
documents selected pair assigned previous clusters second document assigned cluster lines 
algorithm repeats lower frequency long 
clustering assume user requests document th cluster considerably prefer document prev data assumption reasonable construction clusters represent densely connected terms traffic components traffic clusters small compared traffic cluster 
previous results described obtained clustering 
broke individual user sessions consisted documents belonging cluster 
problem reduced series prediction problems cluster 
studied clusters trying find documents cluster topically related 
ran code previously developed nec labs uses information gain find top features distinguish cluster rest 
table shows top features created clusters 
top features quite consistent descriptors suggesting session researchindex user typically interested searching topically related documents session defined 
straightforward greedy clustering algorithm successful finding attractive topically related clusters 
combining predictions different clusters order able predictions raw test data need ability combine predictions learned maximum entropy models different clusters predictor unclustered data 
idea borrowed goodman 
consider arbitrary clustering set documents document belongs cluster 
probability represented table top features clusters 
cluster agent agents behavior autonomous agent agent 
cluster training clustering distance classification kernel svm support cluster web documents query web queries pages web engines 
cluster packet fast routing address network ip packets speed 
cluster transform channel coding rate compression images coefficients 
cluster detection agents security intrusion detection host 
cluster traffic rate packet long wide scheduling service qos 
cluster mobile wireless protocol service services location 

equality just rule full probability second equality holds document unique cluster assignment 
scheme section iii greedy clustering directly applicable setting 
maximum entropy model represent cluster 
remaining question learn weights 
goodman suggests learning separate maximum entropy model represent weights 
ad hoc approximation scheme works reasonably practice 
recall document associated cluster 
scan history accumulate frequency cluster represented document occurred instance documents cluster get non zero weight predictions half documents half predictions clusters weigh equally 
experimental results technique combining predictions 
iv 
experimental results comparisons preprocessing researchindex data obtained log file recorded month worth researchindex data roughly viewed series requests time user document 
chronologically partitioned log roughly training requests covering days test requests covering days 
preprocessed training test sets follows 
document indexed researchindex assigned unique document id 
user accesses site cookie enabled browser identified new returning user activity recorded server side unique user id uid time stamp tid 
processing step aggregated requests uid broke sessions 
fixed uid session defined sequence document requests consecutive requests seconds apart 
experiments chose user inactive seconds request considered mark start new session 
processing step included heuristics identifying discarding sessions belonging robots obviously contaminate browsing patterns human users collapsing consecutive document accesses single instance document objective predict interests user currently requested document getting rid documents occurred just log discarding sessions containing document 
preprocessing step data represented collection ordered sequences document requests possibly multiple sequences user 
models recommenders took data input 
properties data described table ii 
parameters competing models performed clustering training data set greedy algorithm described section iii 
maximum entropy model learned separately cluster bigrams top triggers retained evaluation discussed section ii 
global predictions maximum entropy model test data obtained combining individual cluster maximum entropy models described section iii 
compared maximum entropy approach models single component markov model mixture markov models components mixture multinomials components correlation method individual similarity predictors researchindex merged similarity predictor described 
computation reasons optimize adjustable parameters models number components mixture variance prior maximum entropy models number clusters 
list similarity recommenders available researchindex 
detailed descriptions active bibliography finds documents similar citations close sense word frequencies sentence similarity displays documents significant number identical sentences text similarity recommends documents similar current terms word occurrences table ii statistical properties training test data experiments 
training set test set total number users total number documents average requests user standard deviation requests user minimum requests user maximum requests user users viewed displays documents requested users visited current document site shows documents listed web site current document cited lists documents cite current citation recommends documents cited current document cites displays documents cited current document 
lists recommendations individual similarity predictors populated information currently stored system cases top recommendations document recommender 
call researchindex merge recommender obtained pulling similarity recommenders essentially corresponds currently available recommending system researchindex 
evaluation metrics models trained training data evaluated test data 
evaluation performed scanning sequences document requests document document document sequence predicting identity document 
average height predictions test data main evaluation criteria 
height prediction corresponds rank requested document recommendation list model recommender 
formal definition follows 
assuming probability estimates available model fixed history possible values sort descending order find distance terms number documents requested know test data top sorted list 
height tells deep list user go order see document interests 
height perfect prediction requested document list 
researchindex recommenders order predictions stored system 
document specific recommender predictions occurrences document test data height set infinity 
comparisons different recommenders easier binned heights predictors 
bins intervals 
recommenders bins computed statistics hits total number recommendations falling bin normalized total number recommendations height average height predictions bin 
best performing model place predictions inside bins smaller values bins average heights low possible 
note hits statistics primary comparison height statistic plays role ranking recommenders similar hits ratios 
primary goal experiments establish competing recommending strategies provides best accuracy terms hits height statistics 
compared recommenders respect average online time total memory taken generate prediction 
time essential characteristic current implementation researchindex ignores recommendations take seconds 
memory important principle accurate reasonably fast recommending system reside separate computer memory resources available recommending 
expectation models competitive similarity recommenders respect memory small lists predictions document model attribute interactions quite expensive 
simple example consider case modeling attributes roughly 
bigrams take quadratic memory number tributes result roughly bytes gigabytes 
luckily see bigrams counts need stored 
hand keeps numbers document case similarity recommenders result bytes megabytes 
time taken generate recommendations probabilistic model quite high 
operation amounts sequentially generating sorting resulting list 
important role reducing time requirements probabilistic models belongs selecting limited set candidates depending selecting candidates set non obvious certain models straightforward review choices notable exception dependency networks capable generating predictions simultaneously 
markov mixtures candidate set generated naturally assessing bigrams prev document prev multinomial mixtures view absence obvious choice candidate set chosen set similarity recommendations available prev correlation candidate set tremendous time requirements result 
maximum entropy candidate set naturally defined set documents belonging clusters extracted described section iii 
expect models fast fit recommending time limit requirements mentioned accurate compete existing methods 
hit ratio cited active bibliography sentence similarity users viewed text similarity citation cites site researchindex merge bin fig 

ratio hits total number document requests bins 
various similarity recommenders currently researchindex 
hit ratio markov comp markov comp correlation maxent comp researchindex merge bin fig 

ratio hits total number document requests bins 
different probabilistic models 
shown correlation researchindex merge recommender 
average height correlation maxent comp researchindex merge bin fig 

average heights predictions bins 
best recommenders respect hits ratio see 
experimental results graph showing number hits bin recommending methods currently researchindex 
follows plot line expectations researchindex merge recommender best similarity recommender 
show plot similar probabilistic collaborative filtering models correlation researchindex merge recommender 
maximum entropy outperforms recommenders including researchindex merge 
top predictors values mixture multinomial models appears top models 
notice surprising list candidates mixture multinomials created predictions individual similarity recommenders 
performance single component markov model improves larger bins 
interestingly mixture markov models fails improve performance single component model probably due overfitting 
citation worst active bibliography best stand similarity recommender sentence similarity cited perform better cocitation numbers hits half maximum entropy 
correlation improves performance larger values scoring best 
report average height predictions recommenders bins 
note treat average height bins secondary statistic comparison recommenders similar hit ratios 
hit ratios lower height better 
best competing techniques respect hit ratios maximum entropy multinomial mixture correlation researchindex merge maximum entropy best respect average height fairly close tie 
conclude model approach provides attractive alternative terms quality predictions currently recommenders 
table iii average time predictions total memory various models 
table iii comparison various models respect average time taken memory required prediction 
table clearly illustrates models chose experiments average faster second currently maximum time allowed system generate recommendation 
line expectations memory requirements models higher individual recommenders 
argued constitute practical problem recommender attractive reasonably fast performance running stand machine 
maximum entropy approach possibility reducing memory consumption limiting maximum size cluster increasing number clusters 
case maximum size cluster fixed memory usage drops megabytes megabytes negligible decrease performance 
increasing number clusters probably result accurate models require better modeling cluster 
described model collaborative filtering approach generating document recommendations researchindex 
represented data collection sequences document requests ordered time 
models mixtures markov multinomial models easy fit sparse high dimensional data additional preprocessing em algorithm 
demonstrated employing clustering documents user navigation patterns apply maximum entropy modeling researchindex data 
maximum entropy approach provides unique advantage able model long term interactions dependencies data sequences 
definition maximum entropy model combines zero order markov terms triggers high information content 
empirically demonstrated maximum entropy delivers performance time memory mbytes cited active bibliography sentence similarity users viewed text similarity citation cites site merge mix 
mult comp 
mix 
markov comp 
mix 
markov comp 
maxent correlation hour compares currently existing individual similarity recommenders researchindex 
outperforms combined recommender number experimental conditions correlation popular collaborative filtering techniques 
model performed experiments mixture multinomials 
models generated fast recommendations real time high volume web servers 
note application domain question recommender best answered solely offline experiments historical logs conducted 
researchindex instance enforces certain interface showing top documents available similarity recommenders clearly affects user interaction system consequently biasing logs 
plan perform live testing clustering approach various models researchindex recommender framework evaluator researchindex referee 
plan enhance maximum entropy approach better model cluster modeled maximum entropy advocated goodman 
suggests difficult prediction problems improvement plain maximum entropy models sought employing mixtures maximum entropy models 
expectation combining yield better accuracy faster recommendations need explore feasibility fitting model data 
plan evaluate different clustering methods documents try combine prediction results different clusterings 
idea started exploring content recommendation information clustering clustering user queries 
interesting area research combining collaborative filtering content recommendations 
mining log files researchindex observed different patterns browsing different groups users 
users followed recommendations users totally different order similarity predictors 
believe personalization recommendations boost system performance 
vi 
steve lawrence making available researchindex log data eric glover running naming code clusters kostas useful discussions 
lawrence pennock 
open framework practical testing recommender systems 
international conference large databases vldb 
dempster laird rubin 
maximum likelihood incomplete data em algorithm 
journal royal statistical society 
goodman 
classes fast maximum entropy training 
proceedings ieee international conference acoustics speech signal processing 
jelinek 
statistical methods speech recognition 
cambridge 
ma mit press 
lawrence giles bollacker 
digital libraries autonomous citation indexing 
ieee computer 
pavlov pennock 
maximum entropy approach collaborative filtering dynamic sparse high dimensional domains 
proceedings neural information processing systems 
pavlov popescul pennock ungar 
mixtures conditional maximum entropy models 
technical report neci tr nec research institute 
perkowitz etzioni 
adaptive web sites automatically synthesizing web pages 
proceedings fifteenth national conference artificial intelligence pages 
resnick iacovou suchak riedl 
grouplens open architecture collaborative filtering netnews 
proceedings acm conference computer supported cooperative pages chapel hill north carolina 
acm 
sarwar karypis konstan riedl 
analysis recommender algorithms commerce 
proceedings nd acm conference electronic commerce pages 
brafman heckerman 
mdp recommender system 
proceedings eighteenth conference uncertainty artificial intelligence pages 

