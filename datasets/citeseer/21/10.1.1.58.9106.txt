foundations model driven reverse engineering models episode stories fidus papyrus solarus jean marie favre adele team laboratoire lsr imag universit joseph fourier grenoble france 
model driven engineering mde received lot attention years academia industry 
debate basic concepts form foundation mde 
model driven architecture mda omg provided clear answers question 
standard provides complex set interdependent technologies 
series aiming defining foundations mde independently particular technology 
megamodel introduced incrementally refined papers series 
devoted single concept concept model single relation representationof relation 
lack strong foundations mda layers meta pyramid leads common mda just 
pilot series called ancient egypt model driven engineering 
various episodes series show model study mde 
model driven architecture mda standard proposed omg 
software engineering standard developing software just developing series models expressed different meta models 
sketchy summary method start platform independent models incrementally transform platform specific models psms generating code 
jargon defined mda standard 
just industrial standards mda complex set related technologies particularly rich set acronyms 

pilot series ancient egypt model driven engineering 
www adele imag fr acronyms include instance standards mda cwm jmi xmi uml ocl qvt mof concepts pim psm cim 
time writing specifications mentioned represent pages documentation 
specification evolving exists different versions 
naturally configurations documents consistent 
easy determine exactly configurations valid standards evolving parallel different rates 
simply put mda set standards quite complex evolving system 
wonder big pile documents organized omg exact relationships standards technologies 
wonder strategy production standards 
november omg announced change object management architecture brand new model driven architecture mda 
convey information omg change strategy 
lasted decade 
expected provide track decade 
change strategy corresponds shift paradigms 
object model 
architecture 
pointed various authors term mda acronym just 
steve cook concludes summary mda architecture 
true sense term direct relationships notion software architecture 
mda really term architecture informally interpreted way organize elements various standards 
shows famous controversial layers architecture popularized uml mof mda standards 
schema coloured version mof specification 
shows pile documents mda standard collections arranged structure look egyptian pyramid 
layers metamodeling pyramid master piece model driven architecture omg 
lot debate pyramid 
foundations mda standards clear standard received lot criticisms 
complexity standard continuous technical aspects incremental definition mda particularly difficult grasp evaluate 
model driven engineering mde promising approach solve industrial issues underlying concepts models metamodels transformations studied research perspective broader point view 
mega model introduced mean define essential concepts relations mde 
mega model carefully defined 
mega model represented uml model ocl constraints incarnations mega model prolog construction 
shape omg meta pyramid recalls architecture ancient egypt shows comparison antic worlds pushed 
analogy helps ensuring mega model technology independent concepts validated wide range artefacts modern computer programs 
analogy helps get intuitive idea mde independently complex technologies mof instance 
models ages 
learn considering historical perspective 
chen inventor entity relationship er data model studied concepts identified computer science different forms ancient china ancient egypt 
instance entitled ancient egyptian language conceptual modelling chen studied relation er modelling 
close relationship notion model notions language syntax semantics language theory undoubtedly corner stone computer science takes origin study natural languages 
saussure pierce pioneers linguistics th century 
semiotics semiology study signs fact close study models models ultimately signs symbols 
importance making distinction objects signs refer known ancient greece aristotle 
sowa pointed today technologies particular world wide web concepts come 
maps archetypes notion model 
mde zivin refers maps illustrate notions model metamodel interestingly history maps rich runs 
simply put goal study model driven engineering practised software engineering broader perspective provided omg goal promote particular set technologies 
starts ancient egypt pyramids build successfully years mda pyramid 
pilot series entitled ancient egypt model driven engineering 
follow track joseph fourier time professors university grenoble 
goal papers study foundations mde lower extend greater emphasis topic lower accuracy 

pilot episode concept concept model 
shown starts egypt concept 
remainder structured 
section explains difference mde mda worth study mde 
notion mega model section related shortly discussed 
concept model introduced section section explains model engineering 
episode ends section episodes continue series 
instance meta models guess stars episode ii episode iii discover meta model engineering 
episodes describe essential concepts syntax semantics transformations 
cover subjects relationships metamodels ontologies relationships particular technological space megamodel 
mega model incrementally refined episode series 
mda vs mde making explicit foundations model driven engineering ambitious task require lot energy 
pointed zivin took lot time reach common understanding basic elements object oriented approach 
points sources debate field matured provided industrial strength solutions 
certainly mde take lot time understand models help building large software systems 
series focus large scale software evolution toy examples considered 
launch pilot series wise consider mde studied place 
pros cons confronted 
mda may fail start short review arguments mda 
scepticism guarantee scientific approach 
announcement mda fact little impact research community 
years situation changed today mda supporters 
mda subject lot criticism research community 
mda pyramid sense industrial point view exact structure source debate 
instance layer subject controversy note layer left blank filled example document 
lack strong foundations mda architecture leads common mda just 
word pyramid omg specifications said egypt sense symbolic level 
shows pyramid known stone building earth 
layered architecture pyramid clearly apparent 

step pyramid nd stone building earth master piece ancient egypt architecture photography suggests numbering levels depends relative position pyramid observed 
shown property applies mda architecture pyramids provide models understand mda approach 
mda announced paradigm software engineering 
marketing presentations suggest silver bullet 
claim approach revolutionize software engineering 
kinds statements leads comment new mda 
similar approaches existed long 
mda approach representations software called models models idea produce code 
word raising level abstraction core idea mda 
aims existing techniques software engineering 
term model abstraction specification obviously se revolution software engineering 
notion platform plays important role mda 
idea build models independent platform 
idea programming languages compilers 
precisely produce computing models independently hardware architectures micro processors 
obviously necessarily connections mda compilation techniques 
introducing notion platform radically change software engineering 
important characteristic mda meta models metamodelling techniques mean describe languages structure software artefacts 
plenty techniques computer science describe languages starting huge syntax syntax directed tools late argue mda managing graphs trees 
significant amount research graphs graph manipulation 

idea making explicit relationships structures software artefacts far new 
just remember large software engineering projects ad lifecycle ibm pcte standard europe 
building library meta models schemes promote reuse integration new 
novelty come mda pyramid 
similar structures standards pcte cdif odmg 

pyramid built thousands years mda pyramid 
condition difficult argue architecture new 
concern mda complexity quality foundations 
concepts mda standards unclear ill defined complex mda set standards comes industry 
attempt reach perfection 
challenge faced industrial standards get adopt supported large community software developers worldwide 
standards defined incrementally history reflects series consensus animate contributors 
surprising conditions quality standards compare favourably thought software engineering techniques formal specifications 
mde may succeed formal specifications languages vdm received little attention industry 
despite advantages brought techniques software development community mature 
clear formalization required techniques worthy common software engineering projects considered respect additional cost implied 
contrasts uml industrial standard popular received lot criticisms 
despite uml lack rigor situations subsets considered fulfil typical needs 
importantly uml drawn attention developers fact source code way think software 
instance class diagrams considered practical means developing understanding software 
simply put uml popularized notion model industry provided programmers understanding model 
fact xml standard played similar role 
day obvious programmers software code 
software includes xml files databases uml models 
improving database schema defining xml dtds considered natural activities programming 
increasing importance techniques introspection dealing component programming distributed computing leads meta information meta levels 
meta models slowly finding path industry concept considered quite obscure years ago 
code generation common practice ides 
today professional programmer surprised see xml file transformed code 
availability commercial code generators associated tools put emphasis need customizing transformations 
exactly mda intended 

suggested uhl model driven architecture ready prime time software industry channels mda arouse growing interest 
complexity technological platforms ee increasing 
gives rise new challenges software engineering 
concepts provided pcte certainly certainly came early market mature received demanding study adopt 
syntax directed technology didn place deserved software industry 
contrast xml extremely popular simplicity 
said defining new syntaxes new dtds xml schemes commonplace 
phenomenon observed transformation systems 
provided research projects limited impact past 
today transformation languages xslt daily web development 
concepts techniques integral part software development landscape 
change near 
doubt mda set standards suffers deficiencies 
mda defined omg set specific industrial technologies issues model driven approaches promising 
software industry demanding solutions 
period relative silence interest starts grow research community 
instance conferences workshop started included calls papers model driven approaches 
mda standard seminal current trend consider just step general approach called model driven engineering mde 
particular model driven software engineering intersection mde software engineering subset mde concerned software production 
various research projects launched world study potential mde define underlying concepts 
modelling french traditions long tradition modelling france 
instance modelbased specification languages took roots early grenoble abrial defined version successor supported france 
various french companies quite active domain model driven engineering 
similarly various research projects initiatives launched national research institutions 
instance group published survey mde 
survey covers industrial issues research topics 
rard muller launched initiative called 
open consortium development open source mde environment 
national organisations research inria fund research projects study mde 
particular research model transformation quite active france 

july cnrs national institute research initiated research project aims establishing map mde research issues opportunities 
explicit goal consortium establish foundations mde irrespective particular technology standard 
bring answer criticism mentioned lack foundations mda 
core activity group study field connected areas computer science 
mde best seen synergy existing 
direct answer criticism lack previous 

mda turn 
consider serious matter 
studied time scientific point view systematic approach campaign egypt start 
brought nearly civilians including scientists technicians mathematicians artists studied art architecture culture egypt 
published volume called description egypt 
observations drawings illustrations circulated europe created tremendous interest egypt 
context french scientist joseph fourier went egypt 
nowadays numerous contributions mathematics known fourier wrote various reports 
joseph fourier gave name university sciences grenoble 
period jean fran ois jean jacques professors grenoble 
recognized scientists 
particular jean fran ois acknowledged father modern deciphering 
story rosetta stone related shown lain foundations egyptian archaeology metamodel reverse engineering 
summary section summarized statements 
model driven engineering mde global software engineering approach 
mde aims integrating existing results bodies knowledge 
radically new mde may integrative approach 
mde confused mda 
model driven architecture mda specific standard omg 
mda specification deficiencies research required 
mde comes failure various projects ad cycle pcte mde learn past experiences 
software industry mature receive mde solutions 
software industry demanding mde solutions 
take time reaching common agreement mde exactly 
concept model ages 
french tradition 

series ancient egypt model driven engineering seen answer mda 
firstly true mde 
secondly true really new mde 
precisely power mde 
true foundations mda clear 
precisely research required 
model driven engineering approach seek define strong method software development integrating common framework established techniques 
mega model model driven engineering issues mda standard clear separation essential concepts technologies implement concepts 
remember mda research proposal evolving industrial standard 
lack rigor characterize specifications anyway assumed perfect 
instance elements various pyramid layers usually assumed linked called instanceof relationships 
true objectoriented context relation recognized contexts grammars languages databases xml technologies problem context mde approach aims integrating various technologies 
fact due root oo technology tends called object class inheritance instanceof context omg specifications 
terms quite informally 
describe situations correspond different concepts 
similarly common mistake define meta model model model 
notions model metamodel platform pim psm central mda standard concepts poorly defined 
series relies zivin frameworks understanding foundations mde 
describes informally concepts models meta models zivin identifies fundamental relations coined representationof 
frameworks bringing perspectives mde 
case instance framework provided atkinson hne clarifies relationship meta model ontologies 
framework modelling software space space introduced clarify notion meta model model evolution 
broader vision framework describes concepts model meta models concepts related meta modelling methods procedures 
context frameworks called mega models 
technically speaking mega model meta model term avoid confusion particular metamodels elements mde domain naturally fit element mega model 
simply put idea mega model define set entities relations necessary model aspect mde 
context call mega model model mde 
problem define mega models 
done plain english lead ambiguities want avoid 
mega model series expressed uml ocl constraints 

note usage uml purpose new 
instance comes mda specification 
example informal mega model page seen diagram introduces concepts pim psm metamodel infrastructure mapping sketchy model different text goes 
closer look diagram shows different associations stereotypes informal way cardinalities navigation directions somewhat strange 
fact kind mega model informal really useful 
mega model rest document examples follow diagram attempt conformant mega model 
series goal ambitious 
needed mega model reason mde confidence 
element megamodel carefully introduced examples help test mega model 
strongly believe common agreement reach meaning concept examples possible validate invalidate statement 
goal example series enable reader check agree definitions provided 
zivin object oriented approach organized elementary associations instanceof inherits 
words quality mega model measured complexity introduces contrary conciseness power 
lesser better 
existing frameworks process defining mega model context french national project mde 
association introduced episode series entirely devoted single concept models 
episodes gradually introduce concepts 
instance notion meta model introduced 
note models mega models expected perfect just purpose 
model mega model result iterative process subject continuous improvement 
reader invited consult website series date information subject 

models called model driven engineering considered modern software engineering technique notion model old 
museums full ancient models 
museums play role models repositories 
instance shows model represents 
photography model physical model kept museum cairo 
relationships models studied section 
similarly clear model 
believed represent nivizeb father ancient model engineering priest called 
controversy subject established represents great priest 
note models humans usage 
contrary model god usage humans 
statue thot god moon represented baboon ibis 
thot assumed inventor speech script 
related episode iii thot meta modelling mankind 
photography small fragment fidus papyrus restoration museum grenoble 
related section fidus papyrus model solarus ancient model solar system section 
fact explained small piece model clear model 
similarly model model repository 
small chest ivory gold importantly contains set ancient meta pyramid drawings nivizeb priest related story baboon 
stone represented model kept basement museum grenoble 
models happened called seminar 
famous rosetta stone kept british museum 
story rosetta stone related 
received model rosetta stone model 
notion model old rigorous definition required 
section introduces simple mega model referred megamodel association called representationof short 
note models long ancient times notion meta models usually explicitly 
put emphasis fact notion model totally separated concept meta models 
notion system fact needed 

model museum cairo fragment fidus papyrus museum grenoble stone museum grenoble model nivizeb museum cairo fidus bone grenoble rosetta stone british museum examples ancient egyptian models various model repositories 
model thot mus du louvre nivizeb pyramid models museum grenoble systems start definition system primary element discourse talking mde 
definition useful sense combined concepts described remainder 
introducing concepts introduce rough classification systems 
categories interest physical systems digital systems systems 
system incomplete megamodel system shortcuts ps ds physical systems ps observable elements pertaining physical world 
digital systems ds systems reside computer memories processed computers 
systems ideas concepts eventually reside human mind processed human brains 
separation categories somewhat arbitrary corresponds different technological spaces section 
anyway important right classification represent typical situations 
instance consider fido dogs traditionally guinea pigs various domains particular meta modelling literature 
fido physical systems 
photos previous page depict physical systems 
solar system example physical system 
set spheres mathematical system 
databases programs digital systems 
depicts uml object diagram model particular examples 
diagram conformant mega model uml notation 
approach series provide examples 
fido examples systems important feature systems complex studied usually decomposed sub systems 
instance solar system planets sphere decomposed surface volume program decomposed procedures types 
physical systems property virtually infinite digital systems definitively finite systems 
fact decomposition systems sub systems fundamental relation discussed episode 
concentrates deliberately simple megamodel 
section describes concept model 

models systems study representationof providing definition model cite existing definitions 
context uml standard term model defined model abstraction physical system certain purpose 
discussed don agree restriction physical systems anyway consider definition provided zivin 
model simplification system built intended goal mind 
model able answer questions place actual system 
provides definition model set statements system study sus 
definitions identify notions notion model notion system study sus relationship notions 
relation called representationof 
called represents inverse relation called describes 
ancient egypt relation symbolized 
noted short 
name corresponding symbol important understand relation defined systems model sus relative notion intrinsic property artefact 
fact notions roles system play respect system depicted mega model class diagram 
role played system depends system illustrated story 
system model representationof shortcuts representationof sus model megamodel representationof antonio 
went egypt visit pyramids faithful dog fido 
walk antonio fido old papyrus near ancient pyramid 
point view papyrus just physical system 
antonio saw fido playing immediately removed mouth 
closer look saw ancient map similar 
day fido really huge bone 
antonio didn want fido play bone wore inscriptions gold 
back home antonio brought papyrus bone museum grenoble understood purpose bone historian university grenoble discovered papyrus ancient model solar system papyrus bone donated museum named fidus papyrus fidus bone dog 
fidus 
just hypothesis linked model sus 

bone displayed museum grenoble 
contrast fidus papyrus deteriorated effects ages jaws fido impossible display public 
museum decided papyrus deserved restoration required studies 
artist considered fidus papyrus system built model form painting new papyrus 
copy exposed museum 
imperfect model considered guide museum explain visitors fidus papyrus looked 
received museum xml file modelling papyrus produced usage archive system 
xml descriptor included information origin model dimensions short description file considered archive purposes 
answer question 
fidus papyrus studied laboratory technician decided rays photography 
rays technology idea rays model revealed traces ink longer visible fidus papyrus obviously 
fidus papyrus popular digital model produced sold museum store digital fidus 
software technology brought benefits enabled visitors clients manipulate model easily 
possible see fidus papyrus supposed ink disappearance fido game 
point story knew mysterious author fidus papyrus nivizeb priest 
knew secret fidus bone 
summarize story means model expressed mega model introduced far 
model discussed 
sus sus ps sus model sus ps sus sus sus painting ps ps ds model ds model model fidus papyrus story graph story shows role played system depends context considered 
papyrus just physical system jaws fido 
model hands historian 
considered system study sus hands artist technician 
difference status depends usage system 
fido just wanted play papyrus 
historian wanted interpret artist technician model model model 
relationship interpretation relationship models described 
described series implies adding decomposition relation megamodel 
similarly actor interprets model important aspect model 
study concept semiotics provide insights postponed episode 

wanted studied describe 
various concerns considered different set questions produced various models 
model considered purpose 
role played fidus bone determined 
story suggests quite common compose links words form models models models models models instance painting model fidus papyrus model solar system 
visitor photography painting naturally produce model model model 
point emphasis put fact model model metamodel notion defined episode ii 
model model sus cases model sus cases 
words representationof relation transitive transitive behaviour applies particular models 
illustration painting considered transitive model system solar 
contrast case ray model xml descriptor 
instance dimensions papyrus stored xml descriptor interest archiving purposes information means related solar system 
summary summing section shown properties 
system play role model respect system referred system study sus 
model abstraction system 
purpose 
relation model sus called representationof short 
notion model relative 
intrinsic property system 
models systems arbitrary kind 
systems arbitrary kind modelled 
model model metamodel 
transitive model model sus model sus 
define model necessary define notion metamodel 
mega model introduced far simple 
classes system association representationof 
model driven reverse engineering mega model introduced far describe fundamental links systems provide hint actual usage models 
particular intent links captured representationof association particular method assumed production models 
understanding aspects necessary understand model engineering 

models separation concerns question answered models purposes 
obviously answer depends engineering discipline 
case separation concerns underlying principle 
considering single system different people want different set questions answered 
separation concerns intrinsic property model engineering leading naturally aspect oriented modelling 
organizational point view separation concerns lead separation jobs definition set actors identified roles skills 
instance painting guide museum relate story fidus papyrus 
xml descriptor rays model technician actors different skills concerns 
ps ps ds ds separation concerns technician structural analysis store system explore system models technological spaces separation concerns implies considering different sets questions technological spaces ts enable answer question different technologies 
technological spaces equivalent 
questions easy answer ts difficult 
notion technological space introduced authors divided digital space various technological spaces 
includes instance technology structured document xml technology grammars database management systems ontology engineering model technology uml boundary structures existence various technological spaces means system choose ts appropriate expression model usage 
abstraction remove fact reality driven competing technologies 
description software space link concrete views 
broader perspective taken 
discussion restricted software models 
sake simplicity distinction physical models models digital models see section 
nivizeb wanted computations just applied mental arithmetic computation complicated kind abacus invention 
physically moving stones bones sand reproduced arithmetic operations 
obviously computer transport problem digital space software models 
visitor technological space ts working context set associated concepts body knowledge tools required skills possibilities 

moving technological space common operation 
shows chain steps leads solar system mental model solar system brain visitor digital fidus 
ps ps ds ps example chain models technological spaces graph illustrated links cross technological spaces 
important property technological spaces thing best technological space 
choice depends problem hand 
fortunately ts island bridges spaces 
changing space important 
means import export operations enter leave space facilitated 
note interface physical space spaces typically achieved means input output devices illustrated 
ps rays ps screen ds model ds graphics ds chain sus oriented models human oriented models graph shows typical pattern problem solved space projected space improve feature precision efficiency instance assume antonio want observe solar system 
antonio right directly look solar system left 
antonio computer connected digital telescope 
complex system provide antonio improved model 
digital camera import physical digital space digital chain models produced eventually exported back physical observable space screen 
eventually antonio eyes brain process information 
suggests models roughly organized dimension go sus oriented models left human oriented models right 
instance digital space xml models computer manipulation html models presentation purposes 
chains models complex human chain constitutes bottleneck 
relationships sus model sus mental models produced systems observed human studied field semiotics 
ps sus oriented models human oriented models eyes 
space physical space digital space context episode consider amazing ability brain perform short cuts encode decode information 
instance visitor look image produced digital fidus think directly terms solar system 
means time intermediate levels models omitted chains models 
models mixed close 
instance omitted 
various models left omitted 
digital telescope certainly quite sophisticated systems produces intermediate models 
gathers information set lens mechanisms process resulting image 
natural omission intermediate models explains part reasoning models difficult discussion models argue model missing needed instance speaking terms map solar system think terms printed map digital map computer screen mental image 
links transitive nature confusing systems usually safe 
semiotics contrary distinguish levels including mental model produced symbols 
story 
suggests modern system engineering implies actors various engineering discipline 
instance building telescope system imply different skills ranging physics mechanics mathematics telescope part computer engineering digital part cognitive science ergonomics interface user technological spaces influence organizations ts required special skills 
software engineering focuses digital space 
space refined sub spaces 
pointed authors important research issue draw map modelling existing technological spaces sub spaces bridges spaces 
specification models vs descriptive models model engineering means producing model 
models specify system built describe existing system 
leads introduce distinction specification models descriptive models 
distinction introduced revised version omg mda guide definition notion model model system description specification system environment certain purpose 
simply put new systems produced specification models descriptive models produced existing systems 
making distinction specification models descriptive models useful express model system truth case specification models model holds truth 
fact separation specification models descriptive models clear cut 
complete treatment topic required introduce notion model system evolution 
simplification provides purpose 

sus said correct specification model properties defined model satisfied system produced 
second case system represents truth 
descriptive model said valid said model system true 
fact nivizeb knew usage models 
life produced huge amount specification descriptive models 
instance designed pyramids see story baboon produced specification models 
nivizeb demanding 
warned everybody pyramid conformant models said nivizeb considered pyramid invalid 
feed slaves 
way nivizeb produced lot descriptive models fidus papyrus 
model revealed incorrect 
nivizeb life 
note separation specification model descriptive model added mega model introducing associations named 
clear totally new associations just specialization representationof 
platform independent models vs platform specific models think model engineering just producing specification model generating valid system model 
complex 
various steps required models produced step 
mda standard put emphasis distinction platform independent models pim platform specific models psm 
concept computational independent model cim introduced 
roughly speaking cim just describes concepts related particular domain particular problem solved domain 
pim describes particular system solve particular problem technology independent manner psm describes system implemented technology 
quite intuitive sight notion platform pim psm poorly defined mda standard 
subjects controversy 
clearly continuum psms distinction models clear cut 
notions relative 
time writing believe concepts included megamodel 
conceptual models specification models implementation models distinction pim psm fundamental clear development process define different levels models production system 
recognizing existence levels important 
fowler suggests distinction levels models conceptual models specification models implementation models 
simply put conceptual models ones describes concepts solutions 
closed cim 
specification models specify system built giving details actual implementation 
implementation models describe systems implemented 
specification models close mda implementation models close implementation models 
hold classifications slightly different perspective 
fowler put emphasis fact kind models described modelling language 
sketchy models blueprint models executable models classification models provided mellor colleague perspective models 
distinction kinds models depending usage 
model considered sketch blueprint executable 
sketchy model precise complete intended 
purpose models typically try idea model specification simplify communication understanding model descriptive 
usually sketchy models volatile maintained delivered 
contrast blueprint models precise specification build system 
say system expected true describe aspect system 
executable models kind models 
contrast blueprints contain information directly interpreted processor derive executable system 
currently kind model widely spread 
corresponds ongoing executable uml mda approaches 
fundamental classification recognize fact great variety models model considered purposes 
instance sketchy model may lies system necessarily considered problem 
illustration story solarus come back story fido illustrate concepts described emphasis put time engineering process models practised nivizeb priest 
day fido papyrus disappeared hour 
antonio looking 
fact fido managed entered pyramid small hole 
arrived small room fido bone fido didn notice big bone just sub system strange arrangement pieces wood carved bones teeth coloured stones 
fidus went big bone 
antonio look 
fido gave bone 
discovered secret solarus 
regularly observing sky nivizeb build classification planets 
wrote papyrus explaining core entities respective properties 
papyrus conceptual models computation independent model 
nivizeb puzzled movements planets concentrated predicting relative positions 
particular interested computing date eclipse alignment planets thought discovering mystery gave lot power 
years nivizeb built simple 
sentence fido bone studied great details 

mental model solar system 
thought planets just set discs move constraints governing relative positions 
dealing mental model complicated nivizeb decided built instrument called solarus 
aims solarus reproduce constraints position planets sky 
building solarus challenge nivizeb 
time build sophisticated model 
decided produce series papyrus specify solarus 
thinking terms solarus physical system produced papyrus known fidus papyrus see top 
model just described nivizeb knew movement planets solar system 
took form drawing writing 
disc representing planet nivizeb mental model circle papyrus 
model independent implementation technology 
pim mda classification 
nivizeb produced specification model called water solarus papyrus 
specification model specified water solarus build physical system nivizeb wanted simulate movement planets 
didn give implementation details model psm 
water solarus designed set physical pieces representing planets pieces floating pool centre temple pieces connected strings reeds constraining movements pieces surface pool 
water solarus papyrus fact platform dependent model took form annotated version fidus papyrus 
nivizeb annotated model element indication element represented 
annotated model planet represented disc nivizeb mental model circle fidus papyrus decorated indications size shape material piece build 
nivizeb clever hands gave annotated specification model workshop temple 
workers warned resulting system valid 
physical system built successfully model 
nivizeb checked validity water solarus respect specification model gave 
thrown 
note shown water solarus considered model solar system product engineering process 
nivizeb water solarus improve knowledge solar system 
water solarus descriptive model 
month convenient fidus papyrus directly 
possible models produced represented solar system 
pim psm chain engineered models graph platform specific chains graph pim examples model engineering 
psm stones psm stones nivizeb water solarus years 
time lot improvements 
day coming oriental countries arrived temple 
brought new technology 
excellent great skills working stones bones 
nivizeb decided migrate system new platform 
drawn new specification papyrus 
fidus papyrus pim derived psm planet gave annotation indicating colour stones bones carved placed new system successfully implemented marked point 
story provides example successful platform migration 
historians doubt accuracy story 
version event related 
model driven forward engineering mega model introduced attempt model engineering process leads production models 
karagiannis hn elaborate richer mega model defining concepts steps modelling procedures modelling techniques modelling methods going details clear modelling steps clearly depends method engineering discipline 
model engineering producing iteratively refined models ultimately production final system 
notion refinement defined general unfortunately thing definitive scale abstractness classifying models 
really depends method engineering discipline 
forward engineering defined forward engineering traditional process moving high level abstractions logical implementation independent designs physical implementation system 
rigorous forward engineering method ensure step transforms specification model valid system 
nivizeb method rigorous 
decided step fed clear criteria 
fortunately software engineering model specification languages vdm define mathematically sound methods enable stepwise refinement mathematical models concrete pieces code 
step validity transformation proved 
lower emphasis rigor mda approach sketches forward engineering process 
case transformed psms models second ones 
key idea mde approach transformations described partially automated transformation languages 
concept transformation cornerstone mde described episode series 
model driven reverse engineering theory engineering practices follow best forward engineering methods available apply scientific knowledge 
pointed shaw 
true engineering disciplines far true case software engineering 
goes wrong 
papers mda literature imagine ideal software world populated neat models situation radically different industry 
years software development software companies 
despite advances specification modelling languages core activity software engineering write code evolve hand 
spite advantages formal methods failed find path industry domain critical systems 
decade uml received attention 
nowadays uml analysis design phase 
cases specification models produced phases remain productive 
software industry code holder truth models 
contrast documenting code common practice 
usage uml necessarily anticipated surprising 
huge majority software systems planet designed uml 
case original uml diagrams typically obsolete maintained 
words uml build descriptive models specification models 
case theory practice reverse engineering important forward engineering 
pointed chikofsky cross term reverse engineering takes root analysis hardware systems microprocessors producing descriptive models finished systems common practice 
authors define reverse engineering reverse engineering process analysing subject system identify system components interrelationships create representations system form higher level abstraction 
model reverse engineering just producing descriptive model existing systems previously produced 
part sentence important distinction modelling reverse engineering 
fact modelling reverse engineering refer activity creating descriptive models 
replacing reverse engineering modelling chikofsky cross definition produce definition 
nivizeb produced fidus papyrus model solar system modelling 
studied oriental abacus build abacus reverse engineering 
abacus study previously engineered 
note nivizeb reverse engineered foreign systems dark side reverse engineering section shows applied reverse engineering systems 
engineering forward engineering reverse engineering reverse engineering seen way deal legacy systems 
day apparent reverse engineering closely integrated forward engineering support smooth evolution software 

instance demeyer ducasse show large modern systems soon legacy constantly reengineered 
leads equation 
engineering forward engineering reverse engineering equation formal meaning 
just aims stressing importance reverse engineering engineering disciplines 
small systems built scholar way interest context 
concerned evolution large scale industrial software products software products evolve years decades 
time systems accommodate evolution technological spaces platforms 
instance describe reverse engineering support evolution large component software systems built dassault syst mes largest software europe 
nivizeb knew importance reverse engineering 
historians consider story related idealized version really occurred 
nivizeb migrated water solarus stones bones solarus just making new drawing new papyrus 
fact young assistants suggested apply nice forward engineering principles depicted producing psm starting pim 
naive proposal just nivizeb angry happy 
pointed nivizeb spent years dark observing planets 
days days tuned water solarus adjusting size position discs strings 
removed added new mechanisms improve correctness model 
applied lot transformation 
centre pool didn care maintain fidus papyrus 
pim rapidly sync 
fact papyrus lost sand fido 
years continuous evolution water solarus legacy sophisticated system 
pim psm totally date 
totally fails recognize importance evolution 
fully recover descriptive model solarus nivizeb spent days pool sizing disc string noting positions reconstructing behaviour mechanisms 
period built new platform specific model expressed terms wood discs reed strings psm produced pim similar fidus papyrus recovered model accurate 
nivizeb knew point providing new specification stones bones solarus illusory risky complex 
optimization improvement tuning water valuable asset 
sense built bones stones solarus scratch 

actual evolution solarus system ws stones stones time bv 
depicts realistic evolution process 
links represent successive transformations 
relation studied serie 
decades decades nivizeb observed evolution process large realworld systems modelled sequence pyramids desert 
shows graphic time horizontal axis abstraction vertical axis 
fact nivizeb discovered pyramids model real world 
instance story nivizeb meta pyramids relates pyramids viewed models abstraction dimension referred abstraction meta dimension 
real world system evolution integration reverse engineering model engineering nivizeb really pioneer 
time understood complementarity forward reverse engineering especially context model engineering 
unfortunately knowledge disappeared 
nowadays software engineering field populated various communities exchange little 
particular mde research community reverse engineering community certainly lot share models cornerstones disciplines 
years ago chikofsky cross established foundations reverse engineering speaking terms views abstractions seminal rewritten replacing terms descriptive models 
intersection disciplines received little attention situation changing cross boundaries research papers research workshops industrial workshops 
particular omg launched adm project merge reverse engineering mda 
model engineering model driven engineering conclude engineering models define terms 
literature model engineering model driven engineering usually interchangeably adjective driven meaningful 
model engineering disciplined production models 
model driven engineering subset system engineering process heavily relies models model engineering 
instance nivizeb applied model engineering build solarus goal ultimately produce model 
case nivizeb led construction pyramids 
certainly produced lot models drive huge system engineering project control production systems 
included models architecture pyramid models resources roads boats built planning models 
interestingly term model driven justified mda specification mda approach system development increases power models 
model driven provides means models direct course understanding design construction deployment operation maintenance modification 
argument compatible definitions 
summary section summarized statements 
model engineering leads complex nets links 
models naturally support separations concerns 
various actors different skills concerns usually different models 
various technological spaces manage models 
things best technological space 
bridges technological spaces fundamental importance 
models human oriented 
chain links transitive intermediate models omitted 
engineering complex systems implies mastering technological spaces 
drawing map technological spaces bridges important issue 
specification prescriptive models usually specify system built 
system valid invalid respect specification model 
descriptive models usually describe existing systems 
descriptive model correct incorrect existing system 
forward engineering refining models concrete models 
definitive scale abstractness classifying models 
notion platform mda clear 
notion platform independent model platform specific model 
software companies code centric 
core activity software engineering write code maintain 
large industrial software evolve years decades 
documenting code common practice 
evolving world reverse engineering important forward engineering 
forward engineering produces specification models 
reverse engineering produces description models engineered systems 
modelling produces description models existing systems 
reverse engineering mde community share concept models 

mega model introduced define notion model 
examples explain interpret single association called representationof ancient egyptian 
megamodel obviously mega model improved substantially 
said deliberately concentrates single relation episode 
provided episodes 
instance models considered isolation abstraction dimension necessary improve model engineering 
episode ii story baboon related 
story shows metamodels discovered ancient egypt nivizeb help baboon 
discovery led nivizeb design series meta pyramids different shapes 
egyptian pyramids built nivizeb meta pyramids models step pyramid build years ago 
time step pyramid isolated desert 
prominent representation metamodeling ancient egypt 
fact played role similar role played today mda meta pyramid 
mda set standards arranged unique pyramidal structure single unique meta metamodel top mof 
episode iii shown seeing mda isolation wrong interpretation mde approach 
episode notion multiple technological spaces defined fundamental aspect model driven engineering 
notion studied episode iii 

pyramids grown separately desert pyramids grouped structured way shown 
plateau organized set technological spaces shown episodes concepts decomposition interpretation syntax semantics transformation fit mega model 
acknowledgments jean zivin jacky estublier german vega fruitful discussions topic 
colin atkinson thomas hne introduce fido vincent introduce baboon jean zivin introduce antonio 
participants seminar language engineering participant mde project 
discussions largely contribute series errors mine 
apologize errors occured historical 
photographic credits photos graciously provided individuals organizations 
special john help 
egypt archive www uk european space agency history link net courtesy 
chen ancient egyptian language conceptual modelling conceptual modelling lncs series ancient egypt model driven engineering resources available www adele imag fr mda chandler semiotics basics routledge editor isbn sowa ontology metadata semiotics lecture notes ai springer verlag omg omg model driven architecture mda july available www omg org mda omg mda web site www omg org mda cook domain specific modelling model driven architecture mda journal january available www com 
omg meta object facility mof specification version april fowler uml distilled addison wesley mellor scott uhl weise mda distilled principle model driven architecture addison wesley march mellor executable uml foundation model driven architecture addison wesley may zivin models class entities presentation dagstuhl seminar rho comparison ecma pcte odmg technical report uhl model driven engineering ready prime time ieee software sept mellor zivin mda components need market common meeting omg mda wg ug june available www omg org docs ad pdf ing des mod les syst mes fran ais des techniques es isbn may inria model transformation inria institut national de recherche en informatique web site inria fr cnrs action sp cnrs mda centre national de recherche scientifique web site www adele imag fr mda rard muller initiative web site www org joseph fourier hier hui papyrus universit joseph fourier que nationale de france description de digital version available www bnf fr omg mda guide version omg june models mean ieee software september atkinson hne model driven development metamodeling foundation ieee software september zivin search basic principle model driven engineering journal special issue march april zivin precise definition omg mda framework proceedings ase november alvarez evans sammut mml metamodel architecture available www org favre metamodel driven reverse engineering stories stone rosetta stone presentation dagstuhl seminar model driven approaches language engineering march available www adele imag fr favre foundations meta pyramids languages metamodels episode ii story baboon post proceedings seminar model driven reverse engineering may available www adele imag fr favre foundations metamodel driven reverse engineering episode iii story plateau rosetta stone available www adele imag fr favre meta models models evolution software space proceedings elisa workshop evolution large scale industrial software applications joint workshop icsm sept available www adele imag fr omg uml infrastructure specification ptc september 
zivin aksit technological spaces initial appraisal coopis doa federated conferences industrial track irvine complexity left associative grammar theoretical computer science karagiannis hn metamodelling platforms third international conference ec web dexa lncs september chikofsky cross reverse engineering design recovery taxonomy ieee software january shaw prospects engineering discipline software ieee software zivin mda hype hope reality guest talk uml definition description model domain master project model driven architecture instrumentation master public december klint mmel verhoef engineering discipline submitted publication available homepages cwi nl ralf demeyer ducasse object oriented reengineering patterns morgan kaufman publishers 
zivin tooling mda framework new software maintenance evolution scheme proposal journal object oriented programming bouillon vanderdonckt eisenstein model approaches reengineering web pages international workshop task model diagrams user interface design van gorp mens demeyer 
enabling uml model driven refactoring th international workshop object oriented reengineering 
tr university antwerp favre metamodel driven software architecture reconstruction working conference reverse engineering nov favre megamodel model software evolution transformation workshop metamodel driven model migration phd univ nashville aug favre godfrey winter editors st international workshop metamodels schemas reverse engineering electronic notes theoretical computer science vol 
working conference reverse engineering nov winter favre godfrey nd international workshop metamodels schemas grammars reverse engineering integrating reverse engineering model driven engineering wcre zivin model driven legacy evolution tools techniques facilitate development adaptable enterprise systems workshop edoc omg model driven approach systems workshop march omg architecture driven adm www omg org adm kleppe warmer bast mda explained 
model driven architecture practice promise addison wesley april egypt archive www uk favre reverse engineering large component software product european conf 
software maintenance reengineering 
