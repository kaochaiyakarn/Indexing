middleware guidelines sensor networks matthew kumar shin ramachandran college computing georgia institute technology atlanta georgia email rama cc gatech edu near envision sensor networks transport high bandwidth low latency streaming data variety sources cameras microphones 
sensor networks called perform sophisticated network processing image fusion object tracking 
difficult imagine computational capabilities network nodes scale relative fairly limited resources current motes 
energy continue remain constrained resource futuristic sensor networks 
proposals middleware provide capabilities higher level network processing minimizing energy drain network 
analyze interplay resource requirements compute communication intensive network processing resultant implications figures merit interest application including latency throughput lifetime 
surveillance application workload middleware capabilities data fusion role migration simple relaying versus network processing prefetching 
simulation study shed light impact device characteristics cpu speed radio features application figures merit 
show presence prefetching increasing radio bandwidth may improve latency throughput compute intensive workloads may decrease productivity network 
show cost function directed migration significantly extend application lifetime sensor networks topologies orders magnitude larger previous studies 
show simple minded cost function may sufficient guide migration decisions middleware 
due unique blend distributed systems networking issues wireless sensor networks active research area 
sensor networks attract research due possibility offer supporting applications society cares habitat monitoring predicting weather 
current sensor networks assume homogeneous dedicated arrangement nodes limited capabilities berkeley motes 
networks successfully deployed low bit rate applications monitoring grape plants 
pace technology conceivable imagine sensor networks near node computational capability today handhelds ipaq communication capability equivalent bluetooth 
advances low power microcontrollers intel xscale increased power conscious radio technologies lend credence belief 
coupled trend highbandwidth sensors cameras ubiquitous cheaper lighter 
envision sensor networks consist deployments high bandwidth sensor actuator sources coupled powerful wireless ambient processing hardware 
network enable host high bit rate computationally intensive applications distributed surveillance emergency response homeland security 
main characteristic applications sense process actuate control loop 
latency sensing actuation throughput obvious figures merit applications 
addition important merit applications network lifetime 
definition sensor networks battery power minimal manual supervision 
key design consideration ability sensor network adapt changing application dynamics network characteristics meet application latency throughput requirements optimizing energy usage 
middleware infrastructure supporting applications include efficient stream transport data fusion capabilities placement dynamic migration fusion points network adapt changing application needs node conditions dynamic adaptations cpu network bandwidths changing needs prefetching fused items optimistically hide latency 
proposed sensor network middleware infrastructures provide specific techniques supporting applications 
unfortunately clear best tune sensor network terms hardware capabilities available node terms middleware capabilities 
example consider decreasing cpu clock frequency save processing energy 
possibly increasing network lifetime slower processing may increase latency tolerable limits compute intensive application 
hand application communication intensive performance limited available network bandwidth node slower processing may yield energy savings compromising performance 
similar non intuitive optimizations possible fine tune behavior sensor network 
need study looks interplay node characteristics middleware features context applications futuristic sensor networks 
focus 
develop simulation framework enabling evaluation parameters 
simulation framework incorporates application model mimics highbandwidth sense process actuate control loop model middleware includes capabilities data fusion dynamic locally decided role migration prefetching power model various clock frequencies cpu power model different radios models energy accounting idle listen mode 
simulator observed latency instantaneous throughput number processed items network lifetime figures merit evaluate tradeoffs parameters 
contributions event driven simulator enabling modeling futuristic sensor networks order nodes surpassing previous simulators capable modeling middleware tens nodes cpu memory power models 
quantitative results showing tradeoffs different tunable parameters middleware node architecture 
analysis results reveal non intuitive guidelines help tune sensor networks 
quantify figures merit baseline configuration middleware fusion capability function processor speed radio characteristics 
quantify figures merit prefetching prefetching role migration 
analysis results prefetching confirms intuition reveals non intuitive findings 
example highly inefficient orinoco radio listen mode varying radio power saving modes sleep versus listen result significant change network lifetime presence prefetching 
similarly radio bandwidth differences orinoco bluetooth significantly affect latency throughput applications employing compute intensive fusion operations network 
prefetching results increased throughput compared baseline 
corollary positive result network lifetime prefetching lower baseline done unit time 
analysis migration results yields similarly interesting findings 
directing migration simple cost function available energy node enables extension application lifetime confirming viability middleware migration large sensor networks 
cases study cost function yields slightly lower latency throughput migration extending lifetime increasing delivered items lifetime 
interplay radio bandwidth migration cost yields poor performance cost function migrating large state slower bluetooth interface 
case application lifetime extended factor times average latency throughput suffered badly leading drop total number delivered items lifetime 
show migration enabled simple cost function compute intensive workloads high bandwidth radios high bandwidth cpus may perform terms throughput latency delivered items lifetime communication intensive workloads low bandwidth radios cheap cpus 
promising result confirms viability vision sensor networks supporting high bandwidth compute intensive network processing 
rest organized follows 
section ii motivating application scenario existing middleware support 
scope study summarized section iii 
evaluation methodology includes simulation framework application power models section iv 
results study lessons learned discussed section related section vi concluding remarks directions research section vii 
ii 
workload middleware characterization application scenario concrete motivating application consider campus wide surveillance application provide safety people campus 
deployed infrastructure consists variety high bandwidth sensors cameras microphones scattered campus 
nodes wireless sensor network similarly scattered campus provide redundant connectivity network processing resources 
actuator nodes may pdas carried security officers 
data sensors pass network nodes perform application specific fusion functions face detection image correlation 
application performs network hierarchical computation fusion application 
specific application instance general control loop described earlier 
energy continue primary limiting factor deployment performing network fusion energy conscious manner key application longevity 
middleware requirements fusion application examples include streaming media surveillance image tracking interactive vision 
applications share common requirement applying synthesis operations fusion functions multiple input streams hierarchical manner 
fusion functions efficiency compressing input stream part application behavior feature extraction image 
fusion applications typically described task graph nodes graph types data source data producer node sink node user presents requests fusion node applies fusion function 
graph deployed overlay network relay nodes interconnect different nodes indirectly reachable 
relay nodes act simple data forwarders 
bound network node task graph data fusion node fusion point 
support campus security application campus wide sensor network need specific systems facilities support applying synthesis operations fusion points support migration fusion points dying non optimal network node suitable node support handle time stamped data items produced data sources 
middleware requirements include memory buffer management programming support focuses fusion point support fusion point migration network nodes main sources energy consumption 
energy critical resource wireless sensor networks critical target high bit rate fusion applications 
communication bit costs order magnitude higher processing instruction 
large amounts processing occurring network processing cost accounted managing energy 
similarly large memory footprints may incur significant cost 
middleware available supporting high bit rate applications sensor network environments 
example supports fusion channels migration supporting dynamic network processing time stamped data items 
provides framework evaluating energy aware cost functions locally nodes runtime dynamically direct fusion point migration 
iii 
scope study design space vast characteristics application including size shape deployment nature processing involved network characteristics middleware characteristics node sensor network 
limit studying defined portion design space cameras sensor devices 
video streams place possible kinds streams 
nodes tuned characteristics configuration sensor network 
sources sink nodes de randomly square dimensional campus source nodes left sink right shown 
node locations random remain experiments 
non uniform placements parallel realworld deployments uniform placements connectivity hard obtain 
node begins mw hours disconnects mw hours 
campus size scales radio range keeping starting topology constant different experiments 
initial deployment connected graph 
model middleware perform fusion migration prefetching items needed fusion 
sets input items prefetched fusion point 
fusion point evaluates mev minimize energy variance cost function minute determine migrate immediate neighbors 
neighbor mw hours energy current fusion point migration neighbor energy triggered 
assume greedy sink continually requests highest level inference aggregation point task graph furthest sources driving application maximize throughput 
fusion functions ranging sim ple collage complex face detection algorithm 
results communication intensive workload results workload 
application performance quantified figures merit latency instantaneous throughput number processed items network lifetime 
design space study determines performance workloads baseline configuration sensor network prefetching migration 
configuration allows globally tuning device characteristics carrying fusion operations nodes 
performance workloads prefetching fusion function inputs 
performance workloads presence migration mev cost function 
iv 
evaluation methodology quantify application performance build event driven simulator encompassing futuristic sensor network devices middleware applications 
section presents set application workloads designed representative general high bandwidth low latency energy constrained sensor network applications 
presents sensor network node power models commensurate technology 
discusses details design implementation simulator binds models application workloads node resources simulated sensor network middleware recording energy usage simulated network node components time 
campus surveillance application model motivating surveillance application general fusion application performs hierarchical network processing streams produced initially cameras 
arrive realistic model video network processing communication requirements representative set fusion functions application part deployed task graph 
functions image collage simply concatenates input images produce output select output brightest input images calculation centroid inter frame differences extent cpu intensive face detection recognition function fd fr 
active cpu energy consumption related cycles required complete function memory network energy consumption related function input output data sizes report numbers functions table fd fr previously published time measurements mhz sa ipaq 
report measured results benchmarks remainder fusion functions 
benchmarks mhz ipaq running linux familiar distribution version 
believe architecture difference insignificant context 
verify measured time calculate instruction counts assembly code generated gcc arm cross compiler wa ad options 
code size function small functions iterative sa icache dcache obtain frequent cache hits low cpi shown table set fusion functions model communication intensive workload application fusion instr cycles time cpi footprint kb function count ms runtime collage edged select fd fr mb table fusion function costs required number cycles measured time memory footprint 
selection fd fr multiple source sink relay edged collage idle fig 
campus wide surveillance application topology employ fd fr model workload task graph including heavyweight image processing function 
collage select fuse inputs output fd fr transform single input output 
compose classes functions subgraphs connect subgraphs build application task graph 
subgraph consists fusion function inputs come fusion functions outputs 
randomly choose functions appropriate class perform task graph construction 
map tree task graph fusion functions nodes closest exact tree geography 
lowest hop count paths fusion points adjacent task graph build relay node chains connect deployment 
disguise fusion point mismatches assigning upstream function output item size size items transmitted relay chain downstream function 
depicts sample topology experiments prior fusion point migrations node failures 
cameras located left edge sink located middle right edge 
nodes links sensor network idle 
darker lines indicate actively mapped links relay chains 
nodes host fusion point simultaneously 
show topology general imagine replicating multiple trees emanate different directions mode power mw power mw mbps bluetooth kbps transmit receive listen sleep table ii radio power model 
sink 
overlap links general hierarchical structure remain intact 
geographical tree structure generally representative sensor network fusion applications inherently location 
extension topology multiple sinks trivial simply plumbing extra sinks point hierarchy corresponding level aggregation inference required sources 
multiple overlapping task graphs merger basic structures topology 
power models processor voltage scaling popular technique saving energy today cmos microprocessors 
energy consumption cmos circuits accurately represented simple equation says clock frequency reduction linearly decreases energy consumption voltage reduction results quadratic decrease energy consumption 
sa specification find processor consumes mw mhz mw mhz volts 
power measurement experiments sa microprocessor indicate power requirement increases monotonically increase clock frequency 
earlier research sa confirms linear relationship 
linear model energy consumption data points determining energy usage clock speeds mhz 
memory memory major source energy consumption especially memory intensive workloads 
impact energy consumption difficult predict change clock frequency changes available memory bandwidth non linear fashion affects energy consumption memory access 
evaluation purpose simplified model memory access energy breakdown 
assume memory works modes similar operation direct rambus dram active idle sleep 
power consumption modes cited fan mw active mw idle mw sleep 
assume cpu executing fusion function memory accessed actively 
realistic scenario cpu execution memory activity interleaved memory keep switching active standby modes cpu execution 
assumption accounts worst case energy consumption memory simplifies simulation efforts 
report dram energy consumption mb data read decreases monotonically increase clock frequency 
words clock frequency scaling opposite effects cpu memory energy consumption 
potential dynamic cpu scaling decision needs address relationship 
studies perform local dynamic cpu scaling interested discovering fundamental tradeoffs help direct local scaling 
communication radio communication medium target sensor network domain power hungry cpu memory radio 
saving communication energy critical increasing application lifetimes 
simulations power consumption different radio modes shown table ii 
numbers corresponding different bandwidths orinoco network card bluetooth radio card 
orinoco card operate multiple data rates corresponding power results available specifications 
transmission rate radios 
bluetooth numbers valid shorter transmission range ft class devices compared range ft open ft closed space 
scale campus size respect radio range initial topology experiments 
early experiments observe energy drain idle nodes waiting listen mode long periods time dominates energy network 
way reducing cost impose duty cycle network nodes enabling enables incur lower sleep radio costs time listen mode 
include variant radio power model assumes optimal sleep duty cycle radio uses listen mode uses sleep mode 
having duty cycle incurs overhead scheduling 
imposing arbitrary overhead general sensor network model choose explore lower bound radio cost listen mode including optimal sleep mode optional radio power model 
previous research shows lower bound assumption reasonable efficient radio wake main communication radio necessary 
simulator event driven simulator built evaluate sensor network de varying architectural middleware workload characteristics 
consists approximately lines code available download www cc gatech edu files tar gz 
simulator includes rich set configuration options extensible support additional simulated middleware features 
currently simulator models sensor network collection nodes communication links 
supports simulation network data fusion application generated items application specified fusion functions 
supports fusion point migration nodes driven application specified cost function mev 
current implementation supports upwards simulated sensor network nodes 
limiting factor recalculation complexity routing tables floyd warshall pairs shortest path algorithm happens time node dies due low energy 
simulator models shared scheduling cpu radio resources multiple concurrent resource requests 
example node hosts fusion points simultaneously fusion function execution simulator serializes access cpu simulated time 
bulk simulator concerned accurately modeling middleware events ranging message delivery migration completion 
example node fusion point input relay chains shuts simulator needs correctly destroy rebuild input relay chain rebuilding routing tables process 
items transit relay chain need accounted state producer consumer ends relay chain needs updated account change 
migration uses basic relay chain rebuild mechanism implement remapping fusion point neighbor node 
prevent need old fusion point host forward communications new host migration delayed items transit migrating point input output relay chains 
prefetching implemented giving fusion point buffer store fused results attaching sink directly fusion point 
special sinks incur energy delay costs drive fusion points request fuse fast possible room local output buffers 
ideal mac layer incurs energy latency overhead due packet loss 
simulator serializes simulated time access radio channels nodes pairwise basis modeling simple lossless collision free mac layer 
relax ideal assumption looking basic guidelines current 
assume routing layer provides notification pending node battery failure piggybacked top regular traffic enabling route maintenance 
currently impose modeled overhead local calculation cost function relatively infrequent incur minimal communication immediate neighbor nodes account migration costs 
model cost initial application deployment currently highly dependent potential factors primarily sensor node os bootstrapping characteristics 
results answer questions earlier scope section results series experiments simulator varying workload architecture middleware characteristics 
baseline results discuss resulting application figures merit simulations middleware prefetching migration features 
presents round trip latency throughput lifetime total number delivered items different cpu speeds radio types orinoco vs bluetooth sleep duty cycle configurations application workloads 
combination input variables leads different setups experiment varying cpu speeds 
top left graph shows round trip latency different cpu speeds setups 
optimal sleep duty cycle difference achieved latency distinct curves visible 
sleep duty cycle difference achieved latency variables held constant costly duty cycle simply shorten application lifetime draining nodes energy faster impact communication behavior 
cpu intensive application workload latency decreases cpu speed increases 
additionally slower bluetooth interface kbps vs mbps orinoco causes larger latency workloads 
orinoco communication intensive workload achieves best latency 
top right graph shows throughput different cpu speeds 
cpu intensive workload throughput increases monotonically cpu speed increase 
latency graph cpu speed affect communication intensive workload throughput 
similarly orinoco achieves better throughput bluetooth baseline 
bottom left graph depicts application lifetime amount time application task graph partitioned due node failure 
communication intensive workload longer lifetime 
effect ideal sleep duty cycle apparent expensive orinoco radio listen latency seconds life time seconds listen cpu sleep cpu listen cpu sleep cpu listen comm 
sleep comm 
listen comm 
sleep comm 
cpu clock mhz cpu clock mhz throughput number items seconds delivered items lifetime cpu clock mhz cpu clock mhz fig 
baseline results migration prefetching disabled energy combination sleep duty cycle leads lowest application lifetimes 
interesting note communication intensive workload shorter lifetime cpu intensive workload orinoco optimal sleep duty cycle 
implies communication costly computation communication intensive workload orinoco radio 
bluetooth setups reverse relation giving longer lifetimes workloads longer lifetimes orinoco configurations 
final bottom right graph gives number delivered items application lifetime different setups cpu speeds 
workload orinoco best orinoco provides largest bandwidth enabling higher throughput having midrange application lifetime 
cpu intensive workload radio configuration results lower number due high latency incurred cpu energy cost plus radio sleep cost item delivered 
middleware prefetching results effects enabling middleware prefetching application figures merit setups 
shows results 
results indicate prefetching effect latency cutting approximately half vs baseline results improves throughput similarly 
prefetching levels task graph enables pipelining items 
prefetching radio differences workloads terms latency throughput maximum latency prefetching enabled upper bounded slowest step pipeline cpu bound cpu intensive workloads 
throughput improves prefetching energy consumption unit time network increases cases leading drop lifetime 
prefetching increases number delivered items application lifetime general workloads wasting energy listening sleeping 
reason prefetching enabled number delivered items communication intensive workload expensive listen mode rises close amount optimal sleep duty cycle radios 
middleware migration results effects migration application figures merit keeping prefetching enabled 
shows results 
latency smooth earlier experiments fairly similar trend improves increasing cpu speed 
furthermore cpu intensive workload continues worst performing sensitive cpu speed 
latency spikes seen bluetooth cpu intensive configurations result large life time seconds latency seconds life time seconds latency seconds listen cpu sleep cpu listen cpu sleep cpu listen comm 
sleep comm 
listen comm 
sleep comm 
cpu clock mhz cpu clock mhz cpu clock mhz throughput number items seconds delivered items lifetime cpu clock mhz fig 
results prefetching enabled listen cpu sleep cpu listen cpu sleep cpu sleep comm 
listen comm 
sleep comm 
listen comm 
cpu clock mhz throughput number items seconds delivered items lifetime cpu clock mhz cpu clock mhz cpu clock mhz fig 
results prefetching migration enabled latency incurred migration fusion function state cpu intensive workload fd fr mb 
limited bluetooth bandwidth combination frequent migrations triggered mev cost function leads spikes 
throughput suffers similarly bluetooth cpu intensive configurations migration 
minor differences appear throughput results configurations artifacts differing migration paths chosen mev 
example perceivable difference orinoco workloads throughput optimized sleep duty cycle 
lifetime results prefetching migration quite interesting 
expected configurations experienced greatly increased lifetimes 
example bluetooth cpu intensive optimized sleep duty cycle configuration increased lifetime approximately seconds migration seconds mev migration 
sense configuration radio energy drain cheapest spends time performing migrations migrating channel performs actual fusion limiting usage processors 
delivered items lifetime increases configurations migration enabled 
mev cost function enables task graph remap locally node hosting fusion function failing battery 
migration enables application take advantage redundant energy resources network 
experiments cpu intensive workload achieves increased delivered items lifetime general cpu speed increases workloads experience trend 
cpu speed increase incurs smaller increase energy consumption 
throughput increases cpu speed increases smaller increase energy consumption 
low cpu speeds communication intensive workloads near maximum throughputs 
lessons learned results confirm intuition latency throughput closely dependent architectural configuration options 
see benefits multiple clock frequency variable bandwidth support 
typical sensor network environment get bursty load bursts handled temporarily increasing cpu clock frequency network bandwidth 
migration done judiciously carefully chosen cost function 
indiscriminate migration may result wasting energy greatly reducing throughput 
vi 
related characterize sensor applications motivated middleware initiatives irisnet support smart sensors current technology trends voltage frequency scaling 
studies reinforce vision evolution sensor networks assumed study 
irisnet builds ubiquity cameras role serving source abundant information 
irisnet uses database centric approach publish generated data uses xml query network 
sensors send data resource rich proxy processes data find interesting features update sensor database distributed network 
processing nodes powered irisnet care optimizing energy consumption 
middleware supports migration processing nodes save energy balance load 
done application specified cost functions similar test effectiveness migration 
results account transmission energy energy consumed processing memory node 
study actual sensor network deployment limited nodes bound hardware characteristics 
simulation study supports evaluation varying middleware architectural characteristics sensor networks order nodes 
simulation frameworks exist evaluating sensor network infrastructures em 
wireless network simulation frameworks specialized berkeley mote sensors communication channels 
study focuses modeling energy usage performance middleware range futuristic sensor node architectures requiring fairly detailed implementation middleware inside simulator decoupling specific target device 
relaxing ideal mac layer assumption clear avenue benefit existing probabilistic wireless model em mac simulator 
pursuit quality service support saving energy researchers developed techniques adapting application middleware os network protocols hardware 
need look adaptation coordinated manner layers study effort direction 
vii 
envision sensor networks comprised nodes computational power today handhelds wireless communication capabilities today bluetooth 
vision opens possibility supporting variety interesting applications sense process actuate control loop involving high bandwidth streams complex processing streams 
middleware supporting applications include capabilities fusion migration fusion points prefetching items needed fusion ability dynamically change device characteristics 
simulation study quantify interplay device characteristics middleware features supporting instance control loop application distributed surveillance 
quite non intuitive results study 
presence prefetching capacity radio threshold lead improved latency compute intensive workloads 
indiscriminate migration result poor latency compared baseline configuration migration 
migration simple cost function cpu intensive workloads high bandwidth radios high bandwidth cpus may achieve throughput latency productivity communication intensive workloads low bandwidth radios cheap cpus 
design space covered study part possible 
includes investigating cost functions aware dynamic state application device characteristics just instantaneous energy level 
wireless collision error prone incorporating realistic mac layer model dense sensor networks 
interesting study effects dynamically scaling devices characteristics network node 
acknowledgments funded part nsf itr ccr nsf ccr hp compaq cambridge research lab project state georgia georgia tech broadband institute 
equipment experimental studies funded part nsf research infrastructure award eia intel kumar shin paul ramachandran framework distributed data fusion proceedings international conference embedded networked sensor systems 
acm press pp 

han srivastava design implementation framework programmable efficient sensor networks international conference mobile systems applications services mobisys san francisco ca 
kremer hicks rehg compilation framework power energy management mobile computers 
online 
available citeseer ist psu edu kremer compilation 
html brodersen processor design portable systems 
online 
available citeseer ist psu edu processor html intel strongarm sa developer manual document intel 
wallach power evaluation handheld computer ieee micro 
langendoen sips dynamic voltage scaling low power microprocessor th acm int 
conf 
mobile computing networking mobicom rome italy july pp 

anne black cooper donahue eno lee lin madden murray pearce snyder mhz cmos risc microprocessor digital tech 
vol 
pp 

fan ellis lebeck memory controller policies dram power management proceedings international symposium low power electronics design 
acm press pp 

orinoco pc card specification www hyperlink tech com web orinoco orinoco pc card spec html 
oki semiconductor ml la specification www oki com semi english blue htm june 
agarwal gupta demand paging bluetooth radios networks center embedded computer systems uc irvine uc san diego tech 
rep july 
gibbons karp ke nath seshan irisnet architecture worldwide sensor web vol 

shin real time dynamic voltage scaling low power embedded operating systems acm symposium operating systems principles pp 

online 
available citeseer ist psu edu realtime html semeraro dwarkadas scott dynamic frequency voltage control multiple clock domain microarchitecture proceedings th annual acm ieee international symposium microarchitecture 
ieee computer society press pp 

simon optimization communication protocols large scale wireless sensor networks proceedings ieee aerospace conference march 
girod elson cerpa ramanathan estrin em software environment developing deploying wireless sensor networks proceedings usenix 
de lara wallach zwaenepoel puppeteer component adaptation mobile computing poster session sigops oper 
syst 
rev vol 

schwan cooperative run time management adaptive applications distributed resources proceedings tenth acm international conference multimedia 
acm press pp 

noble satyanarayanan narayanan flinn walker agile application aware adaptation mobility proceedings sixteenth acm symposium operating systems principles 
acm press pp 

ye heidemann estrin energy efficient mac protocol wireless sensor networks proceedings infocom new york new york june 
yao demers shenker scheduling model reduced cpu energy proceedings th annual symposium foundations computer science focs 
ieee computer society 
