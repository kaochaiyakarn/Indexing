library hierarchies graphs views marcus university passau passau germany fmi uni passau de 
introduce base architecture software library combines graphs hierarchies views describes interactions 
graph may arbitrarily hierarchies hierarchy may arbitrarily views 
hierarchies views added removed dynamically corresponding graph hierarchy respectively 
software library shall serve platform algorithms data structures hierarchically structured graphs 
graphs increasingly important occur special applications call graphs software engineering biochemical pathways particular need manipulate draw graphs 
graphs model structured data road maps locations connected roads web graph web pages connected links biochemical pathways substances connected reactions 
particularly large graphs important view manipulate automatically draw software tools 
clearly tools rely appropriate data structure graphs 
exist various libraries implementing data structures graphs leda boost graph library 
applications large graphs 
graphs manipulated ciently powerful operations acting subgraphs 
repeated subgraphs induces hierarchical structure 
particular means visualization large graphs certain subgraphs may collapsed represented meta node 
various concepts extending graphs hierarchical structure :10.1.1.49.6760:10.1.1.20.6336
layout algorithms interactive systems working concepts :10.1.1.49.6760
inclusion hierarchy top graph define representations graph called views 
displaying single node graph view subset nodes represented node 
nodes connected edge edge nodes corresponding subsets 
graph editor views convenient simultaneously provide overview graph details special portion 
respects marcus view compared known tree views file systems initially topmost layer folders shown folders interest expanded view 
thorough description software architecture library providing graphs hierarchies views 
contribution prototype implementation step 
related notions hierarchically structured graphs literature 
depending purpose definitions come di erent flavors ranging succinct representations large graphs graph drawing :10.1.1.49.6760
surveyed 
structuring graph hierarchically employed statecharts 
term higraph defined ordinary graph acyclic inclusion relation nodes 
higraph seen directed acyclic graph dag describing inclusion hierarchy additional graph edges connecting arbitrary nodes 
compound graphs consist set nodes inclusion edges adjacency edges inclusion edges induce directed graph tree adjacency edges induce directed graph 
higraph compound graph seen directed graph describing hierarchy additional adjacency edges connecting arbitrary nodes 
closely related compound graphs higraphs 
root node possibly empty set sub set edges nodes di erent sub 
means edge stored common ancestor connects 
higraphs compound graphs distinguish properly nodes underlying graph nodes hierarchy 
hand clustered graphs consist ordinary graph tree leaves tree exactly nodes graph 
seen tree describing inclusion hierarchy additional graph edges leaves 
node tree represents cluster nodes graph leaves subtree rooted node 
additional restriction long tree edges tree edges connecting nodes heights tree di er view level clustered graph graph consisting nodes height tree 
nodes view connected edge graph edge connecting respective clusters 
notion view clustered graph generalized 
view subset nodes tree corresponding clusters partition set nodes graph 
view detailed coarsened needed 
shown maintain view clustered graph ciently navigating hierarchy methods collapse expand 
library hierarchies graphs views interactive systems operations explore clustered graphs 
describe thoroughly coherence graph hierarchies views software engineering perspective 
systems model clustered graphs extension ordinary graphs provide views 
results propose software architecture interaction graphs hierarchies views 
employing observer design pattern twice model features arbitrary number hierarchies graph arbitrary number views hierarchy 
model prepares ground graph library hierarchies views 
library integrated graph editor graph layout tool provides additional dimension structuring graphs working large graphs convenient 
implementation model available 
allow hierarchy graph need rigid distinction graph hierarchy 
extend clustered graphs cross edges tree nodes 
cross edges seen edges higher level abstraction describe relation clusters nodes edges graph describe relation nodes graph 
model generalize views defined clustered graphs 
views need cover graph model subgraphs views subgraphs 
basic notions definition 
graph nodes edges 
hierarchy consists nodes cross edges grouping function ii iii iv nodes called inner nodes called cluster hierarchy graph seen rooted tree leaves corresponding exactly nodes underlying graph cross edges connecting tree nodes predecessors 
fig 
hierarchy graph depicted inclusion diagram 
solid lines edges graph dashed ones cross edges 
boxes represent clusters 
shows graph hierarchy tree graph edges cross edges 
marcus fig 

inclusion diagram fig 

tree fig 

view cross edges notion hierarchy general clustered graphs 
definition di ers compound graphs higraphs hierarchy may dag cross edges allowed 
equivalent model provide rigid distinction graph hierarchy necessary hierarchy graph 
definition 
view hierarchy graph graph nodes 
nodes connected edge connected cross edge ii connected edge shows view hierarchy fig 

edges examples ii respectively 
views 
definition generalizes various respects 
clusters nodes view need cover graph 
model subgraphs views subgraphs 
cross edges views edges connecting clusters connected underlying graph 
core architecture main classes class diagram fig 
graph hierarchy view 
classes observable graph observer primarily interfaces modeling observer design pattern 
assumptions assumptions guided design library 

fully dynamic graph hierarchy view nodes edges added removed underlying graph 
inner nodes hierarchy inserted deleted nodes view expanded collapsed 
library hierarchies graphs views graph graph new node node new edge node node edge delete node node delete edge edge observer observer observable graph new node handler node new edge handler edge delete node handler node delete edge handler edge observable graph observable graph add observer remove observer observed observers hierarchy hierarchy observable graph new node inputiterator inputiterator node get root node son edges son edge iterator son edges son edge iterator get father edge node edge induced edge node node int predecessor node node bool inner node node bool cross edge edge bool view view hierarchy inputiterator inputiterator expand node collapse node fig 

core architecture 
arbitrarily hierarchies graph hierarchy describes dimension abstraction grouping locations road map geographical proximity 
may necessary convenient dimension abstraction graph hierarchy 
consider instance web graph grouped domain topic 

arbitrarily views hierarchy view defines version graph terms associated abstraction hierarchy cf 
definition 
clearly convenient view especially viewer editor user see overview detailed view 

minimize redundant information definition graph part associated hierarchy view part hierarchy cf 
definition 
objects subject change important minimize redundancy 

reusable algorithms hierarchies views seen graphs graph algorithms applicable 
clearly algorithms implemented 
graphs nodes edges class graph common base class hierarchy view 
consists nodes edges basic methods adding removing objects 
provides methods traversing accessing nodes edges 
includes methods traversing adjacency node particular 
words marcus graph full control nodes edges handles state functionality 
examples model graphs leda boost graph library 
appropriate alternative nodes edges objects controlling adjacency lists adjacency list node 
hand adjacency list graph node graph manages lists 
words nodes shared graphs important avoid redundancy 
observer pattern partly classes observer observable graph form observer design pattern 
observable graph extends graph methods adding removing observers dynamically 
object observer derived observer implement callback methods new node handler 
methods modify graph redefined observable graph order trigger appropriate callback method observers modified object argument 
notification new node edge occurs change deleting node edge announced advance 
hierarchies shown fig 
hierarchy observer observable graph 
observer part keeps track modifications underlying graph observable graph part informs attached views changes graph hierarchy 
definition hierarchy exist underlying graph 
constructor takes observable graph argument 
initially hierarchy consists root nodes associated graph sons cross edges 
hierarchy graph modified methods defined graph 
hand hierarchy special graph tree cross edges method violate invariant 
methods redefined follows new node creates new leaf new node underlying graph attaches root 
new edge leaves new edge underlying graph created 
inner node predecessor new cross edge inserted 
delete node leaf deleted underlying graph 
inner node root sons attached directly father deleted 
library hierarchies graphs views delete edge depending cross edge edge leaves deleted hierarchy underlying graph respectively 
inserting new inner node method new node provided 
arguments specify set nodes range iterators collection nodes 
required nodes range father hierarchy 
new inner node inserted nodes father new node new father nodes inserted son old father 
apart explicit changes hierarchy adapted underlying graph modified 
achieved implementing callback methods observer interface accordingly 
new node underlying graph leaf attached root node deleting node graph results removing corresponding leaf hierarchy 
adding removing edge graph result change hierarchy 
attached views notified changes graph hierarchy 
new methods hierarchy shown fig 
navigation hierarchy son edges get father edge provide information views induced edge predecessor 
views view graph observer 
graph part version underlying graph terms associated hierarchy 
observer part listens changes hierarchy updates view accordingly 
time view consists subset nodes hierarchy constructor view takes arguments hierarchy initial subset view 
subset range collection nodes iterators 
view graph modified standard methods defined graph 
hand view consists nodes associated hierarchy induced edges modifications forwarded hierarchy 
methods redefined view order call respective methods hierarchy 
view notified change hierarchy graph check ected 
instance node hierarchy deleted view adapted node part view 
order perform updates ciently view query methods provided hierarchy induced edge predecessor 
method view expand replaces node view sons conversely view collapse replaces sons node node 
methods view removes nodes incident edges inserts 
inserting new nodes view uses query methods hierarchy induced edge determine adjacency 
view represent version graph navigate hierarchy direction 
marcus architecture model library featuring graphs arbitrary number hierarchies views 
library shall help handling large graphs convenient manner 
graph editors drawing exploring large graphs interactively 
model prepares ground data structures cient implementation hierarchies views algorithms advantage additional hierarchical structure 


www ads tuwien ac index html 
boost 
boost graph library 
www boost org graph doc 
brandenburg forster pick schreiber 

proc 
graph drawing volume lncs pages 

drawing clusters hierarchies 
kaufmann wagner editors drawing graphs methods models volume lncs pages 
springer verlag 
buchsbaum goodrich westbrook 
range searching tree cross products 
paterson editor th european symposium algorithms esa volume lncs pages 
springer verlag 
buchsbaum westbrook 
maintaining hierarchical graph views 
th acm siam symposium discrete algorithms soda pages 
eades 
feng 
multilevel visualization clustered graphs 
proc 
graph drawing volume lncs pages 
gamma helm johnson vlissides 
design patterns elements od reusable object oriented software 
aw professional computing series 
addisonwesley 


www fmi uni passau de 
harel 
visual formalisms 
comm 
acm 


www fmi uni passau de 
himsolt 
und implementierung von 
phd thesis fakultat fur und informatik universitat passau 
huang eades 
fully animated interactive system clustering navigating huge graphs 
proc 
graph drawing volume lncs pages 
lai eades 
graph model supports flexible layout functions 
technical report university newcastle 
leda 
leda 
www algorithmic solutions com 
lengauer 
cient solution connectivity problems hierarchically defined graphs 
siam journal computing 

visualization system clustered graphs graph algorithms 
proc 
graph drawing volume lncs pages 
sugiyama misue 
visualization structural information automatic drawing compound digraphs 
ieee trans 
systems man cybernetics 
