cubesvd novel approach personalized web search jian tao sun dept computer science tsinghua university beijing china mails tsinghua edu cn lu dept computer science tsinghua university beijing china tsinghua edu cn competition web search market increases high demand personalized web search conduct retrieval incorporating web users information needs 
focuses utilizing clickthrough data improve web search 
millions searches conducted everyday search engine accumulates large volume clickthrough data records submits queries pages clicks 
clickthrough data highly sparse contains different types objects user query web page relationships objects complicated 
performing analysis data attempt discover web users interests patterns users locate information 
novel approach cubesvd proposed improve web search 
clickthrough data represented order tensor perform mode analysis higher order singular value decomposition technique automatically capture latent factors govern relations multi type objects users queries web pages 
tensor reconstructed cubesvd analysis reflects observed interactions objects implicit associations 
web search activities carried cubesvd analysis 
experimental evaluations real world data set collected msn search engine show cubesvd achieves encouraging search results comparison standard methods 
categories subject descriptors information storage retrieval information search retrieval search process information storage retrieval online information services web services conducted completed author doing internship microsoft research asia beijing china 
copyright held international world wide web conference committee iw 
distribution papers limited classroom personal 
www may chiba japan 
acm 
hua jun zeng microsoft research asia sigma center road beijing china microsoft com zheng chen microsoft research asia sigma center road beijing china microsoft com general terms huan liu dept computer science arizona state university tempe az usa asu edu algorithms experimentation performance keywords clickthrough data cubesvd higher order tensor singular value decomposition personalized web search searching ranking 
increase www resources fueled demand effective efficient information retrieval 
millions searches conducted day search engines yahoo google msn despite popularity search engines deficiencies query usually return huge list results pages ranked top may meet users needs 
reason problem keyword query interface difficult users describe exactly need 
typical search engines exploit user information 
users submit query information need may different 
example query jaguar issued google results returned 
regardless submits query pages returned rank orders identical 
jaguar may refer jaguar car jaguar cats users different interests may want search results ranked differently car fan may expect car relevant pages ranked highly pages may unnecessary displayed 
search results adapted person submits query query submits 
personalized web search carry retrieval user incorporating information need 
competition search market increases search engines offered personalized search service 
example google personalized search allows users specify web page categories interest 
web search systems relevance feedback refine user needs ask users register demographic information order provide better service 
systems require users engage additional activities search specify modify preferences manually approaches able implicitly capture users information needs developed 
focuses utilizing clickthrough data improve web search 
consider typical search scenario user submits query search engine search engine returns list ranked web pages user clicks pages interest 
period usage server side accumulate collection clickthrough data records search history web users 
data objects contained clickthrough data different types user query web page furthermore relationships objects complicated 
example users similar information needs may visit pages similar topic submit different queries users dissimilar needs may visit different pages submit query jaguar example indicates 
assumed clickthrough data may reflect web users interests may contain patterns users information :10.1.1.12.3161
performing analysis clickthrough data attempt discover latent factors govern associations multi type objects 
consequently web pages recommended associations captured 
clarify characteristics specific personalized web search clickthrough data analysis 
task related recommender systems extensively studied :10.1.1.29.8381:10.1.1.21.4665
recommendation algorithms collaborative filtering cf applied way data containing user preferences items clickthrough data analysis deals way data 
far know previous literature recommendation contains studies data kind 
way clickthrough data imposes challenges relations user query web page complicated 
exist intra relations objects type inter relations objects different type 
personalized web search tasks concerned order relations 
user query issued user purpose predict user interested web page 
unified framework needed model multi type objects multi type relations 
way data highly sparse 
know cf algorithms susceptible data sparsity 
clickthrough data sparseness problem serious user submits small number queries small set web pages visited user 
latent semantic indexing lsi proved useful address data sparseness problem twoway data recommender systems open problem way data case 
order address problems mentioned need approach dealing clickthrough data way highly sparse 
develop unified framework model types objects user query web page 
clickthrough data represented order tensor mode analysis performed higher order singular value decomposition hosvd technique 
tensor representation dimensional approach multilinear extension matrix singular value decomposition svd name cubesvd 
remainder organized follows 
section provides related 
section gives brief svd hosvd techniques 
section describes proposed cubesvd algorithm 
section presents experimental results section offers concluding remarks directions research 

related section briefly research literature related personalized web search recommender systems svd recommendation clickthrough data relevant mining technique higher order singular value decomposition hosvd 
previous personalized search techniques user profiling 
generally user profiles created asking users fill registration forms specify web page categories interests 
users modify preferences interests change 
works automatic creation user preferences 
user profiles updated accumulating preferences reflected past browsing history 
user profile represented hierarchical category tree corresponding keywords associated category 
user profile automatically learned user search history 
current web search engines focus hyperlink structures web 
example google calculated universal pagerank vector reflects relative importance page 
personalized pagerank modification global pagerank proposed personalized web search 
topic sensitive pagerank proposed improve personalized web search 
authors proposed compute set pagerank vectors capture page importance respect particular topic 
user context information approach difficult evaluate results achieved satisfy user information need 
search engines recommender systems developed recommend movies music web pages recommender systems analyze matrix containing user preferences items 
algorithms collaborative filtering cf group popular methods :10.1.1.21.4665
philosophy cf recommend items preferences similar users 
group users share similar interests items preferred user recommended group 
neighborhood formation requires sufficient amounts training data cf sensitive data sparsity 
order address issue latent semantic indexing lsi applied recommender systems promising results achieved 
lsi truncated singular valued decomposition successfully information retrieval ir community 
authors lsi recommendation tasks predict product preferred customer generate list top recommendations 
lsi studied collaborative filtering applications 
web usage mining techniques achieved great success various application areas 
far know seldom works incorporating way clickthrough data personalized web search 
exception extended hofmann aspect model incorporate way occurrence data recommendation problem 
visualization matrix svd web search application 
technique introduced uses clickthrough data order improve quality web search 
author uses relative preferences web pages learns retrieval functions 
authors examine interrelated data objects clickthrough data put forward reinforcement clustering algorithm cluster multi type objects 
higher order singular value decomposition technique proposed 
generalization singular value decomposition successfully applied computer vision problems 
propose hosvd technique personalized web search 

svd hosvd cubesvd approach hosvd technique generalization matrix svd briefly review matrix svd introduce tensor hosvd technique 
tensors denoted calligraphic upper case letters matrices uppercase letters scalars lower case letters vectors bold lower case letters 
matrix svd svd matrix visualized 
matrix written product matrices left right singular vectors 
column vectors orthogonal 
diag min diagonal matrix singular values satisfy min 
setting smallest min singular values zero matrix approximated rank matrix approximation best measured reconstruction error 
theoretical details matrix svd 
tensor hosvd tensor higher order generalization vector order tensor matrix second order tensor 
higherorder tensors called multidimensional matrices multi way arrays 
order tensor elements denoted ai 
tensor terminology matrix column vectors referred mode vectors row vectors mode vectors 
mode vectors th order tensor dimensional vectors obtained varying index keeping indices fixed column vectors mode matrix unfolding tensor see details matrix unfoldings tensor 
visualization order singular value decomposition mode product tensor matrix jn jn tensor entries ai note mode product tensor matrix generalization product matrices 
expressed terms matrix unfolding ma mode unfolding tensor terms mode products matrix svd rewritten extension hosvd generalization matrix svd tensor written mode product vn illustrated 
vn contains orthonormal vectors called mode singular vectors spanning column space matrix mode matrix unfolding tensor 
called core tensor 
nonzero elements occur indices satisfy property orthogonality 
sin sin orthogonal possible values subject time frobenius norms sin mode singular values decreasing order general full tensor governs interactions vn 

cubesvd web search search engine find information user submits query search engine returns list urls corresponding descriptions target web pages user clicks pages interest 
time usage search engine accumulates collection clickthrough data represented set triplets clickthrough data construct order tensor sets frobenius norm tensor defined scalar product tensors defined ai bi sin obtained fixing nth index details referred 
table details web pages toy problem page url title www bmw com bmw international website www com com home page www com en home htm jaguar cars dspace dial com ver htm big cats online home 
construct tensor clickthrough data 
suppose numbers user query web page respectively tensor element measures preference user query pair web page 

calculate matrix unfolding au aq ap tensor au calculated varying user index tensor keeping query page index fixed 
aq ap computed similar way 
au aq ap matrix nk mk mn respectively 

compute svd au aq ap set vu vq vp left matrix svd respectively 

select 
remove right columns vu vq vp denote reduced left matrix wu wq wp respectively 
calculate core tensor follows 
reconstruct original tensor vu vq vp outline cubesvd algorithm 
users queries pages respectively 
element tensor measures preference pair page simplest case occurrence frequency 
tried approaches measure preference 
tensor constructed cubesvd algorithm applied 
cubesvd algorithm cubesvd approach apply hosvd order tensor constructed clickthrough data 
accordance hosvd technique introduced section cubesvd algorithm input clickthrough data output reconstructed tensor 
measures associations users queries web pages 
elements represented measures user visit page submits query web pages recommended weights associated pair 
toy problem example subsection order illustrate approach works apply cubesvd algorithm toy problem 
illustrated users issued different queries bmw audi jaguar big cat clicked web pages 
arrow line user query represents user issued corresponding query 
line query page indicates user clicked clickthrough data toy problem 
page issued query 
numbers arrow line gives correspondence types objects 
example user issued query bmw clicked page 
users performed clicks pages toy problem 
urls titles pages visited table 
query jaguar may refer jaguar car jaguar cats 
table find web pages cars page related cats 
see user common interests cars user interested big cat animals 
order tensor constructed clickthrough data 
simplicity assume duplicate page visits 
user issues query clicks web page user clicks page 
occurence frequency user query page elements tensor table 
performing cubesvd analysis get reconstructed tensor 
table gives output cubesvd algorithm illustrated 
table rows italic font represents link relation exist original clickthrough data 
table output cube svd algorithm toy problem interesting new associations objects come 
original clickthrough data find user issued query 
direct indication pages recommend users submits query query ambiguous 
algorithm outputs table element associated elements associated pages zero 
issues query visit page arrow line 
similarly user submits query visit arrow line table tensor constructed clickthrough data toy problem arrow line user query page weight table output cubesvd algorithm toy problem arrow line user query page weight 
results reasonable concerned cars big cat animals opposite 
users issued query algorithm recommend web pages analyzing clickthrough data 
cubesvd approach able capture latent associations multi type data objects user query web page 
associations improve web search accordingly 
dimension selection latent associations types objects captured cubesvd stored reconstructed tensor 
step cubesvd algorithm illustration cubesvd algorithm output toy problem 
know tensor constructed product core tensor left matrix vu vq vp dimensions selected step 
core tensor governs interactions user query web page objects determination core tensor dimensionality may play important role result algorithm 
verified experiments section 
recall dimensional case lsi computes low rank approximation original term document matrix capture semantic concepts document set 
resulted matrix calculated truncated svd indicates 
previous experiments indicate number singular values kept diagonal matrix crucial lsi performance 
determine dimension ongoing research problem 
cubesvd approach determination core tensor dimensions difficult lsi 
lsi term document matrix dimensional parameter number nonzero singular values needs decided 
cubesvd dimensional parameters determined 
cubesvd algorithm core tensor calculated product tensor columns vu vq vp kept determines dimensions core tensor 
left matrix vu vq vp calculated solving svd problems matrix unfolding au aq ap respectively eigenvalue method determine core tensor dimensions empirically 
tensor decomposition property mx iu iu nx iq iq kx ip ip discarding smallest mode singular values zero obtain approximation original tensor discussed bigger respectively energy lost significant bounded equation 
property eigenvalues matrix unfolding svd problems smallest eigenvalues discarded reducing dimensionality core tensor 
tuned empirically 
weighting policy cubesvd algorithm tensor value measures preference user query pair web page 
page click frequency tensor value algorithm inclined biasing tensor elements high frequency 
try weighting approaches boolean model 
user query pair page clicked tensor value associated objects 
second re weighting click frequency 
method ir community 
clickthrough data triple weight corresponding tensor value re weighting page click frequency log log function scaling page click frequency order reduce impact highly frequent visits 
third approach similar second 
take account inverse document frequency idf web page frequency page visited different users 
intuition web page visited users representative measuring users interests log equation denotes idf web page 
weighting schemes denoted weight boolean weight log freq weight log freq idf respectively scheme weighting denoted weight freq tested experiments section 
smoothing scheme dimensional case lsi uses occurrence words documents capture latent semantics document set words occur frequently may semantically related 
dimensional case cube svd algorithm applied clickthrough data contains occurrence types objects user query web page 
link relations scarce latent associations may difficult capture 
generally user issues query may visit small set pages interest may lead highly sparse tensor 
employ smoothing methods address sparseness problem corresponding results compared smoothing 
constant smoothing pages user query pair visit corresponding tensor value zero 
intuitive straightforward smoothing method replace zero tensor elements small constant page visited clickthrough data assumed page general visited small probability issues query page similarity smoothing second smoothing method content similarities web pages 
user query pair set pages visited 
page denotes pages visited similarity pages calculated replace corresponding tensor elements sim equation measures similarity page page represented vector word weight similarity pages measured cosine angle corresponding vectors wp wa wp denotes weight term page smoothing techniques smoothing denoted smooth constant smooth content smooth respectively 
normalization dimensional case lsi information retrieval normalization scheme high impact retrieval precision 
tensor dimensions normalized dimension experiment result may different 
compared normalization methods 
example tensor normalized user dimension user tensor values corresponding constant tensor values sum division iq ip normalization query web page dimension similar 
normalization methods denoted normalize user normalize query normalize page respectively 
discussed section 
ordering issue techniques discussed sections combined cubesvd algorithm 
discussed section dimension selection step cubesvd algorithm 
weighting smoothing normalization construct tensor data applied step cubesvd 
similar lsi applied ir applications order kinds techniques weighting smoothing normalization 
weighting technique assign value tensor elements associated triples occurred clickthrough data 
smoothing techniques replace empty elements tensor 
smoothing normalization applied order regard objects type equal importance tensor construction 
example tensor normalized user dimension user equally important tensor construction number queries user issued number pages user visited may different 
weighting smoothing normalization techniques applied tensor construction step complete 

experiments section introduce experimental data set evaluation metrics experiment results 
data set set msn clickthrough collected experimental data set 
data set contains records days dec jan 
collected clickthrough data crawled web pages odp dmoz org directory 
clickthrough data split parts training test set 
comprises weeks data collection 
rest data testing 
training data unique items user query web page grouped entry frequency summed 
remove web pages occurred clickthrough data crawled crawler 
processing step training data contains entries having users pages queries 
odp web pages clicked web users weeks 
user identified ip address 
utility utility performance cubesvd dimensions core tensor vary 
leftmost user dimension fixed dimensions change 
middle query dimension fixed 
rightmost page dimension fixed 
appropriate multi users share ip address user accesses web dynamic ips 
words web search may conducted group users 
training dataset randomly select users clickthrough data apply cubesvd algorithm 
noise reduced removing web pages visited times users visited pages 
users clickthrough data test set evaluate search performance 
handle new queries new web pages contained test set 
las software package svd computation 
baseline algorithms comparison purpose investigate order associations captured dimensional svd approaches 
apply lsi user query matrix reduced rank approximation original matrix web page prediction 
collaborative filtering algorithm experiments 
cf apply memory algorithm vector similarity measure form neighbors refer equation 
evaluation measurements evaluate web search accuracy different algorithms rank scoring metric 
expected utility ranked list items defined rs rank web page list recommended user query pair accessed page test set set author 
final score reflects utilities user query pairs test set max rs rmax maximum possible utility obtained pages user query pair accessed appear top ranked list 
utility experimental results implemented weighting methods smoothing schemes normalization methods discussed section lead different settings 
evaluated cubesvd settings 
compare cubesvd cf lsi experiments 
influence core tensor dimensions conduct experiments study influence core tensor dimensions performance cube svd algorithm 
apply cubesvd tensors constructed different weighting smoothing normalization methods results show search accuracy high dependency dimensions core tensor 
example boolean weighting normalization query dimension smoothing get tensor 
dimensions associated matrix unfoldings respectively svd performed 
cubesvd algorithm achieves optimal accuracy utility core tensor dimension respectively 
dimension core tensor fixed find search accuracy varies dimensions change illustrated vertical axis denotes utility measure axes denote corresponding dimensions 
dimension fixed dimensions varied 
dimension increases step corresponding highest dimension measured fraction 
employed eigenvalue method determine dimensions core tensor 
parameter varied step 
experiment get dimension core tensor utility achieved approximate optimal result utility 
influence weighting smoothing normalization methods experiment results find normalization query dimension slightly better normalization user page dimension 
different weighting smoothing techniques consistent 
give group experiment results results correspond normalization query dimension 
different weighting smoothing meth search results cubesvd algorithm normalized query dimension associated different weighting policies smoothing schemes 
ods experiment 
find weighting policy may influence search results especially log frequency weighting method 
boolean model performs worst compared weighting methods 
expectation weight log freq idf weighting method weight log freq method worse weighting scheme weight freq 
find smoothing improve search accuracy 
constant smoothing method experiment outperforms smoothing 
page similarity smoothing approach better constant smoothing 
comparison approaches conduct experiments compare cubesvd lsi cf 
settings cubesvd outperforms lsi cf 
describes results algorithms page similarity smoothing normalization query dimension 
results associated weighting methods plotted 
lsi reduced dimension varies highest possible dimension matrix rank best result reported 
cf vary number neighbors report best result 
results find cubesvd outperforms baseline algorithms significantly 
discussions experiments observe cubesvd achieves better search accuracy cf lsi 
reason cubesvd exploit clickthrough data capture latent associations multi type objects 
kind high order associations captured cf lsi applied dimensional matrix data 
find core tensor dimensionality crucial performance cubesvd 
different weighting smoothing normalization methods impacts search accuracy 
experimental results weight log freq approach best weighting method 
inverse document frequency search result improve 
opinion reason exist pages frequently visited users different interests 
idf weighting search accuracy decreases 
search results cf lsi cubesvd 
smoothing techniques improve search result 
page content information page similarity smoothing better constant smoothing 
effect similarity smoothing sparse data observed 
analyzing cubesvd algorithm illustrated find time consumed steps 
step svd performed unfolded matrices 
tensor scale large step quite time consuming 
especially smoothing original sparse tensor relatively dense scale svd problem increases 
smoothing zero columns unfolded matrices decrease scale svd problem 
large scale cubesvd algorithm quite time consuming computation performed offline 
cubesvd analysis results help search web pages real time 
preferences user query pair web pages computed advance 
search results adapted users associations web pages users queries submitted 

personalized web search service play important role web 
focuses utilizing clickthrough data improve web search 
novel cubesvd approach proposed deal clickthrough data way highly sparse 
real world data set evaluate cubesvd algorithm combined variety techniques examining impact different weighing smoothing normalization methods 
experimental results indicate cubesvd approach significantly improve web search performance 
areas research current concerned users clickthrough data recorded 
queries issued pages clicked users considered 
interesting adapt framework newly emerged objects new users queries web pages 
possible approach combining cubesvd technique traditional content search model 
offline computation cubesvd quite timeconsuming especially clickthrough data contains large number objects 
cubesvd base approach seek ways improve efficiency 
plan conduct research automatically determine optimal dimensionality core tensor 
cubesvd framework proposed limited web search general applied applications way relations exist 

acknowledgments xue mei jiang ya bin kang help preparing data 
express xuan hui wang comments helpful discussions 

google personalized search 
labs google com personalized 
yahoo 
yahoo com 
lyle david steve 
probabilistic models unified collaborative content recommendation sparse data environments 
proceedings th annual conference uncertainty artificial intelligence uai pages san francisco ca 
morgan kaufmann publishers 
almeida almeida 
community aware search engine 
proceedings th international conference world wide web pages 
acm press 
berry varadhan 
version user guide 
technical report cs university tennessee 
breese heckerman kadie 
empirical analysis predictive algorithms collaborative filtering 
proceedings fourteenth annual conference uncertainty artificial intelligence pages 
morgan kaufman 
deerwester dumais landauer furnas harshman 
indexing latent semantic analysis 
journal american society information science 
fitzpatrick dent 
automatic feedback past queries social searching 
proceedings th annual international acm sigir conference research development information retrieval pages 
acm press 
golub loan 
matrix computations nd edition 
johns hopkins university press baltimore maryland 
haveliwala 
topic sensitive pagerank 
proceedings th international conference world wide web pages 
acm press 
herlocker konstan borchers riedl 
algorithmic framework performing collaborative filtering 
proceedings nd annual international acm sigir conference research development information retrieval pages 
acm press 
husbands simon ding 
singular value decomposition text retrieval 
computational information retrieval pages 
jin zhou mobasher 
web usage mining probabilistic latent semantic analysis 
proceedings acm sigkdd international conference knowledge discovery data mining pages 
acm press 
joachims 
optimizing search engines clickthrough data 
proceedings th acm sigkdd international conference knowledge discovery data mining pages 
acm press 
lathauwer moor vandewalle 
multilinear singular value decomposition 
siam journal matrix analysis applications 
liu yu meng 
personalized web search mapping user queries categories 
proceedings th international conference information knowledge management pages 
acm press 
mobasher dai nakagawa luo 
discovery evaluation aggregate usage profiles web personalization 
data mining knowledge discovery 
page brin motwani winograd 
pagerank citation ranking bringing order web 
technical report stanford digital library technologies project 
pitkow schutze cass cooley turnbull edmonds adar breuel 
personalized search 
communications acm 
pryor 
effects singular value decomposition collaborative filtering 
technical report pcs tr dartmouth college computer science hanover nh june 
sarwar karypis konstan riedl 
application dimensionality reduction recommender systems case study 
jaakkola 
weighted low rank approximations 
proceedings th international conference machine learning pages 
aaai press 
sugiyama yoshikawa 
adaptive web search user profile constructed effort users 
proceedings th international conference world wide web pages 
acm press 
terzopoulos 
multilinear image analysis facial recognition 
icpr pages 
wang zeng chen lu tao 
ma 
recom reinforcement clustering multi type interrelated data objects 
proceedings th annual international acm sigir conference research development retrieval pages 
acm press 
