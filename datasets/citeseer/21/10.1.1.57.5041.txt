defining combining symmetric asymmetric similarity measures derek bridge department computer science university college cork ireland bridge cs ucc www cs ucc html 
framework definition similarity measures lattice valued functions 
show strengths particularly combining similarity measures 
investigate particular instantiation framework sets represent objects denote degrees similarity 
concludes suggesting generalisations findings 
different ways computing similarity object representations 
include feature approach objects represented sets features similarity feature commonality difference geometric approach objects represented points dimensional space usually specified sets pairs attributes atomic values similarity inverse distance objects space structural approach uses graphical representations nodes denote objects edges denote relations objects similarity graph matching 
tri part classification simplification 
may omit distinctive approaches 
may seemingly drive wedges related approaches 
example similarity order terms feature structures elements geometric structural approaches 
include classification merely order indicate huge variety approaches cbr literature 
discusses general mathematical framework wide variety similarity measures defined combined 
having reported develops earlier lattice functions done hugh osborne 
examples spirit geometric approach previous papers focus feature structural approaches 
furthermore previous papers focussed defining framework operators mentions axiomatisation aim give full axiomatisation shows seemingly reasonable axiomatisations reported literature may restrictive 
lattice valued functions explaining mean similarity functions difference functions excess functions 
denote arbitrary similarity function arbitrary distance function arbitrary excess function theta 
similarity functions similarity function takes object representations delivers value denotes similarity representations 
similarity functions reported literature typically delivered values type boolean numeric type 
example boolean valued real valued functions richter classification similarity functions 
refer boolean valued similarity functions ff ff bool absolute similarity functions objects judged similar similar 
absolute similarity functions simple correspond particularly people intuitive concept similarity notion degrees similarity 
overcome disadvantage absolute measures similarity functions numeric valued ff ff result type restricted interval ff ff 
call relative similarity functions 
serve purposes reasons dissatisfied 
particular occasion numbers arbitrary 
occurs similarity function designers need richer absolute similarity need degrees similarity need quantify properly quantify degrees 
numbers circumstances contrived 
earlier generalised absolute relative similarity functions giving called metric similarity functions 
functions ff ff lattice partially ordered set values satisfies certain properties 
fact require complete lattices 
complete lattice satisfies properties consequence properties set unique largest smallest elements 
give characterisation lattices complete lattices 
understanding possible know partial order requirement complete lattices weakened certain operators prioritisation see require complete lattices 
fact accurate axiom excess functions satisfy table provably satisfied excess functions complete lattices return types 
know complete lattice proceed basis 
see mathematical definitions 
lattices cbr 
framework reported degrees similarity values result type similarity function form lattice earlier machine learning cases case base values arguments similarity function form lattice 
claim advantages metric framework subsumes absolute relative measures instantiations framework introduces instantiations ways measuring similarity researchers reported literature allows easy combination similarity functions 
exemplify points 
consider absolute similarity function ff ff bool 
counterpart framework simply ff ff bool bool lattice return type bool example ranks false true 
function basically computes boolean result values ordered 
similarly relative similarity function ff ff counterpart ff ff assuming small numbers denote lower similarity higher numbers 
claim framework subsumes ways measuring similarity exemplified set valued functions discuss section example 
suppose set linguistic hedges quite fairly vh denote ordering depicted hasse diagram fig 
construct new kind similarity function linguistic hedge valued ff ff vh 
valued function values partially ordered useful system designer needs richer absolute similarity find difficult misleading quantify degrees similarity 
quite fairly barely fig 

ordering vh words bool 
ff ff counterpart need function returning values lattice defined gamma 
special values gamma needed give complete lattice having topmost bottommost elements 
vh intended way simple example 
investment commitment particular ordering shown 
consider combination similarity functions 
concreteness illustrate advantages approach numeric valued ff ff linguistic hedge valued fi fi vh 
want similarity function defined pairs drawn ff theta fi 
return type 
dealing problem leads inter convert similarity functions see ways combining boolean valued numeric valued functions involve converting boolean valued function numeric 
framework similarity function may result type type complete lattice defined 
function result type pairs theta degree similarity objects pairs degrees similarity 
additionally required know pairs ordered greater incomparable 
principle define ordering pairs want provided obtain complete lattice 
practice sense define new ordering orderings constituents pair 
show ways doing product prioritisation 
consider lattices 
product lattice theta theta hx theta hy product 
prioritisation lattice theta 
hx 
hy ordering takes priority event ties ordering second ordering 
prioritisation way 
ability combine different kinds similarity function striking aspects framework 
add product prioritisation ways combining manipulating lattice valued functions 
operators manipulating functions defined 
unaddressed discussion far similarity functions define frameworks satisfy axioms 
giving full axiomatisations aim discussion axioms needed ways define building new functions existing ones products ensure new functions satisfy axioms 
example operator similar product disjunction conjunction violate axioms place similarity functions necessarily respect axiom give table excess functions 
authors claim similarity functions reflexive framework stated topmost element lattice 
tversky argues strong may different degrees similarity different identical objects 
consequently see table weaker axiom object similar object 
controversial symmetry richter argues jantke argues ironically new similarity function introduces symmetric tversky argues took symmetry axiom defined similarity measures way guaranteed symmetry 
adopt symmetry axiom contribution show define asymmetric symmetric similarity measures framework 
quite rare cbr believe strength framework 
accord similarity require transitivity 
may need axioms apply certain instantiations framework 
example similarity measures defined structured object representations discussed sections monotonicity axiom needed 
difference functions discussion focused similarity functions generalisation lattice valued functions applied kinds function 
difference functions example boolean valued numeric valued justifiably generalised lattice valued motivations similarity functions 
interesting note relationship framework difference functions similarity functions 
uncommon invert difference functions give similarity functions 
formalisation inversion arguably straightforward frameworks 
difference function result lattice try find inverse operator gamma reciprocals 
simply invert lattice gamma 
function computes remain unchanged way interpret results differ 
denoting large difference denote small similarity 
see concrete examples 
said lattice valued similarity functions applies lattice valued difference functions easily combined result lattices 
axioms similarity functions 
excess functions common orderings computer science ai 
ai example model agent preferences case referred preference relations 
boolean valued functions theta ff ff bool 
easily imagine wanting numeric valued difference functions called distance functions 
counterparts theta ff ff want quantify degree object exceeded preferred 
generalisation give lattice valued functions theta ff ff value lattice denotes degree second object exceeds 
functions referring excess functions 
theta say exceeds 
means ai generalise preference relations deliver degree object preferred 
combining different excess functions straightforward combining similarity difference functions product prioritisation 
discussion differs important axiom satisfied 
axiom inspired triangle inequality 
axioms table 
type axioms similarity ff ff difference ff ff 
excess ff ff theta theta theta theta theta theta table 
types axioms leave open question excess functions preference relations expected satisfy generalised versions reflexivity antisymmetry 
mathematical motivation imposing axioms 
example definition maxima set excess function satisfies properties expect maxima imposing reflexivity antisymmetry 
rest apply framework particular object representations specifically structured object representations natural partial ordering 
concreteness simplicity look sets generalise findings 
set object representations consider representing objects sets features properties objects possess 
concreteness suppose set possible relevant features fa dg objects fa cg fa dg fa dg 
clearly way computing similarity objects compute intersection set representations giving features common 
cardinality intersection form sensitive identity members set features important denote degree similarity 
framework result type function lattice set numeric values 
investigate alternative 
set intersections denote degrees similarity 
objects represented sets degrees similarity denoted sets 
similarity fa bg fag fa dg 
similar pair 
words degrees similarity computed fa bg fag fa dg highest 
need ordering sets 
larger sets denote commonality similarity obvious ordering usual subset ordering 
means similar similar universal set example fa dg clearly instance framework 
ordering defined power set fa dg gives complete lattice having fa dg topmost element bottommost element 
similarity function type fa dg fa dg fa dg defined 
obviously corresponding difference function defined 
lattice fa dg 
idea structured object denote degree similarity structured objects applications sets structured representations proposed jantke 
concern axiomatisation separate common substructure axiom object denotes degree similarity respect common substructure optional maximality axiom 
clearly set intersection similarity function satisfies axioms 
interest go showing natural similarity functions sets satisfy axioms 
show satisfy common substructure axiom simple sets denote degrees similarity resort numbers 
show symmetric 
respecting common substructure axiom 
defining similarity function respect common substructure axiom look functions usefully set valued 
define excess function takes sets delivers set result type 
example base definition relative complement set difference 
case theta fa dg fa dg fa dg theta 
degree exceeds fb cg exceeds jantke axioms form general 
furthermore included competing maximality axioms discuss 
clear symmetry axiom 
fdg 
definition satisfies generalised triangle equality axiom table 
difference function defined obvious definition disjoint union sets elements common type fa dg fa dg fa dg definition 
difference example fb dg 
obtain difference functions bringing excess functions 
difference combination excess excess specifically disjoint union union excess computed relative complement case 
difference function get way measure similarity 
tradition cbr invert difference function 
saw earlier easily done simply invert result lattice 
gives similarity function type fa dg fa dg fa dg 
equivalently 
similarity fc dg fb dg means remembering result lattice ordered smaller sets denote higher similarity similar measure sets denote degrees similarity 
jantke axioms require degree similarity expressed structured representation objects 
restrictive 
natural similarity functions defined observe requirement resorting conversion numeric valued functions 
example suppose want similarity function combines similarity functions defined far shared features inverted distance function non shared features 
exploit flexibility framework defining similarity function result type pairs sets combined numeric valued linguistic hedge valued functions earlier resulting function pairs 
type similarity function fa dg fa dg fa dg theta fa dg definition hx yi 
similar degree hfa bg fc intersection paired disjoint union similar degree fb 
ordering pairs defined 
combined similarity functions earlier sense define new ordering constituent orderings 
ordering element pair 
ordering second element large sets denote big difference low similarities 
shared non shared features equally important product theta hx hy iff shared features important non shared ones prioritise 
hx hy iff ae non shared features important shared ones prioritise 
asymmetric similarity 
similarity functions shown far section intersection disjoint union inverted lattice combined symmetric 
tversky inspiration show way building asymmetric similarity functions framework 
example hx 
function symmetric 
similarity hfa bg fcg hfa bg fdg 
need place ordering triples clear giving details probably combine constituent orderings products 
tversky model 
tversky similarity functions set valued object representations 
axiom matching axiom 
part remaining axioms constrain function aiming guarantee deliver suitable numeric valued similarity function 
way thinking regard tversky trying sense inter convert way denoting degrees similarity triples sets numbers 
course reason desire 
framework accommodates functions deliver triples sets functions deliver numbers 
define function takes lattice defined triples sets produces lattice defined numbers allowing map kind similarity function 
section focused sets 
concluding remarks generalise section findings apply structured representations 
concluding remarks hinges sets exemplify previous section 
main ideas lattice valued functions specifically structured representations 
just jantke axioms form restricted sets applies structured representation natural partial ordering ought generalise similarity measures sets representations case ones form way getting possibly asymmetric functions compute excess differently way compute excess weighting highly 
measure combines may symmetric 
see definition right composition precisely purpose defined form specific excess functions 
complete lattices 
generalisation continues assume object representation natural partial ordering forms complete lattice denote degrees similarity 
suppose arbitrary complete lattice 
denote topmost element ordering denote bottommost 
meet greatest lower bound glb infimum unique element join upper bound lub supremum xt unique element case sets fa dg fa dg 
complete lattice guaranteed glb lub exist 
ways defining similarity excess functions useful early step definition excess function 
general object representation type result type may different theta ff ff ff advise excess function satisfy axiom table 
argument result types assuming may analogue relative complement set difference form useful definition excess function 
possible general schema theta greatest lower bound substructures exclude information 
instantiating sets gives theta desired 
excess functions defined define similarity functions correspond developed previous section 
table denote functions combining orders product prioritisation 
obviously corresponding difference functions defined inverting lattices 
definition lattice theta theta hx theta theta xi theta hx theta theta xi theta theta table 
similarity functions similarity function schemata table may useful cases 
blindly 
may apply usefully certain object representations 
certain representations order terms feature structures theta fz give non singleton set results take glb theta glb cases may lose information 
may case result 
satisfactory definition excess function cases similarity functions excess functions equally unsatisfactory 
useful excess functions defined may theta theta gives 
case theta defined way means theta theta give conflicting information combination give 
cases include order terms feature structures second third similarity functions table unsatisfactory 
remain options covered table different excess function excess applying functions convert lattice defined numbers 
remembered definitions case object representation suitable representation degrees similarity 
allows substructure suitable part definition similarity 
important remember framework confined scenarios reason object representation degree similarity 
table suggestive ways building symmetric asymmetric similarity functions 

ashley reasoning cases hypo international journal man machine studies vol pp 
birkhoff lattice theory american mathematical society 
bunke messmer similarity measures structured representations wess althoff richter eds topics case reasoning procs 
european workshop case reasoning lnai pp springer verlag 
emde wettschereck relational instance learning saitta ed procs 
thirteenth international conference machine learning pp 
jantke nonstandard concepts similarity case reasoning bock richter eds information systems data analysis prospects foundations applications procs 
seventeenth annual conference pp springer verlag 
jantke axiomatic characterization structural similarity case reasoning ed procs 
florida ai research symposium florida ai research society pp 
osborne 
bridge similarity metrics formal unification cardinal non cardinal similarity measures leake plaza eds case reasoning research development pp springer 
osborne bridge re going summer holiday exercise non cardinal case base retrieval grahne ed frontiers artificial intelligence applications procs 
sixth scandinavian conference artificial intelligence pp ios press 
osborne bridge models similarity case reasoning procs 
interdisciplinary workshop similarity categorisation pp 
plaza cases terms feature term approach structured representation cases veloso aamodt eds case reasoning research development procs 
international conference case reasoning lnai pp springer 
richter classification learning similarity measures opitz lausen eds studies classification data analysis knowledge organization springer verlag 
shepard universal law generalization psychological science science vol pp 
tversky features similarity psychological review vol pp 
wilson martinez improved heterogeneous distance functions journal artificial intelligence research vol pp 
