fairness mimd congestion control algorithms increase multiplicative decrease mimd congestion control algorithm form scalable tcp proposed high speed networks 
study fairness sessions sharing common bottleneck link sessions mimd algorithm 
losses congestion signals occur capacity reached initiated 
synchronous asynchronous losses considered 
asynchronous case session suffers loss loss instant 
models considered determine source looses packet rate dependent model packet loss probability session proportional rate congestion instant independent loss rate model 
study mimd sessions share capacity presence general combinations synchronous asynchronous losses 
show presence rate dependent losses capacity fairly shared rate independent losses provide high unfairness 
study inter protocol fairness capacity shared presence synchronous losses sessions additive increase multiplicative decrease aimd protocols mimd protocols 
internet data transfer protocols various congestion control algorithms achieve rate control 
aimd algorithm provide satisfactory performance 
high speed networks additive increase sender rate may lead inefficient link utilization :10.1.1.12.2409
overcome drawback high speed networks mimd algorithm proposed alternative aimd algorithm :10.1.1.12.1740
situations may arise sessions algorithms compete network resource 
share capacity obtained sessions depend various parameters specific algorithms 
sharing resource gives rise question fairly resource shared sessions 
fairness issues addressed previous works 
authors considered class rate control algorithms presence synchronous control signals 
showed aimd algorithm converged fairness mimd algorithm converge 
author studied mimd algorithm realistic assumption rate dependent losses argued mimd algorithm converges fairness 
convergence fairness different flavours tcp studied analytically simulations 
monotonic convergence fairness algorithms rate tcp friendly applications studied 
authors remarked sessions altman avrachenkov prabhu inria sophia antipolis route des lucioles sophia antipolis france 
email altman avrachenkov sophia inria fr different round trip times rtt scalable tcp uses mimd algorithm extremely unfair 
proposed new algorithm improved efficiency fairness 
congestion control algorithms rely binary feedback presence absence congestion network adapt sending rate reduce congestion 
presence congestion network signalled dropping marking packets 
congestion signals occur link capacity achieved initiated 
example congestion signal sent consequence packet drop link buffer full capacity achieved router aqm schemes red ecn decides respectively drop mark packet congestion signal initiated capacity achieved 
rest shall terms losses congestion signals interchangeably 
term losses refer packet drops 
describe decrease sending rate result congestion signal due packet drop due packet mark 
losses said synchronous sessions sharing link suffer loss time instant 
asynchronous case session suffers loss 
models determine sources receives congestion signal rate dependent loss model loss probability session proportional rate congestion instant independent loss rate model probability congestion signal sent session independent session rate 
rest organised follows 
section ii brief overview model mention contribution 
part sections iii iv study mimd sessions rtt different rtts share capacity presence general combinations synchronous asynchronous losses 
show presence rate dependent losses capacity fairly shared sessions rate independent asynchronous losses result high unfairness sessions symmetric 
second part section vi consider heterogenous scenario synchronous losses 
study capacity shared sessions uses aimd mimd algorithm 
show aimd session obtains share independent link capacity rest capacity utilized mimd session 
section vii 
ii 
overview notation 
function denoted sans serif font 
example denotes function defined real values function denoted italic fonts 
usually value th sampling instant 
vector denote row vector 
transpose denoted term session mean instance algorithm 
term user describe initiates instances sessions algorithm 
model mainly model 
consider flows share link capacity rate vector time denote instantaneous rates session session respectively 
set feasible rate vectors shown fig 

line fairness line efficiency line fig 

rate allocation vector called efficiency line 
line available capacity fully utilized 
line called fairness line 
line sessions obtain rates bandwidth sharing said fair 
sessions react control signals adapting rates way 
ai increase signal ad decrease signal ai bi ad bd constants sampling done just reception control signals 
tcp reno example arrival acks considered increase signals arrival duplicated acks timeout considered decrease signal 
argued convergence fairness line increase algorithm multiplicative additive ai bi decrease algorithm multiplicative bd ad 
authors assume control signals synchronous sessions 
sessions receive control signals instant increase decrease rates simultaneously assumptions rate vector mimd algorithm stays line joining origin initial rate vector converge fairness 
author argues realistic assumption rate dependent congestion signals mimd algorithm converges fairness line 
part show sessions rtt mimd algorithm converges fairness congestion signals asynchronous rate dependent 
obtain expressions long term fairness index rate convergence steady state distribution mean time achieve fairness 
argued sessions different rtts scalable tcp mimd algorithm extremely unfair 
show sessions different rtts certain degree fairness achieved introducing sufficient number rate dependent losses 
show simulations results obtained sessions hold sessions 
second part consider sessions sharing common link losses due buffer overflow synchronous 
scenario considered sessions aimd algorithm 
fairness packet loss scalability analysis simulations session general binomial algorithms provided fairness issues considered high speed networks 
rtt fairness compared different proposals tcp high speed networks 
fairness studied sessions algorithm 
consider heterogeneous scenario different sessions may different algorithms 
type scenarios may interest example sessions scalable tcp standard tcp share link 
analyze equilibrium throughput window size sessions compare simulations 
pointed window notation converted rate notation relation mtu rt window nth sampling instant packet size bits rt round trip time seconds 
shall rate notation part window notation second part 
iii 
fairness mimd sessions equal rtts consider sessions share link capacity time rates obtained sessions denoted 
control instant controller sends control signal source 
control signal informs congestion signal congestion signal 
absence congestion sources increase assumptions validated simulations aimd versions tcp approximately rtts validate mimd aimd versions tcp see fig 
discussion 
table reaction control signals control vector tj tj tj tj tj tj async 
cong 
signal tj tj tj tj sync 
cong 
signal rate exponentially xk xk time constant example rtt sessions increase factor 
formulation continuous time equivalent multiplicative algorithm rtt congestion signals sender multiplies window factor 
seen substituting 
assume sources receive control signals instant 
model sources receive different control signals 
congestion signal need sent sources instant 
congestion signals asynchronous 
decrease factor 
th control signal received time tj 
possibilities rate vector tj just tj table source continues increase algorithm reception signal 
hand source receives signal instantaneously reduces rate 
assume link capacity attained synchronous asynchronous loss occurs 
furthermore asynchronous losses may occur attaining capacity 
instantaneous throughput ratio process study instantaneous throughput ratio process 
shown markov process countable state space shall show process stable unstable depending asynchronous loss process 
show geometric interpretation response different control signals 
slope line joining origin current vector 
congestion signals interval rate vector time 
vector lies line slope 
ifa signal generated vector response 
vector lies line slope 
rate vector remains line slope long control vector control signals 
seen rate vector moves line slope control signal generated 
similarly rate vector moves line slope slope slope slope rate vector state space ofx fig 

geometric interpretation 
control vector generated 
synchronous congestion signals signals initial unfair sharing remain forever 
mimd protocols essential provide stream asynchronous congestion signals example queue management scheme 
tn denote time instant th control signal arrives 
tn slope rate vector sampled just th control signal 
fig 
seen initial slope slope line rate vector lies just th control signal written set integers 
initial slope find unique expressed terms convenience define terms 
state space countably infinite state space defined 
geometric interpretation line fairness line 
continuous time increase instantaneous decrease algorithm allows obtain formulation 
rest section assume assumption equivalent saying initial vector slope equal combination control signals instantaneous rate vector get close fairness line getting 
rate vector fairness line 
process indicates rate vector time lies line slope embed process instants arrival control signals 
sampled process tn 
show markov chain stable unstable depending asynchronous loss process 
rate dependent loss model consider rate dependent loss model loss probability session proportional session rate congestion instant 
particular nth control instant congestion signal sent assume xk probability loss session proposition sn discrete state space markov chain transition probabilities sn sn sn sn sn sn 
probability asynchronous loss control instant 
asynchronous loss due buffer overflow queue management scheme packet loss erroneous transmission channel 
absence asynchronous losses increase signals synchronous losses instantaneous throughput ratio remains 
model instantaneous throughput ratio instantaneous throughputs 
capacity link appear calculations 
interested finding steady state distribution markov chain mean passage time state starting random state 
state corresponds fairness line 
mean passage time random state state gives indication mean time rate vector reaches fairness line 
general passage time state gives passage time 
sn fairness line performance measure corresponds passage time state closest fairness line particular process 
fairness index nth control instant fn defined follows fn write fn terms follows fn sn long term fairness index obtained limit 
assume process sn converges stationary limit 
expressed 
stability 
existence limiting distribution ensured proving markov chain positive recurrent 
markov chain positive recurrent satisfies foster criterion stated 
theorem foster irreducible markov chain countable state ergodic exists positive function number finite set sn sn sn sn sn 

fi define fi sn sn sn 
show condition satisfied 
wehave fi strictly negative 
condition satisfied 
check sn sn 
markov chain satisfies conditions theorem positive recurrent 
independent loss rate model session congestion signal sent independent rates transition probabilities sn sn 
show results instability 
markov chain symmetric null recurrent 
null establish 
cases markov chain null recurrent subsection iii shall understand steady state distribution correspond state space added state space stationary probability 
recurrent discrete state space accumulation points line probability small vicinity point mean time go extreme connection get capacity 
suggests rate independent losses sufficient improve fairness rate dependent losses provide fair share capacity 
rest section focus rate dependent loss model 
qi denote steady state process yn converges 
pi denote probability state proposition pi 
qj obtained equation pi 
proof pn 
balance equation walk written pi pi qi pi qi pi qi pi qi pi balance equations birth death process state dependent transition probabilities 
solution type process known form 
pi qj pi 
tail pi seen decrease fast decrease 
particular means process fairness line time 
steady state distribution obtained relations 
long term fairness index computed numerically 
table ii give fairness index different value 
table ii fairness index different values 
steady state distribution markov chain positive recurrent steady state distribution exists 
sn symmetric state consider markov chain yn state space order obtain steady state distribution transition probabilities nth convergence steady state distribution second largest eigenvalue matrix gives rate convergence steady state distribution 
get indication rate convergence markov chain looking eigenvalues transition probability matrix written 


control instant random walk 
qi yn yn qi denote yn yn th eigenvalue 
obtain lower bound proposition 
proof yn irreducible multiplicity eigenvalues 

rewrite 
identity matrix transition matrix pure birth death process transition probability qi transition probability qi 
stochastic matrix eigenvalues belong interval :10.1.1.12.2409
th eigenvalue vi corresponding left eigenvector 
get vip vi vi 
vi left eigenvector corresponding eigenvalue 
get inequality 
gives lower bound rate convergence markov chain steady state 
mean passage time section compute mean passage time state starting random state 
gives estimate time rate vector reaches fairness line starting initial random state 
markov chain birth death process symmetric state 
initial state positive markov chain stay set positive states visiting state 
similarly initial state negative markov chain stay set negative states visiting state 
obtain mean passage time state obtaining mean passage time state 
steady state probability vector transition probability matrix 
ith component pi eqn 


denote mean passage time vector mj denoting mean passage time state starting state proposition mi obtained recursion mi mi mi 
proof transition probability matrix conditioned state 
rewrite 
vector vector defined vector satisfies equation vector ones 
tridiagonal matrix rewrite mi mi mi definition 
vector defined steady state probability vector equivalently 
solving obtain multiplying equation substituting obtain substituting equation obtain vector column 
equation reduces 
obtain recursion 
note steady state probabilities independent mean passage times inversely proportional 
iv 
fairness mimd sessions unequal rtts section assume sessions different time constants 
time constants session session respectively 
rate evolution session absence control signals written xi xi 
transformation log 
consider synchronous losses asynchronous ones 
absence asynchronous losses evolution log written control signal arrives signal log signal log signal 
evolution time shown 
log slope fig 

evolution time 

time assume positive 
seen synchronous signals signals drift time 
suggests rate session approach 
similarly negative drift suggesting rate session approach 
seen slope equal dotted lines parallel time axis 
case remain constant absence asynchronous losses observed previous section 
conclude buffer management scheme creates rate dependent losses necessary order fairness 
assume sequel buffer management scheme occasionally creates rate dependent losses 
denote time th th asynchronous congestion signals 
process assumed zn tn process embedded just arrival asynchronous control signal 
argument similar section iii probability session receives nth signal written exp zn exp zn session exp zn session 
proposition process zn markov chain state space follows recursive equation zn zn cn cn defined log exp zn cn log exp zn exp zn stability analyze markov chain zn obtain sufficient condition positive recurrent condition process drift distribution function mean respectively un 
assume density function du du ofu non increasing function 
log 
number positive unity 
proposition markov chain defined positive recurrent 
proof show positive recurrence markov chain theorem 
theorem small set constant extended real valued function stable dy step transition function check drift condition theorem consider set 
lhs du ex du ex du ex ex du ex set called small set exists measure 
du ex du ex du ex ex du 
ex rewritten du ex du ex 
rewritten du du value ex 
ex log forb exits 
ifx drift condition satisfied 
greater consider set 
max drift condition satisfied 
follows lemma small set 
lemma small set 
proof ex du du du 
du du assumed non increasing function du non decreasing function exp exp increasing function rewrite du exp exp du 
exists measure closed bounded set small set 
small set theorem conclude markov chain positive recurrent 
note sufficient condition positive recurrence 
mean time losses 
prop 
positive recurrent 
achieve fairness arrival rate losses process greater simulation results subsection results simulations 
objective verify analytical result obtained prop 
noted sufficient number asynchronous losses required sessions different rtts share capacity fairly 
simulation scenario scalable tcp sessions shared link mbps 
sessions rtt ms 
sessions rtt ms sessions rtt ms 
simulations performed ns version 
fig 
window size plotted function time different values packet drop probability 
note corresponds congestion losses seen synchronous 
fig 
asynchronous synchronous losses 
periods synchronous losses pointed short term unfairness 
losses due congestion window sizes sessions larger rtts go 
induce asynchronous losses dropping packet probability 
figs 
marked improvement throughput obtained sessions larger rtts loss probability increased 
small loss probability unfairness sessions different rtts 
sessions rtt ms short term unfairness observed induced asynchronous losses 
larger loss probability sessions share capacity fairly 
confirms analytical result stated fairness mimd sessions different rtts achieved introducing sufficient asynchronous losses 
total throughput sessions table iii throughput rtt class efficiency mbps mbps mbps rtt ms ms ms respectively 
table iii window size window size window size mimd mimd mimd mimd mimd mimd mimd mimd mimd rtt rtt synchronized losses time mimd mimd mimd mimd mimd mimd mimd mimd mimd 
rtt time rtt mimd mimd mimd mimd mimd mimd mimd mimd mimd 
time 
fig 

window evolution mimd sessions 
rtt ms 
rtt ms 
rtt ms 
values throughput efficiency 
note ratio throughputs different classes proportion respective rtts 
say certain degree fairness cost marginal decrease efficiency 
inter protocol fairness rtt second part study fairness issue sessions different congestion control algorithms share common link losses synchronous 
scalable tcp uses mimd algorithm proposed enhancement tcp high speed networks 
situations may arise user scalable tcp shares link user standard tcp 
specifically study equilibrium behaviour window size throughput obtained session algorithm equilibrium presence synchronous losses 
look conditions user algorithm obtain better throughput user algorithm 
previous mainly studied behaviour sessions algorithm 
section assume session rtt 
mentioned section ii window notation equivalent rate notation 
rest window notation interested obtaining equilibrium window sizes sessions 
system model consider sessions share link capacity session transmits data packets size bits 
bandwidth delay product bdp network 
assume session rtt rtt mainly determined propagation delay considered constant 
xl denote vector window sizes sessions time synchronous loss loss session assumed occur time xi 
condition equivalent saying synchronous loss occurs total number outstanding packets network exceeds total number packets network handle 
loss generality sessions mimd congestion control algorithm rest sessions aimd congestion control algorithm 
absence losses algorithms increase window way xi increase parameters mimd aimd algorithm respectively 
example scalable tcp standard tcp 
tn denote time instant th congestion signal received 
note congestion signal generated synchronous loss occurs 
response congestion signal algorithms decrease window way 
xi mx tn ax tn decrease parameters mimd aimd algorithm respectively 
example scalable tcp standard tcp 
denote window size vector embedded just th congestion signal received tn 
denote time congestion signals 
sessions assumed receive congestion signals instant write recursive equation 
xi xi bandwidth sharing 
transient behaviour window sizes obtained solving 
initial window vector time loss computed 
way recursively compute 
allows obtain behaviour vector loss instants equilibrium reached 
equilibrium converge steady state values denoted respectively 
interested finding window size session equilibrium 
allow obtain throughput session equilibrium identical 
session obtain follows 

equations fixed point solutions corresponding equations 
variables equations 
final equation obtained noting loss occurs condition satisfied 
th equation 
note equations obtain value variables uniquely determined equations 
depend window vector just synchronous loss 
result equivalent result obtained rate vector symmetric mimd sessions dependent initial rate vector 
equilibrium window size aimd sessions uniquely determined 
log log log 
log obtain sum equilibrium window sizes mimd sessions 

order compute throughput session time interval slots length 
note just loss instant window size session loss instants window size session increases algorithm 
rtt slot session transfers packets equivalent window size 
loss instants total number packets transferred session obtained summing window sizes rtts 
obtain throughput aimd session obtain total throughput mimd sessions 
note throughput expressions approximate number packets transferred rtt integer take non integer values 
number packets transferred rtt loss occurs may equal 
observations equations 
equilibrium value time loss instants independent parameters aimd algorithm 
determined rtt parameters mimd algorithm 
equilibrium window size aimd sessions depends increase decrease parameters algorithms 
aimd sessions equilibrium window behaviour obtain throughput 
rest capacity utilized mimd sessions 
simulations compare observations simulations performed ns version 
stated simulation set parameters 
mimd sessions scalable tcp aimd sessions tcp new reno 
packet size session set bytes bytes data bytes header 
propagation delay ms 
increase decrease parameters algorithms set 
aimd increases decrease value smaller recommended value aimd sessions obtain certain throughput 
figs 
mimd sessions aimd sessions mimd sessions aimd sessions note aimd sessions converge equilibrium window size equilibrium window size mimd session depends window just synchronous loss 
aimd sessions remains link capacity increased mbps mbps total number sessions increased twelve 
denote throughput equilibrium window size respectively aimd sessions 
table iv analytical simulation values 
simulation values parentheses 
predicted analysis equilibrium window size throughput aimd sessions remains unchanged capacity increase mbps mbps total number sessions increased twelve 
window size window size packets aimd flows mimd flows aimd time mbps 


aimd flows mimd flows aimd time mbps 


fig 

window evolution sessions 
table iv mimd aimd sessions 
link speed mbps mbps mbps packets throughput comparison study scenario mimd user aimd user share link 
note user initiate sessions algorithm 
obtain condition aimd user obtain better throughput mimd user 
consider case user initiates session 
scenario window size throughput session obtained 
ratio throughputs goes 
suggests high speed networks mimd user get capacity 
hand bdp network small mimd user obtain lower throughput compared aimd session 
proposition denote threshold bdp aimd session get better throughput compared mimd session 
threshold value 
proof relation obtained inequality 
value depends increase decrease parameters algorithms 
table gives values different 
table different values fig 
window evolution plotted sessions mbps 
bdp aimd algorithm obtains better throughput case 
set simulations window size window size aimd mimd time mbps 

ms 
aimd mimd time mbps 

ms 
fig 

window evolution mimd session aimd session 
set recommended value 
fig 
corresponding window evolution plotted 
effect increasing reduce share aimd session 
table vi comparison values obtained analysis simulations 
match observed analysis simulations 
observed throughput obtained aimd session remains constant total throughput mimd sessions increases increase capacity 
aimd user may want obtain throughputs similar mimd user 
case aimd user may open sessions order improve observed throughput 
aimd session gets throughput independent number aimd sessions assuming sufficient capacity aimd user improve observed throughput opening multiple sessions 
proposition smallest number sessions aimd user obtain better global throughput table vi mimd aimd session 
ms 
capacity mbps mbps mbps packets packets compared single mimd user equilibrium window aimd sessions defined defined 
number sessions depends increase decrease parameters algorithms 
table vii gives value different values 
table vii different values 
similar aimd user mimd user may try improve observed throughput opening sessions 
aimd user get throughput independent number mimd sessions observed throughput mimd user improve opening sessions 
result contrast result obtained noted aimd user improve observed throughput opening sessions 
vi 
inter protocol fairness different rtts section study effect different rtt session equilibrium window behaviour 
notation scenario sec 
assume exists bdp synchronous loss condition satisfied 
rtt session rewrite follows 

expressions throughput follows 

consistent equal log log min mimd sessions session rtt equilibrium window size different 
equilibrium window mimd sessions go 
consider case mimd session aimd sessions 
obtain log log log log inter loss time depends entirely parameters rtt mimd session 
effect different rtts aimd sessions scale factor aimd session lower rtt obtain better throughput 
mimd mimd sessions different rtts sharing link session smallest rtt get capacity windows sessions go 
equal result mentioned 
sessions liberty choose increase decrease parameters session obtain share capacity 
mi mi increase parameter decrease parameter respectively ith mimd session 
proposition sessions different rtts behaviour similar sessions rtt log mi constant 
log mi inter loss time equal 
proof value consistent 
equilibrium solution exists 
initial window vector 
time synchronous loss computed condition xi mi 
compute xi mi loss occur time verified noting xi mi satisfies xi 
obtain tn equilibrium value inter loss time xi equilibrium value system similar rtt case equilibrium window vector window vector just synchronous loss 
proposition gives condition setting increase decrease parameters mimd algorithm function rtt order extremely unfair 
vii 
part studied fairness sessions mimd congestion control algorithm 
sessions rtt observed extreme unfairness asynchronous losses rate independent 
shown fair sharing achieved introducing stream rate dependent losses 
sessions different rtts observed arrival rate rate dependent losses greater certain minimum rate order achieve fairness 
networks sessions mimd algorithms stream rate dependent losses example buffer management scheme necessary ensure fair sharing 
second part studied capacity sharing mimd sessions aimd sessions 
set parameters noted throughput aimd session independent bdp rest capacity utilized mimd sessions 
networks bdp threshold value observed aimd session obtained better throughput mimd session 
observed aimd user open multiple sessions order improve observed throughput mimd user throughput invariant number sessions opened 
partially supported euro network excellence indo french center promotion advanced research research contract number 
floyd :10.1.1.12.2409
highspeed tcp large congestion windows 
rfc experimental december 
kelly :10.1.1.12.1740
scalable tcp improving performance highspeed wide area networks 
computer comm 
review april 

stability networks operating tcp congestion control 
proceedings ifac world congress 
chiu jain 
analysis increase decrease algorithms congestion avoidance computer networks 
journal computer networks isdn 

feedback modeling internet congestion control 
proceedings new february 
see report www arl wustl edu tr ps 
hasegawa murata 
fairness stability congestion control mechanisms tcp 
telecommunication systems november 
loguinov radha 
rate congestion control convergence properties scalability analysis 
ieee acm transactions networking august 
xu rhee 
binary increase congestion control bic fast long distance network 
proceedings ieee infocom march 
campos kulkarni smith 
stochastic differential equation tcp window size analysis experimental validation 
prob 
engg 
informational sciences 
ait altman 
performance tcp ip case controlled sources 
proceedings pages 

topics constructive theory countable markov chains 
cambridge university press 
kleinrock 
queueing systems volume theory 
wiley sons 
kemeny snell knapp 
denumerable markov chains 
springer verlag new york nd edition 
tweedie 
markov chains stochastic stability 
springer london 
mccanne floyd 
ns network simulator 
available www isi edu nsnam ns 
