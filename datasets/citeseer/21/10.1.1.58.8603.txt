performance metrics ontology describing performance data grid workflows hong truong institute software science university vienna truong par univie ac thomas francesco institute computer science university innsbruck tf dps uibk ac dustdar information systems institute vienna university technology dustdar tuwien ac understand performance grid workflows performance analysis tools select measure analyze various performance metrics workflows 
lack comprehensive study performance metrics evaluate performance workflow executed grid 
presents performance metrics performance monitoring analysis tools provide evaluation performance grid workflows 
performance metrics associated levels abstraction 
introduce ontology describing performance data grid workflows 
describe ontology utilized monitoring analyzing performance grid workflows 

increased interest witnessed exploiting potential grid workflows especially scientific workflows :10.1.1.61.121
grid diverse dynamic inter organizational execution grid workflows flexible 
requires performance monitoring analysis tools collect measure analyze metrics characterize performance dependability workflows levels detail order detect components contribute performance problems correlations 
understand performance dependability grid workflows performance metrics workflows studied defined 
lack comprehensive study useful performance metrics described supported part austrian science fund part aurora project contract european union ist project 
evaluate performance workflows executed grid 
metrics supported existing tools metrics limited activity task level 
performance data workflows reasoning performance problems needs shared various tools workflow composition tools schedulers optimization tools require performance data 
ontology describing performance data workflows important ontology facilitate performance data sharing explicitly describe concepts associated workflow executions 
previously developed ontology describe performance data grid applications 
extends previous study performance metrics grid workflows describe performance data grid workflows 
propose extended set performance metrics associated multiple levels abstraction metrics characterize performance grid workflows 
proposed performance metrics described metric ontology 
introduce ontology describe performance data grid workflows 
ontology intended establish common understanding performance grid workflows shared various tools services 
rest organized follows section discusses workflow workflow execution model 
section presents performance metrics workflows 
introduce ontology describing performance data workflows section 
discuss ontology performance analysis grid workflows section 
related outlined section 
summarize give outlook section 
workflow workflow struct activity invoked application code region 
code region 
hierarchical structure view workflow 

workflow model user wfms execute workflow execution workflow execution workflow completed 
hierarchical structure view workflow presents hierarchical view workflow wf 
wf consists wf constructs 
wf construct consists set activities 
activities depend 
dependency activities data dependency control dependency 
activity associated set invoked applications 
invoked application contains set code regions 
wf constructs fork join sequence loop details existing wf constructs :10.1.1.37.8441
activity associated multiple invoked application 
invoked application executable program mpi program service operation web service 
invoked applications executed sequential parallel manner 
invoked application considered set code regions code region ranges single statement entire program unit 
code region function call remote service call loop statement 
workflow execution grid environment viewed set grid sites 
grid site comprised set grid services single organization 
grid site consists number computational nodes hosts share common security domain exchange data local network 
computational node computing platform single processor workstation smp symmetric multi processor node mpp massively parallel processing system 
computational node may single multiple processor 
computational node multiple application processes executed process may multiple threads execution 
submit invoked application invoked application started execution activity instance execution invoked application completed grid site scheduler execute application process execution invoked application execution application process completed 
execution model workflow 
computational node scheduler execution application process presents execution sequence wf 
user submits wf workflow management system wfms 
wfms instantiates activities 
executing activity instance wfms locates grid site submits invoked application activity instance scheduler grid site 
grid site scheduler locates computational nodes executes processes invoked application corresponding nodes 

activities execution model execution activity represented discrete process model 
discrete process modeling execution activity call execution status graph activity 
directed acyclic bipartite graph set nodes representing activity states set nodes representing activity events set edges representing ordered pairs activity state event 
simply put agent workflow invocation control causes event execute activity changes activity state queuing processing turn influences occurrence outcome events active failed 
presents example discrete process modeling execution activity 
event name description active indicate activity instance started process 
completed indicate execution activity instance completed 
suspended indicate execution activity instance suspended 
failed indicate execution activity instance stopped normal completion 
submitted indicate activity submitted scheduling system 
table 
example event names 
state activity determined events leading event ei event ei ei denote event initializing submitted queuing active processing completed 
discrete process model execution activity 
represents state represents event 
category metric name description execution time elapsed time code region 
cpu time spent user mode cpu time spent system mode cpu consumption time 
metric includes cpu times spent user system mode 
time spent serialization data 
time spent encoding decoding data 
counter tcm tca hardware counters 
exact number hardware counters dependent specific platforms 
number executions code region 
number executions sub regions code region 
number messages sent code region 
number messages received code region 
data movement communication time 
size total data transfered send receive 
synchronization single address space exclusive synchronization 
condition synchronization 
ratio mean elapsed time execution code region 
communication computation 
mean transfer rate 
transfered data size number transfers 
ratio metrics computed hardware counters 
temporal overhead type metrics defined code regions parallel programs 
table 
performance metrics code region level 
name ename table presents event 
metrics code region level names describe activity events 
refer timestamp event table presents performance metrics code regions 
denote timestamp analysis conducted 
performance metrics categorized execution time monitoring analysis grid workflows counter data movement synchronization ratio tempo normally conducted runtime possible activity ral overhead 
state execution time metrics include total elapsed time wall analyzing state timestamp clock time response time determine time spent state happened relation events denoted 

performance metrics grid workflows user cpu time system cpu time counter metrics include hardware counters cache misses number floating point instructions counters number calls 
data movement metrics characterize data movement communication time exchanged message size 
synchronization metrics describe time spent synchronization executions critical section condition synchronization various ratio metrics defined execution time counter metrics 
invoked application parallel application mpi openmp applications compute temporal overhead metrics code regions 
overhead metrics classification temporal overheads parallel programs 
examples overhead metrics control parallelism loss parallelism task performance monitoring analysis grid wfs collect analyze performance metrics related wfs 
interesting performance metrics wfs associated levels abstraction 
classify performance metrics levels abstraction lower higher level including code region invoked application activity workflow construct workflow 
principle performance metrics lowerlevel similar metrics constructed immediate higher level various aggregate operators sum average 
example communication spent application may defined sum communication spent code regions 
exact aggregate methods dependent specific metrics associated levels 
sections performance metrics associated levels 
higher level show metrics aggregated lower level 
discuss new metrics appear higher level existing metric requires different computing method different levels abstraction 

metrics invoked application level performance metrics code region level provided invoked application level aggregate operators 
table presents extra performance metrics elapsed time wall clock time response time indicate latency complete task including io waiting time computation 
terms interchangeably 
term refers elapsed time response time wall clock time 
sociated invoked applications 
category metric name description execution time elapsed time invoked application 
delay grid scheduler receives request creating new instance invoked application instance created 
counter number executions invoked application 
performance speedup factor executions improvement application 
table 
performance metrics invoked application level 
invoked application 
elapsed times executions respectively 
speedup factor execution execution defined 
metrics activity level table presents metrics measured activity level 
performance metrics associated activities activity instances 
execution time metrics includes response time processing time queuing time suspending time processing time activity instance defined completed active completed occurred means execution completed processing time defined active synchronization metrics activity involves execution activities depends 
pred set immediate predecessors data dependency control dependency pred pred synchronization delay execution delay respectively defined ai ai ai ai submitted active occurred synchronization execution delay computed 
metrics associated activity determined metrics activity instances activity aggregate operators 
aggregated metrics activity give summarized information performance activity examine performance activity 

fork join workflow construct 

metrics workflow construct level table presents performance metrics wf construct level 
load imbalance associated fork join wf constructs 
fork join wf construct shown 
load imbalance defined speedup factor fork join construct defined ai maxn ai processing time activity fork join version activities processing time activity version single activity 
load imbalance speedup factor metrics computed fork join structures structured block activities 
structured block single entry single exit block activities 
case processing time structured block version blocks 
sg graph wf construct critical path starting node node sg 
elapsed time processing time defined aik aik cg wf constructs workflow application cg may identical construct executed different resources different times 
speedup factor cg cg defined cg 
metrics workflow level cg table presents performance metrics interest wf level 
critical path starting node node wf elapsed category metric name description execution time response time activity instance 
time activity spends processing 
processing time includes communication computation times 
time activity queuing system 
time activity spends suspended state 
period time activity share resource activities 
counter number invocations activity 
size total data transfered activity data dependency 
size total data transfered activity 
ratio throughput number successful activity instances time 
mean time activity spent state 
data transfer rate data dependency 
synchronization synchronization delay 
execution delay 
performance improvement slowdown factor ratio 
table 
performance metrics activity level 
category metric name description execution time latency time workflow construct starts time workflow construct finishes 
portion elapsed time workflow construct spends processing 
counter number activity instances processing results utilized discriminator construct 
number iterations loop construct 
ratio average elapsed time activity workflow construct 
percent selection path choice construct 
load balancing load imbalance activity instances fork join construct 
performance improvement speedup factor 
resource time spent process utilized 
time processing time defined equation respectively 
speedup factor wf wf defined table 
performance metrics workflow construct level 
processing time consumed resource load imbalance resource defined 
metric ontology string 
description wf performance metric 
list performance metrics introduced described ontology named 
metric described class 
presents concept 
properties specifies metric name 
property specifies names performance metric 
property specifies measurement unit metric 
property specifies level metric associated 
property description explains performance metric 

ontology describing performance data grid workflows develop ontology named describing performance data workflows owl 
section just outlines main classes properties shown 
workflow describes workflow wf 
wf wf constructs represented property wf graph wf construct described 
wf construct activities activity instances wf construct graph sub wf constructs activity describes activity wf 
describes activity instance 
executed resources execution graph described class 
execution graph consists describing activity state event respectively 
dependency control data activity instances described dependency 
activity instance object subject dependency object depends subject 
activity instances invoked applications 
describes invoked application activity 
associated sir represents structure application represents dynamic code region call graph events occurred inside application 
dynamic code region call graph described consists region summaries stores summary performance measurements instrumented code region processing unit 
processing unit described category metric name description execution time latency time workflow starts time workflow finishes 
portion elapsed time workflow spends processing 
portion processing time workflow activities executed parallel 
portion processing time workflow activities executed sequential manner 
ratio mean queuing time elapsed time 
mean processing time activity 
mean queuing time activity 
time resource spends processing elapsed time workflow 
correlation number activities executed resource 
period time resource spends processing 
load imbalance processing time resources 
sir event table 
performance metrics workflow level 
workflow dependency resource activity 
ontology describing performance data workflows 
indicates context code region executed context contains information activity identifier computational node process identifier thread identifier 
region summary described performance metrics sub region summaries 
describes performance metric metric name value 
metric name 
event describes event record 
event happens time event attributes 
describes attribute event attribute name value 
performance metrics workflow activity dependency determined metric property 

utilizing performance analysis grid workflows 
describing performance data performance analysis tool describe performance data workflow 
example client performance analysis service requests formance results workflow client specify requests rdql 
service express performance metrics workflow 
performance results described defined ontology client easily understand utilize performance results 
presents example workflow named montage 
dependencies activities control dependencies 
represents part performance data montage described 
performance experiment executed resources 
top level workflow consists workflow constructs fork join construct sequence construct named seq 
fork join construct considered sequence constructs 
activity dependencies 
presents interesting performance metrics associated 
describe dynamic monitoring data resources invoked applications workflow executed information described activity events resource identifiers seq seq seq seq seq 
example workflow named montage 

part 
obtain dynamic monitoring data resources infrastructure monitoring services 
analyze performance dependability workflows resources time 

content language analysis agents metric content language distributed agents share information conducting performance analysis workflows grid 
distributed analysis framework analysis agents organized societies 
society major agent coordinates job agents community 
major agents communicate exchange information 
performance analysis requests performance data exchanged described 
analysis request client agents collaborate conducting performance analysis 
presents example agents exchange requests collaboratively conducting analysis task 
presents example rdql request performance analysis 
client sends request major society 
activityid project knows request processed major society routes task 
receiving request sends request agent knows analyze 
conducts analysis returns results major turn sends results client 
fulfill request analysis agent may invoke agents 
example execution status activity project order compute synchronization delay needs execution status activities project depends may send requests order get execution status activities 
montage metric seq dependency metric dependency metric 
agents process analysis request 
select instance instance activity activity project instance dps uibk ac 
rdql query request synchronization delay 

related techniques introduced study quality service performance models workflows :10.1.1.17.3503
performance metrics associated activities 
consider performance metrics levels detail code regions workflow constructs 
discusses qos metrics associated grid architecture layers 
studies performance metrics grid workflows 
existing tools supporting formance analysis workflows common performance metrics metrics 
study covers large set performance metrics ranging workflow level code region level 
discusses role ontology qos metrics management web services 
ontology specification qos metrics tasks web services developed 
lack ontology describing performance metrics performance data grid workflows 
growing effort mining workflow :10.1.1.10.90
workflow activities traced log information discover workflow model 
events logged activity level 
workflow mining focuses discovery workflow model tracing data study discuss important performance metrics workflows methods describe performance data workflows 
workflow event logs analyze performance metrics proposed study 

performance dependability grid workflows characterized defined performance metrics 
presents novel study performance metrics grid workflows 
performance metrics associated multiple levels abstraction ranging code region workflow 
ontology describing performance data grid workflows 
currently reevaluating enhancing ontology describing performance data grid workflows 
extending set performance metrics 
working prototype distributed analysis framework distributed analysis agents requests exchange analysis tasks conducting performance analysis grid workflows 
van der aalst ter hofstede kiepuszewski barros :10.1.1.37.8441
workflow patterns 
distrib 
parallel databases 
cao stephen jarvis subhash graham 
workflow management grid computing 
proceedings st international symposium cluster computing grid page 
ieee computer society 
jorge cardoso amit sheth 
semantic workflow composition 
intell 
inf 
syst 
jorge cardoso amit sheth john miller 
workflow quality service 
proceedings ifip tc wg international conference enterprise integration modeling technique pages 
kluwer 
dustdar hoffmann van der aalst 
mining ad hoc business processes 
data knowledge engineering 
michael jaeger gregor gero hl 
qos aggregation service composition workflow patterns 
proceedings th international enterprise distributed object computing conference edoc pages monterey california usa september 
ieee cs press 
kim ellis 
performance analytic models analyses workflow architectures 
information systems frontiers 
sriram krishnan patrick gregor von laszewski 
gsfl workflow framework grid services 
technical report argonne national laboratory cass avenue argonne il july 
rdql rdf data query language 
www hpl hp com semweb rdql htm 
daniel 
quality service aspects metrics grid computing 
proc 
computer measurement group conference 
owl web ontology language 
www org tr owl ref 
tony roy martin 
monitoring controlling multi agent workflow system 
proceedings second workshop australasian information security data mining web intelligence software pages 
australian computer society 
hong truong thomas bernd mohr michael li 
standardized intermediate representation fortran java programs 
technical report institute software science university vienna october 
john sowa 
knowledge representation logical philosophical foundations 
brooks cole pacific grove ca 
condor team 
dagman directed acyclic graph manager 
www cs wisc edu condor dagman 
vladimir bernard pagurek patel 
requirements ontologies management web services 
revised papers international workshop web services business semantic web pages 
springer verlag 
hong truong thomas 
performance analysis tool parallel programs 
concurrency computation practice experience 
hong truong thomas 
performance analysis data sharing tools integration grids new approach ontology 
proceedings international conference computational science iccs lncs pages poland jun 
springer verlag 
wil van der aalst ton weijters laura 
workflow mining discovering process models event logs 
ieee transactions knowledge data engineering 
