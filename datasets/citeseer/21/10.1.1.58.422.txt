evolving objects general purpose evolutionary computation library merelo romero schoenauer danish hydraulic institute mak dk team 
ia de universidad de granada spain es es cnrs ecole polytechnique france marc polytechnique fr 
presents evolving objects library object oriented framework evolutionary computation ec aims provide exible set classes build ec applications 
design objective able evolve object tness sense 
order eo concentrates interfaces object evolve endowed interface 
describe features object order evolve examples eo put practice evolving neural networks solutions mastermind game novel applications 
evolutionary algorithms eas stochastic optimization algorithms crude imitation natural darwinian evolution 
popular di erent domains research people coming external domains face dicult dilemma existing ea library comply limitation write represent huge generally leads 
limitations authors aware mainly scientists closely related ea research 
instance evolving kind objects neural networks dicult matter mainly due lack exibility current evolutionary computation libraries respect representation variation operators representation 
libraries see comprehensive list allow prede ned representations 
evolving types data structures start attening usual representations binary string oating point array lisp tree 
case nns instance representation decoded evaluate network training set case regression problem lacks precision case binary string representation expressive power string shape serialization complex data structure evolution string standard string variation operators keeping actual building blocks dicult evolution structure closely representing neural nets arrays weights biases layer perceptrons generally array objects representing 
neurons 
similarly existing libraries propose limited range ways apply darwinian operators population limited proportional selection generational replacement generally single method applying di erent kinds variation operators members population limited sequentially applying members population crossover operator mutation operator probability 
numerous ways go strong interaction parameters evolutionary algorithm impossible priori decide way best 
presents paradigm free evolutionary computation library allows easily evolve data structures objects ful lls small set conditions 
algorithms programmed limited basic existing ec paradigm genetic algorithms evolution strategies evolutionary programming genetic programming level population evolution variation operator application 
exist eo original experiments easily performed building blocks 
rest organized follows section brie introduces eas basic terminology presents state art ea libraries 
section presents evolving objects representation independent paradigm independent object oriented approach evolutionary computation 
rest discusses eo class library structure section surveys existing applications section 
section concludes presents lines 
evolutionary algorithms section brie recall basic steps ea emphasizing interdependencies di erent components 
problem hand optimize objective function search space 
population individuals points search space undergo arti cial darwinian evolution tness individual directly related values objective function takes point 
generally random population generation loop algorithm described stopping criterion statistics gathering simplest stopping criterion generation counter number function evaluations 
possible complex stopping criteria evaluation evaluation stochastic main cpu cost selection crossover mutation 
offspring variation operators representation dependent generation checkpointing stopping criterion statistics initialisation best individual parents fig 

sketch evolutionary algorithm depends evolution best tness population generations measurements gradient gains number generations measure diversity population 
selection choice individuals generate spring 
numerous selection processes deterministic stochastic 
tness individuals directly related objective function 
depending selection scheme individuals selected 
point selected individuals give birth copies 
application variation operators copies operator applied giving birth spring 
operators generally stochastic operators usually distinguish crossover recombination mutation operators crossover operators operators cases parents exchange genetic material build spring mutation operators generally stochastic operators evaluation computation newborn spring 
mentioned earlier tness measure individual directly related objective function value 
note real world application total cpu cost ea comes evaluation part 
authors de ne crossover operators parents generate spring signi cant di erence reported variants 
replacement choice individuals part generation 
choice set spring case parents die sets spring parents 
case replacement procedure deterministic stochastic 
components described categorized subsets relate darwin principles natural evolution survival ttest small undirected variations 
selection replacement termed evolution engine describe way darwinian evolution applied population evolution engine concerned tness individuals totally independent representation search space 
initialisation variation operators representation speci cases tness idea variations undirected 
basic classi cation gives hints design evolutionary library basis eo design 
ea libraries look genetic algorithms newsgroup faq shows scores freeware ea libraries look ga newsgroups news comp ai genetic show people 
rule home brew libraries 
libraries hard restrictive instance restricted ec paradigm just plain bad products 
product stands rest matthew widely evolutionary computation library includes paradigms representations deal variation operators 
lacks exibility number areas 
choice existing representations limited arrays bits integers oating point combination expanded sub 
evolving neural network instance mean squeezing array 
second allows variation operators genome mutation crossover initialization operator 
operators applied sequentially degree freedom respect probabilities application 
instance popular experiment involving random choice di erent mutations straightforward 
similarly simple way implement evolution strategy operators self adaptive mutation global recombination 
scalar tness implemented dicult add constraint handling techniques generic way impossible multi objective optimisation 
evolvable objects library introduced exibility designed ground 
exibility owns object oriented design data structure operator statistic computing routine object 
data structures data structure evolved variation operator provided structures 
pre existing representations exist humble bitstring including gp parse trees multilayer perceptrons 
features data structure need evolvable eo 
selectable replicable mutable combinable 
properties computational analogs criteria evolution outlined maynard smith variability examined turn property essential ea really natural counter part biological models evolution course don consider model evolution 
generally little attention existing libraries standard procedures exist standard representations 
standard procedures questionable situations 
eo initialisers objects allows initialisation procedure common feature gp instance 
main components darwinian evolution natural selection seen survival ttest 
eo ea libraries objects attached tness tness perform selection 
eo limited scalar tness see section 
replicability possible obtain possibly imperfect copies object objects replicators 
close analogy criterion 
possible create objects scratch object factories 
mutability rst possible implementation maynard smith criterion variability states genotype copying process imperfections spring equal parent 
mutation increases diversity population 
mutation operators mutator change evolving object ways inner workings mutation need known outside particular representation needed order mutate 
client guaranteed object change generally stochastic way 
possible variation operator combine objects create new similar way ga crossover 
possible operation generally decreases diversity sense objects population similar cases binary crossover non gene boundaries distance preserving crossover merz freisleben increase diversity 
happens mutation exact inner workings recombination need known client 
objects usually called combinators 
way ensure minimal meaningfulness follow rules forma recombination 
practice generally impossible combiners follow combiner follow 
serve component variability component depending exact nature combination 
balancing variability known eld evolutionary computation exploration exploitation dilemma 
news problems solved computer implemented data structures having characteristics including evolutionary algorithms evolved fogel coworkers grefenstette eo framework algorithms just object multilevel evolutionary algorithm naturally tted eo framework 
fitness function tness eas way specify represent natural environment natural evolution 
ea libraries unfortunately tness limited single scalar value natural selection ends comparisons scalar values 
choice restrictive provision selection mechanisms selection constraints objectives complex evolution processes involving population partial solutions competing cooperating populations 
tness type technically evolutionary objects tness type opens door types eas 
course scalar real valued tness widely popular selections replacements real valued tness available 
possible vectors real numbers design multi objective generic constraint handling selectors 
instance selection adaptive segregated constraint handling implemented eo 
variation operators variation operators eo objects exist outside genotypes act number variation operators designed evolving data structure 
variation operators take number inputs generate number outputs allowing instance easy implementation operators es global recombination operators 
furthermore separate objects variation operators private data instance special selector choosing mate rst partner crossover operator allowing sexual preferences taken account private parameters modi ed run time allowing easy implementation standard deviation gaussian mutations evolution strategies known fth rule self adaptation mechanisms 
variation operators combined di erent ways 
basic constructs exist sequential combination variation operators applied population speci rates simple genetic algorithms instance proportional combination chooses operator ones knows relative pre de ned weights 
furthermore ways combining variation operators recursively embedded 
instance popular combination operators mix di erent crossovers di erent mutations simple ga framework amounts sequential recombination proportional choice available crossovers proportional choice available mutations 
note constructs objects evolved run time modifying di erent rates past evolution 
evolution evolution engines di erent ways course popular engines generational ga steady state ga ep es es strategies available 
parameters evolution engine speci ed great details selection operator parameters number spring generate proportion strong elitism best individuals copied generation regardless spring replacement procedure involves parents weak elitism replace worst individual new population best parent best tness decreasing 
new evolution engines de ned simply assembling existing eo building blocks 
technical description eo ideas put practice class library open source library available sourceforge net facilities open project sourceforge mailing lists cvs access source tree bug reporting 
current version leading zero version indicates complete 
needs ansi compliant compiler free software foundation gcc linux unix avors environment win nt classes commercial compilers microsoft visual 
evolutionary classes mentioned previous section general facilities ec applications check pointing stopping restarting applications multiple statistics gathering graphic line representation uses gnuplot linux provided 
open existing tutorial template les implementing new statistics displaying line instance straightforward 
ways 
frequent case representation de ned eo bitstrings real valued vector simply want optimize tness function 
thing programmed tness computation function components algorithm simply input program parameters 
hand ad hoc representation requires coding basic representation dependent parts algorithm de nition representation initialisation variation operators see section 
tness function course 
similarly testing new selection instance done simply plugging existing eo program unchanged 
template les provided tutorial section help programmer write components 
plan provide object repository programmed object classes immediately posted 
major outcome improve reproducibility ec results written source code experiments available research starting point 
link added repository european evolutionary computation network excellence designing 
applications eo far applied number di erent areas 
great exibility library implement complex representations multi layer perceptron voronoi diagrams 
speci variation operators multi objective optimization speci constraint handling mechanisms hybrid mutation operators 
evolving multilayer perceptrons binary oating point vector representation objects evolved multilayer perceptrons 
eo class population level operators new diversity generation operators designed add eliminate hidden layer neuron hidden layer crossover mutate initial weights 
back propagation training algorithm mutation operator 
application available es pedro 
htm 
genetic mastermind case game mastermind ga programmed nd hidden combination improving results ob tained previous implementations subject evolution mastermind solutions 
variation operators adapted objects permutation creep operator substituted number color rst 
huge improvement obtained algorithm explored space explored total search space obtained solutions faster 
game played online es code downloaded site 
evolution fuzzy logic controllers bidimensional fuzzy logic controllers evolved approximate variable functions variation operators added subtracted row columns changed values precedents consequents 
evolved object approximated function proper number rows columns controller 
evolution rbf neural nets data structures representing rbfs diverse radii dimension evolved variation operators add subtract rbfs change position centers value radii 
evolved rbfs usually smaller accurate trial error incremental procedures 
evolutionary voice segmentation problem consists nding right division speech stream di erent words phrases phonemes separated eo evolves segmentation markers results 
case evolved data structure deltas respect linear segmentation 
plug visualization tools uses kohonen self organizing map 
tool presents training dimensional map tness attened dimensional vector representation chromosome allowing assess evolutionary process checking explored eciently search space 
parallel version mpi pvm development mpi version tested benchmark problems 
applied image segmentation applies genetic algorithms stripe straightening algorithm process compress fruit embryo images 
dicult problem car engineering costly objective function replaced surrogate cheap model tackled combination multi objective constraint handling techniques see submitted conference 
hybrid surrogate mutation operator implemented tested parametric optimization 
rst results submitted conference promising 
topological optimum design structures long time research authors 
ported eo framework basically multi objective problem minimizing weight structure maximal displacement loading 
eo possible really compare approaches exactly representation variation operators including way applied 
adaptive logic programming variable length chromosome steer path logic program order generate constrained mathematical expressions 
eo possible compare results tree genetic programming approach 
ambitious objective presenting new framework evolutionary computation called eo include evolutionary computation paradigms new ones novel data structures evolved general particular variation operators population level change operators 
eo practical implementation shape eo class library public freely available fsf library lesser general public license sourceforge net 
library applied problems traditionally binary oating point representations evolving object data structure want obtains result neural net bidimensional fuzzy logic controller 
possible lines try implementation di erent oo languages java interoperability 
feature application generator high level evolutionary computation languages operating system independent graphical user interface 
supported part feder project fd tel cicyt tic 

ack 
self adaptation genetic algorithms 
varela bourgine editors proceedings european conference arti cial life 
practice autonomous systems pages mit press cambridge ma 

th 
ack 
schwefel 
overview evolutionary algorithms parameter optimization 
evolutionary computation 

banzhaf nordin keller 
genetic programming automatic evolution computer programs applications 
morgan kaufmann 

schoenauer 
adaptive algorithm constrained optimization problems 
schoenauer editor proceedings th conference parallel problems solving nature pages 
springer verlag lncs 

merelo prieto 
solving mastermind gas simulated annealing case dynamic constraint optimization 
parallel problem solving nature iv pages 
springerverlag lncs 

garc ia arenas castillo merelo prieto romero 

xi de universidad de granada 
atc pages 

castillo gonz alez merelo prieto romero 
prop iii global optimization multilayer perceptrons evolutionary algorithm 
gecco 

castillo merelo romero prieto 
evolving multilayer perceptrons 
neural processing letters 

lutton raynal schoenauer 
polar ifs individual gp ecient inverse ifs problem solving 
genetic programming evolvable machines 

lutton schoenauer 
take 
schoenauer editor proceedings th conference parallel problems solving nature pages 
springer verlag lncs 

carlos alba jos 
utilizing optimal forma recombination hybrid genetic algorithms 
thomas back eiben marc schoenauer editor parallel problem solving nature ppsn pages 
springer verlag lncs 

deb 
multi objective optimization evolutionary algorithms 
chichester uk wiley 

deb agrawal 
fast elitist non dominated sorting genetic algorithm multi objective optimization nsga ii 
schoenauer editor proceedings th conference parallel problems solving nature pages 
springer verlag lncs 

eiben 

genetic algorithms multi parent recombination 
davidor 
schwefel manner editors proceedings rd conference parallel problems solving nature pages 
springer verlag lncs 

fogel fogel atmar 
meta evolutionary programming 
chen editor proceedings th asilomar conference signals systems computers pages paci grove california 

freisleben merz 
genetic local search algorithm solving symmetric asymmetric traveling salesman problems 
ieee international conference evolutionary computation pages 
ieee press 

grefenstette 
optimization control parameters genetic algorithms 
ieee transactions systems man cybernetics smc 

lutton schoenauer sebag 
compact unstructured representations evolutionary topological optimum design 
intl applied intelligence 
appear 

org david beasley 
hitch guide evolutionary computation faq comp ai genetic 
available surf de uu net encore www 

michalewicz 
brain beauty 
fogel editor proceedings fifth ieee international conference evolutionary computation ieee press 

schoenauer 
alternative random initialization genetic algorithms 
th 
ack editor proceedings th international conference genetic algorithms pages 
morgan kaufmann 

ryan neill adaptive logic programming 
gecco 

ryan neill ripple crossover genetic programming 


kane schoenauer 
topological optimum design genetic algorithms 
control cybernetics 

teuvo kohonen 
self organizing maps 
springer berlin heidelberg 

maynard smith 
theory evolution 
penguin 

merelo castillo romero 
finding haystack hints evolutionary computation case genetic mastermind 
late breaking papers gecco pages 

merelo 
evolutionary algorithm speech segmentation 
submitted 

michalewicz schoenauer 
evolutionary algorithms constrained parameter optimization problems 
evolutionary computation 

paredis 
coevolutionary computation 
arti cial life 

equivalence class analysis genetic algorithms 
complex systems 

rechenberg 
optimierung systeme nach prinzipien des biologischen evolution 
verlag stuttgart 

merelo rojas romero castillo 
evolving dimensional fuzzy logic controllers 
submitted 

castillo merelo 
evolving rbf neural nets 
proceedings springer verlag lncs 
appear 

romero garc ia arenas castillo merelo prieto 
evolutionary computation visualization application prop 
pages 
springer lncs 

ronald 
selection meets 
eshelman editor proceedings th international conference genetic algorithms pages 
morgan kaufmann 

fontana schoenauer 
car front crash members 
ea 
submitted 

schoenauer 
hybrid surrogate mutation preliminary results 
ea 
submitted 


experimental determination drosophila embryonic coordinates genetic algorithms simplex method hybrid 
proceedings second european workshop evolutionary computation image analysis signal processing april 


genetic algorithms image processing quantitative atlas drosophila genes expression 
available www edu atlas atlas html 
tang 
constructing ga applications 
technical report dept computer science chinese university hong kong 

wall 
overview 
lancet mit edu ga 
