tap semantic web platform guha ibm research almaden ibm com activities web services semantic web working create distributed web machine understandable data 
address important problems need solved realize vision 
discuss problem scalable deployable query systems simple general query interface called getdata 
address issue creating global agreements vocabularies introduce concept semantic negotiation process programs bootstrap small shared vocabularies larger shared vocabularies 
discuss problem programs determining data sources trust solution uses web trust semantic web registries 
briefly describe tap system implements getdata interface semantic negotiation web trust enabled registries 
introduce application semantic web called semantic search describe implemented system uses data semantic web improve traditional search results 

outline activities xml web services semantic web working create distributed web machine readable data 
web envisioned analogous current world wide web www consist machine readable data targeted programs www consists human readable pages targeted humans 
semantic web potential having big impact human readable web 
differences machines humans semantic web simple replacement human readable formats html images machine readable formats xml rdf 
number problems need solved vision realized 
address issues arise development semantic web 
problem discuss query interfaces semantic web 
current efforts including rql aspire query interface semantic web 
argue efforts analogs sql applied xml rdf ill suited serve role mechanism querying data sites 
getdata simple interface potentially serve role 
look problem semantic disparities schema mismatches data different data providers 
data rob mccool knowledge systems lab stanford stanford ca usa ksl stanford com providers independently start publishing data inevitable different conceptualizations different names concepts 
different providers different names concept difficult client program access integrate data different sources 
attempts get problem forcing set names concepts centrally control names past typically failed large scale distributed coordination problems involved 
introduce concept semantic negotiation process parties bootstrap small shared vocabulary larger shared vocabulary exchanging descriptions resources wish create mutually understandable 
open systems www publish data resource lot gets published trusted 
current web humans intelligence invoking concepts brand recommended decide believe web site says 
programs hand relatively recourse facilities decide believe data new site semantic web 
expecting developer application semantic web explicitly list sites trust onerous limiting 
concept web trust registries semantic negotiation enables programmers applications leverage determining semantic web sites trust 
tap system implements concepts describe architecture functionalities provided tap 
examine early application semantic web called semantic search uses semantic web augment traditional ir search results 
semantic search maps search term resources semantic web type resource augments search results relevant data semantic web 

semantic web semantic web described extension current web information defined meaning enabling programs understand 
broad scope definition semantic web important purpose explicit mean term semantic web 
section briefly describe salient distinctive features semantic web assume 
semantic web contain resources corresponding just media objects web pages images audio clips current web objects people places organizations events 
semantic web contain just single kind relation hyperlink resources different kinds relations different types resources mentioned 
concretely assume data semantic web modeled rdf data model directed labeled graph node corresponds resource arc labeled property type 
show small chunks semantic web corresponding yo yo ma second corresponding person eric miller 
examples illustrate salient aspects semantic web discuss 
documents vs real world objects semantic web web documents web relations resources denoting real world objects objects people places events 
example resources city paris musician yo yo ma auction event music album journey second example person eric miller semantic web activity organization city dublin ohio human vs machine readable information resource corresponding eric miller 
string eric miller resource denoting person 
people name eric miller 
denotes particular person name 
salient point semantic web contains rich machine readable information resources 
compare data eric miller home page www org people em 
eric home page contains human readable information machine understandable parts web page correspond displayed browser 
data hand machine understandable 
states machine understandable language eric person works relation html semantic webs semantic web extension current web 
shows rich set links nodes semantic web html documents 
relations typically connect concept semantic web pages pertain 
possible pages current web contain semantic markup 
architecture system described markups 
assume robots gather markups available semantic web 
distributed extensibility important aspect semantic web different sites may contribute data particular resource 
example shown different sources data yo yo ma related resources 
amazon cdnow data albums ebay data auctions related albums data concert schedule data born paris 
sites publish data yo yo ma getting permission centralized authority extend cumulative knowledge semantic web resource distributed fashion 
distributed extensibility important aspect semantic web 
formats different xml proposals rdf owl representing resources inter relations semantic web particular system needs commitment interchange formats protocols order information 
system described uses resource description framework schema vocabulary provided rdfs means describing resources inter relations 
soap protocol querying exchanging rdf instance data machines 

query interfaces sw semantic web going include large number servers provide data wide range topics 
client programs desktops running servers query servers data 
need standard way querying data 
area query interfaces graph structured data fields artificial intelligence databases xml rdf communities 
subsection briefly survey relevant 
related graph structured models data frames semantic networks popular artificial intelligence long time 
various formalizations logic frames description logics concepts studied 
systems kl classic loom included query interfaces built 
database community prominently lore focused storing querying graph oriented semi structured data :10.1.1.41.3062
number query languages proposed implemented rdf daml 
common feature query languages attempt sufficiently expressive large number different kinds queries including computationally expensive process stated language 
subsection argue query languages inappropriate semantic web 
deployability vs expressiveness public web contrast intranets firewalls extremely unpredictable 
argue query interface public semantic web site semantic web provide needs satisfy requirements 
simplicity straight forwards site offer data query interface 
referring effort required initially develop interface data computational expense providing interface ongoing basis 
segment semantic web pertaining yo yo ma segment semantic web pertaining eric miller predictability behavior queries predictable 
important perspective data provider perspective client 
highly undesirable query times 
expressive query interfaces inherently difficult support 
especially difficult support data highly distributed semantic web 
easy intentionally unintentionally construct queries consume vast amount resources 
solution limit amount computational resources query may consume 
predicting general case quite difficult 
amount computation resources available function system load hardware query processing engine possible client know parameters site time 
consequently query extremely simple client know query answered 
web provides case study 
big websites traditional relational databases store data 
middleware scripts servlets issue sql queries databases generate pages 
contrast interface provided back database middleware interface provided site client typically simpler 
url argument passed require execution sql queries sql queries predetermined known behaved 
major website provides public sql interface back relational database 
sites data available raw form yahoo 
quotes interface sql general purpose data query language 
similarly believe expressive query systems widely available general public sites semantic web 
argue approach semantic web sites provide light weight query interface easier support exhibits predictable behavior 
simple lightweight query interface complementary complete query languages rql 
targeted querying open uncontrolled web site control issuing queries targeted comparatively better behaved predictable area firewall 
lightweight query preclude particular sites aggregating data multiple sites providing rich query interfaces aggregations 
subsection describe simple interface called get data 
getdata getdata intended simple query interface network accessible data directed labeled graphs 
reasons explained previous section getdata intended complete expressive query language la sql rql 
intended easy build support perspective data providers data consumers 
getdata allows client program access values properties inverses resource graph 
query able graph url associated 
getdata query soap message addressed url 
message specifies arguments resource properties accessed properties accessed 
optional arguments specify client wants inverse properties number answers desired answer returned getdata query graph contains resource properties queried properties specified query respective targets sources 
application programming interfaces hide details soap messages xml encoding programmer 
application semantic web getdata gets api syntax looks getdata resource property value examples getdata syntax operating graphs shown figures 
getdata yo yo ma birthplace paris france getdata paris france temperature getdata eric miller dublin ohio yo yo ma paris france eric miller dublin ohio resources corresponding yo yo ma city paris france person eric miller city dublin ohio 
typically resources uri resource 
case tap kb uris tap stanford edu data yo yo tap stanford edu data france tap stanford edu data eric tap stanford edu data ohio 
getdata queries soap message point url corresponding graph data 
getdata allows reverse traversal arcs resource client request resources sources arcs certain label terminate resource 
particular call getdata may specify list properties values requested getdata eric miller lastname firstname addition core getdata interface interfaces enable graph exploration 
search search interface enables client identify resources particular string substring title keyword generally title properties 
reflection reflection interfaces similar reflection interfaces provided object oriented languages return lists arcs coming going node 
useful exploring graph vicinity node knowledge 

semantic negotiation motivation today big websites databases driving website 
website may accessible internet databases hidden firewalls accessible 
semantic web raw data databases accessible 
substantial improvement 

world relational databases highly fragmented 
islands data department internally integrated coherent difficult impossible integrate 
example amazon com cdnow aol shopping department motor vehicles data yo yo ma database 
integrating information coherent extremely difficult 
difficult integrate data process extracting data data bases involved fact uses different schemas different names refer yo yo ma 
goal create schematically unified coherent unified semantic web data small viewed large virtual database 
ideally scenario sites certain piece data birthplace yo yo ma client issue exact query retrieve data formulation query purely function client trying retrieve trying retrieve 
need way referring resources independent site dependent global name resource 
figures illustrate mean 
diagram number sites publishing data yo yo ma different name various concepts associated 
mean schematically unified semantic web possible client get view data shown 
goal create unified view data 
order gain unified view semantic web need solve problem different sites different names concept 
believe mechanisms overcoming problems built foundations query system semantic web 
problems global names examples getdata section uris resources individuals properties refer resources properties 
uris provide simple uniform way refering resources solves name disparity problem 
global names uris fip codes isbn numbers provide firm basis sharing 
parties exchanging data book book isbn number way referring book parties quite sure referring thing 
system flaws 
overhead assigning book unique isbn number deals books tracking book isbn number 
problems get magnified context kinds objects 
fact isbn numbers probably successful naming schemes 
date uniformly naming schemes kinds things people places events 
complexities involved creating tracking canonical names quite severe 
canonical naming schemes uris isbn numbers shortcomings 
example shakespeare hamlet isbn number 
particular editions particular publishers isbn number general book 
wants refer hamlet general isbn numbers help 
instance global names succeeded uris media objects web 
unfortunately easy extend kinds resources 
uris real world objects people places different uris web objects web pages images 
unique owner publisher object final say specifying url object 
object defined url possible relatively rare parties different urls object 
case people places common different sites different uris object 
take real world example consider musician yo yo ma 
publishes 
exists independent identifier 
information number different sites including people magazine amazon cdnow 
sites uses different internally unique identifier identify yo yo ma 
example consider city paris france 
different sites weather com yahoo 
lonely planet contain information paris uses different identifier 
phenomenon different sites referring object different ways especially nasty effects comes integrating data multiple sites 
actual query issued site function sites identifiers objects query 
typically problem solved client maintaining mapping table stores mapping identifiers object different sites 
approach shown 
solution inelegant quite expensive 
mapping tables get quite large expensive create maintain 
longer possible simple light weight client semantic web 
clearly need better solution mapping tables 
bootstrapping argued earlier quite improbable get unique names kinds objects exchange data 
time believe possible agents mutually comprehensible interchange data shared vocabulary 
despite argument standardized global names uris important role play 
order define role important draw distinction names general concepts classes people city properties title individuals yo yo ma paris texas 
far 
feasible useful get agreement uris uris kind global names practical 
data yo yo ma different sources mapping tables data integration expect agents trying exchange data share vocabularies 
goal semantic negotiation enable agents bootstrap shared vocabulary larger shared vocabulary 
exchanging clarifying descriptions resources wish create shared vocabulary 
descriptions exchange formal language vocabulary share 
descriptions description directed labeled graph involving unlabelled node node described nodes reachable node traversing arcs specified direction reverse direction 
formally recursively define description object conjunction atomic formulae follows 
constant existentially quantified variable property type description description said refer 
constant existentially quantified variable property type description description said refer 
description refers property type constant existentially quantified variable description 
description refers property type constant existentially quantified variable description 
descriptions description expressed datalog easy see descriptions regular path expression inverse links graph :10.1.1.41.3062
particularly interested class descriptions involve inverse links expressed single xml element rdf serialization 
stated logical terms restrict attention case description form 
predicates relations constants variables object described 
easy see corresponds case description expressed rdf single xml element 
discriminant descriptions agent involved negotiation data resource subset description resource 
sites descriptions resource 
descriptions discriminant adequate distinguish resources known site 
discriminant description object site iff ax universal quantifier domain objects site means satisfies description site discriminant description may simple involve single property complex involving different properties 
site object may multiple discriminant descriptions 
degenerate case uri object simple description 
database keys database keys special case discriminant descriptions 
key data site ax notice stronger statement formula 
formula applies instance level particular object formula hand applies objects site example illustrates difference keys general weaker concept discriminant descriptions 
example consider sites information musicians 
site uses internal identifiers identify musician 
associated musician pieces information name name compositions albums sites trying map local identifiers musicians 
assume coverage particular kind musician say western classical composers sides complete information mentioned properties composers 
multiple distinct composers name bach know just name adequate key 
key musicians involve name name date birth combination properties 
certain names know composer name 
lastname adequate shared discriminant description lastname key composers 
sites don share key discriminant descriptions able map substantial fraction domain 
shown example shared keys provide strong constraint require shared information widely applicable 
hand possible identify shared discriminant descriptions subsets domain shared key exists 
rare cases different sites key particular kind object 
cases assume object domain sites key map object sites 
frequently occurring case shared key shared vocabulary semantic negotiation tries identify shared discriminant description mapping 
discriminant descriptions semantic negotiation process going back forth identify common discriminant description resource parties trying establish shared 
description established assumptions follows description identifies resource sides 
site site satisfy shared discriminant description respectively refer object 
description part sites vocabulary shared 
order shared discriminant descriptions map resources sites need assumptions 
resource mapped exists domain sites 
sites complete values objects site properties discriminant description 
recognize assumptions strong 
cases able priori ascertain object exists domains sites 
web data sources traditional databases don complete information objects domains 
plan relax assumptions progresses 
semantic negotiation utilizes classic computer science technique introducing level indirection 
parties share name object descriptions object names share come agreement name object 
justify added level indirection reduction number terms names need shared 
getdata semantic negotiation semantic negotiation general purpose mechanism different contexts synchronizing names schemas 
getdata uses semantic negotiation reduce dependency uris resources shared caller provider getdata 
specifically getdata allows resource properties queried referred descriptions 
provider getdata expected interpret description map resources return answer 
semantic negotiation context getdata proceeds follows 

client sends server getdata query description refer object property accessed 
description assumed discriminant client 

server understand description uses terms server know server responds error code indicating description understood 
case lists particular terms understood description included class object class understood include properties class know 
feedback client try provide description server understand 

server understands description objects matching description returns error code saying 
optionally tell client fragment description satisfied objects 

server understands description multiple objects matching description returns error code saying 
case depending different objects match server may return list descriptions discriminant server 
client may choose retry query 

server understands description single object matching description returns values requested 
case answer list resources answer may include additional data resource client may cache anticipation queries resources 
just form proactive caching 
optionally additional data may include server names resources reduce need negotiation names resources 
experiment data randomly chosen musicians websites amazon com cdnow tap system able match musicians sites semantic negotiation sharing general terms classes composer type firstname name title 
claim vast reduction orders magnitude number terms need shared justifies added level indirection 
query complexity section argued getdata need simplicity predictability query languages 
incorporation descriptions identify objects goes spirit simplicity motivated getdata 
order simplicity predictability mappings objects generated cached 
descriptions getdata include information site local identifiers 
similarly answers getdata include local identifiers 
enables easy generation mappings identifiers cached 
descriptions limited regular path expressions inverses 
queries easier process queries general query languages datalog 
descriptions semantic negotiation getdata particular purpose identify object 
addition regular path expression constraint allows processors optimize processing descriptions 
failure modes semantic negotiation form loose coupling 
forms loose coupling failure couple 
ways happen include 
parties involved share vocabulary shared discriminant description 
earlier example yo yo ma music store hospital shared vocabulary items share common discriminant description case fall back uris identify yo yo ma 
alternately share common vocabularies third party able broker relationship 
addition shared vocabulary items musician name semantic negotiation relies heavily sharing literals 
example quite possible site uses name yo yo uses yoyo 
similar worse problems occur dates phone numbers relying heuristic canonicalization schemes reduce number errors 
assumptions described previous section hold leading situation case semantic negotiation may lead sites different objects 
example imagine sites knew cities texas knew cities france agree locally discriminant description city named paris paris scope semantic negotiation examples previous section involved negotiating shared names individuals musicians 
practice expect semantic negotiation purposes principle reason strategy bootstrap core vocabulary terms classes properties 
descriptions classes properties extensional list number uses class property 
goal find shared instances usage term reduce probability accidental sharing acceptably low level 
example case classes parties addition identifying shared super classes try identify shared members 
parties sufficiently large number commonly shared members objects known parties member class side parties may choose conclude respective classes 
related substantial body problem integrating data different sources 
focus research integrating data sources different mechanisms storing retrieving data 
systems tsimmis infomaster concept mediators bridge differences 
assume data sources data available directed labeled graph accessible getdata 
sense getdata interface similar spirit concept mediators 
area research problem schema differences databases 
systems infosleuth information manifold infomaster focused bridging differences schema provide user unified view data 
typical approach map schemas world view general schema expressive language representation schemas translate databases 
systems clio provide mechanisms semi automatically generate mappings schemas different databases 
systems assume individuals individual people places uniform names keys 
heuristic ontology schema mappings studied systems 
approaches targeted merging ontologies forked common origin different problem integrating independently developed data sources semantic web 
systems integration posteriori databases constructed exist need integrated 
integration setup offline batch mode 
differs previous aspects 
focus creating infrastructure publishing data integration posteriori concern primary aspect architecture 
second focus dynamic line data integration opposed previous systems integration done batch mode involved batch mode step 
interest instance level integration schema level integration 
area probabilistic representation languages related 
tries solve problem identity negotiation component 
ins system uses intentional names address network components printers similar descriptions refer entities 

registries different sites graphs different kinds information different properties different types resources 
getdata request targeted particular url corresponding graph assumed data 
number graphs keeping track graph data complex client handle 
simple registry available separate server keep track url values properties classes resources 
registry abstracted simple lookup table class property returns list urls values property instances class 
complex registries descriptions objects available part tap 
registry place client direct query registry redirects query appropriate site 
querying different sites dynamically result high latency query 
order provide reasonable performance cache responses getdata requests 
caching part registry functionality 
trying ways similar domain name service dns data internet hosts 
dns provides unified view data internet hosts sitting millions sites internet 
different kinds servers store host information differently 
dns provide uniform view data client pretend data sitting locally nameserver 
analogy regard getdata extension core query interface dns 
just enables client query particular property ip address class objects internet hosts getdata enables client query different kinds properties classes objects 

trust important aspect semantic web different sites may contribute data particular resource 
example different sites data yo yo ma 
amazon cdnow data albums ebay data auctions related albums data concert schedule data born paris 
sites publish data yo yo ma getting mission centralized authority extend cumulative knowledge resource distributed fashion 
distributed extensibility leads problems 
system publish data resource lot gets published trusted 
html web humans intelligence invoking concepts brand recommended decide believe web site says 
programs hand relatively recourse facilities decide believe data new site 
expect programs able kind trust judgments sites humans 
consequently level tell registries sites trust kinds data 
approach rely centralized registries ascertain quality trustworthiness sites providing data 
experience html web centralized registries yahoo shows approaches don scale 
approach complements centralized registries rely network registries share entries web trust registries 
model addition adding entries sites queried kinds data programmer tells registry registries trust 
query arrives client registry consults local entries match forwards query trusted registries 
result done programmer web trust exploited program 

tap system tap implementation querying negotiation interfaces protocols described 
tap provides facility publishing data library implements application programming interface consuming data registry 
program consuming data semantic web tap client library provides simple getdata api quite easily build popular soap toolkits 
publishing built system called functions module apache server providing getdata interface 
goal extremely simple publish data getdata 
intended high solution sites large amounts data traffic 
flexibility scalability important ease sites 
apache server directory typically called html places files html gif jpg directories containing files result files available machine 
similarly creates sibling directory typically called data html directory places rdf files directory 
graphs encoded files automatically accessible getdata interface 
provides simple mechanism aggregating data multiple rdf files 

semantic search growth semantic web driven applications 
section describe application semantic web problem search 
search pop ular applications web application significant room improvement 
today search engines understanding search term 
goal retrieve documents search terms occur 
believe addition explicit semantics improve search 
search general term covers different kinds activities 
particular need distinguish kinds searches 
navigational searches user knows particular page home page particular organization schedule conference exists search engine navigate 
cases user provides search engine combination words expects find documents 
user search engine navigation tool navigate particular intended document 
focus class searches 
research searches user researching information particular object 
case particular page contain information looking 
user provides search engine phrase intended denote object researched 
class searches interested 
distinguishing characteristic research searches enables identify search term denotes object researched 
aid lexicon identify queries 
example search query track pm panel denote concept 
user just trying find page containing words 
hand search queries eric miller dublin ohio denote person place 
user doing research search person place denoted query 
semantic search attempts improve results research searches ways 
augment list documents returned traditional ir search relevant data pulled semantic web 
semantic web results independent augment results obtained traditional ir techniques 
example search yo yo ma get augmented current concert schedule music albums image exploit understanding denotation search term help better filter sort list documents retrieved 
long term goal develop general framework utilizing background knowledge improve search 
focus problem augmenting search results data semantic web 
built semantic search systems described 
abs system aimed augmenting searches search term denotes resource classes people popular people musicians actors authors places places countries states cities tourist spots products products consumer electronics automobiles tap knowledge base contains instances classes lexicon identify searches 
instance tap kb specifies class es concept instance english phrases typically refer concept 
terms cover searches take place average day odp website 
semantic web contain information written website wrappers number sites amazon com cdnow people magazine ebay aol shopping 
wrappers sites provides getdata interface site 
number data sources distributed nature data sources abs extensive registry caching mechanisms provided tap 
data source yield semantic web millions triples 
semantic search system aimed providing semantic search single website 
working created system augmenting searches website data semantic web 
limited semantic web acts lexicon identifying research searches source data augmenting searches 
semantic web built data sources 
people includes staff authors various documents 
data sources include staff members contact title responsibilities 
activities activity related people 
working groups committees related activity staff documents includes recommendations working drafts notes related working groups activities produced 
news semantic search incorporates data number rss news feeds various events happening 
early analysis service running indicate local knowledge base covers common search queries encountered website 
search query need determine intended denotation query 
need determine relevant data needs pulled semantic web 
look steps 
choosing denotation step map search term nodes semantic web 
done tap search interface 
term semantic web may search term subset search term rdfs label properties indexed search interface 
example abs search query paris map city paris france city paris texas music group paris 
case pick preferred denotation 
choice number different factors including popularity term measured frequency occurrence text corpus availability data semantic web 
paris france preferred denotation paris compared paris texas music group paris user profile may guide selection denotation 
phrase star trek fan denote star trek character particle 
search context help select denotation 
user searching information musicians query pink may denote musician color 
denotations preferred offered user system part search user interface user select intended 
search term denote known semantic web able contribute search results 
determining show search term denotation task determine data semantic web incorporate part search results order 
traditional search deciding show order central problems semantic search 
problem visualized terms semantic web graph follows 
node selected denotation search term provides starting point 
refer node anchor node 
choose subgraph node want show 
case search term denoting combination terms anchor nodes choose subgraph 
having chosen subgraph decide order serialize subgraph results user 
start simple syntactic approach widely applicable limitations 
introduce various modifications enhancements arrive approach provides adequate results 
simple approach selecting subgraph purely structure graph treating property types equally relevant walk graph breadth order starting anchor node collecting triples predefined limit 
basic approach improved incorporating different kinds heuristics walk done produce balanced subgraph 
heuristics include include triples source arc label preset computed average branching factor graph anchor node 
text search results augmented data semantic web 
left search eric miller web site showing page data augmentation 
right data augmentation search yo yo ma include triples source preset computed graph anchor node 
function distance node anchor node 
heuristic results inclusion information nodes closer anchor node 
graph collection procedure modified case pairs nodes denoted search term 
case addition collecting triples vicinity nodes locate paths connecting nodes include triples involved paths 
intuition approach proximity graph reflects mutual relevance nodes 
approach advantage requiring hand coding disadvantage sensitive representational choices source semantic web 
approach property able incorporate new pieces information anchor node neighbors appear semantic web changing semantic search engine 
property feature bug 
enables semantic search provide richer results semantic web grows system susceptible spam irrelevant information 
problem approach ignore search context 
example search eric miller website different data semantic web compared search miller family web site 
way getting effect approach 
different approach manually specify class object interested set properties gathered 
breadth walk graph collecting values properties till gathered certain number triples 
example specify instances class call instance collect triples values target source property title 
example anchor node corresponds eric miller give set triples new set nodes nodes corresponding semantic web activity rdf primer targets sources triples properties 
nodes type node collect new set triples 
process continues till run new triples collected triples 
approach advantage specifying certain properties provides kind filter producing dependable results 
easily customizable able factor search context determining properties retrieved 
requires set able incorporate new kinds information appears semantic web 
hybrid approach benefits approaches follows 
apply second approach extent specifying properties available 
data collected general graph walk approach looking property types examined pass 
triples collected clustered ordered source proximity anchor node arc label 
user interface triples appropriately formatted added search results 
show results search augmentations search eric miller semantic search yo yo ma abs 

identified examined number important problems need solved vision semantic web reality 
solutions proposed problems incorporated tap system served platform semantic search applications semantic web 
centers generalizing semantic negotiation semantic search 
semantic web develops ability bootstrap shared vocabulary shared vocabulary important 
semantic negotiation mechanism doing 
assumptions object name negotiated exists systems second site complete values properties involved shared discriminant descriptions 
strong assumptions 
aims create general framework 
important direction semantic search utilize understanding search term improve list documents returned search results 

john tom eric miller dan brickley feedback ideas developed 
arvind kate joly implementation semantic search system 
described done part people possible 
anonymous reviewers useful constructive feedback 

apache server www apache org 
rdf site summary 
www purl org rss 
semantic web www org sw 
bayardo jr brice cichocki fowler helal kashyap martin nodine rashid rusinkiewicz shea unruh woelk 
infosleuth agent semantic integration information open dynamic environments 
proceedings acm sigmod international conference management data volume pages new york 
acm press 
berners lee hendler lassila 
semantic web 
scientific american may 
bobrow winograd 
overview knowledge representation language 
cognitive science 
borgida brachman mcguinness resnick 
classic structural data model objects 
pages 
borgida lenzerini nardi nebel 
international workshop description logics 
box layman mendelsohn nielsen thatte 
simple object protocol 
www org tr soap may 
brachman schmolze 
overview kl knowledge representation system 
mylopoulos brodie editors readings artificial databases 

bray paoli sperberg mcqueen 
extensible markup language xml 
world wide web journal 
brickley guha 
rdf schema 
www org tr rdf schema 
chawathe garcia molina hammer ireland papakonstantinou ullman widom 
tsimmis project integration heterogeneous information sources 
th meeting information processing society japan pages tokyo japan 
fikes hayes horrocks 
daml query language 
www daml org 
genesereth keller duschka 
infomaster information integration system 
proceedings acm sigmod conference pages 
hanna pasula 
identity citation matching 
proceedings neural information processing systems december 
hayes 
logic frames 
editor frame conceptions text understanding 

heflin hendler 
searching web shoe 
aaai workshop ai web search 
horrocks van harmelen patel schneider 
darpa agent markup language www daml org 
karvounarakis alexaki christophides plexousakis scholl 
rql declarative query language rdf 
www pages 
kirk levy sagiv srivastava 
information manifold 
knoblock levy editors information gathering heterogeneous distributed environments stanford university stanford california 
lassila swick 
resource description framework rdf model syntax specification 
www org tr rec rdf syntax 
macgregor burstein 
description classifier enhance knowledge representation 
ieee expert 
mcbride 
jena implementing rdf model syntax specification 
hpl hp com people papers 
hewlett packard laboratories 
mcguinness van harmelen 
web ontology language www org sw 
mchugh abiteboul goldman quass widom :10.1.1.41.3062
lore database management system semistructured data 
sigmod record acm special interest group management data 
miller seaborne 
implementations simple rdf query language 
international semantic web conference pages 
miller hernandez haas 
yan ho fagin popa 
clio project managing heterogeneity 
march 
minsky 
framework representing knowledge 
technical report massachusetts institute technology artificial intelligence laboratory june 
noy musen 
fixed point algorithm comparing ontology versions 
proceedings aaai iaai 
pepper moore 
topic maps 
www org 
guha mccool 
tap knowledge base 
tap stanford edu 

open directory project 
www dmoz org 
william adjie winoto elliot schwartz 
design implementation intentional naming system 
woods 
link foundations semantic networks 
bobrow collins editors representation understanding studies cognitive science 
academic press new york 
yahoo www yahoo com 

appendix soap messages associated examples get data 
example getdata yo yo ma birthplace paris request soap env envelope soap env schemas org soap encoding xmlns tap tap stanford edu data soap env body getdata rdf resource rdf tap stanford edu data yo yo tap birthplace getdata soap env body soap env envelope response soap env envelope soap env schemas org soap encoding xmlns tap stanford edu xmlns tap tap stanford edu data soap env body data tap musician rdf id tap stanford edu data yo yo tap birthplace tap city rdf id tap stanford edu data france rdfs label xml lang en paris rdfs label tap city tap birthplace tap musician data soap env body soap env envelope example getdata paris temperature request soap env envelope soap env schemas org soap encoding xmlns tap tap stanford edu data soap env body getdata tap city rdf tap stanford edu data france tap temperature getdata soap env body soap env envelope response soap env envelope soap env schemas org soap encoding xmlns tap tap stanford edu data soap env body data tap city rdf tap stanford edu data france tap temperature tap temperature tap city data soap env body soap env envelope example getdata paris locatedin france soap env envelope soap env schemas org soap encoding xmlns tap tap stanford edu data soap env body getdata tap city rdf resource tap stanford edu data france tap locatedin getdata soap env body soap env envelope response soap env envelope soap env schemas org soap encoding xmlns tap tap stanford edu data soap env body data tap city rdf id tap stanford edu data france tap locatedin tap country rdf id tap stanford edu data tap french republic tap tap fr tap rdfs label xml lang en france rdfs label tap adjective french tap adjective tap country tap locatedin tap city data soap env body soap env envelope 
