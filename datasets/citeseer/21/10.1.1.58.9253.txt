survey context aware systems matthias dustdar student tuwien ac dustdar tuwien ac tuv november technical university vienna information systems institute distributed systems group context aware systems offer entirely new opportunities application developers users gathering context data adapting systems behavior accordingly 
especially combination mobile devices mechanisms great value claim increase usability tremendously 
layered architectural framework context aware systems 
suggested framework analysis introduce various existing context aware systems focusing contextaware middleware frameworks ease development contextaware applications 
discuss various approaches analyze important aspects context aware computing basis systems 
keywords context awareness layer architecture context framework context middleware distributed systems group technical university vienna 
vienna austria phone fax url www tuwien ac survey context aware systems matthias dustdar distributed systems group institute information systems vienna university technology student tuwien ac dustdar tuwien ac 
context aware systems offer entirely new opportunities application developers users gathering context data adapting systems behavior accordingly 
especially combination mobile devices mechanisms great value claim increase usability tremendously 
layered architectural framework context aware systems 
suggested framework analysis introduce various existing context aware systems focusing context aware middleware frameworks ease development context aware applications 
discuss various approaches analyze important aspects context aware computing basis systems 
keywords context awareness layer architecture context framework context middleware appearance penetration mobile devices notebooks pdas smart phones pervasive ubiquitous systems increasingly popular days 
term pervasive introduced mark weiser refers seamless integration devices users everyday life 
appliances vanish background user tasks central focus computing devices technical issues 
part wide range pervasive computing called context aware sentient systems 
context aware systems able adapt operations current context explicit user intervention aim increasing usability effectiveness environmental context account 
especially mobile devices desirable programs services react specifically current location time environment attributes adapt behavior changing circumstances context data may change rapidly 
needed context information may retrieved variety ways applying sensors network information device status browsing user profiles sources 
history context aware systems started want hopper introduced active badge location system considered context aware applications 
infrared technology system able determine user current location forward phone calls telephone close user 
middle couple location aware tour guides emerged provided information user current location 
location attribute context far attempts context information grew years examples show 
challenging task define word context researchers tried find definition context includes 
literature term context aware appeared authors describe context location identities nearby people objects changes objects 
enumerations context examples context aware system history 
ryan pascoe morse referred context user location environment identity time 
dey enumerates context user emotional state focus attention location orientation date time objects people user environment 
common way defining context synonyms 
hull bedford roberts describe context aspects current situation 
definitions wide brown defines context elements user environment computer knows 
best topical definitions dey abowd 
authors refer context information characterize situation entities person place object considered relevant interaction user application including user application 
popular way classify context instances distinction different context dimensions 
dimensions called external internal refers physical logical context 
external physical dimension means context measured hardware sensors location light sound movement touch temperature air pressure internal logical dimension specified user captured monitoring user interaction user goals tasks context business processes user emotional state context aware systems external context factors provide useful data location information furthermore external attributes easy sense due shelf sensing technologies 
virtually systems apply physical context information 
examples logical data watson project intellizap project support user providing relevant information due information read opened web pages documents dealing context entities distinguished places rooms buildings people individuals groups things physical objects computer components :10.1.1.36.1396:10.1.1.9.5130
entities may described various attributes summarized main categories identity entity unique identifier location entity position location proximity status activity meaning intrinsic properties entity temperature lightning room processes running currently device time timestamps accurately define situation ordering events 
reminder structured follows 
section introduces current design principles context aware systems describing requirements architecture context model 
section comparison existent context aware systems explain approaches varieties similarities 
section draws concluding remarks 
design principles architecture context aware systems implemented ways 
approach depends special requirements conditions location sensors local remote amount possible users user available resources devices high pcs small mobile devices facility extension system 
considerations different approaches contextaware system architectures distinguished direct sensor access approach devices sensors locally built 
client software gathers desired information directly sensors additional layer gaining processing sensor data 
drivers sensors hardwired application tight coupled method usable rare cases complicates extensibility 
suited distributed systems due direct access nature component capable managing multiple concurrent sensor accesses 
middleware modern software design uses methods encapsulation separate business logic graphical user interfaces 
middleware approach introduces layered architecture context aware systems intention hiding low level sensing details 
compared direct sensor access technique eases extensibility client code modified anymore simplifies reusability hardware dependent sensing code due strict encapsulation 
context server logical step permit multiple clients access remote data sources 
distributed approach extends middleware architecture introducing access managing remote component 
gathering sensor data moved called context server facilitate concurrent multiple access 
reuse sensors usage context server advantage relieving clients resource intensive operations 
probably majority devices context aware systems mobile gadgets limitations computation power disk space important aspect 
sadly free lunch return consider appropriate protocols network performance quality service parameters designing context aware system client server architecture 
similar manner winograd describes different context management models coordinating multiple processes components widgets derived gui elements widget software component provides public interface hardware sensor :10.1.1.9.5130
hide lowlevel details sensing ease application development due reusability 
encapsulation widgets possible exchange widgets provide kind context data exchange radio frequency widget camera widget collect location data 
widgets usually controlled kind widget manager 
tight coupled widget approach increases efficiency robust component failures 
networked services flexible approach argued resembles context server architecture 
global widget manager discovery techniques find networked services 
service approach efficient widget architecture due complex network components provides robustness 
blackboard model contrast process centric view widget service oriented model blackboard model represents data centric view 
asymmetric approach processes post messages shared media called blackboard subscribe notified specified event occurs 
advantages model simplicity adding new context sources easy configuration 
unfavorable need centralized server host blackboard lacks communication efficiency hops communication needed 
focus middleware context server systems due usability distributed systems 
layered context aware systems frameworks evolved years 
differ functional range location naming layers optional agents adaptations modifications common architecture modern context aware applications identifiable analyzing design 
mentioned separation detecting context necessary improve extensibility reusability systems 
architecture augments layers detecting context adding interpreting reasoning functionality :10.1.1.9.5130
application storage management preprocessing raw data retrieval sensors fig 

layer architecture context aware systems layer consists sensors 
notable word sensor refers sensing hardware data source may provide usable context information 
concerning way data captured sensors classified groups 
physical sensors frequently type sensors physical sensors 
hardware sensors available nowadays capable capturing physical data 
table shows examples physical sensors type context available sensors light color sensors ir uv sensors visual context various cameras audio microphones motion acceleration mercury switches angular sensors accelerometers motion detectors magnetic fields location outdoor global positioning system gps global system mobile communications gsm indoor active badge system touch touch sensors implemented mobile devices temperature physical attributes measure skin resistance blood pressure table 
list different physical sensor types virtual sensors virtual sensors source context data software 
possible determine employee location tracking systems physical sensors virtual sensor browsing electronic calendar system emails location information 
context attributes sensed virtual sensors include user activity checking keyboard input 
logical sensors sensors couple information sources combine physical virtual sensors additional information databases solve higher task 
analyzing logins desktop pcs database mapping fixed devices location information logical sensor constructed detect employee current position 
second layer responsible retrieval raw context data 
appropriate drivers physical sensors apis virtual logical sensors 
query functionality implemented reusable software components low level details hardware access transparent providing methods interfaces components responsible equal types context components exchangeable 
possible replace rfid system gps system major modifications 
layer implemented context aware system may offer useful information raw data coarse grained preprocessing layer responsible reasoning interpreting 
sensors queried underlying layer return technical data appropriate application designers layer raises results layer higher abstraction level 
transformations include extraction quantization operations 
exact gps position person value application name room person needed 
context aware systems consisting different context data sources single context atoms combined high level information layer 
process called aggregation compositing 
single sensor value important application combined information precious 
vein system able determine client situated indoor outdoor analyzing various physical data temperature light person currently attending meeting capturing noise level location analysis correctly lot statistical methods involved kind training phase required 
obviously abstraction functionality implemented directly application 
due couple reasons task encapsulated better moved context server 
encapsulation advances reusability eases development client applications 
making aggregators remote accessible network performance increases clients send request gain high level data connecting various sensors limited client resources saved 
problem sensing conflicts occur data sources solved layer 
system notified person location coordinates mobile phone camera spotting person difficult decide information 
conflict approached additional data time stamps resolution information 
fourth layer organizes gathered data offers public interface client 
access clients may happen different ways synchronous asynchronous 
synchronous manner client polling server changes remote method calls sends message requesting kind offered data pauses receives server answer 
asynchronous mode works subscriptions program start client subscribes specific events interested 
events occurs client simply notified client method directly involved callback 
majority cases asynchronous approach suitable due rapid changes underlying context 
polling technique resource intensive context data requested quite application prove changes kind context history 
client realized fifth layer application layer 
actual reaction different events context instances implemented 
information retrieval application specific context management reasoning encapsulated form agents communicate context server act additional layer preprocessing application layer 
example context logic client side display mobile devices light sensor detects bad illumination text may displayed higher color contrast 
context models context model needed define store context machine form 
develop flexible efficient context ontologies cover wide range possible contexts challenging task 
important goals designing context ontology include simplicity expressions relations simple possible simplify applications developers 
flexibility extensibility ontology support simple addition new context elements relations 
genericity ontology limited special kind context atoms support different types context 
expressiveness ontology allow describe context states possible arbitrary detail 
tools available define declarative representations publish share ontologies developed world wide web consortium resource description language rdf web ontology language owl :10.1.1.14.9187
single context atom described couple attributes 
obvious context type context type refers category context temperature time speed type information may parameter context query subscription temperature 
important meaningful type names system grows names unique anymore 
example type position may belong mobile device user 
solution create structured type names cascaded names shown table 
context value context value means raw data gathered sensor 
unit depends context type applied sensor degree celsius miles hour cases context type context value information build working context aware system 
additional attributes useful include description literal description containing details context atom 
attribute especially helpful application developers new sensors dynamically added system 
time stamp attribute contains date time value describing context sensed 
needed create context history deal sensing conflicts 
source field containing information information gathered 
case hardware sensor hold id sensor allow application prefer data sensor 
confidence confidence attribute describes uncertainty context type 
data source delivers accurate information 
location data suffers inaccuracy dependent tracking tool 
part flexible context model extendable context vocabulary deal descriptions technical data 
simplifies description various context atoms context instances 
verbal descriptions subjective impressions implemented fuzzy sets 
context refers attribute 
table shows small part example vocabulary 
notice contexts available time 
contrast temperature light source measurable 
context type context environment temperature cold environment temperature normal environment temperature hot environment light source hz environment light source hz environment light source device activity placement device activity placement table 
example context vocabulary vocabulary instances context atoms created table 
context type context value context confidence source timestamp environment temperature normal sensor device activity placement sensor table 
example context atoms existent systems frameworks location aware systems context aware systems dealing location information widespread demand grows due increasing spread mobile devices 
location user whereabouts meant term refers location devices services 
famous examples location aware systems various tourist guide projects information dependent current location displayed examples 
couple different location aware infrastructures available collect position data gps satellites mobile phone towers badge proximity detectors cameras magnetic card readers barcode readers sensors provide position proximity information appropriate sensor depends differ price accuracy need clear line sight signals may travel walls detailed example introduce indoor location sensing system harter location aware system ultrasonic technique 
entity person equipment detectable small sending unit called bat attached 
bats globally unique identifiers contain ultrasonic transducers 
monitor signals sent bats receivers installed rooms ceilings connected wired network 
third needed hardware type base station 
periodically sends radio messages specific bat ids resets receivers 
corresponding bat reacts emitting ultrasonic impulse caught receivers 
recording time arrival signals distance bat receiver calculated 
bat exact position determined multilateration extension trilateration 
challenge authors confronted due ultrasonic technique incorrect measurement unwanted reflections signals 
problem solved statistical outlier rejection algorithm improve accuracy calculated positions 
context aware systems systems named prior chapter aspect context location information 
different types context atoms noise light location allows combination high level context objects 
elements necessary build adaptive useful user friendly systems 
example kind context aware infrastructures serves system mu oz extends instant messaging paradigm adding context awareness support information management hospital setting 
users case physicians nurses equipped mobile devices write messages sent specified set circumstances satisfied 
example user formulate message delivered doctor enters room number 
contextual elements system aware include location time roles device state 
context functionality moved agents include modules layers 
perception module gathers raw context information data sources sensors users agents server 
reasoning module governs agent actions action module triggers user specified event 
messages agents xml encoded 
context aware frameworks context aware systems capable dealing special types context wellsuited specific conditions hospital scenario 
systems optimized situations flexible extensible 
really simplify developing context aware applications framework needed 
generic infrastructure provides client access retrieve context data permits simple registration new distributed heterogeneous data sources 
section different context aware frameworks introduced compared various design decisions 
architecture common design approach distributed context aware frameworks classical hierarchical infrastructure centralized components layered architecture section 
approach useful overcome memory processor constraints small mobile devices provides single point failure lacks robustness 
architecture context managing framework depicted 
main functional entities comprise context framework context manager resource servers context recognition services application 
resource servers application context manager context recognition services fig 

architecture context managing framework resource servers context recognition services distributed components called context manager represents centralized server managing blackboard stores context data serves information clients applications 
socam service oriented context aware middleware project introduced gu architecture building rapid prototyping context aware mobile services 
uses central server called context interpreter gains context data distributed context providers offers processed form clients 
context aware mobile services located top architecture different levels context adapt behavior current context 
extensible centralized middleware approach designed contextaware mobile applications project called cass context awareness sub structure 
shows system composition 
hand held computer fig 

architecture cass system cass middleware interpreter database sensor node sensor sensor middleware contains interpreter rule engine 
listens updates sensors located distributed computers called sensor nodes 
gathered information stored database 
responsible retrieving stored context 
classes may services interpreter 
component communications capabilities allows mobile computer listen notification context change events 
sensor classes built communications capabilities 
mobile clients connect server wireless networks 
reduce impact intermittent connections local caching client side supported 
cobra context broker architecture agent architecture supporting context aware computing called intelligent spaces 
intelligent spaces physical spaces living rooms vehicles corporate offices meeting rooms populated intelligent systems provide pervasive computing services users 
central cobra presence intelligent context broker maintains manages shared contextual model behalf community agents 
agents applications hosted mobile devices user carries wears cell phones pdas headphones services provided devices room projector service light controller room temperature controller web services provide web presence people places things physical world services keeping track people objects whereabouts 
context broker consists functional main components context knowledge base context inference engine context acquisition module privacy management module 
avoid bottle neck problem cobra offers possibility creating broker federations 
context toolkit context aware framework takes step peer peer architecture needs centralized discoverer distributed sensor units called widgets interpreters aggregators registered order client applications :10.1.1.32.1627:10.1.1.9.5130
toolkit object oriented api provides superclass called provides generic communications abilities ease creation components 
framework layered architecture built hydrogen project 
context acquisition approach specializing mobile devices 
majority existent distributed content aware systems working centralized component essential hydrogen system tries avoid dependency 
distinguishes remote local context remote context information device knows local context knowledge device aware 
devices physical proximity able exchange contexts peer peer manner wlan bluetooth exchange context information client devices called context sharing 
shows management device context consists local context set remote contexts gathered devices 
local remote context context objects 
superclass extended different context types approach allows simple addition new context type specializing 
context type implement methods convert data xml stream 
context 
fig 

hydrogen object oriented approach manage local remote contexts architecture consists layers located device 
adaptor layer responsible retrieving raw context data querying sensors 
layer permits sensor concurrent different applications 
second layer management layer adaptor layer gain sensor data responsible providing retrieving contexts 
called context server offers stored information synchronous asynchronous methods client applications 
top architecture application layer appliance code implemented react specific context changes reported context manager 
due platform language independency inter layer communication xml protocol 
application user adapter location adapter application time adapter fig 

architecture hydrogen project network adapter application 
adapter application layer management layer adaptor layer cortex system example context aware middleware approach 
architecture sentient object model designed development context aware applications ad hoc mobile environment 
model special suitability mobile applications depends steam location aware event middleware service designed specifically ad hoc wireless networking environments 
sensor sensor consumer fig 

sentient object model sensory capture context hierarchy sentient object event inference engine producer actuator actuator sentient object encapsulated entity consisting main parts sensory capture context hierarchy inference engine 
interfaces sentient objects communicates sensors produce software events actuators consume software events 
shows sentient objects producer consumer sentient object 
sensors actuators programmed steam 
building sentient objects graphical development tool available allows developers specify relevant sensors actuators define fusion networks specify context hierarchies production rules need write code 
gaia project middleware infrastructure extends typical operating system concepts include context awareness 
aims supporting development execution portable applications active spaces 
gaia exports services query utilize existing resources access current context provides framework develop user centric resource aware multi device contextsensitive mobile applications 
current system consists gaia kernel application framework 
space repository service application framework event manager service fig 

architecture gaia system active space applications context file system presence service component management core context service gaia kernel focus gaia parts concerning context awareness event manager context service context file system 
event manager service responsible event distribution active space implements decoupled communication model suppliers consumers channels 
channel suppliers provide information channel consumers receive information 
reliability increased suppliers exchangeable 
help context service applications may query register particular context information higher level context objects 
context file system personal storage automatically available users location 
constructs virtual directory hierarchy represent context directories path components represent context types values 
example determine files context location rm situation meeting associated may enter location rm situation meeting directory 
resource discovery sensors distributed network may fail new ones may added discovery mechanism search find appropriate sensors runtime important 
purposes context toolkit offers mentioned discoverer 
discoverer works registry component interpreters aggregators widgets notify presence contact possibilities 
registration components ensure operating 
component respond specified number consecutive pings discoverer determines component unavailable removes registry list 
customers may find appropriate components querying discoverer white page lookup search component name yellow page lookup search specific attributes 
case lookup successful discoverer returns handle contact context component 
scam offers discovery mechanism called service locating service 
gaia different context providers stored registry component 
pure peer topeer context aware system hydrogen uses local built sensors connect distributed sensors discovery mechanism involved 
sensing context toolkit authors new approach handle different data sources 
derived widgets gui development introduced called context widgets separate applications context acquisition concerns 
widgets complexity sensing hidden gained context information accurate position person value application notified person enters room widgets encapsulated software components reusable 
widget owns attributes queried applications widget implemented authors offers attributes location time presence detected identity user detected 
polling mechanism asynchronous way data retrieval possible application subscribes widget notified widget context changes 
provides callbacks location identity timestamp location identity timestamp triggered person arrives leaves room 
separation acquisition context permits simple exchange widgets identity may sensed various ways active badges video recognition manner building reusable sensor units action sensing transparent customer centralized server distributed client component widely accepted distributed context aware systems cass applies sensor nodes socam uses context providers context managing framework refers resource servers cobra context acquisition components 
context model efficient model handling sharing storing context data essential working context aware system 
context toolkit handles context simple attribute value tuples encoded xml transmission 
described hydrogen uses object oriented context model approach superclass called offers methods convert data streams xml representations context objects vice versa 
advanced ways dealing context data ontologies socam cobra context managing framework 
socam authors divide pervasive computing domain sub domains home domain office domain define individual low level ontologies sub domain reduce complexity context processing 
ontologies implemented owl provides special vocabulary representing sharing context knowledge 
cobra uses owl ontology approach cobra ont :10.1.1.14.9187
lines show short part cobra ont example loc rdf type rdf resource tme loc person name rdf datatype xsd string harry chen name person loc loc rdf resource japan tme rdf datatype xsd datetime tme loc ontology structure vocabulary applied context managing toolkit described rdf 
parts vocabulary example section see table 
gaia context represented special manner ary predicates way context subject object written daml oil 
context type refers type context predicate describing subject person place thing context concerned object value associated subject 
relates subject object comparison operator verb preposition 
example context instance context temperature room 
syntax representing context forming inference rules 
context processing raw context data sensed data source processed customers interested interpreted aggregated information raw fine grained data 
context aggregation means composing context atoms collect context data concerning specific entity build higher level context objects context interpretation refers transformation context data including special knowledge 
forms context data abstraction ease application designer tremendously 
context toolkit offers facilities context aggregation context interpretation context aggregators called context servers responsible composing context particular entity subscribing relevant widgets context interpreters provide possibility transforming context simple case returning corresponding email address passed name 
widgets aggregators interpreters inherit communication methods registered discoverer order 
context managing framework 
fig 
xx offers various processing facilities 
resource servers task complex gather raw context information connecting various data sources 
preprocessing feature abstraction limits fuzzy sets quantization 
data delivered posting context manager blackboard 
context recognition services context manager create higher level context object context atoms 
vein new recognition services easy add 
socam context reasoning engine reasons knowledge base tasks include inferring deduced contexts resolving context conflicts maintaining consistency context knowledge base 
different inference rules reasoning engine specified 
interpreter implemented help jena semantic web toolkit 
cobra architecture called inference engine processes context data 
engine contains context reasoning module responsible aggregating context information reasons context knowledge base deduces additional knowledge information acquired external sources 
cass deriving high level context inference engine knowledge base 
knowledge base contains rules queried inference engine find goals called forward chaining technique 
rules stored database separated interpreter recompiling restarting components necessary rules change 
table shows example rule 
rain brightness temperature goal wet dull cold indoor table 
rule database entry containing criteria display indoor outdoor activities cass tour guide application 
cortex context processing encapsulated sentient objects sensory capture unit performs sensor fusion manage uncertainty sensor data sensing conflicts build higher level context objects 
different contexts represented called context hierarchy specific actions undertaken context 
context active point time concept active context number rules evaluated limited increases efficiency inference process 
inference engine component clips language integrated production system 
responsible changing application behavior current context conditional rules 
gaia context processing hidden context service module allowing creation high level context objects performing order logic operations quantification implication conjunction disjunction negation context predicates 
example rule context number people room context application powerpoint running context social activity room presentation 
current context aware frameworks permit aggregation interpretation raw context data exceptions leave higher level abstractions applications layer hydrogen owl 
historical context data necessary access historical context data 
context histories may establish trends predict context values 
data sources constantly provide context data maintaining context history mainly memory concern centralized high resource storage component needed 
server architecture context data provided sensors stored server side anyway offer customers majority systems facility query historical context data 
context toolkit cobra cass socam cortex owl save sensed context data persistently database 
advantage database structured query language sql enables read manipulation operations high abstraction level 
cobra cass architecture persistent storage called context knowledge base additionally set apis offered assert delete modify query stored knowledge 
cass uses database save context data store domain knowledge inference rules needed creating high level context 
due limited memory resources peer peer network mobile devices hydrogen able offer persistent storage possibilities 
security privacy context may include sensitive information people location activity necessary possibility protecting privacy 
purposes context toolkit introduces concept context ownership 
users assigned sensed context data respective owners allowed control user access 
new components involved access control mediated widgets owner permissions modified authenticators 
class extension basic widget contains called widget developer specifying owns data sensed 
owner permission component receives permission queries determines deny access stored situations 
situations include authorized users time access modified contains original methods augmented identification mechanisms 
applications components provide identity usual request information 
authenticator responsible proofing identity public key infrastructure 
owl security concept role access control rbac 
number users generally smaller number roles amount managed associations entities privileges reduced 
authors remind consider privacy context sources context subjects 
cobra includes flexible policy language control context access called rei :10.1.1.12.7910
policy language modeled deontic concepts rights prohibitions obligations controls data access dynamically modifiable domain dependent policy rules 
example rei rule syntax shown states employees perform 
variable right employee variable umbc survey introduced layer architecture context aware systems various existent middleware server approaches ease development context aware applications 
direct comparison named systems frameworks shows similarity concerning layered structure 
especially remarkable strict division context data acquisition 
context sources reusable able serve multitude context clients 
authors refer context sources current mainly tested sources physical sensors 
virtual logical sensors capable providing useful context data incorporated ongoing research 
disregarded aspects security privacy issues 
facets belong important components context aware system protection sensitive context data guaranteed 
systems totally lack security modules provide basic security mechanisms systems offer advanced sufficient security options 
probably main problem approaches variety context encodings ways find access context sources 
system framework uses format describe context communications mechanisms 
believe standardized formats protocols important enhancements context aware systems development context services focus communication context sources users 
opinion web services appropriate solution achieve aim provide standardized methods service description access xml wsdl web services description language suited describe functionality communication context service uddi universal description discovery integration search register context services 
going continue investigation context aware systems placing emphasis service oriented architectures especially exploring advantageous opportunities provided web services 
bill schilit marvin theimer 
disseminating active map information mobile hosts 
ieee network 
nick ryan jason pascoe david morse 
enhanced reality fieldwork contextaware archaeological assistant 
van exxon 
eds computer applications archaeology anind dey 
context aware computing project 
proceedings aaai spring symposium intelligent environments 
menlo park ca aaai press 
richard hull philip james bedford roberts 
situated computing 
proceedings international symposium wearable computers peter brown 
stick document framework creating context aware applications 
electronic publishing palo alto anind dey gregory abowd 
better understanding context contextawareness 
proceedings workshop context awareness affiliated chi conference human factors computer systems new york ny acm press 
paul mark burnett 
activities context ubiquitous computing 
special issue ubiquitous computing computer communications vol richard moe 
condor application framework mobility context aware applications 
thomas hofer wieland schwinger mario pichler gerhard josef altmann 
context awareness mobile devices hydrogen approach 
jay budzik kristian hammond :10.1.1.36.1396
user interactions everyday applications context just time information access 
proceedings intelligent user interfaces 
acm press lev finkelstein yossi matias ehud rivlin wolfman ruppin 
placing search context concept revisited 
tenth international world wide web conference www hong kong anind dey gregory abowd :10.1.1.9.5130
conceptual framework toolkit supporting rapid prototyping context aware applications 
human computer interaction hci journal volume harry chen 
intelligent broker architecture context aware systems 
phd 
dissertation proposal 
heikki ville nen lindholm 
structuring context aware applications layer model example case 
indulska peter sutton 
location management pervasive systems 
conferences research information technology series vol 

albrecht schmidt van laerhoven 
build smart appliances 
ieee personal communications 
terry winograd 
architectures context 
human computer interaction vol nos 
anand ranganathan roy campbell 
infrastructure context awareness order logic 
personal ubiquitous computing rvi juha heikki ker nen 
managing context information mobile devices 
ieee pervasive computing 
rvi 
ontology mobile device sensor context awareness 
proc 
context lnai resource description framework rdf 
www org rdf owl web ontology language overview 
www org tr owl features gregory abowd christopher atkeson jason hong sue long rob kooper mike pinkerton 
cyberguide mobile context aware tour guide 
wireless networks 
andy harter andy hopper pete steggles paul webster 
anatomy context aware application 
wireless networks fredrik persson anna hanna nystr cacciatore markus 
social navigational aspects location information systems 
sics technical report 
priyantha chakraborty hari balakrishnan 
cricket location support system 
proceedings sixth acm annual international conference mobile computing networking boston ma 
gay 
graffiti evaluating real world context aware system 
interacting computers special issue universal usability 
clemens dustdar mehdi jazayeri gomez jose 
presence aware infrastructure web services rfid technologies miguel mu oz rodr guez jesus ana martinez garcia victor gonz lez 
context aware mobile communication hospitals 
daniel salber anind dey gregory abowd 
context toolkit aiding development context enabled applications 
proceedings acm chi pittsburgh pa gregory cahill 
framework developing mobile context aware applications 
proceedings nd ieee conference pervasive computing communications percom tao gu xiao hang wang hung keng da qing zhang 
middleware context aware mobile services 
ieee vehicular technology conference 
milan italy jena semantic web framework java 
jena sourceforge net 
harry chen tim finin anupam joshi 
owl pervasive computing broker 
workshop ontologies agent systems aamas harry chen tim finin anupam joshi 
ontology context aware pervasive computing environments 
special issue ontologies distributed systems knowledge engineering review 
manuel rom christopher hess renato anand roy campbell klara nahrstedt 
gaia middleware infrastructure enable active spaces 
ieee pervasive computing oct dec 
gaia homepage 
choices cs uiuc edu gaia 
mark weiser 
computer century 
scientific american 
roy want andy hopper veronica jonathan gibbons 
active badge location system 
acm transactions information systems sidney fels sumi nicolas simonet kobayashi kenji mase 
building context aware mobile assistant exhibition tours 
kyoto meeting social interaction 
nigel davies keith cheverst keith mitchell alon efrat 
developing context sensitive tour guide 
proceedings workshop human computer interaction mobile devices glasgow uk 
jason hong james landay 
infrastructure approach context aware computing 
human computer interaction vol 
patrick clarke 
cass middleware mobile context aware applications 
mobisys kagal tim finin anupam joshi :10.1.1.12.7910
policy language pervasive computing environment 
ieee th international workshop policies distributed systems networks 
maria ebling hunt hui lei 
issues context services pervasive computing 
workshop middleware mobile computing 
