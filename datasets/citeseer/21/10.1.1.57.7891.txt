framework physical design problem data synopses arnd christian konig gerhard weikum department computer science university saarland box saarbrucken germany koenig weikum cs uni sb de 
maintaining statistics multidimensional data distributions crucial predicting run time result size queries data analysis tasks acceptable accuracy 
applications predictions include traditional query optimization priority management resource scheduling data mining tasks querying heterogeneous web data sources diverse information quality 
plethora techniques proposed maintaining compact data synopsis single table ranging variants histograms methods wavelets transforms 
fundamental question reconcile synopses large information sources tables largely unexplored 
develops general framework reconciling synopses tables may come di erent information sources 
shows compute optimal combination synopses workload limited amount available memory 
exact solution large computational complexity cient heuristics limiting search space synopses combinations 
practicality approach accuracy proposed heuristics demonstrated experiments 
maintaining compact accurate statistics data distributions crucial importance number tasks traditional query optimization aims find execution plan query approximate query answering initial data exploration prediction run times result sizes complex data extraction data analysis tasks data mining platforms absolute predictions decent accuracy mandatory prioritization scheduling long running tasks including decision data analysis task expected provide insight spawned :10.1.1.137.3356
estimation information quality web information sources number reviews book commerce site basis planning global queries web mediator 
broad importance statistics management led plethora approximation techniques coined general term data synopses advanced forms histograms spline synopses sampling parametric curve fitting techniques way highly sophisticated methods kernel estimators wavelets transforms :10.1.1.100.9995:10.1.1.1.4433:10.1.1.130.3576:10.1.1.40.2576
techniques take local viewpoint optimizing approximation error single data distribution database table pre selected relevant attributes 
equally important problem combination synopses maintain application various datasets divide available memory received little attention putting burden selecting tuning appropriate synopses database administrator 
creates physical design problem data synopses di cult advanced settings predicting run times data analysis tasks information wealth web sources mediator 
state art inadequate number reasons accuracy approximation techniques depends memory size allotted synopses di erent data distributions compete available memory 
query optimization example small sized synopsis improve query plan selection impact memory 
proposed techniques limited types queries support 
techniques aim range query selectivity estimation unsuitable complex queries joins aggregation grouping additional synopses maintained geared approximations inferred base representations join synopses 
additional synopses compete memory space tuning memory allocation various synopses di cult 
choice optimal combination synopses dependent workload query mix run time result size predictions approximate answers need computed needs continuously adapted evolving workload properties 
physical design problem data synopses resembles index selection problem physical database design intensively studied couple fundamental di erences problems synopses problem di cult synopsis chooses attribute combination maintains statistics quality highly dependent memory allocated certain number buckets histogram synopsis proper subset attributes synopsis maintained advantageous di erent approximation accuracies di erent query types tree indexes index subset indexed attribute combination approximation superfluous 
related reconciliation di erent synopses dedicated synopses join queries uniform random sample foreign key join initially considered 
adapts ideas generalizes realization previous limited samples base synopses data warehouse environment central fact table connected foreign keys respective dimension tables 
extension approach incorporate workload information form access locality limited scenario 
reconciliation problem spline synopses discussed dynamic programming approach proposed minimize error set synopses 
ers solution regarding set synopses construct take account characteristics workload 
similar approach histograms proposed extending ering heuristics reduce overhead dynamic programming problem 
considers limited version problem set synopses query optimization selected di erence plan selection 
approach limited number ways 
importantly synopsis selection series decisions consideration ect variations size synopsis may 
consequence memory allotted selected synopses utilized sub optimal way 
furthermore consideration special dedicated join synopses constitute sub set attributes single relation 
approach select synopses ect plan selection orthogonal techniques combined example approach part candidate selection section 
contribution outline develops novel framework physical design problem data synopses 
framework covers entire class spj select project join queries 
note projections important predicting result sizes run times grouping aggregation completely ignored prior data synopses 
contrast approach goes binary decisions building vs building certain synopsis addresses fundamentally important issue memory synopsis 
especially important role statistics management goes choosing query execution plans synopses serve predict absolute run times result sizes turn highly relevant data mining web source mediation environments 
characterize exact solution optimal choice synopses workload 
account workload major step prior 
complexity reasons derive various problem specific heuristics approach reasonably cient practical 
remainder organized follows 
section define underlying optimization problem briefly review relevant parts earlier spline synopses introduce error model 
section describes determine optimal set synopses exactly assumptions earlier experiments hold nearly datasets lead compact formulation necessary computations 
section show combine various building blocks framework unified algorithm 
section contains empirical validation approach form experiments conducted tpc decision support benchmark 
section summarize give outlook research 
framework address optimization problem number datasets 
workload consisting spj select project join queries 
best combination synopses estimation error queries minimized 
assume query mapped exactly synopsis captures attributes relevant attributes filter conditions defined attributes appear query output 
limitation decompose complex query subqueries condition holds subquery 
fact spj query result decomposing complex sql query produce intermediate result group aggregation decision support query 
subqueries matter context wish estimate result result size 
commercial query engines virtually prior data synopses subqueries limited simple range selections 
approach improves state art consider entire spj queries building blocks data synopses 
select project query single dataset consider synopses capture selection filter attributes attributes projection list attributes considered irrelevant purpose result approximation 
join queries access attributes multiple datasets conceivable construct result approximation result size estimation multiple synopses 
hand known approach may lead unbounded approximation errors 
adopted approach special join synopses purpose 
join synopsis viewed regular synopsis derived virtual dataset materializes full result join 
materialized join view really stored merely serves construct statistical data corresponding join synopsis 
way maintain invariant single query mapped single synopsis turn may refer real virtual dataset cover entire class spj queries 
notation consider set relations 
set queries 

relation attributes att 

queries approximately answered set synopses 
corresponding data distributions 
approximation relation attributes att att 
context synopsis set attributes write set attributes captured synopsis denotes synopsis attributes analogously notation describe corresponding joint data distribution full data set 
size synopsis terms number values necessary store denoted size 
simple range selection projection query answered data distribution queried relation attributes involved range selection 
join query processed examining joint data distribution joining relations 
possible assign query relation minimum set min attributes att corresponding data distributions examined answer query 
example consider query select 
query answered examining joint data distribution relation attributes min 
size result interest example context query optimization su cient query attributes determine number tuples result assuming duplicate elimination performed case minimum set min 
consequently set min contains information synopses need built order answer query observing correlations relevant attributes 
concerning data distributions adopt notation 
domain dr single attribute set possible values value set vr dr vr 
set values underlying relation density attribute value range dr number unique values vr frequency number tuples value attribute data distribution set pairs 

similarly joint data distribution attributes 
set pairs 
vr vr number tuples value join synopses pointed context sampling usually feasible estimate arbitrary join queries approximations joining base relations acceptable accuracy 
sampling phenomenon discussed extensively hold data reduction techniques estimate join queries approximations base relations 
histograms due fact small errors incurred approximating density attribute values lead drastic changes number position attribute values find join partner 
problem worse multi dimensional histograms assumption value unique attribute values th dimension bucket dimensions value combinations values 
regarding join estimation wavelets consider example 
approximation keeps coe cients necessary represent drops single coe cient representation approximation join distributions exhibits large error approximation joins tuples value reason phenomenon fact thresholding scheme employed minimizes mean squared error relation minimizes error regarding range selection queries disregards accurate join estimation 
solution special synopses dedicated estimating data distribution resulting foreign key join proposed 
issue examined context spline synopses general equijoin queries proposed algorithm examines join result joining base relations adds special join synopses join results 
trade consider additional join synopses leave memory synopses base relations 
experiments showed virtually examined datasets addition small join synopses improved estimation quality greatly 
adopt approach join synopses queries involving joins add virtual relation representing joint data distribution top node corresponding join tree complete way join join tree leaves 
query involving join modeled introducing join synopsis relevant attributes joining relations consider query select introduce min 
spline synopses underlying statistics representation spline synopses described detail 
results apply adaptation data reduction techniques histograms 
spline synopses particular properties advantageous physical design context 
approximation distribution data distribution attribute value pair approximate representation 
possible spline synopses query estimation virtually query type including advanced operators top proximity search spatial joins 
spline synopses di erent approximation techniques approximating attribute value density attribute value frequencies 
means memory available single synopsis distribution divided approximations technique approximating attribute frequencies minimizing second technique approximates value density case dimensional distribution minimizing dimensional distributions space filling curve specifically sierpinski curve employed map attribute value value 
approximate values minimizing order resulting approximation query estimation mapped back query processing time 
key feature sierpinski mapping preserves proximity shown denoting norm euclidian distance data points minimizing reduce 
sense synopsis construction process characterized minimizing appropriately chosen values choose discussed 
density frequency resulting approximation stored buckets bucket storing values leftmost value start point gradient frequency approximation frequency approximation leftmost value number distinct values size interval adjacent approximate values density approximation 
approach capturing value frequency value density allows defined error metric tuples contained result arbitrary query see section easily possible techniques 
multi dimensional distributions histograms assumption combinations values bucket realized generally leads estimation number distinct attribute values estimation frequencies see 
wavelet approximation attribute value distribution density approximated indirectly position values frequency zero 
thresholding scheme aims minimize mean square error wavelet approximation generally result particularly accurate representation attribute value density cope projection queries grouping 
preserving correlation illustrate point correlated data distributions consider relation attributes order date ship date coded integer 
strongly correlated sense value ship date typically fixed number days larger order date 
data set tuples requiring values storage depicted values order date generated uniformly interval values ship date uniformly order date order date 
spline synopses mhist histogram show approximation data values storage space 
measure amount correlation attribute values attributes spearman rank order correlation coe cient defined follows 
rank value attribute th tuple rank value attribute th tuple case ties appropriate corresponding average rank 
linear correlation coe cient ranks defined 
linear correlation coe cient example distributions approximate distributions values spline synopses corresponding intuitive interpretation figures 
preserving type correlation crucial large number queries conditions specifying inclusion exclusion attribute values generally depend attribute value distribution 
example query checking delayed deliveries select ship date order date 
return tuples original data case spline synopses histogram approximation 
approximation techniques geared preserving correlation attribute value corresponding frequency disregard correlation attribute values 
fig 

original data fig 

spline synopsis fig 

mhist histogram error model goal minimize estimation error queries consider scenario queries depend single synopsis data distribution 

define error query characterizing query result result approximated 
define error queries respect data distribution error vk result define result sum errors query posed synopsis written error 
weights error function equation minimized spline synopses 
weights easily incorporated spline construction process minimizing query error case single distribution problem constructing optimal spline synopsis solved 
slight simplification ignores approximation errors regard boundary conditions query synopsis answering query attribute values may included approximate answer corresponding query result 
likewise attribute values may erroneously excluded 
scenario multiple synopses 
query answered depending min synopsis mapping function map att 
assign queried attribute combination exactly synopsis 
describe obtain mapping section 
note model assumes queries attribute combination mapped synopsis necessary store additional information mapping specific queries turn compete memory available synopses 
error set synopses 
defined error error map min 
error synopsis dependent memory size size synopsis accurately stated error min size size error map min constraint size equal memory size available synopses 
problem optimizing estimation error entirety queries workload seen problem selecting optimal set synopses choosing sizes 
synopsis selection memory allocation illustrate issues involved method consider workload containing queries queries type fraction entire workload proportional min containing queries min 
answered synopses single attribute synopsis joint data distribution compute optimal error available memory evaluate error min error combination error min size size error error error combination size size size keep track resulting synopses memory partitioning 
characterize problem computing optimal set synopses corresponding memory allocation step process computing error candidate synopses possible combinations queries may mapped maximum amount memory requires steps optimal partitioning see pair generates values error values size 
selecting optimal set synopses set candidates computing optimal memory partitioning weighted sum synopsis errors weighted number times synopsis queried minimal synopses included optimal solution 
weights change combinations synopses solution di erent di cult problem finding optimal combination synopses different relations solved dynamic programming 
see section problem synopsis selection memory partitioning closely related solved 
sections show solve problem single dataset sub solutions datasets combined solve problem section 
pruning search space note example considered combinations 
due simple property spline synopses normally holds histograms wavelet approximations observation pruning property answering queries set attributes synopsis set attributes yield accurate answers synopsis synopses identical size 
artificial data distributions constructed obey observation pruning property hold experiments real life datasets 
intuition fact including attributes synopsis number unique attribute value combinations corresponding data distribution increases respect synopsis selection problem similar index selection making harder capture attribute values frequencies acceptable accuracy 
case means answers queries posed better memory 
similarly improvement queries posed combination generally outperforms observation possible characterize set candidate synopses compact manner 
consider single relation sets attributes queried syn min 
set candidate synopses defined cand syn means set candidate synopses forms lattice attribute combinations queried syn cand 
intuition definition cand synopsis cand considered cient way answer subset queries synopsis synopses capable answering subset cient due pruning property 
conversely cand form cand cand syn att cand syn 
cand answers set queries ciently cand utilize second observation pruning search space 
observation merge property set queries querying combination attributes error answering queries synopsis memory smaller error synopses memory intuition property joining synopses estimation potentially overlapping regions improved additional memory invested estimation 
trivial consequence merge property holds combinations synopses contrast pruning property possible prove merge property holds see appendix proof 
properties typically apply approximation histograms wavelets results apply physical design problem techniques base synopses need di erent error measure match corresponding tuples invariant approximated techniques 
suggest error measure tracks di erence actual approximated data distribution computes matching mac distance 
computation causes additional overhead allows extend results virtually approximation merge pruning property provide approximation form data distribution defined section 
selecting synopses single relation describe set queries single relation compute optimal combination synopses sizes corresponding mapping queries queries answered error minimal 
shown optimal combination synopses opt consist synopses single attribute combinations syn optimal particular query synopses joint attribute combinations multiple members syn optimal single query cient combinations synopses amount memory capable answering queries 
want capture notion algorithmically giving method construct set synopses workload data combination 
introduce necessary notation opt combination synopses answering queries attribute combinations syn memory constructed 
opt error resulting opt consider problem computing optimal combination synopses opt opt forms opt size synopsis queries attribute combinations 
opt opt opt combination optimal synopses answering disjoint subsets 
merge property consider decompositions opt opt 
techniques generally optimize approximation attribute value frequencies holds regard corresponding frequency error combination optimal depends error resulting alternative case opt error min set queries answered size case opt min opt opt compute optimal set synopses computing minimal error cases choosing memory partitioning minimizes corresponding error 
note computing optimal combination synopses manner implicitly compute mapping dictates attribute combinations syn mapped synopses decomposition opt err syn form 
syn member exactly 
complex models possible queries attribute combination mapped di erent members mean additional information correct mapping single query derived run time stored creating contention memory actual data synopses 
definitions final set synopses kept memory opt syn syn corresponding error opt err syn necessary prove optimal solution obtained decompositions described theorem opt constructed manner optimal combination synopses answering queries attribute combinations pruning merge properties hold 
proof show opt construction implies optimal combination synopses answering queries attribute combinations memory proven induction opt sa partitioning involving multiple synopses possible merge property pruning property sa best way answer queries assume opt optimal try show optimality opt 
shown contradiction assumption exists solution opt 
size 
resulting error err opt queries smaller opt opt opt 
case opt opt sa size opt smaller error opt opt sa sa possible synopsis combination opt error sa opt err opt 
opt able answer queries holds 
follows pruning property opt results better accuracy opt contradicting previous assumption 
case opt merge property assume queries attribute combination mapped synopsis 
case replace opt opt synopses attribute merged resulting smaller error 
contradict assumption opt contradict opt 
opt written opt 

queries attribute combination mapped synopsis answer queries attribute combinations disjoint subsets follows induction hypothesis opt syn size results smaller error queries attribute combinations opt syn size results smaller error queries attribute combinations follows error caused opt contradicting assumption 
selecting synopses relations error relations total memory size written error min opt err syn constraint note equivalent initial definition equation 
expression solved dynamic programming operations 
keeping track memory partitioning 
determine optimal set synopses opt syn syn reducing computational overhead computing optimal set synopses query broken steps computing error candidate synopsis combination queries 
computing optimal set synopses relation possible values allocated memory 
solving equation determine memory dedicate relation synopses 
step low computational overhead steps expensive small instances syn 
means method scales rising number relations need ensure tractability computation opt syn syn relations di erent attribute combinations queried recall potential application domains include data mining tasks datasets may dozens attributes consider virtual relations join synopses 
address potential bottlenecks step single relation sections 
computation error values computing opt syn syn relation necessary compute error size ranging cand combinations queries answered model combinations queries corresponding disjoint attribute combinations 
computing error means constructing corresponding synopsis memory requires operations construction process computes error size additional cost need construct synopsis 
follows address potential bottleneck reducing number combinations considered reducing complexity computing error constructing corresponding synopsis 
reducing number combinations significantly reduce number combinations consideration assuming queries equally access multidimensional attribute value region synopsis 
mean minimizing weighted error equation weights uniformly set 
workload information obtain certain attribute combinations queried information query locality regard attribute values 
furthermore possible maintain large traces previously executed queries significant memory number queries synopsis tracked 
note simplification computing error values determining combination size synopses stored 
locality information collected computing final synopses 
assumption compute error corresponds set possible queries number di erent synopses compute cand discuss methods reducing cand section 
error size characterized error error approximating memory 
approach allows error values computed lazily underlying database system data mining mediation platform free resources stored corresponding datasets change significantly 
refer heuristic uniform locality 
reducing overhead synopsis construction overhead caused part algorithm reduced significantly initially optimal algorithm generating synopses faster accurate heuristics 
spline synopses computational overhead computing single synopsis reduced log leading dramatic decrease actual running times measurements see section 
important empirically observed feature loss accuracy relatively uniform candidate synopses resulting error values lead synopsis set close optimal set similar approach possible histograms approximate algorithm partitioning optimal histograms :10.1.1.40.2576
selected final synopses re computed optimal algorithm resulting running time significantly shorter generally cand 
refer heuristic greedy construction 
reducing cand modifications previous subsection overhead step construction near optimal synopses determined size set candidate synopses cand step construct cand synopses obtain resulting error values step cand crucial limit number di erent combinations attributes examined sub case construction opt syn 
consider merely small number promising attribute combinations synopses cand 
key finding promising attribute combinations able guess resulting error values reasonable accuracy having compute 
experiments multidimensional spline synopses indicator regarding size resulting approximation error typically error error size size 
intuitively utilizing rule means assuming data distributions equally di cult approximate resulting approximation error depends size data distribution 
considerations choose set promising synopses cand way 
initially synopsis syn add cand best way answer queries attribute combination 
remaining synopses cand compute val tx number queries 
include att synopses cand corresponding lowest values val 
refer heuristic small cand 
putting pieces solving physical design problem data synopses characterized step process collection workload information need acquire necessary information access behavior workload done automatically data manager processes queries 
details information depend heuristics employ solving physical design problem assuming data points table equally accessed small cand see section need collect access frequency attribute combination workload 
need store access frequencies attribute value combinations necessary tables important resource intensive exhibit significant locality access behavior 
enumeration possible synopsis combinations described section synopses selection problem solved relation independently resulting sub solutions combination obtained solving equation 
obtain sub solution relation compute possible synopsis combinations opt done traversing lattice attribute combinations cand order sizes data distributions node 
node compute synopsis combinations possible attribute combinations subsets corresponding nodes lattice potential mappings queries synopses 
minimization error values described section combinations synopses mappings corresponds opt err expression defined form minimization problem 
order determine best synopsis combination compute corresponding values opt err 
done constructing corresponding synopses evaluating error resulting data distributions 
minimum opt err expression corresponds optimal synopsis combination 
alternating enumeration minimization avoid solving similar minimization problems 
combining enumeration minimization steps furthermore possible avoid solving identical minimization problems 
time new sub combination synopses mapping created corresponding minimization problem solved immediately 
new combination created joining previously know combinations plus additional synopsis corresponding minimization problem solved solutions joining synopses steps 
construction final synopses optimal solution obtained sub solutions relation minimizing equation 
computational overhead techniques caused computation candidate synopses solving resulting minimization problems enumeration possible minimization problems 
detailed discussion running times including cost memory reconciliation tradeo connected greedy construction 
order assess cost enumerating minimization problems algorithm construct possible synopses set attributes possible subsets queried di erent types queries worst case number potential synopses 
running times worst case stress test shown table 
obviously space combinations grows exponentially size enumeration reasonably cient attributes covers range query relevant attributes tables including join views relational databases 
developed number attributes running time sec 
attributes running time sec 
sec 
sec 
sec 
sec 
table 
running times enumeration sun ultrasparc mhz heuristic algorithms alleviate potential bottlenecks arising approach 
detailed description extended version :10.1.1.57.7891
experiments validate approach demonstrate accuracy low overhead implemented techniques applied scenario tpc decision support benchmark 
compared synopses selection techniques introduced simpler heuristics 
aware approaches problem heuristics intended represent opponents 
represent assumptions commonly connection synopses selection commercial database systems 
examine approximation accuracy affected simpler approaches synopses selection memory allocation 
base experiment subset queries tpc chosen large synopses selection problem non trivial small facilitate understanding resulting physical design 
queries selected referring lineitem part orders customer tables non numerical values tpc database coded numbers 
example brand consists constant text string integers range :10.1.1.137.3356
store possible number combinations 
table shows query relevant attribute sets minimum sets min queries 
chose minimum sets result size query min set shipdate shipdate discount quantity extended price clerk discount return flag extended price shipdate discount container discount quantity brand table 
sets queries approximation scenario selected attributes necessary estimate number tuples query results queries aggregation operator estimate result size aggregation 
results multidimensional data distributions 
projections lineitem table referred subsets attributes overlap number di erent potentially suitable combinations synopses 
data distributions approximated join synopses lineitem orders lineitem part 
experiments scaled version tpc data scale factor sf sf kbytes memory available synopses 
compared physical design technique heuristic competitors generated option sets synopses selection memory allocation 
synopses selection single single dimensional synopsis allocated attribute appears minimum sets queries 
heuristics expected perform comparably sophisticated allocation schema included commercial database systems dimensional synopses histograms 
heuristics gives idea loss accuracy ignoring multi attribute correlation 
table multidimensional synopsis allocated table synopsis covers attributes table appear minimum sets 
heuristic results large single synopsis reflecting correlations attributes 
merge property accuracy may significantly synopses subsets attributes 
memory allocation uniform synopsis size 
assumption commercial database systems 
tuples size synopsis proportional size table refers measured number tuples reside table join result viewed table multiplied number attributes covered synopsis 
values size synopsis proportional size unique value combinations attributes synopsis built 
synopsis selection technique referred opt syn corresponding memory reconciliation opt size 
illustrate importance memory reconciliation approach combined uniform tuples values memory allocation optimal set synopses generated sizes synopses computed heuristics 
set synopses executed instances query di erent uniformly distributed inputs query parameters specified benchmark available synopses estimate result sizes 
measured average relative error result sizes relative error exact size estimated size exact size number instances queries 
queries occur frequency experiments 
regarding heuristics introduced section locality information computing optimal synopsis combinations final synopses complete set candidate synopses 
results experiment shown columns table 
selection memory original data skewed data query locality single uniform tuples values table uniform tuples values opt syn uniform opt syn values opt syn tuples opt syn opt size table 
error original tpc skewed locally accessed data set experiments technique employed synopses selection significant impact resulting approximation accuracy way memory allocated results negligible changes error 
skewed correlated data described earlier purposes approximation crucial preserve correlation contained data 
unfortunately original tpc data generated uniformly random distributions attribute resulting completely uncorrelated data benchmark data approximation techniques 
ran second set experiments schema skewed correlated data 
realistic kind data generated way skew attribute value frequencies 
generated attribute value frequencies frequency attribute values zipf distributed frequency th frequent value proportional control parameter degree skew 
experiment 
correlation attributes permuted generated data order obtain desired correlation 
creating data tpc specification performed randomly chosen permutations values selected attributes order create specific correlations pairs attributes 
correlation specified terms linear correlation coe cient 
pairs attributes created data linear correlation coe cient shipdate quantity brand container partkey brand 
results experiment shown fourth column table 
choice synopses selection technique important regards resulting approximation error opt syn technique developed reduced error factor compared single table heuristics respectively 
addition opt syn synopses selection memory reconciliation technique opt size resulted noticeable improvement 
realistic dataset combination opt syn opt size outperformed competitors significant margin 
query locality repeated experiments workload exhibited significant locality data exhibiting significant skew correlation 
experiment generated input parameters tpc queries zipf distribution executing queries type obtain weights see equation construct synopses 
subsequently ran queries di erent parameters generated probability distribution measured error 
results experiment shown fifth column table 
trends previous experiment observed synopses selection technique clearly outperforms simpler approaches estimation accuracy improving memory reconciliation 
motivated defined physical design problem data synopses 
proposed algorithmic approach solution discussed heuristics exceptions correlated tax shipdate correlated orderdate correlated orderdate correlated shipdate 
alleviate computational bottlenecks provided experimental evaluation 
experiments showed developed method achieves substantial gains simpler heuristics terms accuracy memory constraint 
showed aspects approach synopses selection tuning memory allocation important 
carried derivation implementation approach context spline synopsis approach orthogonal specific form synopses applies equally histograms techniques minor modifications 
working better theoretical foundation assumptions approach exist alternative partitioning techniques traditional histograms spline synopses result synopses obeying merge property unfortunately corresponding partitioning techniques proven 
include exploring principal component analysis dimensionality reduction technique exploit situations attributes highly correlated extreme form functionally dependent 
working better theoretical foundation pruning property assumption 
way critical practicality developed method wish extend framework characterize optimality conditions precise manner 
proof merge property claim set queries attribute combination error answering queries single synopsis union equal error synopses require amount memory union proof section showed error set queries corresponds error fitting problem posed equation 
show value equation smaller union proven statement 
done manner construct corresponding union terms bucket partitioning fitting attribute frequencies values 
show error equal union partitioning method constructing spline synopses traverses space possible partitionings union synopsis better error result running spline synopses construction necessary consider storage requirements spline synopses buckets frequency attribute value approximation store values storing leftmost attribute value bucket fitting parameters addition store bookkeeping information construct directory synopses relation approximated synopsis combination attributes approximated synopsis coded bit vector total number buckets number buckets frequency approximation highest attribute value stored synopsis relation pointer synopsis 
requires total values storage bookkeeping information 
synopsis requires number buckets storage 
keep bookkeeping information necessary require synopsis approximates values lowest highest value stored 
possible decide run time query approximated synopsis incoming queries may part workload synopses constructed 
need introduce notation define err respective error problem fitting frequencies synopsis define constraint error err low high high low define err err low high analogously regard fitting attribute values 
define start interval values approximated overlap decided synopses map parts queries querying possible map single query synopsis individually introducing additional information query part querying interval mapped synopsis lower error area intersection 
loss generality assume start start purposes approximation interval partitioned buckets define partitioning buckets tuple low 
low corresponding buckets low low 
low 
synopses buckets buckets defined analogously construct union buckets requiring amount memory incur bookkeeping overhead allows keep additional buckets 
regarding construction di erentiate scenarios case construct union union buckets overlap 
order fulfill requirement synopses approximating values interval start need add additional buckets frequency attributevalue approximation covering start 
aren queried doesn influence resulting error 
error union err err err err error error case construct frequency approximation union buckets 
di erentiate cases err err denote partition frequency approximation low 
low low 
low 
smallest index low exist construct partitioning frequency approximation union low 
low low 
low 
partitioning constructed low 
low 
cases corresponding frequency approximation union buckets 
corresponding error fitting err union err err err err err err err err 
err err case proof analogous defined largest index low start low 
low low 
low low low 
low 
case err union err err err start start err err err start start err err attribute value approximation union constructed similarly yielding synopses buckets error union err err err err error error separate cases err start err start err start err start case simply include buckets union error err err err start err start err err err start err start error error 
construct new partitioning frequency density approximation err union err err err union err err buckets 
frequency approximation union done way denote partition frequency approximation low 
low low 
low 
define number buckets low start define number buckets low construct low 
low low 
low low 
low 
results buckets 
resulting error approximation value frequencies union err start start err construction attribute value approximation similar 

acharya gibbons poosala ramaswamy 
join synopses approximate query answering 
proceedings acm sigmod conference pages 
acm press 

seeger 
comparison selectivity estimators range queries metric attributes 
proceedings acm sigmod conference pages 

fischetti maio 
exact approximate algorithms index selection problem physical database design 
tkde 

chakrabarti garofalakis rastogi shim 
approximate query processing wavelets 
proceedings th international conference large data bases cairo egypt pages 

chaudhuri 
overview query optimization relational systems 
proceedings acm pods conference pages 

chaudhuri motwani narasayya 
random sampling joins 
proceedings acm sigmod conference pages 

chaudhuri narasayya 
index merging 
proceedings th international conference data engineering march sydney pages 

chaudhuri narasayya 
automating statistics management query optimizers 
ieee conference data engineering pages 

chen 
adaptive selectivity estimation query feedback 
proceedings acm sigmod conference pages 

chang 
tool physical database design 

conference database expert systems applications pages london uk 

finkelstein 
physical database design relational databases 
tods 

ganti 
lee ramakrishnan 
self tuning samples approximate query answering 
vldb proceedings th international conference large data bases cairo egypt pages 

gibbons acharya bartal matias muthukrishnan poosala ramaswamy suel 
aqua system techniques approximate query answering 
technical report bell labs 

gibbons matias 
new sampling summary statistics improving approximate query answers 
proceedings acm sigmod conference 

gibbons matias 
synopsis data structures massive data sets 
symposium discrete algorithms 

gibbons matias poosala 
fast incremental maintenance approximate histograms 
proceedings rd international conference large databases 

haas 
selectivity cost estimation joins random sampling 
journal computer system sciences pages 

ioannidis poosala 
histogram approximation set valued query answers 
proceedings th international conference large data bases pages 

jagadish jin ooi 
tan 
global optimization histograms 
proceedings acm sigmod conference 
acm press 

jagadish koudas poosala sevcik suel 
optimal histograms quality guarantees 
proceedings th international conference large databases pages 

kabra dewitt 
cient mid query re optimization sub optimal query execution plans 
proceedings acm sigmod conference 

konig weikum 
combining histograms parametric curve fitting feedback driven query result size estimation 
th international conference large databases 

konig weikum 
auto tuned spline synopses database statistics management 
th int 
conference management data india 

konig weikum 
framework physical design problem data synopses extended version available www dbs cs uni sb de 


lee 
kim 
chung 
multi dimensional selectivity estimation compressed histogram information 
proceedings acm sigmod conference pages 

matias vitter wang 
wavelet histograms selectivity estimation 
proceedings acm sigmod conference pages 

naumann 
cooperative query answering density scores 
th international conference management data india pages 

naumann freytag 
quality driven integration heterogenous information systems 
proceedings th international conference large data bases september edinburgh scotland uk pages 

ioannidis 
selectivity estimation attribute value independence assumption 
proceedings acm sigmod conference athens greece 

poosala 
histogram estimation techniques database systems 
phd thesis university wisconsin madison 

press teukolsky vetterling flannery 
numerical cambridge university press 

shasha 
framework automating physical database design 
th international conference large data bases september barcelona catalonia spain pages 


closed curve filling multidimensional cube technical report 
ict technical university 

sun ling deng 
instant accurate size estimation method joins selections intensive environment 
proceedings acm sigmod conference pages 

vitter wang 
approximate computation multidimensional aggregates sparse data wavelets 
proceedings acm sigmod international conference management data june philadephia pennsylvania usa pages 
acm press 
