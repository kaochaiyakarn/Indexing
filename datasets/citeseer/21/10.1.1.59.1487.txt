simpler proof theory nominal logic james cheney nominal logic variant order logic provides support reasoning bound names syntax 
key feature nominal logic new quantifier quantifies fresh names names appearing values considered far 
previous attempts develop convenient rules reasoning new quantifier argue attempts completely satisfactory 
develop new sequent calculus nominal logic rules simpler previous attempts 
prove structural metatheoretic properties including cut elimination consistency conservativity respect pitts axiomatization nominal logic proofs considerably simpler system 
nominal logic variant order logic additional constructs dealing names binding name abstraction primitive notions bijective renaming swapping freshness :10.1.1.11.7844
introduced pitts order reasonably behaved fragment fraenkel mostowski set theory setting gabbay pitts earlier foundational formalizing names freshness binding swapping :10.1.1.62.9845
interesting features nominal logic presence novel form quantification quantification fresh names 
means intuitively fresh names holds 
intended semantics nominal logic interprets expressions values finitely supported nominal sets sets acted name swapping value depends finitely names 
inspiration quantifier fact presence infinitely names fresh name chosen finitely supported value equally fresh names indistinguishable 
result property holds fresh name holds fresh names case say holds 
formalizations nominal logic investigated 
pitts introduced nominal logic hilbert style axiomatic system 
gabbay proposed fresh logic intuitionistic gentzen style natural deduction system 
gabbay cheney sequent calculus version fresh logic :10.1.1.59.1487
sch pp stark developed dependent type theory names binding contains nominal logic special case 
formalizations ideal 
hilbert systems known deficiencies computer science applications 
rely complicated technical device called slices rules sch pp stark system powerful necessary applications nominal logic unresolved issues proof normalization decidability equality typechecking judgments 
report new simpler sequent calculus nominal logic developed course author dissertation research :10.1.1.59.1487
main novelty freshness context manage freshness information needed reasoning quantified formulas technically cumbersome slices 
prove basic proof theoretic results cut elimination establishing calculus proof theoretically sensible 
addition prove nl consistent equivalent pitts original axiomatization nominal logic 
report basis additional results including improved proof theoretic semantics nominal logic programming development sound complete embedding logic self dual freshness quantifier nominal logic 
swapping cs 
cs 
cs 
equivariance ce 
ce 
ce 
ce 
ce 
freshness cf 
cf 
cf cf quantifier 

cq 

abstraction ca 
ca 
background pitts axiomatization axioms classical nominal logic pitts nominal logic consists typed order logic equality number special types type constructors function relation symbols formalized collection axioms 
particular basic sort symbols nominal logic divided data types atom types shall preferentially call name types 
addition name type type exists type called abstraction 
possessing equality type nominal logic includes binary freshness relation symbol fresh name type type 
addition nominal logic includes special function symbols swap abs called swapping abstraction respectively 
risk confusion abbreviate formulas form fresh terms form swap abs respectively 
addition ordinary quantifiers nominal logic possesses third quantifier called fresh name quantifier quantified may constructed name type 
pitts hilbert style axiom system nominal logic shown 
axioms divided groups swapping axioms cs describe behavior swapping operation swapping name effect cs swapping involutive cs swapping exchanges names cs 
equivariance axioms ce prescribe equivariance property relations preserved function symbols commute swapping 
particular ce says swapping function symbol equivariant ce says freshness equivariant ce says function symbols equivariant ce says relation symbols equivariant 
ce says abstraction equivariant 
freshness axioms cf describe behavior freshness relation concert swapping 
cf says names fresh value exchanged affecting value 
cf says freshness coincides inequality names 
cf says distinct name types disjoint 
cf expresses freshness principle finite collection values name fresh values simultaneously may chosen 
quantifier axiom cq pitts original formalization introduced new inference rules forn defined axiom scheme asserts 
stead abstraction axioms ca define special properties abstraction function symbol 
specifically ca defines equality abstractions structural equality equality safe renaming bound names 
gabbay pitts argued natural generalization equivalence example lambda calculus shall repeat argument :10.1.1.62.9845
axiom ca states surjectivity property abstraction value abstraction type written name value 
gentzen systems reductionist point view hilbert systems known deficiencies proofs highly circuitous 
gentzen style natural deduction sequent systems provide intuitive approach formal reasoning logical connectives explained proof search operations 
gentzen systems especially useful computational applications automated deduction logic programming 
systems convenient relating logics translations 
gentzen style rules forn considered previous 
pitts proposed sequent natural deduction rules forn observation rules see nl symmetric self duality :10.1.1.11.7844
closed substitution complicates proofs cut elimination proof normalization properties 
gabbay introduced intuitionistic natural deduction calculus called fresh logic studied semantic issues including soundness completeness proving proof normalization 
gabbay cheney similar sequent calculus called :10.1.1.59.1487
complex rules gabbay introduced technical device called slices obtaining rules closed substitution technically slice formula decomposition formula fresh variables appear slices deal see 
slice rules shown closed substitution proving cut elimination rules relatively straightforward technical lemmas involving slices proved 
noting rules structurally similar respectively gabbay cheney observed alternate rules similar similar possible see seq 
rules simpler deterministic involve slices 
experience gained process implementing prolog logic programming language nominal logic suggests simpler reading ofn proof search operation implied style rules 
prolog quantifier encountered goal program clause proof search proceeds generating fresh name quantified name 
satisfying syntactic freshness requirement elimination rules fresh name required semantically fresh fresh values appearing derivation point generated 
contrast proof search interpretation suggested style rules search suitable slice quantified formula 
reading deterministic employed prolog 
simplified sequent calculus nominal logic called nl slices needed rules forn 
urban pitts gabbay employ new syntactic class name symbols :10.1.1.11.6168
variables name symbols may bound byn variables distinct name symbols regarded denoting distinct name values 
forn nl evolution rules forn seq nl place slices introduce contexts encode information freshness identifying types variables name symbols 
specifically contexts may formed adjoining fresh assumed semantically fresh value mentioned 
rules forn nl spirit original rules simple 
presenting sequent calculus proving structural properties cut elimination verify nl pitts axiomatization nl equivalent 
syntactic proof consistency nonlogical rules cut elimination implies consistency system 
structure follows section presents sequent calculus nl proofs structural properties 
section discusses applications including proofs consistency conservativity nl relative nl 
section concludes 
sequent calculus section minor changes chapter author dissertation :10.1.1.59.1487
sequent calculus syntax types terms formulas nl generated grammar base types type propositions datatypes name types additional types formed function abstraction type constructors 
variables drawn countably infinite set name symbols drawn countably infinite set disjoint form letters typically terms name type 
note terms surjective pairing included language handled traditional fashion 
particular terms considered equal equivalence conventional sense 
negation logical equivalence defined follows base type formulas 
quantification limited types mentioning assume signature maps constant symbols types containing declarations qx qx free variables names note stands eq fresh swap abs name types types 
subscripts dropped clear context 
notations syntactic sugar terms eq fresh swap abs respectively 
write term may name symbol variable functions calculate sets free variables name symbols variables name symbols term formula see 

inclusion terms identification terms formulas bound names equivalence may objectionable appears circularly attempting define binding terms binding 
case 
key contribution gabbay pitts approach shows formally justify informal traditional approach binding syntax constructing syntax trees modulo equivalence simple mathematical objects particularly clever way ch :10.1.1.62.9845

assume standard technique dealing binding acting scenes 
freshness contexts nl generated grammar abbreviate respectively 
write binding 
write result concatenating contexts 
write indicate formed term type wellformed formula 
point view typechecking additional freshness information context irrelevant 
nonstandard rules typechecking remaining rules shown standard 
terms viewed formulas usual type quantification allowed types mentioning quantification allowed name types 
set formed terms context 
associate set freshness formulas context follows formedness rules example 
say stronger 
example routine properties hold lemma term weakening 

lemma term substitution 
rules judgments form freshness context multisets formulas 
define classical intuitionistic versions nl classical nl classical sequent calculus see intuitionistic nl inl multiple intuitionistic calculus im see 
versions include additional logical rules shown nl 
addition nl includes nonlogical rules defining properties swapping equality freshness abstraction 
nonlogical rules correspond order universal axioms nominal logic may incorporated sequent systems uniform fashion ax rule affecting cut elimination 
remaining nonlogical rules follows 
rule expresses invertibility property abstractions abstractions equal structurally equal equal virtue 
says values abstraction type formed abstraction function symbol 
rule expresses freshness principle name fresh context may chosen 
rule allows freshness information extracted context 
states context constraint valid 
naming nonlogical rule groups corresponds pitts axioms divided groups swapping equivariance freshness abstraction 
axiom replaced logical andn lists rules admissibility nl shown section 
structural properties list routinely verified syntactic properties nl write indicate judgment derivation height lemma weakening 
derivable 
similarly 
lemma context weakening 

lemma substitution 

proof 
interesting cases new rules specifically nonlogical rules andn nonlogical rules closed substitution particular 
derivation hyp classical order equational sequent calculus variant rules intuitionistic multiple calculus im induction derive 
requires observation 
proofs forn andn similar requiring additional observation 
remaining structural transformations preserve height derivations 
preserve logical height derivation defined follows 
definition 
logical height derivation maximum number logical rules branch derivation 
write indicate derivation logical height consider nontrivial structural properties 
lemma admissibility ev ev 
ev ev rules ev ev equational freshness axioms qn ax axiom instance nonlogical rules hyp arbitrary formula admissible 
ev admissible rules nl ev proof 
proceed induction show hypothesis instance ev ev derivation respective rule derivation logical height 
consider ev interesting cases principal left induction step straightforward 
furthermore cases hyp nontrivial 
derivation form may derive follows derivation logical height 
derivation form admissibility ev ev left ev right obtain ev ev ep cut ev transformation obviously logical height preserving induction 
ev interesting cases hyp principal right 
suppose derivation form derive hyp ep derivation logical height 
derivation form ev ev admissible subderivations derivation induction derive ev ev transformation obviously logical height preserving induction 
lemma swapping fresh names 
suppose rule admissible nonlogical axioms 
proof 

derivation roughly follows ax ev equational reasoning repeatedly show 
lemma admissibility hyp 
hyp rule arbitrary formula admissible 
hyp proof 
proof induction construction 
cases ordinary connectives firstorder logic standard 
case derivable 
derive follows 
induction may assume lemma induction hypothesis judgment derivable instance hyp smaller principal formula 
lemma inversion 


andn 







rules invertible 

fresh fresh proof 
proofs rules similar systems im 
proof induction height derivation 
cases straightforward 
cases introduce variables name symbols exceptions 
show reasoning derivation form forn induction hypothesis 
structural weakening 
equivariance equational reasoning fact derive 
mentioned sequent derive desired 
proof invertibility ofn symmetric 
lemma contraction 

similarly 
proof 
proof induction logical height secondary induction total height 
induction hypothesis applies derivations smaller logical height derivations equal logical height smaller total height 
cases similar standard proof 
new cases involve nonlogical rules andn 
nonlogical rules suffices show nonlogical rule instance nonlogical rule corresponding contraction 
rule 
derivation form transform derivation remaining cases standard 
interesting new case contracted formula derived nl inversion 
nonlogical rules derive 
induction hypothesis 
derive nl proof right contraction symmetric invertibility ofn cut elimination usual sequent systems important property check verify system sensible cut elimination 
lemma admissibility cut 
proof 
proof cut elimination similar systems im prove lemma induction structure cut formula sub induction sizes subderivations 
induction hypothesis may assume lemma holds instances complex cut formula instances cut formula smaller derivation proofs cut elimination similar systems categories cases base cases axiom initial sequent 
left commuting cases starts rule principal 
right commuting cases starts rule principal 
principal cases start rule principal 
cases involving order rules exclusively standard shown standard proof 
addition von plato showed nonlogical rules form consider added sequent systems im damaging cut elimination 
suffice consider new cases involving quantifier rules 
base cases new base cases 
left commuting cases new cases begins case nl orn 
weaken derive deriving induction may derive second case nr 
weaken get deriving induction obtain 
derive 
right commuting cases 
cases exactly symmetric left commuting cases 
case 
weaken derive deriving induction may derive second case nr 
weaken get deriving induction obtain 
derive 
principal cases 
case decompose cut formula 
new rule decomposing formulas right isn new principal cut case nr 
induction may conclude application freshness rule 
completes proof 
theorem 
derivable sequent cut free derivation algorithm producing derivations 
proof 
proof induction number cuts 
derivation cut find uppermost cut derivation tree remove 
reduces number cuts 
applications syntactic consistency pure order logic cut elimination immediately implies consistency inspection rules shortest proof 
presence general nonlogical rules weaker result holds 
say atomic formula constraint equality freshness formula constraint set contains constraints 
proposition 
derivation nonlogical rules sequent form constraint set 
proof immediate observing nonlogical rules applicable derivation constraint set 
means nominal logic consistent nonlogical rules consistent 
prove consistency nonlogical rules necessary exhibit model 
appropriate semantics defined terms syntax nominal terms 
definition syntactic swapping equality freshness 
set swapping free nominal terms generated grammar define swapping function terms follows define freshness relation ground terms rules nominal equality relation defined follows proposition 
nominal equality relation equivalence relation 
nt defined 
equivariant relations show interpret arbitrary nominal terms nt definition 
nt substitution ground nominal terms variables called interpretation 
lift function nt nt follows say nt satisfies written constraint 
write indicate respectively 
similarly indicates constraint constraint set 
say constraint constraint set satisfiable interpretation holds nt proposition 
axioms listed valid nt sense axiom qi qi proof 
proof induction definition swapping ground terms 
validity immediate 
equivariance axioms definition swapping plain unit pairing abstraction function symbols swapping equivariant 
addition difficult show syntactic swapping function equivariant 
equivariance axioms formulas need consider 
clearly equality equivariant shown induction derivation similarly shown valid induction derivation axiom show proof induction structure result immediate similarly induction step straightforward 
cases 
induction loss generality suppose case symmetric 
need show equivalently 
trivial 
sufficient show immediate know holds 
clearly name symbols different sorts distinct need show 
immediate definition freshness relation 
need show derivable 
derivable derivable 
need show 
cases 
rule definition nominal equality applies show 

proposition 
proof 
proof case analysis possible derivations 
cases corresponding rules definition structural equality 
result immediate 
proposition 

proof 
proof induction structure critical case variable case need fact 
theorem 
set freshness equality formulas 
derivable unsatisfiable 
proof 
proof induction structure derivation 
note applicable rules nonlogical rules 
case nonlogical rule 
cases straightforward 
interesting cases 
axioms hold nt cases axioms straightforward 
example derivation form clearly unsatisfiable 
derivation form unsatisfiable 
case 
case satisfy 
derivation loss generality assume induction 
proposition 
consequently 
suppose 
induction cases 

similarly 
contrapositive proposition 
case 

clearly induction 
corollary syntactic consistency 
derivation 
proof 
follows proposition theorem satisfiable constraint set 
separation cut elimination show parts equational theory orthogonal extensions derivable sequents mentioning abstraction pairing derived special properties symbols 
theorem separation 
suppose subterms form 
derivation nonlogical rules involving abstraction pairing 
proof 
say context formula formula multiset sequent abstraction free abstraction function symbol type constructor appear 
derivation abstraction free rules appear 
write abstraction free derivability 
proof induction structure cut free derivations 
need stronger induction hypothesis 
say abstraction mentioned equations freshness formulas 
note abstraction free constants types mention abstraction formed terms type form 
equations abstraction typed terms form call formulas abstraction equations 
context partitioned contains abstraction equations 
say redundant relative show abstraction free redundant relative 
abstraction free obviously redundant relative separation theorem special case 
proof structural induction derivation 
cases involving left right rules straightforward rules act affect goodness redundancy 
case hyp easy hypothesis clearly redundant relative 
goodness preserved 
induction desired 
redundant relative cases 
induction derivation cut derive desired 
induction derivation cut derive desired 
cut elimination introduce uses abstraction rules resulting derivations abstraction free 
variables abstraction type terms 
substitute derivation get 
clearly induction derivation 
reflexivity rule clearly redundant relative induction 
obviously redundant conclude induction 
derivations equation abstraction typed terms induction step easy 
cases depending structure case show redundant relative abstraction equation abstraction equation 
remaining nonlogical rules involve formulas form induction step immediate rules 
proofs separation pairing similar considerably simpler branching rules 
conservativity classical nominal logic consider classical case 
write nl set axioms pitts axiomatization nominal logic reviewed section 
ordinary variable contexts nl formula multisets write nl indicate nl 
loss generality finite 
write nl derivability nl technical point address 
system contains explicit name constants quantified byn appearing freshness contexts pitts quantifies ordinary variables 
bridge gap translate nl formulas nl formulas bound variables fresh name symbols 
example nl translates nl 
write translation defined follows write indicate name appear bound free 
omitted cases derivable de morgan identities 
translation judgment result translating element respectively 
show theorem nl translates theorem nl theorem 
nl nl proof 
defined nl mean finite subset nl 
derivation nl derivation just need show nl uses nl axioms redundant 
show axiom nl derivable nl cut finitely times derive nl axioms straightforward 
axioms form clearly derivable corresponding nonlogical rules follows qn derivable hyp 
leaves axioms fitting pattern including cf cf ca ca cq 
ca ca derived nonlogical rules nl cf nl show cases cf directions cq detail 
ax instance cf derivation form translated instance cq form prove directions individually 
forward direction syntax directed applications right rules rn reverse direction need show 
ax ev fresh free variables equivariance fact consequently translations axioms nl derived nl result nl finite set axioms nl derivations axioms finitely instances cut obtain derivation nl 
consider problem conservativity showing new theorems nl sequent derivable nl derivable nl 
straightforward subderivations translated nl judgments may involve name symbols 
show name symbols removed 
lemma 
suppose 
abbreviation 
proof 
prove stronger induction hypothesis mentions variables 
proof induction structure derivation 
cases straightforward 
exception case 
case 
induction 
note name symbol 
name symbol easy see implies induction step straightforward 
constraint form 
obviously depend possible derive nonlogical rules derive derivation obtained induction hypothesis 
ax fact hand show desired result 
theorem 
translated nl sequent derivable nl derivable nl 
proof 
separation property rules involving pairing terms removed derivation proof induction structure derivation 
cases corresponding order equational proof rules induction step straightforward 
cases corresponding nonlogical rules corresponding universal axioms suppose derivations form induction nl derivations nl sequents 
cases derivation qn remain 
nl derive direction cf contradictory 
derivation tautology classical logic tautology 
cut derivation formula derive nl 
suppose derivation form upper sequent nl sequent mentions name symbol lemma equivalent nl sequent 
induction derivation nl 
derive cut easy derive rules axioms ca ca nl 
rule apply name symbols appear 
consider cases forn andn forn upper derivation lemma obtain derivation sequent greater complexity 
induction nl derivation sequent 
swapping 


equivariance 



freshness 


quantifier 
iq 

abstraction ia 
ia 
axioms intuitionistic nominal logic derive cut axiom instance prove 
nr forn lemma induction hypothesis derive nl 
nl difficult prove nl derive nl 
cut obtain 
intuitionistic case wish argue intuitionistic calculus inl really intuitionistic nominal logic 
pitts considered classical nominal logic 
subtlety having pitts axiom cf intuitionistic case 
pitts original axiom cf stated freshness names inequality cf 
axiom fit scheme nonlogical rules 
inl nonlogical rules asserting name fresh names equal fresh 
axioms equivalent cf classical logic intuitionistic logic pitts axiom weaker follow cf 
recall case theorem excluded middle name equality 
modified pitts axiomatization slightly replacing original axiom cf rules asserting name fresh stating names fresh equal 
classical logic equivalent axiomatizations provable intuitionistic logic pitts axioms 
inl equality freshness names decidable 
reason introduce alternative axiomatization inl shown differing replacement cf axioms 
decision may defended grounds 
stronger intuitionistic logic inl equivalent nl classical logic 

intuitionistic theorem nl intuitionistic theorem inl inclusion strict 

intuitionistic theorem inl classical theorem nl inclusion strict 

constructivist point view usually acceptable equality decidable base types name types 

fresh logic intuitionistic form nominal logic included rules similar 
inl indicate derivability intuitionistic logic axioms inl 
essentially proof techniques classical case theorem 
inl derivable inl nominal logic developed logic considerable interest provides powerful techniques reasoning fresh names name binding 
interesting features nominal logic quantifier 
techniques reasoning offered previous formalizations nominal logic highly unnecessarily complex 
introduced new sequent calculus nominal logic uses freshness contexts deal new quantifier 
rules forn symmetric rationalize proof search semantics forn natural intuitive inspired treatment ofn nominal logic programming 
proved cut elimination detail 
addition nl provide syntactic proof consistency detailed proof equivalence pitts axiomatization modulo ordinary order classical intuitionistic logic 
results kind shown detail 
applications nl addressed nl provides proof search reading ofn closer approach taken prolog nominal logic programming language 
gabbay cheney gave proof theoretic semantics nominal logic programming analysis relevant prolog suggests radically different computationally intensive proof search technique forn quantified formulas 
contrast nl provide rationale prolog existing search technique 
plan study proof theoretic semantics nominal logic programming nl order establish correctness fix bugs prolog search technique 
gabbay cheney showed logic possessing self dual fresh value quantifier soundly interpreted nominal logic proof theoretic translation 
translation developed incomplete possibility finding faithful translation left open 
nl appears possible easy prove completeness translation :10.1.1.59.1487
additional directions include development natural deduction calculi type theories ideas nl particularly interesting direction possibility developing type system confluent term rewriting system decide equality nominal terms proof terms 
system equality freshness theory necessitates nonlogical rules nl dealt implicitly rewriting normalization leading simpler proof theory nominal logic 
direction sch pp stark indicates may significant obstacles approach system introduced may viewed behaved fragment system 
improvement proof theory nominal logic possible desirable 
cheney urban 
alpha prolog logic programming language names binding 
proc 
th int 
conf 
logic programming iclp number lncs pages 
james cheney :10.1.1.59.1487
simpler proof theory nominal logic 
proceedings conference foundations software science computation structures fossacs 
appear 
james cheney :10.1.1.59.1487
nominal logic programming 
phd thesis cornell university ithaca ny august 
gabbay 
fresh logic logic fm 
submitted 
gabbay cheney :10.1.1.59.1487
proof theory nominal logic 
proceedings th annual ieee symposium logic computer science lics pages turku finland 
gabbay pitts :10.1.1.62.9845
new approach syntax variable binding 
formal aspects computing 
sara jan von plato 
structural proof theory 
cambridge university press 
pitts :10.1.1.11.7844
nominal logic order theory names binding 
information computation 
ulrich sch pp ian stark 
dependent type theory names binding 
proceedings computer science logic conference number lecture notes computer science pages poland 
troelstra schwichtenberg 
basic proof theory 
number cambridge tracts theoretical computer science 
cambridge university press second edition 
urban pitts gabbay 
nominal unification 
theoretical computer science 

