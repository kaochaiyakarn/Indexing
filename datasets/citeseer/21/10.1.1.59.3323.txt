feedtree sharing web peer peer event notification dan sandler alan mislove post peter druschel department computer science rice university houston tx druschel cs rice edu syndication frequently updated content web currently accomplished rss feeds client applications poll feeds 
providers rss content concerned bandwidth demand rss readers 
current efforts address problem optimizing polling behavior clients sacrifice timeliness fundamentally improving scalability system 
argue distribution system called feedtree uses peer peer overlay network distribute rss feed data subscribers promptly efficiently 
peers network share bandwidth costs reduces load provider updated content delivered clients soon available 
early days web static html pages handful news oriented web sites broad appeal updated content twice day 
users large able get news needed surfing site individually pressing reload 
web today experienced explosion highly focused chunks content appearing frequently irregularly scattered scores sites 
difference news site weblog flow sheer volume timely information available modern web site means interested user return just daily dozen times daily get latest updates 
surge content spurred adoption rss marshals common convenient format 
downloading entire web pages clients download rss feed containing list posted articles 
rss specifies retrieval architecture scalability mechanism tested 
growing concern rss community scalability issues impact bandwidth usage providers popular rss feeds begun abbreviate eliminate feeds reduce bandwidth stress polling clients 
current rss distribution architecture clients periodically poll central server bandwidth requirements scale linearly number subscribers 
believe architecture little hope sustaining phenomenal growth rss distributed approach needed 
properties peer peer overlays natural fit problem domain multicast systems scale logarithmically support millions participating nodes 
argue rss feeds distributed way shares costs participants 
event notification distribute reduce dramatically load placed publishers time delivering timely service clients currently possible 
sketch system called feedtree go show deployed incrementally 
remainder organized follows 
section provides background rss rss bandwidth problem 
section discusses related improve rss section presents design feedtree 
section describes prototype feedtree implementation 
section concludes 
background rss rss refers family related xml document formats encapsulating summarizing timely web content 
documents written atom syndication format entry specification called feeds 
web site updates available rss client software variously termed readers disagreement exact expansion acronym 
netscape specified version rss name rdf site summary acronym taken stand rich site summary really simple syndication subtleties debates format versions nomenclature ideology omitted 
aggregators offering feed clients alongside conventional html content 
rss feeds designed machines people client applications organize reformat latest content web site sites quick perusal user 
url pointing feed advertised main web site 
asking rss reader subscribe url rss feed user instructs application fetching url regular intervals 
retrieved xml payload interpreted list rss items application 
items may composed just headline article summary complete story html entry unique id frequently accompanied permanent url web version entry 
user item typically appears chronologically sorted list way rss client applications users new kind email program bit indispensable original 
rss aggregator inbox entire internet 
rss bandwidth just major news outlets begun discover rss expose audiences burgeoning technology rss technical community weaknesses exposed runaway adoption 
chief called rss bandwidth problem essentially web servers rss feeds available tend observe substantially greater traffic loads result proportion observable interactive visitor trend 
consequently sites implemented self defense mechanisms smaller rss feed sizes enforced limits access attempt address problem 
situation effect behaviors working concert polling 
feed user subscribed rss application issue repeated requests feed set schedule 
sites offer rss feeds satisfy request user times day new content 

rss data format essentially static entries returned time feed polled 
convention feeds limited entries entries emitted request regardless may new client 
bandwidth problem helped introducing diff polling scheme requests processed rss provider adds processing load 
stickiness 
user subscribes rss feed retain subscription long time polling traffic counted foreseeable 
previously obscure web site popular day linked popular web sites browsing traffic spike drop time 
site offers rss feed users may decide subscribe case drop direct web browsing replaced steady load rss client fetches 
web site popular day may satisfy crowd forever 
hour traffic 
rss client applications commonly running desktop computers hours user diurnal pattern interactive web browsing apply 
global nature web users may generate rolling hour traffic global rss readers generates persistent hour traffic earth 
easy see website may suffer publishing rss feeds 
popular feed slashdot org subscribers writing 
subscribers personal aggregation software desktop clients slashdot headlines rss feed kilobytes day worth entries typically polled half hourly transferred times day total gb data daily 
new york times introduced suite rss feeds headlines front page claims subscribers sum subscribers feeds comes 
feeds times tend kb gb data day minute polling 
websites wishing provide rss readers deeper content problem worse 
popular weblog chooses publish complete html stories rss atom subscribers receive kb rss request 
provide service able accommodate gb day rss traffic 
bbc news web site truly updated minute day rss subscribers various feeds unable take advantage bandwidth demands subscribers polling minute virtually 
com popular web rss reading application offers subscription figures feeds aggregates 
figures late october crude approximation reasonable rss readership 
certainly polls rss feeds thousands subscribers anecdotal evidence suggests traditional desktop rss client usage outweighs web client usage regard figures lower bound rss polling load 
advertised news bbc uk 
related improving polling process proposals submitted ease pain rss webmasters 
described detail rss feed state howto examples include avoiding transmission feed content hasn changed client request gzip compression feed data clever ways shape timetable clients may poll rss feed 
unfortunately schedule essentially unpredictable fundamentally impossible clients know polling necessary 
werner vogels puts succinctly uncontrolled polling rss resources scale 
outsourcing aggregation online rss service providers essentially webbased rss readers proposed alternative solutions 
outsourced aggregation scenarios centralized service provides remote procedure interface user applications may built refactored 
application store state set subscribed feeds set old new entries central server 
poll server receive updated data 
central rss aggregation service take responsibility polling authoritative rss feeds wider internet 
addresses bandwidth problem way web site owner certainly service fewer rss requests users start polling central service 
operators central services definitely bandwidth issues center rss traffic 
far insidious danger inherent approach central point control failure censorship established participating users 
central rss aggregation service may experience unavailability outright failure rendering users unable rss readers ii elect change terms service time iii silently modify omit augment rss data user knowledge consent 
modification rss data central aggregator may come form optimized normalized rss formatting useful feature syndication formats wild frequently incompatible take dangerous forms may modify corrupt entries feed may add advertising supplemental non content feeds 
summary third party may reliable trustworthy entity guaranteed proxy client applications 
rea sons centralized rss aggregation viable long term solution 
feedtree group communication overlay networks obvious alternative polling data distribute data available lists subscribers 
approach may adequate small subscription lists example mail lists scale accommodate growing subscription demands web site syndication 
furthermore approach may reduce bandwidth usage rss reducing unnecessary fetches alleviate update stress network links close source 
address problems look peer topeer overlay networks offer compelling platform self organizing subscription systems 
overlay group communication systems including scribe offer distributed management group membership efficient routing subscription events interested parties overlay 
propose feedtree approach rss distribution peer peer subscription technologies 
feedtree timely web content distributed interested parties scribe subscription event notification architecture 
chose base design scribe reason deployed group communication system provides similar performance characteristics 
system content may distributed soon available interested parties receive information bursts immediately polling source stressing network links close source 
scribe scribe scalable group communication system built top peer peer overlay pastry 
scribe group bit groupid serves address group 
nodes subscribed group form multicast tree consisting union pastry routes group members node nodeid numerically closest groupid 
membership management decentralized requires logn messages average number nodes overlay 
scribe shown provide cooperative multicast efficient low overhead 
delay stretch approximately double ip multicast comparable system multicast systems esm overcast 
link stress low twice ip 
large number groups system expected feedtree load naturally balanced participating nodes 
scribe uses periodic heartbeat mechanism detect broken edges tree mechanism lightweight invoked messages published group 
shown scale large groups large number groups 
properties fit building large scale event notification systems feedtree 
architecture feedtree publishing software wishes deliver update subscribers steps taken addition refreshing conventional rss feed url complete rss document created contain pieces timely 
item assigned timestamp sequence number aid clients detection omitted delayed events 
rss data signed publisher private key 
essential establishing authenticity published item 
signed rss document multicast overlay peers subscribed scribe group topic hash feed globally unique id trivially defined canonical url advertised rss feed 
peers receiving message verify signature parse rss data add local rss application state conventional polled rss feed 
user notified immediately new entries 
feedtree aware client applications able examine conventional rss feed data discover updates feed published feedtree 
feedtree metadata added rss document structure signal available subscription overlay 
way feedtree application bootstraps subscription process request conventional feed 
updates distributed incremental rss items published feedtree 
rss feed published feedtree advertise time live value maximum interval feedtree events 
rss feeds include value indicate minimum allowed polling period clients 
publisher observes new feedtree events generated interval publisher generate heartbeat event 
heartbeats allow subscribers know conclusively published items lost time live period 
desirable publishers cryptographically sign published rss data clients may able trust scribe events receive 
conventional rss feed include url fingerprint publisher certificate clients may retrieve cache credentials necessary validate integrity signed rss data 
adoption deployment proliferation conventional rss depended largely availability quality tools generate rss data feedtree different 
developers opportunities provide support system 
break deployment scenarios support feedtree fully serve adapters ease transition legacy rss systems 
full feedtree support publishers 
web content management systems weblog publishing packages traditional workflow cms software join overlay long lived feedtree nodes 
new content posted publishing software automatically creates new feedtree message publishes multicast tree 
readers 
rss reading applications join feedtree peer peer network 
doing part global feedtree service distributing network processing loads rss event forwarding 
user interface rss client remain unchanged user subscribes rss feeds ordinarily software takes care detecting bootstrapping feedtree subscription available 
new rss items available users soon feedtree events received application 
incremental feedtree support publishers 
legacy publishing software currently emits valid rss adapted feedtree republishing engine running near web server 
tool poll legacy rss feed aggressive schedule sifting new content distributing feedtree 
republishing tool operated third party case owner slow deploy feedtree 
common emergent behavior rss community web sites currently html popular sites redistribute content general benefits signed content independent feedtree architecture believe design offers excellent opportunity compelling need introduce signed rss 
rss format 
user decide trust third party proxy feed 
readers 
rss applications support feedtree natively users contribute rss bandwidth solution running local feedtree proxy 
proxy listen receive rss data feedtree conventional means 
existing user rss tools poll local feedtree proxy desired unnecessary bandwidth usage 
users see new feedtree items sooner conservative polling policy 
discussion benefits participants system propose offers substantial benefits producers consumers rss data 
chief incentive content providers lower cost associated publishing large web sites readers may offer large volumes timely content feedtree clients fear saturating network links smaller web site need fear sudden popularity publishing feedtree feed 
feedtree offers publishers opportunity provide differentiated rss services publishing simple headlines conventional rss feed delivering full html stories feedtree 
users receive better news service feedtree currently possible 
users currently punish web sites increasingly aggressive polling schedules order get fresh news schedule match timeliness feedtree users see new items seconds minutes hours 
publishers offer richer feedtree believe users system 
rss readers generally long running processes building feedtree rss clients result stable overlay network dissemination 
recovery lost data scribe offers best effort service failures node departures multicast tree may result feedtree clients missing events 
case client detect gap sequence numbers overdue heartbeat 
client may query parent recover missing items order satisfy request member system keep small fixed buffer items feed 
fallback missing items may recovered retrieving conventional rss feed bootstrapping phase 
feedtree clients may offline periods time update events 
clients coming online catch examining rss feed previously unseen items bootstrapping 
malicious node acting interior node scribe tree suppress events 
attack addressed distributing responsibility scribe root nodes routing nonroot interior nodes fail forward events 
omit details due space limitations 
overhead bandwidth demands individual participant multicast tree quite innocuous 
example rss feed generating kb hour updates cause interior tree node children forward bytes second outbound traffic 
due extremely low forwarding overhead believe motivation small 
expect richer content feeds consequently potential incentive may increase 
incentives compatible mechanisms ensure fair sharing bandwidth applied users subscribe feeds common model rss usage 
intend explore integrating techniques feedtree 
development status order validate design feedtree developed software prototype follows design outlined section 
daemon serves intermediary conventional rss client software request rss feed satisfied constructs new ad hoc rss document feedtree messages received feed 
subscribing new rss feed proxy checks see feed published feedtree 
feed published volunteer republish rss feed begins polling rss feed conventional rss reader 
new items published feedtree polling interval yields new items proxy publishes news heartbeat event 
event informs listening instances feed polled volunteer 
current implementation mechanism generalized allow multiple instances poll single rss feed cooperatively providing updates feedtree higher frequency conventional rss polling 
overload feed factor choose volunteer observes fewer feedtree events feed polling interval 
average rss feed minimum polling period effective feedtree refresh period polling schedule volunteers jittered help avoid synchronicity 
time writing running small deployment internally rice 
plan soon expand distribution planetlab testbed experimentation validation 
current rss polling mechanism said scale cost directly proportional number subscribers 
fact linear cost typically indicator poor scaling properties especially cost focused member distributed system 
growth rss adoption badly substantial change way distributed 
proposed feedtree subscription system rss takes advantage properties peer peer event notification address bandwidth problem suffered web content providers time bringing users promptly currently possible 
self organizing subscription systems scribe offer scalability matched system designed resource polling 
building feedtree distribution system foresee potential entirely new services rss accomplished today 
single writer logs combination distributed storage mechanism dht record permanently rss item published allowing distributed archival store internet 
clients system easily able find missed offline long old rss items longer available conventional static rss feed 
area anonymous rss feeds involving anonymizing peer peer routing system ap 
envision cooperative multicast splitstream distribute large files software audio video part feedtree feeds 
atom syndication format 
www org developers syndication 
web services 
www com services 
online service 
www com ngs 
rss protocol wikipedia entry 
en wikipedia org wiki rss protocol 
rss mac os roundtable 
www com archives html oct 
castro druschel kermarrec nandi rowstron singh 
splitstream high bandwidth multicast cooperative environments 
proc 
sosp oct 
castro druschel 
kermarrec rowstron 
scribe large scale decentralized application level multicast infrastructure 
ieee jsac oct 
chu rao zhang 
case system multicast 
acm sigmetrics pages june 
dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
proc 
acm sosp banff canada oct 
gomes 
big thing technology morphed really big thing 
wall street journal oct 
green 
news choose page 
oct 
www com magazine content mz htm 
hicks 
rss comes bandwidth price tag 
sept 
www com article asp 
jannotti gifford johnson kaashoek toole 
overcast reliable multicasting overlay network 
osdi san diego ca 

way read news blogs online rss allows users get free automatic feeds 
san francisco chronicle oct 
www com cgi bin article cgi file chronicle archive bug es dtl 
kubiatowicz bindel chen czerwinski eaton geels gummadi rhea weatherspoon weimer wells zhao 
oceanstore architecture persistent store 
proc 
asplos cambridge ma november 
mislove post reis druschel wallach 
ap cooperative decentralized anonymous communication 
proc 
sigops ew leuven belgium sept 
morin 
howto rss feed state 
www com rss html sept 
muthitacharoen morris gil chen 
ivy read write peer peer file system 
proc 
osdi boston ma december 
netscape communications netscape network mar 
www rss netscape rss html 

ngan nandi singh wallach druschel 
designing incentives compatible peer peer systems 
proc 
italy june 

myth rss compatibility 

org archives incompatible rss feb 
rowstron druschel 
storage management caching past large scale persistent peer peer storage utility 
proc 
acm sosp banff canada oct 

theory rss traffic growing control 
radio weblogs com html sept 
vogels 
polling scale 
weblogs cs 
cornell edu archives html sept 
wallace 
rss sticky traffic 
www 
com weblogs nathan guid db ec ad fc cb july 
