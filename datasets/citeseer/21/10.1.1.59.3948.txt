trustguard countering vulnerabilities reputation management decentralized overlay networks reputation systems popular estimating trustworthiness predicting behavior nodes large scale distributed system nodes may transact prior knowledge experience 
fundamental challenges distributed reputation management understand vulnerabilities develop mechanisms minimize potential damages system malicious nodes 
identify vulnerabilities detrimental decentralized reputation management propose trustguard safeguard framework providing highly dependable efficient reputation system 
provide dependable trust model set formal methods handle strategic malicious nodes continuously change behavior gain unfair advantages system 
second transaction reputation system cope vulnerability malicious nodes may misuse system flooding feedbacks fake transactions 
third identify importance filtering dishonest feedbacks computing reputation trust node including feedbacks filed malicious nodes collusion 
experiments show comparing existing reputation systems framework highly dependable effective countering malicious nodes regarding strategic oscillating behavior flooding malevolent feedbacks fake transactions dishonest feedbacks 
categories subject descriptors distributed systems distributed applications performance systems security reliability reputation management overlay networks general terms security performance reliability 
variety electronic markets online communities reputation system built ebay amazon yahoo 
auction slashdot entrepreneur 
works suggested reputation trust systems effective way nodes identify avoid malicious nodes order minimize threat protect system possible abuses malicious nodes copyright held international world wide web conference committee iw :10.1.1.13.4475:10.1.1.16.6889
distribution papers limited classroom personal 
www may chiba japan 
acm 
li xiong ling liu college computing georgia institute technology cc gatech edu decentralized overlay networks 
systems typically assign node trust value transactions performed feedbacks received 
example provides protocol complementing current gnutella protocol allowing peers keep track share information reputation peers resources 
eigentrust presents algorithm similar pagerank computes trust value assuming trust transitive demonstrated benefits addressing fake file downloads peer peer file sharing network 
reputation management far focused vulnerabilities reputation system 
detrimental vulnerabilities malicious node may strategically alter behavior way benefits starting behave maliciously attains high reputation 
widely recognized vulnerability shilling attack malicious nodes submit dishonest feedback collude boost ratings bad mouth non malicious nodes 
malicious nodes flood numerous fake feedbacks fake transactions feedback system 
issues mind trustguard highly dependable reputation trust building framework 
number unique contributions 
introduce highly dependable trust model effectively handle strategic oscillations malicious nodes section 
second propose feedback admission control mechanism ensure transactions secure proofs file feedbacks section 
third propose feedback credibility algorithms effectively filtering dishonest feedbacks section 
set simulation experiments showing effectiveness trustguard approach guarding vulnerabilities minimal overhead 
conclude brief overview related section section 

trustguard overview system architecture high level overview trustguard framework shows sketch decentralized architecture dependable reputation management system 
callout shows node transaction research partially supported nsf cns ccr nsf itr doe scidac research ibm faculty award ibm sur hp equipment 
trustguard architecture manager trust evaluation engine feedback data storage service 
node wants transact node calls trust evaluation engine perform trust evaluation node collects feedback node network overlay protocol aggregates trust value 
computation guarded strategic oscillation guard dishonest feedback filters 
transaction manager consists components 
trust node selection component uses trust value output trust evaluation engine trust decisions calling transaction execution component 
performing transaction transaction proof exchange component responsible generating exchanging transaction proofs 
transaction completed feedbacks manually entered transacting users 
transacting nodes route feedbacks designated nodes overlay network storage decentralized overlay protocol dht protocol 
designated nodes invoke data storage service admit feedback passes feedback admission control fake transactions detected 
feedback storage service responsible storing reputation trust data overlay network securely including maintaining replicas feedbacks trust values 
build trustguard storage service top peertrust :10.1.1.13.4475
implement trustguard framework decentralized implementation distributes storage computation trust values nodes important note implement trustguard different degrees centralization 
extremity trusted servers trust evaluation feedback storage 
utilize trusted servers support selected functionality example transaction proof exchange section 
assume trustguard architecture built top secure overlay network 
overlay network capable routing messages despite presence malicious nodes ensure nodes identified digital certification mechanism 
readers may refer detailed discussion security issues overlay networks :10.1.1.118.1870
problem statement solution approach trustguard framework equipped important safeguard components 
rest focus types vulnerabilities analyze potential threats describe countermeasures vulnerabilities trustguard 
strategic oscillation guard 
existing reputation systems ebay combination average feedbacks number transactions performed node indicators trust value 
experiments show simple average guard reputation system oscillating behavior dishonest feedbacks 
example bad node may behave non maliciously attains reputation reflected trust value behave maliciously 
oscillate building reputation 
dependable reputation system able penalize malicious nodes dynamic strategic behavioral changes 
trustguard promote incorporation reputation history behavior fluctuations nodes estimation trustworthiness 
adaptive parameters allow different weighting functions applied current reputation reputation history reputation fluctuations 
fake transaction detection 
typical feedback system transaction participating nodes opportunity submit feedbacks 
brings vulnerabilities 
malicious node may flood numerous ratings node fake transactions 
second malicious node may submit dishonest feedback transaction 
dependable trust model equipped mechanisms handle malicious manipulation feedbacks guard system fake transactions differentiate dishonest feedback honest ones 
trustguard approach propose bind feedback transaction transaction proofs 
words feedback nodes transaction stored 
dishonest feedback filter 
fake transaction detection guarantees feedback associated real transaction malicious node may submit dishonest feedbacks order boost ratings malicious nodes bad mouth non malicious nodes 
situation worse group malicious nodes collusive attempts manipulate ratings 
build dishonest feedback filter differentiate dishonest feedbacks honest ones 
filter essentially assigns credibility value feedback source weights feedback proportion credibility 
study credibility measures effectiveness filtering dishonest feedbacks non collusive collusive settings 

strategic malicious nodes define strategic malicious node node adapts behavioral pattern time maximize malicious goals 
consider scenario bad node misbehave earns high trust value 
scenario complicated bad nodes decide alter nate bad behavior regular arbitrary frequencies 
primarily focus strategic oscillations malicious nodes describe concrete systematic techniques taken trustguard address steady sudden changes behavioral pattern node adding heavy overheads system 
possible behavioral strategies employed malicious nodes considered 
dependable trust model capable handling important issues sudden fluctuations node behavior distinguish increase decrease node behavior tolerate unintentional errors reflect consistent node behavior 
propose dependable trust model computes reputation trust node consideration current feedback reports node historical reputation fluctuations node current behavior 
optimization theory cost metric section formalize design goals trust guard dependable trust model section 
cost model primary goal safeguard techniques maximize cost malicious nodes pay order gain advantage trust system 
formally define behavior non malicious malicious node system game theory approach 
non malicious node commitment type long run player consistently behave cooperation action maximizes player lifetime payoffs 
contrast strategic malicious node corresponds opportunistic player cheats advantageous 
formally describe cost model building reputation trust cost model illustrate basic ideas maximizing cost penalty paid behaving maliciously 
vn denote trust value evaluated system node time vn 
denote actual behavior node time modeled fraction transactions honestly executed node infinitesimally small time interval dt 
define cost function node shown equation 
cost lim vb dx set nodes set bad nodes 
objective vg cost maximized 
provides intuitive illustration cost function strategic malicious node oscillating acting bad 
referring observe problem maximizing cost paid malicious nodes reduced maximizing area yn xn minimizing extent misuse xn max vn maximizing cost building reputation yn max vn 
addition maximizing cost metric require trustguard ensure node behaving extended period time attains reputation 
ensure cost increasing node reputation depends extent node misbehaved past 
behavior trust value extent misuse done build reputation time cost building reputation dependable trust model bearing analysis mind trustguard dependable trust model section 
denote raw trust value node time existing trust evaluation mechanisms calculate 
simplest form average ratings period time 
denote dependable trust value node time compute equation 
note denotes derivative dx equation resembles proportional integral derivative controller control systems 
component proportional refers contribution current reports received time second component integral represents past performance node history information 
third component derivative reflects sudden changes trust value node past 
choosing larger value biases trust value node reports currently received larger value gives heavier weight performance node past 
averaging nature proportional integral components enables model tolerate errors raw trust values rn reflect consistent node behavior 
larger value amplifies sudden changes behavior node past indicated derivative trust value handles sudden fluctuations node behavior 
discuss techniques distinguish increase decrease node behavior section 
describe simple discretized implementation dependable trust model described 
simplicity assume trust values nodes updated periodically time period successive time periods intervals numbered consecutive integers starting zero 
call dependable trust value node interval viewed function parameters feedback reports received interval integral set past trust values node current derivative trust value node incorporating feedbacks computing 
denote raw reputation value node computed aggregation feedbacks received node interval assume feedbacks system honest transactions faked 
scenario computed simple average feedback ratings received node time interval defer extension safeguard handle dishonest feedbacks fake transactions sections respectively 
incorporating history computing integral 
compute integral history component trust value node interval denoted 
suppose system stores trust value node maxh maximum history intervals derived weighted sum maxh reputation values node equation 
maxh wk maxh wk weights wk chosen optimistically pessimistically 
example optimistic summarization exponentially weighted sum wk typically 
note choosing equivalent average past maxh reputation values node gives importance reputation values node consider evaluations optimistic allow nodes attain higher trust values quickly 
contrary pessimistic estimate obtained wk evaluation assigns importance intervals node behaved particularly badly 
strengthening dependability 
calculated feedback reputation node interval past reputation history equation compute derivative component 
note equation uses stability reasons 
compute dependable trust value node interval equation equation derived associating different weights positive gradient negative gradient trust value respectively enhancing dependability respect sudden behavioral changes node main motivations doing set increasing strength derivative component respect integral component node shows fast degradation behavior lowering strength derivative component node building reputation recall design goal 
experiments see section show rich set tunable parameters provided equation handle steady sudden changes behavior strategic malicious node 
fading memories trustguard compute dependable trust value node interval current reputation reputation history prior interval reputation fluctuation 
computing reputation history assume system stores reputation trust values node past maxh number intervals 
smaller value maxh potentially wrong malicious node forgotten approximately maxh time intervals 
large value maxh may feasible solution reasons number trust values held behalf long standing ftv ftv ftv ftv ftv ftv past ftv ftv ftv ftv ftv ftv updating fading memories denotes faded values time denotes faded values time member system extremely large :10.1.1.16.6889
ii computation time trust model equations increases amount data processed 
prototype trustguard introduce fading memories performance optimization technique reduce space time complexity computing allowing tradeoff history size precision historical reputation estimate 
propose aggregate data intervals exponentially increasing length past values integer 
observe aggregates past taken smaller number intervals precise 
permits system maintain detailed information trust values node retain fading memories detailed older trust values node fixed value system defined parameter trade precision history size adjusting value describe implement fading memories trustguard 
simplify discussion assume 
fading memory optimization goal summarize trust values node maintaining just log values 
done steps 
need mechanism aggregate trust values values ii need mechanism update values interval 
trustguard performs step follows 
interval system maintains trust values intervals form trust values summarizing intervals maintaining trust value time intervals 
provides example 
discuss trustguard performs step 
denote faded trust values node interval ideally re computing interval requires past trust values 
fading memories store summarization values trust values 
interval approximate trust value interval log 
equation approximate updates faded trust values interval base case 
gives graphical illustration equation 

fake transactions dependable trust metric focusing incorporating reputation history reputation fluctuation guard reputation system strategic oscillation malicious nodes 
dedicate section vulnerabilities due fake transactions dishonest feedbacks trustguard countermeasures 
trustguard tackle problem fake transactions having feedback bound transaction transaction proof feedback successfully filed node filing feedback show proof transaction 
transaction proofs satisfy properties transaction proofs unforgeable generated transacting nodes wished transact ii transaction proofs exchanged atomically malicious node obtain proof non malicious node sending proof node atomicity property exchange proofs guarantees fairness transacting parties able file feedbacks transaction 
absence exchange atomicity malicious node obtain proof node provide proof non malicious node non malicious node may able file complaints malicious node note entire system managed centralized trusted authority ebay completely eliminate problem fake transactions 
focus building distributed decentralized solution handle fake transactions 
technique generate unforgeable proofs curb malicious node flooding feedbacks non malicious nodes 
employ techniques electronic fair exchange protocol ensure transaction proofs exchanged fairly atomically 
important note proofs act signed contracts exchanged actual transaction takes place 
exchange fails node perform transaction 
exchange unfair bad node file feedback transaction happened 
note fake transaction detection prevent collusive malicious nodes faking large number transactions give ratings exchanged transaction proofs 
type collusion handled safeguard dishonest feedback filter 
unforgeable transaction proofs simple secure way construct proofs transactions public key cryptography scheme 
assume node associated pair public key private key pair kn assume public keys tied nodes digital certificates trusted certification authorities 
transaction defined xn descr time stamp xn descr description transaction symbol denotes string concatenation 
node signs transaction private key generate transaction proof send node proofs fairly exchanged node obtain proof transaction node vice versa 
key challenge exchange proofs atomically guarantee fairness 
fair exchange transaction proofs significant done field fair electronic exchange aiming guaranteeing exchange atomicity 
trade offs involved employing fair exchange protocol context reputation management 
section analyze feasibility trust value fair exchange protocol optimistic protocol trustguard 
trust value fair exchange protocol 
intuitively achieve fair exchange proofs nodes vn vm enforcing lower trust value node sends proof higher trust value node higher trust value node send proof lower trust value node solution flawed 
example malicious node high trust value may obtain proof non malicious node lower trust value deliver proof node malicious node may pursue malicious activities indefinitely detected trust system 
optimistic fair exchange protocol 
prototype trustguard adopt optimistic fair exchange protocol exchanging transaction proofs 
optimistic protocols guarantee fair exchange electronic items mutually parties utilizing trusted third parties ttp 
reduce involvement ttp exchanges result conflict 
assuming parties open electronic commerce environment ttp hopefully involved infrequently 
particular trustguard adopts optimistic protocol fair contract signing proposed micali 
protocol assumes transacting parties negotiated contract nodes need exchange signed contracts fairly 
protocol guarantees nodes commit contract node proof node committed contract vice versa parties commit contract party gets proof commitment party 
map protocol fairly exchanging transaction proofs contract xn descr time stamp major advantages optimistic fair exchange protocol ttp need online 
ttp infrequently come online resolve outstanding conflicts going offline 
strategic malicious node exploit delay conflict resolution shown 
assume ttp stays online time period ton stays offline time period toff malicious node building reputation behaves honestly exchanges transaction proofs fairly 
malicious node attained high reputation unfairly exchanges proofs nodes system 
synchronizing schedule ttp malicious node ensure conflicts caused malicious behavior resolved behavior trust value extent misuse done build reputation time cost building reputation delayed conflict resolution toff time units 
despite fact malicious node behaved badly period toff time units reputation fall 
moment outstanding conflicts resolved malicious node reputation falls steeply 
observe cost paid malicious node see equation lower compared toff 
needs choose toff carefully attackers time compromise trusted third party ii maximize cost paid malicious nodes strategically exploit delayed conflict resolution 

dishonest feedbacks previous section discussed techniques ensure transacting nodes fair chance submit feedbacks 
section extend safeguard model handle dishonest feedbacks 
goal guarding dishonest feedbacks develop algorithms effectively filter dishonest feedbacks filed malicious nodes system 
propose credibility factor filter estimating reputation trust value node presence dishonest feedbacks 
recall vn denote dependable trust value node rn denote reputation trust value node incorporating past history integral component fluctuations derivative component 
main idea credibility feedback filter computing rn assign higher weight credible feedbacks node lower weight dishonest ones 
concretely extend naive average computation trust value section weighted average 
denote set interactions transactions performed node fn denote normalized feedback rating node receives performing interaction node 
crn denote feedback credibility node submitted feedback node interaction reputation trust node computed rn fn crn 
information set transactions performed feedbacks received fn collected automatically :10.1.1.13.4475
goal design credibility filter function effective ensuring credible feedbacks weighted higher vice versa 
simple intuitive solution measure feedback credibility node trust value vn 
call trust value credibility measure tvm short 
vu denote trust value node node compute trust value credibility measure node interaction denoted cr equation 
cr vu vu existing reputation trust systems tvm variant measure feedback credibility 
tvm solution fundamental assumptions 
untrustworthy nodes submit false misleading feedbacks order hide malicious behavior 
second trustworthy nodes honest feedback provide 
widely recognized assumption generally true second assumption may true 
example possible node may maintain reputation providing high quality services send malicious feedbacks competitors 
motivates design effective credibility measure 
propose personalized similarity measure psm short rate feedback credibility node node personalized experience 
concretely node personalized similarity node weigh feedbacks filed node node say system 
ijs denote set common nodes node interacted denotes collection interactions node node compute similarity node root mean square differences feedback nodes ijs 
specifically node interaction performed node node node computes personalized similarity credibility factor denoted sm cr equation 
sm crn sim sim sim ijs ijs fn notion personalized local credibility measure provides great deal flexibility stronger predictive value feedback similar raters weight 
acts effective defense potential malicious cliques nodes give ratings clique give bad rating outside clique 
personalized credibility weight feedbacks result low credibility dishonest feedbacks malicious cliques 
particularly true measuring feedback similarity node clique node outside clique 
experiments show psm outperforms tvm percentage malicious nodes large malicious nodes collude 

evaluation section report results simulation experiments evaluate trustguard approach build dependable reputation management 
implemented node behavior time model model simulator discrete event simulation model 
system comprises nodes random chosen behave maliciously 
portions section demonstrate effectiveness guards proposed 
guarding strategic node behaviors section evaluate ability trust model handle dynamic node behaviors 
study behavior guard strategic oscillations comparing optimistic pessimistic summarization techniques 
demonstrate significance various parameters dependable trust metrics varying weights assigned reports received time window history derivative component 
show impact history size maxh effectiveness trust model advantages storing past experiences fading memories 
experiments reported section studied different models strategic malicious behaviors refer section definition node behavior 
model shown malicious nodes oscillate bad behavior intervals regular time periods 
model ii malicious nodes oscillate bad behaviors exponentially distributed intervals 
model iii malicious nodes choose random level goodness stay level exponentially distributed duration time 
model iv malicious node shows sinusoidal change behavior node steadily continuously changes behavior models ii iii show sudden fluctuations 
comparing optimistic pessimistic summarizations compare types weighted summarization techniques discussed section 
shows values obtained summarization node behavior model shown maxh time period malicious behavior oscillation 
result shows mean value mean exponentially weighted sum exp similar effect optimistic inverse trust value weighted sum 
observe pessimistic summarization harder node attain high trust value short span time easier drop trust value quickly 
observe exponentially weighted sum comparison mean rises quite steeply making unsuitable summarization 
node behavior mean trustguard exp trustguard model time optimistic versus pessimistic summarization node behavior trustguard alpha trustguard beta trustguard gamma non adaptive model time effect varying parameters trust model trust model parameters shows results obtained trust model various parameter settings malicious behavior shown model 
alpha shows results obtained dominant parameter 
dominant trust model follows actual behavior node amounts disregarding history current fluctuations behavior node see equation 
beta shows results obtained dominant parameter inverse trust value weighted sum 
importance behavior history node trust value node change quickly 
slowly steadily adapts actual behavior 
gamma shows results obtained dominant factor 
large trust value responds swiftly sudden changes behavior node 
observe steep jumps trust value correspond time instants node changes behavior 
results match intuition weights attached current behavior historical behavior fluctuations node behavior 
non adaptive shows trust value node absence dependable schemes handle dynamic node behaviors 
evident cost paid malicious node non adaptive model zero dependable model quite significant 
concrete evaluation considers combined effect various trust model parameters part ongoing 
varying history size section show effect history size maxh cost see equation paid malicious nodes 
shows scenario malicious nodes oscillate behavior time units 
note experiment 
experiences dependable trust model needs choose comparable maxh intuitively weights history component proportion size maxh 
note experiment uses maxh time period oscillations malicious nodes 
clear dependable trust models trustguard adaptive performs better terms cost paid malicious nodes non adaptive trust model recall cost model section 
entirely maximize cost paid malicious nodes 
node behavior trustguard adaptive non adaptive time trust model small history shows trust values obtained maxh larger time period oscillation malicious node 
clearly having larger history ensures maximize cost paid malicious nodes 
fact observes cost paid malicious nodes maxh equal ratio respectively 
observation tells strategic malicious node knew maxh oscillate period equal time intervals anyway system remember past performance time intervals 
short knowing exact value maxh strategic malicious node start oscillate time period equal maxh minimize cost 
interesting note non adaptive model cost paid malicious nodes close zero values time period behavior oscillation history size maxh 
fading memories evaluate effectiveness fading memories technique efficiently storing performance node maxh intervals logarithmically small number values 
shows effect fading memories malicious node oscillates time period equal time units 
compares dependable trust model trustguard adaptive maxh dependable trust model fading memories trustguard ftv technique 
apparent simple adaptive technique maxh enables bad node recover bad behavior stretched time units just additional time units past performance node simply forgotten time units 
discussed section design principles dependable trust management prevent bad node performed poorly extended period time attain high trust value quickly 
clearly adaptive fading memories technique perform really regard just values record performance node time intervals 
important note solution fading memories bounded effectiveness sense setting node erase malicious past time intervals 
key benefit fading memories approach ability increase cost paid malicious nodes minimal overhead system performance 
node behavior trustguard adaptive non adaptive time trust model large history node behavior trustguard adaptive trustguard ftv time trust model fading memories strategic oscillation models studied cost building reputation different bad node behavior models discussed section 
experiments observed response trust model models ii iii iv functionally identical obtained model 
adversarial point view observed strategies aid minimizing cost paid malicious nodes gain reputation compared model fact cost paid malicious nodes models ii iii iv ratio 
models ii iii malicious nodes pursue malicious activities moment attain high reputation 
model iv malicious nodes slowly degrade behavior benefits see extent misuse xn compared steep sudden fall 
strategic malicious node aware maxh oscillate time period maxh order minimize cost refer equation 
emphasizes goodness dependable trust model capable effectively handling worst vulnerability model oscillation time period maxh 
guarding fake transactions section study feasibility optimistic fair exchange protocol exchanging transaction proofs 
trust value protocol vs optimistic protocol shows percentage fair exchange transaction proofs progress time exchange protocols discussed section trust value fair exchange protocol optimistic fair exchange protocol 
experiment measures percentage fair transactions nodes malicious 
trust value exchange scheme suffers strategic malicious node may gain high trust value initially fake arbitrarily large number transactions unfairly exchanging transaction proofs detected system 
trusted server offline duration optimistic protocol discussed section important decrease amount time trusted third party server online susceptible attackers 
doing increases amount time takes resolve conflict 
percentage fair exchanges fair exchange trust value exchange optimistic fair exchange number transactions fair exchange transaction proofs optimistic vs trust value exchange protocol trust computation error toff cost trust naive trust tvm trust psm table relative cost paid malicious nodes vs toff normalized maxh shown section malicious node exploit delay conflict resolution may ensure malicious activities visible trust management system toff units time 
experiment show transaction success rate varies toff time period trusted third party server offline 
table shows normalized cost see equation paid malicious nodes introduce delay conflict resolution 
normalized toff history size maxh maintained trustguard adaptive trust model see section 
shows order keep cost dropping toff maxh 
note scenario fading memories see section helps system 
fading memories essentially allow history size maxh large duration time trusted third party server offline sufficiently large significantly decreasing cost paid malicious nodes 
guarding dishonest feedbacks section evaluation algorithm filter dishonest feedbacks section 
recall fake transaction guard prevent fake transactions malicious nodes 
simulated settings non collusive collusive setting 
collusive setting group collusive malicious nodes may attempt deterministically boost ratings providing highly positive feedbacks innumerable fake transactions 
figures show error trust computation function fraction malicious nodes system non collusive collusive setting respectively 
observe naive technique average feedback credibility factor computing trust drops linearly fraction malicious nodes 
naive technique tvm approach extremely sensitive collusive attempts number malicious nodes percentage malicious nodes robustness non collusive setting trust computation error trust naive trust tvm trust psm percentage malicious nodes robustness collusive setting small 
hand psm approach remains effective large fraction malicious nodes collusion 
recall psm computes personalized trust value trust value node may different perspective various nodes system 
example trust value node perspective nodes clique may high trust value node seen nodes system low 
similarity metric psm effective overwhelming presence collusive malicious nodes 

related dellarocas provides working survey research game theory economics reputation 
game theory research lays foundation online reputation systems research provides interesting insights complex behavioral dynamics 
related reputation systems help establishing trust entities past behaviors feedbacks research propagating trust entities trust relationship 
yu singh proposed framework gossip protocol 
richardson developed path algebra model trust propagation 
guha developed formal framework propagating trust distrust 
trustguard framework capable algorithms replacing dishonest feedback guard 
domain reputation management systems prep eigentrust emerged 
prep provides protocol top gnutella estimate trustworthiness node 
discuss trust metrics detail evaluations 
extends prep assigning reputation value peers resources 
eigentrust assumes trust transitive addresses weakness assumption collusion problem assuming pre trusted nodes system 
argue pre trusted nodes may available cases 
importantly reputation management systems addresses temporal dimension problem strategic behavior malicious nodes problem fake transactions 
dellarocas shown storing feedback information time interval summarizing feedback information win dow time interval improve reputation system 
result subsumes errors feedbacks nodes behave rationally 
presence dishonest feedbacks bound errors identifying honest feedback dishonest 
experiments show history component helps stabilizing system avoiding transient fluctuations due transient errors dishonest feedbacks 
yu singh suggest refining personal opinions differently cooperation defection achieves certain level adaptivity 
dependable trust model pid controller popularly control theory ad hoc techniques suggested 
lam riedl experimentally studied types shilling attacks recommender systems 
experiments show trustguard resistant random shilling attacks 
part hope model analyze different types shilling attacks reputation systems enhance algorithms counter 
fair exchange protocols prime focus researchers working field electronic commerce 
ray ray provides survey fair exchange digital products transacting parties 
compare various algorithms including trusted third parties true weak fair exchanges gradual exchanges optimistic exchanges 
optimistic fair exchange protocol proposed micali fair contract signing 

trustguard framework building distributed dependable reputation management systems countermeasures detrimental vulnerabilities strategic oscillation guard ii fake transaction guard iii dishonest feedback guard 
trustguard promote modular design add safeguard components replace techniques module having worry rest system 
main contribution threefold 
proposed measure trustworthiness peers current reputation reputation history reputation fluctuation develop formal techniques counter strategic oscillation malicious nodes 
second electronic fair exchange protocol techniques rule possibility faking transactions system 
third developed algorithms filter dishonest feedbacks presence collusive malicious nodes 
demonstrated effectiveness techniques extensive set simulation experiments 
believe trustguard approach efficiently effectively guard large scale distributed reputation system making dependable existing trust systems 

aberer despotovic :10.1.1.16.6889
managing trust peer peer information system 
proceedings th international conference information knowledge management 
castro druschel ganesh rowstron wallach 
secure routing structured peer peer overlay networks 
operating systems design implementation osdi 
damiani di vimercati paraboschi samarati 
choosing reputable network 
proceedings th world wide web conference 
damiani vimercati paraboschi samarati 
reputation approach choosing reliable resources peer peer networks 
ccs 
dellarocas 
digitization word mouth promises challenges online reputation mechanism 
management science 
dellarocas 
sanctioning reputation mechanisms online trading environments moral hazard 
mit sloan working 
douceur 
sybil attack 
nd annual iptps workshop 

discrete event simulation 
springer series operations research 
guha kumar raghavan tomkins 
propagation trust distrust 
proceedings th world wide web conference 
holger vogt henning 
modular fair exchange protocols electronic commerce 
annual computer security applications conference 
kamvar schlosser garcia molina 
eigentrust reputation management networks 
proceedings th www conference 
lam riedl 
shilling recommender systems fun profit 
proceedings th world wide web conference 
micali 
simple fast optimistic protocols fair electronic exchange 
proceedings acm podc 

feedback control theory 
crc press page brin motwani winograd 
pagerank citation ranking bringing order web 
technical report 
ray ray 
fair exchange commerce 
acm exchange 
richardson agarwal domingos 
trust management semantic web 
proceedings international semantic web conference 
liu 
vulnerabilities security issues structured overlay networks quantitative analysis 
proceedings annual computer security applications conference acsac 
xiong liu :10.1.1.13.4475
reputation trust model peer peer ecommerce communities 
ieee conference commerce cec 
yu singh 
social mechanism reputation management electronic communities 
proceedings th international workshop cooperative information agents 
