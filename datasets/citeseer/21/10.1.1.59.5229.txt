reputation trust management networks ali sel uk mark re sat department computer engineering bilkent university ankara turkey cs bilkent edu tr ug bilkent edu tr open anonymous nature network ideal medium attackers spread malicious content 
describe trust management protocol networks users rate reliability parties deal share information peers 
protocol helps establishing trust peers identifying malicious ones 
results various simulation experiments show proposed system highly effective preventing spread malicious content networks 
peer peer network computer network fixed clients servers number peer nodes function clients servers nodes network 
general networking technology uses model considered nntp protocol transferring usenet news wireless ad hoc network term frequently refer file sharing networks internet gnutella fasttrack napster 
focus file sharing systems term refer particular application general concept 
nature architecture file sharing system provides open unrestricted environment content sharing 
openness ideal environment attackers spread malicious content gnutella worm 
reputation systems establish trust members line communities parties prior knowledge feedback peers assess trustworthiness peers community 
known system rating scheme ebay line auction site 
propose reputation distributed trust architecture networks identify malicious peers prevent spreading malicious content 
protocol architecture generation networks suitable operation gnutella kazaa system 
protocol propose described section 
rationale design discussed section 
security extensions basic protocol discussed section 
results simulation experiments testing protocol effectiveness section 
earlier protocols similar scope differences proposal discussed section 
section concludes discussion necessary practical deployment 
basic protocol query file sharing system typically returns different versions queried resource may malicious 
aim protocol distinguish malicious responses benign ones reputation peers providing version 
networks central server typically available protocol relies infrastructure obtain necessary reputation information locally available querying peer 
section give high level description basic protocol 
rationale design choices explained section certain extensions basic protocol discussed section 
resource query query message sent peer search resource specified properties 
query message includes fields query id number denoted qid counter value maintained peer identify queries issues 
response messages sent peers requested resource includes fields id querying peer qid id responding peer rid query id number qid way hash file offered 
response message hashed signed responder 
hash message signed responder serves function challenge challenge response authentication protocol 
inclusion qid rid qid triple challenge guarantees freshness replay attacks 
inclusion rest message signature integrity protection 
way hash file offered included response enable querier identify different versions file group identical ones assess trust level version 
trust assessment receiving responses query querier groups file hash values contained messages trust score calculated group reputation peers provided response 
querier previous information sufficient number peers provide file version trust score version calculated local trust ratings 
group peers provide file known previously selected trust query issued 
responses trust query weighed credibility ratings respondents trust score file version calculated 
trust scores different versions compared highest trust score selected download 
trust evaluation function calculation trust scores described detail section 
trust records ratings system outcomes past transactions stored trust vectors maintained peers download 
peer maintains trust vector peer dealt past 
trust vectors constant length binary vectors bits typically 
bit wrapping qid counter concern hash query message included response 
represents honest transaction represents dishonest 
integer variable accompanies vector specifying number significant bits 
result new transaction written significant bit shifting bits right 
process illustrated 
trust vector significant bits genuine download trust vector significant bits peer update trust vector honest transaction 
example 
trust vector significant bits read bit integer divided conversion scalar trust rating interval 
separate distrust rating computed complement trust vector reasons explained section 
example computation trust distrust ratings shown 
trust vector significant bits trust rating distrust rating computation trust distrust ratings trust vector 
trust evaluation process criterion minimum distrust priority trust comparisons maximum trust 
trustworthy peer group taken highest trust rating lowest rating distrust 
trust evaluation function responses regard resource query arrives querying peer organizes groups file hash value offer group corresponding different version resource queried 
trust score version calculated trust rating peers offering follows threshold specifies number peers considered version trust calculation 
group peers notation known denoting set peers trust record available locally unknown forg known 
denote cardinalities sets nk known nu unknown 
divisor enables distinguishing straight trust vectors length favoring longer honest histories shorter ones 
trust score group calculated locally sufficient local information nk peers known sorted trust rating min trust criterion 
highest ranking peers selected signatures responses verified 
provided signatures verified correctly trust distrust score file version offered determined average trust distrust ratings selected peers 
sufficient information nk set nk random peers unknown denoted queried selected queried 
signatures peers messages verified trust query bearing ids issued 
arrival responses query queried trust rating calculated peer queried 
trust distrust score file version offered determined average trust distrust ratings peers known queried 
evaluation file versions sorted trust scores max trust criterion highest ranking selected download 
point wise safety check trust score file downloaded file offered malicious peers may highest ranking probably due lack alternative versions 
possible threshold allow download files higher trust score distrust 
safer alternative download files zero distrust score may allowed restrictive neighborhoods sufficiently large 
trust query process mentioned trust query issued local information peers offer file 
contents trust query message similar ordinary resource query message responses authenticated fashion 
credibility responses evaluated past records respondents 
results past peer recorded binary credibility vectors 
vectors managed similarly trust vectors represents selected peer signature fails verification replaced highest ranking peer known andthe average calculated accordingly 
nu nk peers unknown selected 
past represents bad 
vectors maintained bit variables converted scalar credibility ratings division wherem number significant bits 
rating computed accordingly complement credibility vector 
threshold specifies number responses considered queried trust calculation 
responses trust query arrives querying peer sorts responses credibility rating senders 
highest ranking responses selected 
signatures selected responses verified 
main piece information contained trust query response respondent trust distrust ratings queried peer 
responses calculation selected authenticated queried trust rating calculated average trust ratings messages weighted net credibility ratings senders responses higher credibility left calculation 
peer issued trust query peer responses peers rk qualify consideration ri trust rating ti credibility ratings ri ci di respectively queried trust score ci di ti 
queried distrust rating calculated fashion respondents distrust ratings operation trust query evaluation protocol illustrated 
file download file version downloaded decided peers provided response selected qos criteria peer trust ratings result overloading trusted peers file downloaded selected peers 
possible peer provided right hash file query fact malicious send malicious file selected download 
correctness hash checked file downloaded completely attacker succeeded wasting bandwidth querier 
multiple sources download common way downloading large files hash mismatch detected file fewer responses total responses selected 
illustration trust evaluation protocol 
response file query different replies received querier interested 
trust comparison versions follows 
process sufficient information available locally providers second version 
trust query issued peer 
calculations version turns better trust score downloaded subset peers 
download identify malicious source possibly reputation honest peers malicious ones 
prevent potential threat describe level hash scheme section detects falsely reported hashes early download 
update trust credibility ratings file download complete user asked judge file benign malicious 
rated benign trust rating peer file downloaded upgraded 
rating peer sent malicious content rating contributed selection downgraded 
difference cases due fact malicious peer may offer right hash query hope selected selected sends malicious content 
merely file sufficient upgrade trust rating 
hand downloaded file turns malicious peers offered file assumed malicious 
update credibility ratings slightly complex peer credibility rating updated file download peer authenticated opinion peer trust rating ended updated result download 
credit rating update direction negative positive determined opinion direction trust rating updated peer trust rating upgraded peer gave positive opinion peer trust rating update opinion negative credibility referring peer upgraded 
downgraded 
important point opinion classified positive negative 
distrust rating priority evaluation trust rating opinion non zero distrust rating considered negative 
opinion positive trust rating zero distrust hand implies trust rating higher considered positive opinion 
design rationale basic trust evaluation process idea feedback peers assess trustworthiness resource peer fundamental characteristic reputation systems 
protocol process carried distributed fashion due lack centralized server systems general 
trust rating calculations opinions peers weighted trustworthiness 
evaluation restricted responses 
purpose preventing low trust responses reliable resource peer supported sufficiently trusted peers limiting number responses authenticated restricted number performance bottleneck 
special feature trust evaluation function separate treatment distrust ratings 
trust distrust ratings derived trust vectors handling distrust ratings separately additional feature letting dishonest dealing erased easily honest transactions closely models real life trust relations single dishonest transaction history significant indicator honest transactions 
important factor considered systems temporal adaptivity ability respond rapidly changing behavioral patterns 
trust rating design binary vectors efficient exponential aging scheme aging factor 
implementing aging scheme fixed length registers floating point arithmetic desirable feature enabling peers history doing certain amount honest community service bad 
note service done person cheated bad transaction record take time erased completely 
number faithful transactions required bad record determined length trust vector 
takes considerable amount time transactions happen pair users reasonable choice 
higher values preferred highly active systems systems cheating considered major 
queried trust evaluation fundamental decision design credibility rating system separate trust ratings 
main risk trust ratings credibility evaluation comes coordinated attacks malicious peers faithful public service build strong reputation credibility supporting spread malicious content 
having separate trust credibility rating systems precludes attacks 
aspect different treatment credibility trust ratings way ranking file trust query responses 
trust ratings ranked min distrust max trust criterion credibility ratings ranked simply rating values 
difference due difference significance negative entry vectors negative entry alice trust vector bob due problematic file served bob past 
hand negative entry alice credibility vector bob necessarily imply bob part may simply due alice bob having different experiences third peer charlie may demonstrating inconsistent behavior possibly specific aim creating peers 
due difference reliability responses trust query ranked credibility ratings min credibility ranking 
safety check discussed section low trust responses may enter top local trust evaluation decided top responses trust query evaluated credibility rating higher 
accordingly factor weighting trust query responses equation taken net credibility ratings ci di credibility ratings 
file download update ratings file version downloaded decided peer download selected randomly offered version regard trust ratings 
way selection desirable feature enabling new peers build reputation overloading trusted peers 
explained section update trust ratings download limited peers file downloaded case file malicious authenticated file 
main reason decide conclusively peers involved 
due reason credibility ratings updated peers authenticated trust rating updated result download 
note trust query top responses authenticated regardless net credibility rating positive negative despite fact responses negative rating calculations 
necessary give peers zero negative net credibility rating chance upgrade ratings 
opportunity possible new peers build credibility credibility system totally useless 
similarly possible peers got negative entry credibility history turn ratings positive 
may argued credibility ratings reliable trust ratings better trust ratings place 
trust ratings may better uncoordinated attacks useless attackers coordinate discussed earlier section 
established peers high credibility tiny caused inconsistent peer ranked lower peer credibility 
security extensions section discuss extensions basic protocol provide secure reliable trust information presence active attackers 
key management system digital signatures authentication critical messages 
core trust issue public key systems ascertain public key received line belongs claimed party 
classical solution problem trusted certification authorities may option systems totally decentralized 
hand systems pseudonym systems question bind public keys pseudonyms real life identities 
natural solution public key peer 
rsa system example public exponent modulus pair taken pseudonym entity 
system question public key authenticity trust information certain pseudonym verified 
denial service protection requirement responding relevant query digital signature excessive burden peers 
easily exploited denial service attacks attackers continually issuing high match queries 
protect threat puzzle scheme adding extra round protocol initial response file hash sent signature 
responding peer includes puzzle solved querier finding string md output matches certain value answered correctly signature issued 
querying peer decides file versions genuinely interested solves puzzles limited number respondents version 
avoiding fake file downloads avenue attack sending malicious files provide hash benign file process selected download source send malicious file download 
attacks detected hash downloaded 
bandwidth downloader wasted pseudonyms desired uniform length id number way hash public key 
exactly purpose certain attacks decoy files 
effective protection compare hash blocks file download progress 
merkle hash trees provide solution sort 
alternative hash scheme possible suitable protocol 
alternative scheme hash file computed stages file divided segments certain size hash segment computed separately hash file computed hash segment hashes 
computational overhead method extra hash computation segment hashes insignificant segments sizes reasonably large 
believe segment size kb mb range reasonable choice networks 
trust evaluation protocol new hashing scheme simple modification file version download selected querier contacts peers provided selected hash requests detailed hash file 
receiving response verifying correctness peer proceeds download file possibly multiple sources 
download hash checked downloaded segment connection canceled mismatch occurs 
note attacker sends fake segment download delay detection benign segments downloaded point problem saving time bandwidth spent 
problem free riders problem quite different theme may benefit architecture problem free riders peers system download content serve peers 
users kazaa file sharing systems system free riders 
tackle problem discourage free riding systems determine priority service reception peer amount service peer provided past 
service information typically provided software client peer easily send highest possible value 
alternatively centralized solutions proposed server keep track amount service provided received peer may possible option systems totally decentralized 
trust record system provides natural distributed infrastructure assess service level peer time download priority download determined number trust vector server peer maintains client peer 
local information insufficient trust query issued service score calculated top responses 
trust score calculation ranking responses solely credibility sources credible respondents may possibly received service client peer 
combination credibility ratings provided service scores 
simulation experiments tested performance protocol simulations various attack scenarios 
possible exhaust potential attack types testing protocol variety attacks gives idea effectiveness protocol 
types attackers considered simulations naive responds query malicious version requested file acts reliable peer time occasionally tries send malicious file collaborative collaborate trust queries expressing positive opinion malicious peers negative opinion change pseudonym periodically escape recognition attackers hardest detect prevention possible honest peers build sufficient level trust collaborators peers supported group collaborators normally act trustworthy peers build trust communities give strongest support malicious peers receive relevant trust query 
simulated networks operate decentralized routing structure 
peer linked certain number neighbors query attack scenario meaningful collaborators malicious support trust queries effective peer receive support clean history neighborhood changing identity periodically 
peer identified malicious support trust queries irrelevant observed 
message issued peer propagated links certain number hops specified ttl 
simulations run common parameters number peers number distinct files number files peer initially holds number links peer ttl ratio malicious peers length trust vector bits number peers files network determined capacity system 
number connections peer ttl chosen area covered peer reachable neighborhood reasonable fraction network case 
malicious ratio represents high concentration malicious peers scenario probably closer real life situation 
simulation run regular users file requests periodically uniform distribution 
requested file available locally action taken 
resource query message issued protocol proceeds described section 
malicious peers may issue file queries basically obtaining genuine files confidence building 
malicious peers limited databases send genuine file responses free respond query maliciously 
observed user behavior file sharing systems show zipf distribution users grouped categories interests category highly popular files large number popular ones 
simulations expected give better results run zipf distribution positive correlation users behavior result rapid trust establishment users category 
preferred stick uniform distribution favors protocol file requests uniform distribution system attackers able respond queries 
simulation results results simulations shown figures metrics evaluate performance ratio malicious downloads downloads success ratio malicious attempts ratio malicious downloads malicious responses figures point shows value statistics measured plotted point cumulative progress system shown terms total number file downloads 
simulations take denoted 
query time average time consecutive file queries peer basic unit simulation time 
main characteristics demonstrated experiments summarized follows protocol quite effective preventing malicious downloads reduce attacks effectiveness zero short time depending sophistication attackers 
large degree protection obtained just evaluating trusted response 
setting helps sophisticated attackers 
gain negligible 
protocol similarly effective malicious peer density 
downloads mal mal downloads mal mal simulation results naive attacker type 
attackers identified inhibited rapidly 
performance depend 
downloads mal mal downloads mal mal simulation results collaborator attacker type 
performance marginally better naive attackers reasons discussed earlier section 
support trust queries effective peer receive support clean history 
effective attack scenario seen collaboration carried coordination 
downloads 
mal mal downloads 
mal mal downloads 
mal mal downloads 
mal mal downloads 
mal mal downloads 
mal mal simulation results attackers try send malicious file certain number honest uploads 
parameter specifies rate attackers 
attacker tries send malicious file honest uploads 
results show detection attackers take longer attacker types level effectiveness significantly lower 
values tested best attack performance obtained downloads forp 
mal mal downloads forp 
mal mal downloads forp 
mal mal downloads forp 
mal mal downloads forp 
mal mal downloads forp 
mal mal simulation results attackers adopt new identity periodically 
parameter specifies period identity change 
attacker adopts new identity 
attacker type hardest detect prevent 
ability spread malicious content converges zero peers get know build trust 
downloads forp 
mal mal downloads forp 
mal mal downloads forp 
mal mal downloads forp 
mal mal downloads mal mal forp 
downloads forp 
mal mal simulation results attackers collaborators 
malicious peers try spread malicious content peers collaborators normally act trustworthy peers build confidence communities give full support malicious peers trust queries collaborator ratio probably high realistic chosen guarantee presence collaborator neighborhood attacker order attacks effective 
attack type somewhat effective effectiveness converge zero peers build trust 
comparison related earlier number protocols proposed reputation trust management systems 
section discuss briefly comparison protocol 
earliest works area protocol aberer despotovic aims identify dishonest peers complaint system 
shortcoming protocol maintains negative feedbacks providing means trustworthy peer distinguished newcomer 
trust evaluation simplistic classifying peer trustworthy untrustworthy 
maintenance grid architecture required top existing structure 
interesting protocol eigentrust scheme proposed kamvar evaluating trust information provided peers trustworthiness trust ratings credibility 
evaluation process interesting normalization assumption trust ratings held peer normalized sum equals 
normalization interesting properties mathematically resulting trust matrix markov matrix global trust rating computation converges principal eigenvector matrix name eigentrust desirable consequences normalization significant trust information lost identical trust ratings database normalized value original values highest possible ratings lowest single non zero rating database normalized regardless value 
protocol specifically addresses issue computing trust score alternative file versions obtained query described damiani 
similar proposal scope protocol different major aspects protocol goes phases message exchanges download start resource query voting similar trust query verification votes verification hash file selected download 
voting vote verification protocols cryptographic authentication relies ip addresses messages authenticity making vulnerable active attacks 
votes evaluated consideration credibility trustworthiness voters 
quantitative trust metric specified choosing alternative files download 
important contribution idea maintaining reputations resources peers discussed section 
study different relevant scope xiong liu trust evaluation commerce communities 
emphasizes points reputation systems rating scheme complaints opinions matter evaluated credibility providers 
peer behavior different contexts evaluated differently 
feedbacks small large transactions weighted differently size transaction 
deal specifics functions protocols trust evaluation 
simulations experimental rating scheme modified scheme grids 
final considerations improvements possible basic protocol efficient 
example timer mechanism detect remove trust vectors belonging peers longer active 
trust queries efficient combining ids queried single query message reducing number query response messages handled 
protocol maintains bit trust credibility vectors suitable part information different purposes 
example evaluating trust responses come peers may desirable take transactions account 
potential improvement basic protocol may realized preserving hashes malicious files downloaded 
hashes send warning querying peer relevant query received 
idea originally proposed similar context 
protocol enhanced include feature modifications warning messages received query grouped normal responses file hash value 
selected top trust evaluation warning message trust distrust ratings reversed trust score calculation contributing significant distrust factor average 
limitations protocol noted 
reputation protocol system relies judgment users 
effective attacks discernible user 
attacks systems fall category common decoy files attacks 
point note protocol distinguish malicious peers peers spread malicious content due believe right way deal careless peers practical point view 
careless peer ability improve reputation serving sufficient number files corrects attitude 
protocol designed compatible generation systems 
certain optimizations needed obtain best performance integrating specific system 
example gnutella network peer connections changed constantly provide rapid distribution content network building reliable reputation base take long malicious peer escape recognition long time due constantly changing neighborhood 
system connection scheme peer change continually content distribution possibly determined longest prefix match id remain relatively stable trust management effective faster trust establishment 
detailed simulations consider kind specifics network protocol deployed sophisticated modeling attackers network possible vulnerabilities needed get realistic evaluation proposed architecture deployment actual system 
acknowledgments kara san kindly letting information networks lab high performance workstation simulations 
aberer despotovic 
managing trust peer peer information system 
ninth international conference information knowledge management cikm 

aura 
authentication client puzzles 
security protocols th international workshop 
springer verlag 
bbc online 
record industry net pirates 
news bbc uk hi entertainment stm 
cohen 
incentives build robustness bittorrent 
workshop economics peer peer systems 

damiani di vimercati paraboschi samarati 
reputation approach choosing reliable resources peerto peer networks 
proc ofthe computer communications security 

ebay 
www ebay com 
gupta judge ammar 
reputation system peer peer networks 
proc 
nossdav 

kamvar schlosser garcia molina 
eigentrust algorithm reputation management networks 
proc 
twelfth international world wide web conference www 

merkle 
protocols public key cryptosystems 
proceedings ieee symposium security privacy 

friedman kuwabara 
reputation systems 
communications acm 
symantec 
symantec com data gnutella html 
xiong liu 
reputation trust model peer peer ecommerce communities 
ieee conference commerce cec 

