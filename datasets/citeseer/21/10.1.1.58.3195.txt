genetic algorithm neighbor selection strategy hybrid peer peer networks simon koo george lee kannan school electrical computer engineering purdue university west lafayette school management purdue university west lafayette email koo purdue edu bittorrent popular open source hybrid peer peer content distribution system conducive distribution large volume contents 
propose genetic algorithm neighbor selection strategy hybrid peer peer networks enhances decision process performed tracker transfer coordination 
investigate strategy affects system throughput distribution efficiency peer contributions 
show computer simulations increasing content availability clients immediate neighbors significantly improve system performance trading users satisfaction 
proposed strategy significantly improve efficiency distribution especially low connectivity peers suitable deploy online decisions 
keywords peer peer networks neighbor selection strategy genetic algorithms overlay networks content distribution 
napster peer peer technology changed landscape content sharing 
different applications gnutella kazaa edonkey registered millions users past years 
applications focus scalability robustness system anonymity users 
provide efficient content search mechanisms peers easily locate content want networks 
technology provide low cost solution content distribution content providers especially provide large volume contents distribution usually choose expensive solutions cdn content distribution networks 
reasons aforementioned applications primarily designed sharing files mp images megabytes size 
search time key factor distribution efficiency transmission time relatively short 
large volume contents multimedia documents scientific data sets transmission time increasingly critical system 
furthermore applications designed enhance anonymity file sharing difficult track list users downloaded content 
content requires subscription may desirable choice due lack functionality accounting 
bittorrent bt release popular content distribution applications potential handle problem serve agent distribution large volume contents 
fact linux distributors debian mandrake bt distributing versions linux 
bt hybrid network central entity necessary provide parts network services 
tracker central entity system major functions collect statistics coordinate connections enable peers exchange pieces 
particular tracker replaces content searching process selecting partial list neighbors peers downloading content allowing form overlay network 
key feature bt conducive distribute huge files bt divides content pieces allowing peers exchange pieces complete file 
mechanism demonstrated improve efficiency exchanges 
intuition content broken pieces exchange takes shorter time peer begins upload neighbors simultaneously downloads community 
specified bt protocol peers upload content pieces receive content 
properties reduce existence forcing contribute improve system performance 
investigate neighbor selection problem hybrid network 
model peers nodes undirected graph try determine connections proportion contents possesses goal maximize availability content peers immediate neighbors 
propose genetic strategy achieve objective validate computer simulations proposed strategy performs better current random strategy bt terms system throughput average downloading experienced users 
particular proposed strategy improves efficiency distribution peers slow connections better utilizing resources contributed high connectivity peers 
noticed studied bt results applicable hybrid networks general 
rest organized follows describe operations bt section ii 
formulation neighbor selection optimization problem description genetic algorithm approach section iii 
experimental setup performance evaluation described discussed section iv 
summarize direction section ii 
operation bittorrent networks typical bt network involves components tracker peers contains entire content 
information tracker content tracker located content broken pieces put encoded form torrent file 
torrent file needs downloaded content provider websites third party sites promote content downloading actual content 
file contains url tracker hash information pieces verify integrity content 
peers information torrent file check content pieces downloaded 
analogous server conventional clientserver model entire content available download 
supplier peers 
peers downloaded complete pieces content assist distribution process uploading pieces peers system significantly reduce load 
client joins network contact tracker register step 
tracker decision select subset peers network downloading content step return selection client neighbors step 
receiving list client contact neighbors directly involving tracker upload download step 
peers network refresh neighbor list repeating steps periodically 
behavior bt peers step interesting relevant discussion 
seconds peer analyzes average downloading rate experienced neighbors 
decides neighbors wants prohibit uploading data called 
tat mechanism free riding 
addition peer performs optimistic unchoking unchokes allows uploading neighbors regardless neighbor download rate 
process rotated neighbors seconds 
current version bt peer provides tracker total number bytes downloaded far requests list neighbors 
information currently purpose generating statistics intend decision process 
clearly system peer periodically reports updated list content pieces inventory feasible may lead better neighbor selection strategy 
system obviously load tracker excessively scalability issue 
reason choose total number bytes downloaded decision process 
furthermore numerous versions bt client applications different features running compatible protocol communicating tracker choose focus improving existing implementation 
iii 
proposed neighbor selection strategy bt network networks control peer behavior difficult impossible implement entirely optimal strategy tracker 
discussed section ii bt incentive compatible mechanism encourage peers share capacity assume uplink throughput peer bt limited factors content availability physical connectivity limitation 
intuitively desirable select peers mutually disjoint collection content pieces neighbors assure maximum content availability improve throughput system 
model problem undirected graph try determine connections nodes peers 
problem formulation fixed number peers graph denote overlay network set vertices vn represents peers set edges eij represents connectivities eij peers connected eij 
undirected graph required eij eij entire collection content pieces denote ci collection content pieces peer 
assume peer connected maximum di neighbors di define ij sets ij eij ij null set 
disjointness contents peer peer denoted ci cj ci cj ci ci cj denotes intersection operation sets 
disjointness interpreted collection content pieces peer peer 
words denotes pieces peer upload peer disjointness operation commutative 
denote ci cj cardinality ci cj number content pieces peer contribute peer order maximize disjointness content pieces want maximize number content pieces peer contribute neighbors determining connections eij optimization problem subject max ci cj ij eij di denotes union operation sets 
union operation requires additional manipulations simplification order performance index proposed neighbor selection strategy 
current bt protocol peer sending amount content bi downloaded megabytes tracker oppose information list content pieces tracker complete information evaluate objective function 
need approximations order evaluation objective function 
bt divides content pieces equal size piece file size approximate pi proportion content peer changing current bt client protocol pi bi ci assume piece content equally appear peer ci cj value ci cj distributed 
xij hypergeometric random variable representing value ci cj number pieces probability mass function xij cj cj xij ci ci 

xij expected value xij approximately equal cardinality disjointness ci cj 
ci cj xij cj ci ci cj pi pj cardinality union contents possessed peers connected ci cj ci cj ci cj ci cj approximate proportion content available ci cj equations ci cj cj ci cj pj pi pj function pi pj eij pj pi pj eij denote proportion total content union contains peers connected 
function reduces pj connected eij 
define recursive function gj pn gj gj pj 
function gj interpreted proportion total content contains union cj ci eij gj ci ij cj ci cj ci cj mutually exclusive ci ij ci cj ij ci cj ij write gj ci cj ij ci cj ij cj cj cj ci cj ij rearranging terms ci cj ij gj pj pj cj optimization problem subject max gj pj eij di optimization problem solved integer programming ip 
known integer programming imposes large overhead computation desirable systems require real time decisions 
improve computational efficiency genetic algorithms heuristics solve optimization problem 
genetic algorithm approach genetic algorithms ga stochastic search technique mechanism natural selection genetics evolutions 
proven effective tool solve complex search problems large solution spaces 
excellent practical applications genetic algorithms 
genetic algorithms start initial set random solutions called initial population 
individual population called chromosome encoded string symbols representing solution may feasible infeasible 
particular chromosome problem string bits corresponds solution values eij problem 
eij eij need bit string length represent solution 
input parameters number peers network number iterations ga perform returning solution 
algorithm pop size fixed experiments 
initialization procedure generate genetic algorithm pop size initialization max value solution nil iterations iterations crossover mutation evaluation max max value max value max solution argmax iterations iterations return solution random undirected graph nodes 
crossover mutation realization standard crossover mutation procedures ga detailed pseudo codes sub procedures omitted 
crossover rate mutation rate fixed respectively 
values affect rate convergence chosen trials 
evaluation procedure measure fitness solution set 
returns array stores value objective function problem computed solution 
defined zero infeasible solution 
max returns maximum values elements array argmax returns argument achieves maximum 
interested comparing performance proposed neighbor selection strategies random decision implemented current version bt 
interested evaluating performance ga decision process alternative ip 
performed simulations frameworks different strategies results discussed section 
simulation model iv 
experimentation ns package simulate framework 
setup peers classes class mbps bi directional link representing campus lan hosts 
class kbps uplink mbps downlink representing adsl hosts 
class kbps bi directional link representing dial hosts 
number peers class set 
results reported obtained assuming peers class class class 
simulated peer compositions simulation results shown section demonstrate typical trend 
arrival pattern peers taken real traffic trace tracker running internet departure peers completion download followed exponential distribution 
simulation considered class peer file size mb volume cd rom divided pieces kb distribute 
model intermediate network assumed capacity bottleneck hop outgoing capacity sender incoming capacity receiver cause congestion 
peer connected neighbors di 
strictly ensures power law graphs formed process 
bandwidth tracker assumed abundant neighbor selection process done offline computation overhead imposed strategy assumed negligible allowed focus efficiency data transaction 
decision process peers followed standard bt operations 
neighbor selection decisions latest information available tracker state information date random decision strategy information 
compare performance strategy existing strategy metrics system throughput average downloading time 
system throughput defined number bytes including handshaking bytes uploaded peers second 
measures speed content distributed 
metric average downloading time experienced peers completely obtain content 
parameters clearly depend behavior peers network conditions incentive compatibility design incentive compatible scheme interesting addressed see issues related design incentive compatible mechanisms 
analysis assume peers employ standard bt tit tat mechanism unchoking described section ii honestly report amount content received 
computer simulation results simulated decision strategies random selection ip selection ga selection ga ga ga 
ga means decision iterations genetic algorithm 
correspondingly ga ga indicate neighbor selection decision iterations respectively 
simulation result shown 
minutes random ip strategies similar performance throughput increases time 
reason similarity period corresponds phase network original 
period new unseen piece content uploaded peers 
peers system throughput mbits sec ip ga ga ga random time minutes fig 

comparison different neighbor selection strategies 
system throughput mbits sec vs time minutes shown 
new piece neighbor selection strategy play important role 
increase system throughput observed minutes direct consequence increase demand 
new peers joined network time time created demand content pieces time time pieces sent long ago available peers 
demand created initiate existing peers start serving turn boost system throughput 
true seeding phase peers downloaded complete content left system increment 
minutes significant difference system throughput random ip 
reasons account difference random strategy neighbors 
capacity corresponding fully utilized 
new peers possess little content grouped random strategy 
case supply pieces limited 
increasing content availability immediate neighbors ip improve chance getting particular content pieces 
comparison average downloading time 
compare average downloading time peers enter system seeding period measure affected seeding process 
table shows average downloading time different classes peers implementation different neighbor selection strategies differences random ip ga average downloading times class peers statistically insignificant 
classes significant improvements ip ga deployed random 
cause improvement due table average downloading time minutes peers different classes 
variances shown parentheses 
random ip ga class class class fact lower class peers penalized bt tit policy 
relatively low upload capacities served neighbors 
major chance getting content pieces neighbors optimistic unchoking phase strategically selecting neighbors improved 
proposed strategy improves efficiency distribution low connectivity peers better utilization resources contributed peers high connectivities 
important aspect result fact improved average downloading time simultaneously improved system throughput 
random ip ga class uplink contribution random ip ga class fig 

upload download ratio peers different classes contribution uplink capacity percentage different classes 
presents average upload download ratio different classes peers different strategies 
ga neighbor selection strategies class peers higher original 
mentioned neighbor selection strategy boosts content availability class peers faster upstream links send pieces neighbors unchoking period selection process increases disjointness content peers 
see slight improvement class peers due reason 
class peers reduced ga selection strategies 
explained consequence increased class class peers 
class peers slow serve small number pieces neighbors unchoking period 
unchoking periods neighbors received lot content pieces class class neighbors disjointness content peers neighbors significantly reduced upload neighbors don neighbors need 
direct measure amount data peer sends 
different classes peers different connectivities kbps contribution class peer significant kbps contribution class peer peers perspectives 
shows different measure contribution capacity contributed different classes percentage respective uplink capacities 
ga selection strategies increased peers contribution random selection strategy essential networks 
note contribution capacities classes increment implementation ga strategies including class 
increment shown class despite reduction explained largely reduced downloading time implication long peer stayed system 
genetic algorithm guaranteed provide optimal solution iterations 
online decision problem shorter decision times desirable important know rate convergence ga optimization problem unnecessary iterations performed 
shown performance ga terms system throughput improves number iterations increases 
shows percentage difference system throughput ip ga versus number iterations 
shows error iterations error negligible number iterations reaches 
difference system throughput seeding period number iterations fig 

convergence genetic algorithm neighbor selection strategy 
terms computational overhead ip higher ga suitable making online decisions 
general purpose pc running cplex solve ip problem peers took minutes reach solution 
time taken ga solve optimization problem second 
considering performance ga virtually identical ip practical implement ga tracker strategy real time online decisions 
genetic algorithm neighbor selection strategy bittorrent hybrid system 
shown computer simulations proposed strategies increase content availability immediate neighbors improve system throughput significantly trading distribution efficiencies 
contributions resources different peer classes improved 
performance genetic algorithm strategy resembles integer programing strategy suitable making real time decisions 
noticed studied bt results applicable hybrid networks general 
studies assume peers honestly report amount data received 
reality peers may especially take advantage system reporting false information 
ongoing research plan investigate incentive compatibility cheat proofing ga mechanism ability handle malicious users 
direction measurement studies 
bt open source application plan implement ga selection strategy described collect traffic statistics real content distributions allow better understand network dynamics 
cohen incentives build robustness bittorrent proc 
workshop economics peer peer systems berkeley ca june 
online 
available org bittorrent file sharing new face new york times february 
yang de service capacity peer peer networks proc 
infocom hong kong mar 
definition peer peer networking classification peer peer architectures applications proc 
international conference peer peer computing ping sweden aug pp 

devore probability statistics engineering sciences th ed 
duxbury 
gen cheng genetic algorithms engineering design st ed 
interscience jan 
network simulator ns online 
available www isi 
edu nsnam ns koo rosenberg xu analysis parallel downloading large file distribution proc 
th ieee international workshop trends distributed computing systems san juan puerto rico may 
lai feldman stoica chuang incentives cooperation peer peer networks proc 
workshop economics peer peer systems berkeley ca june 

ngan wallach druschel enforcing fair sharing peer peer resources proc 
nd international workshop peer peer systems iptps berkeley ca feb 
trading trust tokens stamps proc 
workshop economics peer peer systems berkeley ca june 
lam 
li concentration networks iterative cells proc 
international conference parallel distributed computing applications technologies hong kong may pp 

krishnan smith economics peer peer networks journal information technology theory application vol 
pp 

