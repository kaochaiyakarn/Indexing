planning concurrency purely logical framework planning bring sequential parallel composition plans level process algebras 
problem expressing causality challenging common logics traditional deductive systems solved resorting developed extension multiplicative exponential linear logic self dual noncommutative operator 
encoding conjunctive planning problems logic provide constructive soundness completeness result 
argue crucial step uniform deductive formalism connects planning concurrency inside common language allows transfer methods concurrency planning 
key words planning concurrency proof theory concurrency planning fields computer science evolved independently aiming solving tasks similar nature different perspective planning formalisms focus finding plan process exists plan solves planning problem focus process algebra queries nature universally quantified dead lock freeness verification security protocols 
requires arsenal mathematical methods bisimulation respects parallel behavior actions allows analysis equivalence processes 
process algebra parallel sequential composition level equivalently important notions expressing concurrent processes 
planning emphasis sequential composition 
parallel behavior actions studied partial order planners graph plan approach aiming performance improvement investigations remained distant underlying logical framework 
kautz planner called blackbox combines features graph plan intention parallel behavior different approaches concurrent actions logical ai literature concurrency defined parametrized time spans shared actions 
ozan computer science institute university leipzig international center computational logic tu dresden email ozan informatik uni leipzig de planning logical satisfiability 
approach resulted better computational performance provide logical analysis plans 
overview approaches 
establish crucial step long term goal providing purely logical common language planning concurrency inside uniform deductive formalism 
way possible import techniques concurrency planning provide structural analysis plans 
similar ideas previously brought pym abstracting away conditions effects actions propose process algebra method reasoning actions argue method compare plans 
perspective captures conditions effects actions resources crucial concurrency point view 
linear logic resource conscious logic natural candidate task weakening contraction controlled multiplicative conjunction idempotent provable conjunction classical logic idempotent 
furthermore linear logic widely recognized logic concurrency see 
parallel composition mapped commutative par operator linear logic sequential composition find natural interpretation 
respect resource consciousness relation logic actions causality studied various authors bibel imposes syntactical condition called linearity proofs requires literal engaged connection 
multiset rewriting lldobler introduce equational horn logic states represented ac function symbol 
applies multiplicative fragment girard linear logic resource conscious planning axiomatizing actions proper axioms 
linear logic approach planning studied various authors 
shown equivalent approaches 
elaborate linear logic approach planning aiming providing common language planning concurrency 
purpose employ system calculus structures 
calculus structures proof theoretical formalism generalization sided sequent calculus gain interesting proof theoretical properties 
conceived represent logical system conservative extension multiplicative linear logic self dual non commutative operator called seq 
system extension exponentials linear logic 
words system extension multiplicative exponential linear logic self dual non commutative operator seq 
systems designed sequent calculus shown tiu 
showed correspondence system fragment process algebra sequential composition corresponds noncommutative operator seq 
parallel composition naturally mapped commutative linear logic operator par 
terminating computation process algebra corresponds proof process expression prov able corresponding terminating computation 
case actions labels included language resources consumed produced actions 
encoding conjunctive multiset rewriting planning problems language plans extracted proof planning problem explicit premises derivations analogous process expressions exploiting non commutative operator seq commutative logical operator par system able observe plans parallel behavior plans respected 
allows system give complete operational semantics method 
way establish step uniform formalism connects concurrency planning possible transfer methods concurrency planning 
rest organized follows notions notations conjunctive planning problems system encoding conjunctive planning problems language show encoding correct plans sequences actions 
extend correctness result plans include parallel composition 
elaborate approach conclude discussions 
space restrictions permit give complete proof theorems refer 
planning problems planning domain set constants representing atomic properties world call fluents denote small letters set transition rules actions multiset rewrite consider propositional actions 
multisets denoted curly brackets 
denote multiset operations corresponding usual set operations respectively 
rules states multisets fluents 
conjunctive planning problem multiset fluents called initial state 
multiset fluents goal state 
finite set actions form multisets fluents called conditions effects respectively name action 
set fluents appear action applicable state iff application action state defined function follows 
goal satisfied iff plan structure sequence actions transforms initial state state solution planning problem say solves denote empty plan convenient abbreviated length plan number actions plan 
exists plan illustrate theory planning problem look example modification example 
suppose bert thirsty wants get vending machine 
costs cents 
bert dollar bill pocket 
vending machine accepts cents coins bert get change dollar 
problem getting described planning problem initial state actions allow change dollar cents coins buy respectively 
goal state bert got clearly solution problem plan bert changes dollar buys applying plan initial state yields state goal contained state planning problem solved 
calculus structures section calculus structures system conservative extension multiplicative exponential linear logic non commutative operator 
countably atoms denoted structures language denoted notion structure similar notion formula sequent sequent calculus 
structure denotes equivalence class structures 
fore formal elaboration notion refer reader 
associativity commutativity singleton units exponentials negation 
equational system underlying system generated stands atom unit atom 
structure par structure times structure seq structure called course structure called structure negation structure structures considered equivalent modulo relation smallest congruence relation induced equations shown 
structure context denoted structures hole appear scope negation 
structure substructure context 
context braces omitted ambiguity possible 
calculus structures inference rule scheme kind name rule premise 
typical deep inference rule shape specifies step rewriting implication inside generic context linear implication case 
inference rule called axiom premise empty 
rules empty contexts correspond case sequent calculus 
formal system set inference rules 
derivation certain formal system finite chain instances inference rules system 
derivation consist just structure 
topmost structure derivation called premise derivation bottommost structure called 
due duality rules come pairs dual rules version version 
instance dual rule cut rule 
consider rules rules including cut rule admissible 
derivation premise 
system inference rules written simi denote proof finite deriva tion topmost inference rule axiom 
system called non commutative exponential linear logic system rules system unit atomic interaction seq promotion weakening absorption 
system cut rule shape theorem cut elimination 
rule admissible system words proof theorem decomposition 
derivation system derivation seen bottomup system applied 
proof straightforward correspondence structures involving seq formulae multiplicative exponential linear logic 
example corresponds vice versa 
units mapped rules added proof results detailed discussion proof theory precise relation reader referred 
planning section encoding planning problems language show correct respect conjunctive planning problems 
definition 
sequential action structure action denoted structure definition 
simple problem structure initial state goal state structure action executed arbitrarily times employ exponential retains controlled contraction weakening action structures 
way duplicate action structure applying rule annihilate applying rule search plans 
allows interaction planning problems actions explicit prefixing planning problem structure applying rule proof search allow action struc ture get inside interact problem structure 
define planning problem language definition 
planning prob lem 
sequential conjunctive planning problem structure shortly denoted structure sequential action structures actions simple problem structure reconsider conjunctive planning problem section 
planning problem expressed 
structures tial action structures actions respectively 
structure simple problem structure initial state goal state correspond structures show searching certain kind derivations planning problem equivalent finding solution planning problem 
lemmata formally express operational semantics reaching goal state applying action state language respectively 
lemma 
rule called termination derivable lemma 
rule called action derivable employing rules bottomup search plans going derivation rule applied till multiset negative atoms course structure denoting simple problem structure multiset positive atoms rule applied 
annihilating course structures sequential action structures excessive resources rule derivation give plan structure premise solution planning problem 
theorem proves encoding correct 
theorem 
conjunctive planning problem derivation iff plan solves sketch proof part proof induction length plan premise derivation 
base case follows lemma 
inductive case follows lemma theorem 
part induction length plan 
take derivation constructed part 
illustrate ideas return running example 
observe derivation 
plan structure premise solution planning problem 
parallel plans sequential composition due non commutative seq operator language allows express parallel composition plans actions employing commutative par operator 
section extend notion plans notion parallel plans show encoding planning problems allows capture parallel behavior plans 
definition 
parallel plan structure structure generated denotes atoms representing actions 
proposition 
planning problem plan solves planning problem solved sketch proof follows immediately definitions section 
proposition 
states plan 
iff sketch proof induction length lemma 
states plans 
furthermore structures actions equivalent 
sequential action sketch proof proposition assume holds hold 
case fluents consumed contradicts derivations 
observe implies take derivation 
theorem prove result 
derivations definition 
parallel plan structure solves planning problem derivations plan structure solves illustrate ideas return running example 
time bert thirsty hungry 
equipped action allows get candy bar cents vending machine problem 
candy bar lunch happy 
consider respectively sequential action structures actions get candy bar lunch respectively 
easy observe parallel plan structure solves planning problem 
theorem formally justifies derivation provides parallel plan structure premise 
theorem 
planning problem parallel plan structure solves planning problem derivation form 
sketch proof plan structure derivation theorem derivation theorem derivation form sequential action structures actions remains prove derivation construct derivation structural induction take plan solves proposition theorem give derivation plans solve lemma theorem give derivation corollary 
planning problem parallel plan structure solves planning problem structure proof sketch proof result follows immediately theorem 
discussion encoding conjunctive planning problems language plans extracted proof derivation explicit premises derivations 
furthermore showed encoding expressive capture plans parallel behavior actions captured 
direct consequence establishment bridge concurrency theory planning possible employ methods form concurrency lines 
connection concurrency labeled event structures les 
les model concurrency studied class linear logic proofs 
les causality events expressed partial order non determinism obtained conflict relation 
les focuses events relations abstracting away states 
way provide behavioral model concurrency 
framework conjunctive planning problems expressed structures multiplicative exponential linear logic calculus structures provided algorithm extract partial order plans exhibit les semantics proofs structures 
way established explicit correspondence partial order plans proofs 
parallel plans derived observed free partial orders partial order plans extract linear logic proofs restricted free partial orders 
objective associate planning problem les represents independence causality actions different derivations produced search proof planning problem 
concurrent model possible computations 
includes general comparison methods 
implemented proof search systems calculus structures planner implements ideas lines 
implementations mainly system maude available download 
moment plausible planning problems toy size 
acknowledgments supported dfg 
lutz stra burger provided previous version encoding planning problems alessio guglielmi steffen lldobler lutz stra burger 
wolfgang bibel 
deductive solution plan generation 
new generation computing pages 

blum furst fast planning planning graph analysis 
artificial intelligence volume pages 

paola 
purely logical account sequentiality proof search 
peter stuckey editor logic programming th international conference volume lecture notes computer science pages 
springer verlag 
partial order free iff implies www informatik uni leipzig de ozan maude cos html clavel dur eker lincoln mart oliet meseguer talcott 
maude system 
robert nieuwenhuis editor rewriting techniques applications proceedings th international conference volume 
springer 
cresswell smaill richardson 
deductive synthesis recursive plans linear logic 
ecp 
jean yves girard 
linear logic 
theoretical computer science 
gro lldobler 
linear deductive planning 
journal logic computation volume pages 

alessio guglielmi 
logic programming linear logic independence causality order calculus 
phd thesis universita di pisa genova 
alessio guglielmi 
system interaction structure 
technical report wv tu dresden 
appear acm transactions computational logic 
alessio guglielmi lutz stra burger 
noncommutative extension mell 
baaz voronkov editors lpar volume lecture notes artificial intelligence pages 
springer verlag 
hoffmann 
utilizing problem structure planning local search approach volume lnai 
springer verlag 
lldobler 
new deductive approach planning 
new generation computing pages 

ric 
classical ai planning theorem proving case fragment linear logic 
aaai fall symposium automated deduction nonstandard logics pages palo alto california 
aaai press publications 
ozan 
implementing system bv calculus structures maude 
laura alonso paul gr editors proceedings esslli student session pages universit henri poincar nancy france 
ozan 
new logical notion partial order planning 
technical report tu dresden 
ozan 
plans formulae non commutative operator 
technical report tu dresden 
ozan 
system bv equalities unit 
proceedings th international symposium computer information sciences lecture notes computer science 
springer 
appear 
henry kautz bart selman 
pushing envelope planning propositional logic stochastic search 
proceedings thirteenth national conference artificial intelligence eighth innovative applications artificial intelligence conference pages menlo park 
aaai press mit press 
kobayashi yonezawa 
reasoning actions change linear logic programming 
technical report department information science university tokyo 

generating plans linear logic 
foundations software technology theoretical computer science volume lecture notes computer science pages 
springer verlag 
dale miller 
calculus theory linear logic preliminary results 
lamma mello editors proceedings workshop extensions logic programming number lncs pages 
springer verlag 
pollack joslin paolucci 
flaw selection strategies partial order planning 
journal artificial intelligence research volume pages 

david pym louise pryor david murphy 
note processes plan execution powerdomains plan comparison 
technical report department computer science queen mary westfield college university london 
reiter 
natural actions concurrency continuous time situation calculus 
proceedings international conference principles knowledge representation reasoning pages 
cambridge morgan kaufmann 
sassone nielsen glynn winskel 
models concurrency classification 
theoretical computer science volume pages 

lutz stra burger 
linear logic calculus structures 
phd thesis tu dresden 
tiu 
properties logical system calculus structures 
technical report wv technische universit dresden 
